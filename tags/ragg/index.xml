<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ragg | Tidyverse</title><link>https://www.tidyverse.org/tags/ragg/</link><atom:link href="https://www.tidyverse.org/tags/ragg/index.xml" rel="self" type="application/rss+xml"/><description>ragg</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 12 May 2025 00:00:00 +0000</lastBuildDate><item><title>Fonts in R</title><link>https://www.tidyverse.org/blog/2025/05/fonts-in-r/</link><pubDate>Mon, 12 May 2025 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2025/05/fonts-in-r/</guid><description>&lt;style type='text/css'>
pre {
text-wrap: nowrap;
overflow-x: scroll;
}
figure {
margin-top: 2em;
}
figcaption {
text-align: center;
margin-top: 1em;
}
table {
max-width: 99%
}
&lt;/style>
&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>(An updated version of this blog post will be available at
&lt;a href="https://systemfonts.r-lib.org" target="_blank" rel="noopener">the systemfonts webpage&lt;/a>)&lt;/p>
&lt;p>The purpose of this document is to give you a thorough overview of fonts in R. However, for this to be possible, you&amp;rsquo;ll first need a basic understanding of fonts in general. If you already have a thorough understanding of digital typography you can skip to
&lt;a href="#font-handling-in-r">the next section&lt;/a>.&lt;/p>
&lt;h2 id="digital-typography">Digital typography
&lt;a href="#digital-typography">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many books could be, and have been, written about the subject of typography. This blog post is not meant to be an exhaustive deep dive into all areas of this vast subject. Rather, it is meant to give you just enough understanding of core concepts and terminology to appreciate how it all plays into using fonts in R.&lt;/p>
&lt;h3 id="typeface-or-font">Typeface or font?
&lt;a href="#typeface-or-font">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>There is a good chance that you, like 99% of world, use &amp;ldquo;font&amp;rdquo; as the term describing &amp;ldquo;the look&amp;rdquo; of the letters you type. You may, perhaps, have heard the term &amp;ldquo;typeface&amp;rdquo; as well and thought it synonymous. This is in fact slightly wrong, and a great deal of typography snobbery has been dealt out on that account (much like the distinction between packages and libraries in R). It is a rather inconsequential mix-up for the most part, especially because 99% of the population wouldn&amp;rsquo;t bat an eye if you use them interchangeably. However, the distinction between the two serves as a good starting point to talk about other terms in digital typography as well as the nature of font files, so let&amp;rsquo;s dive in.&lt;/p>
&lt;p>When most people use the word &amp;ldquo;font&amp;rdquo; or &amp;ldquo;font family&amp;rdquo;, what they are actually describing is a typeface. A &lt;strong>typeface&lt;/strong> is a style of lettering that forms a cohesive whole. As an example, consider the well-known &amp;ldquo;Helvetica&amp;rdquo; typeface. This name embraces many different weights (bold, normal, light) as well as slanted (italic) and upright. However, all of these variations are all as much Helvetica as the others - they are all part of the same typeface.&lt;/p>
&lt;p>A &lt;strong>font&lt;/strong> is a subset of a typeface, describing a particular variation of the typeface, i.e. the combination of weight, width, and slant that comes together to describe the specific subset of a typeface that is used. We typically give a specific combination of these features a name, like &amp;ldquo;bold&amp;rdquo; or &amp;ldquo;medium&amp;rdquo; or &amp;ldquo;italic&amp;rdquo;, which we call the &lt;strong>font style&lt;/strong>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. In other words, a font is a particularly style within a typeface.&lt;/p>
&lt;div class="highlight">
&lt;div class="figure" style="text-align: center">
&lt;p>&lt;img src="figs/unnamed-chunk-2-1.png" alt="Different fonts from the Avenir Next typeface" width="700px" />&lt;/p>
&lt;p class="caption">
Different fonts from the Avenir Next typeface
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>In the rest of this document we will use the terms typeface and font with the meaning described above.&lt;/p>
&lt;h3 id="font-files">Font files
&lt;a href="#font-files">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Next, we need to talk about how typefaces are represented for use by computers. Font files record information on how to draw the individual glyphs (characters), but also instructions about how to draw sequences of glyphs like distance adjustments (kerning) and substitution rules (ligatures). Font files typically encode a single font but can encode a full typeface:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>typefaces&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/system_fonts.html'>system_fonts&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>[&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"path"&lt;/span>, &lt;span class='s'>"index"&lt;/span>, &lt;span class='s'>"family"&lt;/span>, &lt;span class='s'>"style"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Full typeface in one file&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>typefaces&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='nv'>typefaces&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>family&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Helvetica"&lt;/span>, &lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; path index family style &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> /System/Library/Fonts/Helvetica.ttc 2 Helvetica Oblique &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> /System/Library/Fonts/Helvetica.ttc 4 Helvetica Light &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> /System/Library/Fonts/Helvetica.ttc 5 Helvetica Light Oblique&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> /System/Library/Fonts/Helvetica.ttc 1 Helvetica Bold &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> /System/Library/Fonts/Helvetica.ttc 3 Helvetica Bold Oblique &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> /System/Library/Fonts/Helvetica.ttc 0 Helvetica Regular&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># One font per font file&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>typefaces&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='nv'>typefaces&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>family&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Arial"&lt;/span>, &lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; path index family style &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> /System/Library/Fonts/Supplemental/Arial.ttf 0 Arial Regular &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> /System/Library/Fonts/Supplemental/Arial Bold.ttf 0 Arial Bold &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> /System/Library/Fonts/Supplemental/Arial Bold Italic.ttf 0 Arial Bold Italic&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> /System/Library/Fonts/Supplemental/Arial Italic.ttf 0 Arial Italic&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Here, each row is a font, with &lt;strong>family&lt;/strong> giving the name of the typeface, and &lt;strong>style&lt;/strong> the font style.&lt;/p>
&lt;p>It took a considerable number of tries before the world managed to nail the digitial representation of fonts, leading to a proliferation of file types. As an R user, there are three formats that are particularly improtant:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>TrueType&lt;/strong> (ttf/ttc). Truetype is the baseline format that all modern formats stand on top of. It was developed by Apple in the &amp;rsquo;80s and became popular due to its great balance between size and quality. Fonts can be encoded, either as scalable paths, or as bitmaps of various sizes, the former generally being preferred as it allows for seamless scaling and small file size at the same time.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>OpenType&lt;/strong> (otf/otc). OpenType was created by Microsoft and Adobe to improve upon TrueType. While TrueType was a great success, the number of glyphs it could contain was limited and so was its support for selecting different features during
&lt;a href="#text-shaping">shaping&lt;/a>. OpenType resolved these issues, so if you want access to advanced typography features you&amp;rsquo;ll need a font in OpenType format.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Web Open Font Format&lt;/strong> (woff/woff2). TrueType and OpenType tend to create large files. Since a large percentage of the text consumed today is delivered over the internet this creates a problem. WOFF resolves this problem by acting as a compression wrapper around TrueType/OpenType to reduce file sizes while also limiting the number of advanced features provided to those relevant to web fonts. The woff2 format is basically identical to woff except it uses the more efficient
&lt;a href="https://en.wikipedia.org/wiki/Brotli" target="_blank" rel="noopener">brotli&lt;/a> compression algorithm. WOFF was designed specifically to be delivered over the internet and support is still a bit limited outside of browsers.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>While we have mainly talked about font files as containers for the shape of glyphs, they also carries a lot of other information needed for rendering text in a way pleasant for reading. Font level information records a lot of stylistic information about typeface/font, statistics on the number of glyphs and how many different mappings between character encodings and glyphs it contains, and overall sizing information such as the maximum descend of the font, the position of an underline relative to the baseline etc. systemfonts provdies a convenient way to access this data from R:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>dplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://pillar.r-lib.org/reference/glimpse.html'>glimpse&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/font_info.html'>font_info&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Helvetica"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Rows: 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Columns: 24&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ path &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> "/System/Library/Fonts/Helvetica.ttc"&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ index &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ family &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> "Helvetica"&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ style &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> "Regular"&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ italic &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> FALSE&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ bold &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> FALSE&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ monospace &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> FALSE&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ weight &lt;span style='color: #555555; font-style: italic;'>&amp;lt;ord&amp;gt;&lt;/span> normal&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ width &lt;span style='color: #555555; font-style: italic;'>&amp;lt;ord&amp;gt;&lt;/span> normal&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ kerning &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> FALSE&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ color &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> FALSE&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ scalable &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> TRUE&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ vertical &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> FALSE&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ n_glyphs &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> 2252&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ n_sizes &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ n_charmaps &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ bbox &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &amp;lt;-11.406250, 17.343750, -5.765625, 13.453125&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ max_ascend &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 9.234375&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ max_descend &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> -2.765625&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ max_advance_width &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 18&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ max_advance_height &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ lineheight &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ underline_pos &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> -1.203125&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ underline_size &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.59375&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Further, for each glyph there is a range of information in addition to its shape:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/glyph_info.html'>glyph_info&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"j"&lt;/span>, family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Helvetica"&lt;/span>, size &lt;span class='o'>=&lt;/span> &lt;span class='m'>30&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 9&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; glyph index width height x_bearing y_bearing x_advance y_advance bbox &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> j 77 6 27 -&lt;span style='color: #BB0000;'>1&lt;/span> 21 7 0 &lt;span style='color: #555555;'>&amp;lt;dbl [4]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>These terms are more easily understood with a diagram:&lt;/p>
&lt;div class="highlight">
&lt;p>&lt;img src="figs/unnamed-chunk-6-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>The &lt;code>x_advance&lt;/code> in particular is important when rendering text because it tells you how far to move to the right before rendering the next glyph (ignoring for a bit the concept of kerning)&lt;/p>
&lt;h3 id="text-shaping">Text shaping
&lt;a href="#text-shaping">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The next important concept to understand is &lt;strong>text shaping&lt;/strong>, which, in the simplest of terms, is to convert a succession of characters into a sequence of glyphs along with their locations. Important here is the distinction between &lt;strong>characters&lt;/strong>, the things you think of as letters, and &lt;strong>glyphs&lt;/strong>, which is what the font will draw. For example, think of the character &amp;ldquo;f&amp;rdquo;, which is often tricky to draw because the &amp;ldquo;hook&amp;rdquo; of the f can interfere with other characters. To solve this problem, many typefaces include &lt;strong>ligatures&lt;/strong>, like &amp;ldquo;ﬁ&amp;rdquo;, which are used for specific pairs of characaters. Ligatures are extremely important for languages like Arabic.&lt;/p>
&lt;p>A few of the challenges of text shaping include kerning, bidirectional text, and font substitution. &lt;strong>Kerning&lt;/strong> is the adjustment of distance between specific pairs of characters. For example, you can put &amp;ldquo;VM&amp;rdquo; a little closer together but &amp;ldquo;OO&amp;rdquo; needs to be a little further apart. Kerning is an integral part of all modern text rendering and you will almost solemnly notice it when it is absent (or worse,
&lt;a href="https://www.fastcompany.com/91324550/kerning-on-pope-francis-tomb-is-a-travesty" target="_blank" rel="noopener">wrongly applied&lt;/a>).&lt;/p>
&lt;p>Not every language writes text in the same direction, but regardless of your native script, you are likely to use arabic numerals which are always written left-to-right. This gives rise to the challenge of &lt;strong>bidirectional&lt;/strong> (or bidi) text, which mixes text flowing in different directions. This imposes a whole new range of challenges!&lt;/p>
&lt;p>Finally, you might request a character that a font doesn&amp;rsquo;t contain. One way to deal with this is to render a glyph representing a missing glyph, usually an empty box or a question mark. But it&amp;rsquo;s typically more useful to use the correct glyph from a different font. This is called &lt;strong>font fallback&lt;/strong> and happens all the time for emojis, but can also happen when you suddenly change script without bothering to pick a new font. Font fallback is an imprecise science, typically relying on an operating system font that has a very large number of characters, but might look very different from your existing font.&lt;/p>
&lt;p>Once you have determined the order and location of glyphs, you are still not done. Text often needs to be wrapped to fit into a specific width, it may need a specific justification, perhaps, indentation or tracking must be applied, etc. Thankfully, all of this is generally a matter of (often gnarly) math that you just have to get right. That is, all except text wrapping which should happen at the right boundaries, and may need to break up a word and inserting a hyphen etc.&lt;/p>
&lt;p>Like I said, the pit of despair is bottomless&amp;hellip;&lt;/p>
&lt;h2 id="font-handling-in-r">Font handling in R
&lt;a href="#font-handling-in-r">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>You hopefully arrive at this section with an appreciation of the horrors that goes into rendering text. If not, maybe this
&lt;a href="https://faultlore.com/blah/text-hates-you/" target="_blank" rel="noopener">blog post&lt;/a> will convince you.&lt;/p>
&lt;p>Are you still here? Good.&lt;/p>
&lt;p>Now that you understand the basics of what goes into handling fonts and text, we can now discuss the details of fonts in R specifically.&lt;/p>
&lt;h3 id="fonts-and-text-from-a-user-perspective">Fonts and text from a user perspective
&lt;a href="#fonts-and-text-from-a-user-perspective">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The users perception of working with fonts in R is largely shaped by plots. This means using either base or grid graphics or one of the packages that have been build on top of it, like
&lt;a href="https://ggplot2.tidyverse.org" target="_blank" rel="noopener">ggplot2&lt;/a>. While the choice of tool will affect &lt;em>where&lt;/em> you specify the font to use, they generally agree on how to specify it.&lt;/p>
&lt;table style="width:99%;">
&lt;colgroup>
&lt;col style="width: 37%" />
&lt;col style="width: 5%" />
&lt;col style="width: 18%" />
&lt;col style="width: 37%" />
&lt;/colgroup>
&lt;thead>
&lt;tr>
&lt;th>Graphic system&lt;/th>
&lt;th>Argument&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;em>Typeface&lt;/em>&lt;/td>
&lt;td>&lt;em>Font&lt;/em>&lt;/td>
&lt;td>&lt;em>Size&lt;/em>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;p>&lt;strong>Base&lt;/strong>&lt;/p>
&lt;p>&lt;em>Arguments are passed to &lt;code>par()&lt;/code> to set globally or directly to the call that renders text (e.g. &lt;code>text()&lt;/code>)&lt;/em>&lt;/p>&lt;/td>
&lt;td>&lt;code>family&lt;/code>&lt;/td>
&lt;td>&lt;code>font&lt;/code>&lt;/td>
&lt;td>&lt;code>cra&lt;/code> (pixels) or &lt;code>cin&lt;/code> (inches) multiplied by &lt;code>cex&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;p>&lt;strong>Grid&lt;/strong>&lt;/p>
&lt;p>Arguments are passed to the &lt;code>gp&lt;/code> argument of relevant grobs using the &lt;code>gpar()&lt;/code> constructor&lt;/p>&lt;/td>
&lt;td>&lt;code>fontfamily&lt;/code>&lt;/td>
&lt;td>&lt;code>fontface&lt;/code>&lt;/td>
&lt;td>&lt;code>fontsize&lt;/code> (points) multiplied by &lt;code>cex&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;p>&lt;strong>ggplot2&lt;/strong>&lt;/p>
&lt;p>Arguments are set in &lt;code>element_text()&lt;/code> to alter theme fonts or directly in the geom call to alter geom fonts&lt;/p>&lt;/td>
&lt;td>&lt;code>family&lt;/code>&lt;/td>
&lt;td>&lt;code>face&lt;/code> (in &lt;code>element_text()&lt;/code>) or &lt;code>fontface&lt;/code> (in geoms)&lt;/td>
&lt;td>&lt;code>size&lt;/code> (points when used in &lt;code>element_text()&lt;/code>, depends on the value of &lt;code>size.unit&lt;/code> argument when used in geom)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>From the table it is clear that in R &lt;code>fontfamily&lt;/code>/&lt;code>family&lt;/code> is used to describe the typeface and &lt;code>font&lt;/code>/&lt;code>fontface&lt;/code>/&lt;code>face&lt;/code> is used to select a font from the typeface. Size settings is just a plain mess.&lt;/p>
&lt;p>The major limitation in &lt;code>fontface&lt;/code> (and friends) is that it takes a number, not a string, and you can only select from four options: &lt;code>1&lt;/code>: plain, &lt;code>2&lt;/code>: bold, &lt;code>3&lt;/code>: italic, and &lt;code>4&lt;/code>: bold-italic. This means, for example, that there&amp;rsquo;s no way to select Futura Condensed Extra Bold. Another limitation is that it&amp;rsquo;s not possible to specify any font variations such as using tabular numbers or stylistic ligatures.&lt;/p>
&lt;h3 id="fonts-and-text-from-a-graphics-device-perspective">Fonts and text from a graphics device perspective
&lt;a href="#fonts-and-text-from-a-graphics-device-perspective">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>In R, a graphics device is the part responsible for doing the rendering you request and put it on your screen or in a file. When you call
&lt;a href="https://rdrr.io/r/grDevices/png.html" target="_blank" rel="noopener">&lt;code>png()&lt;/code>&lt;/a> or
&lt;a href="https://ragg.r-lib.org/reference/agg_png.html" target="_blank" rel="noopener">&lt;code>ragg::agg_png()&lt;/code>&lt;/a> you open up a graphics device that will receive all the plotting instructions from R. Both graphics devices will ultimately produce the same file type (PNG), but how they choose to handle and respond to the plotting instructions may differ (greatly). Nowhere is this difference more true than when it comes to text rendering.&lt;/p>
&lt;p>After a user has made a call that renders some text, it is funneled through the graphic system (base or grid), handed off to the graphics engine, which ultimately asks the graphics device to render the text. From the perspective of the graphics device it is much the same information that the user provided which are presented to it. The
&lt;a href="https://rdrr.io/r/graphics/text.html" target="_blank" rel="noopener">&lt;code>text()&lt;/code>&lt;/a> method of the device are given an array of characters, the typeface, the size in points, and an integer denoting if the style is regular, bold, italic, or bold-italic.&lt;/p>
&lt;figure>
&lt;img src="text_call_flow.svg" data-fig-alt="A diagram showing the flow of text rendering instructions from ggplot2, grid, the graphics engine, and down to the graphics device. Very little changes in the available information about the font during the flow" alt="Flow of font information through the R rendering stack" />
&lt;figcaption aria-hidden="true">Flow of font information through the R rendering stack&lt;/figcaption>
&lt;/figure>
&lt;p>This means that it is up to the graphics device to find the approprate font file (using the provided typeface and font style) and shape the text with all that that entails. This is a lot of work, which is why text is handled so inconsistently between graphics devices. Issues can range from not being able to find fonts installed on the computer, to not providing font fallback mechanisms, or even handling right-to-left text. It may also be that certain font file formats are not well supported so that e.g. color emojis are not rendered correctly.&lt;/p>
&lt;p>There have been a number of efforts to resolve these problems over the years:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>extrafont&lt;/strong>: Developed by Winston Chang,
&lt;a href="https://github.com/wch/extrafont" target="_blank" rel="noopener">extrafont&lt;/a> sought to mainly improve the situation for the
&lt;a href="https://rdrr.io/r/grDevices/pdf.html" target="_blank" rel="noopener">&lt;code>pdf()&lt;/code>&lt;/a> device which generally only had access to the postscript fonts that comes with R. The package allows the
&lt;a href="https://rdrr.io/r/grDevices/pdf.html" target="_blank" rel="noopener">&lt;code>pdf()&lt;/code>&lt;/a> device to get access to TrueType fonts installed on the computer, as well as provide means for embedding the font into the PDF so that it can be opened on systems where the font is not installed. (It also provides the capabilities to the Windows
&lt;a href="https://rdrr.io/r/grDevices/png.html" target="_blank" rel="noopener">&lt;code>png()&lt;/code>&lt;/a> device).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>sysfonts&lt;/strong> and &lt;strong>showtext&lt;/strong>. These packages are developed by Yixuan Qiu and provide support for system fonts to all graphics devices, by hijacking the
&lt;a href="https://rdrr.io/r/graphics/text.html" target="_blank" rel="noopener">&lt;code>text()&lt;/code>&lt;/a> method of the graphics device to treat text as polygons or raster images. This guarantees your plots will look the same on every device, but it doesn&amp;rsquo;t do advanced text shaping, so there&amp;rsquo;s no support for ligatures or font substitution. Additionally, it produces large files with inaccessible text when used to produce pdf and svg outputs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>systemfonts&lt;/strong> and &lt;strong>textshaping&lt;/strong>. These packages are developed by me to provide a soup-to-nuts solution to text rendering for graphics devices.
&lt;a href="https://systemfonts.r-lib.org" target="_blank" rel="noopener">systemfonts&lt;/a> provides access to fonts installed on the system along with font fallback mechanisms, registration of non-system fonts, reading of font files etc.
&lt;a href="https://github.com/r-lib/textshaping" target="_blank" rel="noopener">textshaping&lt;/a> builds on top of systemfonts and provides a fully modern engine for shaping text. The functionality is exposed both at the R level and at the C level, so that graphics devices can directly access to font lookup and shaping.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>We will fosus on systemfonts, because it&amp;rsquo;s designed to give R a modern text rendering stack. That&amp;rsquo;s unfortunately impossible without coordination with the graphics device, which means that to use all these features you need a supported graphics device. There are currently two options:&lt;/p>
&lt;ul>
&lt;li>The
&lt;a href="https://ragg.r-lib.org" target="_blank" rel="noopener">ragg&lt;/a> package provides graphics devices for rendering raster graphics in a variety of formats (PNG, JPEG, TIFF) and uses systemfonts and textshaping extensively.&lt;/li>
&lt;li>The
&lt;a href="https://svglite.r-lib.org" target="_blank" rel="noopener">svglite&lt;/a> package provides a graphic device for rendering vector graphics to SVG using systemfonts and textshaping for text.&lt;/li>
&lt;/ul>
&lt;p>You might notice there&amp;rsquo;s currently a big hole in this workflow: PDFs. This is something we plan to work on in the future.&lt;/p>
&lt;h2 id="a-systemfonts-based-workflow">A systemfonts based workflow
&lt;a href="#a-systemfonts-based-workflow">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>With all that said, how do you actually use systemfonts to use custom fonts in your plots? First, you&amp;rsquo;ll need to use ragg or svglite.&lt;/p>
&lt;h3 id="using-ragg">Using ragg
&lt;a href="#using-ragg">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>While there is no way to unilaterally make
&lt;a href="https://ragg.r-lib.org/reference/agg_png.html" target="_blank" rel="noopener">&lt;code>ragg::agg_png()&lt;/code>&lt;/a> the default everywhere, it&amp;rsquo;s possible to get close:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Positron: recent versions automatically use ragg for the plot pane if it&amp;rsquo;s installed.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>RStudio IDE: set &amp;ldquo;AGG&amp;rdquo; as the backend under Global Options &amp;gt; General &amp;gt; Graphics.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://ggplot2.tidyverse.org/reference/ggsave.html" target="_blank" rel="noopener">&lt;code>ggplot2::ggsave()&lt;/code>&lt;/a>: ragg will be automatically used for raster output if installed.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>R Markdown and Quarto: you need to set the &lt;code>dev&lt;/code> option to &lt;code>&amp;quot;ragg_png&amp;quot;&lt;/code>. You can either do this with code:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1">#| include: false&lt;/span>
&lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">opts_chunk&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;ragg_png&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or in Quarto, you can set it in the yaml metadata:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">---&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;My Document&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">format&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>html&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">knitr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">opts_chunk&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">dev&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;ragg_png&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>---&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>If you want to use a font installed on your computer, you&amp;rsquo;re done!&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.text.html'>grid.text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='s'>"FUTURA 🎉"&lt;/span>,&lt;/span>
&lt;span> gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fontfamily &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Futura"&lt;/span>, fontface &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>, fontsize &lt;span class='o'>=&lt;/span> &lt;span class='m'>30&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-7-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Or, if using ggplot2&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/na.fail.html'>na.omit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_point.html'>geom_point&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>bill_len&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>body_mass&lt;/span>, colour &lt;span class='o'>=&lt;/span> &lt;span class='nv'>species&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Bill Length"&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Body Mass"&lt;/span>, colour &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Species"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggtheme.html'>theme_minimal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>base_family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Futura"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-8-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>If the results don&amp;rsquo;t look as you expect, you can use various systemfonts helpers to diagnose the problem:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/match_fonts.html'>match_fonts&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Futura"&lt;/span>, weight &lt;span class='o'>=&lt;/span> &lt;span class='s'>"bold"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; path index features &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> /System/Library/Fonts/Supplemental/Futura.ttc 2 &lt;span style='color: #555555;'>&amp;lt;font_ftr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/font_fallback.html'>font_fallback&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"🎉"&lt;/span>, family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Futura"&lt;/span>, weight &lt;span class='o'>=&lt;/span> &lt;span class='s'>"bold"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; path index&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 /System/Library/Fonts/Apple Color Emoji.ttc 0&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you want to see all the fonts that are available for use, you can use
&lt;a href="https://systemfonts.r-lib.org/reference/system_fonts.html" target="_blank" rel="noopener">&lt;code>systemfonts::system_fonts()&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/system_fonts.html'>system_fonts&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 570 × 9&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; path index name family style weight width italic monospace&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;ord&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;ord&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> /System/Library/Fonts/Supplemental/Rockwell… 2 Rock… Rockw… Bold bold norm… FALSE FALSE &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> /System/Library/Fonts/Noteworthy.ttc 0 Note… Notew… Light normal norm… FALSE FALSE &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> /System/Library/Fonts/Supplemental/Devanaga… 1 Deva… Devan… Bold bold norm… FALSE FALSE &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> /System/Library/Fonts/Supplemental/Kannada … 0 Kann… Kanna… Regu… normal norm… FALSE FALSE &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> /System/Library/Fonts/Supplemental/Verdana … 0 Verd… Verda… Bold bold norm… FALSE FALSE &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> /System/Library/Fonts/ArialHB.ttc 8 Aria… Arial… Light light norm… FALSE FALSE &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> /System/Library/Fonts/AppleSDGothicNeo.ttc 10 Appl… Apple… Thin thin norm… FALSE FALSE &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> /System/Library/Fonts/Supplemental/DecoType… 0 Deco… DecoT… Regu… normal norm… FALSE FALSE &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> /System/Library/Fonts/Supplemental/Trebuche… 0 Treb… Trebu… Ital… normal norm… TRUE FALSE &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> /System/Library/Fonts/Supplemental/Khmer MN… 0 Khme… Khmer… Regu… normal norm… FALSE FALSE &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 560 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="extra-font-styles">Extra font styles
&lt;a href="#extra-font-styles">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>As we discussed above, the R interface only allows you to select between four styles: plain, italic, bold, and bold-italic. If you want to use a thin font, you have no way of communicating this wish to the device. To overcome this, systemfonts provides &lt;code>register_variant()&lt;/code> which allows you to register a font with a new typeface name. For example, to use the thin font from the Avenir Next typeface you can register it as follows:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/register_variant.html'>register_variant&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Avenir Thin"&lt;/span>,&lt;/span>
&lt;span> family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Avenir Next"&lt;/span>,&lt;/span>
&lt;span> weight &lt;span class='o'>=&lt;/span> &lt;span class='s'>"thin"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now you can use Avenir Thin where you would otherwise specify the typeface:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.text.html'>grid.text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='s'>"Thin weight is soo classy"&lt;/span>,&lt;/span>
&lt;span> gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fontfamily &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Avenir Thin"&lt;/span>, fontsize &lt;span class='o'>=&lt;/span> &lt;span class='m'>30&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-13-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>&lt;code>register_variant()&lt;/code> also allows you to turn on font features otherwise hidden away:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/register_variant.html'>register_variant&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Avenir Small Caps"&lt;/span>,&lt;/span>
&lt;span> family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Avenir Next"&lt;/span>,&lt;/span>
&lt;span> features &lt;span class='o'>=&lt;/span> &lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/font_feature.html'>font_feature&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> letters &lt;span class='o'>=&lt;/span> &lt;span class='s'>"small_caps"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.text.html'>grid.text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='s'>"All caps — Small caps"&lt;/span>,&lt;/span>
&lt;span> gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fontfamily &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Avenir Small Caps"&lt;/span>, fontsize &lt;span class='o'>=&lt;/span> &lt;span class='m'>30&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-14-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;h3 id="fonts-from-other-places">Fonts from other places
&lt;a href="#fonts-from-other-places">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Historically, systemfonts primary role was to access the font installed on your computer, the &lt;strong>system fonts&lt;/strong>. But what if you&amp;rsquo;re using a computer where you don&amp;rsquo;t have the rights to install new fonts, or you don&amp;rsquo;t want the hassle of installing a font just to use it for a single plot? That&amp;rsquo;s the problem solved by &lt;code>systemfonts::add_font()&lt;/code> which makes it easy to use a font based on a path. But in many cases you don&amp;rsquo;t even need that as systemfont now scans &lt;code>./fonts&lt;/code> and &lt;code>~/fonts&lt;/code> and adds any font files it find. This means that you can put personal fonts in a fonts folder in your home directory, and project fonts in a fonts directory at the root of the project. This is a great way to ensure that specific fonts are available when you deploy some code to a server.&lt;/p>
&lt;p>And you don&amp;rsquo;t even need to leave R to populate these folders.
&lt;a href="https://systemfonts.r-lib.org/reference/web-fonts.html" target="_blank" rel="noopener">&lt;code>systemfonts::get_from_google_fonts()&lt;/code>&lt;/a> will download and install a google font in &lt;code>~/fonts&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/web-fonts.html'>get_from_google_fonts&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Barrio"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.text.html'>grid.text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='s'>"A new font a day keeps Tufte away"&lt;/span>,&lt;/span>
&lt;span> gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fontfamily &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Barrio"&lt;/span>, fontsize &lt;span class='o'>=&lt;/span> &lt;span class='m'>30&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-15-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>And if you want to make sure this code works for anyone using your code (regardless of whether or not they already have the font installed), you can use
&lt;a href="https://systemfonts.r-lib.org/reference/require_font.html" target="_blank" rel="noopener">&lt;code>systemfonts::require_font()&lt;/code>&lt;/a>. If the font isn&amp;rsquo;t already installed, this function download it from one of the repositories it knows about. If it can&amp;rsquo;t find it it will either throw an error (the default) or remap the name to another font so that plotting will still succeed.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/require_font.html'>require_font&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Rubik Distressed"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Trying Google Fonts... Found! Downloading font to /var/folders/l4/tvfrd0ps4dqdr2z7kvnl9xh40000gn/T//Rtmp2qw4bE&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.text.html'>grid.text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='s'>"There are no bad fonts\nonly bad text"&lt;/span>,&lt;/span>
&lt;span> gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fontfamily &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Rubik Distressed"&lt;/span>, fontsize &lt;span class='o'>=&lt;/span> &lt;span class='m'>30&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-16-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>By default, &lt;code>require_font()&lt;/code> places new fonts in a temporary folder so it doesn&amp;rsquo;t pollute your carefully curated collection of fonts.&lt;/p>
&lt;h3 id="font-embedding-in-svg">Font embedding in SVG
&lt;a href="#font-embedding-in-svg">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Fonts work a little differently in vector formats like SVG. These formats include the raw text and only render the font when you open the file. This makes for small, accessible files with crisp text at every level of zoom. But it comes with a price: since the text is rendered when it&amp;rsquo;s opened, it relies on the font in use being available on the viewer&amp;rsquo;s computer. This obviously puts you at the mercy of their font selection, so if you want consistent outputs you&amp;rsquo;ll need to &lt;strong>embed&lt;/strong> the font.&lt;/p>
&lt;p>In SVG, you can embed fonts using an &lt;code>@import&lt;/code> statement in the stylesheet, and can point to a web resource so the SVG doesn&amp;rsquo;t need to contain the entire font. systemfonts provides facilities to generate URLs for import statements and can provide them in a variety of formats:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/fonts_as_import.html'>fonts_as_import&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Barrio"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] "https://fonts.bunny.net/css2?family=Barrio&amp;amp;display=swap"&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/fonts_as_import.html'>fonts_as_import&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Rubik Distressed"&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"link"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] "&amp;lt;link rel=\"stylesheet\" href=\"https://fonts.bunny.net/css2?family=Rubik+Distressed&amp;amp;display=swap\"/&amp;gt;"&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Further, if the font is not available from an online repository, it can embed the font data directly into the URL:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/substr.html'>substr&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>systemfonts&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://systemfonts.r-lib.org/reference/fonts_as_import.html'>fonts_as_import&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Chalkduster"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>200&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] "data:text/css,@font-face%20%7B%0A%20%20font-family:%20%22Chalkduster%22;%0A%20%20src:%20url(data:font/ttf;charset=utf-8;base64,AAEAAAAMAIAAAwC4T1MvMmk8+wsAAAFIAAAAYGNtYXBJhgfNAAAEOAAACspnbHlmLDPYGwAAf"&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>svglite uses this feature to allow seamless font embedding with the &lt;code>web_fonts&lt;/code> argument. It can take a URL as returned by &lt;code>fonts_as_import()&lt;/code> or just the name of the typeface and the URL will automatically be resolved. Look at line 6 in the SVG generated below&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>svg&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>svglite&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://svglite.r-lib.org/reference/svgstring.html'>svgstring&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>web_fonts &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Barrio"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.text.html'>grid.text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Example"&lt;/span>, gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fontfamily &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Barrio"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/cairo.html'>svg&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;?xml version='1.0' encoding='UTF-8' ?&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='720.00pt' height='576.00pt' viewBox='0 0 720.00 576.00'&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;g class='svglite'&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;defs&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;style type='text/css'&amp;gt;&amp;lt;![CDATA[&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; @import url('https://fonts.bunny.net/css2?family=Barrio&amp;amp;display=swap');&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle &amp;#123;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; fill: none;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; stroke: #000000;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; stroke-linecap: round;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; stroke-linejoin: round;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; stroke-miterlimit: 10.00;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .svglite text &amp;#123;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; white-space: pre;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .svglite g.glyphgroup path &amp;#123;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; fill: inherit;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; stroke: none;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ]]&amp;gt;&amp;lt;/style&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;/defs&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;rect width='100%' height='100%' style='stroke: none; fill: #FFFFFF;'/&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;defs&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;clipPath id='cpMC4wMHw3MjAuMDB8MC4wMHw1NzYuMDA='&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;rect x='0.00' y='0.00' width='720.00' height='576.00' /&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;/clipPath&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;/defs&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;g clip-path='url(#cpMC4wMHw3MjAuMDB8MC4wMHw1NzYuMDA=)'&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;text x='360.00' y='292.32' text-anchor='middle' style='font-size: 12.00px; font-family: "Barrio";' textLength='48.12px' lengthAdjust='spacingAndGlyphs'&amp;gt;Example&amp;lt;/text&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;/g&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;/g&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;/svg&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="want-more">Want more?
&lt;a href="#want-more">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This document has mainly focused on how to use the fonts you desire from within R. R has other limitations when it comes to text rendering specifically how to render text that consists of a mix of fonts. This has been solved by
&lt;a href="https://marquee.r-lib.org" target="_blank" rel="noopener">marquee&lt;/a> and the curious soul can continue there in order to up their skills in rendering text with R&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>grid&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.draw.html'>grid.draw&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>marquee&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://marquee.r-lib.org/reference/marquee_grob.html'>marquee_grob&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='s'>"_This_ **is** the &amp;#123;.red end&amp;#125;"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>marquee&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://marquee.r-lib.org/reference/classic_style.html'>classic_style&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>base_size &lt;span class='o'>=&lt;/span> &lt;span class='m'>30&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-20-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Be aware that the style name is at the discretion of the developer of the typeface. It is very common to see discrepancies between the style name and e.g. the weight reported by the font (e.g. Avenir Next Ultra Light is a &lt;em>thin&lt;/em> weight font). &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>ragg, svglite, and the new graphics features</title><link>https://www.tidyverse.org/blog/2022/02/new-graphic-features/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/02/new-graphic-features/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>The release of
&lt;a href="https://ragg.r-lib.org" target="_blank" rel="noopener">ragg 1.2&lt;/a> and
&lt;a href="https://svglite.r-lib.org" target="_blank" rel="noopener">svglite 2.1&lt;/a> brought support for some exciting new graphics engine features, including gradients and patterns, which were
&lt;a href="https://developer.r-project.org/Blog/public/2020/07/15/new-features-in-the-r-graphics-engine/" target="_blank" rel="noopener">added in R 4.1&lt;/a> by Paul Murrell from R Core. This post will dive into these new features, as well as discuss what the future might hold for the R graphics engine.&lt;/p>
&lt;p>If you want to follow along on your own computer, you can install the latest versions of ragg and svglite from CRAN&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ragg"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"svglite"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This post will rarely make any specific call-outs to ragg or svglite, as these are simply the packages that facilitate what is now possible with R graphics.&lt;/p>
&lt;h2 id="what-is-the-graphics-engine">What is the graphics engine?
&lt;a href="#what-is-the-graphics-engine">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>You might wonder what is meant by the &lt;em>R graphics engine&lt;/em>. It&amp;rsquo;s pretty deep in the R graphics stack, so as a user, you are unlikely to ever engage with it directly. But, since I somehow caught your attention, we might as well indulge in the finer points of the graphics implementation.&lt;/p>
&lt;p>While you may mainly be familiar with ggplot2 and perhaps a variety of graphics devices (e.g. 
&lt;a href="https://rdrr.io/r/grDevices/pdf.html" target="_blank" rel="noopener">&lt;code>pdf()&lt;/code>&lt;/a> or
&lt;a href="https://rdrr.io/r/grDevices/png.html" target="_blank" rel="noopener">&lt;code>png()&lt;/code>&lt;/a>), they sit at opposite ends of a fairly elaborate graphics pipeline. ggplot2 is a high(er) level plotting package that allows you to express your data-visualization intent through a structured grammar. Graphics devices such as ragg and svglite are low-level packages that translate simple graphics instructions into a given file format. In between these two poles we have a two additional abstractions that helps translate between the extremes. In very broad terms, the R graphic stack looks like this:&lt;/p>
&lt;p>&lt;img src="pipeline.png" alt="An overview of the different steps in the R graphics pipeline. A graphics package is build on top of a graphic system. All graphic systems calls into the same shared graphics engine which then relay graphic instructions to the active graphic device." title="graphics pipeline">&lt;/p>
&lt;h3 id="graphic-systems">Graphic systems
&lt;a href="#graphic-systems">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>R currently sports two different systems, one colloquially known as &lt;em>base&lt;/em> graphics (implemented in the graphics package), and one called &lt;em>grid&lt;/em> graphics (implemented in the grid package). If you call
&lt;a href="https://rdrr.io/r/graphics/plot.default.html" target="_blank" rel="noopener">&lt;code>plot()&lt;/code>&lt;/a> you are most likely to end up using the base graphics system, while grid is used as the basis for e.g. ggplot2. The two systems are largely silos, though effort has been made to allow users to embed base graphics into grid graphics. In RStudio we are mainly invested in the grid graphics system since it powers ggplot2, but by and large, this is all an implementation detail that the user shouldn&amp;rsquo;t care too much about. There might come other graphic systems in the future, and other ways of drawing things on screen or to files also exist outside of the R graphics pipeline (e.g. rgl which allows you to create 3D graphics using an OpenGL/WebGL interface).&lt;/p>
&lt;h3 id="the-graphics-engine">The graphics engine
&lt;a href="#the-graphics-engine">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>What unites base and grid graphics and sets them apart from e.g. rgl is that they both call into the same low-level C API provided by R, the &lt;strong>graphics engine&lt;/strong>. The graphics engine is responsible for communicating with the graphics devices while also providing selected utility functionality common for both base and grid graphics. It is because of this abstraction that creating graphics in R is largely decoupled from how it is outputted, be it on screen, in a file, or directly to a printer.&lt;/p>
&lt;p>While it sounds nice and neat when it is all laid out like this, the current structure and division has grown out over many years, and the boundaries between the graphic systems, the graphics engine, and the graphic devices are blurry. Still, the design is much more mature than what we see in other languages, and as graphics/data-viz developers in R we are pretty spoiled compared to our peers in other languages &amp;mdash; perhaps without really knowing it.&lt;/p>
&lt;h2 id="a-fragmented-future">A fragmented future
&lt;a href="#a-fragmented-future">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>With the division of responsibility described above, there are many points in the pipeline that may impose limitations in functionality. The graphic system might not provide the higher-level API to use functionality in the graphics engine, or a graphic device might not provide support for instructions coming in from the graphics engine. While this has mainly been a hypothetical situation prior to R 4.1, it is now the new reality. The new features in the graphics engine were implemented along with high-level support in grid, and low-level support in the pdf device along with the cairo-based devices. This leaves base plot in the dark, and also excludes a range of built-in devices, including the default devices on Windows and macOS. At this point, where high-level support from e.g. ggplot2 is still not present, it might not be a big problem, as you will probably use these features quite deliberately and know their limitations in support. In the future, however, this could lead to surprises.&lt;/p>
&lt;p>As users, this fragmentation is most apparent in the choice of graphic device. After all, you don&amp;rsquo;t expect the graphic system to be capable of something outside of its API, simply because new features were announced for the graphics device. However, if a graphic device lacks support it will simply not use the new features, and you may end up surprised at what it renders.&lt;/p>
&lt;p>When it comes to graphic systems, you can expect that grid will be the first (perhaps only) system that ends up supporting new features in the graphics engine. Part of the reason for that is that the grid API is more powerful in general, and, as new and more complex graphic powers are exposed, it can be easiest to make them fit into the most expressive API. This is definitely the case for the latest batch of new features, but I also expect it to be the case going forward. Just because a functionality is exposed in grid, doesn&amp;rsquo;t mean that it can easily be handled in e.g. ggplot2. I&amp;rsquo;ll address what the new features may mean for the future of ggplot2 at the end of the post.&lt;/p>
&lt;p>For graphic &lt;em>devices&lt;/em> the water is more muddled. Not all devices are under active development, and such devices are unlikely to add support for new features. Further, it may be that a graphics device writes to a format, or uses a library that does not support a new feature provided by the graphics engine. The bottom line is that we can expect an increased fragmentation of the graphics devices in R in terms of which will be up to spec with the latest graphics engine features. It appears that the cairo-based devices along with the pdf device from grDevices can be expected to stay current. On our end, we will do our best to make sure that our graphic-device packages (currently ragg and svglite) will stay on top of any new additions to the graphics engine.&lt;/p>
&lt;h2 id="the-new-features">The new features
&lt;a href="#the-new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>OK, so we&amp;rsquo;ve talked a lot about some new features without ever going into detail about what they are. If you&amp;rsquo;ve never felt constrained by the capabilities of the graphics in R, you may be forgiven for thinking that this is all a big fuss over nothing. You may be right, but new capabilities will often allow the ecosystem to evolve in new and unexpected ways to the benefit of all.&lt;/p>
&lt;h3 id="gradients">Gradients
&lt;a href="#gradients">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>While gradients have been a part of R graphics for a while, they have always relied on some hack - most often cutting the line or polygon in smaller bits and coloring these with color sampled from a gradient. However, now gradients are supported at the device level, meaning that the pixel color is calculated based on a gradient function. This means that the gradient is pixel-perfect at any resolution, and if you are writing to vector format (e.g. svg), you can reduce the file size by not having to write the coordinates for a chopped-up polygon to support the gradient. For now, the functionality is limited to fills. So, if you want to draw a gradient line, you still have to cut it up into small segments.&lt;/p>
&lt;p>Gradients can be created with the
&lt;a href="https://rdrr.io/r/grid/patterns.html" target="_blank" rel="noopener">&lt;code>linearGradient()&lt;/code>&lt;/a> and
&lt;a href="https://rdrr.io/r/grid/patterns.html" target="_blank" rel="noopener">&lt;code>radialGradient()&lt;/code>&lt;/a> which can be assigned to the fill of a grob:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>grid&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>grid.circle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/patterns.html'>linearGradient&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"firebrick"&lt;/span>, &lt;span class='s'>"steelblue"&lt;/span>, &lt;span class='s'>"forestgreen"&lt;/span>&lt;span class='o'>)&lt;/span>,
stops &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>0.7&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>,
col &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NA&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-3-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>grid.circle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/patterns.html'>radialGradient&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"white"&lt;/span>, &lt;span class='s'>"steelblue"&lt;/span>&lt;span class='o'>)&lt;/span>,
cx1 &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.8&lt;/span>,
cy1 &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.8&lt;/span>
&lt;span class='o'>)&lt;/span>,
col &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NA&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-4-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>At the basic level, both of the constructors takes a vector of colors. Optionally, you can provide a vector of stops that define where along the span of the gradient each color is placed. Each gradient type also lets you specify where in the graphic the gradient runs between. For a linear gradient, you provide the x and y position of the start and end of the gradient. For a radial gradient, you provide the center and radius of the start and end circle. Lastly, you can also tell it how it should behave outside of the given range using the &lt;code>extend&lt;/code> argument:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>grid.circle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/patterns.html'>linearGradient&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"firebrick"&lt;/span>, &lt;span class='s'>"steelblue"&lt;/span>&lt;span class='o'>)&lt;/span>,
x1 &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, y1 &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, x2 &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.5&lt;/span>, y2 &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>,
extend &lt;span class='o'>=&lt;/span> &lt;span class='s'>"repeat"&lt;/span>
&lt;span class='o'>)&lt;/span>,
col &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NA&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-5-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>grid.circle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/patterns.html'>linearGradient&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"firebrick"&lt;/span>, &lt;span class='s'>"steelblue"&lt;/span>&lt;span class='o'>)&lt;/span>,
x1 &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, y1 &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, x2 &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.5&lt;/span>, y2 &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>,
extend &lt;span class='o'>=&lt;/span> &lt;span class='s'>"pad"&lt;/span>
&lt;span class='o'>)&lt;/span>,
col &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NA&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-6-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>One thing to note is that the extent of the gradient is given relative to the bounding box of the grob being drawn. We could move the circle above around and the gradient would follow along with it.&lt;/p>
&lt;h3 id="patterns">Patterns
&lt;a href="#patterns">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Like gradients, patterns are a new type of fill made possible in grid through the new features in the graphic engine. Patterns are crazy powerful in that they can be &lt;em>any&lt;/em> grob you can imagine. The grob itself can consist of other grobs and these grobs could have patterned fill as well (or gradient fills for that matter).&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gradient_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.rect.html'>rectGrob&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
width &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.1&lt;/span>,
height &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.1&lt;/span>,
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/patterns.html'>linearGradient&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"firebrick"&lt;/span>, &lt;span class='s'>"steelblue"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.draw.html'>grid.draw&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>gradient_rec&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-7-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>grid.circle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/patterns.html'>pattern&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>gradient_rec&lt;/span>, width &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.15&lt;/span>, height &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.15&lt;/span>, extend &lt;span class='o'>=&lt;/span> &lt;span class='s'>"reflect"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-8-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Understanding the sizing of the grob used for the pattern can take some getting used to. Basically, the pattern is drawn relative to the grob. The &lt;code>width&lt;/code> and &lt;code>height&lt;/code> arguments in the
&lt;a href="https://rdrr.io/r/grid/patterns.html" target="_blank" rel="noopener">&lt;code>pattern()&lt;/code>&lt;/a> call is then used to define a region of the grob that will be used as a pattern. Thus, you cannot scale the pattern grob using the &lt;code>width&lt;/code> and &lt;code>height&lt;/code> arguments in
&lt;a href="https://rdrr.io/r/grid/patterns.html" target="_blank" rel="noopener">&lt;code>pattern()&lt;/code>&lt;/a>. This can be seen below&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>grid.circle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/patterns.html'>pattern&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>gradient_rec&lt;/span>, width &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.35&lt;/span>, height &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.35&lt;/span>, extend &lt;span class='o'>=&lt;/span> &lt;span class='s'>"reflect"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-9-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>As we see, we are just defining a larger (empty) region from our rect grob, effectively adding more space between each rectangle, rather than creating larger rectangles. This also means that the pattern scales with the grob:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>pat&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/patterns.html'>pattern&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>gradient_rec&lt;/span>,
width &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.15&lt;/span>,
height &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.15&lt;/span>,
extend &lt;span class='o'>=&lt;/span> &lt;span class='s'>"reflect"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>grid.circle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.25&lt;/span>, r &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.25&lt;/span>,
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fill &lt;span class='o'>=&lt;/span> &lt;span class='nv'>pat&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>grid.circle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.75&lt;/span>, r &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.5&lt;/span>,
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fill &lt;span class='o'>=&lt;/span> &lt;span class='nv'>pat&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-10-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>In order to ensure the same scale of pattern is used across separate grobs, be sure to use absolute units when defining the pattern grob as well as the region:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gradient_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.rect.html'>rectGrob&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
width &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/unit.html'>unit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='s'>"cm"&lt;/span>&lt;span class='o'>)&lt;/span>,
height &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/unit.html'>unit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='s'>"cm"&lt;/span>&lt;span class='o'>)&lt;/span>,
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/patterns.html'>linearGradient&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"firebrick"&lt;/span>, &lt;span class='s'>"steelblue"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>pat&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/patterns.html'>pattern&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>gradient_rec&lt;/span>,
width &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/unit.html'>unit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1.5&lt;/span>, &lt;span class='s'>"cm"&lt;/span>&lt;span class='o'>)&lt;/span>,
height &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/unit.html'>unit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1.5&lt;/span>, &lt;span class='s'>"cm"&lt;/span>&lt;span class='o'>)&lt;/span>,
extend &lt;span class='o'>=&lt;/span> &lt;span class='s'>"reflect"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>grid.circle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.25&lt;/span>, r &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.25&lt;/span>,
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fill &lt;span class='o'>=&lt;/span> &lt;span class='nv'>pat&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>grid.circle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.75&lt;/span>, r &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.5&lt;/span>,
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fill &lt;span class='o'>=&lt;/span> &lt;span class='nv'>pat&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-11-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>As you can see, patterns can take some getting used to, but this is mainly because the API covers such a large span of functionality in terms of sizing, etc.&lt;/p>
&lt;h3 id="arbitrary-clipping-paths">Arbitrary clipping paths
&lt;a href="#arbitrary-clipping-paths">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Clipping is an integral part of graphics. You set up a region in your canvas and only this region will get drawn to. Up until now, the graphics engine has supported clipping, but only of rectangular, axis-aligned regions. Now, however, any grob can be used to define a clipping region. This is done at the viewport level, where the &lt;code>clip&lt;/code> argument now can take a grob in addition to the standard &lt;code>&amp;quot;on&amp;quot;&lt;/code>/&lt;code>&amp;quot;off&amp;quot;&lt;/code> values.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>clip_path&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.text.html'>textGrob&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Clipping"&lt;/span>, gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fontface &lt;span class='o'>=&lt;/span> &lt;span class='s'>"bold"&lt;/span>, fontsize &lt;span class='o'>=&lt;/span> &lt;span class='m'>100&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.points.html'>grid.points&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Uniform.html'>runif&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5000&lt;/span>&lt;span class='o'>)&lt;/span>,
y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Uniform.html'>runif&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5000&lt;/span>&lt;span class='o'>)&lt;/span>,
default.units &lt;span class='o'>=&lt;/span> &lt;span class='s'>'npc'&lt;/span>,
vp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/viewport.html'>viewport&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>clip &lt;span class='o'>=&lt;/span> &lt;span class='nv'>clip_path&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-12-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Clipping is not only possible with single grobs. By combining grobs in a gList, you can making the clipping region arbitrarily complex:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>circle&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>circleGrob&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.2&lt;/span>, &lt;span class='m'>0.8&lt;/span>&lt;span class='o'>)&lt;/span>, r &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.3&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>rect&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.rect.html'>rectGrob&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
width &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/unit.html'>unit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.7&lt;/span>, &lt;span class='s'>'snpc'&lt;/span>&lt;span class='o'>)&lt;/span>,
height &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/unit.html'>unit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.7&lt;/span>, &lt;span class='s'>'snpc'&lt;/span>&lt;span class='o'>)&lt;/span>,
vp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/viewport.html'>viewport&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>angle &lt;span class='o'>=&lt;/span> &lt;span class='m'>45&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>clip_path&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.grob.html'>gTree&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>children &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.grob.html'>gList&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>circle&lt;/span>, &lt;span class='nv'>rect&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.points.html'>grid.points&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Uniform.html'>runif&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5000&lt;/span>&lt;span class='o'>)&lt;/span>,
y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Uniform.html'>runif&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5000&lt;/span>&lt;span class='o'>)&lt;/span>,
default.units &lt;span class='o'>=&lt;/span> &lt;span class='s'>'npc'&lt;/span>,
vp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/viewport.html'>viewport&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>clip &lt;span class='o'>=&lt;/span> &lt;span class='nv'>clip_path&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-13-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>The examples above seems quite contrived and decoupled from data visualization, but there are of course real world usages, e.g. clipping a 2D density estimate to the shape of a country or clipping data points inside a circular canvas for polar plots.&lt;/p>
&lt;p>The user interface for clipping paths is easy enough to understand, but it should be noted that there may be slight differences between devices as to which grob types can be used. Most notably, the use of text grobs for defining clipping paths is not something that will work for every device (but does work in ragg).&lt;/p>
&lt;h3 id="alpha-masks">Alpha masks
&lt;a href="#alpha-masks">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The last feature added to the graphics engine in this round is the ability of viewports to have an alpha mask assigned. When a mask is present, the grobs being drawn will apply the opacity of the mask. Note that this is different than a luminosity mask, which uses the lightness of the mask as the alpha value. A mask can be any grob you want, or a collection of multiples:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>circle&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.circle.html'>circleGrob&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.2&lt;/span>, &lt;span class='m'>0.8&lt;/span>&lt;span class='o'>)&lt;/span>,
r &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.3&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>rect&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.rect.html'>rectGrob&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
width &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/unit.html'>unit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.7&lt;/span>, &lt;span class='s'>'snpc'&lt;/span>&lt;span class='o'>)&lt;/span>,
height &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/unit.html'>unit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.7&lt;/span>, &lt;span class='s'>'snpc'&lt;/span>&lt;span class='o'>)&lt;/span>,
vp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/viewport.html'>viewport&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>angle &lt;span class='o'>=&lt;/span> &lt;span class='m'>45&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>mask&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.grob.html'>gTree&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>children &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.grob.html'>gList&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>circle&lt;/span>, &lt;span class='nv'>rect&lt;/span>&lt;span class='o'>)&lt;/span>, gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fill &lt;span class='o'>=&lt;/span> &lt;span class='s'>"#00000066"&lt;/span>, col &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NA&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/grid.rect.html'>grid.rect&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.25&lt;/span>, &lt;span class='m'>0.25&lt;/span>, &lt;span class='m'>0.75&lt;/span>, &lt;span class='m'>0.75&lt;/span>&lt;span class='o'>)&lt;/span>,
y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.25&lt;/span>, &lt;span class='m'>0.75&lt;/span>, &lt;span class='m'>0.75&lt;/span>, &lt;span class='m'>0.25&lt;/span>&lt;span class='o'>)&lt;/span>,
width &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.5&lt;/span>,
height &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.5&lt;/span>,
gp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/gpar.html'>gpar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"steelblue"&lt;/span>, &lt;span class='s'>"firebrick"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,
vp &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/viewport.html'>viewport&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mask &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mask&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-14-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>As we see above, the areas in the mask where nothing is drawn have an opacity of 0, meaning that whatever is being drawn by the rectangle grob in these areas will be invisible. We also see that opacity is compounded by overlaying shapes as the areas covered both by the circle and the square in the mask has a higher opacity.&lt;/p>
&lt;h2 id="future-features">Future features
&lt;a href="#future-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>It is, of course, dangerous to promise what the future brings. However, I do know of a few features adjacent to what has been discussed above that might make sense to know about.&lt;/p>
&lt;p>When it comes to clipping paths, there is currently a lack of way to describe how multiple shapes are combined, since the fill rule is implicitly &amp;ldquo;winding&amp;rdquo; and you have no control over the direction the graphic device trace circles and rectangles. Work is already being done to let you control this from grid, so it will become easier to e.g. punch out holes in a clipping path by overlaying two grobs.&lt;/p>
&lt;p>As noted in the discussion about masks, only alpha masks are currently possible. However, producing an exact transparency through compounded shapes can be tough because of the way opacity combines. In the future there will also be support for luminosity masks and this should greatly improve the user experience of this feature in my opinion.&lt;/p>
&lt;p>Still, the main takeaway from all of the above is that the graphic engine is once again a living breathing code-base with big user-facing features on the horizon.&lt;/p>
&lt;h2 id="the-ggplot2-implications">The ggplot2 implications
&lt;a href="#the-ggplot2-implications">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>While ggplot2 uses grid underneath it&amp;rsquo;s grammar API, these features are generally not directly available in ggplot2. This is because most of these features are not directly applicable to the current API. Both gradients and patterns are obvious candidates for extensions of the ggplot2 API. But, for now, the grid API doesn&amp;rsquo;t support a vector of patterns/gradients. Once this limitation is removed (it is in the works), we will need to figure out how scaling of these more flexible fill types should work. The starting point is, of course, to allow mapping from one data-value to a predefined pattern/gradient, but it would be interesting to think about how to map data-values to features of the pattern/gradient, e.g. have the gradient defined by two or more columns that all maps to different colors. Some of this work and exploration is already happening in
&lt;a href="https://coolbutuseless.github.io/package/ggpattern" target="_blank" rel="noopener">ggpattern&lt;/a>, which could form the basis of future ggplot2 support.&lt;/p>
&lt;p>As for path clipping, we could imagine that geoms could take a clipping grob, but it is not obvious how this grob should be constructed in a manner consistent with the grammar. The same goes for masks. Maybe most of this work should be relegated to
&lt;a href="https://ggfx.data-imaginist.com" target="_blank" rel="noopener">ggfx&lt;/a> which has an extended API that seems better suited to masks and arbitrary clipping.&lt;/p>
&lt;h2 id="acknowledgement">Acknowledgement
&lt;a href="#acknowledgement">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I&amp;rsquo;d like to extend a huge thanks to Paul Murrell for continuing to support and improve the graphics API in R, and for his willingness to answer questions during the implementation of the new features in ragg and svglite. The new graphics engine features were joint work with Paul Murrell, partly sponsored by RStudio.&lt;/p></description></item><item><title>Modern Text Features in R</title><link>https://www.tidyverse.org/blog/2021/02/modern-text-features/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/02/modern-text-features/</guid><description>&lt;p>I&amp;rsquo;m extremely pleased to present the culmination of several years of work spanning the
&lt;a href="https://github.com/r-lib/systemfonts" target="_blank" rel="noopener">systemfonts&lt;/a>,
&lt;a href="https://github.com/r-lib/textshaping" target="_blank" rel="noopener">textshaping&lt;/a>, and
&lt;a href="https://ragg.r-lib.org" target="_blank" rel="noopener">ragg&lt;/a> packages. These releases complete our efforts to create a high-quality, performant raster graphics device that works the same way on every operating system.&lt;/p>
&lt;p>This blog post presents our improvements to ragg&amp;rsquo;s font rendering so that it now &amp;ldquo;just works&amp;rdquo; regardless of what you throw at it. This includes:&lt;/p>
&lt;ol>
&lt;li>Support for non-Latin scripts including Right-to-Left (RtL) scripts&lt;/li>
&lt;li>Support for OpenType features such as ligatures, glyph substitutions, etc.&lt;/li>
&lt;li>Support for color fonts&lt;/li>
&lt;li>Support for font fallback&lt;/li>
&lt;/ol>
&lt;p>All of the above comes in addition to the fact that ragg is able to use all of your installed fonts.&lt;/p>
&lt;p>To access these features all you need to do install the latest version of ragg:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ragg"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>But I&amp;rsquo;d invite you to read on to learn how it works, how to control it, and what it all means for you as a user.&lt;/p>
&lt;h3 id="using-ragg">Using ragg
&lt;a href="#using-ragg">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>ragg can be used directly in the same way as the built-in devices, such as
&lt;a href="https://rdrr.io/r/grDevices/png.html" target="_blank" rel="noopener">&lt;code>png()&lt;/code>&lt;/a>,
&lt;a href="https://rdrr.io/r/grDevices/png.html" target="_blank" rel="noopener">&lt;code>jpeg()&lt;/code>&lt;/a>, and
&lt;a href="https://rdrr.io/r/grDevices/png.html" target="_blank" rel="noopener">&lt;code>tiff()&lt;/code>&lt;/a>, by opening the device, running some code that renders graphics, and closing it again when done using
&lt;a href="https://rdrr.io/r/grDevices/dev.html" target="_blank" rel="noopener">&lt;code>dev.off()&lt;/code>&lt;/a>. The devices in ragg are prefixed with &lt;code>agg_&lt;/code> and named by the file format they produce (e.g. 
&lt;a href="https://ragg.r-lib.org/reference/agg_png.html" target="_blank" rel="noopener">&lt;code>agg_png()&lt;/code>&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can use ragg with
&lt;a href="https://ggplot2.tidyverse.org/reference/ggsave.html" target="_blank" rel="noopener">&lt;code>ggsave()&lt;/code>&lt;/a> by passing the device function to the &lt;code>device&lt;/code> argument (e.g. 
&lt;a href="https://ggplot2.tidyverse.org/reference/ggsave.html" target="_blank" rel="noopener">&lt;code>ggsave(device = agg_tiff)&lt;/code>&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can tell RStudio to use ragg in the &lt;em>Plots&lt;/em> pane be setting the backend to &lt;code>AGG&lt;/code> under &lt;em>Global Options &amp;gt; General &amp;gt; Graphics&lt;/em>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ragg can be used when knitting Rmarkdown files by setting &lt;code>dev=&amp;quot;ragg_png&amp;quot;&lt;/code> in the code chunk options.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Read more about using ragg in the previous release blog posts:
&lt;a href="https://www.tidyverse.org/blog/2020/05/updates-to-ragg-and-systemfonts/" target="_blank" rel="noopener">0.2.0&lt;/a> and
&lt;a href="https://www.tidyverse.org/blog/2019/07/ragg-0-1-0/" target="_blank" rel="noopener">0.1.0&lt;/a>&lt;/p>
&lt;h3 id="graphical-tldr">Graphical tl;dr;
&lt;a href="#graphical-tldr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>With the new version of ragg, you&amp;rsquo;ll be able to render plots such as this and expect it to simply work:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='http://ggplot2.tidyverse.org'>ggplot2&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>city_names&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='s'>"Tokyo (東京)"&lt;/span>,
&lt;span class='s'>"Yokohama (横浜)"&lt;/span>,
&lt;span class='s'>"Osaka (大阪市)"&lt;/span>,
&lt;span class='s'>"Nagoya (名古屋市)"&lt;/span>,
&lt;span class='s'>"Sapporo (札幌市)"&lt;/span>,
&lt;span class='s'>"Kobe (神戸市)"&lt;/span>,
&lt;span class='s'>"Kyoto (京都市)"&lt;/span>,
&lt;span class='s'>"Fukuoka (福岡市)"&lt;/span>,
&lt;span class='s'>"Kawasaki (川崎市)"&lt;/span>,
&lt;span class='s'>"Saitama (さいたま市)"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>main_cities&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
name &lt;span class='o'>=&lt;/span> &lt;span class='nv'>city_names&lt;/span>,
lat &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>35.690&lt;/span>, &lt;span class='m'>35.444&lt;/span>, &lt;span class='m'>34.694&lt;/span>, &lt;span class='m'>35.183&lt;/span>, &lt;span class='m'>43.067&lt;/span>,
&lt;span class='m'>34.69&lt;/span>, &lt;span class='m'>35.012&lt;/span>, &lt;span class='m'>33.583&lt;/span>, &lt;span class='m'>35.517&lt;/span>, &lt;span class='m'>35.861&lt;/span>&lt;span class='o'>)&lt;/span>,
lon &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>139.692&lt;/span>, &lt;span class='m'>139.638&lt;/span>, &lt;span class='m'>135.502&lt;/span>, &lt;span class='m'>136.9&lt;/span>, &lt;span class='m'>141.35&lt;/span>,
&lt;span class='m'>135.196&lt;/span>, &lt;span class='m'>135.768&lt;/span>, &lt;span class='m'>130.4&lt;/span>, &lt;span class='m'>139.7&lt;/span>, &lt;span class='m'>139.646&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>japan&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>rnaturalearth&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/rnaturalearth/man/ne_countries.html'>ne_countries&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
scale &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>,
country &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Japan"&lt;/span>,
returnclass &lt;span class='o'>=&lt;/span> &lt;span class='s'>"sf"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggsf.html'>geom_sf&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>japan&lt;/span>,
fill &lt;span class='o'>=&lt;/span> &lt;span class='s'>"forestgreen"&lt;/span>,
colour &lt;span class='o'>=&lt;/span> &lt;span class='s'>"grey10"&lt;/span>,
size &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.2&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>ggrepel&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/ggrepel/man/geom_text_repel.html'>geom_label_repel&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lon&lt;/span>, &lt;span class='nv'>lat&lt;/span>, label &lt;span class='o'>=&lt;/span> &lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span>,
data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>main_cities&lt;/span>,
fill &lt;span class='o'>=&lt;/span> &lt;span class='s'>"#FFFFFF88"&lt;/span>,
box.padding &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/grid/unit.html'>unit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5&lt;/span>, &lt;span class='s'>"mm"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_point.html'>geom_point&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lon&lt;/span>, &lt;span class='nv'>lat&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>main_cities&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>ggtitle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='s'>"Location of largest cities in Japan (日本) 🇯🇵"&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggtheme.html'>theme_void&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/theme.html'>theme&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>panel.background &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/element.html'>element_rect&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"steelblue"&lt;/span>&lt;span class='o'>)&lt;/span>,
plot.title &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/element.html'>element_text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>margin &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/element.html'>margin&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5&lt;/span>, &lt;span class='m'>0&lt;/span>, &lt;span class='m'>5&lt;/span>, &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-2-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Note the effortless mix of text in English and Japanese, along with emoji in the title. If this has piqued your interest, read on!&lt;/p>
&lt;h2 id="advanced-script-support">Advanced script support
&lt;a href="#advanced-script-support">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>English, the lingua franca of programming, has tended to dominate everything related to text within programming, ranging from encoding to rendering. This has made the Latin script, used in most of the Western world, the best (or often only) supported script in many text-rendering pipelines. This has been true in the R world where the built-in graphic devices have struggled to display other scripts (with the exception of Cairo devices on Linux). It is about time (overdue, really!) that the graphics system in R becomes more inclusive of which languages can be used. It is thus with great joy that I announce that ragg finally supports all scripts.&lt;/p>
&lt;h3 id="right-to-left-scripts">Right-to-Left scripts
&lt;a href="#right-to-left-scripts">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>To start off we will look at a sample of different scripts (Arabic, Hebrew, and Sindhi) that pose a challenge because they are written from right to left:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>arabic_text&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='s'>"هذا مكتوب باللغة العربية"&lt;/span>
&lt;span class='nv'>hebrew_text&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='s'>"זה כתוב בעברית"&lt;/span>
&lt;span class='nv'>sindhi_text&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='s'>"هي سنڌيءَ ۾ لکيو ويو آهي"&lt;/span>
&lt;span class='nv'>p&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_text.html'>geom_text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>1&lt;/span>, label &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>arabic_text&lt;/span>, &lt;span class='nv'>hebrew_text&lt;/span>, &lt;span class='nv'>sindhi_text&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,
family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Arial"&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/expand_limits.html'>expand_limits&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>preview_devices&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>p&lt;/span>, &lt;span class='s'>"rtl_example"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;p>&lt;img src="figs/rtl_example_macOS_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/rtl_example_Windows_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/rtl_example_Linux_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/rtl_example_macOS_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/rtl_example_Windows_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/rtl_example_Linux_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/rtl_example_macOS_quartz.png" width="33%" style="display: inline;">&lt;img src="figs/rtl_example_Windows_windows.png" width="33%" style="display: inline;">&lt;/p>
&lt;/div>
&lt;p>If you&amp;rsquo;re not familiar with the languages above it can be hard to see what is right and what is wrong. You may, however, look at how the text in the code is rendered in the browser and compare that to the device rendering. If you do that, you can see that the Hebrew script is rendered in the wrong direction for all the non-ragg devices (except Cairo on Linux). For the Arabic and Sindhi it&amp;rsquo;s even harder to see what&amp;rsquo;s wrong because the text looks fundamentally different. That&amp;rsquo;s because both Arabic and Sindhi rely extensively on text substitution rules and ligatures; the way a letter is written depends critically on what letters it is next to. Still, by comparing to the browser rendering you can see that the same devices failing on the Hebrew script fail here as well.&lt;/p>
&lt;p>The Cairo device on Linux handles this task well, as we have noted above. How come this works, but only on one OS? Cairo is built in to most Linux distributions and is designed to work with Pango, the library that linux uses to layout text. R&amp;rsquo;s Cairo graphics device bundles Cairo on all platforms, but doesn&amp;rsquo;t include Pango, due to the challenges of building it on other operating systems.&lt;/p>
&lt;h3 id="bidirectional-text">Bidirectional text
&lt;a href="#bidirectional-text">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>What happens if you combine right-to-left and left-to-right text in the same sentence? The string needs to be split into pieces that each consist of text running in one direction, laid out individually, and then combined back together&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>bidi_text&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='s'>"The Hebrew (עִברִית) script\nis right-to-left"&lt;/span>
&lt;span class='nv'>p&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_text.html'>geom_text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, label &lt;span class='o'>=&lt;/span> &lt;span class='nv'>bidi_text&lt;/span>&lt;span class='o'>)&lt;/span>,
family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Arial"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>preview_devices&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>p&lt;/span>, &lt;span class='s'>"bidi_example"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;p>&lt;img src="figs/bidi_example_macOS_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/bidi_example_Windows_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/bidi_example_Linux_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/bidi_example_macOS_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/bidi_example_Windows_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/bidi_example_Linux_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/bidi_example_macOS_quartz.png" width="33%" style="display: inline;">&lt;img src="figs/bidi_example_Windows_windows.png" width="33%" style="display: inline;">&lt;/p>
&lt;/div>
&lt;p>Given that most devices struggle with RtL scripts, it&amp;rsquo;s not surprising that they also fail when mixed. Again the exception is ragg, and Cairo on Linux.&lt;/p>
&lt;h2 id="advanced-font-feature-support">Advanced font feature support
&lt;a href="#advanced-font-feature-support">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A part of supporting some of the non-Latin scripts described above is to have support for ligatures (substituting multiple glyphs with a single new glyph). While ligatures are a requirement for the correct rendering of some scripts it is also an optional feature of fonts in general in order to support different text variations. More generally, the OpenType font format describes a long range of features, many optional, that defines specific glyph substitutions (both one-to-one and many-to-one) or position adjustments that can be turned on or off and will affect the look of the final rendered text. Some of these features are turned on automatically for specific scripts (e.g. required ligatures for Arabic), while others are left for the user to turn on at their discretion (e.g. tabular numerics). As part of the work to add support for non-Latin scripts the infrastructure to support all OpenType features was built. This, of course, requires that the font in use supports the requested feature.&lt;/p>
&lt;p>Some fonts, like the popular
&lt;a href="https://github.com/tonsky/FiraCode" target="_blank" rel="noopener">Fira Code&lt;/a> programming font, use ligatures as a main part of their appeal. These now work as expected with ragg:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>code&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='s'>"x &amp;lt;- y != z"&lt;/span>
&lt;span class='nv'>logo&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='s'>"twitter"&lt;/span>
&lt;span class='nv'>p&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_text.html'>geom_text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>, label &lt;span class='o'>=&lt;/span> &lt;span class='nv'>code&lt;/span>&lt;span class='o'>)&lt;/span>,
family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Fira Code"&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_text.html'>geom_text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, label &lt;span class='o'>=&lt;/span> &lt;span class='nv'>logo&lt;/span>&lt;span class='o'>)&lt;/span>,
family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Font Awesome 5 brands"&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/expand_limits.html'>expand_limits&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>preview_devices&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>p&lt;/span>, &lt;span class='s'>"def_features"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;p>&lt;img src="figs/def_features_macOS_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/def_features_Windows_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/def_features_Linux_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/def_features_macOS_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/def_features_Windows_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/def_features_Linux_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/def_features_macOS_quartz.png" width="33%" style="display: inline;">&lt;img src="figs/def_features_Windows_windows.png" width="33%" style="display: inline;">&lt;/p>
&lt;/div>
&lt;p>But what about non-default features? The capabilities of the graphics engine in R presents a problem here. There is very little information that the user is able to send along with the text to be plotted, apart from location and font (&lt;strong>bold&lt;/strong> and &lt;em>italic&lt;/em> on/off is the extent of it). So, having a device with support for advanced OpenType features in and of itself is nearly useless as there is no way to specify in your plot code that you want to turn a feature on or off.&lt;/p>
&lt;p>To work around this limitation, systemfonts now allows you to register font variants, providing a custom name that you can use to refer to a font with certain features enabled:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/r-lib/systemfonts'>systemfonts&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/systemfonts/man/register_variant.html'>register_variant&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Montserrat Extreme"&lt;/span>,
family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Montserrat"&lt;/span>,
weight &lt;span class='o'>=&lt;/span> &lt;span class='s'>"semibold"&lt;/span>,
features &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/systemfonts/man/font_feature.html'>font_feature&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>ligatures &lt;span class='o'>=&lt;/span> &lt;span class='s'>"discretionary"&lt;/span>, letters &lt;span class='o'>=&lt;/span> &lt;span class='s'>"stylistic"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The code above creates a new font based on Montserrat using a semibold weight and turning on standard ligatures and stylistic letter substitution. Now, in your text plotting code all you have to do is specify &lt;code>&amp;quot;Montserrat Extreme&amp;quot;&lt;/code> as the font family and the features and weights will be used. This only works with ragg, because none of the other devices are build on top of systemfonts, so don&amp;rsquo;t know how to access the registered font:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_text.html'>geom_text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, label &lt;span class='o'>=&lt;/span> &lt;span class='s'>"This text should definitely differ"&lt;/span>&lt;span class='o'>)&lt;/span>,
family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Montserrat"&lt;/span>,
size &lt;span class='o'>=&lt;/span> &lt;span class='m'>6&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_text.html'>geom_text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, label &lt;span class='o'>=&lt;/span> &lt;span class='s'>"This text should definitely differ"&lt;/span>&lt;span class='o'>)&lt;/span>,
family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Montserrat Extreme"&lt;/span>,
size &lt;span class='o'>=&lt;/span> &lt;span class='m'>6&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/expand_limits.html'>expand_limits&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-11-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>We can see that by using this font registration we not only gain access to weights other than normal and bold, but also to glyph substitutions such as the &amp;ldquo;Th&amp;rdquo; ligature, and the stylistic variations seen with the &amp;ldquo;t&amp;rdquo;, &amp;ldquo;f&amp;rdquo;, &amp;ldquo;l&amp;rdquo;, and &amp;ldquo;e&amp;rdquo; glyphs.&lt;/p>
&lt;p>While a lot of the optional OpenType features are mainly of interest to achieve a specific stylistic look of the rendered text, some have more importance for data visualizations, such as those related to how numbers are displayed. It is both possible to force even-width numbers, as well as correct display of fractional numbers (using &lt;code>font_feature(numbers = c(&amp;quot;tabular&amp;quot;, &amp;quot;fractions&amp;quot;)&lt;/code>) using OpenType. as long as the font supports it. So this is definitely something to look into when you want to add that final polish to your visualization.&lt;/p>
&lt;h2 id="color-fonts">Color fonts
&lt;a href="#color-fonts">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A recent (in font technology terms) development is the availability of color fonts, i.e. fonts where the glyphs have designated colors. This development is largely driven by the ubiquity of emojis in modern text, and while it may seem that emojis have been around forever, it is recent enough that the world has yet to converge to a single standard for color fonts. The system emoji font on macOS, Windows, and Linux all uses different font technologies for storing the color glyphs, ranging from storing a single bitmap, to storing each glyph as an SVG. This, unsurprisingly, complicates things. To add insult to injury, emojis often get rendered slightly larger than the surrounding text and with a slightly lowered baseline in a very OS-specific way (this does not apply to all color fonts; only emojis).&lt;/p>
&lt;p>Why am I telling you this? Well, honestly it is mostly to make you appreciate the labor that went into the fact that color fonts (and by extension, emojis) now just work:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>emojis&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='s'>"👩🏾‍💻🔥📊"&lt;/span>
&lt;span class='nv'>p&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_text.html'>geom_label&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, label &lt;span class='o'>=&lt;/span> &lt;span class='nv'>emojis&lt;/span>&lt;span class='o'>)&lt;/span>,
family &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Apple Color Emoji"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>preview_devices&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>p&lt;/span>, &lt;span class='s'>"emoji"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;p>&lt;img src="figs/emoji_macOS_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/emoji_Windows_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/emoji_Linux_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/emoji_macOS_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/emoji_Windows_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/emoji_Linux_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/emoji_macOS_quartz.png" width="33%" style="display: inline;">&lt;img src="figs/emoji_Windows_windows.png" width="33%" style="display: inline;">&lt;/p>
&lt;/div>
&lt;p>As one can see, the failures range from not being able to render anything, to rendering in monochrome. Further, it appears as if the devices have trouble figuring out the dimensions of the glyphs. One additional wrinkle is that while Cairo on macOS is capable of rendering in monochrome, it fails to get the correct emoji. This is because emojis rely heavily on ligatures, and the &amp;ldquo;dark-skinned woman at a computer&amp;rdquo; emoji is actually a ligature of the &amp;ldquo;woman&amp;rdquo;, &amp;ldquo;dark skin&amp;rdquo;, and &amp;ldquo;computer&amp;rdquo; emojis.&lt;/p>
&lt;h2 id="font-fallback">Font fallback
&lt;a href="#font-fallback">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In all of the above examples we have been very mindful in setting the font-face to a font that contains all the glyphs we need. This is not always practical, especially when you want to mix emojis and regular text. It is also an absolute requirement when mixing Latin and CJK (Chinese, Japanese, and Korean) text, as it is infeasible to include all CJK glyphs in a single font. However, we are used to things just working at the system level. No matter which font we choose it seems that a glyph is always displayed in e.g. browsers and text editors. This is because the OS is employing &lt;strong>font fallback&lt;/strong>, which is the act of figuring out an alternative font to use when a glyph is not present in the chosen font. Wouldn&amp;rsquo;t it be great if we could have that in a graphic device? Well, now we do!&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>fallback_text&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='s'>"This is English, この文は日本語です 🚀"&lt;/span>
&lt;span class='nv'>p&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_text.html'>geom_text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, label &lt;span class='o'>=&lt;/span> &lt;span class='nv'>fallback_text&lt;/span>&lt;span class='o'>)&lt;/span>, size &lt;span class='o'>=&lt;/span> &lt;span class='m'>2.5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>preview_devices&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>p&lt;/span>, &lt;span class='s'>"fallback"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;p>&lt;img src="figs/fallback_macOS_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/fallback_Windows_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/fallback_Linux_ragg.png" width="33%" style="display: inline;">&lt;img src="figs/fallback_macOS_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/fallback_Windows_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/fallback_Linux_cairo.png" width="33%" style="display: inline;">&lt;img src="figs/fallback_macOS_quartz.png" width="33%" style="display: inline;">&lt;img src="figs/fallback_Windows_windows.png" width="33%" style="display: inline;">&lt;/p>
&lt;/div>
&lt;p>The bottom line is that with ragg, you now don&amp;rsquo;t need to think about missing glyphs in any font you choose (unless you request a character that is not covered by any font on your system).&lt;/p>
&lt;h2 id="wheres-the-catch">Where&amp;rsquo;s the catch
&lt;a href="#wheres-the-catch">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Most of what we have shown today simply works automagically and may (depending on your prior frustrations with script support in R) seem too good to be true. Is there any catch? Not really. systemfonts, textshaping, and ragg try to be as smart as possible about text shaping and only take additional action if required. Further everything is heavily cached, so the impact on performance is negligible.&lt;/p>
&lt;p>There is something missing though, which we haven&amp;rsquo;t touched upon. Not all scripts are LtR or RtL. A few, especially Asian scripts, are top-to-bottom. Top-to-bottom scripts are sadly not yet supported. This is not due to any limitation in the underlying shaping technology, but due to limitations in the R graphics engine, which assumes horizontal text in key places of the API. This means that, until the graphics engine is updated, it is outside the grasp of graphic devices to support vertical text. Hopefully, this is an area that will improve in the future.&lt;/p>
&lt;h2 id="wrapping-up">Wrapping up
&lt;a href="#wrapping-up">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I hope you&amp;rsquo;ll appreciate the new features described here. I&amp;rsquo;d like to thank everyone who have helped validate the text rendering on Twitter. A special thanks goes out to Behdad Esfahbod (&lt;a href="http://behdad.org" class="uri">&lt;a href="http://behdad.org">http://behdad.org&lt;/a>&lt;/a>) for his work on HarfBuzz, Fribidi, and almost everything else underlying modern font rendering. He has been especially gracious in his help and support.&lt;/p></description></item><item><title>Taking Control of Plot Scaling</title><link>https://www.tidyverse.org/blog/2020/08/taking-control-of-plot-scaling/</link><pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/08/taking-control-of-plot-scaling/</guid><description>&lt;p>Some time ago, while working on the new edition of the ggplot2 book, I asked out to the R twitterverse what part of using ggplot2 was the most incomprehensible for seasoned users. By a very large margin the most &amp;ldquo;popular&amp;rdquo; response revolved around making sure that output had the correct scaling of text, lines, etc.&lt;/p>
&lt;p>The latest release of ragg contains a new functionality that will hopefully make this issue a thing of the past. Read on how to use it.&lt;/p>
&lt;h2 id="some-definitions">Some definitions
&lt;a href="#some-definitions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Before we delve into the problem we should clarify a few concepts related to graphics and sizing:&lt;/p>
&lt;p>&lt;strong>Absolute size:&lt;/strong> This is the physical dimensions of the graphic (or, more precisely, the intended physical dimensions). This is measured in centimeters or inches or another absolute length unit.&lt;/p>
&lt;p>&lt;strong>Pixel size:&lt;/strong> For raster output, the graphic is encoded as a matrix of color values. Each cell in the matrix is a pixel. The pixel size is the number of rows and columns in the matrix. Pixels does not have any inherent physical size.&lt;/p>
&lt;p>&lt;strong>Resolution:&lt;/strong> This number ties absolute and pixel size together. It is usually given in ppi (pixels per inch), though dpi (dots per inch) is used interchangeably. A resolution of 72 ppi means that an inch is considered 72 pixels long.&lt;/p>
&lt;p>&lt;strong>Pointsize:&lt;/strong> This is a measure tied to text sizing. When we set a font to size 12, it is given in points. While the actual size of a point has
&lt;a href="https://en.wikipedia.org/wiki/Point_%28typography%29#Varying_standards" target="_blank" rel="noopener">varied throughout history&lt;/a>, the general consensus now is that 1pt = 1/72 inch (this is also adopted by R). Since points is an absolute unit, the resolution of the output will determine the number of pixels it correspond to.&lt;/p>
&lt;h2 id="the-problem">The problem
&lt;a href="#the-problem">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>With formalities out of the way, we can describe the problem more clearly. At its core, this is about ensuring the correct scaling of a plot as we develop it for varying absolute sizes.&lt;/p>
&lt;p>When we develop a graphic we will generally sit in front of a computer and fine tune it while continuously getting previews on the screen. Once we are content with it we will save it to the correct absolute size required by wherever we intend to publish the plot. In the remainder of the text we will assume that we sit in front of a computer developing a plot that should end up on a poster.&lt;/p>
&lt;p>This is the plot, and how it looks on a computer:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>(&lt;span class='k'>&lt;a href='http://ggplot2.tidyverse.org'>ggplot2&lt;/a>&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>(&lt;span class='k'>&lt;a href='https://ragg.r-lib.org'>ragg&lt;/a>&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>(&lt;span class='k'>&lt;a href='https://allisonhorst.github.io/palmerpenguins'>palmerpenguins&lt;/a>&lt;/span>)
&lt;span class='c'># plot adapted from https://github.com/allisonhorst/palmerpenguins&lt;/span>
&lt;span class='k'>p&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/na.fail.html'>na.omit&lt;/a>&lt;/span>(&lt;span class='k'>penguins&lt;/span>), &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(x = &lt;span class='k'>flipper_length_mm&lt;/span>, y = &lt;span class='k'>body_mass_g&lt;/span>)) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_point.html'>geom_point&lt;/a>&lt;/span>(
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(color = &lt;span class='k'>species&lt;/span>, shape = &lt;span class='k'>species&lt;/span>),
size = &lt;span class='m'>3&lt;/span>,
alpha = &lt;span class='m'>0.8&lt;/span>
) &lt;span class='o'>+&lt;/span>
&lt;span class='k'>ggforce&lt;/span>::&lt;span class='nf'>&lt;a href='https://ggforce.data-imaginist.com/reference/geom_mark_ellipse.html'>geom_mark_ellipse&lt;/a>&lt;/span>(
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(filter = &lt;span class='k'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Gentoo"&lt;/span>,
description = &lt;span class='s'>"Gentoo penguins are generally bigger in size"&lt;/span>)
) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>(x = &lt;span class='s'>"Flipper Length [mm]"&lt;/span>, y = &lt;span class='s'>"Body Mass [g]"&lt;/span>, colour = &lt;span class='s'>"Species"&lt;/span>,
shape = &lt;span class='s'>"Species"&lt;/span>)
&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"basis.png"&lt;/span>)
&lt;span class='c'># I'm explicitly calling the device functions so you can see the dimensions &lt;/span>
&lt;span class='c'># used&lt;/span>
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>20&lt;/span>, height = &lt;span class='m'>12&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-1-1/basis.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This looks good, but remember we want to use this on a poster. A poster is usually observed at a farther distance than a computer screen, so in order to make it legible the plot should be bigger. How much bigger? Well, if we assume that we are watching our screen at 50 cm distance, and our poster is meant to be observed at 1.5 m distance, then our plot should be 3 times larger to take up the same amount of space in our vision:&lt;/p>
&lt;p>&lt;img src="scaling.png" alt="Schematic representation of the fact that size must increase by the same factor as distance to object in order to continue taking up the same amount of space in the vision">&lt;/p>
&lt;p>With that in mind we quickly size up our plot:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"large_basis.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>60&lt;/span>, height = &lt;span class='m'>36&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-2-1/large_basis.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>The plot above doesn&amp;rsquo;t look physically larger, but that is because the webpage downscales it to make it fit. You can download each of the images and open them in a image editor to convince yourself that they are of different absolute size. The downscaling done by the webpage allows us to simulate how looking at our poster may feel like, and it is not pretty; everything seems super small and ineligible.&lt;/p>
&lt;p>Why is that? Our plot is a mix of elements positioned and dimensioned based on both relative and absolute sizes. While the relative sizes expand along with the output size, the absolute sizes does not. The text is given in points which, as you recall, is an absolute dimension. The same is true for the element sizes in the scatterplot, the grid lines, etc. This means that as we scale up the output size, they remain the same size and will thus get smaller relative to the full image.&lt;/p>
&lt;blockquote>
&lt;p>The reverse can be a problem as well. If you render a plot to a smaller size than the one you&amp;rsquo;ve previewed you may find that text, margins, etc. take up all the available space.&lt;/p>
&lt;/blockquote>
&lt;p>Now, how should we go about correcting this?&lt;/p>
&lt;h2 id="attempt-1-use-vector-graphics">Attempt 1: Use vector graphics
&lt;a href="#attempt-1-use-vector-graphics">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The discussion above is especially relevant to raster output since they don&amp;rsquo;t resize gracefully and it is thus very important to get the correct dimensions and resolution when it is rendered. One way to resolve this is to not render to raster but use a vector graphic device such as
&lt;a href="https://rdrr.io/r/grDevices/pdf.html" target="_blank" rel="noopener">&lt;code>pdf()&lt;/code>&lt;/a> or &lt;code>svglite()&lt;/code>. With these you can simply render the graphic to a size where everything looks as it should and then resize the output to the physical size that you need. There are valid reasons to not want to use vector graphics, however. The look of the output may change depending on which program opens them. Custom fonts may not render correctly on other systems. Or you may have such a large amount of graphical elements that the vector graphic becomes unreasonably large and heavy to display. If none of this applies then using a vector graphic device is definitely a valid and reasonable solution. For the remainder of the post we assume that we want the output in a raster format such as png and explore how we may fix our scaling issues there.&lt;/p>
&lt;h2 id="attempt-2-theming">Attempt 2: Theming
&lt;a href="#attempt-2-theming">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One approach to fixing this is by changing the theme settings of the plot, so that they work better for a larger size:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>p1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>p&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggtheme.html'>theme_gray&lt;/a>&lt;/span>(base_size = &lt;span class='m'>33&lt;/span>)
&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"theming.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>60&lt;/span>, height = &lt;span class='m'>36&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p1&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-3-1/theming.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This approach got us surprisingly far. A lot of the theme elements of the plot is derived from the base size argument so many adapts. Not all though, as we can see the legend keys maintaining their relative small size. If you&amp;rsquo;ve been using a custom theme it may also be that you&amp;rsquo;ve overwritten some of the default sizes and will need to change that as well.&lt;/p>
&lt;p>One thing missing is all the non-theme elements (i.e. things part of the layer). Because of this we&amp;rsquo;d have to redo the whole plot in order to get the desired result:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>p1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/na.fail.html'>na.omit&lt;/a>&lt;/span>(&lt;span class='k'>penguins&lt;/span>), &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(x = &lt;span class='k'>flipper_length_mm&lt;/span>, y = &lt;span class='k'>body_mass_g&lt;/span>)) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_point.html'>geom_point&lt;/a>&lt;/span>(
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(color = &lt;span class='k'>species&lt;/span>, shape = &lt;span class='k'>species&lt;/span>),
size = &lt;span class='m'>9&lt;/span>,
alpha = &lt;span class='m'>0.8&lt;/span>
) &lt;span class='o'>+&lt;/span>
&lt;span class='k'>ggforce&lt;/span>::&lt;span class='nf'>&lt;a href='https://ggforce.data-imaginist.com/reference/geom_mark_ellipse.html'>geom_mark_ellipse&lt;/a>&lt;/span>(
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(filter = &lt;span class='k'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Gentoo"&lt;/span>,
description = &lt;span class='s'>"Gentoo penguins are generally bigger in size"&lt;/span>),
size = &lt;span class='m'>1.5&lt;/span>,
label.fontsize = &lt;span class='m'>36&lt;/span>
) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>(x = &lt;span class='s'>"Flipper Length [mm]"&lt;/span>, y = &lt;span class='s'>"Body Mass [g]"&lt;/span>, colour = &lt;span class='s'>"Species"&lt;/span>,
shape = &lt;span class='s'>"Species"&lt;/span>) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggtheme.html'>theme_gray&lt;/a>&lt;/span>(base_size = &lt;span class='m'>33&lt;/span>)
&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"theming2.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>60&lt;/span>, height = &lt;span class='m'>36&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p1&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-4-1/theming2.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>We can see that we are getting there, but the journey hasn&amp;rsquo;t been pleasant. Especially for the last part it requires knowledge of all the different settings in a geom that encodes absolute sizes. For the mark geom we only fixed the ellipse line width and the text size, but there are many more settings that needs to be updated as well as is apparent from the weird look of the text box.&lt;/p>
&lt;p>Another issue that arises is that if we need this plot at yet another different scale, we will need to change quite a lot of code in order to get there.&lt;/p>
&lt;h2 id="attempt-3-resolution-scaling">Attempt 3: Resolution scaling
&lt;a href="#attempt-3-resolution-scaling">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Since the resolution is the parameter that ties the pixel size and absolute size together it is possible to use it as a scaling factor, but it requires some non-obvious adjustments:&lt;/p>
&lt;p>The first thing we need to do is convert our physical dimensions to pixel dimensions using our desired resolution. We want to end up with a 60x36cm plot at 300ppi. This gives us:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>(&lt;span class='m'>60&lt;/span>, &lt;span class='m'>36&lt;/span>) &lt;span class='o'>*&lt;/span>
&lt;span class='m'>0.3937&lt;/span> &lt;span class='o'>*&lt;/span> &lt;span class='c'># convert to inch&lt;/span>
&lt;span class='m'>300&lt;/span> &lt;span class='c'># convert to pixels&lt;/span>
&lt;span class='c'>#&amp;gt; [1] 7086.60 4251.96&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can now use these values directly in our device and change the resolution of the device to trick it into thinking that text etc should be rendered at a larger size&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"resolution.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>7087&lt;/span>, height = &lt;span class='m'>4252&lt;/span>, units = &lt;span class='s'>"px"&lt;/span>, res = &lt;span class='m'>900&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-6-1/resolution.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This actually works exactly as we hoped. We&amp;rsquo;ve gotten our huge version of the plot but with the same exact scaling of all graphic elements.&lt;/p>
&lt;p>Depending on your temperament this may be a perfect solution. To me, I think the conversion from physical dimensions to pixels is tedious, and it has the added drawback that the dimensions of the plot is incorrectly encoded (it will appear as a 20*12cm plot at 900ppi) which may impact how it is presented in different programs. In the end you may have to manually resize it to get the correct physical dimensions in the end.&lt;/p>
&lt;h2 id="the-solution">The solution
&lt;a href="#the-solution">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Seeing that there is no single perfect solution to fixing this with the tools at our disposal, I&amp;rsquo;ve added a new argument to the ragg devices called &lt;code>scaling&lt;/code>. It&amp;rsquo;s a multiplier that is applied to all absolute sizes, without interfering with the encoded dimensions of the output. Since we have increased the dimensions 3 times we set &lt;code>scaling = 3&lt;/code> to make sure that the absolute sized elements are keeping their relative size.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"scaling.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>60&lt;/span>, height = &lt;span class='m'>36&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>, scaling = &lt;span class='m'>3&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-7-1/scaling.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>As can be seen, the new argument makes it very easy to reclaim the look of the plot after resizing. Hopefully this will remove a good deal of the pain related to generating plots for papers, posters, presentations, etc. You do have to remember to use the same scaling setting for all plots for them to have the same sizing, but apart from that it makes it very easy to fine tune the look for the medium your creating it for.&lt;/p>
&lt;p>Remember that the scaling factor of &lt;code>3&lt;/code> was simply chosen to fit our presumed viewing distance and should not be repeated without thought. Another example would be to create a small version of the plot, e.g. for a thumbnail on a webpage. While there is no harm in manually scaling down a raster image, you may find that especially text is more readable when rendered to the desired size directly. To show this off we&amp;rsquo;ll make a half-sized version of our plot as well. To spruce it up we&amp;rsquo;ll use
&lt;a href="https://ggplot2.tidyverse.org/reference/ggsave.html" target="_blank" rel="noopener">&lt;code>ggsave()&lt;/code>&lt;/a> instead of calling the ragg device directly. Let&amp;rsquo;s see how it looks without using scaling first:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"small"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggsave.html'>ggsave&lt;/a>&lt;/span>(
&lt;span class='k'>pngfile&lt;/span>,
&lt;span class='k'>p&lt;/span>,
device = &lt;span class='k'>agg_png&lt;/span>,
width = &lt;span class='m'>10&lt;/span>, height = &lt;span class='m'>6&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>
)
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-8-1/small" width="50%" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>As we can see, everything feels oversized for the plot, and the margins takes up way too much relative space. Using &lt;code>scaling&lt;/code> we quickly resolve this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"downscaling.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggsave.html'>ggsave&lt;/a>&lt;/span>(
&lt;span class='k'>pngfile&lt;/span>,
&lt;span class='k'>p&lt;/span>,
device = &lt;span class='k'>agg_png&lt;/span>,
width = &lt;span class='m'>10&lt;/span>, height = &lt;span class='m'>6&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>,
scaling = &lt;span class='m'>0.5&lt;/span>
)
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-9-1/downscaling.png" width="50%" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;h2 id="addendum">Addendum
&lt;a href="#addendum">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>Preparing graphics for the web presents an additional hurdle. The HTML specification assumes a screen resolution of 96ppi since that was the predominant screen resolution at the time. Modern monitors have a much higher resolution but the assumption is still in effect (though operating systems may mitigate it). This is the reason why plots may look slightly smaller when rendered through Shiny, blogdown, or hugodown. Simply set the resolution to 96ppi and use pixel dimensions for the output to make sure it has the correct scaling.&lt;/li>
&lt;li>Rendering images with RMarkdown requires some care as well since chunk options both take an output dimension in inches as well as a scaling factor for how big the rendered image should appear in the document.
&lt;a href="https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing" target="_blank" rel="noopener">R for Data Science&lt;/a> has some additional information on this&lt;/li>
&lt;/ul></description></item><item><title>Updates to ragg and systemfonts</title><link>https://www.tidyverse.org/blog/2020/05/updates-to-ragg-and-systemfonts/</link><pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/05/updates-to-ragg-and-systemfonts/</guid><description>&lt;p>We&amp;rsquo;re thrilled to announce the new releases of ragg and systemfonts. ragg is a package that provides a modern set of raster devices as alternatives to the ones you know from the grDevices package (e.g. &lt;code>png()&lt;/code>). systemfonts is a low level package that provides font-related utilities to graphic devices, most importantly detecting and matching fonts to the correct font files across systems.&lt;/p>
&lt;p>While these are not the most flashy of releases, we thought it would be a good time to discuss some of our thoughts on the future of graphics in R, especially related to fonts.&lt;/p>
&lt;h2 id="ragg-020">ragg 0.2.0
&lt;a href="#ragg-020">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>ragg is our take on a modern set of raster devices for R, based based on the AGG 2D graphics library which provides both
&lt;a href="https://ragg.r-lib.org/articles/ragg_quality.html" target="_blank" rel="noopener">high quality&lt;/a> and
&lt;a href="https://ragg.r-lib.org/articles/ragg_performance.html" target="_blank" rel="noopener">high performance&lt;/a> output (you can read more about it in
&lt;a href="https://www.tidyverse.org/blog/2019/07/ragg-0-1-0/" target="_blank" rel="noopener">the 0.1.0 release post&lt;/a>). It also provides high quality font support and automatically finds fonts installed on your computer.&lt;/p>
&lt;p>This release has resolved many rendering bugs and include one major new features: the addition of a jpeg device (&lt;code>agg_jpeg()&lt;/code>) that produces jpegs. jpeg is a lossy image format (i.e. it decreases the image quality to reduce file size) as opposed to png which uses a lossless compression scheme. That means that jpeg is usually not the best choice for most R graphics, but it does excel in compressing image data, so for this type of plot it can offer a very high compression with almost no noticeable degradation in quality:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ragg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Warning: package &amp;#39;ragg&amp;#39; was built under R version 3.6.2&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Warning: package &amp;#39;fs&amp;#39; was built under R version 3.6.2&lt;/span>
&lt;span class="c1"># Creating some image data&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">noise&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">long_grid&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">seq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length.out&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2000&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">seq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length.out&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fracture&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">noise&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gen_worley&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">fractal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">billow&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">octaves&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">gain&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.x&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">frequency&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.x&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;distance&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">seed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">12&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1"># plot using png&lt;/span>
&lt;span class="n">pngfile&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">fig_path&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="s">&amp;#34;png_image.png&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">agg_png&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pngfile&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">noise&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">invisible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">dev.off&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">include_graphics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pngfile&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-1-1/png_image.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># plot using jpeg&lt;/span>
&lt;span class="n">jpegfile&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">fig_path&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="s">&amp;#34;jpeg_image.jpeg&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">agg_jpeg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">jpegfile&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">noise&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">invisible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">dev.off&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">include_graphics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">jpegfile&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-2-1/jpeg_image.jpeg" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;p>As you can hopefully agree on, there is no noticeable quality difference between the two. What about file size?&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">file_size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pngfile&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; 944K&lt;/span>
&lt;span class="nf">file_size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">jpegfile&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; 387K&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We observe more than a 50% file size reduction. Again, this is only worth it when saving image-type plots with high-frequency variations. &lt;code>agg_png()&lt;/code> should be your go-to device for most data visualizations.&lt;/p>
&lt;h2 id="systemfonts-020">systemfonts 0.2.0
&lt;a href="#systemfonts-020">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>systemfonts is a package that spun out of the development of ragg. Its main claim-to-fame is its ability to find the correct font file for a specific font and style. This release has improved a lot of the underlying implementation and added a bunch of new features that may interest you.&lt;/p>
&lt;h3 id="why-is-text-so-hard">Why is text so hard?
&lt;a href="#why-is-text-so-hard">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Before we delve into the features of systemfonts it may be good to understand why fonts don&amp;rsquo;t just work. At its core text and fonts are just very messy, with differences between operating systems and font file formats to name some of the challenges. (For a humorous overview consult the
&lt;a href="https://gankra.github.io/blah/text-hates-you/" target="_blank" rel="noopener">&lt;em>Text Rendering Hates You&lt;/em>&lt;/a>).&lt;/p>
&lt;p>There are simply so many issues related to how finding the font files, reading the content, figuring out the correct glyphs for a character string, and determining the correct position of each glyph, that most applications use high-level solutions such as those provided by the operating system or e.g.
&lt;a href="https://www.pango.org" target="_blank" rel="noopener">Pango&lt;/a>. This is not really an option for graphic devices as text is used in many other ways than the standard &amp;ldquo;text box&amp;rdquo; use that the high-level solutions are tailored to. All-in-all this makes it rather difficult to do fully correct text rendering on graphics device.&lt;/p>
&lt;h3 id="new-features">New features
&lt;a href="#new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The core functionality of systemfonts (finding font files) has been expanded with this release. It now makes heavy use of caching to speed up the font queries that may happen many hundreds of times for a single plot. This gives a nice speed boost, but comes at a cost: if a font is installed while your R session is running, you&amp;rsquo;ll need to explicitly run &lt;code>systemfonts::reset_font_cache()&lt;/code> in order to flush the cache.&lt;/p>
&lt;p>systemfonts has also gained the ability to register fonts that are not installed in the usual place so that e.g. packages can provide a new set of fonts. This is done with the &lt;code>register_font()&lt;/code> function. The font registration can also be used to get access to fonts that are not easily targeted with the limited information you can pass through the graphic engine in R (family, bold-or-not, italic-or-not), or if you want to overwrite the system-specific mappings of &lt;code>'sans'&lt;/code>, &lt;code>'serif'&lt;/code>, and &lt;code>'mono'&lt;/code>.&lt;/p>
&lt;p>Apart from font file matching, systemfonts now also provides the basic infrastructure for text shaping, that is, figuring out the placement of glyphs on a page, taking size, kerning, etc. into account. It further provides efficient functions for calculating string widths and glyph dimensions, something needed if you choose to implement a graphic device.&lt;/p>
&lt;p>The text shaping, font information, and glyph metrics are available from R, although the intended use is primarily from C:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">systemfonts&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Warning: package &amp;#39;systemfonts&amp;#39; was built under R version 3.6.2&lt;/span>
&lt;span class="nf">font_info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;spectral&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 22&lt;/span>
&lt;span class="c1">#&amp;gt; path index family style italic bold monospace kerning color scalable&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 /Sys… 0 Helve… Regu… FALSE FALSE FALSE FALSE FALSE TRUE &lt;/span>
&lt;span class="c1">#&amp;gt; # … with 12 more variables: vertical &amp;lt;lgl&amp;gt;, n_glyphs &amp;lt;int&amp;gt;, n_sizes &amp;lt;int&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # n_charmaps &amp;lt;int&amp;gt;, bbox &amp;lt;list&amp;gt;, max_ascend &amp;lt;dbl&amp;gt;, max_descend &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # max_advance_width &amp;lt;dbl&amp;gt;, max_advance_height &amp;lt;dbl&amp;gt;, lineheight &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # underline_pos &amp;lt;dbl&amp;gt;, underline_size &amp;lt;dbl&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">glyph_info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;glyphs&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;spectral&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">14&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 6 x 9&lt;/span>
&lt;span class="c1">#&amp;gt; glyph index width height x_bearing y_bearing x_advance y_advance bbox &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 g 74 7 10 0 7 8 0 &amp;lt;dbl [4]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 l 79 3 10 0 10 3 0 &amp;lt;dbl [4]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 3 y 92 7 10 0 7 7 0 &amp;lt;dbl [4]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 4 p 83 8 10 0 7 8 0 &amp;lt;dbl [4]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 5 h 75 7 10 0 10 8 0 &amp;lt;dbl [4]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 6 s 86 7 7 0 7 7 0 &amp;lt;dbl [4]&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">text&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;This is an example of the current text shaping engine build in to systemfonts. It does automatic text wrapping and support advanced layout features such as first-line and hanging indent. It also support setting &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;tracking&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34; on some word and generally mixing text with different &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;fonts, &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;sizes,&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34; and styles.&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">family&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#39;charter&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#39;charter&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#39;charter&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#39;exo 2&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#39;charter&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#39;charter&amp;#39;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">italic&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">rep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">bold&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">rep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">style&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">rep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;plain&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;bold.italic&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">size&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">rep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">14&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="m">24&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">14&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">shape&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">shape_string&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">text&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">family&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">italic&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">italic&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">bold&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">bold&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">tracking&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">400&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">rep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">)),&lt;/span>
&lt;span class="n">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4.5&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">indent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">hjust&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">vjust&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">300&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">shape&lt;/span>
&lt;span class="c1">#&amp;gt; $shape&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 299 x 7&lt;/span>
&lt;span class="c1">#&amp;gt; glyph index metric_id string_id x_offset y_offset x_midpoint&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 &amp;#34;T&amp;#34; 55 1 1 -133. 47.7 4.2 &lt;/span>
&lt;span class="c1">#&amp;gt; 2 &amp;#34;h&amp;#34; 75 1 1 -125. 47.7 3.96&lt;/span>
&lt;span class="c1">#&amp;gt; 3 &amp;#34;i&amp;#34; 76 1 1 -117. 47.7 1.92&lt;/span>
&lt;span class="c1">#&amp;gt; 4 &amp;#34;s&amp;#34; 86 1 1 -113. 47.7 2.76&lt;/span>
&lt;span class="c1">#&amp;gt; 5 &amp;#34; &amp;#34; 3 1 1 -108. 47.7 1.92&lt;/span>
&lt;span class="c1">#&amp;gt; 6 &amp;#34;i&amp;#34; 76 1 1 -104. 47.7 1.92&lt;/span>
&lt;span class="c1">#&amp;gt; 7 &amp;#34;s&amp;#34; 86 1 1 -99.8 47.7 2.76&lt;/span>
&lt;span class="c1">#&amp;gt; 8 &amp;#34; &amp;#34; 3 1 1 -94.3 47.7 1.92&lt;/span>
&lt;span class="c1">#&amp;gt; 9 &amp;#34;a&amp;#34; 68 1 1 -90.5 47.7 3.48&lt;/span>
&lt;span class="c1">#&amp;gt; 10 &amp;#34;n&amp;#34; 81 1 1 -83.5 47.7 3.96&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 289 more rows&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; $metrics&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 11&lt;/span>
&lt;span class="c1">#&amp;gt; string width height left_bearing right_bearing top_bearing bottom_bearing&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 This … 1350 582. -1 15 13.8 1.02&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 4 more variables: left_border &amp;lt;dbl&amp;gt;, top_border &amp;lt;dbl&amp;gt;, pen_x &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # pen_y &amp;lt;dbl&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">grid&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">pngfile&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">fig_path&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="s">&amp;#34;png_image.png&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">agg_png&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pngfile&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">unit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#39;in&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">300&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Warning in agg_png(pngfile, 6, 2.5, unit = &amp;#34;in&amp;#34;, res = 300): partial argument&lt;/span>
&lt;span class="c1">#&amp;gt; match of &amp;#39;unit&amp;#39; to &amp;#39;units&amp;#39;&lt;/span>
&lt;span class="nf">grid.text&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">glyph&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">unit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;npc&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nf">unit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">x_offset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;pt&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">unit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;npc&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nf">unit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">y_offset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;pt&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">hjust&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">vjust&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">gp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">gpar&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">fontfamily&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">family[shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">string_id]&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">fontface&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">style[shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">string_id]&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">fontsize&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">size[shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">string_id]&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nf">invisible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">dev.off&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">include_graphics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pngfile&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-7-1/png_image.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;p>When you see this you may immediately think of the work Claus Wilke has done with
&lt;a href="https://wilkelab.org/gridtext/" target="_blank" rel="noopener">gridtext&lt;/a>. We are both committed to improving the rich text support in R, and are attacking the problem from different directions. Claus has worked on doing per-word shaping, whereas the text shaping done in systemfonts are done glyph-by-glyph. Both approaches have their merits, and we are currently at a stage where we are trying to figure out how to best solve this in R. At the time of writing there is no doubt that gridtext is more complete and stable, but doing glyph-based shaping offers possibilities that are not possible with gridtext, e.g. setting tracking and flowing text along paths. All of this is highly experimental still, and there will need to be some changes in the graphic engine to make glyph-based rendering performant.&lt;/p>
&lt;h3 id="the-font-ier">The font-ier
&lt;a href="#the-font-ier">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>A big (for some) issue that I haven&amp;rsquo;t touched upon is support for ligatures. A &lt;strong>ligature&lt;/strong> is a glyph that represents multiple characters, as when &amp;ldquo;f&amp;rdquo; and &amp;ldquo;i&amp;rdquo; are substituted for the single glyph &amp;ldquo;ﬁ&amp;rdquo;. Ligatures are often used as flourishes in Western scripts but are essential for other scripts such as Arabic. Further, ligatures power emojis which have become an integral part of modern communication.&lt;/p>
&lt;p>While we don&amp;rsquo;t currently have support for ligatures, there&amp;rsquo;s no doubt that we need it. The exact mechanism for this is still up in the air because ligatures must be resolved at the font rendering level. Each font file may provide their own unique ligatures and the mapping from multiple characters to a single glyph can be encoded into a number of different substitution table formats in the font file. Because of this complexity it is often handled by a dedicated library such as
&lt;a href="https://www.freedesktop.org/wiki/Software/HarfBuzz/" target="_blank" rel="noopener">HarfBuzz&lt;/a>. This could of course be wrapped by an R package but since ligatures can not be encoded with unicode (for the most part), there is no way of precomputing the substitution and pass it on to the graphic devices. Whether ligature support can retroactively be added to old graphic devices is thus still up in the air.&lt;/p>
&lt;p>Text rendering in R is a delicate collaboration between graphic devices, the graphic engine, and additional support packages such as systemfonts and gridtext, but thankfully the focus and will is there in all parts to push this forward.&lt;/p></description></item><item><title>ragg 0.1.0</title><link>https://www.tidyverse.org/blog/2019/07/ragg-0-1-0/</link><pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/07/ragg-0-1-0/</guid><description>&lt;p>We&amp;rsquo;re stoked to announce the release of
&lt;a href="https://ragg.r-lib.org" target="_blank" rel="noopener">ragg 0.1.0&lt;/a> on CRAN. ragg provides a set of high quality and high performance raster devices, capable of producing png, tiff, or ppm files, or a matrix of raw color values directly within R.&lt;/p>
&lt;p>ragg is part of our broader effort to improve graphics performance and quality in R at all levels of the stack, so that you&amp;rsquo;ll benefit no matter what plotting framework you choose to use. Other parts of this efforts have been:&lt;/p>
&lt;ul>
&lt;li>Developing the
&lt;a href="https://github.com/r-lib/devoid" target="_blank" rel="noopener">devoid&lt;/a> package to allow more precise benchmarking of plotting code.&lt;/li>
&lt;li>Multiple improvements to rendering speed in grid in the latest R release (3.6.0).&lt;/li>
&lt;li>Performance improvements in
&lt;a href="https://ggplot2.tidyverse.org" target="_blank" rel="noopener">ggplot2&lt;/a> 3.2.0 both broadly and for sf plotting specifically.&lt;/li>
&lt;li>Performance improvements in
&lt;a href="https://gtable.r-lib.com" target="_blank" rel="noopener">gtable&lt;/a> 0.3.0.&lt;/li>
&lt;/ul>
&lt;h2 id="the-devices">The devices
&lt;a href="#the-devices">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>An R graphic device is an object that receives instructions from the graphic engine in R and translates that into some meaningful format for viewing. The graphic engine in R is the layer that sits between the graphic generating code in R and the devices, and is responsible for allowing the plethora of different output options from the same plot code. The output from a graphic device can either be a file, on screen, or in some other form. ragg provides a set of raster devices, that is, devices that rasterize the instructions and write it to some sort of raster output (e.g. a png file). This is opposed to vector devices such as &lt;code>pdf()&lt;/code> and &lt;code>svg()&lt;/code> that do not perform rasterization but write the instructions directly into a vector graphics format.&lt;/p>
&lt;p>ragg provides three different file outputs (png, tiff, and ppm), though it is important to note that everything, except for the serialization of the data into the file format, is equivalent. A case could be made for also including jpeg output, but this format is generally not useful for graphics as it introduces noticeable artifacts with line graphics.&lt;/p>
&lt;p>Apart from the three file-based devices, ragg also provides a device that gives direct access to the raster buffer from R. This means that you can plot directly into a matrix of color values which you can then further process in R, should you wish.&lt;/p>
&lt;h2 id="features">Features
&lt;a href="#features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are 5 main areas where ragg sets itself apart from the graphic devices already available:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Performance:&lt;/strong> ragg is faster than cairo, the standard anti-aliased device in R. Tests show that it is about twice as fast to render a moderately complex ggplot. See the
&lt;a href="https://ragg.r-lib.org/articles/ragg_performance.html" target="_blank" rel="noopener">Performance&lt;/a> vignette for more in-depth benchmarking.&lt;/li>
&lt;li>&lt;strong>Anti-aliasing:&lt;/strong> ragg is fully anti-aliased, as opposed to the cairo devices that only apply anti-aliasing to strokes and text (not fill). For a comparison, see the
&lt;a href="https://ragg.r-lib.org/articles/ragg_quality.html#shape-rendering" target="_blank" rel="noopener">shape rendering&lt;/a> section of the Quality vignette.&lt;/li>
&lt;li>&lt;strong>Text rendering:&lt;/strong> ragg provides high-quality rendering of rotated text, something that other raster devices struggle with. See the
&lt;a href="https://ragg.r-lib.org/articles/ragg_quality.html#text" target="_blank" rel="noopener">text&lt;/a> section of the Quality vignette for examples.&lt;/li>
&lt;li>&lt;strong>Font access:&lt;/strong> ragg has direct access to all your system fonts, without you having to do anything. All installed fonts on your system should be ready to use.&lt;/li>
&lt;li>&lt;strong>System independence:&lt;/strong> The rendering code in ragg is system independent and should be identical whether it has been rendered on Windows, macOS, or Linux. The only difference is the available fonts on the different systems.&lt;/li>
&lt;/ul>
&lt;h2 id="example">Example
&lt;a href="#example">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The ragg devices are used just like any other device, by starting them, running your plotting code, and turning them off (code below add some complexity in order to embed the created file in the page):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ragg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ggplot2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">fig_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#39;.png&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">agg_png&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">700&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">500&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">units&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#39;px&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diamonds&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_bar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fill&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">color&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">ggtitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;A fancy font&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">element_text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Daubmark&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">50&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">invisible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">dev.off&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">include_graphics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-06-26-ragg-0-1-0_files/figure-html/unnamed-chunk-1-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;p>ragg can also be used with &lt;code>ggsave()&lt;/code> by passing the device in as an argument:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">file&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">fig_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#39;.png&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">p&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">displ&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hwy&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">ggsave&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">device&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">agg_png&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">300&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Saving 7 x 4.33 in image&lt;/span>
&lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">include_graphics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-06-26-ragg-0-1-0_files/figure-html/unnamed-chunk-2-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;h2 id="life-cycle">Life cycle
&lt;a href="#life-cycle">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>ragg is currently to be considered
&lt;a href="https://www.tidyverse.org/lifecycle/#experimental" target="_blank" rel="noopener">experimental&lt;/a>. That is not to indicate that any API changes are to be expected, or that using it is not a safe long-term strategy. But we are continuing to invest and improve upon the graphic stack in R, and we cannot say whether ragg will be part of our final solution, or if it is just an interesting experiment. The experience gained in the graphic stack from building ragg will definitely be put to good use though, and you can expect more improvements in the future.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a> for much assistance in getting ragg to compile on all systems!&lt;/p></description></item></channel></rss>