<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>teaching | Tidyverse</title><link>https://www.tidyverse.org/tags/teaching/</link><atom:link href="https://www.tidyverse.org/tags/teaching/index.xml" rel="self" type="application/rss+xml"/><description>teaching</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Aug 2023 00:00:00 +0000</lastBuildDate><item><title>Teaching the tidyverse in 2023</title><link>https://www.tidyverse.org/blog/2023/08/teach-tidyverse-23/</link><pubDate>Mon, 07 Aug 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/08/teach-tidyverse-23/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html) -- not applicable
-->
&lt;p>Another year, another roundup of tidyverse updates, through the lens of an educator. As with previous
&lt;a href="https://www.tidyverse.org/blog/2021/08/teach-tidyverse-2021/">teaching the tidyverse posts&lt;/a>, much of what is discussed in this blog post has already been covered in package update posts, however the goal of this roundup is to summarize the highlights that are most relevant to teaching data science with the tidyverse, particularly to new learners.&lt;/p>
&lt;p>Specifically, I&amp;rsquo;ll discuss:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="#resource-refresh">Resource refresh&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#nine-core-packages-in-tidyverse-200">Nine core packages in tidyverse 2.0.0&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#conflict-resolution-in-the-tidyverse">Conflict resolution in the tidyverse&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#improved-and-expanded-_join-functionality">Improved and expanded &lt;code>*_join()&lt;/code> functionality&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#per-operation-grouping">Per operation grouping&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#quality-of-life-improvements-to-case_when-and-if_else">Quality of life improvements to &lt;code>case_when()&lt;/code> and &lt;code>if_else()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#new-syntax-for-separating-columns">New syntax for separating columns&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#new-argument-for-line-geoms-linewidth">New argument for line geoms: linewidth&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#other-highlights">Other highlights&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#coming-up">Coming up&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>And different from previous posts on this topic, this one comes with a video! If you&amp;rsquo;d like a live demo of the code examples, and a few more additional tips along the way, you can watch the video below.&lt;/p>
&lt;center>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/KsBBRHAgAhM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;/center>
&lt;p>Throughout this blog post you&amp;rsquo;ll encounter some code chunks with the comment &lt;code>previously&lt;/code>, indicating what you used to do in the tidyverse. Often these will be coupled with chunks with the comment &lt;code>now, optionally&lt;/code>, indicating what you &lt;em>can&lt;/em> now do with the tidyverse. And rarely, they will be coupled with chunks with the comment &lt;code>now&lt;/code>, indicating what you &lt;em>should&lt;/em> do instead now with the tidyverse.&lt;/p>
&lt;p>Let&amp;rsquo;s get started with the obligatory&amp;hellip;&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching core tidyverse packages&lt;/span> ──────────────────────── tidyverse 2.0.0 ──&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dplyr &lt;/span> 1.1.2 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>readr &lt;/span> 2.1.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>forcats &lt;/span> 1.0.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>stringr &lt;/span> 1.5.0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>ggplot2 &lt;/span> 3.4.2 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tibble &lt;/span> 3.2.1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>lubridate&lt;/span> 1.9.2 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tidyr &lt;/span> 1.3.0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>purrr &lt;/span> 1.0.1 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ────────────────────────────────────────── tidyverse_conflicts() ──&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Use the conflicted package (&lt;span style='color: #0000BB; font-style: italic;'>&amp;lt;http://conflicted.r-lib.org/&amp;gt;&lt;/span>) to force all conflicts to become errors&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And, let&amp;rsquo;s also load the
&lt;a href="https://allisonhorst.github.io/palmerpenguins/" target="_blank" rel="noopener">palmerpenguins&lt;/a> package that we will use in examples.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://allisonhorst.github.io/palmerpenguins/'>palmerpenguins&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="resource-refresh">Resource refresh
&lt;a href="#resource-refresh">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>R for Data Science, 2nd Edition is out!
&lt;a href="https://www.tidyverse.org/blog/2023/07/r4ds-2e/">This blog post&lt;/a> (and the
&lt;a href="https://r4ds.hadley.nz/preface-2e.html" target="_blank" rel="noopener">book&amp;rsquo;s preface&lt;/a>) outlines updates since the first edition. Updates to the book served as the motivation for many of the changes mentioned in the remainder of this post as as well as on the Tidyverse blog over the last year. Now that the book is out, you can expect the pace of change to slow down again for a while, which means plenty of time for phasing these changes into your teaching materials.&lt;/p>
&lt;p>One change in the 2nd Edition that will most likely affect almost all of your teaching materials is the use of the native R pipe (&lt;code>|&amp;gt;&lt;/code>) instead of the magrittr pipe (&lt;code>%&amp;gt;%&lt;/code>). If you&amp;rsquo;re not familiar with the similarities and differences between these operators, I recommend reading
&lt;a href="https://www.tidyverse.org/blog/2023/04/base-vs-magrittr-pipe/" target="_blank" rel="noopener">this comparison blog post&lt;/a>. And I strongly recommend making this update since it will allow students to perform piped operations with any R function, and hence allow them to keep their data pipeline workflows regardless of whether the next package they learn is from the tidyverse (or package that uses tidyverse principles) or not.&lt;/p>
&lt;h2 id="nine-core-packages-in-tidyverse-200">Nine core packages in tidyverse 2.0.0
&lt;a href="#nine-core-packages-in-tidyverse-200">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The main update in tidyverse 2.0.0, which was released in March 2023, is that it
&lt;a href="https://lubridate.tidyverse.org/" target="_blank" rel="noopener">lubridate&lt;/a> is now a core tidyverse package. The lubridate package that makes it easier to do the things R does with date-times, is now a core tidyverse package. So, while many of your scripts in the past may have started with&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># previously&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://lubridate.tidyverse.org'>lubridate&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>you can now just do&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># now&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>and the lubridate package will be loaded as well.&lt;/p>
&lt;p>If you, like me, use a graphic like the one below that maps the core tidyverse packages to phases of the data science cycle, here is an updated graphic including lubridate.&lt;/p>
&lt;p>&lt;img src="images/data-science.png" data-fig-alt="Data science cycle: import, tidy, transform, visualize, model, communicate. Packages readr and tibble are for import. Packages tidyr and purr for tidy and transform. Packages dplyr, stringr, forcats, and lubridate are for transform. Package ggplot2 is for visualize." />&lt;/p>
&lt;h2 id="conflict-resolution-in-the-tidyverse">Conflict resolution in the tidyverse
&lt;a href="#conflict-resolution-in-the-tidyverse">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>You may have also noticed that the package loading message for the tidyverse has been updated as well, and now advertises the
&lt;a href="https://conflicted.r-lib.org/" target="_blank" rel="noopener">conflicted&lt;/a> package.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ────────────────────────────────────────── tidyverse_conflicts() ──&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Use the conflicted package (&lt;span style='color: #0000BB; font-style: italic;'>&amp;lt;http://conflicted.r-lib.org/&amp;gt;&lt;/span>) to force all conflicts to become errors&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Conflict resolution in R, i.e., what to do if multiple packages that are loaded in a session have functions with the same name, can get tricky, and the conflicted package is designed to help with that. R&amp;rsquo;s default conflict resolution gives precedence to the most recently loaded package. For example, if you use the filter function before loading the tidyverse, R will use
&lt;a href="https://rdrr.io/r/stats/filter.html" target="_blank" rel="noopener">&lt;code>stats::filter()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Adelie"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Error in eval(expr, envir, enclos): object 'species' not found&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>However, after loading the tidyverse, when you call
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a>, R will &lt;em>silently&lt;/em> choose
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>dplyr::filter()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Adelie"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 152 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie Torgersen 39.1 18.7 181 &lt;span style='text-decoration: underline;'>3&lt;/span>750&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie Torgersen 39.5 17.4 186 &lt;span style='text-decoration: underline;'>3&lt;/span>800&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie Torgersen 40.3 18 195 &lt;span style='text-decoration: underline;'>3&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie Torgersen &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie Torgersen 36.7 19.3 193 &lt;span style='text-decoration: underline;'>3&lt;/span>450&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie Torgersen 39.3 20.6 190 &lt;span style='text-decoration: underline;'>3&lt;/span>650&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie Torgersen 38.9 17.8 181 &lt;span style='text-decoration: underline;'>3&lt;/span>625&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie Torgersen 39.2 19.6 195 &lt;span style='text-decoration: underline;'>4&lt;/span>675&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie Torgersen 34.1 18.1 193 &lt;span style='text-decoration: underline;'>3&lt;/span>475&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie Torgersen 42 20.2 190 &lt;span style='text-decoration: underline;'>4&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 142 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 2 more variables: sex &amp;lt;fct&amp;gt;, year &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This silent conflict resolution approach works fine until it doesn&amp;rsquo;t, and then it can be very frustrating to debug. The conflicted package does not allow for silent conflict resolution:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://conflicted.r-lib.org/'>conflicted&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Adelie"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'>:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> &lt;span style='color: #555555;'>[conflicted]&lt;/span> &lt;span style='font-weight: bold;'>filter&lt;/span> found in 2 packages.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Either pick the one you want with `::`:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::filter&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> &lt;span style='color: #0000BB;'>stats&lt;/span>::filter&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Or declare a preference with `conflicts_prefer()`:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> `conflicts_prefer(dplyr::filter)`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> `conflicts_prefer(stats::filter)`&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can, of course, use
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>dplyr::filter()&lt;/code>&lt;/a> but if you have a bunch of data wrangling pipelines, which is likely the case if you&amp;rsquo;re teaching data wrangling, it can get pretty busy.&lt;/p>
&lt;p>Instead, with conflicted, you can explicitly declare which
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> you want to use at the beginning (of a session, of a script, or of an R Markdown or Quarto file) with
&lt;a href="https://conflicted.r-lib.org/reference/conflicts_prefer.html" target="_blank" rel="noopener">&lt;code>conflicts_prefer()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://conflicted.r-lib.org/reference/conflicts_prefer.html'>conflicts_prefer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>dplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>[conflicted]&lt;/span> Will prefer &lt;span style='color: #0000BB; font-weight: bold;'>dplyr&lt;/span>::filter over any other package.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span> &lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Adelie"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 152 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie Torgersen 39.1 18.7 181 &lt;span style='text-decoration: underline;'>3&lt;/span>750&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie Torgersen 39.5 17.4 186 &lt;span style='text-decoration: underline;'>3&lt;/span>800&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie Torgersen 40.3 18 195 &lt;span style='text-decoration: underline;'>3&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie Torgersen &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie Torgersen 36.7 19.3 193 &lt;span style='text-decoration: underline;'>3&lt;/span>450&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie Torgersen 39.3 20.6 190 &lt;span style='text-decoration: underline;'>3&lt;/span>650&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie Torgersen 38.9 17.8 181 &lt;span style='text-decoration: underline;'>3&lt;/span>625&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie Torgersen 39.2 19.6 195 &lt;span style='text-decoration: underline;'>4&lt;/span>675&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie Torgersen 34.1 18.1 193 &lt;span style='text-decoration: underline;'>3&lt;/span>475&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie Torgersen 42 20.2 190 &lt;span style='text-decoration: underline;'>4&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 142 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 2 more variables: sex &amp;lt;fct&amp;gt;, year &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Getting back to the package loading message&amp;hellip; It can be tempting, particularly in a teaching scenario, particularly to an audience of new learners, and particularly if you teach with slides and messages take up valuable slide real estate, I would urge you to not hide startup messages from teaching materials. Instead, address them early on to:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Encourage reading and understanding messages, warnings, and errors &amp;ndash; teaching people to read error messages is hard enough, it&amp;rsquo;s going to be even harder if you&amp;rsquo;re not modeling that to them.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Help during hard-to-debug situations resulting from base R&amp;rsquo;s silent conflict resolution &amp;ndash; because, let&amp;rsquo;s face it, someone in your class, if not you during a live-coding session, will see that pesky object not found error at some point when using
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="improved-and-expanded-_join-functionality">Improved and expanded &lt;code>*_join()&lt;/code> functionality
&lt;a href="#improved-and-expanded-_join-functionality">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://dplyr.tidyverse.org/" target="_blank" rel="noopener">dplyr&lt;/a> package has long had the
&lt;a href="https://dplyr.tidyverse.org/articles/two-table.html" target="_blank" rel="noopener">&lt;code>*_join()&lt;/code> family of functions&lt;/a> for joining data frames. dplyr 1.1.0 introduced a
&lt;a href="https://www.tidyverse.org/blog/2023/01/dplyr-1-1-0-joins/" target="_blank" rel="noopener">bunch of extensions&lt;/a> that bring joins closer to the power available in other systems like SQL and &lt;code>data.table&lt;/code>.&lt;/p>
&lt;h3 id="join_by">&lt;code>join_by()&lt;/code>
&lt;a href="#join_by">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>New functionality for join functions includes a new
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> function for the &lt;code>by&lt;/code> argument. So, while in the past your code may have looked like the following:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># previously
*_join(
x, y,
by = c("&lt;x var>" = "&lt;y var>")
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>you can now do:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># now, optionally
*_join(
x, y,
by = join_by(&lt;x var> == &lt;y var>)
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>For example, suppose you have the following information on the three islands we have penguins from:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>islands&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>name&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>coordinates&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Torgersen"&lt;/span>, &lt;span class='s'>"64°46′S 64°5′W"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Biscoe"&lt;/span>, &lt;span class='s'>"65°26′S 65°30′W"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Dream"&lt;/span>, &lt;span class='s'>"64°44′S 64°14′W"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>islands&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; name coordinates &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Torgersen 64°46′S 64°5′W &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Biscoe 65°26′S 65°30′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Dream 64°44′S 64°14′W&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can join this to the penguins data frame by matching the &lt;code>island&lt;/code> column in the penguins data frame to the &lt;code>name&lt;/code> column in the islands data frame:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>islands&lt;/span>, &lt;/span>
&lt;span> by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>island&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='nv'>island&lt;/span>, &lt;span class='nv'>coordinates&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 344 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species island coordinates &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 334 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>While &lt;code>by = c(&amp;quot;island&amp;quot; = &amp;quot;name&amp;quot;)&lt;/code> would still work, I would recommend teaching
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> over &lt;code>by&lt;/code> so that:&lt;/p>
&lt;ol>
&lt;li>You can read it out loud as &amp;ldquo;where x is equal to y&amp;rdquo;, just like in other logical statements where &lt;code>==&lt;/code> is pronounced as &amp;ldquo;is equal to&amp;rdquo;.&lt;/li>
&lt;li>You don&amp;rsquo;t have to worry about &lt;code>by = c(x = y)&lt;/code> (which is invalid) vs. &lt;code>by = c(x = &amp;quot;y&amp;quot;)&lt;/code> (which is valid) vs. &lt;code>by = c(&amp;quot;x&amp;quot; = &amp;quot;y&amp;quot;)&lt;/code> (which is also valid).&lt;/li>
&lt;/ol>
&lt;p>In fact, for succinctness, you might avoid the argument name and express this as:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>islands&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>island&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="handling-various-matches">Handling various matches
&lt;a href="#handling-various-matches">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The &lt;code>*_join()&lt;/code> functions now have additional arguments for handling &lt;code>multiple&lt;/code> matches and &lt;code>unmatched&lt;/code> rows as well as for specifying the &lt;code>relationship&lt;/code> between the two data frames.&lt;/p>
&lt;p>So, while in the past your code may have looked like the following:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># previously
*_join(
x, y, by
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>you can now do:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># now, optionally
*_join(
x, y, by,
multiple = "all",
unmatched = "drop",
relationship = NULL
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Let&amp;rsquo;s set up three data frames to demonstrate the new functionality:&lt;/p>
&lt;ul>
&lt;li>Information about three penguins, one row per &lt;code>samp_id&lt;/code>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>three_penguins&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>samp_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>island&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='s'>"Adelie"&lt;/span>, &lt;span class='s'>"Torgersen"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='s'>"Gentoo"&lt;/span>, &lt;span class='s'>"Biscoe"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='s'>"Chinstrap"&lt;/span>, &lt;span class='s'>"Dream"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>three_penguins&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 Chinstrap Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;ul>
&lt;li>Information about weight measurements of these penguins, one row per &lt;code>samp_id&lt;/code>, &lt;code>meas_id&lt;/code> combination:&lt;/li>
&lt;/ul>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>samp_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>meas_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>3220&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>3250&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>4730&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>4725&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>4000&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>4050&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>weight_measurements&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id body_mass_g&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;ul>
&lt;li>Information about flipper measurements of these penguins, one row per &lt;code>samp_id&lt;/code>, &lt;code>meas_id&lt;/code> combination:&lt;/li>
&lt;/ul>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>flipper_measurements&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>samp_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>meas_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>flipper_length_mm&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>193&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>195&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>214&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>216&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>203&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>203&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>flipper_measurements&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id flipper_length_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 2 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 1 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 2 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 1 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 2 203&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>One-to-many relationships don&amp;rsquo;t require extra care, they just work:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>three_penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>weight_measurements&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id species island meas_id body_mass_g&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Adelie Torgersen 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 Adelie Torgersen 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 Gentoo Biscoe 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 Gentoo Biscoe 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 Chinstrap Dream 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 Chinstrap Dream 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>However, many-to-many relationships require some extra care. For example, if we join the &lt;code>three_penguins&lt;/code> data frame to the &lt;code>flipper_measurements&lt;/code> data frame, we get a warning:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>flipper_measurements&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning in left_join(weight_measurements, flipper_measurements, join_by(samp_id)): Detected an unexpected many-to-many relationship between `x` and `y`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 1 of `x` matches multiple rows in `y`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 1 of `y` matches multiple rows in `x`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> If a many-to-many relationship is expected, set `relationship =&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; "many-to-many"` to silence this warning.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 12 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id.x body_mass_g meas_id.y flipper_length_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 2 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 2 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 1 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 2 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 1 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 2 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 1 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 2 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 1 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 2 203&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We get a warning about unexpected many-to-many relationships (unexpected because we didn&amp;rsquo;t specify this type of relationship in our join call), and the warning suggests setting &lt;code>relationship = &amp;quot;many-to-many&amp;quot;&lt;/code>. And note that we went from 6 rows (measurements) to 12, which is also unexpected.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>flipper_measurements&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>, relationship &lt;span class='o'>=&lt;/span> &lt;span class='s'>"many-to-many"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 12 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id.x body_mass_g meas_id.y flipper_length_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 2 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 2 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 1 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 2 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 1 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 2 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 1 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 2 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 1 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 2 203&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With &lt;code>relationship = &amp;quot;many-to-many&amp;quot;&lt;/code>, we no longer get a warning. However, the &amp;ldquo;explosion of rows&amp;rdquo; issue is still there. Addressing that requires rethinking what we join the two data frames by:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>flipper_measurements&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>, &lt;span class='nv'>meas_id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id body_mass_g flipper_length_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 203&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can see that while the warning nudged us towards setting &lt;code>relationship = &amp;quot;many-to-many&amp;quot;&lt;/code>, turns out the correct way to address the problem was to join by both &lt;code>samp_id&lt;/code> and &lt;code>meas_id&lt;/code>.&lt;/p>
&lt;p>We&amp;rsquo;ll wrap up our discussion on new functionality for handling &lt;code>unmatched&lt;/code> cases. We&amp;rsquo;ll create one more data frame (&lt;code>four_penguins&lt;/code>) to exemplify this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>four_penguins&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>samp_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>island&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='s'>"Adelie"&lt;/span>, &lt;span class='s'>"Torgersen"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='s'>"Gentoo"&lt;/span>, &lt;span class='s'>"Biscoe"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='s'>"Chinstrap"&lt;/span>, &lt;span class='s'>"Dream"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>4&lt;/span>, &lt;span class='s'>"Adelie"&lt;/span>, &lt;span class='s'>"Biscoe"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>four_penguins&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 Chinstrap Dream &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 4 Adelie Biscoe&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If we just join &lt;code>weight_measurements&lt;/code> to &lt;code>four_penguins&lt;/code>, the unmatched fourth penguin silently disappears, which is less than ideal, particularly in a more realistic scenario with many more observations:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>four_penguins&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id body_mass_g species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 Chinstrap Dream &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 Chinstrap Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Setting &lt;code>unmatched = &amp;quot;error&amp;quot;&lt;/code> protects you from accidentally dropping rows:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>four_penguins&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>, unmatched &lt;span class='o'>=&lt;/span> &lt;span class='s'>"error"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `left_join()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Each row of `y` must be matched by `x`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 4 of `y` was not matched.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Once you see the error message, you can decide how to handle the unmatched rows, e.g., explicitly drop them.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>four_penguins&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>, unmatched &lt;span class='o'>=&lt;/span> &lt;span class='s'>"drop"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id body_mass_g species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 Chinstrap Dream &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 Chinstrap Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>There are many more developments related to &lt;code>*_join()&lt;/code> functions (e.g.,
&lt;a href="https://www.tidyverse.org/blog/2023/01/dplyr-1-1-0-joins/#inequality-joins">inequality joins&lt;/a> and
&lt;a href="https://www.tidyverse.org/blog/2023/01/dplyr-1-1-0-joins/#rolling-joins">rolling joins&lt;/a>), but many of these likely wouldn&amp;rsquo;t come up in an introductory course so we won&amp;rsquo;t get into their details. A good place to read more about them is
&lt;a href="https://r4ds.hadley.nz/joins.html#sec-non-equi-joins" target="_blank" rel="noopener">R for Data Science, 2nd edition&lt;/a>.&lt;/p>
&lt;p>Exploding joins (i.e., joins that result in a larger number of rows than either of the data frames from bie) can be hard to debug for students! Teaching them the tools to diagnose whether the join they performed, and that may not have given an error, is indeed the one they wanted to perform. Did they lose any cases? Did they gain an unexpected amount of cases? Did they perform a join without thinking and take down the entire teaching server? These things happen, particularly if students are working with their own data for an open-ended project!&lt;/p>
&lt;h2 id="per-operation-grouping">Per operation grouping
&lt;a href="#per-operation-grouping">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To calculate grouped summary statistics, you previously needed to do something like this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># previously&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now, an alternative approach is to pass the groups directly in the
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarize()&lt;/code>&lt;/a> call:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># now, optionally&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>x&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Let&amp;rsquo;s take a look at the differences between these two approaches before making a recommendation for one over the other.
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> can result in groups that persist in the output, particularly when grouping by multiple variables. For example, in the following pipeline we group the penguins data frame by &lt;code>species&lt;/code> and &lt;code>sex&lt;/code>, find mean body weights for each resulting species / sex combination, and then show the first observation in the output with &lt;code>slice_head(n = 1)&lt;/code>. Since the output is grouped by species, this results in one summary statistic per species.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sex&lt;/span>, &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='nv'>sex&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mean_bw &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice_head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>n &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `summarise()` has grouped output by 'species'. You can override using the&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `.groups` argument.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Groups: species [3]&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species sex mean_bw&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Adelie female &lt;span style='text-decoration: underline;'>3&lt;/span>369.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Chinstrap female &lt;span style='text-decoration: underline;'>3&lt;/span>527.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Gentoo female &lt;span style='text-decoration: underline;'>4&lt;/span>680.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If we explicitly drop the groups in the
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarize()&lt;/code>&lt;/a> call, so that the output is no longer grouped, we get just one row in our output.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sex&lt;/span>, &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='nv'>sex&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mean_bw &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>, .groups &lt;span class='o'>=&lt;/span> &lt;span class='s'>"drop"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice_head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>n &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species sex mean_bw&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Adelie female &lt;span style='text-decoration: underline;'>3&lt;/span>369.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This pair of examples show that whether your output is grouped or not can affect downstream results, and if you&amp;rsquo;re a
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> user, you&amp;rsquo;ve probably been burnt by this once or twice.&lt;/p>
&lt;p>Per-operation grouping allows you to define groups in a &lt;code>.by&lt;/code> argument, and these groups don&amp;rsquo;t persist. So, regardless of whether you group by one or two variables, the resulting data frame after calculating a summary statistic is not grouped.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># group by 1 variable&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sex&lt;/span>, &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> mean_bw &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>species&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species mean_bw&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Adelie &lt;span style='text-decoration: underline;'>3&lt;/span>706.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Gentoo &lt;span style='text-decoration: underline;'>5&lt;/span>092.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Chinstrap &lt;span style='text-decoration: underline;'>3&lt;/span>733.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># group by 2 variables&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sex&lt;/span>, &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> mean_bw &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> .by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='nv'>sex&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species sex mean_bw&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Adelie male &lt;span style='text-decoration: underline;'>4&lt;/span>043.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Adelie female &lt;span style='text-decoration: underline;'>3&lt;/span>369.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Gentoo female &lt;span style='text-decoration: underline;'>4&lt;/span>680.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Gentoo male &lt;span style='text-decoration: underline;'>5&lt;/span>485.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> Chinstrap female &lt;span style='text-decoration: underline;'>3&lt;/span>527.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> Chinstrap male &lt;span style='text-decoration: underline;'>3&lt;/span>939.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>So, when teaching grouped operations, you now have the option to choose between these two approaches. The most important teaching tip I can give, particularly for teaching to new learners, is to choose one method and stick to it. The &lt;code>.by&lt;/code> method will result in fewer outputs that are unintentionally grouped, and hence, might potentially be easier for new learners. And while this approach is mentioned in R for Data Science, 2nd edition, the
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> approach is described in more detail.&lt;/p>
&lt;p>On the other hand. for more experienced learners, particularly those learning to design their own functions and packages, the evolution of grouping in the tidyverse can be an interesting subject to review.&lt;/p>
&lt;h2 id="quality-of-life-improvements-to-case_when-and-if_else">Quality of life improvements to &lt;code>case_when()&lt;/code> and &lt;code>if_else()&lt;/code>
&lt;a href="#quality-of-life-improvements-to-case_when-and-if_else">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="case_when">&lt;code>case_when()&lt;/code>
&lt;a href="#case_when">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Previously, when writing a
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> statement, you had to use &lt;code>TRUE&lt;/code> to indicate &amp;ldquo;all else&amp;rdquo;. Additionally,
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> has historically been strict about the types on the right-hand side, e.g., requiring &lt;code>NA_character&lt;/code> when other right-hand side values are characters, and not letting you get away with just &lt;code>NA&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># previously
df |>
mutate(
x = case_when(
&lt;condition 1> ~ "value 1",
&lt;condition 2> ~ "value 2",
&lt;condition 3> ~ "value 3",
TRUE ~ NA_character_
)
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now, optionally, you can define &amp;ldquo;all else&amp;rdquo; in a &lt;code>.default&lt;/code> argument of
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> and you no longer need to worry about the type of &lt;code>NA&lt;/code> you use on the right-hand side.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># now, optionally
df |>
mutate(
x = case_when(
&lt;condition 1> ~ "value 1",
&lt;condition 2> ~ "value 2",
&lt;condition 3> ~ "value 3",
.default = NA
)
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>For example, you can now do something like the following when creating a categorical version of a numerical variable that has some &lt;code>NA&lt;/code>s.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> bm_cat &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/case_when.html'>case_when&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/NA.html'>is.na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='kc'>NA&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>body_mass_g&lt;/span> &lt;span class='o'>&amp;lt;&lt;/span> &lt;span class='m'>3550&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"Small"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/between.html'>between&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>, &lt;span class='m'>3550&lt;/span>, &lt;span class='m'>4750&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"Medium"&lt;/span>,&lt;/span>
&lt;span> .default &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Large"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/relocate.html'>relocate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>, &lt;span class='nv'>bm_cat&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 344 × 9&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; body_mass_g bm_cat species island bill_length_mm bill_depth_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>750 Medium Adelie Torgersen 39.1 18.7&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>800 Medium Adelie Torgersen 39.5 17.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>250 Small Adelie Torgersen 40.3 18 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> Adelie Torgersen &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>450 Small Adelie Torgersen 36.7 19.3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>650 Medium Adelie Torgersen 39.3 20.6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>625 Medium Adelie Torgersen 38.9 17.8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='text-decoration: underline;'>4&lt;/span>675 Medium Adelie Torgersen 39.2 19.6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>475 Small Adelie Torgersen 34.1 18.1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='text-decoration: underline;'>4&lt;/span>250 Medium Adelie Torgersen 42 20.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 334 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 3 more variables: flipper_length_mm &amp;lt;int&amp;gt;, sex &amp;lt;fct&amp;gt;, year &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="if_else">&lt;code>if_else()&lt;/code>
&lt;a href="#if_else">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Similarly,
&lt;a href="https://dplyr.tidyverse.org/reference/if_else.html" target="_blank" rel="noopener">&lt;code>if_else()&lt;/code>&lt;/a> is no longer as strict about typed missing values either.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> bm_unit &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/if_else.html'>if_else&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>!&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/NA.html'>is.na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/paste.html'>paste&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>, &lt;span class='s'>"g"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='kc'>NA&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/relocate.html'>relocate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>, &lt;span class='nv'>bm_unit&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 344 × 9&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; body_mass_g bm_unit species island bill_length_mm bill_depth_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>750 3750 g Adelie Torgersen 39.1 18.7&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>800 3800 g Adelie Torgersen 39.5 17.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>250 3250 g Adelie Torgersen 40.3 18 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> Adelie Torgersen &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>450 3450 g Adelie Torgersen 36.7 19.3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>650 3650 g Adelie Torgersen 39.3 20.6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>625 3625 g Adelie Torgersen 38.9 17.8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='text-decoration: underline;'>4&lt;/span>675 4675 g Adelie Torgersen 39.2 19.6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>475 3475 g Adelie Torgersen 34.1 18.1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='text-decoration: underline;'>4&lt;/span>250 4250 g Adelie Torgersen 42 20.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 334 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 3 more variables: flipper_length_mm &amp;lt;int&amp;gt;, sex &amp;lt;fct&amp;gt;, year &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>While these may be seemingly small improvements, I think they have huge benefits for teaching and learning. It&amp;rsquo;s a blessing to not have to introduce &lt;code>NA_character_&lt;/code> and friends as early as introducing
&lt;a href="https://dplyr.tidyverse.org/reference/if_else.html" target="_blank" rel="noopener">&lt;code>if_else()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a>! Different types of &lt;code>NA&lt;/code>s are a good topic for a course on R as a programming language, statistical computing, etc. but they are unnecessarily complex for an introductory course.&lt;/p>
&lt;h2 id="new-syntax-for-separating-columns">New syntax for separating columns
&lt;a href="#new-syntax-for-separating-columns">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The following table summarizes new syntax for separating columns in tidyr that supersede
&lt;a href="https://tidyr.tidyverse.org/reference/extract.html" target="_blank" rel="noopener">&lt;code>extract()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/separate.html" target="_blank" rel="noopener">&lt;code>separate()&lt;/code>&lt;/a>, and
&lt;a href="https://tidyr.tidyverse.org/reference/separate_rows.html" target="_blank" rel="noopener">&lt;code>separate_rows()&lt;/code>&lt;/a>. These updates are motivated by the goal of achieving a set of functions that have more consistent names and arguments, have better performance, and provide a new approach for handling problems:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">&lt;/th>
&lt;th align="left">&lt;strong>MAKE COLUMNS&lt;/strong>&lt;/th>
&lt;th align="left">&lt;strong>MAKE ROWS&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">Separate with delimiter&lt;/td>
&lt;td align="left">
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_delim()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">
&lt;a href="https://tidyr.tidyverse.org/reference/separate_longer_delim.html" target="_blank" rel="noopener">&lt;code>separate_longer_delim()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Separate by position&lt;/td>
&lt;td align="left">
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_position()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">
&lt;a href="https://tidyr.tidyverse.org/reference/separate_longer_delim.html" target="_blank" rel="noopener">&lt;code>separate_longer_position()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Separate with regular expression&lt;/td>
&lt;td align="left">&lt;/td>
&lt;td align="left">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Here is an example for using some of these functions. Let&amp;rsquo;s suppose we have data on three penguins with their descriptions.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>three_penguin_descriptions&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>description&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='s'>"Species: Adelie, Island - Torgersen"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='s'>"Species: Gentoo, Island - Biscoe"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='s'>"Species: Chinstrap, Island - Dream"&lt;/span>,&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>three_penguin_descriptions&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id description &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Species: Adelie, Island - Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 Species: Gentoo, Island - Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 Species: Chinstrap, Island - Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can seaprate the description column into &lt;code>species&lt;/code> and &lt;code>island&lt;/code> with
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_delim()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>three_penguin_descriptions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate_wider_delim.html'>separate_wider_delim&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> cols &lt;span class='o'>=&lt;/span> &lt;span class='nv'>description&lt;/span>,&lt;/span>
&lt;span> delim &lt;span class='o'>=&lt;/span> &lt;span class='s'>", "&lt;/span>,&lt;/span>
&lt;span> names &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"species"&lt;/span>, &lt;span class='s'>"island"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Species: Adelie Island - Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 Species: Gentoo Island - Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 Species: Chinstrap Island - Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Or we can do so with regular expressions:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>three_penguin_descriptions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate_wider_delim.html'>separate_wider_regex&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> cols &lt;span class='o'>=&lt;/span> &lt;span class='nv'>description&lt;/span>,&lt;/span>
&lt;span> patterns &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='s'>"Species: "&lt;/span>, species &lt;span class='o'>=&lt;/span> &lt;span class='s'>"[^,]+"&lt;/span>, &lt;/span>
&lt;span> &lt;span class='s'>", "&lt;/span>, &lt;/span>
&lt;span> &lt;span class='s'>"Island - "&lt;/span>, island &lt;span class='o'>=&lt;/span> &lt;span class='s'>".*"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 Chinstrap Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If teaching folks coming from doing data manipulation in spreadsheets, leverage that to motivate different types of &lt;code>separate_*()&lt;/code> functions, and show the benefits of programming over point-and-click software for more advanced operations like separating longer and separating with regular expressions.&lt;/p>
&lt;h2 id="new-argument-for-line-geoms-linewidth">New argument for line geoms: &lt;code>linewidth&lt;/code>
&lt;a href="#new-argument-for-line-geoms-linewidth">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you, like me, have a bunch of scatterplots with smooth lines overlaid on them, you might run into the following warning.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># previously&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>flipper_length_mm&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_smooth.html'>geom_smooth&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>size &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Please use `linewidth` instead.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>This warning is displayed once every 8 hours.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>Call `lifecycle::last_lifecycle_warnings()` to see where this warning was&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>generated.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; `geom_smooth()` using method = 'loess' and formula = 'y ~ x'&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-42-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Instead of &lt;code>size&lt;/code>, you should now be using &lt;code>linewidth&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># now&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>flipper_length_mm&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_smooth.html'>geom_smooth&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>linewidth &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `geom_smooth()` using method = 'loess' and formula = 'y ~ x'&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-43-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>The teaching tip should be obvious here&amp;hellip; Check the output of your old teaching materials thoroughly to not make a fool of yourself when teaching! 🤣&lt;/p>
&lt;h2 id="other-highlights">Other highlights
&lt;a href="#other-highlights">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>purrr 1.0.0: While purrr is likely not a common topic in introductory data science curricula, if you do teach iteration with purrr, you&amp;rsquo;ll want to check out the
&lt;a href="https://www.tidyverse.org/blog/2022/12/purrr-1-0-0/" target="_blank" rel="noopener">purrr 1.0.0 blog post&lt;/a>. I also highly recommend
&lt;a href="https://youtu.be/EGAs7zuRutY" target="_blank" rel="noopener">Hadley&amp;rsquo;s purrr video&lt;/a> to those who are new to purrr as well as those who want to quickly review most recent updates to it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>webR 0.1.0: webR provides a framework for creating websites where users can run R code directly within the web browser, without R installed on their device or a supporting computational R server. This is hugely exciting for writing educational materials, like interactive lesson notes, and there&amp;rsquo;s already a Quarto extension that allows you to do this: &lt;a href="https://github.com/coatless/quarto-webr">https://github.com/coatless/quarto-webr&lt;/a>. I think this is an important space to watch for educators!&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="coming-up">Coming up
&lt;a href="#coming-up">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I will be teaching a &amp;ldquo;Teaching Data Science Masterclass&amp;rdquo; at posit::conf(2023), with a module specifically on teaching the Tidyverse.
&lt;a href="https://youtu.be/5TVd_whxUus" target="_blank" rel="noopener">Watch the course trailer&lt;/a> and
&lt;a href="https://reg.conf.posit.co/flow/posit/positconf23/attendee-portal/page/sessioncatalog?search=%22Teaching%20Data%20Science%20Masterclass%22&amp;amp;search.sessiontype=1675316728702001wr6r" target="_blank" rel="noopener">read the full course description&lt;/a> if you&amp;rsquo;d like to find out more and sign up!&lt;/p></description></item><item><title>Teaching the tidyverse in 2021</title><link>https://www.tidyverse.org/blog/2021/08/teach-tidyverse-2021/</link><pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/08/teach-tidyverse-2021/</guid><description>&lt;!--
TODO:
* [ x ] Look over / edit the post's title in the yaml
* [ x ] Edit (or delete) the description; note this appears in the Twitter card
* [ x ] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [ x ] Find photo &amp; update yaml metadata
* [ x ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ x ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ x ] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ x ] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html) -- not applicable
-->
&lt;p>Last summer I wrote a series of blog posts titled
&lt;a href="https://education.rstudio.com/blog/2020/07/teaching-the-tidyverse-in-2020-part-4-when-to-purrr/" target="_blank" rel="noopener">teaching the tidyverse in 2020&lt;/a>. As we quickly approach the end of the summer (in the northern hemisphere) and the start of a new academic year, it seems like a good time to provide a new update for teaching the tidyverse, in 2021. The main audience for this post is educators who teach the tidyverse and who might want to bring their teaching materials up to date with updates to the tidyverse that happened over the past year. Much of what is discussed here has already been covered in package update posts on this blog, but my goal is to summarize the highlights that are most relevant to teaching data science with the tidyverse, particularly to new learners.&lt;/p>
&lt;p>Specifically, I&amp;rsquo;ll discuss&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="#new-teaching-and-learning-resources">New teaching and learning resources&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#lifecycle-stages">Lifecycle stages&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#making-reproducible-examples-with-reprex">Making reproducible examples with &lt;strong>reprex&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#building-on-tidyverse-for-modeling-with-tidymodels">Building on the tidyverse for modeling with &lt;strong>tidymodels&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#reading-data-with-readr">Reading data with &lt;strong>readr&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#web-scraping-with-rvest">Web scraping with &lt;strong>rvest&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#sql-and-datatable-translations-with-dbplyr-and-dtplyr">SQL and data.table translations with &lt;strong>dbplyr&lt;/strong> and &lt;strong>dtplyr&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Let&amp;rsquo;s get started!&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching packages&lt;/span> ─────────────────────────────────────── tidyverse 1.3.1 ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>ggplot2&lt;/span> 3.3.5 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>purrr &lt;/span> 0.3.4&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tibble &lt;/span> 3.1.4 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dplyr &lt;/span> 1.0.7&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tidyr &lt;/span> 1.1.3 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>stringr&lt;/span> 1.4.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>readr &lt;/span> 2.0.1 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>forcats&lt;/span> 0.5.1&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ────────────────────────────────────────── tidyverse_conflicts() ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="new-teaching-and-learning-resources">New teaching and learning resources
&lt;a href="#new-teaching-and-learning-resources">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Before we dive into specific package functionality updates, I&amp;rsquo;d like to highlight two new teaching and learning resources:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Cheatsheets:&lt;/strong> Some of the most popular learning resources for the tidyverse are the cheatsheets, many of which have recently been updated. Huge thanks to our intern
&lt;a href="https://twitter.com/avperny" target="_blank" rel="noopener">Averi Perny&lt;/a> on the fantastic work on this project! You can read more about the updates
&lt;a href="https://blog.rstudio.com/2021/08/23/cheat-sheet-updates/" target="_blank" rel="noopener">here&lt;/a> and find the new cheatsheets
&lt;a href="https://www.rstudio.com/resources/cheatsheets/" target="_blank" rel="noopener">here&lt;/a>.&lt;/li>
&lt;li>&lt;strong>ggplot2 FAQ:&lt;/strong> A new resource that might be useful for learners is the FAQ we&amp;rsquo;ve recently developed for ggplot2, which you can access
&lt;a href="https://ggplot2.tidyverse.org/articles/" target="_blank" rel="noopener">here&lt;/a>. These were compiled based on popular questions on StackOverflow and RStudio Community. Each question is accompanied with a short answer as well as an expanded example.&lt;/li>
&lt;/ul>
&lt;h2 id="lifecycle-stages">Lifecycle stages
&lt;a href="#lifecycle-stages">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://lifecycle.r-lib.org/" target="_blank" rel="noopener">&lt;strong>lifecycle&lt;/strong>&lt;/a> package is used to manage the lifecycle of functions and features within the tidyverse, with clear messaging about what is still experimental and what the tidyverse team is moving away from in the future. But instead of focusing on the package that implements this concept, when teaching, I recommend focusing on the stages of the lifecycle instead. These are &lt;em>experimental&lt;/em>, &lt;em>stable&lt;/em>, &lt;em>deprecated&lt;/em>, and &lt;em>superseded&lt;/em>. The lifecycle stages are a useful guide for teaching because they help you see what the tidyverse is moving toward and what it&amp;rsquo;s moving away from. Being aware of the lifecycle stages (and their associated badges) can be helpful as you review and revise your teaching materials or as you consider incorporating new tooling into your teaching.&lt;/p>
&lt;p>The diagram below depicts the lifecycle stages of functions and packages in the tidyverse.&lt;/p>
&lt;p>&lt;img src="lifecycle.png" alt="A diagram showing the transitions between the four main stages: experimental can become stable and stable can become deprecated or superseded.">&lt;/p>
&lt;p>Let&amp;rsquo;s discuss each of these stages in detail, along with recommendations on how you might consider them in the context of teaching:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;img src="lifecycle-stable.svg" alt="Stable" style="vertical-align:middle"/> Stable indicates that breaking changes will be avoided where possible, and they&amp;rsquo;re only made if the long term benefit of such a change exceeds the short term pain of changing existing code. If breaking changes are needed, they will occur gradually. This is the default state for most functions in the tidyverse and hence the badge is generally not shown. Teaching tip: feel free to teach any stable functions, they&amp;rsquo;re here to stay for the long run!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;img src="lifecycle-deprecated.svg" alt="Deprecated" style="vertical-align:middle"/> If a function is noted as deprecated, this means a better alternative is available and this function is scheduled for removal. Generally functions will first be soft deprecated and then deprecated. Very important functions that become deprecated might next be defunct, which means that function continues to exist but the deprecation warning turns into an error. An example of a deprecated function is
&lt;a href="https://tibble.tidyverse.org/reference/deprecated.html" target="_blank" rel="noopener">&lt;code>tibble::data_frame()&lt;/code>&lt;/a>, with the preferred alternative
&lt;a href="https://tibble.tidyverse.org/reference/tibble.html" target="_blank" rel="noopener">&lt;code>tibble::tibble()&lt;/code>&lt;/a>. Arguments to functions can also be deprecated, e.g., in
&lt;a href="https://tidyr.tidyverse.org/reference/nest.html" target="_blank" rel="noopener">&lt;code>tidyr::nest()&lt;/code>&lt;/a> the new argument &lt;code>new_col&lt;/code> makes the former &lt;code>.key&lt;/code> argument not needed, and hence &lt;code>.key&lt;/code> is deprecated. You should avoid teaching functions that are deprecated and correct their usage in your students&amp;rsquo; code by suggesting the preferred alternative.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;img src="lifecycle-superseded.svg" alt="Superseded" style="vertical-align:middle"/> Superseded indicates that there is a known better alternative for the function, but it&amp;rsquo;s not going away. Some examples include the following:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_longer.html" target="_blank" rel="noopener">&lt;code>tidyr::pivot_longer()&lt;/code>&lt;/a> /
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_wider.html" target="_blank" rel="noopener">&lt;code>tidyr::pivot_wider()&lt;/code>&lt;/a> for reshaping data supersede
&lt;a href="https://tidyr.tidyverse.org/reference/spread.html" target="_blank" rel="noopener">&lt;code>tidyr::spread()&lt;/code>&lt;/a> /
&lt;a href="https://tidyr.tidyverse.org/reference/gather.html" target="_blank" rel="noopener">&lt;code>tidyr::gather()&lt;/code>&lt;/a> (More on these
&lt;a href="https://www.tidyverse.org/blog/2019/09/tidyr-1-0-0/" target="_blank" rel="noopener">here&lt;/a> and
&lt;a href="https://tidyr.tidyverse.org/articles/pivot.html" target="_blank" rel="noopener">here&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>dplyr::across()&lt;/code>&lt;/a> for working across columns supersedes scoped verbs such as
&lt;a href="https://dplyr.tidyverse.org/reference/mutate_all.html" target="_blank" rel="noopener">&lt;code>dplyr::mutate_if()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/select_all.html" target="_blank" rel="noopener">&lt;code>dplyr::select_at()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/select_all.html" target="_blank" rel="noopener">&lt;code>dplyr::rename_all()&lt;/code>&lt;/a>, etc. (More on this
&lt;a href="https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-colwise/" target="_blank" rel="noopener">here&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/articles/colwise.html" target="_blank" rel="noopener">here&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>dplyr::slice_sample()&lt;/code>&lt;/a> with &lt;code>n&lt;/code> and &lt;code>prop&lt;/code> arguments supersedes
&lt;a href="https://dplyr.tidyverse.org/reference/sample_n.html" target="_blank" rel="noopener">&lt;code>dplyr::sample_n()&lt;/code>&lt;/a> /
&lt;a href="https://dplyr.tidyverse.org/reference/sample_n.html" target="_blank" rel="noopener">&lt;code>dplyr::sample_frac()&lt;/code>&lt;/a> (More on this
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-is-coming-soon/#superseded-functions" target="_blank" rel="noopener">here&lt;/a>)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>I don&amp;rsquo;t recommend teaching superseded functions to new learners, and for learners who might be aware of them already, I would recommend discouraging their use (though not correcting, i.e., no point deductions on a formative assessment), and suggesting an alternative.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;img src="lifecycle-experimental.svg" alt="Experimental" style="vertical-align:middle"/> Experimental functions are made available so the community can try them out and provide feedback, however they come with no promises for long term stability. For example, the following have been labeled experimental for a while and have received improvements based on community feedback (and are very likely to graduate to stable in the next dplyr release):&lt;/p>
&lt;ul>
&lt;li>
&lt;p>in
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>dplyr::summarize()&lt;/code>&lt;/a>: &lt;code>.groups&lt;/code> argument to define the grouping structure of the result&lt;/p>
&lt;/li>
&lt;li>
&lt;p>in
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>dplyr::mutate()&lt;/code>&lt;/a>: &lt;code>.before&lt;/code> and &lt;code>.after&lt;/code> arguments to control where new columns should appear&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>I recommend teaching experimental functions with caution, particularly to new learners with whom you might not formally discuss the concept of a &amp;ldquo;lifecycle&amp;rdquo;. However there is no reason to discourage use of these functions &amp;ndash; if students have stumbled upon a solution that involves an experimental function or argument and has used it correctly on their own, this is likely a good indication that the experiment is working!&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>If you&amp;rsquo;d like to learn more about the tidyverse lifecycle, I recommend the following resources:&lt;/p>
&lt;ul>
&lt;li>Blog post:
&lt;a href="https://www.tidyverse.org/blog/2021/02/lifecycle-1-0-0/" target="_blank" rel="noopener">lifecycle 1.0.0&lt;/a>&lt;/li>
&lt;li>Talk:
&lt;a href="https://www.rstudio.com/resources/rstudioglobal-2021/maintaining-the-house-the-tidyverse-built/" target="_blank" rel="noopener">Maintaining the house the tidyverse built&lt;/a> by Hadley Wickham at rstudio::global(2021)&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;/ul>
&lt;h2 id="making-reproducible-examples-with-reprex">Making reproducible examples with reprex
&lt;a href="#making-reproducible-examples-with-reprex">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://reprex.tidyverse.org/" target="_blank" rel="noopener">&lt;strong>reprex&lt;/strong>&lt;/a> package helps users create &lt;strong>repr&lt;/strong>oducible &lt;strong>ex&lt;/strong>amples for posting to GitHub issues, StackOverflow, in Slack messages or snippets, or even to paste into PowerPoint or Keynote slides by placing the code to be shared in your clipboard. I find reprex very useful when teaching because it helps my students provide me with broken code in a way that makes it as easy as possible for me (and for other students in the class) to help them.&lt;/p>
&lt;p>There have been
&lt;a href="https://reprex.tidyverse.org/news/index.html#reprex-1-0-0-2021-01-27" target="_blank" rel="noopener">many&lt;/a>
&lt;a href="https://reprex.tidyverse.org/news/index.html#reprex-2-0-0-2021-04-02" target="_blank" rel="noopener">exciting&lt;/a> developments in reprex over the year. The one that is perhaps most relevant to teaching are improvements that make it easier to use reprex when working in
&lt;a href="https://www.rstudio.com/products/rstudio/#rstudio-server" target="_blank" rel="noopener">RStudio Server&lt;/a> and
&lt;a href="https://rstudio.cloud/" target="_blank" rel="noopener">RStudio Cloud&lt;/a> as well as those that allow using local data when creating a reprex.&lt;/p>
&lt;p>Many courses teach R using RStudio Server or RStudio Cloud since this approach circumvents the need for students to install software and allows the instructor to have full control over the R environment their students are learning in. When working in these environments, the R code is running in a web browser and for security reasons it&amp;rsquo;s not possible for reprex to place code on your system clipboard. When creating a reprex in these environments, you can now simply select the relevant code, and run &lt;code>reprex()&lt;/code>. This will create a &lt;code>.md&lt;/code> file containing the contents of the reprex, ready for you to copy via Cmd/Ctrl+C.&lt;/p>
&lt;img src="reprex-cloud.png" alt="On the left: RStudio Cloud window with an R script with two lines of code highlighted. On the right: Result after running reprex() in the Console, including a new markdown file with the name vivid-eider_reprex.md that includes the code and the resulting output, commented out, and selected, ready to be copy pasted elsewhere. The viewer pane on the bottom right shows the stylized result of the reprex." width="1000"/>
&lt;p>The new &lt;code>wd&lt;/code> argument can help students create reprexes when they are working on an assignment involving a local data file. When &lt;code>reprex(wd = &amp;quot;.&amp;quot;)&lt;/code>, the reprex will be executed in the current working directory.&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> Writing a reproducible example with a minimal dataset is better practice, but this can be quite difficult for new learners. Being able to easily use local data will make it easier for them to benefit from other aspects of reprex earlier on.&lt;/p>
&lt;p>Being able to create a reprex in the current working directory means you can also benefit from a project-level &lt;code>.Rprofile&lt;/code> if you happen to have one in your project. This is likely not going to have implications for new learners, for whom this would be an advanced concept, but it can be helpful for instructors who teach with a different suite of packages than what they locally have installed (e.g., CRAN versions for teaching vs. development versions for personal use). If this describes you, I recommend using
&lt;a href="https://rstudio.github.io/renv/index.html" target="_blank" rel="noopener">&lt;strong>renv&lt;/strong>&lt;/a> in projects where you keep teaching materials, which uses &lt;code>.Rprofile&lt;/code> to implement a project-specific package library. Then, &lt;code>reprex(wd = &amp;quot;.&amp;quot;)&lt;/code> will create a reprex using the packages in that library.&lt;/p>
&lt;p>For more on updates in reprex, read the blog posts for the
&lt;a href="https://www.tidyverse.org/blog/2021/02/reprex-1-0-0/" target="_blank" rel="noopener">1.0.0&lt;/a> and
&lt;a href="https://www.tidyverse.org/blog/2021/04/reprex-2-0-0/" target="_blank" rel="noopener">2.0.0&lt;/a> releases. And if you&amp;rsquo;re new to reprex, start
&lt;a href="https://reprex.tidyverse.org/articles/articles/learn-reprex.html" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;h2 id="building-on-tidyverse-for-modeling-with-tidymodels">Building on tidyverse for modeling with tidymodels
&lt;a href="#building-on-tidyverse-for-modeling-with-tidymodels">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The &lt;strong>tidymodels&lt;/strong> framework is a collection of packages for modeling and machine learning using tidyverse principles. This framework has been around since 2017, but over the past year many of the packages within tidymodels have become stable and gained lots of documentation, making them attractive choices for teaching. If you&amp;rsquo;re introducing your students to data science with the tidyverse, a great next step to consider is using tidymodels when it comes to modeling and inference.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Registered S3 method overwritten by 'tune':&lt;/span>
&lt;span class='c'>#&amp;gt; method from &lt;/span>
&lt;span class='c'>#&amp;gt; required_pkgs.model_spec parsnip&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching packages&lt;/span> ────────────────────────────────────── tidymodels 0.1.3 ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>broom &lt;/span> 0.7.9 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>rsample &lt;/span> 0.1.0 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dials &lt;/span> 0.0.9 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tune &lt;/span> 0.1.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>infer &lt;/span> 1.0.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflows &lt;/span> 0.2.3 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>modeldata &lt;/span> 0.1.1 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflowsets&lt;/span> 0.1.0 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>parsnip &lt;/span> 0.1.7 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>yardstick &lt;/span> 0.0.8 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>recipes &lt;/span> 0.1.16&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ───────────────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>scales&lt;/span>::&lt;span style='color: #00BB00;'>discard()&lt;/span> masks &lt;span style='color: #0000BB;'>purrr&lt;/span>::discard()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>recipes&lt;/span>::&lt;span style='color: #00BB00;'>fixed()&lt;/span> masks &lt;span style='color: #0000BB;'>stringr&lt;/span>::fixed()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>yardstick&lt;/span>::&lt;span style='color: #00BB00;'>spec()&lt;/span> masks &lt;span style='color: #0000BB;'>readr&lt;/span>::spec()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>recipes&lt;/span>::&lt;span style='color: #00BB00;'>step()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::step()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>•&lt;/span> Use &lt;span style='color: #00BB00;'>tidymodels_prefer()&lt;/span> to resolve common conflicts.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>From a pedagogical perspective, tidymodels has three main advantages:&lt;/p>
&lt;ol>
&lt;li>Similar interfaces to different models.&lt;/li>
&lt;li>Model outputs as tibbles, which are straightforward to interact with for learners who already know how to wrangle and visualize data stored in this format.&lt;/li>
&lt;li>Features that help users avoid common machine learning pitfalls such as safeguards in functions that avoid over-fitting by making the test-training split a fundamental part of the modeling process.&lt;/li>
&lt;/ol>
&lt;p>Let&amp;rsquo;s start with the first one &amp;mdash; providing similar interfaces to models. Consider the question &amp;ldquo;&lt;em>How do you define the the number of trees when fitting a random forest model?&amp;quot;&lt;/em> The answer is generally &lt;em>&amp;quot;depends on the package: &lt;code>randomForest::randomForest()&lt;/code> uses &lt;code>ntree&lt;/code>, &lt;code>ranger::ranger()&lt;/code> uses &lt;code>num.trees&lt;/code>, Spark&amp;rsquo;s &lt;code>sparklyr::ml_random_forest()&lt;/code> uses &lt;code>num_trees&lt;/code>&amp;quot;&lt;/em>. The answer with tidymodels is a bit simpler though: &lt;em>&amp;quot;using the &lt;code>trees&lt;/code> argument in the &lt;code>rand_forest()&lt;/code> package, regardless of the engine being used to fit the model&amp;quot;&lt;/em>. This can allow new learners to focus on what&amp;quot;trees&amp;quot; mean and how one decides how many to use, instead of the precise syntax needed by the various packages that can fit random forest models.&lt;/p>
&lt;p>The pedagogical advantages of teaching modeling with the full tidymodels framework may not be clear for fitting simple models with
&lt;a href="https://rdrr.io/r/stats/lm.html" target="_blank" rel="noopener">&lt;code>lm()&lt;/code>&lt;/a>. For example, below we fit a simple linear regression model with a single predictor, using base R first and then using tidymodels.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># base R&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/lm.html'>lm&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hwy&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>cty&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mpg&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/summary.html'>summary&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Call:&lt;/span>
&lt;span class='c'>#&amp;gt; lm(formula = hwy ~ cty, data = mpg)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Residuals:&lt;/span>
&lt;span class='c'>#&amp;gt; Min 1Q Median 3Q Max &lt;/span>
&lt;span class='c'>#&amp;gt; -5.3408 -1.2790 0.0214 1.0338 4.0461 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Coefficients:&lt;/span>
&lt;span class='c'>#&amp;gt; Estimate Std. Error t value Pr(&amp;gt;|t|) &lt;/span>
&lt;span class='c'>#&amp;gt; (Intercept) 0.89204 0.46895 1.902 0.0584 . &lt;/span>
&lt;span class='c'>#&amp;gt; cty 1.33746 0.02697 49.585 &amp;lt;2e-16 ***&lt;/span>
&lt;span class='c'>#&amp;gt; ---&lt;/span>
&lt;span class='c'>#&amp;gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Residual standard error: 1.752 on 232 degrees of freedom&lt;/span>
&lt;span class='c'>#&amp;gt; Multiple R-squared: 0.9138, Adjusted R-squared: 0.9134 &lt;/span>
&lt;span class='c'>#&amp;gt; F-statistic: 2459 on 1 and 232 DF, p-value: &amp;lt; 2.2e-16&lt;/span>
&lt;span class='c'># tidymodels&lt;/span>
&lt;span class='nf'>linear_reg&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"lm"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hwy&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>cty&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mpg&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>tidy&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; term estimate std.error statistic p.value&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> (Intercept) 0.892 0.469 1.90 5.84&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>- 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> cty 1.34 0.027&lt;span style='text-decoration: underline;'>0&lt;/span> 49.6 1.87&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>-125&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The tidymodels approach takes a few more steps, and for a simple model like this, the only advantage is likely in the summarisation step. With &lt;code>tidy()&lt;/code>, we get the model output as a tibble, which is more straightforward to interact with programmatically and which, by default, omits the significant stars.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/lm.html'>lm&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hwy&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>cty&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mpg&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>tidy&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; term estimate std.error statistic p.value&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> (Intercept) 0.892 0.469 1.90 5.84&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>- 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> cty 1.34 0.027&lt;span style='text-decoration: underline;'>0&lt;/span> 49.6 1.87&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>-125&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The pedagogical advantages for the consistent API of the framework become more clear when we move on to fitting different models. Below you can see examples of how we can fit models using various engines or using the same engine, but different modes.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># different engines&lt;/span>
&lt;span class='nf'>linear_reg&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"lm"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>logistic_reg&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"glm"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"classification"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>rand_forest&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ranger"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>decision_tree&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"rpart"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># same engine, different modes&lt;/span>
&lt;span class='nf'>svm_linear&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"LiblineaR"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>svm_linear&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"LiblineaR"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"classification"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Fitting a bunch of models to the same data and picking the one you like the results of the best is not a good approach, so one would rarely see code as it appears in the chunk above in a single R script. Students will encounter these pipelines over the course of a semester, each in a slightly different data context. Because the syntax is uniform, it&amp;rsquo;s easier to focus on the details of the model, not how to fit the darn thing in R.&lt;/p>
&lt;p>Another pedagogical advantage, particularly for teaching tidymodels after tidyverse, is the syntax to build recipes for feature engineering resembles dplyr pipelines for data wrangling. In the following example we first provide a dplyr pipeline for data wrangling, and then show how a similar set of transformations can be achieved using &lt;strong>recipes&lt;/strong> for feature engineering. The example uses the &lt;code>email&lt;/code> dataset from the &lt;strong>openintro&lt;/strong> package, which has variables like when the email was sent and received, how many people were cc&amp;rsquo;ed, number of attachments, etc.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># dplyr for data wrangling&lt;/span>
&lt;span class='nf'>openintro&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nv'>&lt;a href='https://openintrostat.github.io/openintro/reference/email.html'>email&lt;/a>&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='nv'>from&lt;/span>, &lt;span class='o'>-&lt;/span>&lt;span class='nv'>sent_email&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
day_of_week &lt;span class='o'>=&lt;/span> &lt;span class='nf'>lubridate&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://lubridate.tidyverse.org/reference/day.html'>wday&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='c'># new variable: day of week&lt;/span>
month &lt;span class='o'>=&lt;/span> &lt;span class='nf'>lubridate&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://lubridate.tidyverse.org/reference/month.html'>month&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='c'># new variable: month&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='nv'>time&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
cc &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cc&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='c'># discretize cc&lt;/span>
attach &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>attach&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='c'># discretize attach&lt;/span>
dollar &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dollar&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='c'># discretize dollar&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
inherit &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>inherit&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>5&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>20&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='c'># discretize inherit&lt;/span>
password &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>password&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>5&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>20&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='c'># discretize password&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'># recipes for data preprocessing and feature engineering&lt;/span>
&lt;span class='c'># same steps, similar syntax, &lt;/span>
&lt;span class='c'># less bookkeeping for the analyst in modeling setting&lt;/span>
&lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>spam&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nf'>openintro&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nv'>&lt;a href='https://openintrostat.github.io/openintro/reference/email.html'>email&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>step_rm&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>from&lt;/span>, &lt;span class='nv'>sent_email&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>step_date&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>time&lt;/span>,
features &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dow"&lt;/span>, &lt;span class='s'>"month"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>step_rm&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>step_cut&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>cc&lt;/span>,
&lt;span class='nv'>attach&lt;/span>,
&lt;span class='nv'>dollar&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>step_cut&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>inherit&lt;/span>,
&lt;span class='nv'>password&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>5&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>20&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You might be thinking &amp;ldquo;Why do I need the &lt;strong>recipes&lt;/strong> &lt;code>step_*()&lt;/code> functions when I can express the same steps with dplyr?&amp;rdquo; This brings us back to the &amp;ldquo;features that avoid common machine learning pitfalls&amp;rdquo;. The advantage of this approach is that once recipe steps are developed with the training data, they can be automatically applied to the testing data for final model assessment.&lt;/p>
&lt;p>So far the examples I&amp;rsquo;ve provided have been in a modeling context, but many statistics and data science courses also teach statistical inference, particularly parameter estimation using confidence intervals and hypothesis testing. The
&lt;a href="http://infer.tidymodels.org/" target="_blank" rel="noopener">&lt;strong>infer&lt;/strong>&lt;/a> package, which is part of the tidymodels ecosystem, is designed to perform statistical inference using an expressive statistical grammar that cohered with the tidyverse design framework. With recent updates in infer, it is now possible to carry out both theoretical (Central Limit Theorem based) and simulation-based statistical inference using a similar workflow. For example, below we show first the pipeline for building a bootstrap distribution for a mean using a simulation-based approach (with &lt;code>generate()&lt;/code> and then &lt;code>calculate()&lt;/code> and then we show we define the sampling distribution (with &lt;code>assume()&lt;/code>) if we were to build the confidence interval using a theoretical approach.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># simulation-based&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>25&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>specify&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>generate&lt;/span>&lt;span class='o'>(&lt;/span>reps &lt;span class='o'>=&lt;/span> &lt;span class='m'>1000&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"bootstrap"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>calculate&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"mean"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Response: hours (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1,000 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; replicate stat&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 41.8&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 2 41.7&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 3 41.6&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 4 39.3&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 5 41.1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 6 41.3&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 7 41.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 8 43.2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 9 42.1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 10 40.4&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 990 more rows&lt;/span>&lt;/span>
&lt;span class='c'># theoretical&lt;/span>
&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>specify&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>assume&lt;/span>&lt;span class='o'>(&lt;/span>distribution &lt;span class='o'>=&lt;/span> &lt;span class='s'>"t"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; A T distribution with 499 degrees of freedom.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Other recent updates to infer include support for doing inference for multiple regression as well as behavioral consistency of &lt;code>calculate()&lt;/code>.&lt;/p>
&lt;p>If you&amp;rsquo;re new to the tidymodels ecosystem, I recommend the following resources for getting started&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Expanded documentation:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidymodels.org/start/" target="_blank" rel="noopener">Get started with tidymodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/" target="_blank" rel="noopener">Learn more and go further&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Book:
&lt;a href="https://www.tmwr.org/" target="_blank" rel="noopener">Tidy Modeling with R&lt;/a> by Max Kuhn and Julia Silge&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Blog posts:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="Choose%20your%20own%20tidymodels%20adventure">Choose your own tidymodels adventure&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2021/08/infer-1-0-0/" target="_blank" rel="noopener">infer 1.0.0&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>If you&amp;rsquo;re new to teaching tidymodels, the following resources can be helpful:&lt;/p>
&lt;ul>
&lt;li>USCOTS 2021 Breakout session:
&lt;a href="https://bit.ly/tidymodels-uscots21/" target="_blank" rel="noopener">Tidy up your models&lt;/a> (developed and presented with
&lt;a href="https://www.ramapo.edu/tas/faculty/debbie-yuster/" target="_blank" rel="noopener">Debbie Yuster&lt;/a>)&lt;/li>
&lt;li>
&lt;a href="https://datasciencebox.org/making-rigorous-conclusions.html" target="_blank" rel="noopener">Data Science in a Box&lt;/a>: Slides, application exercises, computing labs, and homework assignments on modelling and inference with tidymodels.&lt;/li>
&lt;/ul>
&lt;h2 id="reading-data-with-readr">Reading data with readr
&lt;a href="#reading-data-with-readr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A new version of
&lt;a href="https://www.tidyverse.org/blog/2021/07/readr-2-0-0/#reading-multiple-files-at-once" target="_blank" rel="noopener">&lt;strong>readr&lt;/strong>&lt;/a> was recently released, with lots of updates outlined in
&lt;a href="https://www.tidyverse.org/blog/2021/07/readr-2-0-0/" target="_blank" rel="noopener">this blog post&lt;/a>. The update most relevant to teaching is the new functionality for reading in multiple files at once, or more specifically, reading sets of files with the same columns into one output table in a single command.&lt;/p>
&lt;p>Suppose in your &lt;code>data/&lt;/code> folder you have two files, one for sales in August and the other for sales in September. Each of the files contain two variables: &lt;code>brand&lt;/code> for brand ID, and &lt;code>n&lt;/code> for number of items sold with that brand ID.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>files&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/dir_ls.html'>dir_ls&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"data/"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>files&lt;/span>
&lt;span class='c'>#&amp;gt; data/sales-aug.csv&lt;/span>
&lt;span class='c'>#&amp;gt; data/sales-sep.csv&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can now pass this vector with the paths to multiple files directly to the &lt;code>read_*&lt;/code> functions in readr and add an identifying column for which file the records come from.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://readr.tidyverse.org/reference/read_delim.html'>read_csv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>files&lt;/span>, id &lt;span class='o'>=&lt;/span> &lt;span class='s'>"path"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; # A tibble: 7 × 3&lt;/span>
&lt;span class='c'>#&amp;gt; path brand n&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; 1 data/sales-aug… 1234 8&lt;/span>
&lt;span class='c'>#&amp;gt; 2 data/sales-aug… 8721 2&lt;/span>
&lt;span class='c'>#&amp;gt; 3 data/sales-aug… 1822 3&lt;/span>
&lt;span class='c'>#&amp;gt; 4 data/sales-sep… 3333 1&lt;/span>
&lt;span class='c'>#&amp;gt; 5 data/sales-sep… 2156 3&lt;/span>
&lt;span class='c'>#&amp;gt; 6 data/sales-sep… 3987 6&lt;/span>
&lt;span class='c'>#&amp;gt; 7 data/sales-sep… 3216 5&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Previously this not-so-advanced task required the use of mapping functions from purrr or the
&lt;a href="https://vroom.r-lib.org/" target="_blank" rel="noopener">vroom&lt;/a> package, but now tidyverse users are able to accomplish this task with just readr!&lt;/p>
&lt;h2 id="web-scraping-with-rvest">Web scraping with rvest
&lt;a href="#web-scraping-with-rvest">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you&amp;rsquo;ve been teaching web scraping with
&lt;a href="https://rvest.tidyverse.org/" target="_blank" rel="noopener">&lt;strong>rvest&lt;/strong>&lt;/a>, I recommend updating your teaching materials as you might be able to further simplify and streamline some of the code you present to students. And if you haven&amp;rsquo;t been teaching web scraping, I recommend reading our paper titled
&lt;a href="https://www.tandfonline.com/doi/full/10.1080/10691898.2020.1787116" target="_blank" rel="noopener">Web Scraping in the Statistics and Data Science Curriculum: Challenges and Opportunities&lt;/a> where we discuss how web scraping can be implemented in a pedagogically sound and technically executable way at various levels of statistics and data science curricula.&lt;/p>
&lt;p>Most recent updates to rvest include the addition of a new function,
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text2()&lt;/code>&lt;/a>, which offers better handling for line breaks. Suppose you have the following paragraph of text across two lines on a webpage.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://rvest.tidyverse.org/'>rvest&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Attaching package: 'rvest'&lt;/span>
&lt;span class='c'>#&amp;gt; The following object is masked from 'package:readr':&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; guess_encoding&lt;/span>
&lt;span class='nv'>html&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/minimal_html.html'>minimal_html&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='s'>"&amp;lt;p&amp;gt;
This is the first sentence in the paragraph.
This is the second sentence that should be on the same line as the first sentence.&amp;lt;br&amp;gt;This third sentence should start on a new line.
&amp;lt;/p&amp;gt;"&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With the original
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text()&lt;/code>&lt;/a> function extracting the text out of this paragraph results in the following:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>html&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/html_text.html'>html_text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/writeLines.html'>writeLines&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; This is the first sentence in the paragraph.&lt;/span>
&lt;span class='c'>#&amp;gt; This is the second sentence that should be on the same line as the first sentence.This third sentence should start on a new line.&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that the line breaks in the output do not respect the line break defined with &lt;code>&amp;lt;br&amp;gt;&lt;/code>.&lt;/p>
&lt;p>With the new
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text2()&lt;/code>&lt;/a>, &lt;code>&amp;lt;br&amp;gt;&lt;/code> is handled appropriately and the line breaks follow the expected pattern.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>html&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/html_text.html'>html_text2&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/writeLines.html'>writeLines&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; This is the first sentence in the paragraph. This is the second sentence that should be on the same line as the first sentence.&lt;/span>
&lt;span class='c'>#&amp;gt; This third sentence should start on a new line.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The output of
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text2()&lt;/code>&lt;/a> is generally what you want, but note that it is slower than
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text()&lt;/code>&lt;/a>. This might not make a big difference for teaching web scraping as a new topic, but it is worth keeping in mind when the task involves scraping a large amount of data. Your choice might also depend on what you&amp;rsquo;re going to do next with the data. For example, if the next step involves tokenizing the scraped text with
&lt;a href="https://rdrr.io/pkg/tidytext/man/unnest_tokens.html" target="_blank" rel="noopener">&lt;code>tidytext::unnest_tokens()&lt;/code>&lt;/a> you might not care how the line breaks were handled in the first step.&lt;/p>
&lt;p>Since this change involves the addition of a new function without changing behaviour in any existing functions, incorporating it into your teaching would require testing
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text2()&lt;/code>&lt;/a> in places where you previously used
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text()&lt;/code>&lt;/a> to see if the result is preferable.&lt;/p>
&lt;p>Another important update is that
&lt;a href="https://rvest.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>html_node()&lt;/code>&lt;/a> and
&lt;a href="https://rvest.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>html_nodes()&lt;/code>&lt;/a> (functions that undoubtedly show up in any lesson on web scraping with rvest) have been superseded in favor of
&lt;a href="https://rvest.tidyverse.org/reference/html_element.html" target="_blank" rel="noopener">&lt;code>html_element()&lt;/code>&lt;/a> and
&lt;a href="https://rvest.tidyverse.org/reference/html_element.html" target="_blank" rel="noopener">&lt;code>html_elements()&lt;/code>&lt;/a>. The motivation behind this update is to better match what learners see when they&amp;rsquo;re first learning about HTML. When updating teaching materials you should be able to use
&lt;a href="https://rvest.tidyverse.org/reference/html_element.html" target="_blank" rel="noopener">&lt;code>html_element()&lt;/code>&lt;/a> and
&lt;a href="https://rvest.tidyverse.org/reference/html_element.html" target="_blank" rel="noopener">&lt;code>html_elements()&lt;/code>&lt;/a> as drop in replacements for
&lt;a href="https://rvest.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>html_node()&lt;/code>&lt;/a> and
&lt;a href="https://rvest.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>html_nodes()&lt;/code>&lt;/a>, respectively.&lt;/p>
&lt;p>Finally, if
&lt;a href="https://rvest.tidyverse.org/reference/html_table.html" target="_blank" rel="noopener">&lt;code>html_table()&lt;/code>&lt;/a> didn&amp;rsquo;t work for you in the past, it&amp;rsquo;s worth trying again since it&amp;rsquo;s been rewritten from scratch to more closely match how browsers display tables with merged cells.&lt;/p>
&lt;p>For more on updates in rvest, read the
&lt;a href="https://www.tidyverse.org/blog/2021/03/rvest-1-0-0/" target="_blank" rel="noopener">rvest 1.0.0. blog post&lt;/a> and review the updated
&lt;a href="https://rvest.tidyverse.org/articles/rvest.html" target="_blank" rel="noopener">rvest vignette&lt;/a>.&lt;/p>
&lt;h2 id="sql-and-datatable-translations-with-dbplyr-and-dtplyr">SQL and data.table translations with dbplyr and dtplyr
&lt;a href="#sql-and-datatable-translations-with-dbplyr-and-dtplyr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Two packages that provide interfaces for translations between &lt;strong>dplyr&lt;/strong> and SQL and
&lt;a href="https://rdatatable.gitlab.io/data.table/" target="_blank" rel="noopener">&lt;strong>data.table&lt;/strong>&lt;/a> code are &lt;strong>dbplyr&lt;/strong> and &lt;strong>dtplyr&lt;/strong>. If you&amp;rsquo;re teaching either of these tools alongside the tidyverse, particularly to students who have learned the tidyverse first, the
&lt;a href="https://dplyr.tidyverse.org/reference/explain.html" target="_blank" rel="noopener">&lt;code>show_query()&lt;/code>&lt;/a> function can be very helpful for translating tidyverse code into syntaxes used by these tools.&lt;/p>
&lt;p>dtplyr translates dplyr pipelines into equivalent data.table code. To start, we first need to create a
&lt;a href="https://rdrr.io/pkg/dtplyr/man/lazy_dt.html" target="_blank" rel="noopener">&lt;code>lazy_dt()&lt;/code>&lt;/a> object which will record the dplyr actions. Then, we write a dplyr pipeline as usual and save the result. The result can be viewed by piping it into
&lt;a href="https://tibble.tidyverse.org/reference/as_tibble.html" target="_blank" rel="noopener">&lt;code>as_tibble()&lt;/code>&lt;/a> and the data.table code can be viewed with
&lt;a href="https://dplyr.tidyverse.org/reference/explain.html" target="_blank" rel="noopener">&lt;code>show_query()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidyverse/dtplyr'>dtplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>mtcars_dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/dtplyr/man/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>cyl_summary&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>mtcars_dt&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cyl&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>across&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>disp&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='nv'>wt&lt;/span>, &lt;span class='nv'>mean&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># result&lt;/span>
&lt;span class='nv'>cyl_summary&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/as_tibble.html'>as_tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; cyl disp hp drat wt&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 4 105. 82.6 4.07 2.29&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 6 183. 122. 3.59 3.12&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 8 353. 209. 3.23 4.00&lt;/span>
&lt;span class='c'># query&lt;/span>
&lt;span class='nv'>cyl_summary&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `_DT1`[, .(disp = mean(disp), hp = mean(hp), drat = mean(drat), &lt;/span>
&lt;span class='c'>#&amp;gt; wt = mean(wt)), keyby = .(cyl)]&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With recent updates, dtplyr can also translate some tidyr functions to data.table, e.g.,
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_wider.html" target="_blank" rel="noopener">&lt;code>pivot_wider()&lt;/code>&lt;/a>. In the following example the process is the same: start with
&lt;a href="https://rdrr.io/pkg/dtplyr/man/lazy_dt.html" target="_blank" rel="noopener">&lt;code>lazy_dt()&lt;/code>&lt;/a>, write a data transformation step using tidyverse code, view the result with
&lt;a href="https://tibble.tidyverse.org/reference/as_tibble.html" target="_blank" rel="noopener">&lt;code>as_tibble()&lt;/code>&lt;/a>, and view the query with
&lt;a href="https://dplyr.tidyverse.org/reference/explain.html" target="_blank" rel="noopener">&lt;code>show_query()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>fish_encounters_dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/dtplyr/man/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>fish_encounters&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>fish_encounters_dt&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>station&lt;/span>, values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>seen&lt;/span>, values_fill &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># result&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/as_tibble.html'>as_tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 19 × 12&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; fish Release I80_1 Lisbon Rstr Base_TD BCE BCW BCE2 BCW2 MAE MAW&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 4842 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 4843 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 4844 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 4845 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 4847 1 1 1 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 4848 1 1 1 1 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 4849 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 4850 1 1 0 1 1 1 1 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 4851 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 4854 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 4855 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 4857 1 1 1 1 1 1 1 1 1 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>13&lt;/span> 4858 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>14&lt;/span> 4859 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>15&lt;/span> 4861 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>16&lt;/span> 4862 1 1 1 1 1 1 1 1 1 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>17&lt;/span> 4863 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>18&lt;/span> 4864 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>19&lt;/span> 4865 1 1 1 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'># query&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; dcast(`_DT2`, formula = fish ~ station, value.var = "seen", fill = 0)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Similarly, dbplyr translates dplyr pipelines into equivalent SQL code. The only difference in the following example translating tidyr code to SQL code is the function used in the first step,
&lt;a href="https://dbplyr.tidyverse.org/reference/memdb_frame.html" target="_blank" rel="noopener">&lt;code>memdb_frame()&lt;/code>&lt;/a>, which creates a database table.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dbplyr.tidyverse.org/'>dbplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Attaching package: 'dbplyr'&lt;/span>
&lt;span class='c'>#&amp;gt; The following objects are masked from 'package:dplyr':&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; ident, sql&lt;/span>
&lt;span class='nv'>fish_encounters_db&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/memdb_frame.html'>memdb_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>fish_encounters&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>fish_encounters_db&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>station&lt;/span>, values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>seen&lt;/span>, values_fill &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># result&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/as_tibble.html'>as_tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 19 × 12&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; fish Release I80_1 Lisbon Rstr Base_TD BCE BCW BCE2 BCW2 MAE MAW&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 4842 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 4843 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 4844 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 4845 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 4847 1 1 1 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 4848 1 1 1 1 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 4849 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 4850 1 1 0 1 1 1 1 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 4851 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 4854 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 4855 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 4857 1 1 1 1 1 1 1 1 1 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>13&lt;/span> 4858 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>14&lt;/span> 4859 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>15&lt;/span> 4861 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>16&lt;/span> 4862 1 1 1 1 1 1 1 1 1 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>17&lt;/span> 4863 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>18&lt;/span> 4864 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>19&lt;/span> 4865 1 1 1 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'># query&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `fish`, MAX(CASE WHEN (`station` = 'Release') THEN (`seen`) WHEN NOT(`station` = 'Release') THEN (0.0) END) AS `Release`, MAX(CASE WHEN (`station` = 'I80_1') THEN (`seen`) WHEN NOT(`station` = 'I80_1') THEN (0.0) END) AS `I80_1`, MAX(CASE WHEN (`station` = 'Lisbon') THEN (`seen`) WHEN NOT(`station` = 'Lisbon') THEN (0.0) END) AS `Lisbon`, MAX(CASE WHEN (`station` = 'Rstr') THEN (`seen`) WHEN NOT(`station` = 'Rstr') THEN (0.0) END) AS `Rstr`, MAX(CASE WHEN (`station` = 'Base_TD') THEN (`seen`) WHEN NOT(`station` = 'Base_TD') THEN (0.0) END) AS `Base_TD`, MAX(CASE WHEN (`station` = 'BCE') THEN (`seen`) WHEN NOT(`station` = 'BCE') THEN (0.0) END) AS `BCE`, MAX(CASE WHEN (`station` = 'BCW') THEN (`seen`) WHEN NOT(`station` = 'BCW') THEN (0.0) END) AS `BCW`, MAX(CASE WHEN (`station` = 'BCE2') THEN (`seen`) WHEN NOT(`station` = 'BCE2') THEN (0.0) END) AS `BCE2`, MAX(CASE WHEN (`station` = 'BCW2') THEN (`seen`) WHEN NOT(`station` = 'BCW2') THEN (0.0) END) AS `BCW2`, MAX(CASE WHEN (`station` = 'MAE') THEN (`seen`) WHEN NOT(`station` = 'MAE') THEN (0.0) END) AS `MAE`, MAX(CASE WHEN (`station` = 'MAW') THEN (`seen`) WHEN NOT(`station` = 'MAW') THEN (0.0) END) AS `MAW`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `dbplyr_001`&lt;/span>
&lt;span class='c'>#&amp;gt; GROUP BY `fish`&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>I recommend the following resources to get started with these packages:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2021/02/dplyr-backends/" target="_blank" rel="noopener">Blog post on dplyr backends&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dtplyr.tidyverse.org/articles/translation.html" target="_blank" rel="noopener">dtplyr translation vignette&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dbplyr.tidyverse.org/articles/dbplyr.html" target="_blank" rel="noopener">Introduction to dbplyr vignette&lt;/a>&lt;/li>
&lt;/ul>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>I think this talk would also be a good resource for software development courses on the topic of maintaining open source software and communicating updates and changes to users. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>Turns out this was always possible using the &lt;code>outfile&lt;/code> argument, but now it&amp;rsquo;s more intuitive! &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item></channel></rss>