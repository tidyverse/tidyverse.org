<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dplyr | Tidyverse</title><link>https://www.tidyverse.org/tags/dplyr/</link><atom:link href="https://www.tidyverse.org/tags/dplyr/index.xml" rel="self" type="application/rss+xml"/><description>dplyr</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 19 Jun 2025 00:00:00 +0000</lastBuildDate><item><title>duckplyr fully joins the tidyverse!</title><link>https://www.tidyverse.org/blog/2025/06/duckplyr-1-1-0/</link><pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2025/06/duckplyr-1-1-0/</guid><description>&lt;p>We&amp;rsquo;re well chuffed to announce the release of
&lt;a href="https://duckplyr.tidyverse.org" target="_blank" rel="noopener">duckplyr&lt;/a> 1.1.0. This is a dplyr backend powered by
&lt;a href="https://duckdb.org/" target="_blank" rel="noopener">DuckDB&lt;/a>, a fast in-memory analytical database system&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. duckplyr uses the power of DuckDB for impressive performance where it can, and seemlessly falls back to R where it can&amp;rsquo;t. You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"duckplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This article shows how duckplyr can be used instead of dplyr, explain how you can help improve the package, and share a selection of further resources.&lt;/p>
&lt;h2 id="a-drop-in-replacement-for-dplyr">A drop-in replacement for dplyr
&lt;a href="#a-drop-in-replacement-for-dplyr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Imagine you have to wrangle a huge dataset, like this one from the
&lt;a href="https://duckdb.org/2024/04/02/duckplyr.html#benchmark-tpc-h-q1" target="_blank" rel="noopener">TPC-H benchmark&lt;/a>, a famous database benchmarking dataset.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>lineitem_tbl&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>duckdb&lt;/span>&lt;span class='nf'>:::&lt;/span>&lt;span class='nf'>sql&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"INSTALL tpch; LOAD tpch; CALL dbgen(sf=1); FROM lineitem;"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>lineitem_tbl&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>tibble&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/as_tibble.html'>as_tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lineitem_tbl&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>dplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://pillar.r-lib.org/reference/glimpse.html'>glimpse&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lineitem_tbl&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Rows: 6,001,215&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Columns: 16&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_orderkey &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1&lt;span style='color: #555555;'>, &lt;/span>1&lt;span style='color: #555555;'>, &lt;/span>1&lt;span style='color: #555555;'>, &lt;/span>1&lt;span style='color: #555555;'>, &lt;/span>1&lt;span style='color: #555555;'>, &lt;/span>1&lt;span style='color: #555555;'>, &lt;/span>2&lt;span style='color: #555555;'>, &lt;/span>3&lt;span style='color: #555555;'>, &lt;/span>3&lt;span style='color: #555555;'>, &lt;/span>3&lt;span style='color: #555555;'>, &lt;/span>3&lt;span style='color: #555555;'>, &lt;/span>3&lt;span style='color: #555555;'>, &lt;/span>3&lt;span style='color: #555555;'>, &lt;/span>4&lt;span style='color: #555555;'>, &lt;/span>5&lt;span style='color: #555555;'>, &lt;/span>5&lt;span style='color: #555555;'>, &lt;/span>5&lt;span style='color: #555555;'>, &lt;/span>6&lt;span style='color: #555555;'>, &lt;/span>…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_partkey &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 155190&lt;span style='color: #555555;'>, &lt;/span>67310&lt;span style='color: #555555;'>, &lt;/span>63700&lt;span style='color: #555555;'>, &lt;/span>2132&lt;span style='color: #555555;'>, &lt;/span>24027&lt;span style='color: #555555;'>, &lt;/span>15635&lt;span style='color: #555555;'>, &lt;/span>106170&lt;span style='color: #555555;'>, &lt;/span>4297…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_suppkey &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 7706&lt;span style='color: #555555;'>, &lt;/span>7311&lt;span style='color: #555555;'>, &lt;/span>3701&lt;span style='color: #555555;'>, &lt;/span>4633&lt;span style='color: #555555;'>, &lt;/span>1534&lt;span style='color: #555555;'>, &lt;/span>638&lt;span style='color: #555555;'>, &lt;/span>1191&lt;span style='color: #555555;'>, &lt;/span>1798&lt;span style='color: #555555;'>, &lt;/span>6540&lt;span style='color: #555555;'>, &lt;/span>3…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_linenumber &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1&lt;span style='color: #555555;'>, &lt;/span>2&lt;span style='color: #555555;'>, &lt;/span>3&lt;span style='color: #555555;'>, &lt;/span>4&lt;span style='color: #555555;'>, &lt;/span>5&lt;span style='color: #555555;'>, &lt;/span>6&lt;span style='color: #555555;'>, &lt;/span>1&lt;span style='color: #555555;'>, &lt;/span>1&lt;span style='color: #555555;'>, &lt;/span>2&lt;span style='color: #555555;'>, &lt;/span>3&lt;span style='color: #555555;'>, &lt;/span>4&lt;span style='color: #555555;'>, &lt;/span>5&lt;span style='color: #555555;'>, &lt;/span>6&lt;span style='color: #555555;'>, &lt;/span>1&lt;span style='color: #555555;'>, &lt;/span>1&lt;span style='color: #555555;'>, &lt;/span>2&lt;span style='color: #555555;'>, &lt;/span>3&lt;span style='color: #555555;'>, &lt;/span>1&lt;span style='color: #555555;'>, &lt;/span>…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_quantity &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 17&lt;span style='color: #555555;'>, &lt;/span>36&lt;span style='color: #555555;'>, &lt;/span>8&lt;span style='color: #555555;'>, &lt;/span>28&lt;span style='color: #555555;'>, &lt;/span>24&lt;span style='color: #555555;'>, &lt;/span>32&lt;span style='color: #555555;'>, &lt;/span>38&lt;span style='color: #555555;'>, &lt;/span>45&lt;span style='color: #555555;'>, &lt;/span>49&lt;span style='color: #555555;'>, &lt;/span>27&lt;span style='color: #555555;'>, &lt;/span>2&lt;span style='color: #555555;'>, &lt;/span>28&lt;span style='color: #555555;'>, &lt;/span>26&lt;span style='color: #555555;'>, &lt;/span>30&lt;span style='color: #555555;'>, &lt;/span>…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_extendedprice&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 21168.23&lt;span style='color: #555555;'>, &lt;/span>45983.16&lt;span style='color: #555555;'>, &lt;/span>13309.60&lt;span style='color: #555555;'>, &lt;/span>28955.64&lt;span style='color: #555555;'>, &lt;/span>22824.48&lt;span style='color: #555555;'>, &lt;/span>4962…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_discount &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.04&lt;span style='color: #555555;'>, &lt;/span>0.09&lt;span style='color: #555555;'>, &lt;/span>0.10&lt;span style='color: #555555;'>, &lt;/span>0.09&lt;span style='color: #555555;'>, &lt;/span>0.10&lt;span style='color: #555555;'>, &lt;/span>0.07&lt;span style='color: #555555;'>, &lt;/span>0.00&lt;span style='color: #555555;'>, &lt;/span>0.06&lt;span style='color: #555555;'>, &lt;/span>0.10&lt;span style='color: #555555;'>, &lt;/span>…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_tax &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.02&lt;span style='color: #555555;'>, &lt;/span>0.06&lt;span style='color: #555555;'>, &lt;/span>0.02&lt;span style='color: #555555;'>, &lt;/span>0.06&lt;span style='color: #555555;'>, &lt;/span>0.04&lt;span style='color: #555555;'>, &lt;/span>0.02&lt;span style='color: #555555;'>, &lt;/span>0.05&lt;span style='color: #555555;'>, &lt;/span>0.00&lt;span style='color: #555555;'>, &lt;/span>0.00&lt;span style='color: #555555;'>, &lt;/span>…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_returnflag &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> "N"&lt;span style='color: #555555;'>, &lt;/span>"N"&lt;span style='color: #555555;'>, &lt;/span>"N"&lt;span style='color: #555555;'>, &lt;/span>"N"&lt;span style='color: #555555;'>, &lt;/span>"N"&lt;span style='color: #555555;'>, &lt;/span>"N"&lt;span style='color: #555555;'>, &lt;/span>"N"&lt;span style='color: #555555;'>, &lt;/span>"R"&lt;span style='color: #555555;'>, &lt;/span>"R"&lt;span style='color: #555555;'>, &lt;/span>"A"&lt;span style='color: #555555;'>, &lt;/span>"A"&lt;span style='color: #555555;'>,&lt;/span>…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_linestatus &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> "O"&lt;span style='color: #555555;'>, &lt;/span>"O"&lt;span style='color: #555555;'>, &lt;/span>"O"&lt;span style='color: #555555;'>, &lt;/span>"O"&lt;span style='color: #555555;'>, &lt;/span>"O"&lt;span style='color: #555555;'>, &lt;/span>"O"&lt;span style='color: #555555;'>, &lt;/span>"O"&lt;span style='color: #555555;'>, &lt;/span>"F"&lt;span style='color: #555555;'>, &lt;/span>"F"&lt;span style='color: #555555;'>, &lt;/span>"F"&lt;span style='color: #555555;'>, &lt;/span>"F"&lt;span style='color: #555555;'>,&lt;/span>…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_shipdate &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> 1996-03-13&lt;span style='color: #555555;'>, &lt;/span>1996-04-12&lt;span style='color: #555555;'>, &lt;/span>1996-01-29&lt;span style='color: #555555;'>, &lt;/span>1996-04-21&lt;span style='color: #555555;'>, &lt;/span>1996-…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_commitdate &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> 1996-02-12&lt;span style='color: #555555;'>, &lt;/span>1996-02-28&lt;span style='color: #555555;'>, &lt;/span>1996-03-05&lt;span style='color: #555555;'>, &lt;/span>1996-03-30&lt;span style='color: #555555;'>, &lt;/span>1996-…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_receiptdate &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> 1996-03-22&lt;span style='color: #555555;'>, &lt;/span>1996-04-20&lt;span style='color: #555555;'>, &lt;/span>1996-01-31&lt;span style='color: #555555;'>, &lt;/span>1996-05-16&lt;span style='color: #555555;'>, &lt;/span>1996-…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_shipinstruct &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> "DELIVER IN PERSON"&lt;span style='color: #555555;'>, &lt;/span>"TAKE BACK RETURN"&lt;span style='color: #555555;'>, &lt;/span>"TAKE BACK RE…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_shipmode &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> "TRUCK"&lt;span style='color: #555555;'>, &lt;/span>"MAIL"&lt;span style='color: #555555;'>, &lt;/span>"REG AIR"&lt;span style='color: #555555;'>, &lt;/span>"AIR"&lt;span style='color: #555555;'>, &lt;/span>"FOB"&lt;span style='color: #555555;'>, &lt;/span>"MAIL"&lt;span style='color: #555555;'>, &lt;/span>"RAI…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ &lt;span style='font-weight: bold;'>l_comment &lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> "to beans x-ray carefull"&lt;span style='color: #555555;'>, &lt;/span>" according to the final fo…&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To work with this in duckplyr instead of dplyr, all you need to do is load duckplyr:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://duckplyr.tidyverse.org'>duckplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Loading required package: dplyr&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; The &lt;span style='color: #0000BB;'>duckplyr&lt;/span> package is configured to fall back to &lt;span style='color: #0000BB;'>dplyr&lt;/span> when it encounters an incompatibility.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Fallback events can be collected and uploaded for analysis to guide future development. By&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; default, data will be collected but no data will be uploaded.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Automatic fallback uploading is not controlled and therefore disabled, see&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `?duckplyr::fallback()`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Number of reports ready for upload: &lt;span style='font-weight: bold;'>4&lt;/span>.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; → Review with `duckplyr::fallback_review()`, upload with `duckplyr::fallback_upload()`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> &lt;span style='color: #555555;'>Configure automatic uploading with `duckplyr::fallback_config()`.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Overwriting &lt;span style='color: #0000BB;'>dplyr&lt;/span> methods with &lt;span style='color: #0000BB;'>duckplyr&lt;/span> methods.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Turn off with `duckplyr::methods_restore()`.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now we can express the well-known (at least in the database community!) &amp;ldquo;TPC-H benchmark query 1&amp;rdquo; in dplyr syntax and execute it in DuckDB via duckplyr.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>tpch_dplyr&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lineitem&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>lineitem&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_shipdate&lt;/span> &lt;span class='o'>&amp;lt;=&lt;/span> &lt;span class='o'>!&lt;/span>&lt;span class='o'>!&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.Date.html'>as.Date&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"1998-09-02"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> sum_qty &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_quantity&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> sum_base_price &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_extendedprice&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> sum_disc_price &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_extendedprice&lt;/span> &lt;span class='o'>*&lt;/span> &lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span> &lt;span class='o'>-&lt;/span> &lt;span class='nv'>l_discount&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> sum_charge &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_extendedprice&lt;/span> &lt;span class='o'>*&lt;/span> &lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span> &lt;span class='o'>-&lt;/span> &lt;span class='nv'>l_discount&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>*&lt;/span> &lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>l_tax&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> avg_qty &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_quantity&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> avg_price &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_extendedprice&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> avg_disc &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_discount&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> count_order &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/context.html'>n&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> .by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_returnflag&lt;/span>, &lt;span class='nv'>l_linestatus&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_returnflag&lt;/span>, &lt;span class='nv'>l_linestatus&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>tpch_dplyr&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lineitem_tbl&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 10&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>l_returnflag&lt;/span> &lt;span style='font-weight: bold;'>l_linestatus&lt;/span> &lt;span style='font-weight: bold;'>sum_qty&lt;/span> &lt;span style='font-weight: bold;'>sum_base_price&lt;/span> &lt;span style='font-weight: bold;'>sum_disc_price&lt;/span> &lt;span style='font-weight: bold;'>sum_charge&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A F 37&lt;span style='text-decoration: underline;'>734&lt;/span>107 &lt;span style='text-decoration: underline;'>56&lt;/span>586&lt;span style='text-decoration: underline;'>554&lt;/span>401. &lt;span style='text-decoration: underline;'>53&lt;/span>758&lt;span style='text-decoration: underline;'>257&lt;/span>135. &lt;span style='text-decoration: underline;'>55&lt;/span>909&lt;span style='text-decoration: underline;'>065&lt;/span>223.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> N F &lt;span style='text-decoration: underline;'>991&lt;/span>417 &lt;span style='text-decoration: underline;'>1&lt;/span>487&lt;span style='text-decoration: underline;'>504&lt;/span>710. &lt;span style='text-decoration: underline;'>1&lt;/span>413&lt;span style='text-decoration: underline;'>082&lt;/span>168. &lt;span style='text-decoration: underline;'>1&lt;/span>469&lt;span style='text-decoration: underline;'>649&lt;/span>223.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> N O 74&lt;span style='text-decoration: underline;'>476&lt;/span>040 &lt;span style='text-decoration: underline;'>111&lt;/span>701&lt;span style='text-decoration: underline;'>729&lt;/span>698. &lt;span style='text-decoration: underline;'>106&lt;/span>118&lt;span style='text-decoration: underline;'>230&lt;/span>308. &lt;span style='text-decoration: underline;'>110&lt;/span>367&lt;span style='text-decoration: underline;'>043&lt;/span>872.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> R F 37&lt;span style='text-decoration: underline;'>719&lt;/span>753 &lt;span style='text-decoration: underline;'>56&lt;/span>568&lt;span style='text-decoration: underline;'>041&lt;/span>381. &lt;span style='text-decoration: underline;'>53&lt;/span>741&lt;span style='text-decoration: underline;'>292&lt;/span>685. &lt;span style='text-decoration: underline;'>55&lt;/span>889&lt;span style='text-decoration: underline;'>619&lt;/span>120.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 4 more variables: &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>avg_qty&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;, &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>avg_price&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;, &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>avg_disc&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>count_order&lt;/span>&lt;span style='color: #555555;'> &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Like other dplyr backends such as dtplyr and dbplyr, duckplyr gives you higher performance without learning a different syntax. Unlike other dplyr backends, duckplyr does not require you to change existing code or learn specific idiosyncrasies. Not only is the syntax the same, the semantics are too! If an operation cannot be carried out with DuckDB, it is automatically outsourced to dplyr. Over time, we expect fewer and fewer fallbacks to dplyr to be needed.&lt;/p>
&lt;h2 id="how-to-use-duckplyr">How to use duckplyr
&lt;a href="#how-to-use-duckplyr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are two ways to use duckplyr:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>As above, you can
&lt;a href="https://duckplyr.tidyverse.org" target="_blank" rel="noopener">&lt;code>library(duckplyr)&lt;/code>&lt;/a>, and replace all existing dplyr methods. This is safe because duckplyr is guaranteed to give the exactly same the results as dplyr, unlike other backends.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create individual &amp;ldquo;duck frames&amp;rdquo; using &lt;em>conversion functions&lt;/em> like &lt;code>duckdplyr::duckdb_tibble()&lt;/code> or &lt;code>duckdplyr::as_duckdb_tibble()&lt;/code>, or &lt;em>ingestion functions&lt;/em> like &lt;code>duckdplyr::read_csv_duckdb()&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Here&amp;rsquo;s an example of the second form:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>out&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>lineitem_tbl&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>duckplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://duckplyr.tidyverse.org/reference/duckdb_tibble.html'>as_duckdb_tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>tpch_dplyr&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>out&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A duckplyr data frame: 10 variables&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>l_returnflag&lt;/span> &lt;span style='font-weight: bold;'>l_linestatus&lt;/span> &lt;span style='font-weight: bold;'>sum_qty&lt;/span> &lt;span style='font-weight: bold;'>sum_base_price&lt;/span> &lt;span style='font-weight: bold;'>sum_disc_price&lt;/span> &lt;span style='font-weight: bold;'>sum_charge&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A F 37&lt;span style='text-decoration: underline;'>734&lt;/span>107 &lt;span style='text-decoration: underline;'>56&lt;/span>586&lt;span style='text-decoration: underline;'>554&lt;/span>401. &lt;span style='text-decoration: underline;'>53&lt;/span>758&lt;span style='text-decoration: underline;'>257&lt;/span>135. &lt;span style='text-decoration: underline;'>55&lt;/span>909&lt;span style='text-decoration: underline;'>065&lt;/span>223.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> N F &lt;span style='text-decoration: underline;'>991&lt;/span>417 &lt;span style='text-decoration: underline;'>1&lt;/span>487&lt;span style='text-decoration: underline;'>504&lt;/span>710. &lt;span style='text-decoration: underline;'>1&lt;/span>413&lt;span style='text-decoration: underline;'>082&lt;/span>168. &lt;span style='text-decoration: underline;'>1&lt;/span>469&lt;span style='text-decoration: underline;'>649&lt;/span>223.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> N O 74&lt;span style='text-decoration: underline;'>476&lt;/span>040 &lt;span style='text-decoration: underline;'>111&lt;/span>701&lt;span style='text-decoration: underline;'>729&lt;/span>698. &lt;span style='text-decoration: underline;'>106&lt;/span>118&lt;span style='text-decoration: underline;'>230&lt;/span>308. &lt;span style='text-decoration: underline;'>110&lt;/span>367&lt;span style='text-decoration: underline;'>043&lt;/span>872.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> R F 37&lt;span style='text-decoration: underline;'>719&lt;/span>753 &lt;span style='text-decoration: underline;'>56&lt;/span>568&lt;span style='text-decoration: underline;'>041&lt;/span>381. &lt;span style='text-decoration: underline;'>53&lt;/span>741&lt;span style='text-decoration: underline;'>292&lt;/span>685. &lt;span style='text-decoration: underline;'>55&lt;/span>889&lt;span style='text-decoration: underline;'>619&lt;/span>120.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 4 more variables: &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>avg_qty&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;, &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>avg_price&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;, &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>avg_disc&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>count_order&lt;/span>&lt;span style='color: #555555;'> &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that the resulting object is indistinguishable from a regular tibble, except for the additional class.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/typeof.html'>typeof&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>out&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] "list"&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/class.html'>class&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>out&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] "duckplyr_df" "tbl_df" "tbl" "data.frame"&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nv'>out&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>count_order&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 1478493 38854 2920374 1478870&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Operations not yet supported by duckplyr are automatically outsourced to dplyr. For instance, filtering on grouped data is not supported, but it still works thanks to the fallback mechanism. By default, the fallback is silent, but you can make it visible by setting an environment variable. This is useful if you want to better understanding what&amp;rsquo;s making your code slow.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Sys.setenv.html'>Sys.setenv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>DUCKPLYR_FALLBACK_INFO &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>lineitem_tbl&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>duckplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://duckplyr.tidyverse.org/reference/duckdb_tibble.html'>as_duckdb_tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_quantity&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Extremes.html'>max&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_quantity&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>l_returnflag&lt;/span>, &lt;span class='nv'>l_linestatus&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Cannot process duckplyr query with DuckDB, falling back to dplyr.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span> `filter(.by = ...)` not implemented, try `mutate(.by = ...)` followed by a simple `filter()`.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A duckplyr data frame: 16 variables&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>l_orderkey&lt;/span> &lt;span style='font-weight: bold;'>l_partkey&lt;/span> &lt;span style='font-weight: bold;'>l_suppkey&lt;/span> &lt;span style='font-weight: bold;'>l_linenumber&lt;/span> &lt;span style='font-weight: bold;'>l_quantity&lt;/span> &lt;span style='font-weight: bold;'>l_extendedprice&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 5 &lt;span style='text-decoration: underline;'>37&lt;/span>531 35 3 50 &lt;span style='text-decoration: underline;'>73&lt;/span>426.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 131 &lt;span style='text-decoration: underline;'>44&lt;/span>255 &lt;span style='text-decoration: underline;'>9&lt;/span>264 2 50 &lt;span style='text-decoration: underline;'>59&lt;/span>962.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 199 &lt;span style='text-decoration: underline;'>132&lt;/span>072 &lt;span style='text-decoration: underline;'>9&lt;/span>612 1 50 &lt;span style='text-decoration: underline;'>55&lt;/span>204.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 231 &lt;span style='text-decoration: underline;'>198&lt;/span>124 644 3 50 &lt;span style='text-decoration: underline;'>61&lt;/span>106 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 260 &lt;span style='text-decoration: underline;'>155&lt;/span>887 &lt;span style='text-decoration: underline;'>5&lt;/span>888 1 50 &lt;span style='text-decoration: underline;'>97&lt;/span>144 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 263 &lt;span style='text-decoration: underline;'>142&lt;/span>891 434 3 50 &lt;span style='text-decoration: underline;'>96&lt;/span>694.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 323 &lt;span style='text-decoration: underline;'>163&lt;/span>628 &lt;span style='text-decoration: underline;'>1&lt;/span>177 1 50 &lt;span style='text-decoration: underline;'>84&lt;/span>581 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 354 &lt;span style='text-decoration: underline;'>58&lt;/span>125 &lt;span style='text-decoration: underline;'>8&lt;/span>126 3 50 &lt;span style='text-decoration: underline;'>54&lt;/span>156 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 484 &lt;span style='text-decoration: underline;'>183&lt;/span>351 &lt;span style='text-decoration: underline;'>5&lt;/span>870 3 50 &lt;span style='text-decoration: underline;'>71&lt;/span>718.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 485 &lt;span style='text-decoration: underline;'>149&lt;/span>523 &lt;span style='text-decoration: underline;'>9&lt;/span>524 1 50 &lt;span style='text-decoration: underline;'>78&lt;/span>626 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 10 more variables: &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>l_discount&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;, &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>l_tax&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;, &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>l_returnflag&lt;/span>&lt;span style='color: #555555;'> &amp;lt;chr&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>l_linestatus&lt;/span>&lt;span style='color: #555555;'> &amp;lt;chr&amp;gt;, &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>l_shipdate&lt;/span>&lt;span style='color: #555555;'> &amp;lt;date&amp;gt;, &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>l_commitdate&lt;/span>&lt;span style='color: #555555;'> &amp;lt;date&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>l_receiptdate&lt;/span>&lt;span style='color: #555555;'> &amp;lt;date&amp;gt;, &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>l_shipinstruct&lt;/span>&lt;span style='color: #555555;'> &amp;lt;chr&amp;gt;, &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>l_shipmode&lt;/span>&lt;span style='color: #555555;'> &amp;lt;chr&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># &lt;/span>&lt;span style='color: #555555; font-weight: bold;'>l_comment&lt;/span>&lt;span style='color: #555555;'> &amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can also directly use DuckDB functions with the &lt;code>dd$&lt;/code> qualifier. Functions with this prefix will not be translated at all and passed through directly to DuckDB. For example, the following code uses DuckDB&amp;rsquo;s internal implementation of
&lt;a href="https://duckdb.org/docs/stable/sql/functions/text.html#editdist3s1-s2" target="_blank" rel="noopener">Levenstein distance&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>a &lt;span class='o'>=&lt;/span> &lt;span class='s'>"dbplyr"&lt;/span>, b &lt;span class='o'>=&lt;/span> &lt;span class='s'>"duckplyr"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>c &lt;span class='o'>=&lt;/span> &lt;span class='nv'>dd&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nf'>levenshtein&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>a&lt;/span>, &lt;span class='nv'>b&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>a&lt;/span> &lt;span style='font-weight: bold;'>b&lt;/span> &lt;span style='font-weight: bold;'>c&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> dbplyr duckplyr 3&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>See
&lt;a href="https://duckplyr.tidyverse.org/articles/duckdb.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;duckdb&amp;quot;)&lt;/code>&lt;/a> for more information on these features.&lt;/p>
&lt;p>If you&amp;rsquo;re working with dbplyr too, you can use
&lt;a href="https://duckplyr.tidyverse.org/reference/as_tbl.html" target="_blank" rel="noopener">&lt;code>as_tbl()&lt;/code>&lt;/a> you to convert a duckplyr tibble to a dbplyr lazy table. This allows you to seamlessly interact with existing code that might use inline SQL or other dbplyr functionality. With
&lt;a href="https://duckplyr.tidyverse.org/reference/duckdb_tibble.html" target="_blank" rel="noopener">&lt;code>as_duckdb_tibble()&lt;/code>&lt;/a>, you can convert a dbplyr lazy table to a duckplyr tibble. Both operations work without intermediate materialization.&lt;/p>
&lt;h2 id="benchmark">Benchmark
&lt;a href="#benchmark">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>duckplyr is often much faster than dplyr. The comparison below is done in a fresh R session where dplyr is attached but duckplyr is not.&lt;/p>
&lt;p>We use &lt;code>tpch_dplyr()&lt;/code> as defined above to run the query with dplyr. The function that runs it with duckplyr only wraps the input data in a duck frame and forwards it to the dplyr function. The
&lt;a href="https://dplyr.tidyverse.org/reference/compute.html" target="_blank" rel="noopener">&lt;code>collect()&lt;/code>&lt;/a> at the end is required only for this benchmark to ensure fairness.&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>tpch_duckplyr&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lineitem&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>lineitem&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>duckplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://duckplyr.tidyverse.org/reference/duckdb_tibble.html'>as_duckdb_tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>tpch_dplyr&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/compute.html'>collect&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And now we compare the two:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>bench&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://bench.r-lib.org/reference/mark.html'>mark&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>tpch_dplyr&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lineitem_tbl&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>tpch_duckplyr&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lineitem_tbl&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> check &lt;span class='o'>=&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/all.equal.html'>all.equal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>.x&lt;/span>, &lt;span class='nv'>.y&lt;/span>, tolerance &lt;span class='o'>=&lt;/span> &lt;span class='m'>1e-10&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning: Some expressions had a GC in every iteration; so filtering is disabled.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 6&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>expression&lt;/span> &lt;span style='font-weight: bold;'>min&lt;/span> &lt;span style='font-weight: bold;'>median&lt;/span> &lt;span style='font-weight: bold;'>`itr/sec`&lt;/span> &lt;span style='font-weight: bold;'>mem_alloc&lt;/span> &lt;span style='font-weight: bold;'>`gc/sec`&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;bch:expr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;bch:tm&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;bch:tm&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;bch:byt&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> tpch_dplyr(lineitem_tbl) 611.6ms 611.6ms 1.64 1.25GB 1.64&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> tpch_duckplyr(lineitem_tbl) 71.4ms 72.3ms 13.8 314.38KB 0&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In this example, duckplyr is a lot faster than dplyr. It also appears to use much less memory, but this is misleading: DuckDB manages the memory, not R, so the memory usage is not visible to
&lt;a href="https://bench.r-lib.org/reference/mark.html" target="_blank" rel="noopener">&lt;code>bench::mark()&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="out-of-memory-data">Out-of-memory data
&lt;a href="#out-of-memory-data">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As well as improved speed with in-memory datasets, duckplyr makes it easy to work with datasets that are too big to fit in memory. In this case, you want:&lt;/p>
&lt;ol>
&lt;li>To work with data stored in modern formats designed for large data (e.g. Parquet).&lt;/li>
&lt;li>To be able to store large intermediate results on disk, keeping them out of memory.&lt;/li>
&lt;li>Fast computation!&lt;/li>
&lt;/ol>
&lt;p>duckdplyr provides each of these features:&lt;/p>
&lt;ol>
&lt;li>You can read data from disk with functions like
&lt;a href="https://duckplyr.tidyverse.org/reference/read_parquet_duckdb.html" target="_blank" rel="noopener">&lt;code>read_parquet_duckdb()&lt;/code>&lt;/a>.&lt;/li>
&lt;li>You can save intermediate results to disk with
&lt;a href="https://duckplyr.tidyverse.org/reference/compute_parquet.html" target="_blank" rel="noopener">&lt;code>compute_parquet()&lt;/code>&lt;/a> and
&lt;a href="https://duckplyr.tidyverse.org/reference/compute_csv.html" target="_blank" rel="noopener">&lt;code>compute_csv()&lt;/code>&lt;/a>.&lt;/li>
&lt;li>duckdplyr takes advantage of DuckDB&amp;rsquo;s query planner which considers your entire pipeline holistically to figure out the most efficient way to get the data you need.&lt;/li>
&lt;/ol>
&lt;p>See
&lt;a href="https://duckplyr.tidyverse.org/articles/large.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;large&amp;quot;)&lt;/code>&lt;/a> for a walkthrough and more details.&lt;/p>
&lt;h2 id="help-us-improve-duckplyr">Help us improve duckplyr!
&lt;a href="#help-us-improve-duckplyr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Our goals for future development of duckplyr include:&lt;/p>
&lt;ul>
&lt;li>Enabling users to provide
&lt;a href="https://github.com/tidyverse/duckplyr/issues/158" target="_blank" rel="noopener">custom translations&lt;/a> of dplyr functionality;&lt;/li>
&lt;li>Making it easier to contribute code to duckplyr;&lt;/li>
&lt;li>Supporting more dplyr and tidyr functionality natively in DuckDB.&lt;/li>
&lt;/ul>
&lt;p>You can help!&lt;/p>
&lt;ul>
&lt;li>Please report any issues, especially regarding unknown incompabilities. See
&lt;a href="https://duckplyr.tidyverse.org/articles/limits.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;limits&amp;quot;)&lt;/code>&lt;/a>.&lt;/li>
&lt;li>Contribute to the codebase after reading duckplyr&amp;rsquo;s
&lt;a href="https://duckplyr.tidyverse.org/CONTRIBUTING.html" target="_blank" rel="noopener">contributing guide&lt;/a>.&lt;/li>
&lt;li>Turn on telemetry to help us hear about the most frequent fallbacks so we can prioritize working on the corresponding missing dplyr translation. See
&lt;a href="https://duckplyr.tidyverse.org/articles/telemetry.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;telemetry&amp;quot;)&lt;/code>&lt;/a> and
&lt;a href="https://duckplyr.tidyverse.org/reference/fallback.html" target="_blank" rel="noopener">&lt;code>duckplyr::fallback_sitrep()&lt;/code>&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="additional-resources">Additional resources
&lt;a href="#additional-resources">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Eager to learn more about duckplyr &amp;ndash; beside by trying it out yourself? The duckplyr website features several
&lt;a href="https://duckplyr.tidyverse.org/articles/" target="_blank" rel="noopener">articles&lt;/a>. Furthermore, the blog post
&lt;a href="https://duckdb.org/2024/04/02/duckplyr.html" target="_blank" rel="noopener">&amp;ldquo;duckplyr: dplyr Powered by DuckDB&amp;rdquo;&lt;/a> by Hannes Mühleisen provides some context on duckplyr including its inner workings, as also seen in a
&lt;a href="https://blog.r-hub.io/2025/02/13/lazy-meanings/#duckplyr-lazy-evaluation-and-prudence" target="_blank" rel="noopener">section&lt;/a> of the R-hub blog post
&lt;a href="https://blog.r-hub.io/2025/02/13/lazy-meanings/" target="_blank" rel="noopener">&amp;ldquo;Lazy introduction to laziness in R&amp;rdquo;&lt;/a> by Maëlle Salmon, Athanasia Mo Mowinckel and Hannah Frick.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all folks who filed issues, created PRs and generally helped to improve duckplyr and its workhorse
&lt;a href="https://r.duckdb.org/" target="_blank" rel="noopener">duckdb&lt;/a>!&lt;/p>
&lt;p>
&lt;a href="https://github.com/adamschwing" target="_blank" rel="noopener">@adamschwing&lt;/a>,
&lt;a href="https://github.com/alejandrohagan" target="_blank" rel="noopener">@alejandrohagan&lt;/a>,
&lt;a href="https://github.com/andreranza" target="_blank" rel="noopener">@andreranza&lt;/a>,
&lt;a href="https://github.com/apalacio9502" target="_blank" rel="noopener">@apalacio9502&lt;/a>,
&lt;a href="https://github.com/apsteinmetz" target="_blank" rel="noopener">@apsteinmetz&lt;/a>,
&lt;a href="https://github.com/barracuda156" target="_blank" rel="noopener">@barracuda156&lt;/a>,
&lt;a href="https://github.com/beniaminogreen" target="_blank" rel="noopener">@beniaminogreen&lt;/a>,
&lt;a href="https://github.com/bob-rietveld" target="_blank" rel="noopener">@bob-rietveld&lt;/a>,
&lt;a href="https://github.com/brichards920" target="_blank" rel="noopener">@brichards920&lt;/a>,
&lt;a href="https://github.com/cboettig" target="_blank" rel="noopener">@cboettig&lt;/a>,
&lt;a href="https://github.com/davidjayjackson" target="_blank" rel="noopener">@davidjayjackson&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/Ed2uiz" target="_blank" rel="noopener">@Ed2uiz&lt;/a>,
&lt;a href="https://github.com/eitsupi" target="_blank" rel="noopener">@eitsupi&lt;/a>,
&lt;a href="https://github.com/era127" target="_blank" rel="noopener">@era127&lt;/a>,
&lt;a href="https://github.com/etiennebacher" target="_blank" rel="noopener">@etiennebacher&lt;/a>,
&lt;a href="https://github.com/eutwt" target="_blank" rel="noopener">@eutwt&lt;/a>,
&lt;a href="https://github.com/fmichonneau" target="_blank" rel="noopener">@fmichonneau&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hannes" target="_blank" rel="noopener">@hannes&lt;/a>,
&lt;a href="https://github.com/hawkfish" target="_blank" rel="noopener">@hawkfish&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/JanSulavik" target="_blank" rel="noopener">@JanSulavik&lt;/a>,
&lt;a href="https://github.com/JavOrraca" target="_blank" rel="noopener">@JavOrraca&lt;/a>,
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a>,
&lt;a href="https://github.com/jhk0530" target="_blank" rel="noopener">@jhk0530&lt;/a>,
&lt;a href="https://github.com/joakimlinde" target="_blank" rel="noopener">@joakimlinde&lt;/a>,
&lt;a href="https://github.com/JosiahParry" target="_blank" rel="noopener">@JosiahParry&lt;/a>,
&lt;a href="https://github.com/kevbaer" target="_blank" rel="noopener">@kevbaer&lt;/a>,
&lt;a href="https://github.com/larry77" target="_blank" rel="noopener">@larry77&lt;/a>,
&lt;a href="https://github.com/lnkuiper" target="_blank" rel="noopener">@lnkuiper&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/lschneiderbauer" target="_blank" rel="noopener">@lschneiderbauer&lt;/a>,
&lt;a href="https://github.com/luisDVA" target="_blank" rel="noopener">@luisDVA&lt;/a>,
&lt;a href="https://github.com/math-mcshane" target="_blank" rel="noopener">@math-mcshane&lt;/a>,
&lt;a href="https://github.com/meersel" target="_blank" rel="noopener">@meersel&lt;/a>,
&lt;a href="https://github.com/multimeric" target="_blank" rel="noopener">@multimeric&lt;/a>,
&lt;a href="https://github.com/mytarmail" target="_blank" rel="noopener">@mytarmail&lt;/a>,
&lt;a href="https://github.com/nicki-dese" target="_blank" rel="noopener">@nicki-dese&lt;/a>,
&lt;a href="https://github.com/PMassicotte" target="_blank" rel="noopener">@PMassicotte&lt;/a>,
&lt;a href="https://github.com/prasundutta87" target="_blank" rel="noopener">@prasundutta87&lt;/a>,
&lt;a href="https://github.com/rafapereirabr" target="_blank" rel="noopener">@rafapereirabr&lt;/a>,
&lt;a href="https://github.com/Robinlovelace" target="_blank" rel="noopener">@Robinlovelace&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/sparrow925" target="_blank" rel="noopener">@sparrow925&lt;/a>,
&lt;a href="https://github.com/stefanlinner" target="_blank" rel="noopener">@stefanlinner&lt;/a>,
&lt;a href="https://github.com/szarnyasg" target="_blank" rel="noopener">@szarnyasg&lt;/a>,
&lt;a href="https://github.com/thomasp85" target="_blank" rel="noopener">@thomasp85&lt;/a>,
&lt;a href="https://github.com/TimTaylor" target="_blank" rel="noopener">@TimTaylor&lt;/a>,
&lt;a href="https://github.com/Tmonster" target="_blank" rel="noopener">@Tmonster&lt;/a>,
&lt;a href="https://github.com/toppyy" target="_blank" rel="noopener">@toppyy&lt;/a>,
&lt;a href="https://github.com/wibeasley" target="_blank" rel="noopener">@wibeasley&lt;/a>,
&lt;a href="https://github.com/yjunechoe" target="_blank" rel="noopener">@yjunechoe&lt;/a>,
&lt;a href="https://github.com/ywhcuhk" target="_blank" rel="noopener">@ywhcuhk&lt;/a>,
&lt;a href="https://github.com/zhjx19" target="_blank" rel="noopener">@zhjx19&lt;/a>,
&lt;a href="https://github.com/ablack3" target="_blank" rel="noopener">@ablack3&lt;/a>,
&lt;a href="https://github.com/actuarial-lonewolf" target="_blank" rel="noopener">@actuarial-lonewolf&lt;/a>,
&lt;a href="https://github.com/ajdamico" target="_blank" rel="noopener">@ajdamico&lt;/a>,
&lt;a href="https://github.com/amirmazmi" target="_blank" rel="noopener">@amirmazmi&lt;/a>,
&lt;a href="https://github.com/anderson461123" target="_blank" rel="noopener">@anderson461123&lt;/a>,
&lt;a href="https://github.com/andrewGhazi" target="_blank" rel="noopener">@andrewGhazi&lt;/a>,
&lt;a href="https://github.com/Antonov548" target="_blank" rel="noopener">@Antonov548&lt;/a>,
&lt;a href="https://github.com/appiehappie999" target="_blank" rel="noopener">@appiehappie999&lt;/a>,
&lt;a href="https://github.com/ArthurAndrews" target="_blank" rel="noopener">@ArthurAndrews&lt;/a>,
&lt;a href="https://github.com/arthurgailes" target="_blank" rel="noopener">@arthurgailes&lt;/a>,
&lt;a href="https://github.com/babaknaimi" target="_blank" rel="noopener">@babaknaimi&lt;/a>,
&lt;a href="https://github.com/bcaradima" target="_blank" rel="noopener">@bcaradima&lt;/a>,
&lt;a href="https://github.com/bdforbes" target="_blank" rel="noopener">@bdforbes&lt;/a>,
&lt;a href="https://github.com/bergest" target="_blank" rel="noopener">@bergest&lt;/a>,
&lt;a href="https://github.com/bill-ash" target="_blank" rel="noopener">@bill-ash&lt;/a>,
&lt;a href="https://github.com/BorgeJorge" target="_blank" rel="noopener">@BorgeJorge&lt;/a>,
&lt;a href="https://github.com/brianmsm" target="_blank" rel="noopener">@brianmsm&lt;/a>,
&lt;a href="https://github.com/chainsawriot" target="_blank" rel="noopener">@chainsawriot&lt;/a>,
&lt;a href="https://github.com/ckarnes" target="_blank" rel="noopener">@ckarnes&lt;/a>,
&lt;a href="https://github.com/clementlefevre" target="_blank" rel="noopener">@clementlefevre&lt;/a>,
&lt;a href="https://github.com/cregouby" target="_blank" rel="noopener">@cregouby&lt;/a>,
&lt;a href="https://github.com/cy-james-lee" target="_blank" rel="noopener">@cy-james-lee&lt;/a>,
&lt;a href="https://github.com/daranzolin" target="_blank" rel="noopener">@daranzolin&lt;/a>,
&lt;a href="https://github.com/david-cortes" target="_blank" rel="noopener">@david-cortes&lt;/a>,
&lt;a href="https://github.com/DavZim" target="_blank" rel="noopener">@DavZim&lt;/a>,
&lt;a href="https://github.com/denis-or" target="_blank" rel="noopener">@denis-or&lt;/a>,
&lt;a href="https://github.com/developertest1234" target="_blank" rel="noopener">@developertest1234&lt;/a>,
&lt;a href="https://github.com/dicorynia" target="_blank" rel="noopener">@dicorynia&lt;/a>,
&lt;a href="https://github.com/dsolito" target="_blank" rel="noopener">@dsolito&lt;/a>,
&lt;a href="https://github.com/e-kotov" target="_blank" rel="noopener">@e-kotov&lt;/a>,
&lt;a href="https://github.com/EAVWing" target="_blank" rel="noopener">@EAVWing&lt;/a>,
&lt;a href="https://github.com/eddelbuettel" target="_blank" rel="noopener">@eddelbuettel&lt;/a>,
&lt;a href="https://github.com/edward-burn" target="_blank" rel="noopener">@edward-burn&lt;/a>,
&lt;a href="https://github.com/elefeint" target="_blank" rel="noopener">@elefeint&lt;/a>,
&lt;a href="https://github.com/eli-daniels" target="_blank" rel="noopener">@eli-daniels&lt;/a>,
&lt;a href="https://github.com/elysabethpc" target="_blank" rel="noopener">@elysabethpc&lt;/a>,
&lt;a href="https://github.com/erikvona" target="_blank" rel="noopener">@erikvona&lt;/a>,
&lt;a href="https://github.com/florisvdh" target="_blank" rel="noopener">@florisvdh&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/ggrothendieck" target="_blank" rel="noopener">@ggrothendieck&lt;/a>,
&lt;a href="https://github.com/hdmm3" target="_blank" rel="noopener">@hdmm3&lt;/a>,
&lt;a href="https://github.com/hope-data-science" target="_blank" rel="noopener">@hope-data-science&lt;/a>,
&lt;a href="https://github.com/IoannaNika" target="_blank" rel="noopener">@IoannaNika&lt;/a>,
&lt;a href="https://github.com/jabrown-aepenergy" target="_blank" rel="noopener">@jabrown-aepenergy&lt;/a>,
&lt;a href="https://github.com/JamesLMacAulay" target="_blank" rel="noopener">@JamesLMacAulay&lt;/a>,
&lt;a href="https://github.com/jangorecki" target="_blank" rel="noopener">@jangorecki&lt;/a>,
&lt;a href="https://github.com/javierlenzi" target="_blank" rel="noopener">@javierlenzi&lt;/a>,
&lt;a href="https://github.com/Joe-Heffer-Shef" target="_blank" rel="noopener">@Joe-Heffer-Shef&lt;/a>,
&lt;a href="https://github.com/kalibera" target="_blank" rel="noopener">@kalibera&lt;/a>,
&lt;a href="https://github.com/lboller-pwbm" target="_blank" rel="noopener">@lboller-pwbm&lt;/a>,
&lt;a href="https://github.com/lgaborini" target="_blank" rel="noopener">@lgaborini&lt;/a>,
&lt;a href="https://github.com/m-muecke" target="_blank" rel="noopener">@m-muecke&lt;/a>,
&lt;a href="https://github.com/meztez" target="_blank" rel="noopener">@meztez&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/mtmorgan" target="_blank" rel="noopener">@mtmorgan&lt;/a>,
&lt;a href="https://github.com/nassuphis" target="_blank" rel="noopener">@nassuphis&lt;/a>,
&lt;a href="https://github.com/nbc" target="_blank" rel="noopener">@nbc&lt;/a>,
&lt;a href="https://github.com/olivroy" target="_blank" rel="noopener">@olivroy&lt;/a>,
&lt;a href="https://github.com/pdet" target="_blank" rel="noopener">@pdet&lt;/a>,
&lt;a href="https://github.com/phdjsep" target="_blank" rel="noopener">@phdjsep&lt;/a>,
&lt;a href="https://github.com/pierre-lamarche" target="_blank" rel="noopener">@pierre-lamarche&lt;/a>,
&lt;a href="https://github.com/r2evans" target="_blank" rel="noopener">@r2evans&lt;/a>,
&lt;a href="https://github.com/ran-codes" target="_blank" rel="noopener">@ran-codes&lt;/a>,
&lt;a href="https://github.com/rplsmn" target="_blank" rel="noopener">@rplsmn&lt;/a>,
&lt;a href="https://github.com/Saarialho" target="_blank" rel="noopener">@Saarialho&lt;/a>,
&lt;a href="https://github.com/SimonCoulombe" target="_blank" rel="noopener">@SimonCoulombe&lt;/a>,
&lt;a href="https://github.com/tau31" target="_blank" rel="noopener">@tau31&lt;/a>,
&lt;a href="https://github.com/thohan88" target="_blank" rel="noopener">@thohan88&lt;/a>,
&lt;a href="https://github.com/ThomasSoeiro" target="_blank" rel="noopener">@ThomasSoeiro&lt;/a>,
&lt;a href="https://github.com/timothygmitchell" target="_blank" rel="noopener">@timothygmitchell&lt;/a>,
&lt;a href="https://github.com/vincentarelbundock" target="_blank" rel="noopener">@vincentarelbundock&lt;/a>,
&lt;a href="https://github.com/VincentGuyader" target="_blank" rel="noopener">@VincentGuyader&lt;/a>,
&lt;a href="https://github.com/wlangera" target="_blank" rel="noopener">@wlangera&lt;/a>,
&lt;a href="https://github.com/xbasics" target="_blank" rel="noopener">@xbasics&lt;/a>,
&lt;a href="https://github.com/xiaodaigh" target="_blank" rel="noopener">@xiaodaigh&lt;/a>,
&lt;a href="https://github.com/xtimbeau" target="_blank" rel="noopener">@xtimbeau&lt;/a>,
&lt;a href="https://github.com/yng-me" target="_blank" rel="noopener">@yng-me&lt;/a>,
&lt;a href="https://github.com/Yousuf28" target="_blank" rel="noopener">@Yousuf28&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>, and
&lt;a href="https://github.com/zcatav" target="_blank" rel="noopener">@zcatav&lt;/a>&lt;/p>
&lt;p>Special thanks to Joe Thorley (
&lt;a href="https://github.com/joethorley" target="_blank" rel="noopener">@joethorley&lt;/a>) for help with choosing the right words.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>If you haven&amp;rsquo;t heard of it yet, watch
&lt;a href="https://www.youtube.com/watch?v=GELhdezYmP0&amp;amp;feature=youtu.be" target="_blank" rel="noopener">Hannes Mühleisen&amp;rsquo;s keynote at posit::conf(2024)&lt;/a>. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>If omitted, the results would be unchanged but the measurements would be wrong. The computation would then be triggered by the check. See
&lt;a href="https://duckplyr.tidyverse.org/articles/prudence.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;prudence&amp;quot;)&lt;/code>&lt;/a> for details. &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>dbplyr 2.4.0</title><link>https://www.tidyverse.org/blog/2023/10/dbplyr-2-4-0/</link><pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/10/dbplyr-2-4-0/</guid><description>&lt;!--
* also include something about dbplyr 2.3.1?
* support for [`join_by()`](https://dplyr.tidyverse.org/reference/join_by.html)
* many bugs introduced in 2.3.0 fixed
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re chuffed to announce the release of
&lt;a href="http://dbplyr.tidyverse.org/" target="_blank" rel="noopener">dbplyr&lt;/a> 2.4.0. dbplyr is a database backend for dplyr that allows you to use a remote database as if it was a collection of local data frames: you write ordinary dplyr code and dbplyr translates it to SQL for you.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dbplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will highlight some of the most important new features: eliminating subqueries when using multiple unions in a row, getting more control on the generated SQL, and a handful of new translations. As usual, release comes with a large number of improvements to translations for individual backends; see the full list in the
&lt;a href="https://github.com/tidyverse/dbplyr/releases/tag/v2.4.0" target="_blank" rel="noopener">release notes&lt;/a>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dbplyr.tidyverse.org/'>dbplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>, warn.conflicts &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="sql-optimisation">SQL optimisation
&lt;a href="#sql-optimisation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>dbplyr now produces fewer subqueries when combining tables with
&lt;a href="https://generics.r-lib.org/reference/setops.html" target="_blank" rel="noopener">&lt;code>union()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/setops.html" target="_blank" rel="noopener">&lt;code>union_all()&lt;/code>&lt;/a> resulting in shorter, more readable, and, in some cases, faster SQL.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>lf1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='s'>"a"&lt;/span>, .name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"lf1"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>lf2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='s'>"b"&lt;/span>, .name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"lf2"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>lf3&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, z &lt;span class='o'>=&lt;/span> &lt;span class='s'>"c"&lt;/span>, .name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"lf3"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>lf1&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/setops.html'>union&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lf2&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/setops.html'>union&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lf3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `lf1`.*, NULL&lt;span style='color: #0000BB;'> AS &lt;/span>`z`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf1`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>UNION&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `lf2`.*, NULL&lt;span style='color: #0000BB;'> AS &lt;/span>`z`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf2`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>UNION&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `x`, NULL&lt;span style='color: #0000BB;'> AS &lt;/span>`y`, `z`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf3`&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>(As usual in these blog posts, I&amp;rsquo;m using
&lt;a href="https://dbplyr.tidyverse.org/reference/tbl_lazy.html" target="_blank" rel="noopener">&lt;code>lazy_frame()&lt;/code>&lt;/a> to focus on the SQL generation, without having to set up a dummy database.)&lt;/p>
&lt;p>Similarly, a &lt;code>semi/anti_join()&lt;/code> on a filtered table now avoids a subquery:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>lf1&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter-joins.html'>semi_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lf3&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>z&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"c"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `lf1`.*&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf1`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; WHERE EXISTS (&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT 1 FROM&lt;/span> `lf3`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>WHERE&lt;/span> (`lf1`.`x` = `lf3`.`x`)&lt;span style='color: #0000BB;'> AND&lt;/span> (`lf3`.`z` = 'c')&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; )&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="sql-generation">SQL generation
&lt;a href="#sql-generation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The new argument &lt;code>sql_options&lt;/code> for
&lt;a href="https://dplyr.tidyverse.org/reference/explain.html" target="_blank" rel="noopener">&lt;code>show_query()&lt;/code>&lt;/a> and
&lt;a href="https://dbplyr.tidyverse.org/reference/remote_name.html" target="_blank" rel="noopener">&lt;code>remote_query()&lt;/code>&lt;/a> gives you more control on the generated SQL.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>By default dbplyr uses &lt;code>*&lt;/code> to select all columns of a table, but with &lt;code>use_star = FALSE&lt;/code> all columns are selected explicitly:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>lf3&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>, z &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>, .name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"lf3"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>lf3&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>a &lt;span class='o'>=&lt;/span> &lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `lf3`.*, 4.0&lt;span style='color: #0000BB;'> AS &lt;/span>`a`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf3`&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>lf3&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>a &lt;span class='o'>=&lt;/span> &lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>sql_options &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/sql_options.html'>sql_options&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>use_star &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `x`, `y`, `z`, 4.0&lt;span style='color: #0000BB;'> AS &lt;/span>`a`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf3`&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>If you prefer common table expressions (CTE) over subqueries use &lt;code>cte = TRUE&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>nested_query&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>lf3&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>z &lt;span class='o'>=&lt;/span> &lt;span class='nv'>z&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lf2&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>nested_query&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `LHS`.*&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> (&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `x`, `y`, `z` + 1.0&lt;span style='color: #0000BB;'> AS &lt;/span>`z`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf3`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; )&lt;span style='color: #0000BB;'> AS &lt;/span>`LHS`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>LEFT JOIN&lt;/span> `lf2`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ON&lt;/span> (`LHS`.`x` = `lf2`.`x`&lt;span style='color: #0000BB;'> AND&lt;/span> `LHS`.`y` = `lf2`.`y`)&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>nested_query&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>sql_options &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/sql_options.html'>sql_options&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>cte &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>WITH&lt;/span> `q01` &lt;span style='color: #0000BB;'>AS&lt;/span> (&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `x`, `y`, `z` + 1.0&lt;span style='color: #0000BB;'> AS &lt;/span>`z`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf3`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; )&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `LHS`.*&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `q01`&lt;span style='color: #0000BB;'> AS &lt;/span>`LHS`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>LEFT JOIN&lt;/span> `lf2`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ON&lt;/span> (`LHS`.`x` = `lf2`.`x`&lt;span style='color: #0000BB;'> AND&lt;/span> `LHS`.`y` = `lf2`.`y`)&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>And if you want that all columns in a join are qualified with the table name and not only the ambiguous ones use &lt;code>qualify_all_columns = TRUE&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>qualify_columns&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>lf2&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lf3&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>qualify_columns&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `lf2`.*, `z`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf2`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>LEFT JOIN&lt;/span> `lf3`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ON&lt;/span> (`lf2`.`x` = `lf3`.`x`&lt;span style='color: #0000BB;'> AND&lt;/span> `lf2`.`y` = `lf3`.`y`)&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>qualify_columns&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>sql_options &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/sql_options.html'>sql_options&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>qualify_all_columns &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `lf2`.*, `lf3`.`z`&lt;span style='color: #0000BB;'> AS &lt;/span>`z`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf2`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>LEFT JOIN&lt;/span> `lf3`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ON&lt;/span> (`lf2`.`x` = `lf3`.`x`&lt;span style='color: #0000BB;'> AND&lt;/span> `lf2`.`y` = `lf3`.`y`)&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h2 id="new-translations">New translations
&lt;a href="#new-translations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>str_detect()&lt;/code>, &lt;code>str_starts()&lt;/code> and &lt;code>str_ends()&lt;/code> with fixed patterns are translated to &lt;code>INSTR()&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>lf1&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>stringr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://stringr.tidyverse.org/reference/str_detect.html'>str_detect&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nf'>stringr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://stringr.tidyverse.org/reference/modifiers.html'>fixed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"abc"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>stringr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://stringr.tidyverse.org/reference/str_starts.html'>str_starts&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nf'>stringr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://stringr.tidyverse.org/reference/modifiers.html'>fixed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `lf1`.*&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf1`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>WHERE&lt;/span> (INSTR(`x`, 'abc') &amp;gt; 0)&lt;span style='color: #0000BB;'> AND&lt;/span> (INSTR(`x`, 'a') = 1)&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And
&lt;a href="https://rdrr.io/r/base/nchar.html" target="_blank" rel="noopener">&lt;code>nzchar()&lt;/code>&lt;/a> and
&lt;a href="https://rdrr.io/r/stats/Uniform.html" target="_blank" rel="noopener">&lt;code>runif()&lt;/code>&lt;/a> are now translated to their SQL equivalents:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>lf1&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/nchar.html'>nzchar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>z &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Uniform.html'>runif&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `lf1`.*, RANDOM()&lt;span style='color: #0000BB;'> AS &lt;/span>`z`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf1`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>WHERE&lt;/span> (((`x` IS NULL) OR `x` != ''))&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The vast majority of this release (particularly the SQL optimisations) are from
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">Maximilian Girlich&lt;/a>; thanks so much for continued work on this package! And a big thanks go to the 84 other folks who helped out by filing issues and contributing code:
&lt;a href="https://github.com/abalter" target="_blank" rel="noopener">@abalter&lt;/a>,
&lt;a href="https://github.com/ablack3" target="_blank" rel="noopener">@ablack3&lt;/a>,
&lt;a href="https://github.com/andreassoteriadesmoj" target="_blank" rel="noopener">@andreassoteriadesmoj&lt;/a>,
&lt;a href="https://github.com/apalacio9502" target="_blank" rel="noopener">@apalacio9502&lt;/a>,
&lt;a href="https://github.com/avsdev-cw" target="_blank" rel="noopener">@avsdev-cw&lt;/a>,
&lt;a href="https://github.com/bairdj" target="_blank" rel="noopener">@bairdj&lt;/a>,
&lt;a href="https://github.com/bastistician" target="_blank" rel="noopener">@bastistician&lt;/a>,
&lt;a href="https://github.com/brownj31" target="_blank" rel="noopener">@brownj31&lt;/a>,
&lt;a href="https://github.com/But2ene" target="_blank" rel="noopener">@But2ene&lt;/a>,
&lt;a href="https://github.com/carlganz" target="_blank" rel="noopener">@carlganz&lt;/a>,
&lt;a href="https://github.com/catalamarti" target="_blank" rel="noopener">@catalamarti&lt;/a>,
&lt;a href="https://github.com/CEH-SLU" target="_blank" rel="noopener">@CEH-SLU&lt;/a>,
&lt;a href="https://github.com/chriscardillo" target="_blank" rel="noopener">@chriscardillo&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/DaZaM82" target="_blank" rel="noopener">@DaZaM82&lt;/a>,
&lt;a href="https://github.com/donour" target="_blank" rel="noopener">@donour&lt;/a>,
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>,
&lt;a href="https://github.com/eduardszoecs" target="_blank" rel="noopener">@eduardszoecs&lt;/a>,
&lt;a href="https://github.com/eipi10" target="_blank" rel="noopener">@eipi10&lt;/a>,
&lt;a href="https://github.com/ejneer" target="_blank" rel="noopener">@ejneer&lt;/a>,
&lt;a href="https://github.com/erikvona" target="_blank" rel="noopener">@erikvona&lt;/a>,
&lt;a href="https://github.com/fh-afrachioni" target="_blank" rel="noopener">@fh-afrachioni&lt;/a>,
&lt;a href="https://github.com/fh-mthomson" target="_blank" rel="noopener">@fh-mthomson&lt;/a>,
&lt;a href="https://github.com/gui-salome" target="_blank" rel="noopener">@gui-salome&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/halpo" target="_blank" rel="noopener">@halpo&lt;/a>,
&lt;a href="https://github.com/homer3018" target="_blank" rel="noopener">@homer3018&lt;/a>,
&lt;a href="https://github.com/iangow" target="_blank" rel="noopener">@iangow&lt;/a>,
&lt;a href="https://github.com/jdlom" target="_blank" rel="noopener">@jdlom&lt;/a>,
&lt;a href="https://github.com/jennal-datacenter" target="_blank" rel="noopener">@jennal-datacenter&lt;/a>,
&lt;a href="https://github.com/JeremyPasco" target="_blank" rel="noopener">@JeremyPasco&lt;/a>,
&lt;a href="https://github.com/jiemakel" target="_blank" rel="noopener">@jiemakel&lt;/a>,
&lt;a href="https://github.com/jingydz" target="_blank" rel="noopener">@jingydz&lt;/a>,
&lt;a href="https://github.com/johnbaums" target="_blank" rel="noopener">@johnbaums&lt;/a>,
&lt;a href="https://github.com/joshseiv" target="_blank" rel="noopener">@joshseiv&lt;/a>,
&lt;a href="https://github.com/jrandall" target="_blank" rel="noopener">@jrandall&lt;/a>,
&lt;a href="https://github.com/khkk378" target="_blank" rel="noopener">@khkk378&lt;/a>,
&lt;a href="https://github.com/kmishra9" target="_blank" rel="noopener">@kmishra9&lt;/a>,
&lt;a href="https://github.com/kongdd" target="_blank" rel="noopener">@kongdd&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/krprasangdas" target="_blank" rel="noopener">@krprasangdas&lt;/a>,
&lt;a href="https://github.com/KRRLP-PL" target="_blank" rel="noopener">@KRRLP-PL&lt;/a>,
&lt;a href="https://github.com/lentinj" target="_blank" rel="noopener">@lentinj&lt;/a>,
&lt;a href="https://github.com/lgaborini" target="_blank" rel="noopener">@lgaborini&lt;/a>,
&lt;a href="https://github.com/lhabegger" target="_blank" rel="noopener">@lhabegger&lt;/a>,
&lt;a href="https://github.com/lorenzolightsgdwarf" target="_blank" rel="noopener">@lorenzolightsgdwarf&lt;/a>,
&lt;a href="https://github.com/lschneiderbauer" target="_blank" rel="noopener">@lschneiderbauer&lt;/a>,
&lt;a href="https://github.com/marianschmidt" target="_blank" rel="noopener">@marianschmidt&lt;/a>,
&lt;a href="https://github.com/matthewjnield" target="_blank" rel="noopener">@matthewjnield&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/misea" target="_blank" rel="noopener">@misea&lt;/a>,
&lt;a href="https://github.com/mjbroerman" target="_blank" rel="noopener">@mjbroerman&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/multimeric" target="_blank" rel="noopener">@multimeric&lt;/a>,
&lt;a href="https://github.com/nannerhammix" target="_blank" rel="noopener">@nannerhammix&lt;/a>,
&lt;a href="https://github.com/nikolasharing" target="_blank" rel="noopener">@nikolasharing&lt;/a>,
&lt;a href="https://github.com/nviets" target="_blank" rel="noopener">@nviets&lt;/a>,
&lt;a href="https://github.com/nviraj" target="_blank" rel="noopener">@nviraj&lt;/a>,
&lt;a href="https://github.com/oobd" target="_blank" rel="noopener">@oobd&lt;/a>,
&lt;a href="https://github.com/pboesu" target="_blank" rel="noopener">@pboesu&lt;/a>,
&lt;a href="https://github.com/pepijn-devries" target="_blank" rel="noopener">@pepijn-devries&lt;/a>,
&lt;a href="https://github.com/rbcavanaugh" target="_blank" rel="noopener">@rbcavanaugh&lt;/a>,
&lt;a href="https://github.com/rcepka" target="_blank" rel="noopener">@rcepka&lt;/a>,
&lt;a href="https://github.com/robertkck" target="_blank" rel="noopener">@robertkck&lt;/a>,
&lt;a href="https://github.com/samssann" target="_blank" rel="noopener">@samssann&lt;/a>,
&lt;a href="https://github.com/SayfSaid" target="_blank" rel="noopener">@SayfSaid&lt;/a>,
&lt;a href="https://github.com/scottporter" target="_blank" rel="noopener">@scottporter&lt;/a>,
&lt;a href="https://github.com/shearerpmm" target="_blank" rel="noopener">@shearerpmm&lt;/a>,
&lt;a href="https://github.com/srikanthtist" target="_blank" rel="noopener">@srikanthtist&lt;/a>,
&lt;a href="https://github.com/stemangiola" target="_blank" rel="noopener">@stemangiola&lt;/a>,
&lt;a href="https://github.com/stephenashton-dhsc" target="_blank" rel="noopener">@stephenashton-dhsc&lt;/a>,
&lt;a href="https://github.com/stevepowell99" target="_blank" rel="noopener">@stevepowell99&lt;/a>,
&lt;a href="https://github.com/TBlackmore" target="_blank" rel="noopener">@TBlackmore&lt;/a>,
&lt;a href="https://github.com/thomashulst" target="_blank" rel="noopener">@thomashulst&lt;/a>,
&lt;a href="https://github.com/thothal" target="_blank" rel="noopener">@thothal&lt;/a>,
&lt;a href="https://github.com/tilo-aok" target="_blank" rel="noopener">@tilo-aok&lt;/a>,
&lt;a href="https://github.com/tisseuil" target="_blank" rel="noopener">@tisseuil&lt;/a>,
&lt;a href="https://github.com/tonyk7440" target="_blank" rel="noopener">@tonyk7440&lt;/a>,
&lt;a href="https://github.com/TSchiefer" target="_blank" rel="noopener">@TSchiefer&lt;/a>,
&lt;a href="https://github.com/Tsemharb" target="_blank" rel="noopener">@Tsemharb&lt;/a>,
&lt;a href="https://github.com/tuge98" target="_blank" rel="noopener">@tuge98&lt;/a>,
&lt;a href="https://github.com/vadim-cherepanov" target="_blank" rel="noopener">@vadim-cherepanov&lt;/a>, and
&lt;a href="https://github.com/wdenton" target="_blank" rel="noopener">@wdenton&lt;/a>.&lt;/p></description></item><item><title>dplyr 1.1.1</title><link>https://www.tidyverse.org/blog/2023/03/dplyr-1-1-1/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/03/dplyr-1-1-1/</guid><description>&lt;p>We&amp;rsquo;re stoked to announce the release of
&lt;a href="https://dplyr.tidyverse.org/" target="_blank" rel="noopener">dplyr 1.1.1&lt;/a>. We don&amp;rsquo;t typically blog about patch releases, because they generally only fix bugs without significantly changing behavior, but this one includes two important updates:&lt;/p>
&lt;ul>
&lt;li>Addressing various performance regressions&lt;/li>
&lt;li>Refining the &lt;code>multiple&lt;/code> match warning thrown by dplyr&amp;rsquo;s joins&lt;/li>
&lt;/ul>
&lt;p>You can see a full list of changes in the
&lt;a href="https://dplyr.tidyverse.org/news/index.html" target="_blank" rel="noopener">release notes&lt;/a>. To see the other blog posts in the dplyr 1.1.0 series, head
&lt;a href="https://www.tidyverse.org/tags/dplyr-1-1-0/" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;p>You can install dplyr 1.1.1 from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="performance-regressions">Performance regressions
&lt;a href="#performance-regressions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In the
&lt;a href="https://www.tidyverse.org/blog/2023/02/dplyr-1-1-0-vctrs">1.1.0 post on vctrs&lt;/a>, we discussed that we&amp;rsquo;ve rewritten all of dplyr&amp;rsquo;s vector functions on top of
&lt;a href="https://vctrs.r-lib.org/" target="_blank" rel="noopener">vctrs&lt;/a> for improved versatility. Unfortunately, we accidentally made two sets of functions much slower, especially when used on a data frame with many groups:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/if_else.html" target="_blank" rel="noopener">&lt;code>if_else()&lt;/code>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/nth.html" target="_blank" rel="noopener">&lt;code>nth()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/nth.html" target="_blank" rel="noopener">&lt;code>first()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/nth.html" target="_blank" rel="noopener">&lt;code>last()&lt;/code>&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>These performance issues have been addressed, and should be back to 1.0.10 level of performance.
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> is still &lt;em>slightly&lt;/em> slower than 1.0.10, but it isn&amp;rsquo;t likely to be very noticeable, and we already have plans to improve this further in a future release.&lt;/p>
&lt;h2 id="revisiting-multiple-matches">Revisiting multiple matches
&lt;a href="#revisiting-multiple-matches">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In the
&lt;a href="https://www.tidyverse.org/blog/2023/01/dplyr-1-1-0-joins">1.1.0 post on joins&lt;/a>, we discussed the new &lt;code>multiple&lt;/code> argument that was added to
&lt;a href="https://dplyr.tidyverse.org/reference/mutate-joins.html" target="_blank" rel="noopener">&lt;code>left_join()&lt;/code>&lt;/a> and friends, which had a built in safety check that warned when you performed a join where a row from &lt;code>x&lt;/code> matched more than one row from &lt;code>y&lt;/code>. The TLDR of the discussion below is that we&amp;rsquo;ve realized that this warning was being thrown in too many cases, so we&amp;rsquo;ve adjusted it in such a way that it now only catches the most dangerous type of join (a many-to-many join), meaning that you should see the warning &lt;em>much&lt;/em> less often.&lt;/p>
&lt;p>As a reminder, &lt;code>multiple&lt;/code> determines what happens when a row from &lt;code>x&lt;/code> matches more than one row from &lt;code>y&lt;/code>. You can choose to return &lt;code>&amp;quot;all&amp;quot;&lt;/code> of the matches, the &lt;code>&amp;quot;first&amp;quot;&lt;/code> or &lt;code>&amp;quot;last&amp;quot;&lt;/code> match, or &lt;code>&amp;quot;any&amp;quot;&lt;/code> of the matches if you are just interested in detecting if there is at least one. &lt;code>multiple&lt;/code> defaulted to a behavior similar to &lt;code>&amp;quot;all&amp;quot;&lt;/code>, with the added side effect of throwing a warning if multiple matches were actually detected, like this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>student&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> student_id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> transfer &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>FALSE&lt;/span>, &lt;span class='kc'>TRUE&lt;/span>, &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> initial_term &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"fall 2018"&lt;/span>, &lt;span class='s'>"fall 2020"&lt;/span>, &lt;span class='s'>"fall 2020"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>term&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> student_id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> term &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"fall 2018"&lt;/span>, &lt;span class='s'>"spring 2019"&lt;/span>, &lt;span class='s'>"fall 2020"&lt;/span>, &lt;span class='s'>"fall 2020"&lt;/span>, &lt;span class='s'>"spring 2021"&lt;/span>, &lt;span class='s'>"fall 2021"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> course_load &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>12&lt;/span>, &lt;span class='m'>15&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>14&lt;/span>, &lt;span class='m'>15&lt;/span>, &lt;span class='m'>12&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Information about students attending a university.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'># One row per (student_id).&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>student&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; student_id transfer initial_term&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 FALSE fall 2018 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 TRUE fall 2020 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 TRUE fall 2020&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Term specific information about each student.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'># One row per (student_id, term) combination.&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>term&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; student_id term course_load&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 fall 2018 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 spring 2019 15&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 fall 2020 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 3 fall 2020 14&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 spring 2021 15&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 fall 2021 12&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>student&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>term&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>student_id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning in left_join(student, term, join_by(student_id)): Each row in `x` is expected to match at most 1 row in `y`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; i Row 1 of `x` matches multiple rows.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; i If multiple matches are expected, set `multiple = "all"` to silence this warning.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # A tibble: 6 × 5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; student_id transfer initial_term term course_load&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 1 FALSE fall 2018 fall 2018 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 2 1 FALSE fall 2018 spring 2019 15&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 3 2 TRUE fall 2020 fall 2020 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 4 3 TRUE fall 2020 fall 2020 14&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 5 3 TRUE fall 2020 spring 2021 15&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 6 3 TRUE fall 2020 fall 2021 12&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To silence this warning, we encouraged you to set &lt;code>multiple = &amp;quot;all&amp;quot;&lt;/code> to be explicit about the fact that you expected a row from &lt;code>x&lt;/code> to match multiple rows in &lt;code>y&lt;/code>.&lt;/p>
&lt;p>The original motivation for this behavior comes from a two-part hypothesis of ours:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Users are often surprised when a join returns more rows than the left-hand table started with (in the above example, &lt;code>student&lt;/code> has 3 rows but the join result has 6).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It is dangerous to allow joins that can result in a Cartesian explosion of the number of rows (i.e. &lt;code>nrow(x) * nrow(y)&lt;/code>).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>This hypothesis led us to automatically warn on two types of join relationships, one-to-many joins and many-to-many joins. If you aren&amp;rsquo;t familiar with these terms, here is a quick rundown of the 4 types of join relationships (often discussed in a SQL context), which provide constraints on the number of allowed matches:&lt;/p>
&lt;ul>
&lt;li>one-to-one:
&lt;ul>
&lt;li>A row from &lt;code>x&lt;/code> can match at most 1 row from &lt;code>y&lt;/code>.&lt;/li>
&lt;li>A row from &lt;code>y&lt;/code> can match at most 1 row from &lt;code>x&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>one-to-many:
&lt;ul>
&lt;li>A row from &lt;code>x&lt;/code> can match any number of rows in &lt;code>y&lt;/code>.&lt;/li>
&lt;li>A row from &lt;code>y&lt;/code> can match at most 1 row from &lt;code>x&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>many-to-one:
&lt;ul>
&lt;li>A row from &lt;code>x&lt;/code> can match at most 1 row from &lt;code>y&lt;/code>.&lt;/li>
&lt;li>A row from &lt;code>y&lt;/code> can match any number of rows in &lt;code>x&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>many-to-many:
&lt;ul>
&lt;li>A row from &lt;code>x&lt;/code> can match any number of rows in &lt;code>y&lt;/code>.&lt;/li>
&lt;li>A row from &lt;code>y&lt;/code> can match any number of rows in &lt;code>x&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>After gathering some valuable
&lt;a href="https://github.com/tidyverse/dplyr/issues/6717" target="_blank" rel="noopener">user feedback&lt;/a> and conducting an
&lt;a href="https://github.com/tidyverse/dplyr/issues/6731" target="_blank" rel="noopener">in depth analysis&lt;/a> of these join relationships, we&amp;rsquo;ve determined that the only relationship style actually worth warning on is many-to-many, because that is the one that can result in a Cartesian explosion of rows. In retrospect, the one-to-many relationship is actually quite common, and is symmetrical with many-to-one, which we weren&amp;rsquo;t warning on. You could actually exploit this fact by switching the above join around, which would silence the warning:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>term&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>student&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>student_id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; student_id term course_load transfer initial_term&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 fall 2018 12 FALSE fall 2018 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 spring 2019 15 FALSE fall 2018 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 fall 2020 10 TRUE fall 2020 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 3 fall 2020 14 TRUE fall 2020 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 spring 2021 15 TRUE fall 2020 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 fall 2021 12 TRUE fall 2020&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We still believe that new users are often surprised when a join returns more rows than they originally started with, but the many-to-one case of this is rarely a problem in practice. So, as of dplyr 1.1.1, we no longer warn on one-to-many relationships, which should drastically reduce the amount of warnings that you see.&lt;/p>
&lt;h3 id="many-to-many-relationships">Many-to-many relationships
&lt;a href="#many-to-many-relationships">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>A many-to-many relationship is much harder to construct (which is good). In fact, a database system won&amp;rsquo;t even let you create one of these &amp;ldquo;relationships&amp;rdquo; between two tables directly, instead requiring you to create a third bridge table that turns the many-to-many relationship into two one-to-many relationships. We can &amp;ldquo;accidentally&amp;rdquo; create one of these in R though:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>course&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> student_id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> instructor_id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> course &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>101&lt;/span>, &lt;span class='m'>110&lt;/span>, &lt;span class='m'>123&lt;/span>, &lt;span class='m'>110&lt;/span>, &lt;span class='m'>101&lt;/span>, &lt;span class='m'>110&lt;/span>, &lt;span class='m'>115&lt;/span>, &lt;span class='m'>110&lt;/span>, &lt;span class='m'>101&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> term &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='s'>"fall 2018"&lt;/span>, &lt;span class='s'>"fall 2018"&lt;/span>, &lt;span class='s'>"spring 2019"&lt;/span>, &lt;span class='s'>"fall 2020"&lt;/span>, &lt;span class='s'>"fall 2020"&lt;/span>, &lt;/span>
&lt;span> &lt;span class='s'>"fall 2020"&lt;/span>, &lt;span class='s'>"fall 2020"&lt;/span>, &lt;span class='s'>"spring 2021"&lt;/span>, &lt;span class='s'>"fall 2021"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> grade &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"C"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"C"&lt;/span>, &lt;span class='s'>"D"&lt;/span>, &lt;span class='s'>"B"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Information about the courses each student took per semester.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'># One row per (student_id, course, term) combination.&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>course&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 9 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; student_id instructor_id course term grade&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1 101 fall 2018 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 2 110 fall 2018 B &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 1 3 123 spring 2019 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 1 110 fall 2020 B &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 2 101 fall 2020 C &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 1 110 fall 2020 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>7&lt;/span> 3 2 115 fall 2020 C &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>8&lt;/span> 3 3 110 spring 2021 D &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>9&lt;/span> 3 4 101 fall 2021 B&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Forgetting to join by both `student_id` and `term`!&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>term&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>course&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>student_id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning in left_join(term, course, by = join_by(student_id)): Detected an unexpected many-to-many relationship between `x` and `y`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 1 of `x` matches multiple rows in `y`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 1 of `y` matches multiple rows in `x`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> If a many-to-many relationship is expected, set `relationship =&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; "many-to-many"` to silence this warning.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 20 × 7&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; student_id term.x course_load instructor_id course term.y grade&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 fall 2018 12 1 101 fall 2018 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 1 fall 2018 12 2 110 fall 2018 B &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 1 fall 2018 12 3 123 spring 2019 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 1 spring 2019 15 1 101 fall 2018 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 1 spring 2019 15 2 110 fall 2018 B &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 1 spring 2019 15 3 123 spring 2019 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 2 fall 2020 10 1 110 fall 2020 B &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 2 fall 2020 10 2 101 fall 2020 C &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 3 fall 2020 14 1 110 fall 2020 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 3 fall 2020 14 2 115 fall 2020 C &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 3 fall 2020 14 3 110 spring 2021 D &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 3 fall 2020 14 4 101 fall 2021 B &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>13&lt;/span> 3 spring 2021 15 1 110 fall 2020 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>14&lt;/span> 3 spring 2021 15 2 115 fall 2020 C &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>15&lt;/span> 3 spring 2021 15 3 110 spring 2021 D &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>16&lt;/span> 3 spring 2021 15 4 101 fall 2021 B &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>17&lt;/span> 3 fall 2021 12 1 110 fall 2020 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>18&lt;/span> 3 fall 2021 12 2 115 fall 2020 C &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>19&lt;/span> 3 fall 2021 12 3 110 spring 2021 D &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>20&lt;/span> 3 fall 2021 12 4 101 fall 2021 B&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In the example above, we&amp;rsquo;ve forgotten to include the &lt;code>term&lt;/code> column when joining these two tables together, which accidentally results in a small explosion of rows (we end up with 20 rows, more than in either original input, but not quite the maximum possible amount, which is a whopping 54 rows!). Luckily, dplyr warns us that at least one row in each table matches more than one row in the opposite table - a sign that something isn&amp;rsquo;t right. At this point we can do one of two things:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Look into the new &lt;code>relationship&lt;/code> argument that the warning mentions (we&amp;rsquo;ll discuss this below)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Look at our join to see if we made a mistake&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Of course, in this case we&amp;rsquo;ve messed up, and adding &lt;code>term&lt;/code> into the by expression results in the correct (and silent) join:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>term&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>course&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>student_id&lt;/span>, &lt;span class='nv'>term&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 9 × 6&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; student_id term course_load instructor_id course grade&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 fall 2018 12 1 101 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 fall 2018 12 2 110 B &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 1 spring 2019 15 3 123 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 fall 2020 10 1 110 B &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 fall 2020 10 2 101 C &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 fall 2020 14 1 110 A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>7&lt;/span> 3 fall 2020 14 2 115 C &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>8&lt;/span> 3 spring 2021 15 3 110 D &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>9&lt;/span> 3 fall 2021 12 4 101 B&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="join-relationships">Join &lt;code>relationship&lt;/code>s
&lt;a href="#join-relationships">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>To adjust the joins to only warn on many-to-many relationships, we&amp;rsquo;ve done two things:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>multiple&lt;/code> now defaults to &lt;code>&amp;quot;all&amp;quot;&lt;/code>, and is now focused solely on limiting the matches returned if multiple are detected, rather than also optionally warning/erroring.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We&amp;rsquo;ve added a new &lt;code>relationship&lt;/code> argument.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>relationship&lt;/code> argument allows you to explicitly specify the expected join relationship between the keys of &lt;code>x&lt;/code> and &lt;code>y&lt;/code> using the exact options we listed above: &lt;code>&amp;quot;one-to-one&amp;quot;&lt;/code>, &lt;code>&amp;quot;one-to-many&amp;quot;&lt;/code>, &lt;code>&amp;quot;many-to-one&amp;quot;&lt;/code>, and &lt;code>&amp;quot;many-to-many&amp;quot;&lt;/code>. If the constraints of the relationship you choose are violated, an error is thrown. For example, we could use this to require that the &lt;code>student&lt;/code> + &lt;code>term&lt;/code> join contains a one-to-many relationship between the two tables:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>student&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>term&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>student_id&lt;/span>&lt;span class='o'>)&lt;/span>, relationship &lt;span class='o'>=&lt;/span> &lt;span class='s'>"one-to-many"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; student_id transfer initial_term term course_load&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 FALSE fall 2018 fall 2018 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 FALSE fall 2018 spring 2019 15&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 TRUE fall 2020 fall 2020 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 3 TRUE fall 2020 fall 2020 14&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 TRUE fall 2020 spring 2021 15&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 TRUE fall 2020 fall 2021 12&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Let&amp;rsquo;s violate this by adding a duplicate row in &lt;code>student&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>student_bad&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>student&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>tibble&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/add_row.html'>add_row&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> student_id &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, &lt;/span>
&lt;span> transfer &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>, &lt;/span>
&lt;span> initial_term &lt;span class='o'>=&lt;/span> &lt;span class='s'>"fall 2019"&lt;/span>, &lt;/span>
&lt;span> .after &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>student_bad&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; student_id transfer initial_term&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 FALSE fall 2018 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 FALSE fall 2019 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 TRUE fall 2020 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 3 TRUE fall 2020&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>student_bad&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>term&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>student_id&lt;/span>&lt;span class='o'>)&lt;/span>, relationship &lt;span class='o'>=&lt;/span> &lt;span class='s'>"one-to-many"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `left_join()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Each row in `y` must match at most 1 row in `x`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 1 of `y` matches multiple rows in `x`.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The default value of &lt;code>relationship&lt;/code> doesn&amp;rsquo;t add any constraints, but for equality joins it will check to see if a many-to-many relationship exists, and will warn if one occurs (like with the &lt;code>term&lt;/code> + &lt;code>course&lt;/code> join from above). As mentioned before, this is quite hard to do, and often means you have a mistake in your join call or in the data itself. If you really do want to perform a join with this kind of relationship, to silence the warning you can explicitly specify &lt;code>relationship = &amp;quot;many-to-many&amp;quot;&lt;/code>.&lt;/p>
&lt;p>One last thing to note is that &lt;code>relationship&lt;/code> doesn&amp;rsquo;t handle the case of an &lt;em>unmatched&lt;/em> row. For that, you should use the &lt;code>unmatched&lt;/code> argument that was also added in 1.1.0. The combination of &lt;code>relationship&lt;/code> and &lt;code>unmatched&lt;/code> provides a complete set of tools for adding production level quality control checks to your joins.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The examples used in this blog post were adapted from
&lt;a href="https://github.com/eipi10" target="_blank" rel="noopener">@eipi10&lt;/a> in
&lt;a href="https://github.com/tidyverse/dplyr/issues/6717" target="_blank" rel="noopener">this issue&lt;/a>.&lt;/p>
&lt;p>We&amp;rsquo;d like to thank all 66 contributors who help in someway, whether it was filing issues or contributing code and documentation:
&lt;a href="https://github.com/alexhallam" target="_blank" rel="noopener">@alexhallam&lt;/a>,
&lt;a href="https://github.com/ammar-gla" target="_blank" rel="noopener">@ammar-gla&lt;/a>,
&lt;a href="https://github.com/arnaudgallou" target="_blank" rel="noopener">@arnaudgallou&lt;/a>,
&lt;a href="https://github.com/ArthurAndrews" target="_blank" rel="noopener">@ArthurAndrews&lt;/a>,
&lt;a href="https://github.com/AuburnEagle-578" target="_blank" rel="noopener">@AuburnEagle-578&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/bitplane" target="_blank" rel="noopener">@bitplane&lt;/a>,
&lt;a href="https://github.com/chrarnold" target="_blank" rel="noopener">@chrarnold&lt;/a>,
&lt;a href="https://github.com/D5n9sMatrix" target="_blank" rel="noopener">@D5n9sMatrix&lt;/a>,
&lt;a href="https://github.com/daattali" target="_blank" rel="noopener">@daattali&lt;/a>,
&lt;a href="https://github.com/DanChaltiel" target="_blank" rel="noopener">@DanChaltiel&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dieghernan" target="_blank" rel="noopener">@dieghernan&lt;/a>,
&lt;a href="https://github.com/dkutner" target="_blank" rel="noopener">@dkutner&lt;/a>,
&lt;a href="https://github.com/eipi10" target="_blank" rel="noopener">@eipi10&lt;/a>,
&lt;a href="https://github.com/eitsupi" target="_blank" rel="noopener">@eitsupi&lt;/a>,
&lt;a href="https://github.com/emilBeBri" target="_blank" rel="noopener">@emilBeBri&lt;/a>,
&lt;a href="https://github.com/fawda123" target="_blank" rel="noopener">@fawda123&lt;/a>,
&lt;a href="https://github.com/fedassembly" target="_blank" rel="noopener">@fedassembly&lt;/a>,
&lt;a href="https://github.com/fkohrt" target="_blank" rel="noopener">@fkohrt&lt;/a>,
&lt;a href="https://github.com/gavinsimpson" target="_blank" rel="noopener">@gavinsimpson&lt;/a>,
&lt;a href="https://github.com/geogale" target="_blank" rel="noopener">@geogale&lt;/a>,
&lt;a href="https://github.com/ggrothendieck" target="_blank" rel="noopener">@ggrothendieck&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hope-data-science" target="_blank" rel="noopener">@hope-data-science&lt;/a>,
&lt;a href="https://github.com/jaganmn" target="_blank" rel="noopener">@jaganmn&lt;/a>,
&lt;a href="https://github.com/jakub-jedrusiak" target="_blank" rel="noopener">@jakub-jedrusiak&lt;/a>,
&lt;a href="https://github.com/JorisChau" target="_blank" rel="noopener">@JorisChau&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/krprasangdas" target="_blank" rel="noopener">@krprasangdas&lt;/a>,
&lt;a href="https://github.com/larry77" target="_blank" rel="noopener">@larry77&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/lschneiderbauer" target="_blank" rel="noopener">@lschneiderbauer&lt;/a>,
&lt;a href="https://github.com/LukasWallrich" target="_blank" rel="noopener">@LukasWallrich&lt;/a>,
&lt;a href="https://github.com/maellecoursonnais" target="_blank" rel="noopener">@maellecoursonnais&lt;/a>,
&lt;a href="https://github.com/manhnguyen48" target="_blank" rel="noopener">@manhnguyen48&lt;/a>,
&lt;a href="https://github.com/mattansb" target="_blank" rel="noopener">@mattansb&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/mhaynam" target="_blank" rel="noopener">@mhaynam&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/mkoohafkan" target="_blank" rel="noopener">@mkoohafkan&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/Moohan" target="_blank" rel="noopener">@Moohan&lt;/a>,
&lt;a href="https://github.com/msgoussi" target="_blank" rel="noopener">@msgoussi&lt;/a>,
&lt;a href="https://github.com/multimeric" target="_blank" rel="noopener">@multimeric&lt;/a>,
&lt;a href="https://github.com/osheen1" target="_blank" rel="noopener">@osheen1&lt;/a>,
&lt;a href="https://github.com/Pozdniakov" target="_blank" rel="noopener">@Pozdniakov&lt;/a>,
&lt;a href="https://github.com/psychelzh" target="_blank" rel="noopener">@psychelzh&lt;/a>,
&lt;a href="https://github.com/pur80a" target="_blank" rel="noopener">@pur80a&lt;/a>,
&lt;a href="https://github.com/robayo" target="_blank" rel="noopener">@robayo&lt;/a>,
&lt;a href="https://github.com/rszulkin" target="_blank" rel="noopener">@rszulkin&lt;/a>,
&lt;a href="https://github.com/salim-b" target="_blank" rel="noopener">@salim-b&lt;/a>,
&lt;a href="https://github.com/sda030" target="_blank" rel="noopener">@sda030&lt;/a>,
&lt;a href="https://github.com/sfirke" target="_blank" rel="noopener">@sfirke&lt;/a>,
&lt;a href="https://github.com/shannonpileggi" target="_blank" rel="noopener">@shannonpileggi&lt;/a>,
&lt;a href="https://github.com/stephLH" target="_blank" rel="noopener">@stephLH&lt;/a>,
&lt;a href="https://github.com/szabgab" target="_blank" rel="noopener">@szabgab&lt;/a>,
&lt;a href="https://github.com/tjebo" target="_blank" rel="noopener">@tjebo&lt;/a>,
&lt;a href="https://github.com/Torvaney" target="_blank" rel="noopener">@Torvaney&lt;/a>,
&lt;a href="https://github.com/twest820" target="_blank" rel="noopener">@twest820&lt;/a>,
&lt;a href="https://github.com/vanillajonathan" target="_blank" rel="noopener">@vanillajonathan&lt;/a>,
&lt;a href="https://github.com/warnes" target="_blank" rel="noopener">@warnes&lt;/a>, and
&lt;a href="https://github.com/zknitter" target="_blank" rel="noopener">@zknitter&lt;/a>.&lt;/p></description></item><item><title>dtplyr 1.3.0</title><link>https://www.tidyverse.org/blog/2023/02/dtplyr-1-3-0/</link><pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/02/dtplyr-1-3-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re thrilled to announce the release of
&lt;a href="https://dtplyr.tidyverse.org" target="_blank" rel="noopener">dtplyr&lt;/a> 1.3.0. dtplyr gives you the speed of
&lt;a href="http://r-datatable.com/" target="_blank" rel="noopener">data.table&lt;/a> with the syntax of dplyr; you write dplyr (and tidyr) code and dtplyr translates it to the data.table equivalent.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dtplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will give you an overview of the changes in this version: dtplyr no longer adds translations directly to data.tables, it includes some dplyr 1.1.0 updates, and we have made some performance improvements. As always, you can see a full list of changes in the
&lt;a href="https://github.com/tidyverse/dtplyr/releases/tag/v1.3.0" target="_blank" rel="noopener">release notes&lt;/a>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dtplyr.tidyverse.org'>dtplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>, warn.conflicts &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="breaking-changes">Breaking changes
&lt;a href="#breaking-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In previous versions, dtplyr registered translations that kicked in whenever you used a data.table. This
&lt;a href="https://github.com/tidyverse/dtplyr/issues/312" target="_blank" rel="noopener">caused problems&lt;/a> because merely loading dtplyr could cause otherwise ok code to fail because dplyr and tidyr functions would now return &lt;code>lazy_dt&lt;/code> objects instead of &lt;code>data.table&lt;/code> objects. To avoid this problem, we have removed those S3 methods so you must now explicitly opt-in to dtplyr translations by using
&lt;a href="https://dtplyr.tidyverse.org/reference/lazy_dt.html" target="_blank" rel="noopener">&lt;code>lazy_dt()&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="dplyr-110">dplyr 1.1.0
&lt;a href="#dplyr-110">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This release brings support for dplyr 1.1.0&amp;rsquo;s
&lt;a href="https://www.tidyverse.org/blog/2023/02/dplyr-1-1-0-per-operation-grouping/" target="_blank" rel="noopener">per-operation grouping&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/pick.html" target="_blank" rel="noopener">&lt;code>pick()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dtplyr.tidyverse.org/reference/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>10&lt;/span>, id &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mean &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>id&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `_DT1`[, .(mean = mean(x)), keyby = .(id)]&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dtplyr.tidyverse.org/reference/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>10&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Uniform.html'>runif&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>row_sum &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/colSums.html'>rowSums&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/pick.html'>pick&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; copy(`_DT2`)[, `:=`(row_sum = rowSums(data.table(x = x)))]&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Per-operation grouping was one of the dplyr 1.1.0 features inspired by data.table, so it&amp;rsquo;s neat to see it come full circle in this dtplyr release. Future releases will add support for other dplyr 1.1.0 features like the new
&lt;a href="https://www.tidyverse.org/blog/2023/01/dplyr-1-1-0-joins/#join_by" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> syntax and
&lt;a href="https://www.tidyverse.org/blog/2023/02/dplyr-1-1-0-pick-reframe-arrange/#reframe" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="improved-translations">Improved translations
&lt;a href="#improved-translations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>dtplyr gains new translations for
&lt;a href="https://dplyr.tidyverse.org/reference/count.html" target="_blank" rel="noopener">&lt;code>add_count()&lt;/code>&lt;/a> and &lt;code>unite()&lt;/code>, and the ranking functions,
&lt;a href="https://dplyr.tidyverse.org/reference/row_number.html" target="_blank" rel="noopener">&lt;code>min_rank()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/row_number.html" target="_blank" rel="noopener">&lt;code>dense_rank()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/percent_rank.html" target="_blank" rel="noopener">&lt;code>percent_rank()&lt;/code>&lt;/a>, &amp;amp;
&lt;a href="https://dplyr.tidyverse.org/reference/percent_rank.html" target="_blank" rel="noopener">&lt;code>cume_dist()&lt;/code>&lt;/a> are now mapped to their &lt;code>data.table&lt;/code> equivalents:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/count.html'>add_count&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; copy(`_DT2`)[, `:=`(n = .N)]&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>tidyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/unite.html'>unite&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"z"&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; copy(`_DT2`)[, `:=`(z = paste(x, y, sep = "_"))][, `:=`(c("x", &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; "y"), NULL)]&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>r &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/row_number.html'>min_rank&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; copy(`_DT2`)[, `:=`(r = frank(x, ties.method = "min", na.last = "keep"))]&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>r &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/row_number.html'>dense_rank&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; copy(`_DT2`)[, `:=`(r = frank(x, ties.method = "dense", na.last = "keep"))]&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This release also includes three translation improvements that yield better performance. When data has previously been copied
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> will use &lt;code>setorder()&lt;/code> instead of
&lt;a href="https://rdrr.io/r/base/order.html" target="_blank" rel="noopener">&lt;code>order()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/select.html" target="_blank" rel="noopener">&lt;code>select()&lt;/code>&lt;/a> will drop unwanted columns by reference (i.e. with &lt;code>var := NULL&lt;/code>). And
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice()&lt;/code>&lt;/a> now uses an intermediate variable to reduce computation time of row selection.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A massive thanks to
&lt;a href="https://github.com/markfairbanks" target="_blank" rel="noopener">Mark Fairbanks&lt;/a> who did most of the work for this release, ably aided by the other dtplyr maintainers
&lt;a href="https://github.com/eutwt" target="_blank" rel="noopener">@eutwt&lt;/a> and
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">Maximilian Girlich&lt;/a>. And thanks to everyone else who helped make this release possible, whether it was with code, documentation, or insightful comments:
&lt;a href="https://github.com/abalter" target="_blank" rel="noopener">@abalter&lt;/a>,
&lt;a href="https://github.com/akaviaLab" target="_blank" rel="noopener">@akaviaLab&lt;/a>,
&lt;a href="https://github.com/camnesia" target="_blank" rel="noopener">@camnesia&lt;/a>,
&lt;a href="https://github.com/caparks2" target="_blank" rel="noopener">@caparks2&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/eipi10" target="_blank" rel="noopener">@eipi10&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/jmbarbone" target="_blank" rel="noopener">@jmbarbone&lt;/a>,
&lt;a href="https://github.com/johnF-moore" target="_blank" rel="noopener">@johnF-moore&lt;/a>,
&lt;a href="https://github.com/lschneiderbauer" target="_blank" rel="noopener">@lschneiderbauer&lt;/a>, and
&lt;a href="https://github.com/NicChr" target="_blank" rel="noopener">@NicChr&lt;/a>.&lt;/p></description></item><item><title>dplyr 1.1.0: `pick()`, `reframe()`, and `arrange()`</title><link>https://www.tidyverse.org/blog/2023/02/dplyr-1-1-0-pick-reframe-arrange/</link><pubDate>Tue, 07 Feb 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/02/dplyr-1-1-0-pick-reframe-arrange/</guid><description>&lt;p>In this final
&lt;a href="https://dplyr.tidyverse.org/news/index.html#dplyr-110" target="_blank" rel="noopener">dplyr 1.1.0&lt;/a> post, we&amp;rsquo;ll take a look at two new verbs,
&lt;a href="https://dplyr.tidyverse.org/reference/pick.html" target="_blank" rel="noopener">&lt;code>pick()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a>, along with some changes to
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> that improve both reproducibility and performance. If you missed our previous posts, you should definitely go back and
&lt;a href="https://www.tidyverse.org/tags/dplyr-1-1-0/" target="_blank" rel="noopener">check them out&lt;/a>!&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>12345&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="pick">&lt;code>pick()&lt;/code>
&lt;a href="#pick">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One thing we noticed after dplyr 1.0.0 was released is that many people like to use
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> for its column selection features while working inside a data-masking function like
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> or
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>. This is typically useful if you have a function that takes data frames as inputs, or if you need to compute features about a specific subset of columns.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> x_1 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> x_2 &lt;span class='o'>=&lt;/span> &lt;span class='m'>6&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>10&lt;/span>, &lt;/span>
&lt;span> w_4 &lt;span class='o'>=&lt;/span> &lt;span class='m'>11&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>15&lt;/span>, &lt;/span>
&lt;span> y_2 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>4&lt;/span>, &lt;span class='m'>0&lt;/span>, &lt;span class='m'>6&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> n_x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/nrow.html'>ncol&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>across&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> n_y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/nrow.html'>ncol&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>across&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"y"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; n_x n_y&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 2 1&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> is intended to apply a function to each of these columns, rather than just select them, which is why its name doesn&amp;rsquo;t feel natural for this operation. In dplyr 1.1.0 we&amp;rsquo;ve introduced
&lt;a href="https://dplyr.tidyverse.org/reference/pick.html" target="_blank" rel="noopener">&lt;code>pick()&lt;/code>&lt;/a>, a specialized column selection variant with a more natural name:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> n_x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/nrow.html'>ncol&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/pick.html'>pick&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> n_y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/nrow.html'>ncol&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/pick.html'>pick&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"y"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; n_x n_y&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 2 1&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/pick.html" target="_blank" rel="noopener">&lt;code>pick()&lt;/code>&lt;/a> is particularly useful in combination with ranking functions like
&lt;a href="https://dplyr.tidyverse.org/reference/row_number.html" target="_blank" rel="noopener">&lt;code>dense_rank()&lt;/code>&lt;/a>, which have been upgraded in 1.1.0 to take data frames as inputs, serving as a way to jointly rank by multiple columns at once.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> rank1 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/row_number.html'>dense_rank&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x_1&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> rank2 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/row_number.html'>dense_rank&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/pick.html'>pick&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x_1&lt;/span>, &lt;span class='nv'>y_2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='c'># Using `y_2` to break ties in `x_1`&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 6&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x_1 x_2 w_4 y_2 rank1 rank2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 6 11 5 1 2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 3 7 12 2 3 5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 8 13 4 2 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 1 9 14 0 1 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 10 15 6 2 4&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We haven&amp;rsquo;t deprecated using
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> without supplying &lt;code>.fns&lt;/code> yet, but we plan to in the future now that
&lt;a href="https://dplyr.tidyverse.org/reference/pick.html" target="_blank" rel="noopener">&lt;code>pick()&lt;/code>&lt;/a> exists as a better alternative.&lt;/p>
&lt;h2 id="reframe">&lt;code>reframe()&lt;/code>
&lt;a href="#reframe">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As we mentioned in the
&lt;a href="https://www.tidyverse.org/blog/2022/11/dplyr-1-1-0-is-coming-soon/" target="_blank" rel="noopener">coming soon&lt;/a> blog post, in dplyr 1.1.0 we&amp;rsquo;ve decided to walk back the change we introduced to
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> in dplyr 1.0.0 that allowed it to return per-group results of any length, rather than results of length 1. We think that the idea of multi-row results is extremely powerful, as it serves as a flexible way to apply arbitrary operations to each group, but we&amp;rsquo;ve realized that
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> wasn&amp;rsquo;t the best home for it because it increases the chance for users to run into silent recycling bugs (thanks to
&lt;a href="https://github.com/tidyverse/dplyr/issues/6382" target="_blank" rel="noopener">Kirill Müller&lt;/a> and
&lt;a href="https://twitter.com/drob/status/1563198515626770432?s=20&amp;amp;t=iTFWSCPNOGWalIrpXHx2qg" target="_blank" rel="noopener">David Robinson&lt;/a> for bringing this to our attention).&lt;/p>
&lt;p>As an example, here we&amp;rsquo;re computing the mean and standard deviation of &lt;code>x&lt;/code>, grouped by &lt;code>g&lt;/code>. Unfortunately, I accidentally forgot to use &lt;code>sd(x)&lt;/code> and instead just typed &lt;code>x&lt;/code>. Because of how
&lt;a href="https://vctrs.r-lib.org/reference/vector_recycling_rules.html" target="_blank" rel="noopener">tidyverse recycling rules&lt;/a> work, the multi-row behavior silently recycled the size 1 mean values instead of erroring, so rather than 2 rows, we end up with 5.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> g &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>4&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>6&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>8&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>8&lt;/span>, &lt;span class='m'>9&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; g x y&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 4 5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 3 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 1 6 2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 2 8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 8 9&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> x_average &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> x_sd &lt;span class='o'>=&lt;/span> &lt;span class='nv'>x&lt;/span>, &lt;span class='c'># Oops&lt;/span>&lt;/span>
&lt;span> .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>g&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; dplyr 1.1.0.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Please use `reframe()` instead.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> When switching from `summarise()` to `reframe()`, remember that `reframe()`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; always returns an ungrouped data frame and adjust accordingly.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; g x_average x_sd&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 4.33 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 4.33 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 1 4.33 6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 5 2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 5 8&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> now throws a warning when any group returns a result that isn&amp;rsquo;t length 1. We expect to upgrade this to an error in the future to revert
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> back to its &amp;ldquo;safe&amp;rdquo; behavior of requiring 1 row per group.&lt;/p>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> also wasn&amp;rsquo;t the best name for a function with this feature, as the name itself implies one row per group. After
&lt;a href="https://github.com/tidyverse/dplyr/issues/6565" target="_blank" rel="noopener">gathering some feedback&lt;/a>, we&amp;rsquo;ve settled on a new verb with a more appropriate name,
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a>. We think of
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a> as a way to &amp;ldquo;do something&amp;rdquo; to each group, with no restrictions on the number of rows returned per group. The name has a nice connection to the tibble functions
&lt;a href="https://tibble.tidyverse.org/reference/enframe.html" target="_blank" rel="noopener">&lt;code>tibble::enframe()&lt;/code>&lt;/a> and
&lt;a href="https://tibble.tidyverse.org/reference/enframe.html" target="_blank" rel="noopener">&lt;code>tibble::deframe()&lt;/code>&lt;/a>, which are used for converting vectors to data frames and vice versa:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>enframe()&lt;/code>: Takes a vector, returns a data frame&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>deframe()&lt;/code>: Takes a data frame, returns a vector&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a>: Takes a data frame, returns a data frame&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>One nice application of
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a> is computing quantiles at various probability thresholds. It&amp;rsquo;s particularly nice if we wrap
&lt;a href="https://rdrr.io/r/stats/quantile.html" target="_blank" rel="noopener">&lt;code>quantile()&lt;/code>&lt;/a> into a helper that returns a data frame, which
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a> then automatically unpacks.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>quantile_df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>probs&lt;/span> &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.25&lt;/span>, &lt;span class='m'>0.5&lt;/span>, &lt;span class='m'>0.75&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> value &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/quantile.html'>quantile&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>probs&lt;/span>, na.rm &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> prob &lt;span class='o'>=&lt;/span> &lt;span class='nv'>probs&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/reframe.html'>reframe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>quantile_df&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; g value prob&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 3.5 0.25&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 4 0.5 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 1 5 0.75&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 3.5 0.25&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 5 0.5 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 2 6.5 0.75&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This also works well if you want to apply it to multiple columns using
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/reframe.html'>reframe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>across&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='nv'>y&lt;/span>, &lt;span class='nv'>quantile_df&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; g x$value $prob y$value $prob&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 3.5 0.25 1.5 0.25&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 4 0.5 2 0.5 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 1 5 0.75 3.5 0.75&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 3.5 0.25 8.25 0.25&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 5 0.5 8.5 0.5 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 2 6.5 0.75 8.75 0.75&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Because &lt;code>quantile_df()&lt;/code> returns a tibble, we end up with
&lt;a href="https://tidyr.tidyverse.org/reference/pack.html" target="_blank" rel="noopener">&lt;em>packed&lt;/em>&lt;/a> data frame columns. You&amp;rsquo;ll often want to unpack these into their individual columns, and
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> has gained a new &lt;code>.unpack&lt;/code> argument in 1.1.0 that helps you do exactly that:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/reframe.html'>reframe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>across&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='nv'>y&lt;/span>, &lt;span class='nv'>quantile_df&lt;/span>, .unpack &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; g x_value x_prob y_value y_prob&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 3.5 0.25 1.5 0.25&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 4 0.5 2 0.5 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 1 5 0.75 3.5 0.75&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 3.5 0.25 8.25 0.25&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 5 0.5 8.5 0.5 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 2 6.5 0.75 8.75 0.75&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We expect that seeing
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a> in a colleague&amp;rsquo;s code will serve as an extremely clear signal that something &amp;ldquo;special&amp;rdquo; is happening, because they&amp;rsquo;ve made a conscious decision to opt-into the 1% case of returning multiple rows per group.&lt;/p>
&lt;h2 id="arrange">&lt;code>arrange()&lt;/code>
&lt;a href="#arrange">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We also mentioned in the
&lt;a href="https://www.tidyverse.org/blog/2022/11/dplyr-1-1-0-is-coming-soon/" target="_blank" rel="noopener">coming soon&lt;/a> post that
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> has undergone two user-facing changes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>When sorting character vectors, the C locale is now the default, rather than the system locale&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A new &lt;code>.locale&lt;/code> argument, powered by stringi, allows you to explicitly request an alternative locale using a stringi locale identifier (like &lt;code>&amp;quot;en&amp;quot;&lt;/code> for English, or &lt;code>&amp;quot;fr&amp;quot;&lt;/code> for French)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>These changes were made for two reasons:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Much faster performance by default, due to usage of a custom radix sort algorithm inspired by
&lt;a href="https://cran.r-project.org/web/packages/data.table/index.html" target="_blank" rel="noopener">data.table&lt;/a>&amp;lsquo;s &lt;code>forder()&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Improved reproducibility across R sessions, where different computers might use different system locales and different operating systems have different ways to specify the same system locale&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>If you use
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> for the purpose of grouping similar values together (and don&amp;rsquo;t care much about the specific locale that it uses to do so), then you&amp;rsquo;ll likely see performance improvements of up to 100x in dplyr 1.1.0. If you do care about the locale and supply &lt;code>.locale&lt;/code>, you should still see improvements of up to 10x.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># 10,000 random strings, sampled up to 1,000,000 rows&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>dictionary&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>stringi&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/stringi/man/stri_rand_strings.html'>stri_rand_strings&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>10000&lt;/span>, length &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>, pattern &lt;span class='o'>=&lt;/span> &lt;span class='s'>"[a-z]"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>str&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sample.html'>sample&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dictionary&lt;/span>, size &lt;span class='o'>=&lt;/span> &lt;span class='m'>1e6&lt;/span>, replace &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>str&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1,000,000 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> slpqkdtpyr&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> xtoucpndhc&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> vsvfoqcyqm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> gnbpkwcmse&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> xutzdqxpsi&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> gkolsrndrz&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> mitqahkkou&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> eehfrrimhd&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> ymxxjczjsv&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> svpvizfxwe&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 999,990 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># dplyr 1.0.10 (American English system locale)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>bench&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://bench.r-lib.org/reference/mark.html'>mark&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>str&lt;/span>, &lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # A tibble: 1 × 6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; expression min median `itr/sec` mem_alloc `gc/sec`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 arrange(str, x) 4.38s 4.89s 0.204 12.7MB 0.148&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># dplyr 1.1.0 (C locale default, 100x faster)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>bench&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://bench.r-lib.org/reference/mark.html'>mark&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>str&lt;/span>, &lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # A tibble: 1 × 6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; expression min median `itr/sec` mem_alloc `gc/sec`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 arrange(str, x) 42.3ms 46.6ms 20.8 22.4MB 46.0&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># dplyr 1.1.0 (American English `.locale`, 10x faster)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>bench&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://bench.r-lib.org/reference/mark.html'>mark&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>str&lt;/span>, &lt;span class='nv'>x&lt;/span>, .locale &lt;span class='o'>=&lt;/span> &lt;span class='s'>"en"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # A tibble: 1 × 6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; expression min median `itr/sec` mem_alloc&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 arrange(str, x, .locale = "en") 377ms 430ms 2.21 27.9MB&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # … with 1 more variable: `gc/sec` &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We are hopeful that switching to a C locale default will have a relatively small amount of impact in exchange for much faster performance. To read more about the exact differences between the C locale and locales like American English or Spanish, see the
&lt;a href="https://www.tidyverse.org/blog/2022/11/dplyr-1-1-0-is-coming-soon/#arrange-improvements-with-character-vectors" target="_blank" rel="noopener">coming soon&lt;/a> post or our detailed
&lt;a href="https://github.com/tidyverse/tidyups/blob/main/003-dplyr-radix-ordering.md" target="_blank" rel="noopener">tidyup&lt;/a>. If you are having trouble converting an existing script over to the new behavior, you can set the temporary global option &lt;code>options(dplyr.legacy_locale = TRUE)&lt;/code>, which will revert to the pre-1.1.0 behavior of using the system locale. We expect to remove this option in a future release.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to the 88 contributors who helped make the 1.1.0 release possible by opening issues, contributing features and documentation, and asking questions!
&lt;a href="https://github.com/7708801314520dym" target="_blank" rel="noopener">@7708801314520dym&lt;/a>,
&lt;a href="https://github.com/abalter" target="_blank" rel="noopener">@abalter&lt;/a>,
&lt;a href="https://github.com/aghaynes" target="_blank" rel="noopener">@aghaynes&lt;/a>,
&lt;a href="https://github.com/AlbertRapp" target="_blank" rel="noopener">@AlbertRapp&lt;/a>,
&lt;a href="https://github.com/AlexGaithuma" target="_blank" rel="noopener">@AlexGaithuma&lt;/a>,
&lt;a href="https://github.com/algsat" target="_blank" rel="noopener">@algsat&lt;/a>,
&lt;a href="https://github.com/andrewbaxter439" target="_blank" rel="noopener">@andrewbaxter439&lt;/a>,
&lt;a href="https://github.com/andrewpbray" target="_blank" rel="noopener">@andrewpbray&lt;/a>,
&lt;a href="https://github.com/asadow" target="_blank" rel="noopener">@asadow&lt;/a>,
&lt;a href="https://github.com/asmlgkj" target="_blank" rel="noopener">@asmlgkj&lt;/a>,
&lt;a href="https://github.com/barbosawf" target="_blank" rel="noopener">@barbosawf&lt;/a>,
&lt;a href="https://github.com/barnabasharris" target="_blank" rel="noopener">@barnabasharris&lt;/a>,
&lt;a href="https://github.com/bart1" target="_blank" rel="noopener">@bart1&lt;/a>,
&lt;a href="https://github.com/bergsmat" target="_blank" rel="noopener">@bergsmat&lt;/a>,
&lt;a href="https://github.com/chrisbrownlie" target="_blank" rel="noopener">@chrisbrownlie&lt;/a>,
&lt;a href="https://github.com/cjyetman" target="_blank" rel="noopener">@cjyetman&lt;/a>,
&lt;a href="https://github.com/CNUlichao" target="_blank" rel="noopener">@CNUlichao&lt;/a>,
&lt;a href="https://github.com/daattali" target="_blank" rel="noopener">@daattali&lt;/a>,
&lt;a href="https://github.com/DanChaltiel" target="_blank" rel="noopener">@DanChaltiel&lt;/a>,
&lt;a href="https://github.com/davidchall" target="_blank" rel="noopener">@davidchall&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/ddsjoberg" target="_blank" rel="noopener">@ddsjoberg&lt;/a>,
&lt;a href="https://github.com/donboyd5" target="_blank" rel="noopener">@donboyd5&lt;/a>,
&lt;a href="https://github.com/drmowinckels" target="_blank" rel="noopener">@drmowinckels&lt;/a>,
&lt;a href="https://github.com/dxtxs1" target="_blank" rel="noopener">@dxtxs1&lt;/a>,
&lt;a href="https://github.com/eitsupi" target="_blank" rel="noopener">@eitsupi&lt;/a>,
&lt;a href="https://github.com/eogoodwin" target="_blank" rel="noopener">@eogoodwin&lt;/a>,
&lt;a href="https://github.com/erhoppe" target="_blank" rel="noopener">@erhoppe&lt;/a>,
&lt;a href="https://github.com/eutwt" target="_blank" rel="noopener">@eutwt&lt;/a>,
&lt;a href="https://github.com/ggrothendieck" target="_blank" rel="noopener">@ggrothendieck&lt;/a>,
&lt;a href="https://github.com/grayskripko" target="_blank" rel="noopener">@grayskripko&lt;/a>,
&lt;a href="https://github.com/H-Mateus" target="_blank" rel="noopener">@H-Mateus&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/haozhou1988" target="_blank" rel="noopener">@haozhou1988&lt;/a>,
&lt;a href="https://github.com/hassanjfry" target="_blank" rel="noopener">@hassanjfry&lt;/a>,
&lt;a href="https://github.com/Hesham999666" target="_blank" rel="noopener">@Hesham999666&lt;/a>,
&lt;a href="https://github.com/hideaki" target="_blank" rel="noopener">@hideaki&lt;/a>,
&lt;a href="https://github.com/jeffreypullin" target="_blank" rel="noopener">@jeffreypullin&lt;/a>,
&lt;a href="https://github.com/jic007" target="_blank" rel="noopener">@jic007&lt;/a>,
&lt;a href="https://github.com/jmbarbone" target="_blank" rel="noopener">@jmbarbone&lt;/a>,
&lt;a href="https://github.com/jonspring" target="_blank" rel="noopener">@jonspring&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/jpeacock29" target="_blank" rel="noopener">@jpeacock29&lt;/a>,
&lt;a href="https://github.com/kendonB" target="_blank" rel="noopener">@kendonB&lt;/a>,
&lt;a href="https://github.com/kenkoonwong" target="_blank" rel="noopener">@kenkoonwong&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/larry77" target="_blank" rel="noopener">@larry77&lt;/a>,
&lt;a href="https://github.com/latot" target="_blank" rel="noopener">@latot&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/llayman12" target="_blank" rel="noopener">@llayman12&lt;/a>,
&lt;a href="https://github.com/LukasWallrich" target="_blank" rel="noopener">@LukasWallrich&lt;/a>,
&lt;a href="https://github.com/m-sostero" target="_blank" rel="noopener">@m-sostero&lt;/a>,
&lt;a href="https://github.com/machow" target="_blank" rel="noopener">@machow&lt;/a>,
&lt;a href="https://github.com/mc-unimi" target="_blank" rel="noopener">@mc-unimi&lt;/a>,
&lt;a href="https://github.com/mgacc0" target="_blank" rel="noopener">@mgacc0&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/MichelleSMA" target="_blank" rel="noopener">@MichelleSMA&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/moriarais" target="_blank" rel="noopener">@moriarais&lt;/a>,
&lt;a href="https://github.com/NicChr" target="_blank" rel="noopener">@NicChr&lt;/a>,
&lt;a href="https://github.com/nstjhp" target="_blank" rel="noopener">@nstjhp&lt;/a>,
&lt;a href="https://github.com/omarwh" target="_blank" rel="noopener">@omarwh&lt;/a>,
&lt;a href="https://github.com/orgadish" target="_blank" rel="noopener">@orgadish&lt;/a>,
&lt;a href="https://github.com/rempsyc" target="_blank" rel="noopener">@rempsyc&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/ryanvoyack" target="_blank" rel="noopener">@ryanvoyack&lt;/a>,
&lt;a href="https://github.com/selkamand" target="_blank" rel="noopener">@selkamand&lt;/a>,
&lt;a href="https://github.com/seth-cp" target="_blank" rel="noopener">@seth-cp&lt;/a>,
&lt;a href="https://github.com/shalom-lab" target="_blank" rel="noopener">@shalom-lab&lt;/a>,
&lt;a href="https://github.com/shannonpileggi" target="_blank" rel="noopener">@shannonpileggi&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/sjackson1997" target="_blank" rel="noopener">@sjackson1997&lt;/a>,
&lt;a href="https://github.com/spono" target="_blank" rel="noopener">@spono&lt;/a>,
&lt;a href="https://github.com/stibu81" target="_blank" rel="noopener">@stibu81&lt;/a>,
&lt;a href="https://github.com/tfehring" target="_blank" rel="noopener">@tfehring&lt;/a>,
&lt;a href="https://github.com/Theresaliu" target="_blank" rel="noopener">@Theresaliu&lt;/a>,
&lt;a href="https://github.com/TimBMK" target="_blank" rel="noopener">@TimBMK&lt;/a>,
&lt;a href="https://github.com/TimTeaFan" target="_blank" rel="noopener">@TimTeaFan&lt;/a>,
&lt;a href="https://github.com/Torvaney" target="_blank" rel="noopener">@Torvaney&lt;/a>,
&lt;a href="https://github.com/turbanisch" target="_blank" rel="noopener">@turbanisch&lt;/a>,
&lt;a href="https://github.com/weiyangtham" target="_blank" rel="noopener">@weiyangtham&lt;/a>,
&lt;a href="https://github.com/wurli" target="_blank" rel="noopener">@wurli&lt;/a>,
&lt;a href="https://github.com/xet869" target="_blank" rel="noopener">@xet869&lt;/a>,
&lt;a href="https://github.com/yuliaUU" target="_blank" rel="noopener">@yuliaUU&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>, and
&lt;a href="https://github.com/zeehio" target="_blank" rel="noopener">@zeehio&lt;/a>.&lt;/p></description></item><item><title>dplyr 1.1.0: The power of vctrs</title><link>https://www.tidyverse.org/blog/2023/02/dplyr-1-1-0-vctrs/</link><pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/02/dplyr-1-1-0-vctrs/</guid><description>&lt;p>Today&amp;rsquo;s
&lt;a href="https://dplyr.tidyverse.org/news/index.html#dplyr-110" target="_blank" rel="noopener">dplyr 1.1.0&lt;/a> post is focused on various updates to vector functions, like
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/between.html" target="_blank" rel="noopener">&lt;code>between()&lt;/code>&lt;/a>. If you missed our previous posts, you can also see the other
&lt;a href="https://www.tidyverse.org/tags/dplyr-1-1-0/" target="_blank" rel="noopener">blog posts&lt;/a> in this series. All of dplyr&amp;rsquo;s vector functions are now backed by
&lt;a href="https://vctrs.r-lib.org/" target="_blank" rel="noopener">vctrs&lt;/a>, which typically results in better error messages, better performance, and greater versatility.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="case_when">&lt;code>case_when()&lt;/code>
&lt;a href="#case_when">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you&amp;rsquo;ve used
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> before, you&amp;rsquo;ve probably written a statement like this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>12&lt;/span>, &lt;span class='o'>-&lt;/span>&lt;span class='m'>5&lt;/span>, &lt;span class='m'>6&lt;/span>, &lt;span class='o'>-&lt;/span>&lt;span class='m'>2&lt;/span>, &lt;span class='kc'>NA&lt;/span>, &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/case_when.html'>case_when&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>10&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"large"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>0&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"small"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;&lt;/span> &lt;span class='m'>0&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='kc'>NA&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Error: `NA` must be &amp;lt;character&amp;gt;, not &amp;lt;logical&amp;gt;.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Like me, you&amp;rsquo;ve probably forgotten that
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> has historically been strict about the types on the right-hand side of the &lt;code>~&lt;/code>, which means that I needed to use &lt;code>NA_character_&lt;/code> here instead of &lt;code>NA&lt;/code>. Luckily, the switch to vctrs means that the above code now &amp;ldquo;just works&amp;rdquo;:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/case_when.html'>case_when&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>10&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"large"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>0&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"small"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;&lt;/span> &lt;span class='m'>0&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='kc'>NA&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] "small" "large" NA "small" NA NA "small"&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You&amp;rsquo;ve probably also written a statement like this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/case_when.html'>case_when&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>10&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"large"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>0&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"small"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/NA.html'>is.na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"missing"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='kc'>TRUE&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"other"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] "small" "large" "other" "small" "other" "missing" "small"&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In this case, we have a fall-through &amp;ldquo;default&amp;rdquo; captured by &lt;code>TRUE ~&lt;/code>. This has always felt a little awkward and is fairly difficult to explain to new R users. To make this clearer, we&amp;rsquo;ve added an explicit &lt;code>.default&lt;/code> argument that we encourage you to use instead:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/case_when.html'>case_when&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>10&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"large"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>0&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"small"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/NA.html'>is.na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"missing"&lt;/span>,&lt;/span>
&lt;span> .default &lt;span class='o'>=&lt;/span> &lt;span class='s'>"other"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] "small" "large" "other" "small" "other" "missing" "small"&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>&lt;code>.default&lt;/code> will always be processed last, regardless of where you put it in the call to
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a>, so we recommend placing it at the very end.&lt;/p>
&lt;p>We haven&amp;rsquo;t started any formal deprecation process for &lt;code>TRUE ~&lt;/code> yet, but now that there is a better solution available we encourage you to switch over. We do plan to deprecate this feature in the future because it involves some slightly problematic recycling rules (but we wouldn&amp;rsquo;t even begin this process for at least a year).&lt;/p>
&lt;h2 id="case_match">&lt;code>case_match()&lt;/code>
&lt;a href="#case_match">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Another type of
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> statement you&amp;rsquo;ve probably written is some kind of value remapping like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"USA"&lt;/span>, &lt;span class='s'>"Canada"&lt;/span>, &lt;span class='s'>"Wales"&lt;/span>, &lt;span class='s'>"UK"&lt;/span>, &lt;span class='s'>"China"&lt;/span>, &lt;span class='kc'>NA&lt;/span>, &lt;span class='s'>"Mexico"&lt;/span>, &lt;span class='s'>"Russia"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/case_when.html'>case_when&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&lt;a href='https://rdrr.io/r/base/match.html'>%in%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"USA"&lt;/span>, &lt;span class='s'>"Canada"&lt;/span>, &lt;span class='s'>"Mexico"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"North America"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&lt;a href='https://rdrr.io/r/base/match.html'>%in%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Wales"&lt;/span>, &lt;span class='s'>"UK"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"Europe"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&lt;a href='https://rdrr.io/r/base/match.html'>%in%&lt;/a>&lt;/span> &lt;span class='s'>"China"&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"Asia"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] "North America" "North America" "Europe" "Europe" &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [5] "Asia" NA "North America" NA&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Remapping values in this way is so common that SQL gives it its own name - the &amp;ldquo;simple&amp;rdquo; case statement. To streamline this further, we&amp;rsquo;ve taken out some of the repetition involved with &lt;code>x %in%&lt;/code> by introducing
&lt;a href="https://dplyr.tidyverse.org/reference/case_match.html" target="_blank" rel="noopener">&lt;code>case_match()&lt;/code>&lt;/a>, a variant of
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> that allows you to specify one or more &lt;em>values&lt;/em> on the left-hand side of the &lt;code>~&lt;/code>, rather than logical vectors.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/case_match.html'>case_match&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"USA"&lt;/span>, &lt;span class='s'>"Canada"&lt;/span>, &lt;span class='s'>"Mexico"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"North America"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"France"&lt;/span>, &lt;span class='s'>"UK"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"Europe"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"China"&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"Asia"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] "North America" "North America" NA "Europe" &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [5] "Asia" NA "North America" NA&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>I think that
&lt;a href="https://dplyr.tidyverse.org/reference/case_match.html" target="_blank" rel="noopener">&lt;code>case_match()&lt;/code>&lt;/a> is particularly neat because it can be wrapped into an ad-hoc replacement helper if you just need to collapse or replace a few problematic values in a vector, while leaving everything else unchanged:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>replace_match&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>...&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/case_match.html'>case_match&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>...&lt;/span>, .default &lt;span class='o'>=&lt;/span> &lt;span class='nv'>x&lt;/span>, .ptype &lt;span class='o'>=&lt;/span> &lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>replace_match&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span>, &lt;/span>
&lt;span> &lt;span class='s'>"USA"&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"United States"&lt;/span>, &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"UK"&lt;/span>, &lt;span class='s'>"Wales"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"United Kingdom"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='kc'>NA&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"[Missing]"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] "United States" "Canada" "United Kingdom" "United Kingdom"&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [5] "China" "[Missing]" "Mexico" "Russia"&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="consecutive_id">&lt;code>consecutive_id()&lt;/code>
&lt;a href="#consecutive_id">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>At Posit, we have regular company update meetings. Since we are all remote, these meetings are over Zoom. Zoom has a neat feature where it can record the transcript of your call, and it will report who was speaking and what they said. It looks something like this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transcript&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>name&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>text&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Hadley"&lt;/span>, &lt;span class='s'>"I'll never learn Python."&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Davis"&lt;/span>, &lt;span class='s'>"But aren't you speaking at PyCon?"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Hadley"&lt;/span>, &lt;span class='s'>"So?"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Hadley"&lt;/span>, &lt;span class='s'>"That doesn't influence my decision."&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Hadley"&lt;/span>, &lt;span class='s'>"I'm not budging!"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Mara"&lt;/span>, &lt;span class='s'>"Typical, Hadley. Stubborn as always."&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Davis"&lt;/span>, &lt;span class='s'>"Fair enough!"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Davis"&lt;/span>, &lt;span class='s'>"Let's move on."&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>transcript&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 8 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; name text &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Hadley I'll never learn Python. &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Davis But aren't you speaking at PyCon? &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Hadley So? &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Hadley That doesn't influence my decision. &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> Hadley I'm not budging! &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> Mara Typical, Hadley. Stubborn as always.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>7&lt;/span> Davis Fair enough! &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>8&lt;/span> Davis Let's move on.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We were working with this data and wanted a way to collapse each continuous thought down to one line. For example, rows 3-5 all contain a single idea from Hadley, so we&amp;rsquo;d like those to be collapsed into a single line. This isn&amp;rsquo;t quite as straightforward as a simple group-by-&lt;code>name&lt;/code> and
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transcript&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>text &lt;span class='o'>=&lt;/span> &lt;span class='nf'>stringr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://stringr.tidyverse.org/reference/str_flatten.html'>str_flatten&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>text&lt;/span>, collapse &lt;span class='o'>=&lt;/span> &lt;span class='s'>" "&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; name text &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Hadley I'll never learn Python. So? That doesn't influence my decision. I'm n…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Davis But aren't you speaking at PyCon? Fair enough! Let's move on. &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Mara Typical, Hadley. Stubborn as always.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This isn&amp;rsquo;t quite right because it collapsed the first row where Hadley says &amp;ldquo;I&amp;rsquo;ll never learn Python&amp;rdquo; alongside rows 3-5. We need a way to identify consecutive &lt;em>runs&lt;/em> representing when a single person is speaking, which is exactly what
&lt;a href="https://dplyr.tidyverse.org/reference/consecutive_id.html" target="_blank" rel="noopener">&lt;code>consecutive_id()&lt;/code>&lt;/a> is for!&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transcript&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/consecutive_id.html'>consecutive_id&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 8 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; name text id&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Hadley I'll never learn Python. 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Davis But aren't you speaking at PyCon? 2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Hadley So? 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Hadley That doesn't influence my decision. 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> Hadley I'm not budging! 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> Mara Typical, Hadley. Stubborn as always. 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>7&lt;/span> Davis Fair enough! 5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>8&lt;/span> Davis Let's move on. 5&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/consecutive_id.html" target="_blank" rel="noopener">&lt;code>consecutive_id()&lt;/code>&lt;/a> takes one or more columns and generates an integer vector that increments every time a value in one of those columns changes. This gives us something we can group on to correctly flatten our &lt;code>text&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transcript&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/consecutive_id.html'>consecutive_id&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>text &lt;span class='o'>=&lt;/span> &lt;span class='nf'>stringr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://stringr.tidyverse.org/reference/str_flatten.html'>str_flatten&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>text&lt;/span>, collapse &lt;span class='o'>=&lt;/span> &lt;span class='s'>" "&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>id&lt;/span>, &lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id name text &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Hadley I'll never learn Python. &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 Davis But aren't you speaking at PyCon? &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 Hadley So? That doesn't influence my decision. I'm not budging!&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 4 Mara Typical, Hadley. Stubborn as always. &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 5 Davis Fair enough! Let's move on.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Grouping by &lt;code>id&lt;/code> alone is actually enough, but I&amp;rsquo;ve also grouped by &lt;code>name&lt;/code> for a convenient way to drag the name along into the summary table.&lt;/p>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/consecutive_id.html" target="_blank" rel="noopener">&lt;code>consecutive_id()&lt;/code>&lt;/a> is inspired by
&lt;a href="https://rdatatable.gitlab.io/data.table/reference/rleid.html" target="_blank" rel="noopener">&lt;code>data.table::rleid()&lt;/code>&lt;/a>, which serves a similar purpose.&lt;/p>
&lt;h2 id="miscellaneous-updates">Miscellaneous updates
&lt;a href="#miscellaneous-updates">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/between.html" target="_blank" rel="noopener">&lt;code>between()&lt;/code>&lt;/a> is no longer restricted to length 1 &lt;code>left&lt;/code> and &lt;code>right&lt;/code> boundaries. They are now allowed to be length 1 or the same length as &lt;code>x&lt;/code>. Additionally,
&lt;a href="https://dplyr.tidyverse.org/reference/between.html" target="_blank" rel="noopener">&lt;code>between()&lt;/code>&lt;/a> now works with any type supported by vctrs, rather than just with numerics and date-times.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/if_else.html" target="_blank" rel="noopener">&lt;code>if_else()&lt;/code>&lt;/a> has received the same updates as
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a>. In particular, it is no longer as strict about typed missing values.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The ranking functions, like
&lt;a href="https://dplyr.tidyverse.org/reference/row_number.html" target="_blank" rel="noopener">&lt;code>dense_rank()&lt;/code>&lt;/a>, now allow data frame inputs as a way to rank by multiple columns at once.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/nth.html" target="_blank" rel="noopener">&lt;code>first()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/nth.html" target="_blank" rel="noopener">&lt;code>last()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/nth.html" target="_blank" rel="noopener">&lt;code>nth()&lt;/code>&lt;/a> have all gained an &lt;code>na_rm&lt;/code> argument since they are summary functions.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/na_if.html" target="_blank" rel="noopener">&lt;code>na_if()&lt;/code>&lt;/a> now casts &lt;code>y&lt;/code> to the type of &lt;code>x&lt;/code> to make it clear that it is type stable on &lt;code>x&lt;/code>. In particular, this means you can no longer do &lt;code>na_if(&amp;lt;tbl&amp;gt;, 0)&lt;/code>, which previously accidentally allowed you to attempt to replace missing values in every column with &lt;code>0&lt;/code>. This function has always been intended as a vector function, and this is considered off-label usage. It also now replaces &lt;code>NaN&lt;/code> values in double and complex vectors.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>dplyr 1.1.0: Per-operation grouping</title><link>https://www.tidyverse.org/blog/2023/02/dplyr-1-1-0-per-operation-grouping/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/02/dplyr-1-1-0-per-operation-grouping/</guid><description>&lt;p>Today we are going to look at one of the major new features in
&lt;a href="https://dplyr.tidyverse.org/news/index.html#dplyr-110" target="_blank" rel="noopener">dplyr 1.1.0&lt;/a>, per-operation grouping with
&lt;a href="https://dplyr.tidyverse.org/reference/dplyr_by.html" target="_blank" rel="noopener">&lt;code>.by&lt;/code>/&lt;code>by&lt;/code>&lt;/a>. Per-operation grouping is an experimental alternative to
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> which is only active within a single dplyr verb. This is another of the new dplyr features that was inspired by
&lt;a href="https://cran.r-project.org/web/packages/data.table/index.html" target="_blank" rel="noopener">data.table&lt;/a>, this time by their own grouping syntax with &lt;code>by&lt;/code>.&lt;/p>
&lt;p>To see the other blog posts in this series, head
&lt;a href="https://www.tidyverse.org/tags/dplyr-1-1-0/" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="persistent-grouping-with-group_by">Persistent grouping with &lt;code>group_by()&lt;/code>
&lt;a href="#persistent-grouping-with-group_by">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In dplyr, grouping radically affects the computation of the verb that you use it with. Since the very beginning of dplyr, you&amp;rsquo;ve been able to perform grouped operations by modifying your data frame with
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a>. This grouping is &lt;em>persistent&lt;/em>, meaning that it typically sticks around in some form for more than one operation. As an example, take a look at this &lt;code>transactions&lt;/code> dataset which tracks revenue brought in from various transactions across multiple companies. If we wanted to add a column for the total yearly revenue per company, we might do:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> company &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"B"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> year &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>2019&lt;/span>, &lt;span class='m'>2020&lt;/span>, &lt;span class='m'>2021&lt;/span>, &lt;span class='m'>2023&lt;/span>, &lt;span class='m'>2023&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> revenue &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>20&lt;/span>, &lt;span class='m'>50&lt;/span>, &lt;span class='m'>4&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>12&lt;/span>, &lt;span class='m'>18&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 20&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 18&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span>, &lt;span class='nv'>year&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>total &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>revenue&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Groups: company, year [4]&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue total&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 20 70&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50 70&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 18 30&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Notice that the result is still grouped by both &lt;code>company&lt;/code> and &lt;code>year&lt;/code>. This is useful if you need to follow up with additional grouped operations (with the exact same grouping columns), but many people follow this
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> with an
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>ungroup()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>If we only need the totals, we could also use
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>, which peels off 1 layer of grouping by default:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span>, &lt;span class='nv'>year&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>total &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>revenue&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `summarise()` has grouped output by 'company'. You can override using the&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `.groups` argument.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Groups: company [2]&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year total&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 70&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 30&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Here the grouping of the output isn&amp;rsquo;t exactly the same as the input, but we still consider this persistent grouping because some of the groups outlive the verb they were used with.&lt;/p>
&lt;h2 id="per-operation-grouping-with-byby">Per-operation grouping with &lt;code>.by&lt;/code>/&lt;code>by&lt;/code>
&lt;a href="#per-operation-grouping-with-byby">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In dplyr 1.1.0, we&amp;rsquo;ve added an alternative to
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> known as
&lt;a href="https://dplyr.tidyverse.org/reference/dplyr_by.html" target="_blank" rel="noopener">&lt;code>.by&lt;/code>&lt;/a> that introduces the idea of &lt;em>per-operation&lt;/em> grouping:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>total &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>revenue&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span>, &lt;span class='nv'>year&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue total&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 20 70&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50 70&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 18 30&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>total &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>revenue&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span>, &lt;span class='nv'>year&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year total&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 70&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 30&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>There are a few things about &lt;code>.by&lt;/code> worth noting:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The result is always ungrouped, regardless of the number of grouping columns. With &lt;code>.by&lt;/code>, you never need to remember to call
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>ungroup()&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We used
&lt;a href="https://tidyselect.r-lib.org/reference/language.html" target="_blank" rel="noopener">tidyselect&lt;/a> to group by multiple columns.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> didn&amp;rsquo;t emit a message about regrouping.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>One of the things we like about &lt;code>.by&lt;/code> is that it allows you to place the grouping specification alongside the code that uses it, rather than in a separate
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> line. This idea was inspired by data.table&amp;rsquo;s grouping syntax, which looks like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span>&lt;span class='o'>[&lt;/span>, &lt;span class='nf'>.&lt;/span>&lt;span class='o'>(&lt;/span>total &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>revenue&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>.&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span>, &lt;span class='nv'>year&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To see a complete list of dplyr verbs that support &lt;code>.by&lt;/code>, look
&lt;a href="https://dplyr.tidyverse.org/reference/dplyr_by.html#supported-verbs" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;h3 id="by-or-by">&lt;code>.by&lt;/code> or &lt;code>by&lt;/code>?
&lt;a href="#by-or-by">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>As you use per-operation grouping in dplyr, you&amp;rsquo;ll likely notice that some verbs use &lt;code>.by&lt;/code> and others use &lt;code>by&lt;/code>, for example:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice_max&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>revenue&lt;/span>, n &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>company&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 20&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 18&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This is a technical difference resulting from the fact that some verbs consistently use a &lt;code>.&lt;/code> prefix for their arguments, and others don&amp;rsquo;t (see our design notes on the
&lt;a href="https://design.tidyverse.org/dots-prefix.html" target="_blank" rel="noopener">dot prefix&lt;/a> for more details). Most dplyr verbs use &lt;code>.by&lt;/code>, and we&amp;rsquo;ve tried to ensure that the cases that are most likely to result in typos instead generate an informative error:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Uses `by` to be consistent with `n` and `prop`&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice_max&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>revenue&lt;/span>, n &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>company&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `slice_max()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Can't specify an argument named `.by` in this verb.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Did you mean to use `by` instead?&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Uses `.by` to be consistent with `.preserve`&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>revenue&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>company&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `slice()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Can't specify an argument named `by` in this verb.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Did you mean to use `.by` instead?&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="translating-from-group_by">Translating from &lt;code>group_by()&lt;/code>
&lt;a href="#translating-from-group_by">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>You shouldn&amp;rsquo;t feel pressured to translate existing code using
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> to use &lt;code>.by&lt;/code> instead.
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> won&amp;rsquo;t ever disappear, and is not currently being superseded.&lt;/p>
&lt;p>That said, if you do want to start using &lt;code>.by&lt;/code>, there are a few differences from
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> to be aware of.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>.by&lt;/code> always returns an ungrouped data frame. This is one of the main reasons to use &lt;code>.by&lt;/code>, but is worth keeping in mind if you have existing code that takes advantage of persistent grouping from
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>.by&lt;/code> uses tidy-selection.
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a>, on the other hand, works more like
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> in that it allows you to create grouping columns on the fly, i.e. &lt;code>df |&amp;gt; group_by(month = floor_date(date, &amp;quot;month&amp;quot;))&lt;/code>. With &lt;code>.by&lt;/code>, you must create your grouping columns ahead of time. An added benefit of &lt;code>.by&lt;/code>'s usage of tidy-selection is that you can supply an external character vector of grouping variables using &lt;code>.by = all_of(groups_vec)&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>.by&lt;/code> doesn&amp;rsquo;t sort grouping keys.
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> always sorts keys in ascending order, which affects the results of verbs like
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>The last point might seem strange, but consider what happens if we preferred our transactions data in order by descending year so that the most recent transactions are at the top.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/desc.html'>desc&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>year&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 20&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 18&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Note that `group_by()` re-ordered&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions2&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span>, &lt;span class='nv'>year&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>total &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>revenue&lt;/span>&lt;span class='o'>)&lt;/span>, .groups &lt;span class='o'>=&lt;/span> &lt;span class='s'>"drop"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year total&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 70&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 30&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># But `.by` used whatever order was already there&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions2&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>total &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>revenue&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span>, &lt;span class='nv'>year&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year total&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 70&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Notice that &lt;code>.by&lt;/code> doesn&amp;rsquo;t re-sort the grouping keys. Instead, the previous call to
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> is &amp;ldquo;respected&amp;rdquo; in the summary (this is also useful in combination with the new &lt;code>.locale&lt;/code> argument to
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a>).&lt;/p>
&lt;p>We expect that most code won&amp;rsquo;t depend on the ordering of these group keys, but it is worth keeping in mind if you are switching to &lt;code>.by&lt;/code>. If you did rely on sorted group keys, you currently need to explicitly call
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> either before or after the call to &lt;code>summarise(.by =)&lt;/code>. In a future release, we may add
&lt;a href="https://github.com/tidyverse/dplyr/issues/6663" target="_blank" rel="noopener">an argument&lt;/a> to control this.&lt;/p>
&lt;h2 id="nestby--">&lt;code>nest(.by = )&lt;/code>
&lt;a href="#nestby--">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyr.tidyverse.org'>tidyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The idea behind &lt;code>.by&lt;/code> turns out to be useful in contexts outside of dplyr. In
&lt;a href="https://www.tidyverse.org/blog/2023/01/tidyr-1-3-0/#nestby" target="_blank" rel="noopener">tidyr 1.3.0&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/nest.html" target="_blank" rel="noopener">&lt;code>nest()&lt;/code>&lt;/a> gained a &lt;code>.by&lt;/code> argument, allowing you to specify the columns you want to nest &lt;em>by&lt;/em> rather than the columns that appear in the nested results, which often makes for more natural calls to
&lt;a href="https://tidyr.tidyverse.org/reference/nest.html" target="_blank" rel="noopener">&lt;code>nest()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Specify what to nest by&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/nest.html'>nest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>.by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>company&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company data &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='color: #555555;'>&amp;lt;tibble [3 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> B &lt;span style='color: #555555;'>&amp;lt;tibble [3 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Specify what to nest&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/nest.html'>nest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>data &lt;span class='o'>=&lt;/span> &lt;span class='o'>!&lt;/span>&lt;span class='nv'>company&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company data &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='color: #555555;'>&amp;lt;tibble [3 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> B &lt;span style='color: #555555;'>&amp;lt;tibble [3 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Specify both, allowing you to drop `year` along the way&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/nest.html'>nest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>revenue&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>company&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company data &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='color: #555555;'>&amp;lt;tibble [3 × 1]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> B &lt;span style='color: #555555;'>&amp;lt;tibble [3 × 1]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We currently have 3 different nesting variants in the tidyverse:
&lt;a href="https://tidyr.tidyverse.org/reference/nest.html" target="_blank" rel="noopener">&lt;code>tidyr::nest()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/group_nest.html" target="_blank" rel="noopener">&lt;code>dplyr::group_nest()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/nest_by.html" target="_blank" rel="noopener">&lt;code>dplyr::nest_by()&lt;/code>&lt;/a>. Because the tidyr variant is now the most flexible of all of these, and because
&lt;a href="https://tidyr.tidyverse.org/reference/unnest.html" target="_blank" rel="noopener">&lt;code>unnest()&lt;/code>&lt;/a> also lives in tidyr, we are likely to deprecate the two experimental dplyr options in the future.&lt;/p></description></item><item><title>dplyr 1.1.0: Joins</title><link>https://www.tidyverse.org/blog/2023/01/dplyr-1-1-0-joins/</link><pubDate>Tue, 31 Jan 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/01/dplyr-1-1-0-joins/</guid><description>&lt;p>
&lt;a href="https://dplyr.tidyverse.org/news/index.html#dplyr-110" target="_blank" rel="noopener">dplyr 1.1.0&lt;/a> is out now! This is a giant release, so we&amp;rsquo;re splitting the release announcement up into four blog posts which we&amp;rsquo;ll post over the course of this week. Today, we&amp;rsquo;re focusing on joins, including the new
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> syntax, new warnings for multiple matches, inequality joins, rolling joins, and new tools for handling unmatched rows. To learn more about joins, you might want to read the updated
&lt;a href="https://r4ds.hadley.nz/joins.html" target="_blank" rel="noopener">joins chapter&lt;/a> in the upcoming 2nd edition of
&lt;a href="https://r4ds.hadley.nz" target="_blank" rel="noopener">R for Data Science&lt;/a>.&lt;/p>
&lt;p>This version of dplyr includes a number of features inspired by our
&lt;a href="https://cran.r-project.org/web/packages/data.table/index.html" target="_blank" rel="noopener">data.table&lt;/a> friends. The inequality and rolling joins we discuss today were popularized in R by data.table, and greatly inspired our own implementation.&lt;/p>
&lt;p>To see the other blog posts in this series, head
&lt;a href="https://www.tidyverse.org/tags/dplyr-1-1-0/" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="join_by">&lt;code>join_by()&lt;/code>
&lt;a href="#join_by">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Consider the following two tables, &lt;code>transactions&lt;/code> and &lt;code>companies&lt;/code>. &lt;code>transactions&lt;/code> tracks sales across various years for different companies, and &lt;code>companies&lt;/code> connects the short company id to its actual company name - either Patagonia (a fellow B-Corp!) or RStudio.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> company &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"B"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> year &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>2020&lt;/span>, &lt;span class='m'>2021&lt;/span>, &lt;span class='m'>2023&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> revenue &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>50&lt;/span>, &lt;span class='m'>4&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>12&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>companies&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> name &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Patagonia"&lt;/span>, &lt;span class='s'>"RStudio"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>companies&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id name &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> B RStudio&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To join these two tables together, we might use an inner join:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>companies&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>company &lt;span class='o'>=&lt;/span> &lt;span class='s'>"id"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue name &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 RStudio &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 RStudio&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This works great, but has always felt a little clunky. Specifying &lt;code>c(company = &amp;quot;id&amp;quot;)&lt;/code> is a little awkward because it uses &lt;code>=&lt;/code>, not &lt;code>==&lt;/code>: here we&amp;rsquo;re asserting that we want &lt;code>company&lt;/code> to equal &lt;code>id&lt;/code>, not naming a function argument or performing assignment. We&amp;rsquo;ve improved on this with a new helper,
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a>, which takes expressions in a way that allows you to more naturally express this join:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Join By:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; - company == id&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This &lt;em>join specification&lt;/em> can be used as the &lt;code>by&lt;/code> argument in any of the &lt;code>*_join()&lt;/code> functions:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>companies&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue name &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 RStudio &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 RStudio&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This small quality of life improvement is just one of the many new features that come with
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a>. We&amp;rsquo;ll look at more of these next.&lt;/p>
&lt;h2 id="multiple-matches">Multiple matches
&lt;a href="#multiple-matches">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;hr>
&lt;p>&lt;strong>Update&lt;/strong>: As of March 22, dplyr 1.1.1 is available on CRAN, which alters the behavior of multiple match detection so that you see warnings much less often. Read
&lt;a href="https://www.tidyverse.org/blog/2023/03/dplyr-1-1-1/">all about it&lt;/a> or install it now with &lt;code>install.packages(&amp;quot;dplyr&amp;quot;)&lt;/code>.&lt;/p>
&lt;hr>
&lt;p>To make things a little more interesting, we&amp;rsquo;ll add one more column to &lt;code>companies&lt;/code>, and one more row:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>companies&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"B"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> since &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1973&lt;/span>, &lt;span class='m'>2009&lt;/span>, &lt;span class='m'>2022&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> name &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Patagonia"&lt;/span>, &lt;span class='s'>"RStudio"&lt;/span>, &lt;span class='s'>"Posit"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>companies&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id since name &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>1&lt;/span>973 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>009 RStudio &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>022 Posit&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This table now also tracks name changes that have happened over the course of a company&amp;rsquo;s history. In 2022, we changed our name from RStudio to Posit, so we&amp;rsquo;ve tracked that as an additional row in our dataset. Note that both RStudio and Posit are given an &lt;code>id&lt;/code> of &lt;code>B&lt;/code>, which links back to the &lt;code>transactions&lt;/code> table.&lt;/p>
&lt;p>If we were to join these two tables together, ideally we&amp;rsquo;d bring over the name that was in effect when the transaction took place. For example, for the transaction in 2021, the company was still RStudio, so ideally we&amp;rsquo;d only match up against the RStudio row in &lt;code>companies&lt;/code>. If we colored the expected matches, they&amp;rsquo;d look something like this:&lt;/p>
&lt;p>&lt;img src="img/ideal-join.png" alt="">&lt;/p>
&lt;p>How can we do this? We can try the same join from before, but we won&amp;rsquo;t like the results:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>faulty&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>companies&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning in inner_join(transactions, companies, by = join_by(company == id)): Each row in `x` is expected to match at most 1 row in `y`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 3 of `x` matches multiple rows.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> If multiple matches are expected, set `multiple = "all"` to silence this&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; warning.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>faulty&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue since name &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50 &lt;span style='text-decoration: underline;'>1&lt;/span>973 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4 &lt;span style='text-decoration: underline;'>1&lt;/span>973 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 &lt;span style='text-decoration: underline;'>2&lt;/span>009 RStudio &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 &lt;span style='text-decoration: underline;'>2&lt;/span>022 Posit &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 &lt;span style='text-decoration: underline;'>2&lt;/span>009 RStudio &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 &lt;span style='text-decoration: underline;'>2&lt;/span>022 Posit&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Company &lt;code>A&lt;/code> matches correctly, but since we only joined on the company id, we get &lt;em>multiple matches&lt;/em> for each of company &lt;code>B&lt;/code>'s transactions and end up with more rows than we started with. This is a problem, as we were expecting a 1:1 match for each row in &lt;code>transactions&lt;/code>. Multiple matches in equality joins like this one are typically unexpected (even though they are baked in to SQL) so we&amp;rsquo;ve also added a new warning to alert you when this happens. If multiple matches are expected, you can explicitly set &lt;code>multiple = &amp;quot;all&amp;quot;&lt;/code> to silence this warning. This also serves as a code &amp;ldquo;sign post&amp;rdquo; for future readers of your code to let them know that this is a join that is expected to increase the number of rows in the data. If multiple matches &lt;em>aren&amp;rsquo;t&lt;/em> expected, you can also set &lt;code>multiple = &amp;quot;error&amp;quot;&lt;/code> to immediately halt the analysis. We expect this will be useful as a quality control check for production code where you might rerun analyses with new data on a rolling basis.&lt;/p>
&lt;h2 id="inequality-joins">Inequality joins
&lt;a href="#inequality-joins">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To actually fix this issue, we&amp;rsquo;ll need to expand our join specification to include another condition. Let&amp;rsquo;s zoom in to just 2021:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>faulty&lt;/span>, &lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"B"&lt;/span>, &lt;span class='nv'>year&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='m'>2021&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue since name &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 &lt;span style='text-decoration: underline;'>2&lt;/span>009 RStudio&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 &lt;span style='text-decoration: underline;'>2&lt;/span>022 Posit&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We want to retain the match with RStudio, but not with Posit (because the name hasn&amp;rsquo;t changed yet). One way to express this is by using the &lt;code>year&lt;/code> and &lt;code>since&lt;/code> columns to state that you only want a match if the transaction &lt;code>year&lt;/code> occurred &lt;em>after&lt;/em> a name change:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># `year[i] &amp;gt;= since`?&lt;/span>&lt;/span>
&lt;span>&lt;span class='m'>2021&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>2009&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] TRUE&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='m'>2021&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>2022&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] FALSE&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Because
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> accepts expressions, we can express this inequality directly inside the join specification:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>id&lt;/span>, &lt;span class='nv'>year&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='nv'>since&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Join By:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; - company == id&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; - year &amp;gt;= since&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>companies&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>id&lt;/span>, &lt;span class='nv'>year&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='nv'>since&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue since name &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50 &lt;span style='text-decoration: underline;'>1&lt;/span>973 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4 &lt;span style='text-decoration: underline;'>1&lt;/span>973 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 &lt;span style='text-decoration: underline;'>2&lt;/span>009 RStudio &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 &lt;span style='text-decoration: underline;'>2&lt;/span>009 RStudio &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 &lt;span style='text-decoration: underline;'>2&lt;/span>022 Posit&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This eliminated the 2021 match to Posit, as expected! This type of join is known as an &lt;em>inequality join&lt;/em>, i.e. it involves at least one join expression containing one of the following inequality conditions: &lt;code>&amp;gt;=&lt;/code>, &lt;code>&amp;gt;&lt;/code>, &lt;code>&amp;lt;=&lt;/code>, or &lt;code>&amp;lt;&lt;/code>.&lt;/p>
&lt;p>However, we still have 2 matches corresponding to the 2023 year. In this case, we only wanted the match to Posit. We can understand why we are still getting multiple matches here by running the same row-by-row analysis as before:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># `year[i] &amp;gt;= since`? Both are true!&lt;/span>&lt;/span>
&lt;span>&lt;span class='m'>2023&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>2009&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] TRUE&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='m'>2023&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>2022&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] TRUE&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To remove the last problematic match of the 2023 transaction to the RStudio name, we&amp;rsquo;ll need to refine our join specification one more time.&lt;/p>
&lt;h2 id="rolling-joins">Rolling joins
&lt;a href="#rolling-joins">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Inequality conditions like &lt;code>year &amp;gt;= since&lt;/code> are powerful, but since the condition is only bounded on one side it is common for them to return a large number of matches. Since multiple matches are the typical case with inequality joins, we don&amp;rsquo;t get a warning like with the equality join, but we clearly still haven&amp;rsquo;t gotten the join right. As a reminder, here are where we still have too many matches:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>companies&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>id&lt;/span>, &lt;span class='nv'>year&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='nv'>since&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"B"&lt;/span>, &lt;span class='nv'>year&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='m'>2023&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue since name &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 &lt;span style='text-decoration: underline;'>2&lt;/span>009 RStudio&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 &lt;span style='text-decoration: underline;'>2&lt;/span>022 Posit&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We need a way to filter down the matches returned from &lt;code>year &amp;gt;= since&lt;/code> to only the most recent name change. In other words, we prefer the Posit match over the RStudio match because 2022 is &lt;em>closer&lt;/em> to the transaction year of 2023 than 2009 is. We can express this in
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> by using a helper named &lt;code>closest()&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>companies&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>id&lt;/span>, &lt;span class='nf'>closest&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>year&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='nv'>since&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue since name &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50 &lt;span style='text-decoration: underline;'>1&lt;/span>973 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4 &lt;span style='text-decoration: underline;'>1&lt;/span>973 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 &lt;span style='text-decoration: underline;'>2&lt;/span>009 RStudio &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 &lt;span style='text-decoration: underline;'>2&lt;/span>022 Posit&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>&lt;code>closest(year &amp;gt;= since)&lt;/code> finds all of the matches in &lt;code>since&lt;/code> for a particular &lt;code>year&lt;/code>, and then filters them down to only the closest match to that &lt;code>year&lt;/code>. This is known as a &lt;em>rolling join&lt;/em>, because in this case it &lt;em>rolls&lt;/em> the most recent name change forward to match up with the transaction. Rolling joins were popularized by data.table, and are related to &lt;code>ASOF&lt;/code> joins supported by some SQL flavors.&lt;/p>
&lt;p>There is a third new class of joins supported by
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> that we won&amp;rsquo;t discuss today known as &lt;em>overlap joins&lt;/em>. These are particularly useful in time series where you are looking for cases where a date or range of dates from one table &lt;em>overlaps&lt;/em> a range of dates in another table. There are three helpers for overlap joins:
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html#overlap-joins" target="_blank" rel="noopener">&lt;code>between()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html#overlap-joins" target="_blank" rel="noopener">&lt;code>overlaps()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html#overlap-joins" target="_blank" rel="noopener">&lt;code>within()&lt;/code>&lt;/a>, which you can read more about
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html#overlap-joins" target="_blank" rel="noopener">in the documentation&lt;/a>.&lt;/p>
&lt;h2 id="unmatched-rows">Unmatched rows
&lt;a href="#unmatched-rows">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I mentioned earlier that we expected a 1:1 match between &lt;code>transactions&lt;/code> and &lt;code>companies&lt;/code>. We saw that &lt;code>multiple&lt;/code> can help protect us from having too many matches, but what about not having enough? Consider what happens if we add a new company to &lt;code>transactions&lt;/code> without a corresponding match in &lt;code>companies&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>tibble&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/add_row.html'>add_row&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>company &lt;span class='o'>=&lt;/span> &lt;span class='s'>"C"&lt;/span>, year &lt;span class='o'>=&lt;/span> &lt;span class='m'>2023&lt;/span>, revenue &lt;span class='o'>=&lt;/span> &lt;span class='m'>15&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>transactions&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> C &lt;span style='text-decoration: underline;'>2&lt;/span>023 15&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>companies&lt;/span>, &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>id&lt;/span>, &lt;span class='nf'>closest&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>year&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='nv'>since&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue since name &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50 &lt;span style='text-decoration: underline;'>1&lt;/span>973 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4 &lt;span style='text-decoration: underline;'>1&lt;/span>973 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 &lt;span style='text-decoration: underline;'>2&lt;/span>009 RStudio &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 &lt;span style='text-decoration: underline;'>2&lt;/span>022 Posit&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We&amp;rsquo;ve accidentally lost the &lt;code>C&lt;/code> row! If you don&amp;rsquo;t expect any unmatched rows, you can now catch this problem automatically by using our other new quality control argument, &lt;code>unmatched&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>companies&lt;/span>, &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>id&lt;/span>, &lt;span class='nf'>closest&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>year&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='nv'>since&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> unmatched &lt;span class='o'>=&lt;/span> &lt;span class='s'>"error"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `inner_join()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Each row of `x` must have a match in `y`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 5 of `x` does not have a match.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you&amp;rsquo;ve been questioning why I&amp;rsquo;ve been using an
&lt;a href="https://dplyr.tidyverse.org/reference/mutate-joins.html" target="_blank" rel="noopener">&lt;code>inner_join()&lt;/code>&lt;/a> over a
&lt;a href="https://dplyr.tidyverse.org/reference/mutate-joins.html" target="_blank" rel="noopener">&lt;code>left_join()&lt;/code>&lt;/a> this whole time, &lt;code>unmatched&lt;/code> is why. We could use a
&lt;a href="https://dplyr.tidyverse.org/reference/mutate-joins.html" target="_blank" rel="noopener">&lt;code>left_join()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>transactions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>companies&lt;/span>, &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>company&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>id&lt;/span>, &lt;span class='nf'>closest&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>year&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='nv'>since&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> unmatched &lt;span class='o'>=&lt;/span> &lt;span class='s'>"error"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; company year revenue since name &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>019 50 &lt;span style='text-decoration: underline;'>1&lt;/span>973 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;span style='text-decoration: underline;'>2&lt;/span>020 4 &lt;span style='text-decoration: underline;'>1&lt;/span>973 Patagonia&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>021 10 &lt;span style='text-decoration: underline;'>2&lt;/span>009 RStudio &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B &lt;span style='text-decoration: underline;'>2&lt;/span>023 12 &lt;span style='text-decoration: underline;'>2&lt;/span>022 Posit &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> C &lt;span style='text-decoration: underline;'>2&lt;/span>023 15 &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>But you&amp;rsquo;ll notice that we don&amp;rsquo;t get an error here. &lt;code>unmatched&lt;/code> will only error if the input that has the potential to drop rows has an unmatched row. The reason you&amp;rsquo;d use a
&lt;a href="https://dplyr.tidyverse.org/reference/mutate-joins.html" target="_blank" rel="noopener">&lt;code>left_join()&lt;/code>&lt;/a> is to ensure that rows from &lt;code>x&lt;/code> are always retained, so it wouldn&amp;rsquo;t make sense to error when rows from &lt;code>x&lt;/code> are also unmatched. If &lt;code>y&lt;/code> had unmatched rows instead, &lt;em>then&lt;/em> it would have errored because those rows would otherwise be lost from the join. In an
&lt;a href="https://dplyr.tidyverse.org/reference/mutate-joins.html" target="_blank" rel="noopener">&lt;code>inner_join()&lt;/code>&lt;/a>, both inputs can potentially drop rows, so &lt;code>unmatched = &amp;quot;error&amp;quot;&lt;/code> checks for unmatched rows in both inputs.&lt;/p></description></item><item><title>dbplyr 2.3.0</title><link>https://www.tidyverse.org/blog/2023/01/dbplyr-2-3-0/</link><pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/01/dbplyr-2-3-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re chuffed to announce the release of
&lt;a href="http://dbplyr.tidyverse.org/" target="_blank" rel="noopener">dbplyr&lt;/a> 2.3.0. dbplyr is a database backend for dplyr that allows you to use a remote database as if it was a collection of local data frames: you write ordinary dplyr code and dbplyr translates it to SQL for you.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"&amp;#123;package&amp;#125;"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This post will highlight some of the most important new features in 2.3.0: eliminating subqueries for many verb combinations, better errors, and a handful of new translations. As usual, this release comes with a large number of improvements to translations for individual backends and you can see the full list in the
&lt;a href="%7B%20github_release%20%7D">release notes&lt;/a>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dbplyr.tidyverse.org/'>dbplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>, warn.conflicts &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="sql-optimisation">SQL optimisation
&lt;a href="#sql-optimisation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>dbplyr now produces fewer subqueries resulting in shorter, more readable, and, in some cases, faster SQL. The following combinations of verbs no longer require subqueries:&lt;/p>
&lt;ul>
&lt;li>&lt;code>*_join()&lt;/code> +
&lt;a href="https://dplyr.tidyverse.org/reference/select.html" target="_blank" rel="noopener">&lt;code>select()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/select.html" target="_blank" rel="noopener">&lt;code>select()&lt;/code>&lt;/a> + &lt;code>*_join()&lt;/code>.&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> +
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> +
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a>.&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/select.html" target="_blank" rel="noopener">&lt;code>select()&lt;/code>&lt;/a>/
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a>/
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> +
&lt;a href="https://dplyr.tidyverse.org/reference/distinct.html" target="_blank" rel="noopener">&lt;code>distinct()&lt;/code>&lt;/a>.&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> +
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> now translates to &lt;code>HAVING&lt;/code>.&lt;/li>
&lt;li>&lt;code>left/inner_join()&lt;/code> + &lt;code>left/inner_join()&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Here are a couple of examples of queries that are now much more compact:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>lf1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, a &lt;span class='o'>=&lt;/span> &lt;span class='s'>"a"&lt;/span>, .name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"lf1"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>lf2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, b &lt;span class='o'>=&lt;/span> &lt;span class='s'>"b"&lt;/span>, .name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"lf2"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>lf3&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, c &lt;span class='o'>=&lt;/span> &lt;span class='s'>"c"&lt;/span>, .name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"lf3"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>lf1&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lf2&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lf3&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>b&lt;/span>, &lt;span class='nv'>c&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `b`, `c`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf1`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>LEFT JOIN&lt;/span> `lf2`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ON&lt;/span> (`lf1`.`x` = `lf2`.`x`)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>LEFT JOIN&lt;/span> `lf3`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ON&lt;/span> (`lf1`.`x` = `lf3`.`x`)&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>lf1&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>a &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>a&lt;/span>, na.rm &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>, n &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/context.html'>n&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>n&lt;/span> &lt;span class='o'>&amp;gt;&lt;/span> &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> `x`, AVG(`a`)&lt;span style='color: #0000BB;'> AS &lt;/span>`a`, COUNT(*)&lt;span style='color: #0000BB;'> AS &lt;/span>`n`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf1`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>GROUP BY&lt;/span> `x`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>HAVING&lt;/span> (COUNT(*) &amp;gt; 5.0)&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>(As ususal in these blog posts, I&amp;rsquo;m using
&lt;a href="https://dbplyr.tidyverse.org/reference/tbl_lazy.html" target="_blank" rel="noopener">&lt;code>lazy_frame()&lt;/code>&lt;/a> to focus on the SQL generation, without having to set up a dummy database.)&lt;/p>
&lt;p>Additionally, where possible, dbplyr now uses &lt;code>SELECT *&lt;/code> after a join instead of explicitly selecting every column.&lt;/p>
&lt;h2 id="improved-errors">Improved errors
&lt;a href="#improved-errors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Variables that aren&amp;rsquo;t found in either the data or in the environment now produce an error:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>,y &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>z&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `mutate()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Problem while computing `x = z + 1`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Caused by error:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Object `z` not found.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>(Previously they were silently translated to SQL variables.)&lt;/p>
&lt;p>We&amp;rsquo;ve also generally reviewed the error messages to ensure they show more clearly where the error happened:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>y&lt;/span> &lt;span class='o'>&lt;a href='https://rdrr.io/r/base/Arithmetic.html'>%/%&lt;/a>&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `purrr::pmap()` at &lt;/span>&lt;a href='file:///Users/hadleywickham/Documents/dplyr/dbplyr/R/lazy-select-query.R'>&lt;span style='font-weight: bold;'>dbplyr/R/lazy-select-query.R:282:2&lt;/span>&lt;/a>&lt;span style='font-weight: bold;'>:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> In index: 1.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> With name: x.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Caused by error in `y %/% 1`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> %/% is not available in this SQL variant&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>across&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='nv'>y&lt;/span>, &lt;span class='s'>"a"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `mutate()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Problem while computing `..1 = across(x:y, "a")`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Caused by error in `across()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> `.fns` must be a NULL, a function, formula, or list&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="new-translations">New translations
&lt;a href="#new-translations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://stringr.tidyverse.org/reference/str_like.html" target="_blank" rel="noopener">&lt;code>stringr::str_like()&lt;/code>&lt;/a> (new in stringr 1.5.0) is translated to &lt;code>LIKE&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>lf1&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>stringr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://stringr.tidyverse.org/reference/str_like.html'>str_like&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>a&lt;/span>, &lt;span class='s'>"abc"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> *&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `lf1`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>WHERE&lt;/span> (`a` LIKE 'abc')&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>dbplyr 2.3.0 is also supports features coming in
&lt;a href="https://www.tidyverse.org/blog/2022/11/dplyr-1-1-0-is-coming-soon/" target="_blank" rel="noopener">dplyr 1.1.0&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>The &lt;code>.by&lt;/code> argument is supported as alternative to
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a>.&lt;/li>
&lt;li>Passing &lt;code>...&lt;/code> to
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> is deprecated because the evaluation timing of &lt;code>...&lt;/code> is ambiguous.&lt;/li>
&lt;li>New &lt;code>pick()&lt;/code> and &lt;code>case_match()&lt;/code> functions are translated.&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> now supports the &lt;code>.default&lt;/code> argument.&lt;/li>
&lt;/ul>
&lt;p>This version does not support the new &lt;code>join_by()&lt;/code> syntax, but we&amp;rsquo;re working on it, and we&amp;rsquo;ll release an update after dplyr 1.1.0 is out.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The vast majority of this release (particularly the SQL optimisations) are from
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">Maximilian Girlich&lt;/a>; thanks so much for your continued work on this package.&lt;/p>
&lt;p>We&amp;rsquo;d also like to thank all 74 contributors who help in someway, whether it was filing issues or contributing code and documentation:
&lt;a href="https://github.com/a4sberg" target="_blank" rel="noopener">@a4sberg&lt;/a>,
&lt;a href="https://github.com/ablack3" target="_blank" rel="noopener">@ablack3&lt;/a>,
&lt;a href="https://github.com/akgold" target="_blank" rel="noopener">@akgold&lt;/a>,
&lt;a href="https://github.com/aleighbrown" target="_blank" rel="noopener">@aleighbrown&lt;/a>,
&lt;a href="https://github.com/andreassoteriadesmoj" target="_blank" rel="noopener">@andreassoteriadesmoj&lt;/a>,
&lt;a href="https://github.com/apalacio9502" target="_blank" rel="noopener">@apalacio9502&lt;/a>,
&lt;a href="https://github.com/baileych" target="_blank" rel="noopener">@baileych&lt;/a>,
&lt;a href="https://github.com/barnesparker" target="_blank" rel="noopener">@barnesparker&lt;/a>,
&lt;a href="https://github.com/bhuvanesh1707" target="_blank" rel="noopener">@bhuvanesh1707&lt;/a>,
&lt;a href="https://github.com/bkraft4257" target="_blank" rel="noopener">@bkraft4257&lt;/a>,
&lt;a href="https://github.com/bobbymc0" target="_blank" rel="noopener">@bobbymc0&lt;/a>,
&lt;a href="https://github.com/brian-law-rstudio" target="_blank" rel="noopener">@brian-law-rstudio&lt;/a>,
&lt;a href="https://github.com/bthe" target="_blank" rel="noopener">@bthe&lt;/a>,
&lt;a href="https://github.com/But2ene" target="_blank" rel="noopener">@But2ene&lt;/a>,
&lt;a href="https://github.com/capitantyler" target="_blank" rel="noopener">@capitantyler&lt;/a>,
&lt;a href="https://github.com/carlganz" target="_blank" rel="noopener">@carlganz&lt;/a>,
&lt;a href="https://github.com/cboettig" target="_blank" rel="noopener">@cboettig&lt;/a>,
&lt;a href="https://github.com/chwpearse" target="_blank" rel="noopener">@chwpearse&lt;/a>,
&lt;a href="https://github.com/copernican" target="_blank" rel="noopener">@copernican&lt;/a>,
&lt;a href="https://github.com/DSLituiev" target="_blank" rel="noopener">@DSLituiev&lt;/a>,
&lt;a href="https://github.com/ehudtr7" target="_blank" rel="noopener">@ehudtr7&lt;/a>,
&lt;a href="https://github.com/eitsupi" target="_blank" rel="noopener">@eitsupi&lt;/a>,
&lt;a href="https://github.com/ejneer" target="_blank" rel="noopener">@ejneer&lt;/a>,
&lt;a href="https://github.com/eutwt" target="_blank" rel="noopener">@eutwt&lt;/a>,
&lt;a href="https://github.com/ewright-vcan" target="_blank" rel="noopener">@ewright-vcan&lt;/a>,
&lt;a href="https://github.com/fabkury" target="_blank" rel="noopener">@fabkury&lt;/a>,
&lt;a href="https://github.com/fh-afrachioni" target="_blank" rel="noopener">@fh-afrachioni&lt;/a>,
&lt;a href="https://github.com/fh-mthomson" target="_blank" rel="noopener">@fh-mthomson&lt;/a>,
&lt;a href="https://github.com/filipemsc" target="_blank" rel="noopener">@filipemsc&lt;/a>,
&lt;a href="https://github.com/gadenbuie" target="_blank" rel="noopener">@gadenbuie&lt;/a>,
&lt;a href="https://github.com/gbouzill" target="_blank" rel="noopener">@gbouzill&lt;/a>,
&lt;a href="https://github.com/giocomai" target="_blank" rel="noopener">@giocomai&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hershelm" target="_blank" rel="noopener">@hershelm&lt;/a>,
&lt;a href="https://github.com/iangow" target="_blank" rel="noopener">@iangow&lt;/a>,
&lt;a href="https://github.com/iMissile" target="_blank" rel="noopener">@iMissile&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/j-wester" target="_blank" rel="noopener">@j-wester&lt;/a>,
&lt;a href="https://github.com/Janlow" target="_blank" rel="noopener">@Janlow&lt;/a>,
&lt;a href="https://github.com/jasonmhoule" target="_blank" rel="noopener">@jasonmhoule&lt;/a>,
&lt;a href="https://github.com/jensmassberg" target="_blank" rel="noopener">@jensmassberg&lt;/a>,
&lt;a href="https://github.com/jmbarbone" target="_blank" rel="noopener">@jmbarbone&lt;/a>,
&lt;a href="https://github.com/joe-rodd" target="_blank" rel="noopener">@joe-rodd&lt;/a>,
&lt;a href="https://github.com/kongdd" target="_blank" rel="noopener">@kongdd&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lschneiderbauer" target="_blank" rel="noopener">@lschneiderbauer&lt;/a>,
&lt;a href="https://github.com/machow" target="_blank" rel="noopener">@machow&lt;/a>,
&lt;a href="https://github.com/mgarbuzov" target="_blank" rel="noopener">@mgarbuzov&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/multimeric" target="_blank" rel="noopener">@multimeric&lt;/a>,
&lt;a href="https://github.com/namarkus" target="_blank" rel="noopener">@namarkus&lt;/a>,
&lt;a href="https://github.com/noamross" target="_blank" rel="noopener">@noamross&lt;/a>,
&lt;a href="https://github.com/NZambranoc" target="_blank" rel="noopener">@NZambranoc&lt;/a>,
&lt;a href="https://github.com/oriolarques" target="_blank" rel="noopener">@oriolarques&lt;/a>,
&lt;a href="https://github.com/overmar" target="_blank" rel="noopener">@overmar&lt;/a>,
&lt;a href="https://github.com/owenjonesuob" target="_blank" rel="noopener">@owenjonesuob&lt;/a>,
&lt;a href="https://github.com/p-schaefer" target="_blank" rel="noopener">@p-schaefer&lt;/a>,
&lt;a href="https://github.com/rohitg33" target="_blank" rel="noopener">@rohitg33&lt;/a>,
&lt;a href="https://github.com/rowrowrowyourboat" target="_blank" rel="noopener">@rowrowrowyourboat&lt;/a>,
&lt;a href="https://github.com/rsund" target="_blank" rel="noopener">@rsund&lt;/a>,
&lt;a href="https://github.com/samssann" target="_blank" rel="noopener">@samssann&lt;/a>,
&lt;a href="https://github.com/samterfa" target="_blank" rel="noopener">@samterfa&lt;/a>,
&lt;a href="https://github.com/schradj" target="_blank" rel="noopener">@schradj&lt;/a>,
&lt;a href="https://github.com/scvail195" target="_blank" rel="noopener">@scvail195&lt;/a>,
&lt;a href="https://github.com/slhck" target="_blank" rel="noopener">@slhck&lt;/a>,
&lt;a href="https://github.com/splaisan" target="_blank" rel="noopener">@splaisan&lt;/a>,
&lt;a href="https://github.com/stephenashton-dhsc" target="_blank" rel="noopener">@stephenashton-dhsc&lt;/a>,
&lt;a href="https://github.com/ThomasMorland" target="_blank" rel="noopener">@ThomasMorland&lt;/a>,
&lt;a href="https://github.com/thothal" target="_blank" rel="noopener">@thothal&lt;/a>,
&lt;a href="https://github.com/viswaduttp" target="_blank" rel="noopener">@viswaduttp&lt;/a>,
&lt;a href="https://github.com/XoliloX" target="_blank" rel="noopener">@XoliloX&lt;/a>, and
&lt;a href="https://github.com/yuhenghuang" target="_blank" rel="noopener">@yuhenghuang&lt;/a>.&lt;/p></description></item><item><title>dplyr 1.1.0 is coming soon</title><link>https://www.tidyverse.org/blog/2022/11/dplyr-1-1-0-is-coming-soon/</link><pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/11/dplyr-1-1-0-is-coming-soon/</guid><description>&lt;p>
&lt;a href="https://dplyr.tidyverse.org/dev/" target="_blank" rel="noopener">dplyr&lt;/a> 1.1.0 is coming soon! We haven&amp;rsquo;t started the official release process yet (where we inform maintainers), but that will start in the next few weeks, and then dplyr 1.1.0 is likely to be submitted to CRAN in late January 2023.&lt;/p>
&lt;p>This is an exciting release for dplyr, incorporating a number of features that have been in flight for years, including:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>An inline alternative to
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> that implements temporary grouping&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New join types, such as non-equi joins&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> improvements with character vectors&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a>, a generalization of
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>This pre-release blog post will discuss these new features in more detail. By releasing this post before 1.1.0 is sent to CRAN, we&amp;rsquo;re hoping to get your feedback to catch any potential problems that we&amp;rsquo;ve missed! If you do find a bug, or have general feedback about the new features, we welcome discussion on the
&lt;a href="https://github.com/tidyverse/dplyr/issues" target="_blank" rel="noopener">dplyr issues page&lt;/a>.&lt;/p>
&lt;p>You can see a full list of changes in the
&lt;a href="https://dplyr.tidyverse.org/dev/news/index.html" target="_blank" rel="noopener">release notes&lt;/a>. There are many additional improvements that couldn&amp;rsquo;t fit in a single blog post!&lt;/p>
&lt;p>dplyr 1.1.0 is not on CRAN yet, but you can install the development version from GitHub with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>pak&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://pak.r-lib.org/reference/pak.html'>pak&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidyverse/dplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The development version is mostly stable, but is still subject to minor changes before the official release. We don&amp;rsquo;t encourage relying on it for production usage, but we would love for you to try out these new features.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://clock.r-lib.org'>clock&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>12345&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="temporary-grouping-with-by">Temporary grouping with &lt;code>.by&lt;/code>
&lt;a href="#temporary-grouping-with-by">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Verbs that work &amp;ldquo;by group,&amp;rdquo; such as
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice()&lt;/code>&lt;/a>, have gained an experimental new argument, &lt;code>.by&lt;/code>, which allows for inline and temporary grouping. Grouping radically affects the computation of the dplyr verb you use it with, and one of the goals of &lt;code>.by&lt;/code> is to allow you to place that grouping specification alongside the code that actually uses it. As an added benefit, with &lt;code>.by&lt;/code> you no longer need to remember to
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>ungroup()&lt;/code>&lt;/a> after
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> won&amp;rsquo;t ever message you about how it&amp;rsquo;s handling the groups!&lt;/p>
&lt;p>This feature was inspired by
&lt;a href="https://cran.r-project.org/package=data.table" target="_blank" rel="noopener">data.table&lt;/a>, which has always used per-operation grouping.&lt;/p>
&lt;p>We&amp;rsquo;ll explore &lt;code>.by&lt;/code> with this &lt;code>expenses&lt;/code> dataset, containing various &lt;code>cost&lt;/code>s tracked across &lt;code>id&lt;/code> and &lt;code>region&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>expenses&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> region &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"A"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> cost &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>25&lt;/span>, &lt;span class='m'>20&lt;/span>, &lt;span class='m'>19&lt;/span>, &lt;span class='m'>12&lt;/span>, &lt;span class='m'>9&lt;/span>, &lt;span class='m'>6&lt;/span>, &lt;span class='m'>6&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>expenses&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 7 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id region cost&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 A 25&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 A 20&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 1 A 19&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 3 B 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 1 B 9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 2 A 6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>7&lt;/span> 3 A 6&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If I were to ask you to compute the average &lt;code>cost&lt;/code> per &lt;code>region&lt;/code>, you&amp;rsquo;d probably write something like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>expenses&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>region&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>cost &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cost&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; region cost&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A 15.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> B 10.5&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With &lt;code>.by&lt;/code>, you can now write:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>expenses&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>cost &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cost&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>region&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; region cost&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A 15.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> B 10.5&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>These two particular results look the same, but the behavior of &lt;code>.by&lt;/code> diverges from
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> when multiple group columns are involved:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>expenses&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>id&lt;/span>, &lt;span class='nv'>region&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>cost &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cost&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `summarise()` has grouped output by 'id'. You can override using the `.groups`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; argument.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Groups: id [3]&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id region cost&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 A 22&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 B 9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 A 13&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 3 A 6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 B 12&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>expenses&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>cost &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cost&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>id&lt;/span>, &lt;span class='nv'>region&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id region cost&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 A 22&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 A 13&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 B 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 1 B 9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 A 6&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Usage of &lt;code>.by&lt;/code> always results in an ungrouped data frame, regardless of the number of group columns involved.&lt;/p>
&lt;p>You might also recognize that these results aren&amp;rsquo;t returned in exactly the same order.
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> always sorts the grouping keys in ascending order, but &lt;code>.by&lt;/code> retains the original ordering found in the data. If you need ordered summaries with &lt;code>.by&lt;/code>, we recommend calling
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> explicitly before or after summarizing.&lt;/p>
&lt;p>While here we&amp;rsquo;ve focused on using &lt;code>.by&lt;/code> with
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>, it also works with other verbs, like
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>expenses&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mean &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cost&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>region&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 7 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id region cost mean&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 A 25 15.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 A 20 15.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 1 A 19 15.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 3 B 12 10.5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 1 B 9 10.5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 2 A 6 15.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>7&lt;/span> 3 A 6 15.2&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>expenses&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>region&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id region cost&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 2 A 20&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 B 9&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> won&amp;rsquo;t ever disappear, but we are having a lot of fun writing new code with &lt;code>.by&lt;/code>, and we think you will too.&lt;/p>
&lt;h2 id="join-improvements">Join improvements
&lt;a href="#join-improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>All of the join functions in dplyr, such as
&lt;a href="https://dplyr.tidyverse.org/reference/mutate-joins.html" target="_blank" rel="noopener">&lt;code>left_join()&lt;/code>&lt;/a>, now accept a flexible join specification created through the new
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> helper.
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> allows you to specify your join conditions as expressions rather than as named character vectors.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x_id&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>y_id&lt;/span>, &lt;span class='nv'>region&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Join By:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; - x_id == y_id&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; - region&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This join specification matches &lt;code>x_id&lt;/code> in the left-hand data frame with &lt;code>y_id&lt;/code> in the right-hand one, and also matches between a commonly named &lt;code>region&lt;/code> column, computing the following equi-join:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x_id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>, region &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"A"&lt;/span>&lt;span class='o'>)&lt;/span>, x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>df2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>y_id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>, region &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"C"&lt;/span>&lt;span class='o'>)&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>12&lt;/span>, &lt;span class='m'>8&lt;/span>, &lt;span class='m'>7&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x_id region x&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 A 5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 B 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 A 4&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; y_id region y&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 2 A 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 A 8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 C 7&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df1&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df2&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x_id&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>y_id&lt;/span>, &lt;span class='nv'>region&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x_id region x y&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 A 5 8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 B 10 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 A 4 12&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="non-equi-joins">Non-equi joins
&lt;a href="#non-equi-joins">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Allowing expressions in
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> opens up a whole new world of joins in dplyr known as &lt;em>non-equi joins&lt;/em>. As the name somewhat implies, these are joins that involve binary conditions other than equality. There are 4 particularly useful types of non-equi joins:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Cross joins&lt;/strong> match every pair of rows and were already supported in dplyr.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Inequality joins&lt;/strong> match using &lt;code>&amp;gt;&lt;/code>, &lt;code>&amp;gt;=&lt;/code>, &lt;code>&amp;lt;&lt;/code>, or &lt;code>&amp;lt;=&lt;/code> instead of &lt;code>==&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rolling joins&lt;/strong> are based on inequality joins, but only find the closest match.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Overlap joins&lt;/strong> are also based on inequality joins, but are specialized for working with ranges.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Non-equi joins were requested back in 2016, and were the highest requested dplyr feature at the time they were finally implemented, with over
&lt;a href="https://github.com/tidyverse/dplyr/issues/2240" target="_blank" rel="noopener">147 thumbs up&lt;/a>! data.table has had support for non-equi joins for many years, and their implementation greatly inspired the one used in dplyr.&lt;/p>
&lt;p>To demonstrate the different types of non-equi joins, imagine that you are in charge of the party planning committee for your office. Unfortunately, you only get to have one party per quarter, but it is your job to ensure that every employee is assigned to a single party. Upper management has provided the following 4 party dates:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>parties&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> q &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>4&lt;/span>,&lt;/span>
&lt;span> party &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://clock.r-lib.org/reference/date_parse.html'>date_parse&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"2022-01-10"&lt;/span>, &lt;span class='s'>"2022-04-04"&lt;/span>, &lt;span class='s'>"2022-07-11"&lt;/span>, &lt;span class='s'>"2022-10-03"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>parties&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; q party &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 2022-01-10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 2022-04-04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 2022-07-11&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 4 2022-10-03&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With this set of employees:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>employees&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> name &lt;span class='o'>=&lt;/span> &lt;span class='nf'>wakefield&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/wakefield/man/name.html'>name&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>100&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> birthday &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://clock.r-lib.org/reference/date_parse.html'>date_parse&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"2022-01-01"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sample.html'>sample&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>365&lt;/span>, &lt;span class='m'>100&lt;/span>, replace &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>-&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>employees&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; name birthday &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;variable&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Seager 2022-08-26&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Nathion 2022-10-04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Sametra 2022-06-13&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Netty 2022-05-12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Yalissa 2022-05-28&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Mirai 2022-08-20&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Toyoko 2022-08-23&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Earlene 2022-04-21&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Abbegayle 2022-01-27&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Valyssa 2022-03-06&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>One way to start approaching this problem is to look for the party that happened directly before each birthday. You can do this with an inequality join:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>employees&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>parties&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>birthday&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='nv'>party&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 251 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; name birthday q party &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;variable&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Seager 2022-08-26 1 2022-01-10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Seager 2022-08-26 2 2022-04-04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Seager 2022-08-26 3 2022-07-11&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Nathion 2022-10-04 1 2022-01-10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Nathion 2022-10-04 2 2022-04-04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Nathion 2022-10-04 3 2022-07-11&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Nathion 2022-10-04 4 2022-10-03&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Sametra 2022-06-13 1 2022-01-10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Sametra 2022-06-13 2 2022-04-04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Netty 2022-05-12 1 2022-01-10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 241 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This looks like a good start, but we&amp;rsquo;ve assigned people with birthdays later in the year to multiple parties. We can restrict this to only the party that is &lt;em>closest&lt;/em> to the employee&amp;rsquo;s birthday by using a rolling join. Rolling joins are activated by wrapping an inequality in &lt;code>closest()&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>closest&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>employees&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>parties&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>closest&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>birthday&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='nv'>party&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>closest&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; name birthday q party &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;variable&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Seager 2022-08-26 3 2022-07-11&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Nathion 2022-10-04 4 2022-10-03&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Sametra 2022-06-13 2 2022-04-04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Netty 2022-05-12 2 2022-04-04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Yalissa 2022-05-28 2 2022-04-04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Mirai 2022-08-20 3 2022-07-11&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Toyoko 2022-08-23 3 2022-07-11&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Earlene 2022-04-21 2 2022-04-04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Abbegayle 2022-01-27 1 2022-01-10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Valyssa 2022-03-06 1 2022-01-10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This is close to what we want, but isn&amp;rsquo;t &lt;em>quite&lt;/em> right. It turns out that poor Della hasn&amp;rsquo;t been assigned to a party.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>closest&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/NA.html'>is.na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>party&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; name birthday q party &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;variable&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Della 2022-01-06 &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This is because their birthday occurred before the first party date, &lt;code>2022-01-10&lt;/code>, so there wasn&amp;rsquo;t any &amp;ldquo;previous party&amp;rdquo; to match them to. It&amp;rsquo;s a little easier to fix this if we are explicit about the quarter start/end dates that form the ranges to look for matches in:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Some helpers from &amp;#123;clock&amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>quarter_start&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://clock.r-lib.org/reference/as_year_quarter_day.html'>as_year_quarter_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://clock.r-lib.org/reference/calendar-boundary.html'>calendar_start&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='s'>"quarter"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://clock.r-lib.org/reference/as_date.html'>as_date&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>quarter_end&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://clock.r-lib.org/reference/as_year_quarter_day.html'>as_year_quarter_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://clock.r-lib.org/reference/calendar-boundary.html'>calendar_end&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='s'>"quarter"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.Date.html'>as.Date&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>parties&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>parties&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>start &lt;span class='o'>=&lt;/span> &lt;span class='nf'>quarter_start&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>party&lt;/span>&lt;span class='o'>)&lt;/span>, end &lt;span class='o'>=&lt;/span> &lt;span class='nf'>quarter_end&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>party&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>parties&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; q party start end &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 2022-01-10 2022-01-01 2022-03-31&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 2022-04-04 2022-04-01 2022-06-30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 2022-07-11 2022-07-01 2022-09-30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 4 2022-10-03 2022-10-01 2022-12-31&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now that we have 4 distinct &lt;em>ranges&lt;/em> of dates to work with, we&amp;rsquo;ll use an overlap join to figure out which range each birthday fell
&lt;a href="https://dplyr.tidyverse.org/reference/between.html" target="_blank" rel="noopener">&lt;code>between()&lt;/code>&lt;/a>. Since we know that each birthday should be matched to exactly one party, we&amp;rsquo;ll also take this chance to set &lt;code>multiple&lt;/code>, a new argument to the join functions that allows you to optionally &lt;code>&amp;quot;error&amp;quot;&lt;/code> if a birthday is matched to multiple parties.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>employees&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>parties&lt;/span>, &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/between.html'>between&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>birthday&lt;/span>, &lt;span class='nv'>start&lt;/span>, &lt;span class='nv'>end&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> multiple &lt;span class='o'>=&lt;/span> &lt;span class='s'>"error"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 × 6&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; name birthday q party start end &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;variable&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Seager 2022-08-26 3 2022-07-11 2022-07-01 2022-09-30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Nathion 2022-10-04 4 2022-10-03 2022-10-01 2022-12-31&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Sametra 2022-06-13 2 2022-04-04 2022-04-01 2022-06-30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Netty 2022-05-12 2 2022-04-04 2022-04-01 2022-06-30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Yalissa 2022-05-28 2 2022-04-04 2022-04-01 2022-06-30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Mirai 2022-08-20 3 2022-07-11 2022-07-01 2022-09-30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Toyoko 2022-08-23 3 2022-07-11 2022-07-01 2022-09-30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Earlene 2022-04-21 2 2022-04-04 2022-04-01 2022-06-30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Abbegayle 2022-01-27 1 2022-01-10 2022-01-01 2022-03-31&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Valyssa 2022-03-06 1 2022-01-10 2022-01-01 2022-03-31&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We consider &lt;code>multiple&lt;/code> to be an important &amp;ldquo;quality control&amp;rdquo; argument to help you enforce constraints on the join procedure.&lt;/p>
&lt;h3 id="multiple-matches">Multiple matches
&lt;a href="#multiple-matches">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Speaking of &lt;code>multiple&lt;/code>, we&amp;rsquo;ve also given this argument an important default. When doing data analysis with equi-joins, it is often surprising when a join returns more rows than were present in the left-hand side table.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x_id region x&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 A 5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 B 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 A 4&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>y_id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>, region &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"A"&lt;/span>&lt;span class='o'>)&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>9&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>12&lt;/span>, &lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>df2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; y_id region y&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 A 9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 B 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 1 A 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 A 4&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df1&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df2&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x_id&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>y_id&lt;/span>, &lt;span class='nv'>region&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning in left_join(df1, df2, join_by(x_id == y_id, region)): Each row in `x` is expected to match at most 1 row in `y`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 1 of `x` matches multiple rows.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> If multiple matches are expected, set `multiple = "all"` to silence this&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; warning.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x_id region x y&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 A 5 9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 A 5 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 B 10 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 A 4 4&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In this case, row 1 of &lt;code>df1&lt;/code> matched both rows &lt;code>1&lt;/code> and &lt;code>3&lt;/code> of &lt;code>df2&lt;/code>, so the output has 4 rows rather than &lt;code>df1&lt;/code>'s 3. While this is standard SQL behavior, community feedback has shown that many people don&amp;rsquo;t expect this, and a number of people were horrified to learn that this was even possible! Because of this, we&amp;rsquo;ve made this case a warning by default, which you can silence with &lt;code>multiple = &amp;quot;all&amp;quot;&lt;/code>.&lt;/p>
&lt;h2 id="arrange-improvements-with-character-vectors">&lt;code>arrange()&lt;/code> improvements with character vectors
&lt;a href="#arrange-improvements-with-character-vectors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> now uses a new custom backend for generating the ordering. This generally improves performance, but it is especially apparent with character vectors.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># 10,000 random strings, sampled up to 1,000,000 rows&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>dictionary&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>stringi&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/stringi/man/stri_rand_strings.html'>stri_rand_strings&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>10000&lt;/span>, length &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>, pattern &lt;span class='o'>=&lt;/span> &lt;span class='s'>"[a-z]"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>str&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sample.html'>sample&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dictionary&lt;/span>, size &lt;span class='o'>=&lt;/span> &lt;span class='m'>1e6&lt;/span>, replace &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>str&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1,000,000 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> btjgpowbav&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> jrddujrxwt&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> ofgkybvsoo&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> dzyxfvwktu&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> qobgfmkgof&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> rmzjvtnpbf&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> jxrqgxouqg&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> empcmhnlqq&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> nwfgauiurp&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> hdswclaxys&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 999,990 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># dplyr 1.0.10&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>bench&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://bench.r-lib.org/reference/mark.html'>mark&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>str&lt;/span>, &lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>, iterations &lt;span class='o'>=&lt;/span> &lt;span class='m'>100&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # A tibble: 1 × 6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; expression min median `itr/sec` mem_alloc `gc/sec`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 arrange(str, x) 4.38s 4.89s 0.204 12.7MB 0.148&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># dplyr 1.1.0&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>bench&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://bench.r-lib.org/reference/mark.html'>mark&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>str&lt;/span>, &lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>, iterations &lt;span class='o'>=&lt;/span> &lt;span class='m'>100&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # A tibble: 1 × 6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; expression min median `itr/sec` mem_alloc `gc/sec`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 arrange(str, x) 42.3ms 46.6ms 20.8 22.4MB 46.0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>For those keeping score, that is a 100x improvement! Now, I&amp;rsquo;ll be honest, I&amp;rsquo;m being a bit tricky here. The new backend for
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> comes with a meaningful change in behavior - it now sorts character strings in the C locale by default, rather than in the much slower system locale (American English, for me). We made this change for two main reasons:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Much faster performance by default, because it can use {vctrs} radix sort (inspired by data.table)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Improved reproducibility across R sessions, where different computers might use different system locales&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>For English users, we expect this change to have fairly minimal impact. The largest difference in ordering between the C and American English locales has to do with capitalization. In the C locale, uppercase letters are always placed before &lt;em>any&lt;/em> lowercase letters. In the American English locale, uppercase letters are placed directly after their lowercase equivalent.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"b"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df&lt;/span>, &lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> B &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> a &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> b&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you do need to order with a specific locale, you can specify the new &lt;code>.locale&lt;/code> argument, which takes a locale identifier string, just like
&lt;a href="https://stringr.tidyverse.org/reference/str_order.html" target="_blank" rel="noopener">&lt;code>stringr::str_sort()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df&lt;/span>, &lt;span class='nv'>x&lt;/span>, .locale &lt;span class='o'>=&lt;/span> &lt;span class='s'>"en"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> a &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> A &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> b &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> B&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To use this optional &lt;code>.locale&lt;/code> feature, you must have the stringi package installed, but you likely already do because it is installed with the tidyverse by default.&lt;/p>
&lt;p>It is also worth noting that using &lt;code>.locale&lt;/code> is still much faster than relying on the system locale.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Compare with ~5 seconds above with dplyr 1.0.10&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>bench&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://bench.r-lib.org/reference/mark.html'>mark&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>str&lt;/span>, &lt;span class='nv'>x&lt;/span>, .locale &lt;span class='o'>=&lt;/span> &lt;span class='s'>"en"&lt;/span>&lt;span class='o'>)&lt;/span>, iterations &lt;span class='o'>=&lt;/span> &lt;span class='m'>100&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # A tibble: 1 × 6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; expression min median `itr/sec` mem_alloc&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 arrange(str, x, .locale = "en") 377ms 430ms 2.21 27.9MB&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # … with 1 more variable: `gc/sec` &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>For non-English Latin script languages, such as Spanish, you may see more of a change, as characters such as &lt;code>ñ&lt;/code> are ordered after &lt;code>z&lt;/code> rather than before &lt;code>n&lt;/code> in the C locale:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"\u00F1"&lt;/span>, &lt;span class='s'>"n"&lt;/span>, &lt;span class='s'>"z"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> ñ &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> n &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> z&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df&lt;/span>, &lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> n &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> z &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> ñ&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df&lt;/span>, &lt;span class='nv'>x&lt;/span>, .locale &lt;span class='o'>=&lt;/span> &lt;span class='s'>"es"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> n &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> ñ &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> z&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We are optimistic that this change is an overall net positive. We anticipate that many users use
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> to simply group similar looking observations together, and we expect that the main places you&amp;rsquo;ll need to care about localized ordering are the few places when you are generating human readable output, such as a table or a chart, at which point you might consider using &lt;code>.locale&lt;/code>.&lt;/p>
&lt;p>If you are having trouble converting an existing script over to the new behavior, you can set the temporary global option &lt;code>options(dplyr.legacy_locale = TRUE)&lt;/code>, which will revert to the pre-1.1.0 behavior of using the system locale. We expect to remove this option in a future release.&lt;/p>
&lt;p>To learn more low-level details about this change, you can read our
&lt;a href="https://github.com/tidyverse/tidyups/blob/main/003-dplyr-radix-ordering.md" target="_blank" rel="noopener">tidyup&lt;/a>.&lt;/p>
&lt;h2 id="reframe-a-generalization-of-summarise">&lt;code>reframe()&lt;/code>, a generalization of &lt;code>summarise()&lt;/code>
&lt;a href="#reframe-a-generalization-of-summarise">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In dplyr 1.0.0, we introduced a powerful new feature:
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> could return per-group results of any length, rather than just length 1. For example:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>table&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>, &lt;span class='s'>"d"&lt;/span>, &lt;span class='s'>"f"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> g &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"e"&lt;/span>, &lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>, &lt;span class='s'>"c"&lt;/span>, &lt;span class='s'>"f"&lt;/span>, &lt;span class='s'>"d"&lt;/span>, &lt;span class='s'>"a"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/setops.html'>intersect&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>table&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; g x &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 a &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 b &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 f &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 d &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 a&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>While extremely powerful, community feedback has raised the valid concern that allowing
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> to return any number of rows per group:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Increases the chance for accidental bugs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Is against the spirit of a &amp;ldquo;summary,&amp;rdquo; which implies 1 row per group&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Makes translation to dbplyr very difficult&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>We agree! In response to this, we&amp;rsquo;ve decided to walk back that change to
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>, which will now throw a warning when either 0 or &amp;gt;1 rows are returned per group:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/setops.html'>intersect&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>table&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; dplyr 1.1.0.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Please use `reframe()` instead.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> When switching from `summarise()` to `reframe()`, remember that `reframe()`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; always returns an ungrouped data frame and adjust accordingly.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; g x &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 a &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 b &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 f &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 d &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 a&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>That said, we still believe that this is a powerful tool, so we&amp;rsquo;ve moved these features to a new verb,
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a>. Think of
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a> as a generic tool for &amp;ldquo;doing something to each group,&amp;rdquo; with no restrictions on the number of rows returned per group.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/reframe.html'>reframe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/setops.html'>intersect&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>table&lt;/span>&lt;span class='o'>)&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; g x &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 a &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 b &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 f &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 d &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 a&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>One big difference between
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a> is that
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a> always returns an ungrouped data frame, even if the input was a grouped data frame with multiple group columns. This simplifies
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a> immensely, as it doesn&amp;rsquo;t need to inherit the &lt;code>.groups&lt;/code> argument of
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>, and never emits any messages.&lt;/p>
&lt;p>We expect that you&amp;rsquo;ll continue to use
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> much more often than
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a>, but if you ever find yourself applying a function to each group that returns an arbitrary number of rows,
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a> should be your go-to tool!&lt;/p>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/reframe.html" target="_blank" rel="noopener">&lt;code>reframe()&lt;/code>&lt;/a> is one of the places we could use your feedback! We aren&amp;rsquo;t completely confident about this function name yet, so if you have any feedback about it or suggestions for an alternate one, please leave a comment on this
&lt;a href="https://github.com/tidyverse/dplyr/issues/6565" target="_blank" rel="noopener">issue&lt;/a>.&lt;/p></description></item><item><title>dbplyr 2.2.0</title><link>https://www.tidyverse.org/blog/2022/06/dbplyr-2-2-0/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/06/dbplyr-2-2-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re chuffed to announce the release of
&lt;a href="https://dbplyr.tidyverse.org" target="_blank" rel="noopener">dbplyr&lt;/a> 2.2.0. dbplyr is a database backend for dplyr that allows you to use a remote database as if it was a collection of local data frames: you write ordinary dplyr code and dbplyr translates it to SQL for you.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dbplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will discuss some of the biggest improvements to SQL translations, introduce
&lt;a href="https://dbplyr.tidyverse.org/reference/copy_inline.html" target="_blank" rel="noopener">&lt;code>copy_inline()&lt;/code>&lt;/a>, and discuss support for dplyr&amp;rsquo;s &lt;code>row_&lt;/code> functions. You can see a full list of changes in the
&lt;a href="https://github.com/tidyverse/dbplyr/releases/tag/v2.2.0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dbplyr.tidyverse.org/'>dbplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>, warn.conflicts &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="sql-improvements">SQL improvements
&lt;a href="#sql-improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This release brings with it a host of useful improvements to SQL generation. Firstly, dbplyr uses &lt;code>*&lt;/code> where possible. This is particularly nice when you have a table with many names:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>!&lt;/span>&lt;span class='o'>!&lt;/span>&lt;span class='o'>!&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/setNames.html'>setNames&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>as.list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>26&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>letters&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lf&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> *&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `df`&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you&amp;rsquo;re familiar with dbplyr&amp;rsquo;s old SQL output, you&amp;rsquo;ll also notice that the output receives some basic syntax highlighting and much improved line breaks and indenting.&lt;/p>
&lt;p>The use of &lt;code>*&lt;/code> is particularly nice when you have a subquery. Previously the generated SQL would have repeated the column names &lt;code>a&lt;/code> to &lt;code>z&lt;/code> twice, once for each subquery.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> |&amp;gt;
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x2 &lt;span class='o'>=&lt;/span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>1&lt;/span>, x3 &lt;span class='o'>=&lt;/span> &lt;span class='nv'>x2&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> *, `x2` + 1.0&lt;span style='color: #0000BB;'> AS &lt;/span>`x3`&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> (&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> *, `x` + 1.0&lt;span style='color: #0000BB;'> AS &lt;/span>`x2`&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `df`&lt;/span>
&lt;span class='c'>#&amp;gt; ) `q01`&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/explain.html" target="_blank" rel="noopener">&lt;code>show_query()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/compute.html" target="_blank" rel="noopener">&lt;code>compute()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/compute.html" target="_blank" rel="noopener">&lt;code>collect()&lt;/code>&lt;/a> have experimental support for common table expressions (CTEs), available by setting &lt;code>cte = TRUE&lt;/code> argument. CTEs are the database equivalent of the pipe; they allow you to write subqueries in the order in which they&amp;rsquo;re evaluated, rather than the opposite.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> |&amp;gt;
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x2 &lt;span class='o'>=&lt;/span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>1&lt;/span>, x3 &lt;span class='o'>=&lt;/span> &lt;span class='nv'>x2&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span> |&amp;gt;
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>cte &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>WITH &lt;/span>`q01`&lt;span style='color: #0000BB;'> AS&lt;/span> (&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> *, `x` + 1.0&lt;span style='color: #0000BB;'> AS &lt;/span>`x2`&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `df`&lt;/span>
&lt;span class='c'>#&amp;gt; )&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> *, `x2` + 1.0&lt;span style='color: #0000BB;'> AS &lt;/span>`x3`&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> `q01`&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We&amp;rsquo;ve also added support for translating
&lt;a href="https://rdrr.io/r/base/cut.html" target="_blank" rel="noopener">&lt;code>cut()&lt;/code>&lt;/a>: this is a very useful base R function that&amp;rsquo;s fiddly to express in SQL:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/translate_sql.html'>translate_sql&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>25&lt;/span>, &lt;span class='m'>50&lt;/span>, &lt;span class='m'>100&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt; CASE&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;lt;= 0.0) THEN NULL&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;lt;= 25.0) THEN '(0,25]'&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;lt;= 50.0) THEN '(25,50]'&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;lt;= 100.0) THEN '(50,100]'&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;gt; 100.0) THEN NULL&lt;/span>
&lt;span class='c'>#&amp;gt; END&lt;/span>
&lt;span class='c'># Can provide custom labels&lt;/span>
&lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/translate_sql.html'>translate_sql&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>25&lt;/span>, &lt;span class='m'>50&lt;/span>, &lt;span class='m'>100&lt;/span>&lt;span class='o'>)&lt;/span>, labels &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"small"&lt;/span>, &lt;span class='s'>"medium"&lt;/span>, &lt;span class='s'>"large"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt; CASE&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;lt;= 0.0) THEN NULL&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;lt;= 25.0) THEN 'small'&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;lt;= 50.0) THEN 'medium'&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;lt;= 100.0) THEN 'large'&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;gt; 100.0) THEN NULL&lt;/span>
&lt;span class='c'>#&amp;gt; END&lt;/span>
&lt;span class='c'># And use Inf/-Inf bounds&lt;/span>
&lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/translate_sql.html'>translate_sql&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>x&lt;/span>,
breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='kc'>Inf&lt;/span>, &lt;span class='m'>25&lt;/span>, &lt;span class='m'>50&lt;/span>, &lt;span class='kc'>Inf&lt;/span>&lt;span class='o'>)&lt;/span>,
labels &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"small"&lt;/span>, &lt;span class='s'>"medium"&lt;/span>, &lt;span class='s'>"large"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt; CASE&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;lt;= 25.0) THEN 'small'&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;lt;= 50.0) THEN 'medium'&lt;/span>
&lt;span class='c'>#&amp;gt; WHEN (`x` &amp;gt; 50.0) THEN 'large'&lt;/span>
&lt;span class='c'>#&amp;gt; END&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>There are also a whole host of minor translation improvements which you can read about in the
&lt;a href="https://github.com/tidyverse/dbplyr/releases/tag/v2.2.0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="copy_inline">&lt;code>copy_inline()&lt;/code>
&lt;a href="#copy_inline">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://dbplyr.tidyverse.org/reference/copy_inline.html" target="_blank" rel="noopener">&lt;code>copy_inline()&lt;/code>&lt;/a> provides a new way to get data out of R and into the database by embedding the data directly in the query. This is a natural complement to
&lt;a href="https://dplyr.tidyverse.org/reference/copy_to.html" target="_blank" rel="noopener">&lt;code>copy_to()&lt;/code>&lt;/a> which writes data to a temporary table.
&lt;a href="https://dbplyr.tidyverse.org/reference/copy_inline.html" target="_blank" rel="noopener">&lt;code>copy_inline()&lt;/code>&lt;/a> is faster for small datasets and is particularly useful when you don&amp;rsquo;t have the permissions needed to create temporary tables. Here&amp;rsquo;s a very simple example of what the generated SQL will look like for PostgreSQL&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>5&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>letters&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>5&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/copy_inline.html'>copy_inline&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/backend-postgres.html'>simulate_postgres&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>df&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>SELECT&lt;/span> CAST(`x` AS INTEGER)&lt;span style='color: #0000BB;'> AS &lt;/span>`x`, CAST(`y` AS TEXT)&lt;span style='color: #0000BB;'> AS &lt;/span>`y`&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>FROM&lt;/span> ( &lt;span style='color: #0000BB;'>VALUES&lt;/span> (1, 'a'), (2, 'b'), (3, 'c'), (4, 'd'), (5, 'e')) AS drvd(`x`, `y`)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="row-modification">Row modification
&lt;a href="#row-modification">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>dplyr 1.0.0 added a family of
&lt;a href="https://www.tidyverse.org/blog/2020/05/dplyr-1-0-0-last-minute-additions/#row-mutation" target="_blank" rel="noopener">row modification&lt;/a> functions:
&lt;a href="https://dplyr.tidyverse.org/reference/rows.html" target="_blank" rel="noopener">&lt;code>rows_insert()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/rows.html" target="_blank" rel="noopener">&lt;code>rows_append()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/rows.html" target="_blank" rel="noopener">&lt;code>rows_update()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/rows.html" target="_blank" rel="noopener">&lt;code>rows_patch()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/rows.html" target="_blank" rel="noopener">&lt;code>rows_upsert()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/rows.html" target="_blank" rel="noopener">&lt;code>rows_delete()&lt;/code>&lt;/a>. These functions were inspired by SQL and are now supported by dbplyr.&lt;/p>
&lt;p>The primary purpose of these functions is to modify the underlying tables. Because that purpose is dangerous, you&amp;rsquo;ll need to deliberate opt-in to modification by setting &lt;code>in_place = TRUE&lt;/code>. Use the default behaviour, &lt;code>in_place = FALSE&lt;/code>, to simulate what the result will be.&lt;/p>
&lt;p>With &lt;code>in_place = FALSE&lt;/code>,
&lt;a href="https://dplyr.tidyverse.org/reference/rows.html" target="_blank" rel="noopener">&lt;code>rows_insert()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/rows.html" target="_blank" rel="noopener">&lt;code>rows_append()&lt;/code>&lt;/a> performs an &lt;code>INSERT&lt;/code>,
&lt;a href="https://dplyr.tidyverse.org/reference/rows.html" target="_blank" rel="noopener">&lt;code>rows_update()&lt;/code>&lt;/a> and &lt;code>rows_path()&lt;/code> perform an &lt;code>UPDATE&lt;/code>, and
&lt;a href="https://dplyr.tidyverse.org/reference/rows.html" target="_blank" rel="noopener">&lt;code>rows_delete()&lt;/code>&lt;/a> performs a &lt;code>DELETE.&lt;/code>&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Most of the work in this release was done by dbplyr author
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>: thanks for all your continued hard work!&lt;/p>
&lt;p>And a big thanks to all 77 other contributors who&amp;rsquo;s comments, code, and discussion helped make a better package:
&lt;a href="https://github.com/001ben" target="_blank" rel="noopener">@001ben&lt;/a>,
&lt;a href="https://github.com/1beb" target="_blank" rel="noopener">@1beb&lt;/a>,
&lt;a href="https://github.com/Ada-Nick" target="_blank" rel="noopener">@Ada-Nick&lt;/a>,
&lt;a href="https://github.com/admivsn" target="_blank" rel="noopener">@admivsn&lt;/a>,
&lt;a href="https://github.com/alex-m-ffm" target="_blank" rel="noopener">@alex-m-ffm&lt;/a>,
&lt;a href="https://github.com/andreassoteriadesmoj" target="_blank" rel="noopener">@andreassoteriadesmoj&lt;/a>,
&lt;a href="https://github.com/andyquinterom" target="_blank" rel="noopener">@andyquinterom&lt;/a>,
&lt;a href="https://github.com/apalacio10" target="_blank" rel="noopener">@apalacio10&lt;/a>,
&lt;a href="https://github.com/apalacio9502" target="_blank" rel="noopener">@apalacio9502&lt;/a>,
&lt;a href="https://github.com/aris-hastings" target="_blank" rel="noopener">@aris-hastings&lt;/a>,
&lt;a href="https://github.com/asimumba" target="_blank" rel="noopener">@asimumba&lt;/a>,
&lt;a href="https://github.com/ben1787" target="_blank" rel="noopener">@ben1787&lt;/a>,
&lt;a href="https://github.com/boshek" target="_blank" rel="noopener">@boshek&lt;/a>,
&lt;a href="https://github.com/caljnj" target="_blank" rel="noopener">@caljnj&lt;/a>,
&lt;a href="https://github.com/carlganz" target="_blank" rel="noopener">@carlganz&lt;/a>,
&lt;a href="https://github.com/CLRafaelR" target="_blank" rel="noopener">@CLRafaelR&lt;/a>,
&lt;a href="https://github.com/coponhub" target="_blank" rel="noopener">@coponhub&lt;/a>,
&lt;a href="https://github.com/cslewis04" target="_blank" rel="noopener">@cslewis04&lt;/a>,
&lt;a href="https://github.com/dbaston" target="_blank" rel="noopener">@dbaston&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/DrFabach" target="_blank" rel="noopener">@DrFabach&lt;/a>,
&lt;a href="https://github.com/EarlGlynn" target="_blank" rel="noopener">@EarlGlynn&lt;/a>,
&lt;a href="https://github.com/edonnachie" target="_blank" rel="noopener">@edonnachie&lt;/a>,
&lt;a href="https://github.com/eipi10" target="_blank" rel="noopener">@eipi10&lt;/a>,
&lt;a href="https://github.com/eitsupi" target="_blank" rel="noopener">@eitsupi&lt;/a>,
&lt;a href="https://github.com/fh-afrachioni" target="_blank" rel="noopener">@fh-afrachioni&lt;/a>,
&lt;a href="https://github.com/fh-kpikhart" target="_blank" rel="noopener">@fh-kpikhart&lt;/a>,
&lt;a href="https://github.com/ggpinto" target="_blank" rel="noopener">@ggpinto&lt;/a>,
&lt;a href="https://github.com/GuillaumePressiat" target="_blank" rel="noopener">@GuillaumePressiat&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/HarlanH" target="_blank" rel="noopener">@HarlanH&lt;/a>,
&lt;a href="https://github.com/hdplsa" target="_blank" rel="noopener">@hdplsa&lt;/a>,
&lt;a href="https://github.com/iangow" target="_blank" rel="noopener">@iangow&lt;/a>,
&lt;a href="https://github.com/James-G-Hill" target="_blank" rel="noopener">@James-G-Hill&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jiaqizhu-learning" target="_blank" rel="noopener">@jiaqizhu-learning&lt;/a>,
&lt;a href="https://github.com/jonkeane" target="_blank" rel="noopener">@jonkeane&lt;/a>,
&lt;a href="https://github.com/jsspurgeon" target="_blank" rel="noopener">@jsspurgeon&lt;/a>,
&lt;a href="https://github.com/julieinsan" target="_blank" rel="noopener">@julieinsan&lt;/a>,
&lt;a href="https://github.com/k6adams" target="_blank" rel="noopener">@k6adams&lt;/a>,
&lt;a href="https://github.com/kelnerrr" target="_blank" rel="noopener">@kelnerrr&lt;/a>,
&lt;a href="https://github.com/kmishra9" target="_blank" rel="noopener">@kmishra9&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/Leprechault" target="_blank" rel="noopener">@Leprechault&lt;/a>,
&lt;a href="https://github.com/Liudvikas-vinted" target="_blank" rel="noopener">@Liudvikas-vinted&lt;/a>,
&lt;a href="https://github.com/LukasWallrich" target="_blank" rel="noopener">@LukasWallrich&lt;/a>,
&lt;a href="https://github.com/m-sostero" target="_blank" rel="noopener">@m-sostero&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/mattcane" target="_blank" rel="noopener">@mattcane&lt;/a>,
&lt;a href="https://github.com/mfherman" target="_blank" rel="noopener">@mfherman&lt;/a>,
&lt;a href="https://github.com/mkoohafkan" target="_blank" rel="noopener">@mkoohafkan&lt;/a>,
&lt;a href="https://github.com/Mosk915" target="_blank" rel="noopener">@Mosk915&lt;/a>,
&lt;a href="https://github.com/nassuphis" target="_blank" rel="noopener">@nassuphis&lt;/a>,
&lt;a href="https://github.com/nirski" target="_blank" rel="noopener">@nirski&lt;/a>,
&lt;a href="https://github.com/nviets" target="_blank" rel="noopener">@nviets&lt;/a>,
&lt;a href="https://github.com/overmar" target="_blank" rel="noopener">@overmar&lt;/a>,
&lt;a href="https://github.com/p-schaefer" target="_blank" rel="noopener">@p-schaefer&lt;/a>,
&lt;a href="https://github.com/plogacev" target="_blank" rel="noopener">@plogacev&lt;/a>,
&lt;a href="https://github.com/randy3k" target="_blank" rel="noopener">@randy3k&lt;/a>,
&lt;a href="https://github.com/recleev" target="_blank" rel="noopener">@recleev&lt;/a>,
&lt;a href="https://github.com/rmcd1024" target="_blank" rel="noopener">@rmcd1024&lt;/a>,
&lt;a href="https://github.com/rsund" target="_blank" rel="noopener">@rsund&lt;/a>,
&lt;a href="https://github.com/rvomm" target="_blank" rel="noopener">@rvomm&lt;/a>,
&lt;a href="https://github.com/samssann" target="_blank" rel="noopener">@samssann&lt;/a>,
&lt;a href="https://github.com/sfirke" target="_blank" rel="noopener">@sfirke&lt;/a>,
&lt;a href="https://github.com/Sir-Chibi" target="_blank" rel="noopener">@Sir-Chibi&lt;/a>,
&lt;a href="https://github.com/sitendug" target="_blank" rel="noopener">@sitendug&lt;/a>,
&lt;a href="https://github.com/somatusag" target="_blank" rel="noopener">@somatusag&lt;/a>,
&lt;a href="https://github.com/stephenashton-dhsc" target="_blank" rel="noopener">@stephenashton-dhsc&lt;/a>,
&lt;a href="https://github.com/swnydick" target="_blank" rel="noopener">@swnydick&lt;/a>,
&lt;a href="https://github.com/thothal" target="_blank" rel="noopener">@thothal&lt;/a>,
&lt;a href="https://github.com/torbjorn" target="_blank" rel="noopener">@torbjorn&lt;/a>,
&lt;a href="https://github.com/tsengj" target="_blank" rel="noopener">@tsengj&lt;/a>,
&lt;a href="https://github.com/vspinu" target="_blank" rel="noopener">@vspinu&lt;/a>,
&lt;a href="https://github.com/Waftmaster" target="_blank" rel="noopener">@Waftmaster&lt;/a>,
&lt;a href="https://github.com/williamlai2" target="_blank" rel="noopener">@williamlai2&lt;/a>, and
&lt;a href="https://github.com/yitao-li" target="_blank" rel="noopener">@yitao-li&lt;/a>.&lt;/p></description></item><item><title>dtplyr 1.2.0</title><link>https://www.tidyverse.org/blog/2021/12/dtplyr-1-2-0/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/12/dtplyr-1-2-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re thrilled to announce that
&lt;a href="https://dtplyr.tidyverse.org" target="_blank" rel="noopener">dtplyr&lt;/a> 1.2.0 is now on CRAN. dtplyr gives you the speed of
&lt;a href="http://r-datatable.com/" target="_blank" rel="noopener">data.table&lt;/a> with the syntax of dplyr; you write dplyr (and tidyr) code and dtplyr translates it to the data.table equivalent.&lt;/p>
&lt;p>You can install dtplyr from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dtplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>I&amp;rsquo;ll discuss three major changes in this blog post:&lt;/p>
&lt;ul>
&lt;li>New authors&lt;/li>
&lt;li>New tidyr translations&lt;/li>
&lt;li>Improvements to join translations&lt;/li>
&lt;/ul>
&lt;p>There are also over 20 minor improvements to the quality of translations; you can see a full list in the
&lt;a href="https://github.com/tidyverse/dtplyr/blob/main/NEWS.md" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dtplyr.tidyverse.org'>dtplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>, warn.conflicts &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyr.tidyverse.org'>tidyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="new-authors">New authors
&lt;a href="#new-authors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The biggest news in this release is the addition of three new
&lt;a href="https://github.com/tidyverse/tidyups/blob/main/004-governance.md#authors" target="_blank" rel="noopener">authors&lt;/a>:
&lt;a href="https://github.com/markfairbanks" target="_blank" rel="noopener">Mark Fairbanks&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">Maximilian Girlich&lt;/a>, and
&lt;a href="https://github.com/eutwt" target="_blank" rel="noopener">Ryan Dickerson&lt;/a> are now dtplyr authors in recognition of their significant and sustained contributions. In fact, they implemented the bulk of the improvements in this release!&lt;/p>
&lt;h2 id="tidyr-translations">tidyr translations
&lt;a href="#tidyr-translations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>dtplyr gains translations for many more tidyr verbs including
&lt;a href="https://tidyr.tidyverse.org/reference/complete.html" target="_blank" rel="noopener">&lt;code>complete()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/drop_na.html" target="_blank" rel="noopener">&lt;code>drop_na()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/expand.html" target="_blank" rel="noopener">&lt;code>expand()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/fill.html" target="_blank" rel="noopener">&lt;code>fill()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/nest.html" target="_blank" rel="noopener">&lt;code>nest()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_longer.html" target="_blank" rel="noopener">&lt;code>pivot_longer()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/replace_na.html" target="_blank" rel="noopener">&lt;code>replace_na()&lt;/code>&lt;/a>, and
&lt;a href="https://tidyr.tidyverse.org/reference/separate.html" target="_blank" rel="noopener">&lt;code>separate()&lt;/code>&lt;/a>. A few examples are shown below:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dtplyr.tidyverse.org/reference/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>NA&lt;/span>, &lt;span class='s'>"x.y"&lt;/span>, &lt;span class='s'>"x.z"&lt;/span>, &lt;span class='s'>"y.z"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate.html'>separate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>&lt;span class='o'>)&lt;/span>, sep &lt;span class='o'>=&lt;/span> &lt;span class='s'>"\\."&lt;/span>, remove &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; copy(`_DT1`)[, `:=`(c("A", "B"), tstrsplit(x, split = "\\."))]&lt;/span>
&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dtplyr.tidyverse.org/reference/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='kc'>NA&lt;/span>, &lt;span class='kc'>NA&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='kc'>NA&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/fill.html'>fill&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; copy(`_DT2`)[, `:=`(x = nafill(x, "locf"))]&lt;/span>
&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/replace_na.html'>replace_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>99&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; copy(`_DT2`)[, `:=`(x = fcoalesce(x, 99))]&lt;/span>
&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dtplyr.tidyverse.org/reference/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>relig_income&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_longer.html'>pivot_longer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>!&lt;/span>&lt;span class='nv'>religion&lt;/span>, names_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"income"&lt;/span>, values_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"count"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; melt(`_DT3`, measure.vars = c("&amp;lt;$10k", "$10-20k", "$20-30k", &lt;/span>
&lt;span class='c'>#&amp;gt; "$30-40k", "$40-50k", "$50-75k", "$75-100k", "$100-150k", "&amp;gt;150k", &lt;/span>
&lt;span class='c'>#&amp;gt; "Don't know/refused"), variable.name = "income", value.name = "count", &lt;/span>
&lt;span class='c'>#&amp;gt; variable.factor = FALSE)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="improvements-to-joins">Improvements to joins
&lt;a href="#improvements-to-joins">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The join functions have been overhauled:
&lt;a href="https://dplyr.tidyverse.org/reference/mutate-joins.html" target="_blank" rel="noopener">&lt;code>inner_join()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/mutate-joins.html" target="_blank" rel="noopener">&lt;code>left_join()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/mutate-joins.html" target="_blank" rel="noopener">&lt;code>right_join()&lt;/code>&lt;/a> now all produce a call to &lt;code>[&lt;/code>, rather than to
&lt;a href="https://rdrr.io/r/base/merge.html" target="_blank" rel="noopener">&lt;code>merge()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dt1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dtplyr.tidyverse.org/reference/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>dt2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dtplyr.tidyverse.org/reference/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>dt1&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dt2&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `_DT4`[`_DT5`, on = .(x), nomatch = NULL, allow.cartesian = TRUE]&lt;/span>
&lt;span class='nv'>dt1&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dt2&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `_DT5`[`_DT4`, on = .(x), allow.cartesian = TRUE]&lt;/span>
&lt;span class='nv'>dt2&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>right_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dt1&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `_DT5`[`_DT4`, on = .(x), allow.cartesian = TRUE]&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This can make the translation a little longer for simple joins, but it greatly simplifies the underlying code. This simplification has made it easier to more closely match dplyr behaviour for column order, handling named &lt;code>by&lt;/code> specifications, Cartesian joins with &lt;code>by = character()&lt;/code>, and managing duplicated variable names.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As always, tidyverse packages wouldn&amp;rsquo;t be possible with the community, so a big thanks goes out to all 35 folks who helped to make this release a reality:
&lt;a href="https://github.com/akr-source" target="_blank" rel="noopener">@akr-source&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/bguillod" target="_blank" rel="noopener">@bguillod&lt;/a>,
&lt;a href="https://github.com/cgoo4" target="_blank" rel="noopener">@cgoo4&lt;/a>,
&lt;a href="https://github.com/chenx2018" target="_blank" rel="noopener">@chenx2018&lt;/a>,
&lt;a href="https://github.com/D-Se" target="_blank" rel="noopener">@D-Se&lt;/a>,
&lt;a href="https://github.com/eutwt" target="_blank" rel="noopener">@eutwt&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/jatherrien" target="_blank" rel="noopener">@jatherrien&lt;/a>,
&lt;a href="https://github.com/jdmoralva" target="_blank" rel="noopener">@jdmoralva&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jtlandis" target="_blank" rel="noopener">@jtlandis&lt;/a>,
&lt;a href="https://github.com/kmishra9" target="_blank" rel="noopener">@kmishra9&lt;/a>,
&lt;a href="https://github.com/lutzgruber" target="_blank" rel="noopener">@lutzgruber&lt;/a>,
&lt;a href="https://github.com/lutzgruber-quantco" target="_blank" rel="noopener">@lutzgruber-quantco&lt;/a>,
&lt;a href="https://github.com/markfairbanks" target="_blank" rel="noopener">@markfairbanks&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/mrcaseb" target="_blank" rel="noopener">@mrcaseb&lt;/a>,
&lt;a href="https://github.com/nassuphis" target="_blank" rel="noopener">@nassuphis&lt;/a>,
&lt;a href="https://github.com/nigeljmckernan" target="_blank" rel="noopener">@nigeljmckernan&lt;/a>,
&lt;a href="https://github.com/NZambranoc" target="_blank" rel="noopener">@NZambranoc&lt;/a>,
&lt;a href="https://github.com/PMassicotte" target="_blank" rel="noopener">@PMassicotte&lt;/a>,
&lt;a href="https://github.com/psads-git" target="_blank" rel="noopener">@psads-git&lt;/a>,
&lt;a href="https://github.com/quid-agis" target="_blank" rel="noopener">@quid-agis&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/roni-fultheim" target="_blank" rel="noopener">@roni-fultheim&lt;/a>,
&lt;a href="https://github.com/samlipworth" target="_blank" rel="noopener">@samlipworth&lt;/a>,
&lt;a href="https://github.com/sanjmeh" target="_blank" rel="noopener">@sanjmeh&lt;/a>,
&lt;a href="https://github.com/sbashevkin" target="_blank" rel="noopener">@sbashevkin&lt;/a>,
&lt;a href="https://github.com/StatsGary" target="_blank" rel="noopener">@StatsGary&lt;/a>,
&lt;a href="https://github.com/torema-ed" target="_blank" rel="noopener">@torema-ed&lt;/a>,
&lt;a href="https://github.com/verajosemanuel" target="_blank" rel="noopener">@verajosemanuel&lt;/a>,
&lt;a href="https://github.com/Waldi73" target="_blank" rel="noopener">@Waldi73&lt;/a>,
&lt;a href="https://github.com/wurli" target="_blank" rel="noopener">@wurli&lt;/a>, and
&lt;a href="https://github.com/yiugn" target="_blank" rel="noopener">@yiugn&lt;/a>.&lt;/p></description></item><item><title>dplyr backends: multidplyr 0.1.0, dtplyr 1.1.0, dbplyr 2.1.0</title><link>https://www.tidyverse.org/blog/2021/02/dplyr-backends/</link><pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/02/dplyr-backends/</guid><description>&lt;p>One of my favourite things about dplyr is that it decouples describing the data manipulation you want from its actual computation. This makes it possible to take basically the same dplyr code and execute it in radically different ways by using different backends. This blog post covers a passel of updates to the dplyr backends that we maintain:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://multidplyr.tidyverse.org/" target="_blank" rel="noopener">multidplyr&lt;/a>, which spreads computation over multiple cores, is now on CRAN!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dtplyr.tidyverse.org/" target="_blank" rel="noopener">dtplyr&lt;/a>, which translates your dplyr code to the wonderfully fast
&lt;a href="https://r-datatable.com/" target="_blank" rel="noopener">data.table&lt;/a> package, now supports all dplyr 1.0.0 features.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dbplyr.tidyverse.org/" target="_blank" rel="noopener">dbplyr&lt;/a>, which translates your dplyr code to SQL, now also translates many tidyr verbs.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>You can install these packages in one fell sweep with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"multidplyr"&lt;/span>, &lt;span class='s'>"dtplyr"&lt;/span>, &lt;span class='s'>"dbplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>I&amp;rsquo;ll explain these changes in more detail below. But to get started, we need to load dplyr.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>, warn.conflicts &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="multidplyr-010">multidplyr 0.1.0
&lt;a href="#multidplyr-010">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://multidplyr.tidyverse.org" target="_blank" rel="noopener">multidplyr&lt;/a> creates multiple R processes and spreads your data out across them, providing a simple way to take advantage of multiple cores. To use it, start by creating a cluster of R processes and load dplyr on them:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidyverse/multidplyr'>multidplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>cluster&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/multidplyr/man/new_cluster.html'>new_cluster&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/multidplyr/man/cluster_utils.html'>cluster_library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cluster&lt;/span>, &lt;span class='s'>"dplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Then spread data across those processes using
&lt;a href="https://rdrr.io/pkg/multidplyr/man/partition.html" target="_blank" rel="noopener">&lt;code>partition()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flight_dest&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>nycflights13&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nv'>&lt;a href='https://rdrr.io/pkg/nycflights13/man/flights.html'>flights&lt;/a>&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dest&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/multidplyr/man/partition.html'>partition&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cluster&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>flight_dest&lt;/span>
&lt;span class='c'>#&amp;gt; Source: party_df [336,776 x 19]&lt;/span>
&lt;span class='c'>#&amp;gt; Groups: dest&lt;/span>
&lt;span class='c'>#&amp;gt; Shards: 4 [81,594--86,548 rows]&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>year&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>month&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>day&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>dep_time&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>sched_dep_time&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>dep_delay&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>arr_time&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>sched_arr_time&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 1 544 545 -&lt;/span>&lt;span style='color: #BB0000;'>1&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>004 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>022&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 1 558 600 -&lt;/span>&lt;span style='color: #BB0000;'>2&lt;/span>&lt;span> 923 937&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 1 559 600 -&lt;/span>&lt;span style='color: #BB0000;'>1&lt;/span>&lt;span> 854 902&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 1 602 610 -&lt;/span>&lt;span style='color: #BB0000;'>8&lt;/span>&lt;span> 812 820&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 1 602 605 -&lt;/span>&lt;span style='color: #BB0000;'>3&lt;/span>&lt;span> 821 805&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 1 611 600 11 945 931&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 336,770 more rows, and 11 more variables: &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>arr_delay&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>carrier&lt;/span>&lt;span style='color: #555555;'> &amp;lt;chr&amp;gt;, &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>flight&lt;/span>&lt;span style='color: #555555;'> &amp;lt;int&amp;gt;, &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>tailnum&lt;/span>&lt;span style='color: #555555;'> &amp;lt;chr&amp;gt;, &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>origin&lt;/span>&lt;span style='color: #555555;'> &amp;lt;chr&amp;gt;, &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>dest&lt;/span>&lt;span style='color: #555555;'> &amp;lt;chr&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>air_time&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;, &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>distance&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;, &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>hour&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;, &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>minute&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dbl&amp;gt;, &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>time_hour&lt;/span>&lt;span style='color: #555555;'> &amp;lt;dttm&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The data is now spread across four &amp;ldquo;shards&amp;rdquo;, each consisting of around 80,000 rows. Generally, you&amp;rsquo;ll want to group the data before partitioning which ensures that all observations in one group end up on the same worker.&lt;/p>
&lt;p>You can work with this &lt;code>party_df&lt;/code> as if it was a data frame, but any work will be spread out across all the processes (which your operating system will usually allocate to different cores).&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>mean_delay&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>flight_dest&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>delay &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>arr_delay&lt;/span>, na.rm &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>, n &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/context.html'>n&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>n&lt;/span> &lt;span class='o'>&amp;gt;&lt;/span> &lt;span class='m'>25&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>mean_delay&lt;/span>
&lt;span class='c'>#&amp;gt; Source: party_df [96 x 3]&lt;/span>
&lt;span class='c'>#&amp;gt; Shards: 4 [21--26 rows]&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>dest&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>delay&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>n&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> ABQ 4.38 254&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span>&lt;span> AUS 6.02 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>439&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span>&lt;span> BQN 8.25 896&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span>&lt;span> BTV 8.95 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>589&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span>&lt;span> BUF 8.95 &lt;/span>&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;span>681&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span>&lt;span> CLE 9.18 &lt;/span>&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;span>573&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Once you&amp;rsquo;re done with expensive computation, you can bring the results back to the current session with
&lt;a href="https://dplyr.tidyverse.org/reference/compute.html" target="_blank" rel="noopener">&lt;code>collect()&lt;/code>&lt;/a>. Learn more in
&lt;a href="https://cran.rstudio.com/web/packages/multidplyr/vignettes/multidplyr.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;multidplyr&amp;quot;)&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>results&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/compute.html'>collect&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mean_delay&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/head.html'>head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>results&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 x 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>dest&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>delay&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>n&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> ABQ 4.38 254&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span>&lt;span> AUS 6.02 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>439&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span>&lt;span> BQN 8.25 896&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span>&lt;span> BTV 8.95 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>589&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span>&lt;span> BUF 8.95 &lt;/span>&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;span>681&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span>&lt;span> CLE 9.18 &lt;/span>&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;span>573&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>multidplyr is a good fit for problems where the bottleneck is complex, non-dplyr computation (e.g. fitting models). There&amp;rsquo;s some overhead initially partitioning the data and then transferring the commands to each worker, so it&amp;rsquo;s not a magic bullet, but it is very easy to use.&lt;/p>
&lt;p>multidplyr is still quite young, so please try it out and
&lt;a href="https://github.com/tidyverse/multidplyr/issues" target="_blank" rel="noopener">let us know&lt;/a> about any problems that you encounter.&lt;/p>
&lt;h2 id="dtplyr-110">dtplyr 1.1.0
&lt;a href="#dtplyr-110">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://dtplyr.tidyverse.org" target="_blank" rel="noopener">dtplyr&lt;/a> translates dplyr pipelines into equivalent
&lt;a href="http://r-datatable.com/" target="_blank" rel="noopener">data.table&lt;/a> code. data.table is incredibly fast, so this often yields performance improvements.&lt;/p>
&lt;p>To use it, start by creating a
&lt;a href="https://rdrr.io/pkg/dtplyr/man/lazy_dt.html" target="_blank" rel="noopener">&lt;code>lazy_dt()&lt;/code>&lt;/a> object which records your dplyr actions:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidyverse/dtplyr'>dtplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/dtplyr/man/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>cyl_summary&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>dt&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cyl&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>across&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>disp&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='nv'>wt&lt;/span>, &lt;span class='nv'>mean&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can see the translation with
&lt;a href="https://dplyr.tidyverse.org/reference/explain.html" target="_blank" rel="noopener">&lt;code>show_query()&lt;/code>&lt;/a> or execute the data table code by converting back to a data frame, data table, or tibble:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>cyl_summary&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `_DT1`[, .(disp = mean(disp), hp = mean(hp), drat = mean(drat), &lt;/span>
&lt;span class='c'>#&amp;gt; wt = mean(wt)), keyby = .(cyl)]&lt;/span>
&lt;span class='nv'>cyl_summary&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/as_tibble.html'>as_tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 x 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>cyl&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>disp&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>hp&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>drat&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>wt&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> 4 105. 82.6 4.07 2.29&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span>&lt;span> 6 183. 122. 3.59 3.12&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span>&lt;span> 8 353. 209. 3.23 4.00&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The big news in this release is dtplyr can now translate all features that arrived in
&lt;a href="https://www.tidyverse.org/blog/2020/06/dplyr-1-0-0/" target="_blank" rel="noopener">dplyr 1.0.0&lt;/a>. This includes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>if_any()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>if_all()&lt;/code>&lt;/a>. Unfortunately &lt;code>where()&lt;/code> is not currently supported because I don&amp;rsquo;t know how to figure out the column types without executing the pipeline (which might take a long time).&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>if_any&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cyl&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='nv'>wt&lt;/span>, &lt;span class='nv'>is.na&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `_DT1`[is.na(cyl) | is.na(disp) | is.na(hp) | is.na(drat) | is.na(wt)]&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/relocate.html" target="_blank" rel="noopener">&lt;code>relocate()&lt;/code>&lt;/a>, which is translated to the &lt;code>j&lt;/code> argument of &lt;code>[.data.table&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/relocate.html'>relocate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>carb&lt;/span>, .before &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mpg&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `_DT1`[, .(carb, mpg, cyl, disp, hp, drat, wt, qsec, vs, am, &lt;/span>
&lt;span class='c'>#&amp;gt; gear)]&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>rename_with()&lt;/code>&lt;/a>, which is translated to
&lt;a href="https://Rdatatable.gitlab.io/data.table/reference/setattr.html" target="_blank" rel="noopener">&lt;code>setnames()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/rename.html'>rename_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>toupper&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; setnames(copy(`_DT1`), toupper)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice_min()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice_max()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice_head()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice_tail()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice_sample()&lt;/code>&lt;/a> which are translated to various &lt;code>i&lt;/code> and &lt;code>j&lt;/code> expressions:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cyl&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice_sample&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>n &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `_DT1`[`_DT1`[, .I[sample.int(.N, min(5L, .N))], by = .(cyl)]$V1]&lt;/span>
&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cyl&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice_head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>n &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `_DT1`[, head(.SD, 1L), keyby = .(cyl)]&lt;/span>
&lt;span class='nv'>dt&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cyl&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice_min&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span>, n &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `_DT1`[, .SD[order(mpg)][frankv(mpg, ties.method = "min", na.last = "keep") &amp;lt;= &lt;/span>
&lt;span class='c'>#&amp;gt; 1L], keyby = .(cyl)]&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;p>Thanks to
&lt;a href="https://github.com/markfairbanks" target="_blank" rel="noopener">Mark Fairbanks&lt;/a>, dtplyr has also gained it&amp;rsquo;s first translation of a tidyr function: &lt;code>pivot_wider()&lt;/code>, which is translated to
&lt;a href="https://Rdatatable.gitlab.io/data.table/reference/dcast.data.table.html" target="_blank" rel="noopener">&lt;code>dcast()&lt;/code>&lt;/a>. You can expect more tidyr translations in the next release 😄.&lt;/p>
&lt;p>I also took this as an opportunity to thoroughly refresh the documentation so that all translated verbs now have
&lt;a href="https://dtplyr.tidyverse.org/reference/index.html" target="_blank" rel="noopener">their own help pages&lt;/a> that briefly describe how the translation works. You can read about the other minor improvements and bug fixes in the
&lt;a href="https://github.com/tidyverse/dtplyr/releases/tag/v1.1.0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="dbplyr-210">dbplyr 2.1.0
&lt;a href="#dbplyr-210">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://dbplyr.tidyverse.org" target="_blank" rel="noopener">dbplyr&lt;/a> translates dplyr pipelines to their SQL equivalents. If you&amp;rsquo;re new to using dplyr and SQL together, I highly recommend Irene Steve&amp;rsquo;s rstudio::global() talk,
&lt;a href="https://rstudio.com/resources/rstudioglobal-2021/the-dynamic-duo-sql-and-r/" target="_blank" rel="noopener">&amp;quot;The dynamic duo: SQL and R&lt;/a>. It discusses why you might want to use dbplyr to generate SQL &lt;strong>and&lt;/strong> why you should still learn SQL.&lt;/p>
&lt;p>The biggest change to this release is the addition of many translations for tidyr verbs like
&lt;a href="https://dbplyr.tidyverse.org/reference/pivot_longer.tbl_lazy.html" target="_blank" rel="noopener">&lt;code>pivot_longer()&lt;/code>&lt;/a>,
&lt;a href="https://dbplyr.tidyverse.org/reference/pivot_wider.tbl_lazy.html" target="_blank" rel="noopener">&lt;code>pivot_wider()&lt;/code>&lt;/a>,
&lt;a href="https://dbplyr.tidyverse.org/reference/complete.tbl_lazy.html" target="_blank" rel="noopener">&lt;code>complete()&lt;/code>&lt;/a>, and
&lt;a href="https://dbplyr.tidyverse.org/reference/replace_na.tbl_lazy.html" target="_blank" rel="noopener">&lt;code>replace_na()&lt;/code>&lt;/a>. These were contributed by
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">Maximilian Girlich&lt;/a>, and in recognition of his sustained and substantial contributions to the package, he has been added as a package author.&lt;/p>
&lt;p>This release also includes major improvements to the
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> translation, including translation of formulas (like dtplyr,
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> can&amp;rsquo;t currently use &lt;code>where()&lt;/code>, because I don&amp;rsquo;t know of a way to figure out the column types without executing the query). There are also a bunch of other minor translation improvements and bug fixes, which you can read about in the
&lt;a href="https://github.com/tidyverse/dbplyr/releases/tag/v2.1.0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all of the contributors who helped make these releases possible:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>dbplyr:
&lt;a href="https://github.com/abalter" target="_blank" rel="noopener">@abalter&lt;/a>,
&lt;a href="https://github.com/Alternikaner" target="_blank" rel="noopener">@Alternikaner&lt;/a>,
&lt;a href="https://github.com/andrew-schulman" target="_blank" rel="noopener">@andrew-schulman&lt;/a>,
&lt;a href="https://github.com/andyquinterom" target="_blank" rel="noopener">@andyquinterom&lt;/a>,
&lt;a href="https://github.com/awong234" target="_blank" rel="noopener">@awong234&lt;/a>,
&lt;a href="https://github.com/ben1787" target="_blank" rel="noopener">@ben1787&lt;/a>,
&lt;a href="https://github.com/bersbersbers" target="_blank" rel="noopener">@bersbersbers&lt;/a>,
&lt;a href="https://github.com/bwcastillo" target="_blank" rel="noopener">@bwcastillo&lt;/a>,
&lt;a href="https://github.com/chris-billingham" target="_blank" rel="noopener">@chris-billingham&lt;/a>,
&lt;a href="https://github.com/coponhub" target="_blank" rel="noopener">@coponhub&lt;/a>,
&lt;a href="https://github.com/DavidPatShuiFong" target="_blank" rel="noopener">@DavidPatShuiFong&lt;/a>,
&lt;a href="https://github.com/dcaud" target="_blank" rel="noopener">@dcaud&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/dstoeckel" target="_blank" rel="noopener">@dstoeckel&lt;/a>,
&lt;a href="https://github.com/elicit-bergmann" target="_blank" rel="noopener">@elicit-bergmann&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hdplsa" target="_blank" rel="noopener">@hdplsa&lt;/a>,
&lt;a href="https://github.com/iangow" target="_blank" rel="noopener">@iangow&lt;/a>,
&lt;a href="https://github.com/Janlow" target="_blank" rel="noopener">@Janlow&lt;/a>,
&lt;a href="https://github.com/LukasTang" target="_blank" rel="noopener">@LukasTang&lt;/a>,
&lt;a href="https://github.com/McWraith" target="_blank" rel="noopener">@McWraith&lt;/a>,
&lt;a href="https://github.com/mfherman" target="_blank" rel="noopener">@mfherman&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/mr-c" target="_blank" rel="noopener">@mr-c&lt;/a>,
&lt;a href="https://github.com/mszefler" target="_blank" rel="noopener">@mszefler&lt;/a>,
&lt;a href="https://github.com/N1h1l1sT" target="_blank" rel="noopener">@N1h1l1sT&lt;/a>,
&lt;a href="https://github.com/nathaneastwood" target="_blank" rel="noopener">@nathaneastwood&lt;/a>,
&lt;a href="https://github.com/nlneas1" target="_blank" rel="noopener">@nlneas1&lt;/a>,
&lt;a href="https://github.com/okhoma" target="_blank" rel="noopener">@okhoma&lt;/a>,
&lt;a href="https://github.com/pachamaltese" target="_blank" rel="noopener">@pachamaltese&lt;/a>,
&lt;a href="https://github.com/peterdutey" target="_blank" rel="noopener">@peterdutey&lt;/a>,
&lt;a href="https://github.com/pgramme" target="_blank" rel="noopener">@pgramme&lt;/a>,
&lt;a href="https://github.com/robchallen" target="_blank" rel="noopener">@robchallen&lt;/a>,
&lt;a href="https://github.com/shearer" target="_blank" rel="noopener">@shearer&lt;/a>,
&lt;a href="https://github.com/sheepworrier" target="_blank" rel="noopener">@sheepworrier&lt;/a>,
&lt;a href="https://github.com/shosaco" target="_blank" rel="noopener">@shosaco&lt;/a>,
&lt;a href="https://github.com/spirosparaskevasFBB" target="_blank" rel="noopener">@spirosparaskevasFBB&lt;/a>,
&lt;a href="https://github.com/tonyk7440" target="_blank" rel="noopener">@tonyk7440&lt;/a>,
&lt;a href="https://github.com/TuomoNieminen" target="_blank" rel="noopener">@TuomoNieminen&lt;/a>,
&lt;a href="https://github.com/yitao-li" target="_blank" rel="noopener">@yitao-li&lt;/a>, and
&lt;a href="https://github.com/yiugn" target="_blank" rel="noopener">@yiugn&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>dtplyr:
&lt;a href="https://github.com/AdrienMtgn" target="_blank" rel="noopener">@AdrienMtgn&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/boerjames" target="_blank" rel="noopener">@boerjames&lt;/a>,
&lt;a href="https://github.com/cassiel74" target="_blank" rel="noopener">@cassiel74&lt;/a>,
&lt;a href="https://github.com/dan-reznik" target="_blank" rel="noopener">@dan-reznik&lt;/a>,
&lt;a href="https://github.com/ds-jim" target="_blank" rel="noopener">@ds-jim&lt;/a>,
&lt;a href="https://github.com/edavidaja" target="_blank" rel="noopener">@edavidaja&lt;/a>,
&lt;a href="https://github.com/edgararuiz-zz" target="_blank" rel="noopener">@edgararuiz-zz&lt;/a>,
&lt;a href="https://github.com/engineerchange" target="_blank" rel="noopener">@engineerchange&lt;/a>,
&lt;a href="https://github.com/fkgruber" target="_blank" rel="noopener">@fkgruber&lt;/a>,
&lt;a href="https://github.com/gmonaie" target="_blank" rel="noopener">@gmonaie&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hope-data-science" target="_blank" rel="noopener">@hope-data-science&lt;/a>,
&lt;a href="https://github.com/jasonopolis" target="_blank" rel="noopener">@jasonopolis&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/JohnMount" target="_blank" rel="noopener">@JohnMount&lt;/a>,
&lt;a href="https://github.com/larspijnappel" target="_blank" rel="noopener">@larspijnappel&lt;/a>,
&lt;a href="https://github.com/lbenz-mdsol" target="_blank" rel="noopener">@lbenz-mdsol&lt;/a>,
&lt;a href="https://github.com/markfairbanks" target="_blank" rel="noopener">@markfairbanks&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/Mitschka" target="_blank" rel="noopener">@Mitschka&lt;/a>,
&lt;a href="https://github.com/myoung3" target="_blank" rel="noopener">@myoung3&lt;/a>,
&lt;a href="https://github.com/nigeljmckernan" target="_blank" rel="noopener">@nigeljmckernan&lt;/a>,
&lt;a href="https://github.com/PMassicotte" target="_blank" rel="noopener">@PMassicotte&lt;/a>,
&lt;a href="https://github.com/pnacht" target="_blank" rel="noopener">@pnacht&lt;/a>,
&lt;a href="https://github.com/psanker" target="_blank" rel="noopener">@psanker&lt;/a>,
&lt;a href="https://github.com/rossellhayes" target="_blank" rel="noopener">@rossellhayes&lt;/a>,
&lt;a href="https://github.com/RudolfCardinal" target="_blank" rel="noopener">@RudolfCardinal&lt;/a>,
&lt;a href="https://github.com/sbashevkin" target="_blank" rel="noopener">@sbashevkin&lt;/a>,
&lt;a href="https://github.com/ShixiangWang" target="_blank" rel="noopener">@ShixiangWang&lt;/a>,
&lt;a href="https://github.com/skiamu" target="_blank" rel="noopener">@skiamu&lt;/a>,
&lt;a href="https://github.com/smingerson" target="_blank" rel="noopener">@smingerson&lt;/a>,
&lt;a href="https://github.com/sonoshah" target="_blank" rel="noopener">@sonoshah&lt;/a>,
&lt;a href="https://github.com/tingjhenjiang" target="_blank" rel="noopener">@tingjhenjiang&lt;/a>,
&lt;a href="https://github.com/tylerferguson" target="_blank" rel="noopener">@tylerferguson&lt;/a>,
&lt;a href="https://github.com/TysonStanley" target="_blank" rel="noopener">@TysonStanley&lt;/a>,
&lt;a href="https://github.com/yiugn" target="_blank" rel="noopener">@yiugn&lt;/a>, and
&lt;a href="https://github.com/ykaeber" target="_blank" rel="noopener">@ykaeber&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>multidplyr:
&lt;a href="https://github.com/12tafran" target="_blank" rel="noopener">@12tafran&lt;/a>,
&lt;a href="https://github.com/adviksh" target="_blank" rel="noopener">@adviksh&lt;/a>,
&lt;a href="https://github.com/ahoho" target="_blank" rel="noopener">@ahoho&lt;/a>,
&lt;a href="https://github.com/baldeagle" target="_blank" rel="noopener">@baldeagle&lt;/a>,
&lt;a href="https://github.com/borisveytsman" target="_blank" rel="noopener">@borisveytsman&lt;/a>,
&lt;a href="https://github.com/brianmsm" target="_blank" rel="noopener">@brianmsm&lt;/a>,
&lt;a href="https://github.com/ChiWPak" target="_blank" rel="noopener">@ChiWPak&lt;/a>,
&lt;a href="https://github.com/cluelessgumshoe" target="_blank" rel="noopener">@cluelessgumshoe&lt;/a>,
&lt;a href="https://github.com/CorradoLanera" target="_blank" rel="noopener">@CorradoLanera&lt;/a>,
&lt;a href="https://github.com/cscheid" target="_blank" rel="noopener">@cscheid&lt;/a>,
&lt;a href="https://github.com/cwaldock1" target="_blank" rel="noopener">@cwaldock1&lt;/a>,
&lt;a href="https://github.com/damiaan" target="_blank" rel="noopener">@damiaan&lt;/a>,
&lt;a href="https://github.com/david-awam-jansen" target="_blank" rel="noopener">@david-awam-jansen&lt;/a>,
&lt;a href="https://github.com/dewoller" target="_blank" rel="noopener">@dewoller&lt;/a>,
&lt;a href="https://github.com/donaldRwilliams" target="_blank" rel="noopener">@donaldRwilliams&lt;/a>,
&lt;a href="https://github.com/dzhang32" target="_blank" rel="noopener">@dzhang32&lt;/a>,
&lt;a href="https://github.com/eliferden" target="_blank" rel="noopener">@eliferden&lt;/a>,
&lt;a href="https://github.com/FvD" target="_blank" rel="noopener">@FvD&lt;/a>,
&lt;a href="https://github.com/GegznaV" target="_blank" rel="noopener">@GegznaV&lt;/a>,
&lt;a href="https://github.com/germanium" target="_blank" rel="noopener">@germanium&lt;/a>,
&lt;a href="https://github.com/ghost" target="_blank" rel="noopener">@ghost&lt;/a>,
&lt;a href="https://github.com/guokai8" target="_blank" rel="noopener">@guokai8&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/huisaddison" target="_blank" rel="noopener">@huisaddison&lt;/a>,
&lt;a href="https://github.com/iago-pssjd" target="_blank" rel="noopener">@iago-pssjd&lt;/a>,
&lt;a href="https://github.com/impactanalysts" target="_blank" rel="noopener">@impactanalysts&lt;/a>,
&lt;a href="https://github.com/isaac-florence" target="_blank" rel="noopener">@isaac-florence&lt;/a>,
&lt;a href="https://github.com/javadba" target="_blank" rel="noopener">@javadba&lt;/a>,
&lt;a href="https://github.com/jiho" target="_blank" rel="noopener">@jiho&lt;/a>,
&lt;a href="https://github.com/JosiahParry" target="_blank" rel="noopener">@JosiahParry&lt;/a>,
&lt;a href="https://github.com/julou" target="_blank" rel="noopener">@julou&lt;/a>,
&lt;a href="https://github.com/kartiksubbarao" target="_blank" rel="noopener">@kartiksubbarao&lt;/a>,
&lt;a href="https://github.com/kyp0717" target="_blank" rel="noopener">@kyp0717&lt;/a>,
&lt;a href="https://github.com/lucazav" target="_blank" rel="noopener">@lucazav&lt;/a>,
&lt;a href="https://github.com/MarioClueless" target="_blank" rel="noopener">@MarioClueless&lt;/a>,
&lt;a href="https://github.com/Maschette" target="_blank" rel="noopener">@Maschette&lt;/a>,
&lt;a href="https://github.com/McChickenNuggets" target="_blank" rel="noopener">@McChickenNuggets&lt;/a>,
&lt;a href="https://github.com/miho87" target="_blank" rel="noopener">@miho87&lt;/a>,
&lt;a href="https://github.com/njudd" target="_blank" rel="noopener">@njudd&lt;/a>,
&lt;a href="https://github.com/philiporlando" target="_blank" rel="noopener">@philiporlando&lt;/a>,
&lt;a href="https://github.com/picarus" target="_blank" rel="noopener">@picarus&lt;/a>,
&lt;a href="https://github.com/samkhan1" target="_blank" rel="noopener">@samkhan1&lt;/a>,
&lt;a href="https://github.com/SGMStalin" target="_blank" rel="noopener">@SGMStalin&lt;/a>,
&lt;a href="https://github.com/stanstrup" target="_blank" rel="noopener">@stanstrup&lt;/a>,
&lt;a href="https://github.com/taqtiqa-mark" target="_blank" rel="noopener">@taqtiqa-mark&lt;/a>,
&lt;a href="https://github.com/tmstauss" target="_blank" rel="noopener">@tmstauss&lt;/a>,
&lt;a href="https://github.com/tsengj" target="_blank" rel="noopener">@tsengj&lt;/a>,
&lt;a href="https://github.com/wibeasley" target="_blank" rel="noopener">@wibeasley&lt;/a>,
&lt;a href="https://github.com/willtudorevans" target="_blank" rel="noopener">@willtudorevans&lt;/a>, and
&lt;a href="https://github.com/zhengjiji456" target="_blank" rel="noopener">@zhengjiji456&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>dplyr 1.0.4: if_any() and if_all()</title><link>https://www.tidyverse.org/blog/2021/02/dplyr-1-0-4-if-any/</link><pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/02/dplyr-1-0-4-if-any/</guid><description>&lt;p>We&amp;rsquo;re happy to announce the release of
&lt;a href="https://dplyr.tidyverse.org" target="_blank" rel="noopener">dplyr&lt;/a> 1.0.4, featuring: two new functions
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>if_all()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>if_any()&lt;/code>&lt;/a>, and improved performance improvements of
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can see a full list of changes in the
&lt;a href="https://github.com/tidyverse/dplyr/releases/tag/v1.0.4" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="if_any-and-if_all">if_any() and if_all()
&lt;a href="#if_any-and-if_all">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The new
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> function introduced as part of
&lt;a href="https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-colwise/" target="_blank" rel="noopener">dplyr 1.0.0&lt;/a> is proving to be a successful addition to dplyr. In case you missed it,
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> lets you conveniently express a set of actions to be performed across a tidy selection of columns.&lt;/p>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> is very useful within
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a>, but it&amp;rsquo;s hard to use it with
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> because it is not clear how the results would be combined into one logical vector. So to fill the gap, we&amp;rsquo;re introducing two new functions
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>if_all()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>if_any()&lt;/code>&lt;/a>. Let&amp;rsquo;s directly dive in to an example:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>, warn.conflicts &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://allisonhorst.github.io/palmerpenguins/'>palmerpenguins&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>big&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, na.rm &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>
&lt;span class='c'># keep rows if all the selected columns are "big"&lt;/span>
&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>if_all&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>contains&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"bill"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>big&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 61 x 8&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; species island bill_length_mm bill_depth_mm flipper_length_… body_mass_g&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> Adelie Torge… 46 21.5 194 &lt;/span>&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;span>200&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> Adelie Dream 44.1 19.7 196 &lt;/span>&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;span>400&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> Adelie Torge… 45.8 18.9 197 &lt;/span>&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;span>150&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> Adelie Biscoe 45.6 20.3 191 &lt;/span>&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;span>600&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> Adelie Torge… 44.1 18 210 &lt;/span>&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;span>000&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> Gentoo Biscoe 44.4 17.3 219 &lt;/span>&lt;span style='text-decoration: underline;'>5&lt;/span>&lt;span>250&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> Gentoo Biscoe 50.8 17.3 228 &lt;/span>&lt;span style='text-decoration: underline;'>5&lt;/span>&lt;span>600&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> Chinst… Dream 46.5 17.9 192 &lt;/span>&lt;span style='text-decoration: underline;'>3&lt;/span>&lt;span>500&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> Chinst… Dream 50 19.5 196 &lt;/span>&lt;span style='text-decoration: underline;'>3&lt;/span>&lt;span>900&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> Chinst… Dream 51.3 19.2 193 &lt;/span>&lt;span style='text-decoration: underline;'>3&lt;/span>&lt;span>650&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 51 more rows, and 2 more variables: sex &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;span style='color: #555555;'>, year &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'># keep rows where at least one of the columns is "big"&lt;/span>
&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>if_any&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>contains&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"bill"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>big&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 296 x 8&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; species island bill_length_mm bill_depth_mm flipper_length_… body_mass_g&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> Adelie Torge… 39.1 18.7 181 &lt;/span>&lt;span style='text-decoration: underline;'>3&lt;/span>&lt;span>750&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> Adelie Torge… 39.5 17.4 186 &lt;/span>&lt;span style='text-decoration: underline;'>3&lt;/span>&lt;span>800&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> Adelie Torge… 40.3 18 195 &lt;/span>&lt;span style='text-decoration: underline;'>3&lt;/span>&lt;span>250&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> Adelie Torge… 36.7 19.3 193 &lt;/span>&lt;span style='text-decoration: underline;'>3&lt;/span>&lt;span>450&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> Adelie Torge… 39.3 20.6 190 &lt;/span>&lt;span style='text-decoration: underline;'>3&lt;/span>&lt;span>650&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> Adelie Torge… 38.9 17.8 181 &lt;/span>&lt;span style='text-decoration: underline;'>3&lt;/span>&lt;span>625&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> Adelie Torge… 39.2 19.6 195 &lt;/span>&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;span>675&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> Adelie Torge… 34.1 18.1 193 &lt;/span>&lt;span style='text-decoration: underline;'>3&lt;/span>&lt;span>475&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> Adelie Torge… 42 20.2 190 &lt;/span>&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;span>250&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> Adelie Torge… 37.8 17.3 180 &lt;/span>&lt;span style='text-decoration: underline;'>3&lt;/span>&lt;span>700&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 286 more rows, and 2 more variables: sex &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;span style='color: #555555;'>, year &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Both functions operate similarly to
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> but go the extra mile of aggregating the results to indicate if &lt;em>all&lt;/em> the results are true when using
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>if_all()&lt;/code>&lt;/a>, or if &lt;em>at least one&lt;/em> is true when using
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>if_any()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Although
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>if_all()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>if_any()&lt;/code>&lt;/a> were designed with
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> in mind, we
&lt;a href="https://github.com/tidyverse/dplyr/issues/5709" target="_blank" rel="noopener">then discovered&lt;/a> that they can also be useful within
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> and/or
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>!&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/NA.html'>is.na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>bill_length_mm&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
category &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/case_when.html'>case_when&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>if_all&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>contains&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"bill"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>big&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"both big"&lt;/span>,
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>if_any&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>contains&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"bill"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>big&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"one big"&lt;/span>,
&lt;span class='kc'>TRUE&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"small"&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/count.html'>count&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>category&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 x 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; category n&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>*&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> both big 61&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span>&lt;span> one big 235&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span>&lt;span> small 46&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="faster-across">Faster across()
&lt;a href="#faster-across">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One of the main motivations for across() was eliminating the need for every verb to have a &lt;code>_at&lt;/code>, &lt;code>_if&lt;/code>, and &lt;code>_all&lt;/code> variant. Unfortunately, however, this came with a performance cost. In this release, we have redesigned
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> to eliminate that performance penalty in many cases. In the following example, you can now see that the old and new approaches take the same amount of time.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://vroom.r-lib.org'>vroom&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>mun2014&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://vroom.r-lib.org/reference/vroom.html'>vroom&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='s'>"https://data.regardscitoyens.org/elections/2014_municipales/MN14_Bvot_T1_01-49.txt"&lt;/span>,
col_select &lt;span class='o'>=&lt;/span> &lt;span class='o'>-&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>'X4'&lt;/span>,&lt;span class='s'>'X9'&lt;/span>,&lt;span class='s'>'X10'&lt;/span>,&lt;span class='s'>'X11'&lt;/span>&lt;span class='o'>)&lt;/span>, col_types &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, col_names &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>,
locale &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://vroom.r-lib.org/reference/locale.html'>locale&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>encoding &lt;span class='o'>=&lt;/span> &lt;span class='s'>"WINDOWS-1252"&lt;/span>&lt;span class='o'>)&lt;/span>, altrep &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>bench&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://bench.r-lib.org/reference/workout.html'>workout&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nv'>a&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>mun2014&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by_all.html'>group_by_if&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>is.character&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>b&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>a&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise_all.html'>summarise_if&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>is.numeric&lt;/span>, &lt;span class='nv'>sum&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 x 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; exprs process real&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;bch:expr&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;bch:tm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;bch:tm&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> a &amp;lt;- mun2014 %&amp;gt;% group_by_if(is.character) 151ms 151ms&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span>&lt;span> b &amp;lt;- a %&amp;gt;% summarise_if(is.numeric, sum) 847ms 848ms&lt;/span>&lt;/span>
&lt;span class='nf'>bench&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://bench.r-lib.org/reference/workout.html'>workout&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nv'>c&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>mun2014&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>across&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>where&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>is.character&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>d&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>c&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>across&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>where&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>is.numeric&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>sum&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `summarise()` has grouped output by 'X2', 'X3', 'X5'. You can override using the `.groups` argument.&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 x 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; exprs process real&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;bch:expr&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;bch:tm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;bch:tm&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> c &amp;lt;- mun2014 %&amp;gt;% group_by(across(where(is.character))) 179ms 179ms&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span>&lt;span> d &amp;lt;- c %&amp;gt;% summarise(across(where(is.numeric), sum)) 776ms 777ms&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Merci to all contributors of code, issues and documentation to this release:&lt;/p>
&lt;p>
&lt;a href="https://github.com/abalter" target="_blank" rel="noopener">@abalter&lt;/a>,
&lt;a href="https://github.com/cuixueqin" target="_blank" rel="noopener">@cuixueqin&lt;/a>,
&lt;a href="https://github.com/eggrandio" target="_blank" rel="noopener">@eggrandio&lt;/a>,
&lt;a href="https://github.com/everetr" target="_blank" rel="noopener">@everetr&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hjohns12" target="_blank" rel="noopener">@hjohns12&lt;/a>,
&lt;a href="https://github.com/iago-pssjd" target="_blank" rel="noopener">@iago-pssjd&lt;/a>,
&lt;a href="https://github.com/jahonamir" target="_blank" rel="noopener">@jahonamir&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/lotard" target="_blank" rel="noopener">@lotard&lt;/a>,
&lt;a href="https://github.com/luispfonseca" target="_blank" rel="noopener">@luispfonseca&lt;/a>,
&lt;a href="https://github.com/mbcann01" target="_blank" rel="noopener">@mbcann01&lt;/a>,
&lt;a href="https://github.com/mutahiwachira" target="_blank" rel="noopener">@mutahiwachira&lt;/a>,
&lt;a href="https://github.com/Robinlovelace" target="_blank" rel="noopener">@Robinlovelace&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/rpruim" target="_blank" rel="noopener">@rpruim&lt;/a>,
&lt;a href="https://github.com/shahronak47" target="_blank" rel="noopener">@shahronak47&lt;/a>,
&lt;a href="https://github.com/shangguandong1996" target="_blank" rel="noopener">@shangguandong1996&lt;/a>,
&lt;a href="https://github.com/sylvainDaubree" target="_blank" rel="noopener">@sylvainDaubree&lt;/a>,
&lt;a href="https://github.com/tomazweiss" target="_blank" rel="noopener">@tomazweiss&lt;/a>,
&lt;a href="https://github.com/vhorvath" target="_blank" rel="noopener">@vhorvath&lt;/a>,
&lt;a href="https://github.com/wasdoff" target="_blank" rel="noopener">@wasdoff&lt;/a>, and
&lt;a href="https://github.com/Yunuuuu" target="_blank" rel="noopener">@Yunuuuu&lt;/a>.&lt;/p></description></item><item><title>dbplyr 2.0.0</title><link>https://www.tidyverse.org/blog/2020/11/dbplyr-2-0-0/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/11/dbplyr-2-0-0/</guid><description>&lt;p>We&amp;rsquo;re pleased to announce the release of
&lt;a href="https://dbplyr.tidyverse.org/" target="_blank" rel="noopener">dbplyr&lt;/a> 2.0.0. dbplyr is a database backend for
&lt;a href="https://dplyr.tidyverse.org/" target="_blank" rel="noopener">dplyr&lt;/a> that allows you to use a remote database as if it was a collection of local data frames: you write ordinary dplyr code and dbplyr translates it to SQL for you.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dbplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post covers the major improvements in this version:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>dplyr 1.0.0 compatibility so you can now use
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/relocate.html" target="_blank" rel="noopener">&lt;code>relocate()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>rename_with()&lt;/code>&lt;/a>, and more.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Major improvements to SQL translation.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A snazzy new logo from
&lt;a href="https://www.allisonhorst.com" target="_blank" rel="noopener">Allison Horst&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>An improved extension system.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Please see the
&lt;a href="https://github.com/tidyverse/dbplyr/releases/tag/v2.0.0" target="_blank" rel="noopener">release notes&lt;/a> for a full list of changes.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dbplyr.tidyverse.org/'>dbplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>, warn.conflicts &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="dplyr-100-compatibility">dplyr 1.0.0 compatibility
&lt;a href="#dplyr-100-compatibility">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>dbplyr now supports all relevant features added in dplyr 1.0.0:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> is now translated into individual SQL statements.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>g &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, a &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, b &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>, c &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>across&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/everything.html'>everything&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>mean&lt;/span>, na.rm &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `g`, AVG(`g`) AS `g`, AVG(`a`) AS `a`, AVG(`b`) AS `b`, AVG(`c`) AS `c`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`&lt;/span>
&lt;span class='c'>#&amp;gt; GROUP BY `g`&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>rename()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/select.html" target="_blank" rel="noopener">&lt;code>select()&lt;/code>&lt;/a> support dplyr tidyselect syntax, apart from predicate functions which can&amp;rsquo;t easily work on computed queries. You can now use
&lt;a href="https://dplyr.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>rename_with()&lt;/code>&lt;/a> to programmatically rename columns.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x1 &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, x2 &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>, x3 &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>, y1 &lt;span class='o'>=&lt;/span> &lt;span class='m'>4&lt;/span>, y2 &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;amp;&lt;/span> &lt;span class='o'>!&lt;/span>&lt;span class='s'>"x3"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `x1`, `x2`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>ends_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"2"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>ends_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"3"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `x2`, `y2`, `x3`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/rename.html'>rename_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>toupper&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `x1` AS `X1`, `x2` AS `X2`, `x3` AS `X3`, `y1` AS `Y1`, `y2` AS `Y2`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/relocate.html" target="_blank" rel="noopener">&lt;code>relocate()&lt;/code>&lt;/a> makes it easy to move columns around:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x1 &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, x2 &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>, y1 &lt;span class='o'>=&lt;/span> &lt;span class='m'>4&lt;/span>, y2 &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/relocate.html'>relocate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"y"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `y1`, `y2`, `x1`, `x2`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice_min()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice_max()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice_sample()&lt;/code>&lt;/a> are now supported, and
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice_head()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice_tail()&lt;/code>&lt;/a> throw informative error messages (since they don&amp;rsquo;t make sense for databases).&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>g &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/rep.html'>rep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>, &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>, x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice_min&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, prop &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `g`, `x`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM (SELECT `g`, `x`, CUME_DIST() OVER (PARTITION BY `g` ORDER BY `x`) AS `q01`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`) `q01`&lt;/span>
&lt;span class='c'>#&amp;gt; WHERE (`q01` &amp;lt;= 0.5)&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice_sample&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, n &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>, with_ties &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `g`, `x`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM (SELECT `g`, `x`, ROW_NUMBER() OVER (PARTITION BY `g` ORDER BY random()) AS `q01`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`) `q01`&lt;/span>
&lt;span class='c'>#&amp;gt; WHERE (`q01` &amp;lt;= 10)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that these slices are translated into window functions, and because you can&amp;rsquo;t use a window function directly inside a &lt;code>WHERE&lt;/code> clause, they must be wrapped in a subquery.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="sql-translation">SQL translation
&lt;a href="#sql-translation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The dbplyr documentation now does a much better job of providing the details of its SQL translation. Each backend and each major verb has a documentation page giving the basics of the translation. This will hopefully make it much easier to learn what is and isn&amp;rsquo;t supported by dbplyr. Visit &lt;a href="https://dbplyr.tidyverse.org/reference/index.html">https://dbplyr.tidyverse.org/reference/index.html&lt;/a> to see the new docs.&lt;/p>
&lt;p>There are also many improvements to SQL generation. Here are a few of the most important:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Join functions gain an &lt;code>na_matches&lt;/code> argument that allows you to control whether or not &lt;code>NA&lt;/code> (&lt;code>NULL&lt;/code>) values match other &lt;code>NA&lt;/code> values. The default is &lt;code>&amp;quot;never&amp;quot;&lt;/code>, which is the usual behaviour in databases. You can set &lt;code>na_matches = &amp;quot;na&amp;quot;&lt;/code> to match R&amp;rsquo;s usual join behaviour.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>df1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='kc'>NA&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>df2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>NA&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>df1&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df2&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># A tibble: 2 x 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>x&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>y&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>1&lt;/span>&lt;span> 1 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>2&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #BB0000;'>NA&lt;/span>&lt;span> 1&lt;/span>&lt;/span>
&lt;span class='nv'>db1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/memdb_frame.html'>memdb_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='kc'>NA&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>db2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/memdb_frame.html'>memdb_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>NA&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>db1&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>db2&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># Source: lazy query [?? x 2]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># Database: sqlite 3.34.1 [:memory:]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>x&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>y&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>1&lt;/span>&lt;span> 1 2&lt;/span>&lt;/span>
&lt;span class='nv'>db1&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>db2&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"x"&lt;/span>, na_matches &lt;span class='o'>=&lt;/span> &lt;span class='s'>"na"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># Source: lazy query [?? x 2]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># Database: sqlite 3.34.1 [:memory:]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>x&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>y&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>1&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #BB0000;'>NA&lt;/span>&lt;span> 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>2&lt;/span>&lt;span> 1 2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This translation is powered by the new
&lt;a href="https://dbplyr.tidyverse.org/reference/db-sql.html" target="_blank" rel="noopener">&lt;code>sql_expr_matches()&lt;/code>&lt;/a> generic, because every database seems to have a slightly different way to express this idea. Learn more at &lt;a href="https://modern-sql.com/feature/is-distinct-from">https://modern-sql.com/feature/is-distinct-from&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>db1&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>db2&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `LHS`.`x` AS `x`, `y`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `dbplyr_001` AS `LHS`&lt;/span>
&lt;span class='c'>#&amp;gt; INNER JOIN `dbplyr_002` AS `RHS`&lt;/span>
&lt;span class='c'>#&amp;gt; ON (`LHS`.`x` = `RHS`.`x`)&lt;/span>
&lt;span class='nv'>db1&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>inner_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>db2&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"x"&lt;/span>, na_matches &lt;span class='o'>=&lt;/span> &lt;span class='s'>"na"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `LHS`.`x` AS `x`, `y`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `dbplyr_001` AS `LHS`&lt;/span>
&lt;span class='c'>#&amp;gt; INNER JOIN `dbplyr_002` AS `RHS`&lt;/span>
&lt;span class='c'>#&amp;gt; ON (`LHS`.`x` IS `RHS`.`x`)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Subqueries no longer include an &lt;code>ORDER BY&lt;/code> clause. This is not part of the formal SQL specification so it has very limited support across databases. Now such queries generate a warning suggesting that you move your
&lt;a href="https://dplyr.tidyverse.org/reference/arrange.html" target="_blank" rel="noopener">&lt;code>arrange()&lt;/code>&lt;/a> call later in the pipeline.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>g &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/rep.html'>rep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>, each &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>, x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sample.html'>sample&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>n &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/context.html'>n&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/desc.html'>desc&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>n&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>n&lt;/span> &lt;span class='o'>&amp;gt;&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Warning: ORDER BY is ignored in subqueries without LIMIT&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span>&lt;span> Do you need to move arrange() later in the pipeline or use window_order() instead?&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT *&lt;/span>
&lt;span class='c'>#&amp;gt; FROM (SELECT `g`, COUNT(*) AS `n`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`&lt;/span>
&lt;span class='c'>#&amp;gt; GROUP BY `g`) `q01`&lt;/span>
&lt;span class='c'>#&amp;gt; WHERE (`n` &amp;gt; 1.0)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>As the warning suggests, there&amp;rsquo;s one exception: &lt;code>ORDER BY&lt;/code> is still generated if a &lt;code>LIMIT&lt;/code> is present. Across databases, this tends to change which rows are returned, but not necessarily their order.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>n &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/context.html'>n&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/desc.html'>desc&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>n&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/head.html'>head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>n&lt;/span> &lt;span class='o'>&amp;gt;&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT *&lt;/span>
&lt;span class='c'>#&amp;gt; FROM (SELECT `g`, COUNT(*) AS `n`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`&lt;/span>
&lt;span class='c'>#&amp;gt; GROUP BY `g`&lt;/span>
&lt;span class='c'>#&amp;gt; ORDER BY `n` DESC&lt;/span>
&lt;span class='c'>#&amp;gt; LIMIT 5) `q01`&lt;/span>
&lt;span class='c'>#&amp;gt; WHERE (`n` &amp;gt; 1.0)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>dbplyr includes built-in backends for Redshift (which only differs from PostgreSQL in a few places) and SAP HANA. These require the development versions of
&lt;a href="https://github.com/r-dbi/RPostgres" target="_blank" rel="noopener">RPostgres&lt;/a> and
&lt;a href="https://github.com/r-dbi/odbc" target="_blank" rel="noopener">odbc&lt;/a> respectively.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='s'>"a"&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='s'>"b"&lt;/span>, con &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/backend-redshift.html'>simulate_redshift&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>z &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/paste.html'>paste0&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `x`, `y`, `x` || `y` AS `z`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;p>There are a number of minor changes that affect the translation of individual functions. Here are a few of the most important:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>All backends now translate
&lt;a href="https://dplyr.tidyverse.org/reference/context.html" target="_blank" rel="noopener">&lt;code>n()&lt;/code>&lt;/a> to &lt;code>count(*)&lt;/code> and support
&lt;a href="https://rdrr.io/r/base/ns-dblcolon.html" target="_blank" rel="noopener">&lt;code>::&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>n &lt;span class='o'>=&lt;/span> &lt;span class='nf'>dplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/context.html'>n&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT COUNT(*) AS `n`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>PostgreSQL gets translations for lubridate period functions:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Sys.time.html'>Sys.Date&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, con &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/backend-postgres.html'>simulate_postgres&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>year &lt;span class='o'>=&lt;/span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>years&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `x`, `x` + CAST('1 years' AS INTERVAL) AS `year`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `df`&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Oracle assumes version 12c is available so we can use a simpler translation for
&lt;a href="https://rdrr.io/r/utils/head.html" target="_blank" rel="noopener">&lt;code>head()&lt;/code>&lt;/a> that works in more places:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/tbl_lazy.html'>lazy_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, con &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/backend-oracle.html'>simulate_oracle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lf&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/head.html'>head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT *&lt;/span>
&lt;span class='c'>#&amp;gt; FROM (`df`) &lt;/span>
&lt;span class='c'>#&amp;gt; FETCH FIRST 5 ROWS ONLY&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h2 id="new-logo">New logo
&lt;a href="#new-logo">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to the artistic talents of
&lt;a href="https://www.allisonhorst.com" target="_blank" rel="noopener">Allison Horst&lt;/a>, dbplyr has a beautiful new logo:&lt;/p>
&lt;img src="dbplyr.png" width="250"/>
&lt;h2 id="extensibility">Extensibility
&lt;a href="#extensibility">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Finally, dbplyr introduces a number of new generics to help tease apart the currently overly complicated relationship with dplyr. This should make creating new backends much easier, but does require some changes from existing backends. These changes should be invisible to the end user and will play out slowly over the next 12 months. See
&lt;a href="https://dbplyr.tidyverse.org/articles/backend-2.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;backend-2&amp;quot;, package = &amp;quot;dbplyr&amp;quot;)&lt;/code>&lt;/a> for details.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to everyone who helped with this release by reporting bugs, discussing issues, and contributing code:
&lt;a href="https://github.com/abalter" target="_blank" rel="noopener">@abalter&lt;/a>,
&lt;a href="https://github.com/adhi-r" target="_blank" rel="noopener">@adhi-r&lt;/a>,
&lt;a href="https://github.com/adithya604" target="_blank" rel="noopener">@adithya604&lt;/a>,
&lt;a href="https://github.com/admoseremic" target="_blank" rel="noopener">@admoseremic&lt;/a>,
&lt;a href="https://github.com/ahmed-alhindawi" target="_blank" rel="noopener">@ahmed-alhindawi&lt;/a>,
&lt;a href="https://github.com/alexfun" target="_blank" rel="noopener">@alexfun&lt;/a>,
&lt;a href="https://github.com/alexkyllo" target="_blank" rel="noopener">@alexkyllo&lt;/a>,
&lt;a href="https://github.com/alistaire47" target="_blank" rel="noopener">@alistaire47&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/BenCarlsen" target="_blank" rel="noopener">@BenCarlsen&lt;/a>,
&lt;a href="https://github.com/bengowan" target="_blank" rel="noopener">@bengowan&lt;/a>,
&lt;a href="https://github.com/bersbersbers" target="_blank" rel="noopener">@bersbersbers&lt;/a>,
&lt;a href="https://github.com/bertrandh" target="_blank" rel="noopener">@bertrandh&lt;/a>,
&lt;a href="https://github.com/bkkkk" target="_blank" rel="noopener">@bkkkk&lt;/a>,
&lt;a href="https://github.com/boshek" target="_blank" rel="noopener">@boshek&lt;/a>,
&lt;a href="https://github.com/bradenkinard" target="_blank" rel="noopener">@bradenkinard&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/CerebralMastication" target="_blank" rel="noopener">@CerebralMastication&lt;/a>,
&lt;a href="https://github.com/chris-billingham" target="_blank" rel="noopener">@chris-billingham&lt;/a>,
&lt;a href="https://github.com/cmichaud92" target="_blank" rel="noopener">@cmichaud92&lt;/a>,
&lt;a href="https://github.com/cole-johanson" target="_blank" rel="noopener">@cole-johanson&lt;/a>,
&lt;a href="https://github.com/copernican" target="_blank" rel="noopener">@copernican&lt;/a>,
&lt;a href="https://github.com/daattali" target="_blank" rel="noopener">@daattali&lt;/a>,
&lt;a href="https://github.com/Daveyr" target="_blank" rel="noopener">@Daveyr&lt;/a>,
&lt;a href="https://github.com/davidchall" target="_blank" rel="noopener">@davidchall&lt;/a>,
&lt;a href="https://github.com/DavidPatShuiFong" target="_blank" rel="noopener">@DavidPatShuiFong&lt;/a>,
&lt;a href="https://github.com/dereksonderegger" target="_blank" rel="noopener">@dereksonderegger&lt;/a>,
&lt;a href="https://github.com/dfrankow" target="_blank" rel="noopener">@dfrankow&lt;/a>,
&lt;a href="https://github.com/dkulp2" target="_blank" rel="noopener">@dkulp2&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/dsen6644" target="_blank" rel="noopener">@dsen6644&lt;/a>,
&lt;a href="https://github.com/DSLituiev" target="_blank" rel="noopener">@DSLituiev&lt;/a>,
&lt;a href="https://github.com/EarlGlynn" target="_blank" rel="noopener">@EarlGlynn&lt;/a>,
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>,
&lt;a href="https://github.com/edoardomichielon" target="_blank" rel="noopener">@edoardomichielon&lt;/a>,
&lt;a href="https://github.com/elbamos" target="_blank" rel="noopener">@elbamos&lt;/a>,
&lt;a href="https://github.com/ericemc3" target="_blank" rel="noopener">@ericemc3&lt;/a>,
&lt;a href="https://github.com/fahadshery" target="_blank" rel="noopener">@fahadshery&lt;/a>,
&lt;a href="https://github.com/fh-jgutman" target="_blank" rel="noopener">@fh-jgutman&lt;/a>,
&lt;a href="https://github.com/ftoresh" target="_blank" rel="noopener">@ftoresh&lt;/a>,
&lt;a href="https://github.com/GrayAlex49" target="_blank" rel="noopener">@GrayAlex49&lt;/a>,
&lt;a href="https://github.com/gregleleu" target="_blank" rel="noopener">@gregleleu&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/halpo" target="_blank" rel="noopener">@halpo&lt;/a>,
&lt;a href="https://github.com/hannes101" target="_blank" rel="noopener">@hannes101&lt;/a>,
&lt;a href="https://github.com/hansvancalster" target="_blank" rel="noopener">@hansvancalster&lt;/a>,
&lt;a href="https://github.com/hrbrmstr" target="_blank" rel="noopener">@hrbrmstr&lt;/a>,
&lt;a href="https://github.com/huelf" target="_blank" rel="noopener">@huelf&lt;/a>,
&lt;a href="https://github.com/iangow" target="_blank" rel="noopener">@iangow&lt;/a>,
&lt;a href="https://github.com/ianmcook" target="_blank" rel="noopener">@ianmcook&lt;/a>,
&lt;a href="https://github.com/jakeybob" target="_blank" rel="noopener">@jakeybob&lt;/a>,
&lt;a href="https://github.com/Janlow" target="_blank" rel="noopener">@Janlow&lt;/a>,
&lt;a href="https://github.com/jarodmeng" target="_blank" rel="noopener">@jarodmeng&lt;/a>,
&lt;a href="https://github.com/javierluraschi" target="_blank" rel="noopener">@javierluraschi&lt;/a>,
&lt;a href="https://github.com/jerisalan" target="_blank" rel="noopener">@jerisalan&lt;/a>,
&lt;a href="https://github.com/jessekps" target="_blank" rel="noopener">@jessekps&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jkylearmstrong" target="_blank" rel="noopener">@jkylearmstrong&lt;/a>,
&lt;a href="https://github.com/jmerone" target="_blank" rel="noopener">@jmerone&lt;/a>,
&lt;a href="https://github.com/jonkeane" target="_blank" rel="noopener">@jonkeane&lt;/a>,
&lt;a href="https://github.com/kmishra9" target="_blank" rel="noopener">@kmishra9&lt;/a>,
&lt;a href="https://github.com/kohleth" target="_blank" rel="noopener">@kohleth&lt;/a>,
&lt;a href="https://github.com/kondofersky" target="_blank" rel="noopener">@kondofersky&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/LukasWallrich" target="_blank" rel="noopener">@LukasWallrich&lt;/a>,
&lt;a href="https://github.com/lukerobert" target="_blank" rel="noopener">@lukerobert&lt;/a>,
&lt;a href="https://github.com/lymanmark" target="_blank" rel="noopener">@lymanmark&lt;/a>,
&lt;a href="https://github.com/machow" target="_blank" rel="noopener">@machow&lt;/a>,
&lt;a href="https://github.com/martin-a-wade" target="_blank" rel="noopener">@martin-a-wade&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/MikeJohnPage" target="_blank" rel="noopener">@MikeJohnPage&lt;/a>,
&lt;a href="https://github.com/millerh1" target="_blank" rel="noopener">@millerh1&lt;/a>,
&lt;a href="https://github.com/mkirzon" target="_blank" rel="noopener">@mkirzon&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/mskyttner" target="_blank" rel="noopener">@mskyttner&lt;/a>,
&lt;a href="https://github.com/Naareman" target="_blank" rel="noopener">@Naareman&lt;/a>,
&lt;a href="https://github.com/natbprice" target="_blank" rel="noopener">@natbprice&lt;/a>,
&lt;a href="https://github.com/okhoma" target="_blank" rel="noopener">@okhoma&lt;/a>,
&lt;a href="https://github.com/OssiLehtinen" target="_blank" rel="noopener">@OssiLehtinen&lt;/a>,
&lt;a href="https://github.com/PauloJhonny" target="_blank" rel="noopener">@PauloJhonny&lt;/a>,
&lt;a href="https://github.com/r2evans" target="_blank" rel="noopener">@r2evans&lt;/a>,
&lt;a href="https://github.com/ramnathv" target="_blank" rel="noopener">@ramnathv&lt;/a>,
&lt;a href="https://github.com/returnString" target="_blank" rel="noopener">@returnString&lt;/a>,
&lt;a href="https://github.com/rjpat" target="_blank" rel="noopener">@rjpat&lt;/a>,
&lt;a href="https://github.com/rlh1994" target="_blank" rel="noopener">@rlh1994&lt;/a>,
&lt;a href="https://github.com/robchallen" target="_blank" rel="noopener">@robchallen&lt;/a>,
&lt;a href="https://github.com/roboton" target="_blank" rel="noopener">@roboton&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/rundel" target="_blank" rel="noopener">@rundel&lt;/a>,
&lt;a href="https://github.com/saadaslam" target="_blank" rel="noopener">@saadaslam&lt;/a>,
&lt;a href="https://github.com/samssann" target="_blank" rel="noopener">@samssann&lt;/a>,
&lt;a href="https://github.com/samstiyer" target="_blank" rel="noopener">@samstiyer&lt;/a>,
&lt;a href="https://github.com/schradj" target="_blank" rel="noopener">@schradj&lt;/a>,
&lt;a href="https://github.com/sheepworrier" target="_blank" rel="noopener">@sheepworrier&lt;/a>,
&lt;a href="https://github.com/shosaco" target="_blank" rel="noopener">@shosaco&lt;/a>,
&lt;a href="https://github.com/shyams80" target="_blank" rel="noopener">@shyams80&lt;/a>,
&lt;a href="https://github.com/stiberger" target="_blank" rel="noopener">@stiberger&lt;/a>,
&lt;a href="https://github.com/stvrd" target="_blank" rel="noopener">@stvrd&lt;/a>,
&lt;a href="https://github.com/tarunn90" target="_blank" rel="noopener">@tarunn90&lt;/a>,
&lt;a href="https://github.com/tedmoorman" target="_blank" rel="noopener">@tedmoorman&lt;/a>,
&lt;a href="https://github.com/tgvaughan" target="_blank" rel="noopener">@tgvaughan&lt;/a>,
&lt;a href="https://github.com/tonyk7440" target="_blank" rel="noopener">@tonyk7440&lt;/a>,
&lt;a href="https://github.com/trevorcampbell" target="_blank" rel="noopener">@trevorcampbell&lt;/a>,
&lt;a href="https://github.com/TuomoNieminen" target="_blank" rel="noopener">@TuomoNieminen&lt;/a>,
&lt;a href="https://github.com/tvedebrink" target="_blank" rel="noopener">@tvedebrink&lt;/a>,
&lt;a href="https://github.com/vadimus202" target="_blank" rel="noopener">@vadimus202&lt;/a>,
&lt;a href="https://github.com/vnijs" target="_blank" rel="noopener">@vnijs&lt;/a>,
&lt;a href="https://github.com/wangyuchen" target="_blank" rel="noopener">@wangyuchen&lt;/a>,
&lt;a href="https://github.com/yitao-li" target="_blank" rel="noopener">@yitao-li&lt;/a>, and
&lt;a href="https://github.com/ZahraEconomist" target="_blank" rel="noopener">@ZahraEconomist&lt;/a>.&lt;/p></description></item><item><title>dplyr 1.0.0 available now!</title><link>https://www.tidyverse.org/blog/2020/06/dplyr-1-0-0/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/06/dplyr-1-0-0/</guid><description>&lt;p>I&amp;rsquo;m very excited to announce the ninth and final blog post in the
&lt;a href="https://www.tidyverse.org/tags/dplyr-1-0-0">dplyr 1.0.0 series&lt;/a>:
&lt;a href="http://dplyr.tidyverse.org/" target="_blank" rel="noopener">dplyr 1.0.0&lt;/a> is now available from CRAN! Install it by running:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>install.packages&lt;/span>(&lt;span class='s'>"dplyr"&lt;/span>)&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Then load it with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>library&lt;/span>(&lt;span class='k'>&lt;a href='https://dplyr.tidyverse.org/reference'>dplyr&lt;/a>&lt;/span>)&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="new-features">New features
&lt;a href="#new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>dplyr 1.0.0 is chock-a-block with new features; so many, in fact, that we can&amp;rsquo;t fit them all into one post. So if you want to learn more about what&amp;rsquo;s new, we recommend reading our existing series of posts:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-is-coming-soon/">Major lifecycle changes&lt;/a>. This post focusses on the idea of the &amp;ldquo;function lifecycle&amp;rdquo; which helps you understand where functions in dplyr are going. Particularly important is the idea of a &amp;ldquo;superseded&amp;rdquo; function. A superseded function is not going away, but we no longer recommend using it in new code.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-summarise/">New &lt;code>summarise()&lt;/code> features&lt;/a>. In
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a>, a single summary expression can now create both multiple rows and multiple columns. This significantly increases its power and flexibility.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-select-rename-relocate/">&lt;code>select()&lt;/code>, &lt;code>rename()&lt;/code>, and (new) &lt;code>relocate()&lt;/code>&lt;/a>.
&lt;a href="https://dplyr.tidyverse.org/reference/select.html" target="_blank" rel="noopener">&lt;code>select()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>rename()&lt;/code>&lt;/a> can now select by position, name, function of name, type, and any combination thereof. A new
&lt;a href="https://dplyr.tidyverse.org/reference/relocate.html" target="_blank" rel="noopener">&lt;code>relocate()&lt;/code>&lt;/a> function makes it easy to change the position of columns.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-colwise/">Working &lt;code>across()&lt;/code> columns&lt;/a>. A new
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>across()&lt;/code>&lt;/a> function makes it much easier to apply the same operation to multiple columns. It supersedes the &lt;code>_if()&lt;/code>, &lt;code>_at()&lt;/code>, and &lt;code>_all()&lt;/code> function variants.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-rowwise/">Working within rows&lt;/a>.
&lt;a href="https://dplyr.tidyverse.org/reference/rowwise.html" target="_blank" rel="noopener">&lt;code>rowwise()&lt;/code>&lt;/a> has been renewed and revamped to make it easier to perform operations row-by-row. This makes it much easier to solve problems that previously required
&lt;a href="https://rdrr.io/r/base/lapply.html" target="_blank" rel="noopener">&lt;code>base::lapply()&lt;/code>&lt;/a>,
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>purrr::map()&lt;/code>&lt;/a>, or friends.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-and-vctrs/">The role of the vctrs package&lt;/a>. dplyr now makes heavy use of
&lt;a href="http://vctrs.r-lib.org/" target="_blank" rel="noopener">vctrs&lt;/a> behind the scenes. This brings with it greater consistency and (hopefully!) more useful error messages.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.tidyverse.org/blog/2020/05/dplyr-1-0-0-last-minute-additions/">Last minute additions&lt;/a>
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> now allows you to control how its results are grouped, and there&amp;rsquo;s a new family of functions designed for modifying rows.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>You can see the full list of changes in the
&lt;a href="https://github.com/tidyverse/dplyr/releases/tag/v1.0.0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="new-logo">New logo
&lt;a href="#new-logo">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>dplyr has a new logo thanks to the talented
&lt;a href="https://allisonhorst.github.io" target="_blank" rel="noopener">Allison Horst&lt;/a>!&lt;/p>
&lt;p>&lt;img src="dplyr.png" width="250" alt="New dplyr logo" /> &lt;/p>
&lt;p>(Stay tuned for details about how to get this sticker on to your laptop. We have some exciting news coming up!)&lt;/p>
&lt;h2 id="a-small-teaser">A small teaser
&lt;a href="#a-small-teaser">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The best way to find out about all the cool new features dplyr has to offer is to read through the blog posts linked to above. But thanks to inspiration from
&lt;a href="https://twitter.com/datalorax_/status/1258208502960422914" target="_blank" rel="noopener">Daniel Anderson&lt;/a> here&amp;rsquo;s one example of fitting two different models by subgroup that shows off a bunch of cool features:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>library&lt;/span>(&lt;span class='k'>&lt;a href='https://dplyr.tidyverse.org/reference'>dplyr&lt;/a>&lt;/span>, warn.conflicts = &lt;span class='m'>FALSE&lt;/span>)
&lt;span class='k'>models&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>tibble&lt;/span>::&lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>(
&lt;span class='o'>~&lt;/span>&lt;span class='k'>model_name&lt;/span>, &lt;span class='o'>~&lt;/span> &lt;span class='k'>formula&lt;/span>,
&lt;span class='s'>"length-width"&lt;/span>, &lt;span class='k'>Sepal.Length&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='k'>Petal.Width&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='k'>Petal.Length&lt;/span>,
&lt;span class='s'>"interaction"&lt;/span>, &lt;span class='k'>Sepal.Length&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='k'>Petal.Width&lt;/span> &lt;span class='o'>*&lt;/span> &lt;span class='k'>Petal.Length&lt;/span>
)
&lt;span class='k'>iris&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/nest_by.html'>nest_by&lt;/a>&lt;/span>(&lt;span class='k'>Species&lt;/span>) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>(&lt;span class='k'>models&lt;/span>, by = &lt;span class='nf'>character&lt;/span>()) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/rowwise.html'>rowwise&lt;/a>&lt;/span>(&lt;span class='k'>Species&lt;/span>, &lt;span class='k'>model_name&lt;/span>) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>(model = &lt;span class='nf'>list&lt;/span>(&lt;span class='nf'>lm&lt;/span>(&lt;span class='k'>formula&lt;/span>, data = &lt;span class='k'>data&lt;/span>))) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>(&lt;span class='k'>broom&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/broom/man/reexports.html'>glance&lt;/a>&lt;/span>(&lt;span class='k'>model&lt;/span>))
&lt;span class='c'>#&amp;gt; `summarise()` regrouping output by 'Species', 'model_name' (override with `.groups` argument)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># A tibble: 6 x 13&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># Groups: Species, model_name [6]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Species&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>model_name&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>r.squared&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>adj.r.squared&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>sigma&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>statistic&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>p.value&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>df&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>1&lt;/span>&lt;span> setosa length-wi… 0.112 0.073&lt;/span>&lt;span style='text-decoration: underline;'>9&lt;/span>&lt;span> 0.339 2.96 6.18&lt;/span>&lt;span style='color: #949494;'>e&lt;/span>&lt;span style='color: #BB0000;'>- 2&lt;/span>&lt;span> 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>2&lt;/span>&lt;span> setosa interacti… 0.133 0.076&lt;/span>&lt;span style='text-decoration: underline;'>0&lt;/span>&lt;span> 0.339 2.34 8.54&lt;/span>&lt;span style='color: #949494;'>e&lt;/span>&lt;span style='color: #BB0000;'>- 2&lt;/span>&lt;span> 4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>3&lt;/span>&lt;span> versic… length-wi… 0.574 0.556 0.344 31.7 1.92&lt;/span>&lt;span style='color: #949494;'>e&lt;/span>&lt;span style='color: #BB0000;'>- 9&lt;/span>&lt;span> 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>4&lt;/span>&lt;span> versic… interacti… 0.577 0.549 0.347 20.9 1.11&lt;/span>&lt;span style='color: #949494;'>e&lt;/span>&lt;span style='color: #BB0000;'>- 8&lt;/span>&lt;span> 4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>5&lt;/span>&lt;span> virgin… length-wi… 0.747 0.736 0.327 69.3 9.50&lt;/span>&lt;span style='color: #949494;'>e&lt;/span>&lt;span style='color: #BB0000;'>-15&lt;/span>&lt;span> 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>6&lt;/span>&lt;span> virgin… interacti… 0.757 0.741 0.323 47.8 3.54&lt;/span>&lt;span style='color: #949494;'>e&lt;/span>&lt;span style='color: #BB0000;'>-14&lt;/span>&lt;span> 4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># … with 5 more variables: &lt;/span>&lt;span style='color: #949494;font-weight: bold;'>logLik&lt;/span>&lt;span style='color: #949494;'> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span style='color: #949494;'>, &lt;/span>&lt;span style='color: #949494;font-weight: bold;'>AIC&lt;/span>&lt;span style='color: #949494;'> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span style='color: #949494;'>, &lt;/span>&lt;span style='color: #949494;font-weight: bold;'>BIC&lt;/span>&lt;span style='color: #949494;'> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span style='color: #949494;'>, &lt;/span>&lt;span style='color: #949494;font-weight: bold;'>deviance&lt;/span>&lt;span style='color: #949494;'> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span style='color: #949494;'>,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># &lt;/span>&lt;span style='color: #949494;font-weight: bold;'>df.residual&lt;/span>&lt;span style='color: #949494;'> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note the use of:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The new
&lt;a href="https://dplyr.tidyverse.org/reference/nest_by.html" target="_blank" rel="noopener">&lt;code>nest_by()&lt;/code>&lt;/a>, which generates a nested data frame where each row represents one subgroup.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In
&lt;a href="https://dplyr.tidyverse.org/reference/mutate-joins.html" target="_blank" rel="noopener">&lt;code>left_join()&lt;/code>&lt;/a>, &lt;code>by = character()&lt;/code> which now performs a Cartesian product, generating every combination of subgroup and model.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/rowwise.html" target="_blank" rel="noopener">&lt;code>rowwise()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> which fit a model to each row.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The newly powerful
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> which summarises each model with the model fit statistics computed by
&lt;a href="https://rdrr.io/pkg/broom/man/reexports.html" target="_blank" rel="noopener">&lt;code>broom::glance()&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>dplyr 1.0.0 has been one of the biggest projects that we, as a team, have ever tackled. Almost everyone in the tidyverse team has been involved in some capacity. Special thanks go to Romain François, who in his role as primary developer has been working on this release for over six months, and to Lionel Henry and Davis Vaughn for all their work on the vctrs package. Jim Hester&amp;rsquo;s work on running revdep checks in the cloud also made a big impact on our ability to understand failure modes.&lt;/p>
&lt;p>A big thanks to all 137 members of the dplyr community who helped make this release possible by finding bugs, discussing issues, and writing code:
&lt;a href="https://github.com/AdaemmerP" target="_blank" rel="noopener">@AdaemmerP&lt;/a>,
&lt;a href="https://github.com/adelarue" target="_blank" rel="noopener">@adelarue&lt;/a>,
&lt;a href="https://github.com/ahernnelson" target="_blank" rel="noopener">@ahernnelson&lt;/a>,
&lt;a href="https://github.com/alaataleb111" target="_blank" rel="noopener">@alaataleb111&lt;/a>,
&lt;a href="https://github.com/antoine-sachet" target="_blank" rel="noopener">@antoine-sachet&lt;/a>,
&lt;a href="https://github.com/atusy" target="_blank" rel="noopener">@atusy&lt;/a>,
&lt;a href="https://github.com/Auld-Greg" target="_blank" rel="noopener">@Auld-Greg&lt;/a>,
&lt;a href="https://github.com/b-rodrigues" target="_blank" rel="noopener">@b-rodrigues&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/bedantaguru" target="_blank" rel="noopener">@bedantaguru&lt;/a>,
&lt;a href="https://github.com/benjaminschlegel" target="_blank" rel="noopener">@benjaminschlegel&lt;/a>,
&lt;a href="https://github.com/benjbuch" target="_blank" rel="noopener">@benjbuch&lt;/a>,
&lt;a href="https://github.com/bergsmat" target="_blank" rel="noopener">@bergsmat&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/brianmsm" target="_blank" rel="noopener">@brianmsm&lt;/a>,
&lt;a href="https://github.com/bwiernik" target="_blank" rel="noopener">@bwiernik&lt;/a>,
&lt;a href="https://github.com/caldwellst" target="_blank" rel="noopener">@caldwellst&lt;/a>,
&lt;a href="https://github.com/cat-zeppelin" target="_blank" rel="noopener">@cat-zeppelin&lt;/a>,
&lt;a href="https://github.com/chillywings" target="_blank" rel="noopener">@chillywings&lt;/a>,
&lt;a href="https://github.com/clauswilke" target="_blank" rel="noopener">@clauswilke&lt;/a>,
&lt;a href="https://github.com/colearendt" target="_blank" rel="noopener">@colearendt&lt;/a>,
&lt;a href="https://github.com/DanChaltiel" target="_blank" rel="noopener">@DanChaltiel&lt;/a>,
&lt;a href="https://github.com/danoreper" target="_blank" rel="noopener">@danoreper&lt;/a>,
&lt;a href="https://github.com/danzafar" target="_blank" rel="noopener">@danzafar&lt;/a>,
&lt;a href="https://github.com/davidbaniadam" target="_blank" rel="noopener">@davidbaniadam&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dblodgett-usgs" target="_blank" rel="noopener">@dblodgett-usgs&lt;/a>,
&lt;a href="https://github.com/ddsjoberg" target="_blank" rel="noopener">@ddsjoberg&lt;/a>,
&lt;a href="https://github.com/deschen1" target="_blank" rel="noopener">@deschen1&lt;/a>,
&lt;a href="https://github.com/dfrankow" target="_blank" rel="noopener">@dfrankow&lt;/a>,
&lt;a href="https://github.com/DiegoKoz" target="_blank" rel="noopener">@DiegoKoz&lt;/a>,
&lt;a href="https://github.com/dkahle" target="_blank" rel="noopener">@dkahle&lt;/a>,
&lt;a href="https://github.com/DzimitryM" target="_blank" rel="noopener">@DzimitryM&lt;/a>,
&lt;a href="https://github.com/earowang" target="_blank" rel="noopener">@earowang&lt;/a>,
&lt;a href="https://github.com/echasnovski" target="_blank" rel="noopener">@echasnovski&lt;/a>,
&lt;a href="https://github.com/edwindj" target="_blank" rel="noopener">@edwindj&lt;/a>,
&lt;a href="https://github.com/elbersb" target="_blank" rel="noopener">@elbersb&lt;/a>,
&lt;a href="https://github.com/elcega" target="_blank" rel="noopener">@elcega&lt;/a>,
&lt;a href="https://github.com/ericemc3" target="_blank" rel="noopener">@ericemc3&lt;/a>,
&lt;a href="https://github.com/espinielli" target="_blank" rel="noopener">@espinielli&lt;/a>,
&lt;a href="https://github.com/FedericoConcas" target="_blank" rel="noopener">@FedericoConcas&lt;/a>,
&lt;a href="https://github.com/FlukeAndFeather" target="_blank" rel="noopener">@FlukeAndFeather&lt;/a>,
&lt;a href="https://github.com/GegznaV" target="_blank" rel="noopener">@GegznaV&lt;/a>,
&lt;a href="https://github.com/gergness" target="_blank" rel="noopener">@gergness&lt;/a>,
&lt;a href="https://github.com/ggrothendieck" target="_blank" rel="noopener">@ggrothendieck&lt;/a>,
&lt;a href="https://github.com/glennmschultz" target="_blank" rel="noopener">@glennmschultz&lt;/a>,
&lt;a href="https://github.com/gowerc" target="_blank" rel="noopener">@gowerc&lt;/a>,
&lt;a href="https://github.com/greg-minshall" target="_blank" rel="noopener">@greg-minshall&lt;/a>,
&lt;a href="https://github.com/gregorp" target="_blank" rel="noopener">@gregorp&lt;/a>,
&lt;a href="https://github.com/ha0ye" target="_blank" rel="noopener">@ha0ye&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/Harrison4192" target="_blank" rel="noopener">@Harrison4192&lt;/a>,
&lt;a href="https://github.com/henry090" target="_blank" rel="noopener">@henry090&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/ianmcook" target="_blank" rel="noopener">@ianmcook&lt;/a>,
&lt;a href="https://github.com/ismailmuller" target="_blank" rel="noopener">@ismailmuller&lt;/a>,
&lt;a href="https://github.com/isteves" target="_blank" rel="noopener">@isteves&lt;/a>,
&lt;a href="https://github.com/its-gazza" target="_blank" rel="noopener">@its-gazza&lt;/a>,
&lt;a href="https://github.com/j450h1" target="_blank" rel="noopener">@j450h1&lt;/a>,
&lt;a href="https://github.com/Jagadeeshkb" target="_blank" rel="noopener">@Jagadeeshkb&lt;/a>,
&lt;a href="https://github.com/jarauh" target="_blank" rel="noopener">@jarauh&lt;/a>,
&lt;a href="https://github.com/jason-liu-cs" target="_blank" rel="noopener">@jason-liu-cs&lt;/a>,
&lt;a href="https://github.com/jayqi" target="_blank" rel="noopener">@jayqi&lt;/a>,
&lt;a href="https://github.com/JBGruber" target="_blank" rel="noopener">@JBGruber&lt;/a>,
&lt;a href="https://github.com/jemus42" target="_blank" rel="noopener">@jemus42&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jflournoy" target="_blank" rel="noopener">@jflournoy&lt;/a>,
&lt;a href="https://github.com/jhuntergit" target="_blank" rel="noopener">@jhuntergit&lt;/a>,
&lt;a href="https://github.com/JohannesNE" target="_blank" rel="noopener">@JohannesNE&lt;/a>,
&lt;a href="https://github.com/jzadra" target="_blank" rel="noopener">@jzadra&lt;/a>,
&lt;a href="https://github.com/karldw" target="_blank" rel="noopener">@karldw&lt;/a>,
&lt;a href="https://github.com/kassambara" target="_blank" rel="noopener">@kassambara&lt;/a>,
&lt;a href="https://github.com/klin333" target="_blank" rel="noopener">@klin333&lt;/a>,
&lt;a href="https://github.com/knausb" target="_blank" rel="noopener">@knausb&lt;/a>,
&lt;a href="https://github.com/kriemo" target="_blank" rel="noopener">@kriemo&lt;/a>,
&lt;a href="https://github.com/krispiepage" target="_blank" rel="noopener">@krispiepage&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/kvasilopoulos" target="_blank" rel="noopener">@kvasilopoulos&lt;/a>,
&lt;a href="https://github.com/larry77" target="_blank" rel="noopener">@larry77&lt;/a>,
&lt;a href="https://github.com/leonawicz" target="_blank" rel="noopener">@leonawicz&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/LudvigOlsen" target="_blank" rel="noopener">@LudvigOlsen&lt;/a>,
&lt;a href="https://github.com/madlogos" target="_blank" rel="noopener">@madlogos&lt;/a>,
&lt;a href="https://github.com/markdly" target="_blank" rel="noopener">@markdly&lt;/a>,
&lt;a href="https://github.com/markfairbanks" target="_blank" rel="noopener">@markfairbanks&lt;/a>,
&lt;a href="https://github.com/meghapsimatrix" target="_blank" rel="noopener">@meghapsimatrix&lt;/a>,
&lt;a href="https://github.com/meixiaba" target="_blank" rel="noopener">@meixiaba&lt;/a>,
&lt;a href="https://github.com/melissagwolf" target="_blank" rel="noopener">@melissagwolf&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/Michael-Sheppard" target="_blank" rel="noopener">@Michael-Sheppard&lt;/a>,
&lt;a href="https://github.com/mikmart" target="_blank" rel="noopener">@mikmart&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/mir-cat" target="_blank" rel="noopener">@mir-cat&lt;/a>,
&lt;a href="https://github.com/mjsmith037" target="_blank" rel="noopener">@mjsmith037&lt;/a>,
&lt;a href="https://github.com/mlane3" target="_blank" rel="noopener">@mlane3&lt;/a>,
&lt;a href="https://github.com/msberends" target="_blank" rel="noopener">@msberends&lt;/a>,
&lt;a href="https://github.com/msgoussi" target="_blank" rel="noopener">@msgoussi&lt;/a>,
&lt;a href="https://github.com/nefissakhd" target="_blank" rel="noopener">@nefissakhd&lt;/a>,
&lt;a href="https://github.com/nick-youngblut" target="_blank" rel="noopener">@nick-youngblut&lt;/a>,
&lt;a href="https://github.com/nzbart" target="_blank" rel="noopener">@nzbart&lt;/a>,
&lt;a href="https://github.com/pavel-shliaha" target="_blank" rel="noopener">@pavel-shliaha&lt;/a>,
&lt;a href="https://github.com/pdbailey0" target="_blank" rel="noopener">@pdbailey0&lt;/a>,
&lt;a href="https://github.com/pnacht" target="_blank" rel="noopener">@pnacht&lt;/a>,
&lt;a href="https://github.com/ponnet" target="_blank" rel="noopener">@ponnet&lt;/a>,
&lt;a href="https://github.com/r2evans" target="_blank" rel="noopener">@r2evans&lt;/a>,
&lt;a href="https://github.com/ramnathv" target="_blank" rel="noopener">@ramnathv&lt;/a>,
&lt;a href="https://github.com/randy3k" target="_blank" rel="noopener">@randy3k&lt;/a>,
&lt;a href="https://github.com/richardjtelford" target="_blank" rel="noopener">@richardjtelford&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/ryanvoyack" target="_blank" rel="noopener">@ryanvoyack&lt;/a>,
&lt;a href="https://github.com/selesnow" target="_blank" rel="noopener">@selesnow&lt;/a>,
&lt;a href="https://github.com/selin1st" target="_blank" rel="noopener">@selin1st&lt;/a>,
&lt;a href="https://github.com/sewouter" target="_blank" rel="noopener">@sewouter&lt;/a>,
&lt;a href="https://github.com/sfirke" target="_blank" rel="noopener">@sfirke&lt;/a>,
&lt;a href="https://github.com/SimonDedman" target="_blank" rel="noopener">@SimonDedman&lt;/a>,
&lt;a href="https://github.com/sjmgarnier" target="_blank" rel="noopener">@sjmgarnier&lt;/a>,
&lt;a href="https://github.com/smingerson" target="_blank" rel="noopener">@smingerson&lt;/a>,
&lt;a href="https://github.com/stefanocoretta" target="_blank" rel="noopener">@stefanocoretta&lt;/a>,
&lt;a href="https://github.com/strengejacke" target="_blank" rel="noopener">@strengejacke&lt;/a>,
&lt;a href="https://github.com/tfkillian" target="_blank" rel="noopener">@tfkillian&lt;/a>,
&lt;a href="https://github.com/tilltnet" target="_blank" rel="noopener">@tilltnet&lt;/a>,
&lt;a href="https://github.com/tonyvibe" target="_blank" rel="noopener">@tonyvibe&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/torockel" target="_blank" rel="noopener">@torockel&lt;/a>,
&lt;a href="https://github.com/trinker" target="_blank" rel="noopener">@trinker&lt;/a>,
&lt;a href="https://github.com/tungmilan" target="_blank" rel="noopener">@tungmilan&lt;/a>,
&lt;a href="https://github.com/tzakharko" target="_blank" rel="noopener">@tzakharko&lt;/a>,
&lt;a href="https://github.com/uasolo" target="_blank" rel="noopener">@uasolo&lt;/a>,
&lt;a href="https://github.com/werkstattcodes" target="_blank" rel="noopener">@werkstattcodes&lt;/a>,
&lt;a href="https://github.com/wlandau" target="_blank" rel="noopener">@wlandau&lt;/a>,
&lt;a href="https://github.com/xiaoa6435" target="_blank" rel="noopener">@xiaoa6435&lt;/a>,
&lt;a href="https://github.com/yiluheihei" target="_blank" rel="noopener">@yiluheihei&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>,
&lt;a href="https://github.com/zenggyu" target="_blank" rel="noopener">@zenggyu&lt;/a>, and
&lt;a href="https://github.com/zkamvar" target="_blank" rel="noopener">@zkamvar&lt;/a>.&lt;/p></description></item><item><title>dplyr 1.0.0: last minute additions</title><link>https://www.tidyverse.org/blog/2020/05/dplyr-1-0-0-last-minute-additions/</link><pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/05/dplyr-1-0-0-last-minute-additions/</guid><description>&lt;p>Today I wanted to talk about two cool new features that we&amp;rsquo;ve added since I started blogging about dplyr 1.0.0: &lt;code>summarise()&lt;/code> now gives you greater control over how the results are grouped, and a new set of functions make it easier to modify rows.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Update&lt;/strong>: as of June 1, dplyr 1.0.0 is now available on CRAN! Read
&lt;a href="https://www.tidyverse.org/blog/2020/06/dplyr-1-0-0/">all about it&lt;/a> or install it now with &lt;code>install.packages(&amp;quot;dplyr&amp;quot;)&lt;/code>.&lt;/p>
&lt;hr>
&lt;h2 id="summarise-and-grouping">&lt;code>summarise()&lt;/code> and grouping
&lt;a href="#summarise-and-grouping">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There's a common confusion about the result of &lt;code>summarise()&lt;/code>. How do you think the result of the following code will be grouped?&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">warn.conflicts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">homeworld_species&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">homeworld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">n&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You might be surprised to learn that it&amp;rsquo;s grouped by &lt;code>homeworld&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">head&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">homeworld_species&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: homeworld [3]&lt;/span>
&lt;span class="c1">#&amp;gt; homeworld species n&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Alderaan Human 3&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Aleen Minor Aleena 1&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Bespin Human 1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s because &lt;code>summarise()&lt;/code> always peels off the last group, based on the logic that this group now occupies a single row so there&amp;rsquo;s no point grouping by it. This behaviour made perfect sense to me at the time I implemented it, but it&amp;rsquo;s been a long standing source of confusion among dplyr users (and it doesn&amp;rsquo;t make sense if your summary
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-summarise/" target="_blank" rel="noopener">returns multiple rows&lt;/a>).&lt;/p>
&lt;p>Unfortunately, it would be very difficult to change this default now because a lot of code probably relies on it. Instead, we&amp;rsquo;re doing the next best thing: exposing the default behaviour more explicitly and making it easier to change. In dplyr 1.0.0, the code above will display a message telling you how the result has been grouped:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">homeworld_species&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">homeworld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">n&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` regrouping output by &amp;#39;homeworld&amp;#39; (override with `.groups` argument)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The text hints at how to take control of grouping and eliminate the message: a new &lt;code>.groups&lt;/code> argument allows you to control the grouping of the result. It currently has four possible values:&lt;/p>
&lt;ul>
&lt;li>&lt;code>.groups = &amp;quot;drop_last&amp;quot;&lt;/code> drops the last grouping level (i.e. the default behaviour sans message).&lt;/li>
&lt;li>&lt;code>.groups = &amp;quot;drop&amp;quot;&lt;/code> drops all grouping levels and returns a tibble.&lt;/li>
&lt;li>&lt;code>.groups = &amp;quot;keep&amp;quot;&lt;/code> preserves the grouping of the input.&lt;/li>
&lt;li>&lt;code>.groups = &amp;quot;rowwise&amp;quot;&lt;/code> turns each row into
&lt;a href="https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-rowwise/" target="_blank" rel="noopener">its own group&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>If you find the default message annoying, you can suppress by setting a global option:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr.summarise.inform&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>.groups&lt;/code> is very new, so we&amp;rsquo;ve marked it as experimental, meaning that it may change in the future. Please let us know what you think of it to help us make a decision about its future.&lt;/p>
&lt;h2 id="row-mutation">Row mutation
&lt;a href="#row-mutation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to
&lt;a href="http://krlmlr.info/" target="_blank" rel="noopener">Kirill Müller&lt;/a>, dplyr has a new experimental family of row mutation functions inspired by SQL&amp;rsquo;s &lt;code>UPDATE&lt;/code>, &lt;code>INSERT&lt;/code>, &lt;code>UPSERT&lt;/code>, and &lt;code>DELETE&lt;/code>. Like the join functions, they all work with a pair of data frames:&lt;/p>
&lt;ul>
&lt;li>&lt;code>rows_update(x, y)&lt;/code> updates existing rows in &lt;code>x&lt;/code> with values in &lt;code>y&lt;/code>.&lt;/li>
&lt;li>&lt;code>rows_patch(x, y)&lt;/code> works like &lt;code>rows_update()&lt;/code> but only changes &lt;code>NA&lt;/code> values.&lt;/li>
&lt;li>&lt;code>rows_insert(x, y)&lt;/code> adds new rows to &lt;code>x&lt;/code> from &lt;code>y&lt;/code>.&lt;/li>
&lt;li>&lt;code>rows_upsert(x, y)&lt;/code> updates existing rows in &lt;code>x&lt;/code> and adds new rows from &lt;code>y&lt;/code>.&lt;/li>
&lt;li>&lt;code>rows_delete(x, y)&lt;/code> deletes rows in &lt;code>x&lt;/code> that match rows in &lt;code>y&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>rows_&lt;/code> functions match &lt;code>x&lt;/code> and &lt;code>y&lt;/code> using &lt;strong>keys&lt;/strong>. A key is one or more variables that uniquely identifies each row. All &lt;code>rows_&lt;/code> functions check that the keys of &lt;code>x&lt;/code> and &lt;code>y&lt;/code> are valid (i.e. unique) before doing anything.&lt;/p>
&lt;p>Let&amp;rsquo;s see how these work with some toy data:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">letters&lt;/span>&lt;span class="nf">[c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">NA&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; a b c&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a 0.5&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 b 1.5&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 &amp;lt;NA&amp;gt; 2.5&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can use &lt;code>rows_insert()&lt;/code> to add new rows:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">new&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;e&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">3.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">4.5&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">rows_insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Matching, by = &amp;#34;a&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; a b c&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a 0.5&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 b 1.5&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 &amp;lt;NA&amp;gt; 2.5&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 d 3.5&lt;/span>
&lt;span class="c1">#&amp;gt; 5 5 e 4.5&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that &lt;code>rows_insert()&lt;/code> will fail if we attempt to insert a row that already exists:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">rows_insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Matching, by = &amp;#34;a&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Attempting to insert duplicate rows.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(The error messages are very minimal right now; if people find these functions useful we&amp;rsquo;ll invest more effort in useful errors.)&lt;/p>
&lt;p>If you want to update existing values, use &lt;code>rows_update()&lt;/code>. As you might expect, it&amp;rsquo;ll error if one of the rows to update doesn&amp;rsquo;t exist:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">rows_update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Matching, by = &amp;#34;a&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; a b c&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a 0.5&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 b 1.5&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 c 2.5&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">rows_update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;d&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Matching, by = &amp;#34;a&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Attempting to update missing rows.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>rows_patch()&lt;/code> is a variant of &lt;code>rows_update()&lt;/code> that will only update values in &lt;code>x&lt;/code> that are &lt;code>NA&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">rows_patch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;B&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Matching, by = &amp;#34;a&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; a b c&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a 0.5&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 b 1.5&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 B 2.5&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you want to update or insert, you can use &lt;code>rows_upsert()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">rows_upsert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">rows_upsert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;d&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Matching, by = &amp;#34;a&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; Matching, by = &amp;#34;a&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; a b c&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a 0.5&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 b 1.5&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 c 2.5&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 d NA&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>These functions are designed particularly with an eye towards mutable backends where you really might want to modify existing datasets in place (e.g. data.tables, databases, and googlesheets). That&amp;rsquo;s a dangerous operation so you&amp;rsquo;ll need to explicitly opt-in to modification with &lt;code>in_place = TRUE&lt;/code>. For example, the
&lt;a href="https://krlmlr.github.io/dm/" target="_blank" rel="noopener">dm package&lt;/a> will use these functions to update multiple related tables in the correct order, in memory or on the database. Expect to hear more about this in the future.&lt;/p></description></item><item><title>dplyr 1.0.0 for package developers</title><link>https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-package-dev/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-package-dev/</guid><description>&lt;p>As you&amp;rsquo;re hopefully aware,
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-is-coming-soon/" target="_blank" rel="noopener">dplyr 1.0.0 is coming soon&lt;/a>, and we&amp;rsquo;ve been writing a
&lt;a href="https://www.tidyverse.org/tags/dplyr/" target="_blank" rel="noopener">series of blog posts&lt;/a> about the user-facing changes that you, as a data scientist have to look forward to. Today, I wanted to change tack a little and talk about the changes from the perspective of the package developer.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Update&lt;/strong>: as of June 1, dplyr 1.0.0 is now available on CRAN! Read
&lt;a href="https://www.tidyverse.org/blog/2020/06/dplyr-1-0-0/">all about it&lt;/a> or install it now with &lt;code>install.packages(&amp;quot;dplyr&amp;quot;)&lt;/code>.&lt;/p>
&lt;hr>
&lt;p>But first, an update on the release process: in the process of preparing for this release, we discovered some subtle problems that arise when combining different types of data frames (including
&lt;a href="http://r-datatable.com" target="_blank" rel="noopener">data.table&lt;/a>s and tibbles). It took us a little while to figure out what we (and package developers need to do), so we&amp;rsquo;ve decided to push back the dplyr release: we&amp;rsquo;re now planning on releasing dplyr 1.0.0 to CRAN on May 15. We&amp;rsquo;re sorry that its going to longer than expected, but this gives package authors who use dplyr more time to handle changes.&lt;/p>
&lt;p>In this post, I want to address how dplyr changes might break package code, then discuss some of the major pain points a package developer might experience, and how to get help if you need it.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">warn.conflicts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="breaking-changes">Breaking changes
&lt;a href="#breaking-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are three main ways an update to a package might break your existing code:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>We&amp;rsquo;ve introduced a bug. Obviously, we do our best to make sure this doesn&amp;rsquo;t happen (by using software development best practices like unit testing and code review) but it&amp;rsquo;s impossible to eliminate all bugs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We&amp;rsquo;ve fixed a bug or otherwise made change we think is harmless. Sometimes your code accidentally depends on a behaviour that we think is incorrect and we change it. The change will be an improvement for most people, but unfortunately it
&lt;a href="https://xkcd.com/1172/" target="_blank" rel="noopener">breaks your code&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We&amp;rsquo;ve deliberately made a backward incompatible interface change. We try to make these as rarely as possible, and only to significantly improve usability or consistency. Unless the package or function is experimental, we do our best to make such changes gradually, so that there&amp;rsquo;s a deprecation period before the behaviour goes away altogether.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>dplyr 1.0.0 contains very few backward incompatible changes, but it does make a large number of changes that we believe are mostly harmless or minor improvements. The vast majority of these will not affect data analysis code, but some can affect packages, particularly through their unit tests. To give you a flavour for what I mean here, dplyr now preserves the names of atomic vectors:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="n">.$x&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">str&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Named num 1&lt;/span>
&lt;span class="c1">#&amp;gt; - attr(*, &amp;#34;names&amp;#34;)= chr &amp;#34;a&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(With dplyr 0.8.5, this returns an unnamed vector.)&lt;/p>
&lt;p>We made this change to increase internal consistency, as some verbs already did preserve names, and all verbs preserved the names of list-columns. We expect that this will have minimal impact on data-analysis code, but it does affect some packages because now there are names where there weren&amp;rsquo;t before. If this problem affects your code, typically the best strategy is to use &lt;code>unname()&lt;/code> to strip the names off.&lt;/p>
&lt;h2 id="our-release-process">Our release process
&lt;a href="#our-release-process">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To make sure all package maintainers know about potential problems, we run &lt;code>R CMD check&lt;/code> on all 1,986 packages that use dplyr. (You can see the results on
&lt;a href="https://github.com/tidyverse/dplyr/tree/master/revdep#revdeps" target="_blank" rel="noopener">github&lt;/a>). If you maintain a package that uses dplyr, and your package has problems, we have already emailed you several times throughout the release process.&lt;/p>
&lt;p>We&amp;rsquo;re also slowly working through the list of packages with problems and preparing pull requests where we can figure out a fix. Unfortunately, we don&amp;rsquo;t have the resources to fix every package, but we&amp;rsquo;re happy to help out if you get stuck (more on that below).&lt;/p>
&lt;h2 id="allequal">&lt;code>all.equal()&lt;/code>
&lt;a href="#allequal">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One of the subtlest, but furthest reaching changes for package authors is that we removed the &lt;code>all.equal.tbl_df&lt;/code> method. This small change has big consequence because &lt;code>testthat::expect_equal()&lt;/code> calls &lt;code>all.equal()&lt;/code>, which calls &lt;code>all.equal.tbl_df()&lt;/code> when the first argument is a tibble. Unfortunately &lt;code>all.equal.tbl_df&lt;/code> had a couple of major problems:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>It ignores the difference between data frames and tibbles so this code would pass:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">data.frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>By default, it ignores column and row order so the following tests would pass:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>The first issue was a genuine bug; the second one was something that I must&amp;rsquo;ve thought was a good idea at the time, but looking back at it was clearly a mistake. We&amp;rsquo;ve been aware of this problem for a while, but knew that fixing it would cause a large number of CRAN packages to fail to pass &lt;code>R CMD check&lt;/code>. We decided that the 1.0.0 release was a good time to rip the band-aid off.&lt;/p>
&lt;p>Unfortunately if this change affects your code, you won&amp;rsquo;t get a terribly informative error message, so for now you&amp;rsquo;ll just need to pattern match on the errors below:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testthat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Class mismatch&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">data.frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Error: `actual` (tibble(x = 1)) not equal to `expected` (data.frame(x = 1)).&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; `class(actual)`: &amp;#34;tbl_df&amp;#34; &amp;#34;tbl&amp;#34; &amp;#34;data.frame&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; `class(expected)`: &amp;#34;data.frame&amp;#34;&lt;/span>
&lt;span class="c1"># Row order is different&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Error: `actual` (tibble(x = 1:2)) not equal to `expected` (tibble(x = 2:1)).&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; `actual$x`: 1 2 &lt;/span>
&lt;span class="c1">#&amp;gt; `expected$x`: 2 1&lt;/span>
&lt;span class="c1"># Column order is different&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Error: `actual` (tibble(x = 1, y = 2)) not equal to `expected` (tibble(y = 2, x = 1)).&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; `names(actual)`: &amp;#34;x&amp;#34; &amp;#34;y&amp;#34; &lt;/span>
&lt;span class="c1">#&amp;gt; `names(expected)`: &amp;#34;y&amp;#34; &amp;#34;x&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Fixing these failures will typically involve updating the expected value.&lt;/p>
&lt;p>(The problem of uninformative failures prompted me to start work on the
&lt;a href="https://waldo.r-lib.org" target="_blank" rel="noopener">waldo package&lt;/a> that attempts to do better. You can try it out by installing the dev version of testthat, &lt;code>devtools::install_github(&amp;quot;r-lib/testthat&amp;quot;)&lt;/code>, but note that it&amp;rsquo;s still experimental so it&amp;rsquo;s only recommended for the adventurous.)&lt;/p>
&lt;h2 id="increased-strictness-from-vctrs">Increased strictness from vctrs
&lt;a href="#increased-strictness-from-vctrs">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As we
&lt;a href="https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-and-vctrs/" target="_blank" rel="noopener">discussed recently&lt;/a>, dplyr now uses the
&lt;a href="https://vctrs.r-lib.org" target="_blank" rel="noopener">vctrs package&lt;/a> under the hood. This increased strictness affects a few edge cases. For example, in dplyr 0.8.5, the following code returned &lt;code>tibble(x = character())&lt;/code> (what we&amp;rsquo;d now consider to be a bug):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df1&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">integer&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">df2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">character&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nf">bind_rows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">df2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Can&amp;#39;t combine `..1$x` &amp;lt;integer&amp;gt; and `..2$x` &amp;lt;character&amp;gt;.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If this affects your package, you&amp;rsquo;ll typically need to think about what the type of each column should be, and then ensure that&amp;rsquo;s the case everywhere in your code.&lt;/p>
&lt;h2 id="need-help">Need help?
&lt;a href="#need-help">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you just can&amp;rsquo;t figure out how to fix your package, please let us know! The fastest way to get help is to
&lt;a href="https://github.com/tidyverse/dplyr" target="_blank" rel="noopener">file an issue&lt;/a> containing a
&lt;a href="http://reprex.tidyverse.org/" target="_blank" rel="noopener">reprex&lt;/a> that illustrates the precise problem. But if you&amp;rsquo;re struggling to make a reprex, you can give us a link to your repo, and we&amp;rsquo;ll take a look.&lt;/p></description></item><item><title>dplyr 1.0.0 and vctrs</title><link>https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-and-vctrs/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-and-vctrs/</guid><description>&lt;p>Today, I wanted to talk a little bit how dplyr 1.0.0 uses the
&lt;a href="http://vctrs.r-lib.org/" target="_blank" rel="noopener">vctrs&lt;/a> package. This post explains why vctrs is so important, why we can&amp;rsquo;t just copy what base R does, how to interpret some of new error messages that you&amp;rsquo;ll see, and some of the major changes since the last version.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Update&lt;/strong>: as of June 1, dplyr 1.0.0 is now available on CRAN! Read
&lt;a href="https://www.tidyverse.org/blog/2020/06/dplyr-1-0-0/">all about it&lt;/a> or install it now with &lt;code>install.packages(&amp;quot;dplyr&amp;quot;)&lt;/code>.&lt;/p>
&lt;hr>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vctrs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">warn.conflicts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="combining-vectors">Combining vectors
&lt;a href="#combining-vectors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The heart of the reason we&amp;rsquo;re using vctrs is the need to combine vectors. You&amp;rsquo;re already familiar with one base R tool for combining vectors, &lt;code>c()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 1 2 3&lt;/span>
&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;a&amp;#34; &amp;#34;b&amp;#34; &amp;#34;c&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Combining vectors comes up in many places in the tidyverse, e.g.:&lt;/p>
&lt;ul>
&lt;li>&lt;code>dplyr::mutate()&lt;/code> and &lt;code>dplyr::summarise()&lt;/code> have to combine the results from each group.&lt;/li>
&lt;li>&lt;code>dplyr::bind_rows()&lt;/code> has to combine columns from different data frames.&lt;/li>
&lt;li>&lt;code>dplyr::full_join()&lt;/code> has to combine the keys from the &lt;code>x&lt;/code> and &lt;code>y&lt;/code> data frames.&lt;/li>
&lt;li>&lt;code>tidyr::pivot_longer()&lt;/code> has to combine multiple columns into one.&lt;/li>
&lt;/ul>
&lt;p>Our goal is to unify the code that underlies all these various functions so that there&amp;rsquo;s one consistent, principled approach. We&amp;rsquo;ve already made the change in
&lt;a href="https://www.tidyverse.org/blog/2019/09/tidyr-1-0-0/" target="_blank" rel="noopener">tidyr&lt;/a>, and now it&amp;rsquo;s dplyr&amp;rsquo;s turn.&lt;/p>
&lt;h2 id="base-r-behaviour">Base R behaviour
&lt;a href="#base-r-behaviour">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>You might wonder why we can&amp;rsquo;t just copy the behaviour of &lt;code>c()&lt;/code>. Unfortunately &lt;code>c()&lt;/code> has some major downsides:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>It doesn&amp;rsquo;t possess a &lt;code>factor&lt;/code> method so it converts factors to their underlying integer levels.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;x&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;y&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 1 1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s difficult to implement methods when different classes are involved. For example, combining a date (&lt;code>Date&lt;/code>) and a date-time (&lt;code>POSIXct&lt;/code>) yields an incorrect result because the underlying data is combined without first being translated.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">today&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.Date&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;2020-03-24&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">now&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.POSIXct&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;2020-03-24 10:34&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">today&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">now&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;2020-03-24&amp;#34; &amp;#34;4341727-12-11&amp;#34;&lt;/span>
&lt;span class="c1"># (the second value is the 11 Dec 4341727-12-11)&lt;/span>
&lt;span class="nf">class&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">today&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">now&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;Date&amp;#34;&lt;/span>
&lt;span class="nf">unclass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">today&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">now&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 18345 1585064040&lt;/span>
&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">today&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;2020-03-24 10:34:00 CDT&amp;#34; &amp;#34;1969-12-31 23:05:45 CST&amp;#34;&lt;/span>
&lt;span class="nf">class&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">today&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;POSIXct&amp;#34; &amp;#34;POSIXt&amp;#34;&lt;/span>
&lt;span class="nf">unclass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">today&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 1585064040 18345&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s difficult to change how &lt;code>c()&lt;/code> works because any changes are likely to break some existing code, and base R is committed to backward compatibility. Additionally, &lt;code>c()&lt;/code> isn&amp;rsquo;t the only way that base R combines vectors. &lt;code>rbind()&lt;/code> and &lt;code>unlist()&lt;/code> can also be used to perform a similar job, but return different results. This is not to say that the tidyverse has been any better in the past &amp;mdash; we have used a variety of ad hoc methods, undoubtedly using well more than three different approaches.&lt;/p>
&lt;p>Given that it&amp;rsquo;s hard to fix the problem in base R, we&amp;rsquo;ve come up with our own alternative to &lt;code>c()&lt;/code>: &lt;code>vctrs::vec_c()&lt;/code>. &lt;code>vec_c()&lt;/code>'s behaviour is governed by three main principles:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Symmetry: &lt;code>vec_c(x, y)&lt;/code> should return a type as similar as possible to &lt;code>vec_c(y, x)&lt;/code>. For example, when combining a date and a date-time you always get a date-time.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">vec_c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">today&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">now&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;2020-03-24 00:00:00 CDT&amp;#34; &amp;#34;2020-03-24 10:34:00 CDT&amp;#34;&lt;/span>
&lt;span class="nf">vec_c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">today&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;2020-03-24 10:34:00 CDT&amp;#34; &amp;#34;2020-03-24 00:00:00 CDT&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Enrichment: &lt;code>vec_c(x, y)&lt;/code> should return the richer type, where type &lt;code>&amp;lt;x&amp;gt;&lt;/code> is richer than type &lt;code>&amp;lt;y&amp;gt;&lt;/code> if &lt;code>x&lt;/code> can represent all values in &lt;code>y&lt;/code>. For example, this implies that combining an integer and double should return a double, and that combining a date and date-time should return a date-time.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">vec_c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1.5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 1.0 1.5&lt;/span>
&lt;span class="nf">vec_c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">today&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">now&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;2020-03-24 00:00:00 CDT&amp;#34; &amp;#34;2020-03-24 10:34:00 CDT&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Consistency: &lt;code>vec_c(x, y)&lt;/code> should error if &lt;code>x&lt;/code> and &lt;code>y&lt;/code> are of fundamentally different types. For example, this implies that combining a string and a number or a factor and a date should error.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">vec_c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Can&amp;#39;t combine `..1` &amp;lt;character&amp;gt; and `..2` &amp;lt;double&amp;gt;.&lt;/span>
&lt;span class="nf">vec_c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;x&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">today&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Can&amp;#39;t combine `..1` &amp;lt;factor&amp;lt;5a425&amp;gt;&amp;gt; and `..2` &amp;lt;date&amp;gt;.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="errors">Errors
&lt;a href="#errors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As a data scientist, you don&amp;rsquo;t really need to know much about the vctrs package, except that it exists and its used internally by dplyr. (As a software engineer, you might want to learn about vctrs because
&lt;a href="https://vctrs.r-lib.org/articles/s3-vector.html" target="_blank" rel="noopener">it makes it easier to create new types of vectors&lt;/a>). But vctrs is responsible for creating a number of error messages in dplyr, so it&amp;rsquo;s worth understanding their basic form.&lt;/p>
&lt;p>In this first example, we attempt to bind two data frames together where the columns have incompatible types: double and character.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df1&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">bind_rows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">df2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Can&amp;#39;t combine `..1$b` &amp;lt;double&amp;gt; and `..2$b` &amp;lt;character&amp;gt;.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note the components of the error message:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&amp;ldquo;Can&amp;rsquo;t combine&amp;rdquo; means that vctrs can&amp;rsquo;t combine double and character vectors.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>vctrs error messages always puts the &amp;ldquo;type&amp;rdquo; of the variable in &lt;code>&amp;lt;&amp;gt;&lt;/code>, like &lt;code>&amp;lt;double&amp;gt;&lt;/code>, or &lt;code>&amp;lt;character&amp;gt;&lt;/code>. I&amp;rsquo;m using type informally here (although it does have a precise definition); for many simple cases it&amp;rsquo;s the same as the class.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>bind_rows()&lt;/code> doesn&amp;rsquo;t have named arguments so vctrs uses &lt;code>..1&lt;/code> and &lt;code>..2&lt;/code> to refer to the first and second arguments. You can tell the problem is with the &lt;code>b&lt;/code> column.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>If after reading the error, you do still want to combine the data frames, you&amp;rsquo;ll need to make them compatible by manually transforming one of the columns:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df1&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">df1&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">as.character&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">bind_rows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">df2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 2 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; a b &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 1 &lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 a&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Where possible, we attempt to give you more information to solve the problem. For example, if your call to &lt;code>summarise()&lt;/code> or &lt;code>mutate()&lt;/code> returns incompatible types, we&amp;rsquo;ll tell you which groups have the problem:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span> &lt;span class="n">else&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Problem with `mutate()` input `y`.&lt;/span>
&lt;span class="c1">#&amp;gt; x Input `y` must return compatible vectors across groups&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ Input `y` is `if (g == 1) &amp;#34;a&amp;#34; else 1`.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ Result type for group 1 (g = 1): &amp;lt;character&amp;gt;.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ Result type for group 2 (g = 2): &amp;lt;double&amp;gt;.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Writing good error messages is hard, so we&amp;rsquo;ve spent a lot of time trying to make them informative. We expect them to continue to improve as we see more examples from live data analysis code.&lt;/p>
&lt;p>If you&amp;rsquo;re not sure where the errors are coming from, learning how to use the traceback (either &lt;code>traceback()&lt;/code> or &lt;code>rlang::last_error()&lt;/code>) will be helpful. I&amp;rsquo;d highly recommend Jenny Bryan&amp;rsquo;s rstudio::conf keynote on debugging:
&lt;a href="https://resources.rstudio.com/rstudio-conf-2020/object-of-type-closure-is-not-subsettable-jenny-bryan" target="_blank" rel="noopener">Object of type &amp;lsquo;closure&amp;rsquo; is not subsettable&lt;/a>.&lt;/p>
&lt;h2 id="key-changes">Key changes
&lt;a href="#key-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Using vctrs in dplyr also causes two behaviour changes. We hope that these don&amp;rsquo;t affect much existing code because they both previously generated warnings.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>When combining factors with different level sets, dplyr previously converted to a character vector with a warning. As of 1.0.0, dplyr will create a factor with the union of the individual levels:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">vec_c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;x&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;y&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] x y&lt;/span>
&lt;span class="c1">#&amp;gt; Levels: x y&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>When combining a factor and a character, dplyr previously warned about creating a character vector. It now silently creates a character vector:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">vec_c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;x&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;y&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;x&amp;#34; &amp;#34;y&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>These changes are motivated more by pragmatism than by theory. Strictly speaking, one should probably consider &lt;code>factor(&amp;quot;red&amp;quot;)&lt;/code> and &lt;code>factor(&amp;quot;male&amp;quot;)&lt;/code> to be incompatible, but this level of strictness causes much pain because character vectors can usually be used interchangeably with factors.&lt;/p>
&lt;p>Note that dplyr continues to be stricter than base R when it comes to character conversions:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;1&amp;#34; &amp;#34;2&amp;#34;&lt;/span>
&lt;span class="nf">vec_c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Can&amp;#39;t combine `..1` &amp;lt;double&amp;gt; and `..2` &amp;lt;character&amp;gt;.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this case, we don&amp;rsquo;t know whether you want a character vector or a numeric vector, so you need to decide by manually converting one of the inputs:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">vec_c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">as.integer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 1 2&lt;/span>
&lt;span class="nf">vec_c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">as.character&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;1&amp;#34; &amp;#34;2&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>dplyr 1.0.0: working within rows</title><link>https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-rowwise/</link><pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-rowwise/</guid><description>&lt;p>Today, I wanted to talk a little bit about the renewed &lt;code>rowwise()&lt;/code> function that makes it easy to perform operations &amp;ldquo;row-by-row&amp;rdquo;. I&amp;rsquo;ll show how you can use &lt;code>rowwise()&lt;/code> to compute summaries &amp;ldquo;by row&amp;rdquo;, talk about how &lt;code>rowwise()&lt;/code> is a natural pairing with list-columns, and show a couple of use cases that I think are particularly elegant. You can learn more about all of these topics in
&lt;a href="https://dplyr.tidyverse.org/dev/articles/rowwise.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;rowwise&amp;quot;)&lt;/code>&lt;/a>.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Update&lt;/strong>: as of June 1, dplyr 1.0.0 is now available on CRAN! Read
&lt;a href="https://www.tidyverse.org/blog/2020/06/dplyr-1-0-0/">all about it&lt;/a> or install it now with &lt;code>install.packages(&amp;quot;dplyr&amp;quot;)&lt;/code>.&lt;/p>
&lt;hr>
&lt;h2 id="basic-operation">Basic operation
&lt;a href="#basic-operation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>rowwise()&lt;/code> works like &lt;code>group_by()&lt;/code> in the sense that it doesn&amp;rsquo;t change what the data looks like; it changes how dplyr verbs operate on the data. Let&amp;rsquo;s see how this works with a simple example. Here I have some imaginary test results for students in a class:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">warn.conflicts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">student_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">test1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">13&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">test2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">23&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">test3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">30&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">33&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">test4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">40&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">43&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; student_id test1 test2 test3 test4&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 10 20 30 40&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 11 21 31 41&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 12 22 32 42&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 13 23 33 43&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I&amp;rsquo;d like to be able to compute the mean of the test scores for each student, but &lt;code>mutate()&lt;/code> and &lt;code>mean()&lt;/code> don&amp;rsquo;t do what I want:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test4&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; student_id test1 test2 test3 test4 avg&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 10 20 30 40 26.5&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 11 21 31 41 26.5&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 12 22 32 42 26.5&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 13 23 33 43 26.5&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The problem is that I&amp;rsquo;m getting a mean over the whole data frame, not for each student. I can resolve this problem of getting a mean for each student by creating a &amp;ldquo;row-wise&amp;rdquo; data frame with &lt;code>rowwise()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rf&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">rowwise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">student_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>rowwise()&lt;/code> doesn&amp;rsquo;t need any additional arguments unless you have variables that identify the rows, like &lt;code>student_id&lt;/code> here. Much like grouping variables, identifier variables will be automatically preserved when you &lt;code>summarise()&lt;/code> the data.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rf&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; # Rowwise: student_id&lt;/span>
&lt;span class="c1">#&amp;gt; student_id test1 test2 test3 test4&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 10 20 30 40&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 11 21 31 41&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 12 22 32 42&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 13 23 33 43&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>rf&lt;/code> &lt;em>looks&lt;/em> very similar to &lt;code>df&lt;/code>, but &lt;em>behaves&lt;/em> very differently:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rf&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test4&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; # Rowwise: student_id&lt;/span>
&lt;span class="c1">#&amp;gt; student_id test1 test2 test3 test4 avg&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 10 20 30 40 25&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 11 21 31 41 26&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 12 22 32 42 27&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 13 23 33 43 28&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>An additional advantage of &lt;code>rowwise()&lt;/code> is that it&amp;rsquo;s paired with
&lt;a href="https://dplyr.tidyverse.org/dev/reference/across.html" target="_blank" rel="noopener">&lt;code>c_across()&lt;/code>&lt;/a>, which works like &lt;code>c()&lt;/code> but uses the same tidyselect syntax as &lt;code>across()&lt;/code>. That makes it easy to operate on multiple variables:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rf&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c_across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; # Rowwise: student_id&lt;/span>
&lt;span class="c1">#&amp;gt; student_id test1 test2 test3 test4 avg&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 10 20 30 40 25&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 11 21 31 41 26&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 12 22 32 42 27&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 13 23 33 43 28&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="other-ways-of-achieving-the-same-result">Other ways of achieving the same result
&lt;a href="#other-ways-of-achieving-the-same-result">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Some summary functions have alternative ways of computing row-wise summaries that take advantage of built-in vectorisation. For example, if you wanted to compute the sum, you could use &lt;code>+&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">test1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">test2&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">test3&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">test4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; student_id test1 test2 test3 test4 total&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 10 20 30 40 100&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 11 21 31 41 104&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 12 22 32 42 108&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 13 23 33 43 112&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And you &lt;em>could&lt;/em> use the same basic idea to compute the mean:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">test1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">test2&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">test3&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">test4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; student_id test1 test2 test3 test4 avg&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 10 20 30 40 25&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 11 21 31 41 26&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 12 22 32 42 27&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 13 23 33 43 28&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Another family of summary functions have &amp;ldquo;parallel&amp;rdquo; extensions where you can provide multiple variables in the arguments:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">min&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">pmin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test4&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">max&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">pmax&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test4&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">paste&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sep&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;-&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 8&lt;/span>
&lt;span class="c1">#&amp;gt; student_id test1 test2 test3 test4 min max string &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 10 20 30 40 10 40 10-20-30-40&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 11 21 31 41 11 41 11-21-31-41&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 12 22 32 42 12 42 12-22-32-42&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 13 23 33 43 13 43 13-23-33-43&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Where these functions exist, they&amp;rsquo;ll usually be faster than &lt;code>rowwise()&lt;/code>. The advantage of &lt;code>rowwise()&lt;/code> is that it works with any function, not just those that are already vectorised.&lt;/p>
&lt;h2 id="list-columns">List-columns
&lt;a href="#list-columns">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>rowwise()&lt;/code> is useful for computing simple summaries, but its real power comes when you use it with list-columns. Because lists can contain anything, you can use list-columns to keep related objects together, regardless of what type of thing they are. List-columns give you a convenient storage mechanism and &lt;code>rowwise()&lt;/code> gives you a convenient computation mechanism.&lt;/p>
&lt;p>Let&amp;rsquo;s make those ideas concrete by creating a data frame with a list-column. A little later, we&amp;rsquo;ll come back to how you might actually get a list-column in a more realistic situation. The following data frame uses list columns to store things that would otherwise be challenging:&lt;/p>
&lt;ul>
&lt;li>&lt;code>x&lt;/code> contains vectors of different lengths.&lt;/li>
&lt;li>&lt;code>y&lt;/code> contains vectors of different types&lt;/li>
&lt;li>&lt;code>z&lt;/code> contains functions, which can&amp;rsquo;t usually live in a data frame.&lt;/li>
&lt;/ul>
&lt;!-- -->
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">6&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">TRUE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sd&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; x y z &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 &amp;lt;dbl [1]&amp;gt; &amp;lt;lgl [1]&amp;gt; &amp;lt;fn&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 2 &amp;lt;int [2]&amp;gt; &amp;lt;dbl [1]&amp;gt; &amp;lt;fn&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 3 &amp;lt;int [3]&amp;gt; &amp;lt;chr [1]&amp;gt; &amp;lt;fn&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When you have list-columns in a row-wise data frame, you can easily compute with each element of the list:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">rowwise&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">x_length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">y_type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">typeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">z_call&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">z&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` ungrouping output (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; x_length y_type z_call&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 logical 15 &lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 double 3 &lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 character 1.58&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This makes a row-wise &lt;code>mutate()&lt;/code> or &lt;code>summarise()&lt;/code> a general vectorisation tool, in the same way as the apply family in base R or the map family in purrr do. It&amp;rsquo;s now much simpler to solve a number of problems where we previously recommended learning about &lt;code>map()&lt;/code>, &lt;code>map2()&lt;/code>, &lt;code>pmap()&lt;/code> and friends.&lt;/p>
&lt;h2 id="use-cases">Use cases
&lt;a href="#use-cases">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To finish up, I wanted to show off a couple of use cases where I think &lt;code>rowwise()&lt;/code> provides a really elegant solution: simulations and modelling.&lt;/p>
&lt;h3 id="simulation">Simulation
&lt;a href="#simulation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The basic idea of using &lt;code>rowwise()&lt;/code> to perform simulation is to store all your simulation paramters in a data frame:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tribble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="o">~&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">min&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">100&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then you can either generate a list-column containing the simulated values with &lt;code>mutate()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">rowwise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">runif&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">min&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; # Rowwise: id&lt;/span>
&lt;span class="c1">#&amp;gt; id n min max data &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 3 0 1 &amp;lt;dbl [3]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 2 10 100 &amp;lt;dbl [2]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 2 100 1000 &amp;lt;dbl [2]&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or take advantage of
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-summarise/" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>'s new capabilities&lt;/a> and return one element per row:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">rowwise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">runif&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">min&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` regrouping output by &amp;#39;id&amp;#39; (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 7 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: id [3]&lt;/span>
&lt;span class="c1">#&amp;gt; id x&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 0.579&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 0.269&lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 0.120&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 29.0 &lt;/span>
&lt;span class="c1">#&amp;gt; 5 2 50.8 &lt;/span>
&lt;span class="c1">#&amp;gt; 6 3 451. &lt;/span>
&lt;span class="c1">#&amp;gt; 7 3 985.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that &lt;code>id&lt;/code> is preserved in the output here because we defined it as an identifier variable in the call to &lt;code>rowwise()&lt;/code>.&lt;/p>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/dev/articles/rowwise.html#repeated-function-calls-1" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;rowwise&amp;quot;)&lt;/code>&lt;/a> expands on this idea to show how you can generate parameter grids and vary the random distribution used in each row.&lt;/p>
&lt;h3 id="group-wise-models">Group-wise models
&lt;a href="#group-wise-models">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The new &lt;code>nest_by()&lt;/code> function works similarly to &lt;code>group_by()&lt;/code> but instead of storing the grouping data as metadata, visibly changes the structure. Now we have three rows (one for each group), and we have a list-col, &lt;code>data&lt;/code>, that stores the data for that group. Also note that the output is a &lt;code>rowwise()&lt;/code> object; this is important because it&amp;rsquo;s going to make working with that list of data frames much easier.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">by_cyl&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">mtcars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">nest_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">by_cyl&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; # Rowwise: cyl&lt;/span>
&lt;span class="c1">#&amp;gt; cyl data&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;list&amp;lt;tbl_df[,10]&amp;gt;&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 4 [11 × 10]&lt;/span>
&lt;span class="c1">#&amp;gt; 2 6 [7 × 10]&lt;/span>
&lt;span class="c1">#&amp;gt; 3 8 [14 × 10]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can use &lt;code>mutate()&lt;/code> to fit a model to each data frame:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">by_cyl&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">by_cyl&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">lm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">wt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="n">by_cyl&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; # Rowwise: cyl&lt;/span>
&lt;span class="c1">#&amp;gt; cyl data model &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;list&amp;lt;tbl_df[,10]&amp;gt;&amp;gt; &amp;lt;list&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 4 [11 × 10] &amp;lt;lm&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 2 6 [7 × 10] &amp;lt;lm&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 3 8 [14 × 10] &amp;lt;lm&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(Note that we need to wrap the output of &lt;code>lm()&lt;/code> into a list; if you forget this, the error message will remind you.)&lt;/p>
&lt;p>And then extract model summaries or coefficients with &lt;code>summarise()&lt;/code> and
&lt;a href="http://broom.tidyverse.org/" target="_blank" rel="noopener">broom&lt;/a> functions:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">by_cyl&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">broom&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">glance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">model&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` regrouping output by &amp;#39;cyl&amp;#39; (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 12&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: cyl [3]&lt;/span>
&lt;span class="c1">#&amp;gt; cyl r.squared adj.r.squared sigma statistic p.value df logLik AIC BIC&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 4 0.509 0.454 3.33 9.32 0.0137 2 -27.7 61.5 62.7&lt;/span>
&lt;span class="c1">#&amp;gt; 2 6 0.465 0.357 1.17 4.34 0.0918 2 -9.83 25.7 25.5&lt;/span>
&lt;span class="c1">#&amp;gt; 3 8 0.423 0.375 2.02 8.80 0.0118 2 -28.7 63.3 65.2&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 2 more variables: deviance &amp;lt;dbl&amp;gt;, df.residual &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="n">by_cyl&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">broom&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">tidy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">model&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` regrouping output by &amp;#39;cyl&amp;#39; (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 6 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: cyl [3]&lt;/span>
&lt;span class="c1">#&amp;gt; cyl term estimate std.error statistic p.value&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 4 (Intercept) 39.6 4.35 9.10 0.00000777&lt;/span>
&lt;span class="c1">#&amp;gt; 2 4 wt -5.65 1.85 -3.05 0.0137 &lt;/span>
&lt;span class="c1">#&amp;gt; 3 6 (Intercept) 28.4 4.18 6.79 0.00105 &lt;/span>
&lt;span class="c1">#&amp;gt; 4 6 wt -2.78 1.33 -2.08 0.0918 &lt;/span>
&lt;span class="c1">#&amp;gt; 5 8 (Intercept) 23.9 3.01 7.94 0.00000405&lt;/span>
&lt;span class="c1">#&amp;gt; 6 8 wt -2.19 0.739 -2.97 0.0118&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>dplyr 1.0.0: working across columns</title><link>https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-colwise/</link><pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-colwise/</guid><description>&lt;p>Today, I wanted to talk a little bit about the new &lt;code>across()&lt;/code> function that makes it easy to perform the same operation on multiple columns.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Update&lt;/strong>: as of June 1, dplyr 1.0.0 is now available on CRAN! Read
&lt;a href="https://www.tidyverse.org/blog/2020/06/dplyr-1-0-0/">all about it&lt;/a> or install it now with &lt;code>install.packages(&amp;quot;dplyr&amp;quot;)&lt;/code>.&lt;/p>
&lt;hr>
&lt;h2 id="motivation">Motivation
&lt;a href="#motivation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>It&amp;rsquo;s often useful to perform the same operation on multiple columns, but copying and pasting is both tedious and error prone:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">g2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now rewrite such code using &lt;code>across()&lt;/code>, which lets you apply a transformation to multiple variables selected with the same syntax as
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-select-rename-relocate/#select-and-renaming" target="_blank" rel="noopener">&lt;code>select()&lt;/code> and &lt;code>rename()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">g2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1"># or with a function&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">g2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.numeric&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You might be familiar with &lt;code>summarise_if()&lt;/code> and &lt;code>summarise_at()&lt;/code> which we previously recommended for this sort of operation. Later in the blog post we&amp;rsquo;ll come back to why we now prefer &lt;code>across()&lt;/code>. But for now, let&amp;rsquo;s dive into the basics of &lt;code>across()&lt;/code>.&lt;/p>
&lt;h2 id="basic-usage">Basic usage
&lt;a href="#basic-usage">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>across()&lt;/code> has two primary arguments:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The first argument, &lt;code>.cols&lt;/code>, selects the columns you want to operate on. It uses the tidy select syntax so you can pick columns by position, name, function of name, type, or any combination thereof using Boolean operators.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The second argument, &lt;code>.fns&lt;/code>, is a function or list of functions to apply to each column. You can use also purrr style formulas like &lt;code>~ .x / 2&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Here are a couple of examples of &lt;code>across()&lt;/code> used with &lt;code>summarise()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">warn.conflicts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.character&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">n_distinct&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 8&lt;/span>
&lt;span class="c1">#&amp;gt; name hair_color skin_color eye_color sex gender homeworld species&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 87 13 31 15 5 3 49 38&lt;/span>
&lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">n&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">gender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">homeworld&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">n_distinct&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` ungrouping output (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 9 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; species sex gender homeworld&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Droid 1 2 3&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Gungan 1 1 1&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Human 2 2 16&lt;/span>
&lt;span class="c1">#&amp;gt; 4 Kaminoan 2 2 1&lt;/span>
&lt;span class="c1">#&amp;gt; 5 Mirialan 1 1 1&lt;/span>
&lt;span class="c1">#&amp;gt; 6 Twi&amp;#39;lek 2 2 1&lt;/span>
&lt;span class="c1">#&amp;gt; 7 Wookiee 1 1 1&lt;/span>
&lt;span class="c1">#&amp;gt; 8 Zabrak 1 1 2&lt;/span>
&lt;span class="c1">#&amp;gt; 9 &amp;lt;NA&amp;gt; 1 1 3&lt;/span>
&lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">homeworld&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">n&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.numeric&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">n&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` ungrouping output (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 10 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; homeworld height mass birth_year n&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Alderaan 176. 64 43 3&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Corellia 175 78.5 25 2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Coruscant 174. 50 91 3&lt;/span>
&lt;span class="c1">#&amp;gt; 4 Kamino 208. 83.1 31.5 3&lt;/span>
&lt;span class="c1">#&amp;gt; 5 Kashyyyk 231 124 200 2&lt;/span>
&lt;span class="c1">#&amp;gt; 6 Mirial 168 53.1 49 2&lt;/span>
&lt;span class="c1">#&amp;gt; 7 Naboo 175. 64.2 55 11&lt;/span>
&lt;span class="c1">#&amp;gt; 8 Ryloth 179 55 48 2&lt;/span>
&lt;span class="c1">#&amp;gt; 9 Tatooine 170. 85.4 54.6 10&lt;/span>
&lt;span class="c1">#&amp;gt; 10 &amp;lt;NA&amp;gt; 139. 82 334. 10&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="other-cool-features">Other cool features
&lt;a href="#other-cool-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>You&amp;rsquo;ll find a lot more about &lt;code>across()&lt;/code> in
&lt;a href="https://dplyr.tidyverse.org/dev/articles/colwise.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;colwise&amp;quot;)&lt;/code>&lt;/a>. There are three cool features you might be particularly interested in:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>You can use it with
&lt;a href="https://dplyr.tidyverse.org/dev/articles/colwise.html#multiple-functions" target="_blank" rel="noopener">multiple summary functions&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can use it with
&lt;a href="https://dplyr.tidyverse.org/dev/articles/colwise.html#other-verbs" target="_blank" rel="noopener">any dplyr verb&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If needed, you can access the name of the column currently being processed with
&lt;a href="https://dplyr.tidyverse.org/dev/articles/colwise.html#current-column" target="_blank" rel="noopener">&lt;code>cur_column()&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="why-across">Why &lt;code>across()&lt;/code>?
&lt;a href="#why-across">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you&amp;rsquo;ve tackled this problem with an older version of dplyr, you might&amp;rsquo;ve used one of the functions with an &lt;code>_if&lt;/code>, &lt;code>_at&lt;/code>, or &lt;code>_all&lt;/code> suffix. These functions solved a pressing need and are used by many people, but are now superseded. This means that they&amp;rsquo;ll stay around, but will only receive critical bug fixes.&lt;/p>
&lt;p>Why did we decide to move away from these functions in favour of &lt;code>across()&lt;/code>?&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;code>across()&lt;/code> makes it possible to compute useful summaries that were previously impossible. For example, it&amp;rsquo;s now easy to summarise numeric vectors with one function, factors with another, and still compute the number of rows in each group:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">g2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.numeric&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.factor&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">nlevels&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">n&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>across()&lt;/code> reduces the number of functions that dplyr needs to provide. This makes dplyr easier for you to use (because there are fewer functions to remember) and easier for us to develop (since we only need to implement one function for each new verb, not four).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>With the &lt;code>where()&lt;/code> helper, &lt;code>across()&lt;/code> unifies &lt;code>_if&lt;/code> and &lt;code>_at&lt;/code> semantics, allowing combinations that used to be impossible. For example, you can now transform all numeric columns whose name begins with &amp;ldquo;x&amp;rdquo;: &lt;code>across(where(is.numeric) &amp;amp; starts_with(&amp;quot;x&amp;quot;))&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>across()&lt;/code> doesn&amp;rsquo;t need &lt;code>vars()&lt;/code>. The &lt;code>_at()&lt;/code> functions are the only place in dplyr where you have to use &lt;code>vars()&lt;/code>, which makes them unusual, and hence harder to learn and remember.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Why did it take it long to discover &lt;code>across()&lt;/code>? Surprisingly, the key idea that makes &lt;code>across()&lt;/code> works came out of our low-level work on the
&lt;a href="http://vctrs.r-lib.org/" target="_blank" rel="noopener">vctrs&lt;/a> package, where we learnt that you can have a column of a data frame that is itself a data frame. It&amp;rsquo;s a bummer that we had a few false starts before we discovered &lt;code>across()&lt;/code>, but even with hindsight, I don&amp;rsquo;t see how we could&amp;rsquo;ve skipped the intermediate steps.&lt;/p>
&lt;h2 id="converting-existing-code">Converting existing code
&lt;a href="#converting-existing-code">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you want to update your existing code to use &lt;code>across()&lt;/code> instead of the &lt;code>_if&lt;/code>, &lt;code>_at&lt;/code>, or &lt;code>_all()&lt;/code> functions, it&amp;rsquo;s generally straightforward:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Strip the &lt;code>_if()&lt;/code>, &lt;code>_at()&lt;/code> and &lt;code>_all()&lt;/code> suffix off the function.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Call &lt;code>across()&lt;/code>. The first argument will be:&lt;/p>
&lt;ol>
&lt;li>For &lt;code>_if()&lt;/code>, the old second argument.&lt;/li>
&lt;li>For &lt;code>_at()&lt;/code>, the old second argument. If there was a single element in &lt;code>vars()&lt;/code> you can remove &lt;code>vars()&lt;/code>, otherwise replace it with &lt;code>c()&lt;/code>.&lt;/li>
&lt;li>For &lt;code>_all()&lt;/code>, &lt;code>everything()&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>The subsequent arguments can be copied as is.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Here are a few examples of this process:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate_if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.numeric&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># -&amp;gt;&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.numeric&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate_at&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">vars&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;y&amp;#34;&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># -&amp;gt;&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;y&amp;#34;&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate_all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># -&amp;gt;&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">everything&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you&amp;rsquo;ve used multiple &lt;code>_if&lt;/code>/&lt;code>_at&lt;/code>/&lt;code>_all&lt;/code> functions in a row, you should also consider if it&amp;rsquo;s now possible to collapse them into a single call, using the new features of &lt;code>across()&lt;/code>.&lt;/p>
&lt;p>Again, you don&amp;rsquo;t need to worry about these functions going away in the short-term, but it&amp;rsquo;s good practice to keep your code up-to-date. Note, however, that &lt;code>across()&lt;/code> currently has a little more overhead than the older approaches so it will be a little slower. We have a plan to improve the performance in dplyr 1.1.0.&lt;/p></description></item><item><title>dplyr 1.0.0: select, rename, relocate</title><link>https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-select-rename-relocate/</link><pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-select-rename-relocate/</guid><description>&lt;p>
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-is-coming-soon/" target="_blank" rel="noopener">dplyr 1.0.0 is coming soon&lt;/a>, and last week we showed how
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-summarise/" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code> is growing&lt;/a>. Today, I wanted to talk a little bit about functions for selecting, renaming, and relocating columns.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Update&lt;/strong>: as of June 1, dplyr 1.0.0 is now available on CRAN! Read
&lt;a href="https://www.tidyverse.org/blog/2020/06/dplyr-1-0-0/">all about it&lt;/a> or install it now with &lt;code>install.packages(&amp;quot;dplyr&amp;quot;)&lt;/code>.&lt;/p>
&lt;hr>
&lt;h3 id="update-notice">&lt;em>Update notice&lt;/em>
&lt;a href="#update-notice">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>We have updated the syntax for selecting with a function. Where you would use &lt;code>data %&amp;gt;% select(is.numeric)&lt;/code> in the early development versions, you must now use &lt;code>data %&amp;gt;% select(where(is.numeric))&lt;/code>. We made this change to avoid puzzling error messages when a variable is unexpectedly missing from the data frame and there is a corresponding function in the environment:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># Attempts to invoke `data()` function&lt;/span>
&lt;span class="nf">data.frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The rest of this post has been updated accordingly.&lt;/p>
&lt;h2 id="select-and-renaming">Select and renaming
&lt;a href="#select-and-renaming">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>select()&lt;/code> and &lt;code>rename()&lt;/code> are now significantly more flexible thanks to enhancements to the
&lt;a href="https://tidyselect.r-lib.org/" target="_blank" rel="noopener">tidyselect&lt;/a> package. There are now five ways to select variables in &lt;code>select()&lt;/code> and &lt;code>rename()&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>By &lt;strong>position&lt;/strong>: &lt;code>df %&amp;gt;% select(1, 5, 10)&lt;/code> or &lt;code>df %&amp;gt;% select(1:4)&lt;/code>. Selecting by position is not generally recommended, but &lt;code>rename()&lt;/code>ing by position can be very useful, particularly if the variable names are very long, non-syntactic, or duplicated.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>By &lt;strong>name&lt;/strong>: &lt;code>df %&amp;gt;% select(a, e, j)&lt;/code>, &lt;code>df %&amp;gt;% select(c(a, e, j))&lt;/code> or &lt;code>df %&amp;gt;% select(a:d)&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>By &lt;strong>function of name&lt;/strong>: &lt;code>df %&amp;gt;% select(starts_with(&amp;quot;x&amp;quot;))&lt;/code>, or &lt;code>df %&amp;gt;% select(ends_with(&amp;quot;s&amp;quot;))&lt;/code>. You can also use helpers &lt;code>contains()&lt;/code> and &lt;code>matches()&lt;/code> for more flexibly matching.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>By &lt;strong>type&lt;/strong>: &lt;code>df %&amp;gt;% select(where(is.numeric))&lt;/code>, &lt;code>df %&amp;gt;% select(where(is.factor))&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>By &lt;strong>any combination&lt;/strong> of the above using the Boolean operators &lt;code>!&lt;/code>, &lt;code>&amp;amp;&lt;/code>, and &lt;code>|&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>df %&amp;gt;% select(!where(is.factor))&lt;/code>: selects all non-factor variables.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>df %&amp;gt;% select(where(is.numeric) &amp;amp; starts_with(&amp;quot;x&amp;quot;))&lt;/code>: selects all numeric variables that starts with &amp;ldquo;x&amp;rdquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>df %&amp;gt;% select(starts_with(&amp;quot;a&amp;quot;) | ends_with(&amp;quot;z&amp;quot;))&lt;/code>: selects all variables that starts with &amp;ldquo;a&amp;rdquo; or ends with &amp;ldquo;z&amp;rdquo;.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>(We owe a debt of gratitude to
&lt;a href="http://irene.rbind.io/" target="_blank" rel="noopener">Irene Steves&lt;/a>, who put together a
&lt;a href="https://gist.github.com/isteves/afb7ac5a3b185f600d7f130d99142174" target="_blank" rel="noopener">detailed analysis&lt;/a> showing the challenges of the previous approach, and motivating us to do better.)&lt;/p>
&lt;p>Here&amp;rsquo;s a few examples of how you might use these techniques in with some toy data:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">warn.conflicts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Rename by position to fix a data frame with duplicated column names&lt;/span>
&lt;span class="n">df1&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.name_repair&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;minimal&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df1&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; a a&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 5&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 4&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 3&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 2&lt;/span>
&lt;span class="c1">#&amp;gt; 5 5 1&lt;/span>
&lt;span class="n">df1&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">rename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; a b&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 5&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 4&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 3&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 2&lt;/span>
&lt;span class="c1">#&amp;gt; 5 5 1&lt;/span>
&lt;span class="n">df2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Keep numeric columns&lt;/span>
&lt;span class="n">df2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.numeric&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; x1 x3 y2 y4&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 2 3 4&lt;/span>
&lt;span class="c1"># Or all columns that aren&amp;#39;t character&lt;/span>
&lt;span class="n">df2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.character&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; x1 x3 y2 y4&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 2 3 4&lt;/span>
&lt;span class="c1"># Or columns that start with x and are numeric&lt;/span>
&lt;span class="n">df2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;x&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.numeric&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; x1 x3&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="programming">Programming
&lt;a href="#programming">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;ve also made &lt;code>select()&lt;/code> and &lt;code>rename()&lt;/code> a little easier to program with when you have a character vector of variable names, thanks to the new &lt;code>any_of()&lt;/code> and &lt;code>all_of()&lt;/code> functions. They both take a character vector of variable names:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">vars&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;x1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;x2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;y1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;z&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">any_of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vars&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; x1 x2 y1 &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a b&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>any_of()&lt;/code> supersedes the poorly named &lt;code>one_of()&lt;/code> function; I have no idea why I called it &lt;code>one_of()&lt;/code> because it&amp;rsquo;s always selected multiple variables!&lt;/p>
&lt;p>They differ only in what happens when variables are not present in the data frame. Where &lt;code>any_of()&lt;/code> silently ignores the missing columns, &lt;code>all_of()&lt;/code> throws an error:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vars&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Can&amp;#39;t subset columns that don&amp;#39;t exist.&lt;/span>
&lt;span class="c1">#&amp;gt; x Column `z` doesn&amp;#39;t exist.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can learn more about programming with tidy selection in
&lt;a href="https://dplyr.tidyverse.org/dev/reference/dplyr_tidy_select.html" target="_blank" rel="noopener">&lt;code>?dplyr_tidy_select&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="renaming-programatically">Renaming programatically
&lt;a href="#renaming-programatically">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The new &lt;code>rename_with()&lt;/code> makes it easier to rename variables programmatically:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">rename_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">toupper&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 7&lt;/span>
&lt;span class="c1">#&amp;gt; X1 X2 X3 Y1 Y2 Y3 Y4&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a 2 b 3 c 4&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(This pairs well with functions like
&lt;a href="http://sfirke.github.io/janitor/reference/make_clean_names.html" target="_blank" rel="noopener">&lt;code>janitor::make_clean_names()&lt;/code>&lt;/a>.)&lt;/p>
&lt;p>You can optionally choose which columns to apply the transformation to:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">rename_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">toupper&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;x&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 7&lt;/span>
&lt;span class="c1">#&amp;gt; X1 X2 X3 y1 y2 y3 y4&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a 2 b 3 c 4&lt;/span>
&lt;span class="n">df2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">rename_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">toupper&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.numeric&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 7&lt;/span>
&lt;span class="c1">#&amp;gt; X1 x2 X3 y1 Y2 y3 Y4&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a 2 b 3 c 4&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>rename_with()&lt;/code> supersedes &lt;code>rename_if()&lt;/code> and &lt;code>rename_at()&lt;/code>; we&amp;rsquo;ll talk more about the other &lt;code>_if()&lt;/code>, &lt;code>_at()&lt;/code>, and &lt;code>_all()&lt;/code> functions in the near future.&lt;/p>
&lt;h2 id="relocate">&lt;code>relocate()&lt;/code>
&lt;a href="#relocate">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>For a long time, people have asked an easy way to change the order of columns in data frame. It&amp;rsquo;s always been possible to perform some transformations with &lt;code>select()&lt;/code>, but it only worked for simple moves, and felt a bit hacky. dplyr now has a specialised function for moving columns around: &lt;code>relocate()&lt;/code>. The most common need is to move variables to the front, so that&amp;rsquo;s the default behaviour:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df3&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df3&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">relocate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; y z w x&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 a b 0 1&lt;/span>
&lt;span class="n">df3&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">relocate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.character&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; y z w x&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 a b 0 1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(It uses the same syntax as &lt;code>select()&lt;/code> and &lt;code>rename()&lt;/code> so you can use arbitrarily complex expressions to pick which variables you want to move.)&lt;/p>
&lt;p>If you want to move columns to a different position use &lt;code>.before&lt;/code> or &lt;code>.after&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df3&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">relocate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.after&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; x y w z &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a 0 b&lt;/span>
&lt;span class="n">df3&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">relocate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.before&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; x w y z &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 0 a b&lt;/span>
&lt;span class="c1"># If you want to move columns to the right hand side use `last_col()`&lt;/span>
&lt;span class="n">df3&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">relocate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.after&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">last_col&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; x y z w&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a b 0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="column-functions">Column functions
&lt;a href="#column-functions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Together these three functions form a family of functions for working with columns:&lt;/p>
&lt;ul>
&lt;li>&lt;code>select()&lt;/code> changes membership.&lt;/li>
&lt;li>&lt;code>rename()&lt;/code> or &lt;code>rename_with()&lt;/code> to changes names.&lt;/li>
&lt;li>&lt;code>relocate()&lt;/code> to changes position.&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s interesting to think about how these compare to their row-based equivalents: &lt;code>select()&lt;/code> is analogous to &lt;code>filter()&lt;/code>, and &lt;code>relocate()&lt;/code> to &lt;code>arrange()&lt;/code>. There there&amp;rsquo;s no row-wise equivalent to &lt;code>rename()&lt;/code> because in the tidyverse rows don&amp;rsquo;t have names.&lt;/p></description></item><item><title>dplyr 1.0.0: new `summarise()` features</title><link>https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-summarise/</link><pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-summarise/</guid><description>&lt;p>As we&amp;rsquo;ve mentioned,
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-is-coming-soon/" target="_blank" rel="noopener">dplyr 1.0.0 is coming soon&lt;/a>. Today, we&amp;rsquo;ve started the official release process by notifying maintainers of packages that have problems with dplyr 1.0.0, and we&amp;rsquo;re planning for a CRAN release six weeks later, on May 1. This post is the first in a series that will introduce you to new features in dplyr 1.0.0. Today, I&amp;rsquo;ll start with some big changes to &lt;code>summarise()&lt;/code> that make it significantly more powerful.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Update&lt;/strong>: as of June 1, dplyr 1.0.0 is now available on CRAN! Read
&lt;a href="https://www.tidyverse.org/blog/2020/06/dplyr-1-0-0/">all about it&lt;/a> or install it now with &lt;code>install.packages(&amp;quot;dplyr&amp;quot;)&lt;/code>.&lt;/p>
&lt;hr>
&lt;h2 id="multiple-rows-and-columns">Multiple rows and columns
&lt;a href="#multiple-rows-and-columns">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Two big changes make &lt;code>summarise()&lt;/code> much more flexible. A single summary expression can now return:&lt;/p>
&lt;ul>
&lt;li>A vector of any length, creating multiple rows.&lt;/li>
&lt;li>A data frame, creating multiple columns.&lt;/li>
&lt;/ul>
&lt;p>To get a sense for what this means, take this toy dataset:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">warn.conflicts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">grp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">each&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">-0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1.5&lt;/span>&lt;span class="p">)),&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">)),&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 10 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; grp x y&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 -1.65 -0.304 &lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 0.00532 0.879 &lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 -2.69 2.32 &lt;/span>
&lt;span class="c1">#&amp;gt; 4 1 -0.256 -1.38 &lt;/span>
&lt;span class="c1">#&amp;gt; 5 1 0.372 0.762 &lt;/span>
&lt;span class="c1">#&amp;gt; 6 2 1.72 -0.932 &lt;/span>
&lt;span class="c1">#&amp;gt; 7 2 -2.73 -0.261 &lt;/span>
&lt;span class="c1">#&amp;gt; 8 2 -0.371 -0.0263&lt;/span>
&lt;span class="c1">#&amp;gt; 9 2 -0.366 0.271 &lt;/span>
&lt;span class="c1">#&amp;gt; 10 2 -0.424 -0.457&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now use summaries that return multiple values:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">grp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rng&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` regrouping output by &amp;#39;grp&amp;#39; (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: grp [2]&lt;/span>
&lt;span class="c1">#&amp;gt; grp rng&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 -2.69 &lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 0.372&lt;/span>
&lt;span class="c1">#&amp;gt; 3 2 -2.73 &lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 1.72&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or return multiple columns from a single summary expression:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">grp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">min&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">mean&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` ungrouping output (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 2 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; grp min mean&lt;/span>
&lt;span class="c1">#&amp;gt; * &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 -2.69 -0.843&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 -2.73 -0.434&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(This isn&amp;rsquo;t very useful when used directly, but as you&amp;rsquo;ll see shortly, it&amp;rsquo;s really useful inside of functions.)&lt;/p>
&lt;p>To put this another way, before dplyr 1.0.0, each summary had to be a single value (one row, one column), but now we&amp;rsquo;ve lifted that restriction so each summary can generate a rectangle of arbitrary size. This is a big change to &lt;code>summarise()&lt;/code> but it should have minimal impact on existing code because it &lt;em>broadens&lt;/em> the interface: all existing code will continue to work, and a number of inputs that would have previously errored now work.&lt;/p>
&lt;h2 id="quantiles">Quantiles
&lt;a href="#quantiles">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To demonstrate this new flexibility in a more useful situation, let&amp;rsquo;s take a look at &lt;code>quantile()&lt;/code>. &lt;code>quantile()&lt;/code> was hard to use previously because it returns multiple values. Now it&amp;rsquo;s straightforward:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">grp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">quantile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` regrouping output by &amp;#39;grp&amp;#39; (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 6 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: grp [2]&lt;/span>
&lt;span class="c1">#&amp;gt; grp x q&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 -1.65 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 -0.256 0.5 &lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 0.00532 0.75&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 -0.424 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 5 2 -0.371 0.5 &lt;/span>
&lt;span class="c1">#&amp;gt; 6 2 -0.366 0.75&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It would be nice to be able to reduce the duplication in this code so that we don&amp;rsquo;t have to type the quantile values twice. We can now write a simple function because summary expressions can now be data frames or tibbles:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">quibble&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">quantile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">grp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">quibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` regrouping output by &amp;#39;grp&amp;#39; (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 6 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: grp [2]&lt;/span>
&lt;span class="c1">#&amp;gt; grp x q&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 -1.65 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 -0.256 0.5 &lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 0.00532 0.75&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 -0.424 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 5 2 -0.371 0.5 &lt;/span>
&lt;span class="c1">#&amp;gt; 6 2 -0.366 0.75&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the past, one of the challenges of writing this sort of function was naming the columns. For example, when you call &lt;code>quibble(y)&lt;/code> it&amp;rsquo;d be nice if you could get columns &lt;code>y&lt;/code> and &lt;code>y_q&lt;/code>, rather than &lt;code>x&lt;/code> and &lt;code>x_q&lt;/code>. Now, thanks to the recent combination of
&lt;a href="https://www.tidyverse.org/blog/2020/02/glue-strings-and-tidy-eval/" target="_blank" rel="noopener">glue and tidy evaluation&lt;/a>, that&amp;rsquo;s easy to implement:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">quibble2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{{ x }}&amp;#34;&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">quantile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;{{ x }}_q&amp;#34;&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">grp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">quibble2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` regrouping output by &amp;#39;grp&amp;#39; (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 6 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: grp [2]&lt;/span>
&lt;span class="c1">#&amp;gt; grp y y_q&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 -0.304 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 0.762 0.5 &lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 0.879 0.75&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 -0.457 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 5 2 -0.261 0.5 &lt;/span>
&lt;span class="c1">#&amp;gt; 6 2 -0.0263 0.75&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>One note of caution: naming the output columns in a function like this is a surprisingly complex task, we&amp;rsquo;re not yet sure what the best approach is. Expect to hear more about this as we continue to think about and experiment with it.&lt;/p>
&lt;h2 id="data-frame-columns">Data-frame columns
&lt;a href="#data-frame-columns">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;ve been careful not to name the result of &lt;code>quibble()&lt;/code> in the code above. That&amp;rsquo;s because when we leave the name off, the data frame result is automatically &lt;strong>unpacked&lt;/strong> so each column returned by &lt;code>quibble()&lt;/code> becomes a column in the result. What happens if we name the output?&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">out&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">grp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">quibble2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` regrouping output by &amp;#39;grp&amp;#39; (override with `.groups` argument)&lt;/span>
&lt;span class="n">out&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: grp [2]&lt;/span>
&lt;span class="c1">#&amp;gt; grp y$y $y_q&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 -0.304 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 0.879 0.75&lt;/span>
&lt;span class="c1">#&amp;gt; 3 2 -0.457 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 -0.0263 0.75&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Look carefully at the output - you&amp;rsquo;ll see a &lt;code>$&lt;/code> in the column names. This lets you know that something weird is going on and you have what we call a &lt;strong>df-column&lt;/strong>; a column of a data frame that is itself a data frame!&lt;/p>
&lt;p>You can see the structure a little better with &lt;code>str()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; tibble [4 × 2] (S3: grouped_df/tbl_df/tbl/data.frame)&lt;/span>
&lt;span class="c1">#&amp;gt; $ grp: int [1:4] 1 1 2 2&lt;/span>
&lt;span class="c1">#&amp;gt; $ y : tibble [4 × 2] (S3: tbl_df/tbl/data.frame)&lt;/span>
&lt;span class="c1">#&amp;gt; ..$ y : Named num [1:4] -0.3037 0.879 -0.457 -0.0263&lt;/span>
&lt;span class="c1">#&amp;gt; .. ..- attr(*, &amp;#34;names&amp;#34;)= chr [1:4] &amp;#34;25%&amp;#34; &amp;#34;75%&amp;#34; &amp;#34;25%&amp;#34; &amp;#34;75%&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; ..$ y_q: num [1:4] 0.25 0.75 0.25 0.75&lt;/span>
&lt;span class="c1">#&amp;gt; - attr(*, &amp;#34;groups&amp;#34;)= tibble [2 × 2] (S3: tbl_df/tbl/data.frame)&lt;/span>
&lt;span class="c1">#&amp;gt; ..$ grp : int [1:2] 1 2&lt;/span>
&lt;span class="c1">#&amp;gt; ..$ .rows: list&amp;lt;int&amp;gt; [1:2] &lt;/span>
&lt;span class="c1">#&amp;gt; .. ..$ : int [1:2] 1 2&lt;/span>
&lt;span class="c1">#&amp;gt; .. ..$ : int [1:2] 3 4&lt;/span>
&lt;span class="c1">#&amp;gt; .. ..@ ptype: int(0) &lt;/span>
&lt;span class="c1">#&amp;gt; ..- attr(*, &amp;#34;.drop&amp;#34;)= logi TRUE&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And you can see that &lt;code>y&lt;/code> is indeed a data frame by extracting it:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">out&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">y&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; y y_q&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 -0.304 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 2 0.879 0.75&lt;/span>
&lt;span class="c1">#&amp;gt; 3 -0.457 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 4 -0.0263 0.75&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And of course, you can dig still deeper to get the individual values:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">out&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">y&lt;/span>
&lt;span class="c1">#&amp;gt; 25% 75% 25% 75% &lt;/span>
&lt;span class="c1">#&amp;gt; -0.30369938 0.87898204 -0.45703741 -0.02630095&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>These df-columns are simultaneously esoteric and commonplace. On the one hand they are an oddity of data frames that has existed for a long time, but has been used in very few places. On the other hand, they are very closely related to merged column headers, which, judging by how often they&amp;rsquo;re found in spreadsheets, are an incredibly popular tool. Our hope is that they are mostly kept under the covers in dplyr 1.0.0, but you can still deliberately choose to access them if you&amp;rsquo;re interested.&lt;/p>
&lt;h2 id="non-summaries">Non-summaries
&lt;a href="#non-summaries">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In combination with
&lt;a href="http://dplyr.tidyverse.org/dev/articles/rowwise.html" target="_blank" rel="noopener">&lt;code>rowwise()&lt;/code>&lt;/a> (more on that in a future blog post), &lt;code>summarise()&lt;/code> is now sufficiently powerful to replace many workflows that previously required a &lt;code>map()&lt;/code> or &lt;code>apply()&lt;/code> function.&lt;/p>
&lt;p>For example, to read all the all the &lt;code>.csv&lt;/code> files in the current directory, you could write:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">dir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pattern&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;\\.csv$&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">rowwise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">read_csv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I feel deeply ambivalent about this code: it seems rather forced to claim that &lt;code>read.csv()&lt;/code> computes a summary of a file path, but it&amp;rsquo;s rather elegant pattern for reading in many files into a tibble.&lt;/p>
&lt;h2 id="previous-approaches">Previous approaches
&lt;a href="#previous-approaches">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There were a couple of previous approach to solving the quantile problem illustrated above. One way was to create a list-column and then unnest it:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">grp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">quibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">))))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="n">tidyr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">unnest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; `summarise()` ungrouping output (override with `.groups` argument)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; grp x q&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 -0.304 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 0.879 0.75&lt;/span>
&lt;span class="c1">#&amp;gt; 3 2 -0.457 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 -0.0263 0.75&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or to use &lt;code>do()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">grp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">do&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">quibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.$y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: grp [2]&lt;/span>
&lt;span class="c1">#&amp;gt; grp x q&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 -0.304 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 0.879 0.75&lt;/span>
&lt;span class="c1">#&amp;gt; 3 2 -0.457 0.25&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 -0.0263 0.75&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We prefer the new &lt;code>summarise()&lt;/code> approach because it&amp;rsquo;s concise, doesn&amp;rsquo;t require learning about list-columns and unnesting, and uses a familiar syntax.&lt;/p></description></item><item><title>dplyr 1.0.0 is coming soon</title><link>https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-is-coming-soon/</link><pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-is-coming-soon/</guid><description>&lt;p>We&amp;rsquo;re very excited to announce the impending arrival of dplyr 1.0.0. We haven&amp;rsquo;t started the official release process yet (where we officially inform maintainers), but that is likely to start in the next week or two, and then dplyr 1.0.0 is likely to be submitted to CRAN 4-6 weeks after that.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Update&lt;/strong>: as of June 1, dplyr 1.0.0 is now available on CRAN! Read
&lt;a href="https://www.tidyverse.org/blog/2020/06/dplyr-1-0-0/">all about it&lt;/a> or install it now with &lt;code>install.packages(&amp;quot;dplyr&amp;quot;)&lt;/code>.&lt;/p>
&lt;hr>
&lt;p>The goal of this blog post is let you know that dplyr 1.0.0 is coming, discuss some of the big changes, and to encourage early adopters to try it out and help us find problems that we&amp;rsquo;ve missed. This is the first of a series of blog posts that will lead up to the final release, so stay tuned for more info.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="new-features">New features
&lt;a href="#new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>dplyr 1.0.0 has a &lt;em>lot&lt;/em> of new features which we&amp;rsquo;ll discuss in more detail in future posts. For now, here&amp;rsquo;s a rough overview to get you started:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Much better support for row-wise operations:
&lt;a href="https://dplyr.tidyverse.org/dev/articles/rowwise.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;rowwise&amp;quot;)&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A new, simpler, approach to col-wise operations:
&lt;a href="https://dplyr.tidyverse.org/dev/articles/colwise.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;colwise&amp;quot;)&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>summarise()&lt;/code> can now easily create multiple colums and/or multiple rows from a single summary:
&lt;a href="https://dplyr.tidyverse.org/dev/reference/summarise.html" target="_blank" rel="noopener">&lt;code>?summarise&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>select()&lt;/code> can select columns based on their type, and has a new syntax that better matches how you describe selections in English:
&lt;a href="https://dplyr.tidyverse.org/dev/reference/select.html" target="_blank" rel="noopener">&lt;code>?select&lt;/code>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A new &lt;code>relocate()&lt;/code> verb makes it easier change the position of columns:
&lt;a href="https://dplyr.tidyverse.org/dev/reference/relocate.html" target="_blank" rel="noopener">&lt;code>?relocate&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Thanks to new rlang and dplyr features, and new a vocabulary, it&amp;rsquo;s considerably easier to program with dplyr:
&lt;a href="https://dplyr.tidyverse.org/dev/articles/programming.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;programming&amp;quot;)&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="dplyr-internals">dplyr internals
&lt;a href="#dplyr-internals">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Accompanying these user visible changes is much work behind the scenes. Most notably dplyr now has a completely new implementation based on the
&lt;a href="http://vctrs.r-lib.org/" target="_blank" rel="noopener">vctrs package&lt;/a> rather than custom C++ code. vctrs is a low-level package for principled and high-performance manipulation of R vectors. It&amp;rsquo;s not something that you will use directly, but it&amp;rsquo;s becoming an increasingly important part of the foundations of the tidyverse.&lt;/p>
&lt;p>Using vctrs in dplyr has a number advantages:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>It allows much more of dplyr to be implemented in R, which enables faster prototyping, which is why this version comes with the first new major verbs since dplyr 0.3.0!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It makes dplyr more consistent with the rest of the tidyverse, particularly
&lt;a href="https://www.tidyverse.org/blog/2019/09/tidyr-1-0-0/" target="_blank" rel="noopener">tidyr 1.0.0&lt;/a>, which is also implemented on top of vctrs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We benefit from a standardised approach to handling custom (S3) vector types. This mostly a long-term benefit, but it makes dplyr substantially easier to extend from the outside, and I expect it will facilitate a much richer ecosystem of packages surrounding dplyr, in the same way that
&lt;a href="https://blog.rstudio.com/2015/12/21/ggplot2-2-0-0/" target="_blank" rel="noopener">ggplot2 2.0.0&lt;/a> enabled ggplot2 extension packages to flourish.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It allows us to drop the expensive BH and Rcpp dependencies, and to generally reduce the amount of C++ needed. This makes compilation much faster and makes it easier to build dplyr in low memory environments.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Of course, this change also comes with some downsides:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The standard coercion rules implemented in vctrs are a little different from existing dplyr rules, and some existing code will return different results. The biggest changes are how factors and character vectors are handled (we now produce fewer warnings and more factors), but there will be other changes, particularly in edge cases where (for example) you might be trying to combine a date and factor. We worked hard on informative error messages, but this is going to cause some pain.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We have basically reimplemented every single dplyr function from first principles. While we have been careful and do have an extensive set of tests to call upon, it is likely that some new bugs have will have slipped in. One goal of this blog post is to encourage the adventurous to try out dplyr today and report bugs so those who wait until the CRAN release won&amp;rsquo;t see them.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>There may be some performance decreases. We&amp;rsquo;ve put in quite a lot of time to ensure most performance changes are positive or only slightly negative, but we may have missed some cases. Please let us know if you notice dplyr code that is substantially slower in this version.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Overall, we believe that the upsides to using vctrs outweigh the downsides, particularly in the long term as we use vctrs to power more and more of the tidyverse. There will be pain, but we hope to keep it as small as possible by ripping the band aid off quickly. After this release, dplyr will be a 1.0.0, which means that you should expect very few breaking changes in the future. We&amp;rsquo;ll continue to add new functions and arguments but will be much more conservative about modifying or removing features.&lt;/p>
&lt;p>If the potential for changes makes you nervous, now is a good time to learn about
&lt;a href="https://rstudio.github.io/renv/" target="_blank" rel="noopener">renv&lt;/a>. renv allows to create isolated, reproducible, projects so that you can experiment with new package versions while feeling secure that your existing projects will continue to work as they always have.&lt;/p>
&lt;h2 id="lifecycle">Lifecycle
&lt;a href="#lifecycle">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To make the transition to dplyr 1.0.0 easier we have invested a lot of time in clarifying where functions (and some arguments) fall in their lifecycle. Our goal is to better inform you of our thinking about functions. You won&amp;rsquo;t always agree with our decisions, but you shouldn&amp;rsquo;t be surprised!&lt;/p>
&lt;p>There are three stages in the lifecycle that are particularly important to know about in dplyr 1.0.0:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Deprecated&lt;/strong> functions (&lt;img src="lifecycle-deprecated.svg" alt="deprecated badge">) are on their way out and you&amp;rsquo;ll should replace them with their modern alternatives in the near future.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Superseded&lt;/strong> functions (&lt;img src="lifecycle-superseded.svg" alt="superseded badge">) aren&amp;rsquo;t going away, but we no longer recommend using them because we think we&amp;rsquo;ve discovered better alternatives. There&amp;rsquo;s no rush, but we suggest that you learn about their replacements and phase out your use of the superseded functions over the next year or two.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Experimental&lt;/strong> features (&lt;img src="lifecycle-experimental.svg" alt="experimental badge">) are those features that we&amp;rsquo;re cautiously optmistic about, but want to get more feedback on before we fully commit to them. Please try them out and let us know what you think!&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>The following sections describe each stage in more detail, illustrated with the most important functions in that stage in dplyr 1.0.0&lt;/p>
&lt;h3 id="deprecated-functions">Deprecated functions
&lt;a href="#deprecated-functions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Deprecation is the most visible of the lifecycle stages because you&amp;rsquo;re forced to immediately confront it when you use a deprecated function:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">add_rownames&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Warning: `add_rownames()` is deprecated as of dplyr 1.0.0.&lt;/span>
&lt;span class="c1">#&amp;gt; Please use `tibble::rownames_to_column()` instead.&lt;/span>
&lt;span class="c1">#&amp;gt; This warning is displayed once every 8 hours.&lt;/span>
&lt;span class="c1">#&amp;gt; Call `lifecycle::last_warnings()` to see where this warning was generated.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This warning is generated by the
&lt;a href="http://lifecycle.r-lib.org/" target="_blank" rel="noopener">lifecycle&lt;/a> package, and by default will appear once every 8 hours. The goal is to gently and regularly remind you to upgrade, but not get too much in your face. You can control this warning with the &lt;code>lifecycle_verbosity&lt;/code> option:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>options(lifecycle_verbosity = &amp;quot;warning&amp;quot;)&lt;/code> always warns. This is particularly useful if you want to make a warning reproducible so you can eliminate it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>options(lifecycle_verbosity = &amp;quot;error&amp;quot;)&lt;/code> turns use of deprecated functions into an error. This forces you to rapidly deal with any deprecated functions, but may cause problems if the deprecated function is called by another package.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>options(lifecycle_verbosity = &amp;quot;quiet&amp;quot;)&lt;/code> silences deprecation warnings. We don&amp;rsquo;t generally recommended this, but it&amp;rsquo;s a short-term fix if you&amp;rsquo;re finding the warnings too annoying.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Deprecated functions are also labelled in the documentation, and we have rewritten the examples to show how you can to convert your old code to more modern syntax.&lt;/p>
&lt;p>dplyr 1.0.0 deprecates quite a few functions, but most of them are either rarely used (judging from GitHub searches) or have been informally deprecated for some time:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>In &lt;code>group_by()&lt;/code> you now need to use &lt;code>.add&lt;/code> instead of &lt;code>add&lt;/code>; using &lt;code>add&lt;/code> was a mistake that violates our
&lt;a href="https://design.tidyverse.org/dots-prefix.html" target="_blank" rel="noopener">design principles&lt;/a> and makes it impossible to create a new grouping variable called &lt;code>add&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>as.tbl()&lt;/code> and &lt;code>tbl_df()&lt;/code>; replace with &lt;code>as_tibble()&lt;/code> and &lt;code>tibble()&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>bench_tbls()&lt;/code>, &lt;code>compare_tbls()&lt;/code>, and friends; they were provided as a convenience for developers but they never received much love and hence aren&amp;rsquo;t very useful.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>combine()&lt;/code> was rarely used and has unclear semantics. If needed you can replace with &lt;code>vctrs::vec_c()&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>src_mysql()&lt;/code>, &lt;code>src_postgresql()&lt;/code>, &lt;code>src_sqlite()&lt;/code>: please use dbplyr instead.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>You can see the complete list in
&lt;a href="https://github.com/tidyverse/dplyr/blob/master/NEWS.md#deprecated" target="_blank" rel="noopener">NEWS.md&lt;/a>&lt;/p>
&lt;h3 id="superseded-functions">Superseded functions
&lt;a href="#superseded-functions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Superseded functions is a weaker form of deprecation: we believe that better approaches exist, but we know that the function is used by many people and it&amp;rsquo;s going to take some time to move away from it. Superseded functions will not receive new features and will only receive critical bug fixes. They are not going away any time soon; for dplyr, that means we won&amp;rsquo;t even think about removing at least 2 years. When we do eventually decide to remove them, we will deprecate first and we promise to provide plenty of warning.&lt;/p>
&lt;p>(Previously we called this stage &amp;ldquo;retired&amp;rdquo; but that caused confusion because many people interpreted it as meaning that the function was going away, when the intent is to convey the opposite.)&lt;/p>
&lt;p>You can tell if a function is superseded by reading the documentation. You&amp;rsquo;ll see a prominent &amp;ldquo;superseded&amp;rdquo; badge, accompanied by an explanation of why the function was superseded. The examples show how to translate your old code to the new syntax. In the future, will provide tools to programmatically identify your use of superseded functions so you could (e.g.) have a policy of not using superseded functions in production code.&lt;/p>
&lt;p>There are two important function families that have been superseded in dplyr 1.0.0:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>All &lt;code>_if()&lt;/code>, &lt;code>_at()&lt;/code> and &lt;code>_all()&lt;/code> function variants (e.g. &lt;code>mutate_if()&lt;/code>, &lt;code>summarise_at()&lt;/code>, &lt;code>filter_all()&lt;/code>) have been superseded in favour of new a &lt;code>across()&lt;/code> function that can be used inside of any
&lt;a href="https://dplyr.tidyverse.org/dev/reference/dplyr_data_masking.html" target="_blank" rel="noopener">data masking&lt;/a> verb. Learn more about &lt;code>across()&lt;/code> in
&lt;a href="https://dplyr.tidyverse.org/dev/articles/colwise.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;colwise&amp;quot;)&lt;/code>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>top_n()&lt;/code>, &lt;code>sample_n()&lt;/code>, and &lt;code>sample_frac()&lt;/code> have been superseded in favour of a new family of slice helpers: &lt;code>slice_min()&lt;/code>, &lt;code>slice_max()&lt;/code>, &lt;code>slice_head()&lt;/code>, &lt;code>slice_tail()&lt;/code>, &lt;code>slice_random()&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="experimental-features">Experimental features
&lt;a href="#experimental-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Experimental features have been explored and discussed amongst dplyr developers and we&amp;rsquo;re still not 100% sure if they&amp;rsquo;re a good idea or not, or we&amp;rsquo;re not sure exactly how the underlying idea is best expressed in code. We want to expose them to more people while maintaining the option to change (possibly radically!) or even remove them. Experimental features will work best if you try them out and let us know what you think. There are two types of feedback that are particularly useful. Please tell us when an experimental feature:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Allows you to solve a problem in better (e.g. faster, less code, more elegantly, &amp;hellip;) than your previous approach.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Is confusing because it works differently to an existing function (particularly a function in the tidyverse).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Informal feedback is fine; feel free to
&lt;a href="http://twitter.com/hadleywickham/status/1235611849179136001" target="_blank" rel="noopener">ping me on twitter&lt;/a>,
&lt;a href="mailto:hadley@rstudio.com">email me&lt;/a>, or
&lt;a href="https://github.com/tidyverse/dplyr/issues/new" target="_blank" rel="noopener">open an issue&lt;/a>.&lt;/p>
&lt;p>In dplyr 1.0.0 there are three new experimental arguments to
&lt;a href="https://dplyr.tidyverse.org/dev/reference/mutate.html#arguments" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a>, &lt;code>.keep&lt;/code>, &lt;code>.before&lt;/code>, and &lt;code>.after&lt;/code> that give you more control where new columns are located, and precisely which columns should be retained in the output. Please let us know what you think!&lt;/p>
&lt;h2 id="try-it-out">Try it out
&lt;a href="#try-it-out">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you&amp;rsquo;re adventurous, you can try it out today. While it&amp;rsquo;s not perfect, it should be very similar to previous versions in most cases. And where it doesn&amp;rsquo;t work you can help us by filing an issue so we can figure out what&amp;rsquo;s gone wrong.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">remotes&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">install_github&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tidyverse/dplyr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To restore to released version:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dplyr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>dtplyr 1.0.0</title><link>https://www.tidyverse.org/blog/2019/11/dtplyr-1-0-0/</link><pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/11/dtplyr-1-0-0/</guid><description>&lt;p>I&amp;rsquo;m very excited to announce that
&lt;a href="https://dtplyr.tidyverse.org" target="_blank" rel="noopener">dtplyr&lt;/a> 1.0.0 is now on CRAN. dtplyr provides a
&lt;a href="http://r-datatable.com/" target="_blank" rel="noopener">data.table&lt;/a> backend for dplyr, allowing you to write dplyr code that is automatically translated to the equivalent data.table code.&lt;/p>
&lt;p>dtplyr 1.0.0 gives you the speed of data.table with the syntax of dplyr, unlocking the value of data.table to every user of dplyr. Of course, if you know data.table, you can still write it directly, just as we expect SQL experts to continue to write SQL rather than having
&lt;a href="http://dbplyr.tidyverse.org/" target="_blank" rel="noopener">dbplyr&lt;/a> generate it for them. Understanding these foundational tools is particularly important if you want to eke out every last drop of performance.&lt;/p>
&lt;p>This version of dtplyr is a complete rewrite which allows it to generate significantly more performant translations. dtplyr now works like
&lt;a href="https://dbplyr.tidyverse.org" target="_blank" rel="noopener">dbplyr&lt;/a>, where computation only happens when requested by &lt;code>as.data.table()&lt;/code>, &lt;code>as.data.frame()&lt;/code> or &lt;code>as_tibble()&lt;/code> (this idea can also be seen in the
&lt;a href="https://github.com/asardaes/table.express" target="_blank" rel="noopener">table.express&lt;/a> and
&lt;a href="https://github.com/WinVector/rqdatatable/" target="_blank" rel="noopener">rqdatatable&lt;/a> packages). Unfortunately, this rewrite breaks pretty much all existing uses of dtplyr. But frankly, the prior version of dtplyr was not very good and few people used it, so a major overhaul should break little code in the wild.&lt;/p>
&lt;p>In this article, I&amp;rsquo;ll introduce you to the basic usage of dtplyr, talk about some of the performance implications, and show off some of the translations that I&amp;rsquo;m most proud of.&lt;/p>
&lt;h2 id="usage">Usage
&lt;a href="#usage">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To use dtplyr, you must at least load dtplyr and dplyr. You might also want to load
&lt;a href="http://r-datatable.com/" target="_blank" rel="noopener">data.table&lt;/a> so you can access the other goodies that it provides:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data.table&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dtplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">warn.conflicts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then use &lt;code>lazy_dt()&lt;/code> to create a &amp;ldquo;lazy&amp;rdquo; data table that tracks the operations performed on it:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_dt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use dplyr verbs with this object as if it was a data frame. But there&amp;rsquo;s a big difference behind the scenes: instead of immediately performing the operation, dtplyr just records what you&amp;rsquo;re doing so when needed it can generate a single, efficient, data.table statement. You can preview the transformation (including the generated data.table code) by printing the result:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wt&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l100k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">235.21&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">mpg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="c1"># liters / 100 km&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l100k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l100k&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Source: local data table [?? x 2]&lt;/span>
&lt;span class="c1">#&amp;gt; Call: `_DT1`[wt &amp;lt; 5][, `:=`(l100k = 235.21/mpg)][, .(l100k = mean(l100k)), &lt;/span>
&lt;span class="c1">#&amp;gt; keyby = .(cyl)]&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; cyl l100k&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 4 9.05&lt;/span>
&lt;span class="c1">#&amp;gt; 2 6 12.0 &lt;/span>
&lt;span class="c1">#&amp;gt; 3 8 14.9 &lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; # Use as.data.table()/as.data.frame()/as_tibble() to access results&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Generally, however, you should reserve this preview for exploration and debugging, and instead use &lt;code>as.data.table()&lt;/code>, &lt;code>as.data.frame()&lt;/code>, or &lt;code>as_tibble()&lt;/code> to indicate that you&amp;rsquo;re done writing the transformation and want to access the results:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wt&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l100k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">235.21&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">mpg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="c1"># liters / 100 km&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l100k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l100k&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; cyl l100k&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 4 9.05&lt;/span>
&lt;span class="c1">#&amp;gt; 2 6 12.0 &lt;/span>
&lt;span class="c1">#&amp;gt; 3 8 14.9&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="performance">Performance
&lt;a href="#performance">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>How fast is dtplyr? data.table is generally faster than dplyr, but dtplyr has to do some work to perform the translation, so it&amp;rsquo;s reasonable to ask if it&amp;rsquo;s worth it. Do the benefits of using data.table outweigh the cost of the automated translation? My experimentation suggests that it is: the cost of translation is low, and independent of the size of the data. In this section, I&amp;rsquo;ll explore the performance trade-off through three lenses: translation cost, copies, and interface mismatch.&lt;/p>
&lt;h3 id="translation-cost">Translation cost
&lt;a href="#translation-cost">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Each dplyr verb must do some work to convert dplyr syntax to data.table syntax. We can use the
&lt;a href="http://bench.r-lib.org/" target="_blank" rel="noopener">bench&lt;/a> package to time the cost of the four-step pipeline that I used above:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">bench&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">mark&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">translate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wt&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l100k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">235.21&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">mpg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="c1"># liters / 100 km&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l100k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l100k&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; expression min median `itr/sec` mem_alloc `gc/sec`&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 translate 787µs 969µs 1028. 280B 26.4&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Because this pipeline does not use &lt;code>as.data.table()&lt;/code> or &lt;code>print()&lt;/code> it only generates the data.table code, it doesn&amp;rsquo;t run it, so we&amp;rsquo;re timing the translation cost. The translation cost scales with the complexity of the pipeline, not the size of the data, so these timings will apply regardless of the size of the underlying data.&lt;/p>
&lt;p>My intial experiments suggest that the translation cost is typically a few milliseconds. Since the computational cost increases with the size of the data, the translation cost becomes a smaller proportion of the total as the data size grows, suggesting the dtplyr does not impose a significant overhead on top of data.table.&lt;/p>
&lt;p>Take the following example, which uses the large nycflights13 dataset. This isn&amp;rsquo;t really big enough for data.table to really shine, but it&amp;rsquo;s about as big as you can get in an R package. Here I&amp;rsquo;m going to compute the average arrival delay by destination. It takes raw dplyr about 40ms to do the work. Again, the dtplyr translation is fast, around 1ms, and then computation using data.table only takes about 20ms, almost twice as fast as dplyr.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nycflights13&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">flights_dt&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_dt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flights&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">delay_by_dest&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nf">is.na&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr_delay&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">n&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">delay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr_delay&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">bench&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">mark&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">flights&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">delay_by_dest&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">flights_dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">delay_by_dest&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">flights_dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">delay_by_dest&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">check&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; expression min median `itr/sec`&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;bch:expr&amp;gt; &amp;lt;bch:t&amp;gt; &amp;lt;bch:t&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 flights %&amp;gt;% delay_by_dest() 35.7ms 36ms 27.8&lt;/span>
&lt;span class="c1">#&amp;gt; 2 flights_dt %&amp;gt;% delay_by_dest() 671.9µs 824.6µs 1230. &lt;/span>
&lt;span class="c1">#&amp;gt; 3 flights_dt %&amp;gt;% delay_by_dest() %&amp;gt;% as_tibble() 18.7ms 20.2ms 48.0&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 2 more variables: mem_alloc &amp;lt;bch:byt&amp;gt;, `gc/sec` &amp;lt;dbl&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="copies">Copies
&lt;a href="#copies">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>There is one place where dtplyr does have to add overhead: when translations would generate data.table code that modifies the input in place, like &lt;code>mutate()&lt;/code>. dtplyr matches dplyr semantics (which never modifies in place), so most expressions involving &lt;code>mutate()&lt;/code> must make a copy:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; copy(`_DT1`)[, `:=`(x = x * 2)]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, dtplyr never generates more than one copy (no matter how many mutates you use), and it also recognises many situations where data.table creates an implicit copy:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; copy(`_DT1`)[, `:=`(y = x * 2)][, `:=`(z = y * 2)]&lt;/span>
&lt;span class="n">mtcars2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT1`[x == 1][, `:=`(x = x * 2)]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, if you have very datasets, creating a deep copy can be expensive. dtplyr allows you to opt out by setting &lt;code>immutable = FALSE&lt;/code>. This ensures that dtplyr never makes a copy:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars3&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_dt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">as.data.table&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">immutable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">mtcars3&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT3`[, `:=`(x2 = x * 2)]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="interface-mismatch">Interface mismatch
&lt;a href="#interface-mismatch">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The hardest overhead to measure is the cost of interface mismatch, i.e. where data.table has features that dplyr doesn&amp;rsquo;t. For example, there&amp;rsquo;s no way to express cross- or rolling-joins with dplyr, so there&amp;rsquo;s no way to generate efficient data.table code for these cases. It&amp;rsquo;s hard to estimate this cost, but it&amp;rsquo;s something that we think about when considering what features to add to dplyr next.&lt;/p>
&lt;h2 id="translation">Translation
&lt;a href="#translation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you&amp;rsquo;re familiar with data.table, you might be interested to learn more about how the translation works. Here I&amp;rsquo;ll show a few things I think are particularly interesting, using &lt;code>show_query()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">data.frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dt&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_dt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Most uses of the basic dplyr verbs generate calls to &lt;code>[.data.table&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT4`[, .(a, b)]&lt;/span>
&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT4`[, .(x = mean(x))]&lt;/span>
&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; copy(`_DT4`)[, `:=`(x = a + b)]&lt;/span>
&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT4`[a == 1]&lt;/span>
&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">arrange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">desc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT4`[order(a, desc(b))]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>As do simple left and right joins:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">dt2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_dt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">data.frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">left_join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dt2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT5`[`_DT4`, on = .(a), allow.cartesian = TRUE]&lt;/span>
&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">right_join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dt2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT4`[`_DT5`, on = .(a), allow.cartesian = TRUE]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Where possible, dtplyr will collapse multiple calls to &lt;code>[&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT4`[a == 1, .(b, c, d)]&lt;/span>
&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">left_join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dt2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT5`[`_DT4`, .(a, b, z), on = .(a), allow.cartesian = TRUE]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>But note that the order is important, as a &lt;code>select()&lt;/code> followed by a &lt;code>filter()&lt;/code> has to generate two statements:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT4`[, .(a = b)][a == 1]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When you mix basic dplyr verbs with &lt;code>group_by()&lt;/code>, dtplyr adds the &lt;code>keyby&lt;/code> argument:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT4`[, .(b = mean(b)), keyby = .(a)]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And when filtering, this automatically uses &lt;code>.SD&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">dt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">show_query&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; `_DT4`[, .SD[b &amp;lt; mean(b)], keyby = .(a)]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can learn more in
&lt;a href="https://dtplyr.tidyverse.org/articles/translation.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;translation&amp;quot;)&lt;/code>&lt;/a>.&lt;/p>
&lt;p>There are a couple of limitations that I hope to address in the next version of dtplyr. Currently, you can&amp;rsquo;t translate
&lt;a href="https://github.com/tidyverse/dtplyr/issues/109" target="_blank" rel="noopener">the &lt;code>_if&lt;/code> variants&lt;/a>, and there is weak support for the
&lt;a href="https://github.com/tidyverse/dtplyr/issues/108" target="_blank" rel="noopener">&lt;code>group_&lt;/code> functions&lt;/a>. If you discover other functions that don&amp;rsquo;t work as you expect,
&lt;a href="https://github.com/tidyverse/dtplyr/issues/new/choose" target="_blank" rel="noopener">please file an issue!&lt;/a>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Big thanks to the data.table community, particularly
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">Michael Chirico&lt;/a>, for their help educating me on the best way to translate dplyr code into performant, idiomatic, data.table code.&lt;/p>
&lt;p>I&amp;rsquo;d also like to thank everyone to helped make this release happen through their contributions on GitHub:
&lt;a href="https://github.com/AlanFeder" target="_blank" rel="noopener">@AlanFeder&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/benjaminleroy" target="_blank" rel="noopener">@benjaminleroy&lt;/a>,
&lt;a href="https://github.com/clayphan" target="_blank" rel="noopener">@clayphan&lt;/a>,
&lt;a href="https://github.com/ColinFay" target="_blank" rel="noopener">@ColinFay&lt;/a>,
&lt;a href="https://github.com/daranzolin" target="_blank" rel="noopener">@daranzolin&lt;/a>,
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>,
&lt;a href="https://github.com/franknarf1" target="_blank" rel="noopener">@franknarf1&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hlynurhallgrims" target="_blank" rel="noopener">@hlynurhallgrims&lt;/a>,
&lt;a href="https://github.com/hope-data-science" target="_blank" rel="noopener">@hope-data-science&lt;/a>,
&lt;a href="https://github.com/ianmcook" target="_blank" rel="noopener">@ianmcook&lt;/a>,
&lt;a href="https://github.com/jl5000" target="_blank" rel="noopener">@jl5000&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/JoshuaSturm" target="_blank" rel="noopener">@JoshuaSturm&lt;/a>,
&lt;a href="https://github.com/lenay12" target="_blank" rel="noopener">@lenay12&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/nlbjan1" target="_blank" rel="noopener">@nlbjan1&lt;/a>,
&lt;a href="https://github.com/quantitative-technologies" target="_blank" rel="noopener">@quantitative-technologies&lt;/a>,
&lt;a href="https://github.com/richpauloo" target="_blank" rel="noopener">@richpauloo&lt;/a>,
&lt;a href="https://github.com/S-UP" target="_blank" rel="noopener">@S-UP&lt;/a>,
&lt;a href="https://github.com/tmastny" target="_blank" rel="noopener">@tmastny&lt;/a>,
&lt;a href="https://github.com/TobiRoby" target="_blank" rel="noopener">@TobiRoby&lt;/a>,
&lt;a href="https://github.com/tomazweiss" target="_blank" rel="noopener">@tomazweiss&lt;/a>,
&lt;a href="https://github.com/torema-ed" target="_blank" rel="noopener">@torema-ed&lt;/a>,
&lt;a href="https://github.com/Vidaringa" target="_blank" rel="noopener">@Vidaringa&lt;/a>,
&lt;a href="https://github.com/vlahm" target="_blank" rel="noopener">@vlahm&lt;/a>,
&lt;a href="https://github.com/vspinu" target="_blank" rel="noopener">@vspinu&lt;/a>,
&lt;a href="https://github.com/xiaodaigh" target="_blank" rel="noopener">@xiaodaigh&lt;/a>, and
&lt;a href="https://github.com/yiqinfu" target="_blank" rel="noopener">@yiqinfu&lt;/a>.&lt;/p></description></item><item><title>dplyr 0.8.3</title><link>https://www.tidyverse.org/blog/2019/07/dplyr-0-8-3/</link><pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/07/dplyr-0-8-3/</guid><description>
&lt;h2 id="introduction">Introduction
&lt;a href="#introduction">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;re pleased (and a little embarrassed) to announce the release of dplyr 0.8.3 on CRAN 😬 !&lt;/p>
&lt;p>This is an emergency release, one week after
&lt;a href="https://www.tidyverse.org/articles/2019/06/dplyr-0-8-2/" target="_blank" rel="noopener">0.8.2&lt;/a>
to fix a major performance regression as reported by the community on twitter.&lt;/p>
&lt;h2 id="nostra-culpa">Nostra culpa
&lt;a href="#nostra-culpa">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This
&lt;a href="https://github.com/tidyverse/dplyr/commit/036de90fbf9e3eef72c015982a5d1294d2157a2c#r34165423" target="_blank" rel="noopener">commit&lt;/a> was pushed to
&lt;a href="https://dplyr.tidyverse.org" target="_blank" rel="noopener">dplyr&lt;/a> on May 10, as a seemingly very harmless update to better support list
columns being used in
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">summarise()&lt;/a>.&lt;/p>
&lt;p>In addition to the changes that were necessary to fix the problem reported in
&lt;a href="https://github.com/tidyverse/dplyr/issues/4349" target="_blank" rel="noopener">issue 4349&lt;/a>,
the commit removed two lines of code in a very central piece of
&lt;a href="https://dplyr.tidyverse.org" target="_blank" rel="noopener">dplyr&lt;/a> infrastructure,
namely its data mask layout.&lt;/p>
&lt;p>As part of
&lt;a href="https://www.tidyverse.org/articles/2019/02/dplyr-0-8-0/" target="_blank" rel="noopener">dplyr 0.8.0&lt;/a>, internals of the data mask layout has
dramatically changed and uses a data mask composed of two environments. The first environment contains a set of active
bindings for each of the columns in the data frame to process, the first time a variable is used in an expression,
presumably on the first group, the active binding is resolved to get the relevant slice of that column. This is a
somewhat expensive operation, therefore subsequent groups pro actively materialise the slice of columns which are known
to be needed, using the second environment of the data mask.&lt;/p>
&lt;p>The two lines that were removed by mistake are central to this system, without them each group would
invoke the costly active binding. Even worse, the list of indices of columns to be rematerialised,
as maintained by a vector of integers, would grow each time, so on the second group the column slice would
be materialized twice to be then forgotten, on the third group three times &amp;hellip;&lt;/p>
&lt;p>Classic embarrassing quadratic performance regression.&lt;/p>
&lt;h2 id="thanks">Thanks
&lt;a href="#thanks">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to the community for quickly alerting us of the situation, the 🐌 had been
in the code base for almost two months but we had not noticed because our continuous
integration protects us from regressions in functionality, but not regression in performance.&lt;/p>
&lt;p>We might investigate in that direction in the future.Thanks to all contributors for this release.&lt;/p>
&lt;p>
&lt;a href="https://github.com/ajkroeg" target="_blank" rel="noopener">@ajkroeg&lt;/a>,
&lt;a href="https://github.com/bschneidr" target="_blank" rel="noopener">@bschneidr&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dhicks" target="_blank" rel="noopener">@dhicks&lt;/a>,
&lt;a href="https://github.com/gvfarns" target="_blank" rel="noopener">@gvfarns&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>, and
&lt;a href="https://github.com/shane-kercheval" target="_blank" rel="noopener">@shane-kercheval&lt;/a>&lt;/p></description></item><item><title>dplyr 0.8.2</title><link>https://www.tidyverse.org/blog/2019/06/dplyr-0-8-2/</link><pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/06/dplyr-0-8-2/</guid><description>
&lt;h2 id="introduction">Introduction
&lt;a href="#introduction">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;re delighted to announce the release of dplyr 0.8.2 on CRAN 🍉 !&lt;/p>
&lt;p>This is a minor maintenance release in the &lt;code>0.8.*&lt;/code> series, addressing a collection of
issues since the
&lt;a href="https://www.tidyverse.org/articles/2019/05/dplyr-0-8-1/" target="_blank" rel="noopener">0.8.1&lt;/a> and
&lt;a href="https://www.tidyverse.org/articles/2019/02/dplyr-0-8-0/" target="_blank" rel="noopener">0.8.0&lt;/a> versions.&lt;/p>
&lt;h2 id="top_n-and-top_frac">top_n() and top_frac()
&lt;a href="#top_n-and-top_frac">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/top_n.html" target="_blank" rel="noopener">top_n()&lt;/a> has been around for a long time in
&lt;a href="https://dplyr.tidyverse.org/index.html" target="_blank" rel="noopener">dplyr&lt;/a>, as a convenient wrapper around
&lt;a href="https://dplyr.tidyverse.org/articles/dplyr.html?q=filter" target="_blank" rel="noopener">filter()&lt;/a>
and
&lt;a href="https://dplyr.tidyverse.org/reference/ranking.html" target="_blank" rel="noopener">min_rank()&lt;/a>,
to select top (or bottom) entries in each group of a tibble.&lt;/p>
&lt;p>In this release,
&lt;a href="https://dplyr.tidyverse.org/reference/top_n.html" target="_blank" rel="noopener">top_n()&lt;/a> is no longer
limited to a constant number of entries per group, its &lt;code>n&lt;/code> argument is now quoted
to be evaluated later in the context of the group.&lt;/p>
&lt;p>Here are the top half countries, i.e. &lt;code>n() / 2&lt;/code>, in terms of life expectancy in 2007.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Attaching package: &amp;#39;dplyr&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; The following objects are masked from &amp;#39;package:stats&amp;#39;:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; filter, lag&lt;/span>
&lt;span class="c1">#&amp;gt; The following objects are masked from &amp;#39;package:base&amp;#39;:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; intersect, setdiff, setequal, union&lt;/span>
&lt;span class="n">gapminder&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">gapminder&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">2007&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">continent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">top_n&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">n&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lifeExp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 70 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: continent [5]&lt;/span>
&lt;span class="c1">#&amp;gt; country continent year lifeExp pop gdpPercap&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Algeria Africa 2007 72.3 33333216 6223.&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Argentina Americas 2007 75.3 40301927 12779.&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Australia Oceania 2007 81.2 20434176 34435.&lt;/span>
&lt;span class="c1">#&amp;gt; 4 Austria Europe 2007 79.8 8199783 36126.&lt;/span>
&lt;span class="c1">#&amp;gt; 5 Bahrain Asia 2007 75.6 708573 29796.&lt;/span>
&lt;span class="c1">#&amp;gt; 6 Belgium Europe 2007 79.4 10392226 33693.&lt;/span>
&lt;span class="c1">#&amp;gt; 7 Benin Africa 2007 56.7 8078314 1441.&lt;/span>
&lt;span class="c1">#&amp;gt; 8 Canada Americas 2007 80.7 33390141 36319.&lt;/span>
&lt;span class="c1">#&amp;gt; 9 Chile Americas 2007 78.6 16284741 13172.&lt;/span>
&lt;span class="c1">#&amp;gt; 10 China Asia 2007 73.0 1318683096 4959.&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 60 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/top_n.html" target="_blank" rel="noopener">top_frac()&lt;/a> is new convenience shortcut for
the top n percent, i.e.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">gapminder&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">gapminder&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">2007&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">continent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">top_frac&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lifeExp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 70 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: continent [5]&lt;/span>
&lt;span class="c1">#&amp;gt; country continent year lifeExp pop gdpPercap&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Algeria Africa 2007 72.3 33333216 6223.&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Argentina Americas 2007 75.3 40301927 12779.&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Australia Oceania 2007 81.2 20434176 34435.&lt;/span>
&lt;span class="c1">#&amp;gt; 4 Austria Europe 2007 79.8 8199783 36126.&lt;/span>
&lt;span class="c1">#&amp;gt; 5 Bahrain Asia 2007 75.6 708573 29796.&lt;/span>
&lt;span class="c1">#&amp;gt; 6 Belgium Europe 2007 79.4 10392226 33693.&lt;/span>
&lt;span class="c1">#&amp;gt; 7 Benin Africa 2007 56.7 8078314 1441.&lt;/span>
&lt;span class="c1">#&amp;gt; 8 Canada Americas 2007 80.7 33390141 36319.&lt;/span>
&lt;span class="c1">#&amp;gt; 9 Chile Americas 2007 78.6 16284741 13172.&lt;/span>
&lt;span class="c1">#&amp;gt; 10 China Asia 2007 73.0 1318683096 4959.&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 60 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="tbl_vars-and-group_cols">tbl_vars() and group_cols()
&lt;a href="#tbl_vars-and-group_cols">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/tbl_vars.html" target="_blank" rel="noopener">tbl_vars()&lt;/a> now returns a &lt;code>dplyr_sel_vars&lt;/code>
object that keeps track of the grouping variables. This information powers
&lt;a href="https://dplyr.tidyverse.org/reference/group_cols.html" target="_blank" rel="noopener">group_cols()&lt;/a>, which can now be used
in every function that uses tidy selection of columns.&lt;/p>
&lt;p>Functions in the tidyverse and beyond may start to use the
&lt;a href="https://dplyr.tidyverse.org/reference/tbl_vars.html" target="_blank" rel="noopener">tbl_vars()&lt;/a>/
&lt;a href="https://dplyr.tidyverse.org/reference/group_cols.html" target="_blank" rel="noopener">group_cols()&lt;/a> duo,
starting from
&lt;a href="https://tidyr.tidyverse.org" target="_blank" rel="noopener">tidyr&lt;/a> and this
&lt;a href="https://github.com/tidyverse/tidyr/pull/668" target="_blank" rel="noopener">pull request&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># pak::pkg_install(&amp;#34;tidyverse/tidyr#668&amp;#34;)&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="n">tidyr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">gather&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flower_att&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;measurement&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nf">group_cols&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 600 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: Species [3]&lt;/span>
&lt;span class="c1">#&amp;gt; Species flower_att measurement&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa Sepal.Length 5.1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 setosa Sepal.Length 4.9&lt;/span>
&lt;span class="c1">#&amp;gt; 3 setosa Sepal.Length 4.7&lt;/span>
&lt;span class="c1">#&amp;gt; 4 setosa Sepal.Length 4.6&lt;/span>
&lt;span class="c1">#&amp;gt; 5 setosa Sepal.Length 5 &lt;/span>
&lt;span class="c1">#&amp;gt; 6 setosa Sepal.Length 5.4&lt;/span>
&lt;span class="c1">#&amp;gt; 7 setosa Sepal.Length 4.6&lt;/span>
&lt;span class="c1">#&amp;gt; 8 setosa Sepal.Length 5 &lt;/span>
&lt;span class="c1">#&amp;gt; 9 setosa Sepal.Length 4.4&lt;/span>
&lt;span class="c1">#&amp;gt; 10 setosa Sepal.Length 4.9&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 590 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="group_split-group_map-group_modify">group_split(), group_map(), group_modify()
&lt;a href="#group_split-group_map-group_modify">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/group_split.html" target="_blank" rel="noopener">group_split()&lt;/a> always keeps
a &lt;code>ptype&lt;/code> attribute to track the prototype of the splits.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hp&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_split&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; list()&lt;/span>
&lt;span class="c1">#&amp;gt; attr(,&amp;#34;ptype&amp;#34;)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 0 x 11&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 11 variables: mpg &amp;lt;dbl&amp;gt;, cyl &amp;lt;dbl&amp;gt;, disp &amp;lt;dbl&amp;gt;, hp &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # drat &amp;lt;dbl&amp;gt;, wt &amp;lt;dbl&amp;gt;, qsec &amp;lt;dbl&amp;gt;, vs &amp;lt;dbl&amp;gt;, am &amp;lt;dbl&amp;gt;, gear &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # carb &amp;lt;dbl&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/group_map.html" target="_blank" rel="noopener">group_map()&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/group_map.html" target="_blank" rel="noopener">group_modify()&lt;/a>
benefit from this in the edge case where there are no groups.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hp&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="n">.x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; list()&lt;/span>
&lt;span class="c1">#&amp;gt; attr(,&amp;#34;ptype&amp;#34;)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 0 x 10&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 10 variables: mpg &amp;lt;dbl&amp;gt;, disp &amp;lt;dbl&amp;gt;, hp &amp;lt;dbl&amp;gt;, drat &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # wt &amp;lt;dbl&amp;gt;, qsec &amp;lt;dbl&amp;gt;, vs &amp;lt;dbl&amp;gt;, am &amp;lt;dbl&amp;gt;, gear &amp;lt;dbl&amp;gt;, carb &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="n">mtcars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hp&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_modify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="n">.x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 0 x 11&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: cyl [0]&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 11 variables: cyl &amp;lt;dbl&amp;gt;, mpg &amp;lt;dbl&amp;gt;, disp &amp;lt;dbl&amp;gt;, hp &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # drat &amp;lt;dbl&amp;gt;, wt &amp;lt;dbl&amp;gt;, qsec &amp;lt;dbl&amp;gt;, vs &amp;lt;dbl&amp;gt;, am &amp;lt;dbl&amp;gt;, gear &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # carb &amp;lt;dbl&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="thanks">Thanks
&lt;a href="#thanks">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to all contributors for this release.&lt;/p>
&lt;p>
&lt;a href="https://github.com/abirasathiy" target="_blank" rel="noopener">@abirasathiy&lt;/a>,
&lt;a href="https://github.com/ajkroeg" target="_blank" rel="noopener">@ajkroeg&lt;/a>,
&lt;a href="https://github.com/alejandroschuler" target="_blank" rel="noopener">@alejandroschuler&lt;/a>,
&lt;a href="https://github.com/anuj2054" target="_blank" rel="noopener">@anuj2054&lt;/a>,
&lt;a href="https://github.com/arider2" target="_blank" rel="noopener">@arider2&lt;/a>,
&lt;a href="https://github.com/arielfuentes" target="_blank" rel="noopener">@arielfuentes&lt;/a>,
&lt;a href="https://github.com/artidata" target="_blank" rel="noopener">@artidata&lt;/a>,
&lt;a href="https://github.com/BenPVD" target="_blank" rel="noopener">@BenPVD&lt;/a>,
&lt;a href="https://github.com/bkmontgom" target="_blank" rel="noopener">@bkmontgom&lt;/a>,
&lt;a href="https://github.com/brodieG" target="_blank" rel="noopener">@brodieG&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/clanker" target="_blank" rel="noopener">@clanker&lt;/a>,
&lt;a href="https://github.com/clemenshug" target="_blank" rel="noopener">@clemenshug&lt;/a>,
&lt;a href="https://github.com/CSheehan1" target="_blank" rel="noopener">@CSheehan1&lt;/a>,
&lt;a href="https://github.com/danielecook" target="_blank" rel="noopener">@danielecook&lt;/a>,
&lt;a href="https://github.com/dannyparsons" target="_blank" rel="noopener">@dannyparsons&lt;/a>,
&lt;a href="https://github.com/daskandalis" target="_blank" rel="noopener">@daskandalis&lt;/a>,
&lt;a href="https://github.com/davidbaniadam" target="_blank" rel="noopener">@davidbaniadam&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/deliciouslytyped" target="_blank" rel="noopener">@deliciouslytyped&lt;/a>,
&lt;a href="https://github.com/earowang" target="_blank" rel="noopener">@earowang&lt;/a>,
&lt;a href="https://github.com/fkatharina" target="_blank" rel="noopener">@fkatharina&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/Hardervidertsie" target="_blank" rel="noopener">@Hardervidertsie&lt;/a>,
&lt;a href="https://github.com/iago-pssjd" target="_blank" rel="noopener">@iago-pssjd&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jackdolgin" target="_blank" rel="noopener">@jackdolgin&lt;/a>,
&lt;a href="https://github.com/jangorecki" target="_blank" rel="noopener">@jangorecki&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jjesusfilho" target="_blank" rel="noopener">@jjesusfilho&lt;/a>,
&lt;a href="https://github.com/jonjhitchcock" target="_blank" rel="noopener">@jonjhitchcock&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/laresbernardo" target="_blank" rel="noopener">@laresbernardo&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/LukeGoodsell" target="_blank" rel="noopener">@LukeGoodsell&lt;/a>,
&lt;a href="https://github.com/madmark81" target="_blank" rel="noopener">@madmark81&lt;/a>,
&lt;a href="https://github.com/MarkusBerroth" target="_blank" rel="noopener">@MarkusBerroth&lt;/a>,
&lt;a href="https://github.com/matheus-donato" target="_blank" rel="noopener">@matheus-donato&lt;/a>,
&lt;a href="https://github.com/mattfidler" target="_blank" rel="noopener">@mattfidler&lt;/a>,
&lt;a href="https://github.com/MatthieuStigler" target="_blank" rel="noopener">@MatthieuStigler&lt;/a>,
&lt;a href="https://github.com/md0u80c9" target="_blank" rel="noopener">@md0u80c9&lt;/a>,
&lt;a href="https://github.com/michaelhogersosis" target="_blank" rel="noopener">@michaelhogersosis&lt;/a>,
&lt;a href="https://github.com/MikeJohnPage" target="_blank" rel="noopener">@MikeJohnPage&lt;/a>,
&lt;a href="https://github.com/MJL9588" target="_blank" rel="noopener">@MJL9588&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/mwillumz" target="_blank" rel="noopener">@mwillumz&lt;/a>,
&lt;a href="https://github.com/Nelson-Gon" target="_blank" rel="noopener">@Nelson-Gon&lt;/a>,
&lt;a href="https://github.com/qdread" target="_blank" rel="noopener">@qdread&lt;/a>,
&lt;a href="https://github.com/randomgambit" target="_blank" rel="noopener">@randomgambit&lt;/a>,
&lt;a href="https://github.com/rcorty" target="_blank" rel="noopener">@rcorty&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/romatik" target="_blank" rel="noopener">@romatik&lt;/a>,
&lt;a href="https://github.com/spressi" target="_blank" rel="noopener">@spressi&lt;/a>,
&lt;a href="https://github.com/sstoeckl" target="_blank" rel="noopener">@sstoeckl&lt;/a>,
&lt;a href="https://github.com/stephLH" target="_blank" rel="noopener">@stephLH&lt;/a>,
&lt;a href="https://github.com/urskalbitzer" target="_blank" rel="noopener">@urskalbitzer&lt;/a>,
&lt;a href="https://github.com/vpanfilov" target="_blank" rel="noopener">@vpanfilov&lt;/a>, and
&lt;a href="https://github.com/ZahraEconomist" target="_blank" rel="noopener">@ZahraEconomist&lt;/a>.&lt;/p></description></item><item><title>dplyr 0.8.1</title><link>https://www.tidyverse.org/blog/2019/05/dplyr-0-8-1/</link><pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/05/dplyr-0-8-1/</guid><description>
&lt;h2 id="introduction">Introduction
&lt;a href="#introduction">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;re delighted to announce the release of dplyr 0.8.1 on CRAN 🎉 !&lt;/p>
&lt;p>This is a minor release that address follow ups from the community after the
release of the
&lt;a href="https://www.tidyverse.org/articles/2019/02/dplyr-0-8-0/" target="_blank" rel="noopener">0.8.0 version&lt;/a>.&lt;/p>
&lt;h2 id="group_map-and-group_modify">group_map() and group_modify()
&lt;a href="#group_map-and-group_modify">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Shortly after the release of 0.8.0, we were notified by several members of the
community that &lt;code>group_map()&lt;/code> was great, except it didn&amp;rsquo;t do what they had expected 😬.&lt;/p>
&lt;p>Because the function was (and still is) marked as experimental, we allowed ourselves to
rectify the situation:&lt;/p>
&lt;ul>
&lt;li>The name &lt;code>group_map()&lt;/code> is now used for iterating on groups of grouped tibbles,
characterised by &lt;code>.x&lt;/code> and &lt;code>.y&lt;/code> as before, but making no assumptions about the return
type of each operation and combining the results in a &lt;em>list&lt;/em>. We can see this as
iterating, in the
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">purrr::map()&lt;/a>
sense on the groups.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">warn.conflicts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># a list of vectors&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="nf">quantile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.x&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Petal.Length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">probs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="c1">#&amp;gt; [[1]]&lt;/span>
&lt;span class="c1">#&amp;gt; 25% 50% 75% &lt;/span>
&lt;span class="c1">#&amp;gt; 1.400 1.500 1.575 &lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[2]]&lt;/span>
&lt;span class="c1">#&amp;gt; 25% 50% 75% &lt;/span>
&lt;span class="c1">#&amp;gt; 4.00 4.35 4.60 &lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[3]]&lt;/span>
&lt;span class="c1">#&amp;gt; 25% 50% 75% &lt;/span>
&lt;span class="c1">#&amp;gt; 5.100 5.550 5.875&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>The behaviour we previously had was renamed &lt;code>group_modify()&lt;/code> to loosely echo
&lt;a href="https://purrr.tidyverse.org/reference/modify.html" target="_blank" rel="noopener">purrr::modify()&lt;/a>. In particular,
&lt;code>group_modify()&lt;/code> always returns a grouped tibble, which combines the tibbles returned
by evaluating each operation with a reconstructed grouping structure.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># to use group_modify() the lambda must return a data frame&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_modify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">quantile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.x&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Petal.Length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">probs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="n">tibble&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">enframe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;prob&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;quantile&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 9 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: Species [3]&lt;/span>
&lt;span class="c1">#&amp;gt; Species prob quantile&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa 25% 1.4 &lt;/span>
&lt;span class="c1">#&amp;gt; 2 setosa 50% 1.5 &lt;/span>
&lt;span class="c1">#&amp;gt; 3 setosa 75% 1.58&lt;/span>
&lt;span class="c1">#&amp;gt; 4 versicolor 25% 4 &lt;/span>
&lt;span class="c1">#&amp;gt; 5 versicolor 50% 4.35&lt;/span>
&lt;span class="c1">#&amp;gt; 6 versicolor 75% 4.6 &lt;/span>
&lt;span class="c1">#&amp;gt; 7 virginica 25% 5.1 &lt;/span>
&lt;span class="c1">#&amp;gt; 8 virginica 50% 5.55&lt;/span>
&lt;span class="c1">#&amp;gt; 9 virginica 75% 5.88&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="attention-to-details-in-column-wise-functions">Attention to details in column wise functions
&lt;a href="#attention-to-details-in-column-wise-functions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As we are phasing &lt;code>funs()&lt;/code> out and prefer use of &lt;code>purrr&lt;/code>-style lambda functions
in column wise verbs, we missed a few subtleties.&lt;/p>
&lt;p>Specifically, lambdas can now refer to:&lt;/p>
&lt;ul>
&lt;li>local variables (from the scope):&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">to_inch&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1"># the local variable `inch` can be used in the lambda&lt;/span>
&lt;span class="n">inch&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="m">0.393701&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate_at&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">vars&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">...&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">. &lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">inch&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">to_inch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 150 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 2.01 1.38 0.551 0.0787 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 2 1.93 1.18 0.551 0.0787 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 3 1.85 1.26 0.512 0.0787 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 4 1.81 1.22 0.591 0.0787 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 5 1.97 1.42 0.551 0.0787 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 6 2.13 1.54 0.669 0.157 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 7 1.81 1.34 0.551 0.118 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 8 1.97 1.34 0.591 0.0787 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 9 1.73 1.14 0.551 0.0787 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 10 1.93 1.22 0.591 0.0394 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; # … with 140 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>other columns of the data (from the data mask):&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate_at&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">vars&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Sepal&amp;#34;&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">. &lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="n">Petal.Width&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 150 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 25.5 17.5 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 2 24.5 15 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 3 23.5 16 1.3 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 4 23.0 15.5 1.5 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 5 25 18 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 6 13.5 9.75 1.7 0.4 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 7 15.3 11.3 1.4 0.3 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 8 25 17 1.5 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 9 22 14.5 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 10 49 31 1.5 0.1 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; # … with 140 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="thanks">Thanks
&lt;a href="#thanks">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to all contributors for this release.&lt;/p>
&lt;p>
&lt;a href="https://github.com/abalter" target="_blank" rel="noopener">@abalter&lt;/a>,
&lt;a href="https://github.com/ambevill" target="_blank" rel="noopener">@ambevill&lt;/a>,
&lt;a href="https://github.com/amitusa17" target="_blank" rel="noopener">@amitusa17&lt;/a>,
&lt;a href="https://github.com/AntoineHffmnn" target="_blank" rel="noopener">@AntoineHffmnn&lt;/a>,
&lt;a href="https://github.com/anuj2054" target="_blank" rel="noopener">@anuj2054&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/behrman" target="_blank" rel="noopener">@behrman&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/burchill" target="_blank" rel="noopener">@burchill&lt;/a>,
&lt;a href="https://github.com/cgrandin" target="_blank" rel="noopener">@cgrandin&lt;/a>,
&lt;a href="https://github.com/clemenshug" target="_blank" rel="noopener">@clemenshug&lt;/a>,
&lt;a href="https://github.com/codetrainee" target="_blank" rel="noopener">@codetrainee&lt;/a>,
&lt;a href="https://github.com/ColinFay" target="_blank" rel="noopener">@ColinFay&lt;/a>,
&lt;a href="https://github.com/dan-reznik" target="_blank" rel="noopener">@dan-reznik&lt;/a>,
&lt;a href="https://github.com/davidsjoberg" target="_blank" rel="noopener">@davidsjoberg&lt;/a>,
&lt;a href="https://github.com/DesiQuintans" target="_blank" rel="noopener">@DesiQuintans&lt;/a>,
&lt;a href="https://github.com/dirkschumacher" target="_blank" rel="noopener">@dirkschumacher&lt;/a>,
&lt;a href="https://github.com/earowang" target="_blank" rel="noopener">@earowang&lt;/a>,
&lt;a href="https://github.com/echasnovski" target="_blank" rel="noopener">@echasnovski&lt;/a>,
&lt;a href="https://github.com/eipi10" target="_blank" rel="noopener">@eipi10&lt;/a>,
&lt;a href="https://github.com/grabear" target="_blank" rel="noopener">@grabear&lt;/a>,
&lt;a href="https://github.com/grandtiger" target="_blank" rel="noopener">@grandtiger&lt;/a>,
&lt;a href="https://github.com/gregorp" target="_blank" rel="noopener">@gregorp&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hanyroze" target="_blank" rel="noopener">@hanyroze&lt;/a>,
&lt;a href="https://github.com/hidekoji" target="_blank" rel="noopener">@hidekoji&lt;/a>,
&lt;a href="https://github.com/huftis" target="_blank" rel="noopener">@huftis&lt;/a>,
&lt;a href="https://github.com/iago-pssjd" target="_blank" rel="noopener">@iago-pssjd&lt;/a>,
&lt;a href="https://github.com/javierluraschi" target="_blank" rel="noopener">@javierluraschi&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jgellar" target="_blank" rel="noopener">@jgellar&lt;/a>,
&lt;a href="https://github.com/jhrcook" target="_blank" rel="noopener">@jhrcook&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/joel23888" target="_blank" rel="noopener">@joel23888&lt;/a>,
&lt;a href="https://github.com/JohnMount" target="_blank" rel="noopener">@JohnMount&lt;/a>,
&lt;a href="https://github.com/johnmous" target="_blank" rel="noopener">@johnmous&lt;/a>,
&lt;a href="https://github.com/jonathan-g" target="_blank" rel="noopener">@jonathan-g&lt;/a>,
&lt;a href="https://github.com/jwbeck97" target="_blank" rel="noopener">@jwbeck97&lt;/a>,
&lt;a href="https://github.com/jzadra" target="_blank" rel="noopener">@jzadra&lt;/a>,
&lt;a href="https://github.com/karimn" target="_blank" rel="noopener">@karimn&lt;/a>,
&lt;a href="https://github.com/kendonB" target="_blank" rel="noopener">@kendonB&lt;/a>,
&lt;a href="https://github.com/koncina" target="_blank" rel="noopener">@koncina&lt;/a>,
&lt;a href="https://github.com/kperkins" target="_blank" rel="noopener">@kperkins&lt;/a>,
&lt;a href="https://github.com/kputschko" target="_blank" rel="noopener">@kputschko&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/kyzphong" target="_blank" rel="noopener">@kyzphong&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/llrs" target="_blank" rel="noopener">@llrs&lt;/a>,
&lt;a href="https://github.com/mariodejung" target="_blank" rel="noopener">@mariodejung&lt;/a>,
&lt;a href="https://github.com/MichaelAdolph" target="_blank" rel="noopener">@MichaelAdolph&lt;/a>,
&lt;a href="https://github.com/michaelwhammer" target="_blank" rel="noopener">@michaelwhammer&lt;/a>,
&lt;a href="https://github.com/MilesMcBain" target="_blank" rel="noopener">@MilesMcBain&lt;/a>,
&lt;a href="https://github.com/mjherold" target="_blank" rel="noopener">@mjherold&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/msberends" target="_blank" rel="noopener">@msberends&lt;/a>,
&lt;a href="https://github.com/mvkorpel" target="_blank" rel="noopener">@mvkorpel&lt;/a>,
&lt;a href="https://github.com/nathancday" target="_blank" rel="noopener">@nathancday&lt;/a>,
&lt;a href="https://github.com/nicokuz" target="_blank" rel="noopener">@nicokuz&lt;/a>,
&lt;a href="https://github.com/nolistic" target="_blank" rel="noopener">@nolistic&lt;/a>,
&lt;a href="https://github.com/oscci" target="_blank" rel="noopener">@oscci&lt;/a>,
&lt;a href="https://github.com/paulponcet" target="_blank" rel="noopener">@paulponcet&lt;/a>,
&lt;a href="https://github.com/PhilippRuchser" target="_blank" rel="noopener">@PhilippRuchser&lt;/a>,
&lt;a href="https://github.com/philstraforelli" target="_blank" rel="noopener">@philstraforelli&lt;/a>,
&lt;a href="https://github.com/psychometrician" target="_blank" rel="noopener">@psychometrician&lt;/a>,
&lt;a href="https://github.com/Ranonymous" target="_blank" rel="noopener">@Ranonymous&lt;/a>,
&lt;a href="https://github.com/rinebob" target="_blank" rel="noopener">@rinebob&lt;/a>,
&lt;a href="https://github.com/romagnolid" target="_blank" rel="noopener">@romagnolid&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/rvg02010" target="_blank" rel="noopener">@rvg02010&lt;/a>,
&lt;a href="https://github.com/slyrus" target="_blank" rel="noopener">@slyrus&lt;/a>,
&lt;a href="https://github.com/snp" target="_blank" rel="noopener">@snp&lt;/a>,
&lt;a href="https://github.com/sowla" target="_blank" rel="noopener">@sowla&lt;/a>,
&lt;a href="https://github.com/ThiAmm" target="_blank" rel="noopener">@ThiAmm&lt;/a>,
&lt;a href="https://github.com/thothal" target="_blank" rel="noopener">@thothal&lt;/a>,
&lt;a href="https://github.com/wfmackey" target="_blank" rel="noopener">@wfmackey&lt;/a>,
&lt;a href="https://github.com/will458" target="_blank" rel="noopener">@will458&lt;/a>,
&lt;a href="https://github.com/wkdavis" target="_blank" rel="noopener">@wkdavis&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>,
&lt;a href="https://github.com/ZahraEconomist" target="_blank" rel="noopener">@ZahraEconomist&lt;/a>, and
&lt;a href="https://github.com/zooman" target="_blank" rel="noopener">@zooman&lt;/a>.&lt;/p></description></item><item><title>dbplyr 1.4.0</title><link>https://www.tidyverse.org/blog/2019/04/dbplyr-1-4-0/</link><pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/04/dbplyr-1-4-0/</guid><description>&lt;p>We&amp;rsquo;re stoked to announce the release of
&lt;a href="https://dbplyr.tidyverse.org" target="_blank" rel="noopener">dbplyr 1.4.0&lt;/a>, the database backend for dplyr that translates R code into SQL. dbplyr allows you to use a remote database as if it was a collection of local data frames: you write ordinary dplyr code and dbplyr turns it into SQL for you.&lt;/p>
&lt;p>You can install the released version from CRAN:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dbplyr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>While there are many small improvements and bug fixes (see the full full details in the
&lt;a href="https://dbplyr.tidyverse.org/news/index.html" target="_blank" rel="noopener">changelog&lt;/a>), the biggest improvements in this release are related to SQL generation. In this blog post, I&amp;rsquo;ll show you how find out what dplyr is doing behind the scenes, discuss some major simplifications to the SQL that dbplyr generates, and then show off a few of the new function translations.&lt;/p>
&lt;p>To get started, I&amp;rsquo;ll load dplyr and dbplyr:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dbplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="sql-simulation">SQL simulation
&lt;a href="#sql-simulation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This version of dbplyr substantially improves the tools that allow you to see what SQL dbplyr generates without needing to connect to a live database. You won&amp;rsquo;t generally need these tools for real data, but they&amp;rsquo;re very useful for blog posts (like this one!), for generating reprexes (as discussed in the new
&lt;a href="https://dbplyr.tidyverse.org/articles/reprex.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;reprex&amp;quot;)&lt;/code>&lt;/a>), and for dbplyr&amp;rsquo;s internal tests.&lt;/p>
&lt;p>The basic idea is that you can create a &amp;ldquo;lazy&amp;rdquo; frame:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df1&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I call this tibble lazy because dplyr operations don&amp;rsquo;t do any work; instead they just record the action so it can later be turned in to a SQL query. You can see this query by printing the lazy tibble:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df1&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT *&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is most useful when you add on a few steps:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df1&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Warning: Missing values are always removed in SQL.&lt;/span>
&lt;span class="c1">#&amp;gt; Use `mean(x, na.rm = TRUE)` to silence this warning&lt;/span>
&lt;span class="c1">#&amp;gt; This warning is displayed only once per session.&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT `x`, AVG(`y`) AS `z`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`&lt;/span>
&lt;span class="c1">#&amp;gt; GROUP BY `x`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(This example also highlights another small improvement to dbplyr: it&amp;rsquo;ll only warn you about missing values being automatically removed in the database once per session.)&lt;/p>
&lt;p>Importantly, &lt;code>lazy_frame()&lt;/code> has a &lt;code>con&lt;/code> argument that allows you to specify which database should be used for the translation. This makes it easier to see the differences in SQL generation between databases:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df1&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">paste&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;item:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">head&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT `x`, `y`, CONCAT_WS(&amp;#39; &amp;#39;, &amp;#39;item:&amp;#39;, `x`) AS `z`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`&lt;/span>
&lt;span class="c1">#&amp;gt; LIMIT 5&lt;/span>
&lt;span class="n">df2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">con&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">simulate_mssql&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">df2&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">paste&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;item:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">head&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT TOP(5) `x`, `y`, &amp;#39;item:&amp;#39; + &amp;#39; &amp;#39; + `x` AS `z`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When you don&amp;rsquo;t specify a connection, dplyr uses its standard translation, which tries to follow the ANSI SQL standard as closely as possible.&lt;/p>
&lt;h2 id="simpler-sql">Simpler SQL
&lt;a href="#simpler-sql">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Two improvements have considerably reduced the number of subqueries that dbplyr needs:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Joins, semi joins, and set operations no longer add additional unneeded
subqueries, and now generate the minimum set:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df1&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">union&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">df2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; (SELECT `x`, `y`, `a`, NULL AS `b`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`)&lt;/span>
&lt;span class="c1">#&amp;gt; UNION&lt;/span>
&lt;span class="c1">#&amp;gt; (SELECT `x`, `y`, NULL AS `a`, `b`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`)&lt;/span>
&lt;span class="nf">left_join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">df2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;x&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;y&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT `LHS`.`x` AS `x`, `LHS`.`y` AS `y`, `LHS`.`a` AS `a`, `RHS`.`b` AS `b`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df` AS `LHS`&lt;/span>
&lt;span class="c1">#&amp;gt; LEFT JOIN `df` AS `RHS`&lt;/span>
&lt;span class="c1">#&amp;gt; ON (`LHS`.`x` = `RHS`.`x` AND `LHS`.`y` = `RHS`.`y`)&lt;/span>
&lt;span class="nf">semi_join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">df2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;x&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;y&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT * FROM `df` AS `LHS`&lt;/span>
&lt;span class="c1">#&amp;gt; WHERE EXISTS (&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT 1 FROM `df` AS `RHS`&lt;/span>
&lt;span class="c1">#&amp;gt; WHERE (`LHS`.`x` = `RHS`.`x` AND `LHS`.`y` = `RHS`.`y`)&lt;/span>
&lt;span class="c1">#&amp;gt; )&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Many sequences of &lt;code>mutate()&lt;/code>, &lt;code>select()&lt;/code>, &lt;code>rename()&lt;/code>, and &lt;code>transmute()&lt;/code>
steps are collapsed into a single query:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT `x` + `y` AS `z`, `y`, `x`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>Note that dbplyr will still generate multiple subqueries from a single mutate statement when needed. This resolves one of my biggest frustrations with SQL:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">b1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">b2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">^&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b1&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">b2&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT `x`, `y`, `a`, `b1`, `b2`, `b1` / `b2` AS `c`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM (SELECT `x`, `y`, `a`, `a` * 3.0 AS `b1`, POWER(`a`, 2.0) AS `b2`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM (SELECT `x`, `y`, `x` + 1.0 AS `a`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`) `dbplyr_001`) `dbplyr_002`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I touch on this advantage of dbplyr over SQL in a new vignette,
&lt;a href="https://dbplyr.tidyverse.org/dev/articles/sql.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;sql&amp;quot;)&lt;/code>&lt;/a>, which also gives some advice about how to write literal SQL, when dbplyr&amp;rsquo;s built-in translations don&amp;rsquo;t work.&lt;/p>
&lt;h2 id="sql-translation">SQL translation
&lt;a href="#sql-translation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As well as improving the translation of high-level dplyr functions, we&amp;rsquo;ve also considerably added to the set of low-level vector functions that dbplyr can translate. Firstly,
&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/window-functions.html" target="_blank" rel="noopener">MySQL&lt;/a> (&amp;gt;= 8.0),
&lt;a href="https://mariadb.com/kb/en/library/window-functions/" target="_blank" rel="noopener">MariaDB&lt;/a> (&amp;gt;= 10.2) and
&lt;a href="https://www.sqlite.org/windowfunctions.html" target="_blank" rel="noopener">SQLite&lt;/a> (&amp;gt;3.25) gain support for
&lt;a href="https://dbplyr.tidyverse.org/dev/articles/translation-function.html#window-functions" target="_blank" rel="noopener">window functions&lt;/a>. These allow you to use summary functions (like &lt;code>mean()&lt;/code> or &lt;code>sum()&lt;/code>) inside of &lt;code>mutate()&lt;/code>, as well as unlocking useful function like &lt;code>min_rank()&lt;/code>, &lt;code>first()&lt;/code>, and &lt;code>lead()&lt;/code>/&lt;code>lag()&lt;/code>.&lt;/p>
&lt;p>Thanks to
&lt;a href="http://github.com/colearendt" target="_blank" rel="noopener">Cole Arendt&lt;/a>, dbplyr now supports translations for a selection of useful functions from stringr (&lt;code>str_c()&lt;/code>, &lt;code>str_sub()&lt;/code>, &lt;code>str_length()&lt;/code>, &lt;code>str_to_upper()&lt;/code>, &lt;code>str_to_lower()&lt;/code>, and &lt;code>str_to_title()&lt;/code>), and lubridate ( &lt;code>today()&lt;/code>, &lt;code>now()&lt;/code>, &lt;code>year()&lt;/code>, &lt;code>month()&lt;/code> (numeric value only), &lt;code>day()&lt;/code>, &lt;code>hour()&lt;/code>, &lt;code>minute()&lt;/code>, &lt;code>second()&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">character&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">birthday&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">character&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">transmute&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">str_to_lower&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">month&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">month&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">mday&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mday&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT LOWER(`name`) AS `name`, EXTRACT(month FROM `birthday`) AS `month`, EXTRACT(day FROM `birthday`) AS `mday`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Thanks to
&lt;a href="http://github.com/davidchall" target="_blank" rel="noopener">David C Hall&lt;/a> we have translations for bitwise operations (&lt;code>bitwNot()&lt;/code>, &lt;code>bitwAnd()&lt;/code>, &lt;code>bitwOr()&lt;/code>, &lt;code>bitwXor()&lt;/code>, &lt;code>bitwShiftL()&lt;/code>, and &lt;code>bitwShiftR()&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lazy_frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">integer&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">integer&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">transmute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">and&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">bitwAnd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">or&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">bitwOr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT `x` &amp;amp; `y` AS `and`, `x` | `y` AS `or`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Thanks to
&lt;a href="http://github.com/edavidaja" target="_blank" rel="noopener">E. David Aja&lt;/a>&amp;lsquo;s research on tidyverse developer day we have improved translations for &lt;code>median()&lt;/code> and &lt;code>quantile()&lt;/code> for all ANSI compliant databases (SQL Server, Postgres, MariaDB), along with custom translations for Hive and Teradata.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">lazy_frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">character&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">numeric&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">median&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT `g`, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY `x`) AS `y`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`&lt;/span>
&lt;span class="c1">#&amp;gt; GROUP BY `g`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, I have improved translation of &lt;code>[&lt;/code>, so that you can use expressions like &lt;code>sum(a[b == 0])&lt;/code> as you would in R:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">tbl_lazy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg_vs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg[vs&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT `cyl`, SUM(CASE WHEN (`vs` = 1.0) THEN (`mpg`) END) AS `mpg_vs`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`&lt;/span>
&lt;span class="c1">#&amp;gt; GROUP BY `cyl`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also now use use &lt;code>x$y&lt;/code> to access nested fields:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">lazy_frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; SELECT `x`, `x`.`y`.`z` AS `z`&lt;/span>
&lt;span class="c1">#&amp;gt; FROM `df`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As always, a big thank goes to the entire community who helped make this release of dbplyr a reality - I really appreciated all your bug reports, helpful comments, SQL suggestions, and pull requests!&lt;/p>
&lt;p>
&lt;a href="https://github.com/alex-gable" target="_blank" rel="noopener">@alex-gable&lt;/a>,
&lt;a href="https://github.com/blairj09" target="_blank" rel="noopener">@blairj09&lt;/a>,
&lt;a href="https://github.com/carvalhomb" target="_blank" rel="noopener">@carvalhomb&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/colearendt" target="_blank" rel="noopener">@colearendt&lt;/a>,
&lt;a href="https://github.com/DanielStay" target="_blank" rel="noopener">@DanielStay&lt;/a>,
&lt;a href="https://github.com/davidchall" target="_blank" rel="noopener">@davidchall&lt;/a>,
&lt;a href="https://github.com/dlindelof" target="_blank" rel="noopener">@dlindelof&lt;/a>,
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>,
&lt;a href="https://github.com/FrancoisGuillem" target="_blank" rel="noopener">@FrancoisGuillem&lt;/a>,
&lt;a href="https://github.com/FranGoitia" target="_blank" rel="noopener">@FranGoitia&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/imanuelcostigan" target="_blank" rel="noopener">@imanuelcostigan&lt;/a>,
&lt;a href="https://github.com/JakeRuss" target="_blank" rel="noopener">@JakeRuss&lt;/a>,
&lt;a href="https://github.com/javierluraschi" target="_blank" rel="noopener">@javierluraschi&lt;/a>,
&lt;a href="https://github.com/jcfisher" target="_blank" rel="noopener">@jcfisher&lt;/a>,
&lt;a href="https://github.com/jkylearmstrong" target="_blank" rel="noopener">@jkylearmstrong&lt;/a>,
&lt;a href="https://github.com/JohnMount" target="_blank" rel="noopener">@JohnMount&lt;/a>,
&lt;a href="https://github.com/jrisi256" target="_blank" rel="noopener">@jrisi256&lt;/a>,
&lt;a href="https://github.com/jsekamane" target="_blank" rel="noopener">@jsekamane&lt;/a>,
&lt;a href="https://github.com/klmedeiros" target="_blank" rel="noopener">@klmedeiros&lt;/a>,
&lt;a href="https://github.com/leungi" target="_blank" rel="noopener">@leungi&lt;/a>,
&lt;a href="https://github.com/Liubuntu" target="_blank" rel="noopener">@Liubuntu&lt;/a>,
&lt;a href="https://github.com/lpatruno" target="_blank" rel="noopener">@lpatruno&lt;/a>,
&lt;a href="https://github.com/lymanmark" target="_blank" rel="noopener">@lymanmark&lt;/a>,
&lt;a href="https://github.com/mkearney" target="_blank" rel="noopener">@mkearney&lt;/a>,
&lt;a href="https://github.com/mkirzon" target="_blank" rel="noopener">@mkirzon&lt;/a>,
&lt;a href="https://github.com/mpettis" target="_blank" rel="noopener">@mpettis&lt;/a>,
&lt;a href="https://github.com/mtoto" target="_blank" rel="noopener">@mtoto&lt;/a>,
&lt;a href="https://github.com/N1h1l1sT" target="_blank" rel="noopener">@N1h1l1sT&lt;/a>,
&lt;a href="https://github.com/nwstephens" target="_blank" rel="noopener">@nwstephens&lt;/a>,
&lt;a href="https://github.com/QuLogic" target="_blank" rel="noopener">@QuLogic&lt;/a>,
&lt;a href="https://github.com/r2evans" target="_blank" rel="noopener">@r2evans&lt;/a>,
&lt;a href="https://github.com/rlh1994" target="_blank" rel="noopener">@rlh1994&lt;/a>,
&lt;a href="https://github.com/shgoke" target="_blank" rel="noopener">@shgoke&lt;/a>,
&lt;a href="https://github.com/tomauer" target="_blank" rel="noopener">@tomauer&lt;/a>, and
&lt;a href="https://github.com/verajosemanuel" target="_blank" rel="noopener">@verajosemanuel&lt;/a>&lt;/p></description></item><item><title>bigrquery 1.1.0</title><link>https://www.tidyverse.org/blog/2019/02/bigrquery-1-1-0/</link><pubDate>Fri, 15 Feb 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/02/bigrquery-1-1-0/</guid><description>&lt;p>We&amp;rsquo;re delighted to announce that
&lt;a href="https://bigrquery.r-dbi.org/" target="_blank" rel="noopener">bigrquery&lt;/a> 1.1.0 is now on CRAN. bigrquery makes it easy to work with data stored in
&lt;a href="https://developers.google.com/bigquery/" target="_blank" rel="noopener">Google BigQuery&lt;/a>, a hosted database for big data. This is a minor release, with some improved type support, and SQL translation. For a complete list of updates, please see the
&lt;a href="https://bigrquery.r-dbi.org/news/index.html#bigrquery-1-1-0" target="_blank" rel="noopener">Changelog&lt;/a>.&lt;/p>
&lt;h2 id="improved-type-support">Improved type support
&lt;a href="#improved-type-support">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://bigrquery.r-dbi.org/reference/bq_table_download.html" target="_blank" rel="noopener">&lt;code>bq_table_download()&lt;/code>&lt;/a> and the
&lt;a href="https://www.rdocumentation.org/packages/DBI/versions/0.5-1/topics/dbConnect" target="_blank" rel="noopener">&lt;code>DBI::dbConnect&lt;/code>&lt;/a> method now have a &lt;code>bigint&lt;/code> argument, which governs how BigQuery integer columns are imported into R. As before, the default will be &lt;code>bigint = &amp;quot;integer&amp;quot;&lt;/code>. However, you can now set &lt;code>bigint = &amp;quot;integer64&amp;quot;&lt;/code> to import BigQuery integer columns as &lt;code>bit64::integer64&lt;/code> columns in R. This allows for values outside the range of integer (&lt;code>-2147483647&lt;/code> to &lt;code>2147483647&lt;/code>). Thanks to
&lt;a href="https://github.com/rasmusab" target="_blank" rel="noopener">Rasmus Bååth&lt;/a> for implementing these changes.&lt;/p>
&lt;p>&lt;code>bq_table_download()&lt;/code> now treats &lt;code>NUMERIC&lt;/code> columns in the same way as &lt;code>FLOAT&lt;/code> columns.&lt;/p>
&lt;p>&lt;code>bq_table_upload()&lt;/code> now works with date-time (&lt;code>POSIXct&lt;/code>) variables. Unparseable date times return &lt;code>NA&lt;/code>.&lt;/p>
&lt;h2 id="sql-translation">SQL translation
&lt;a href="#sql-translation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>&lt;code>as.character()&lt;/code> now translates to &lt;code>SAFE_CAST(x AS STRING)&lt;/code>.&lt;/li>
&lt;li>&lt;code>median()&lt;/code> now translates to &lt;code>APPROX_QUANTILES(x, 2)[SAFE_ORDINAL(2)]&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="minor-fixes">Minor fixes
&lt;a href="#minor-fixes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;a href="https://bigrquery.r-dbi.org/reference/bq_refs.html" target="_blank" rel="noopener">&lt;code>bq_job()&lt;/code>&lt;/a> tracks location, so bigrquery now works painlessly with non-US/EU locations.&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thank you to everyone who contributed to this release:
&lt;a href="https://github.com/414theodore" target="_blank" rel="noopener">@414theodore&lt;/a>,
&lt;a href="https://github.com/ajh3000" target="_blank" rel="noopener">@ajh3000&lt;/a>,
&lt;a href="https://github.com/AlekseyBuzmakov" target="_blank" rel="noopener">@AlekseyBuzmakov&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/byapparov" target="_blank" rel="noopener">@byapparov&lt;/a>,
&lt;a href="https://github.com/ChrisJohnsonUMG" target="_blank" rel="noopener">@ChrisJohnsonUMG&lt;/a>,
&lt;a href="https://github.com/cpcgoogle" target="_blank" rel="noopener">@cpcgoogle&lt;/a>,
&lt;a href="https://github.com/dujm" target="_blank" rel="noopener">@dujm&lt;/a>,
&lt;a href="https://github.com/eddelbuettel" target="_blank" rel="noopener">@eddelbuettel&lt;/a>,
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>,
&lt;a href="https://github.com/everron" target="_blank" rel="noopener">@everron&lt;/a>,
&lt;a href="https://github.com/guillaumed90" target="_blank" rel="noopener">@guillaumed90&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/Iuiu1234" target="_blank" rel="noopener">@Iuiu1234&lt;/a>,
&lt;a href="https://github.com/izzetagoren" target="_blank" rel="noopener">@izzetagoren&lt;/a>,
&lt;a href="https://github.com/j450h1" target="_blank" rel="noopener">@j450h1&lt;/a>,
&lt;a href="https://github.com/jberninger" target="_blank" rel="noopener">@jberninger&lt;/a>,
&lt;a href="https://github.com/jordanwebb10" target="_blank" rel="noopener">@jordanwebb10&lt;/a>,
&lt;a href="https://github.com/jrecasens" target="_blank" rel="noopener">@jrecasens&lt;/a>,
&lt;a href="https://github.com/KarimZaoui" target="_blank" rel="noopener">@KarimZaoui&lt;/a>,
&lt;a href="https://github.com/ldanai" target="_blank" rel="noopener">@ldanai&lt;/a>,
&lt;a href="https://github.com/paulsendavidjay" target="_blank" rel="noopener">@paulsendavidjay&lt;/a>,
&lt;a href="https://github.com/ras44" target="_blank" rel="noopener">@ras44&lt;/a>,
&lt;a href="https://github.com/rasmusab" target="_blank" rel="noopener">@rasmusab&lt;/a>,
&lt;a href="https://github.com/Saikri5hna" target="_blank" rel="noopener">@Saikri5hna&lt;/a>,
&lt;a href="https://github.com/selcukakbas" target="_blank" rel="noopener">@selcukakbas&lt;/a>,
&lt;a href="https://github.com/SergeiMakarovWeb" target="_blank" rel="noopener">@SergeiMakarovWeb&lt;/a>,
&lt;a href="https://github.com/skydavis435" target="_blank" rel="noopener">@skydavis435&lt;/a>,
&lt;a href="https://github.com/tdsmith" target="_blank" rel="noopener">@tdsmith&lt;/a>,
&lt;a href="https://github.com/tinoater" target="_blank" rel="noopener">@tinoater&lt;/a>,
&lt;a href="https://github.com/tortorellij1" target="_blank" rel="noopener">@tortorellij1&lt;/a>,
&lt;a href="https://github.com/valentinumbach" target="_blank" rel="noopener">@valentinumbach&lt;/a>, and
&lt;a href="https://github.com/zacdav" target="_blank" rel="noopener">@zacdav&lt;/a>.&lt;/p></description></item><item><title>dplyr 0.8.0</title><link>https://www.tidyverse.org/blog/2019/02/dplyr-0-8-0/</link><pubDate>Fri, 15 Feb 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/02/dplyr-0-8-0/</guid><description>&lt;p>We&amp;rsquo;re tickled pink to announce the release of version 0.8.0 of
&lt;a href="https://dplyr.tidyverse.org" target="_blank" rel="noopener">dplyr&lt;/a>, the grammar of data manipulation in the tidyverse.
This is a major update that has kept us busy for almost a year. We take the coincidence of a Valentine&amp;rsquo;s day release as a sign
of continuous ❤️ for &lt;code>dplyr&lt;/code>'s approach to tidy data manipulation.&lt;/p>
&lt;p>Important changes are discussed in detail in the
&lt;a href="https://www.tidyverse.org/articles/2018/12/dplyr-0-8-0-release-candidate/" target="_blank" rel="noopener">pre-release post&lt;/a>,
we are grateful to members of the community for their feedback in the last couple of months, this
has been tremendously useful in making the release process smoother.&lt;/p>
&lt;p>The bulk of the changes are internal, and part of an ongoing effort to make the codebase more robust and
less surprising. This is an investment that will continue to pay off for years, and serve as a foundation for
more innovations in the future.&lt;/p>
&lt;p>For a comprehensive list of changes, please see
&lt;a href="https://dplyr.tidyverse.org/news/index.html#dplyr-0-8-0" target="_blank" rel="noopener">the NEWS&lt;/a>
for the 0.8.0 release, the sections below discusses the main changes.&lt;/p>
&lt;h2 id="group-hug">Group hug
&lt;a href="#group-hug">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Grouping has always been at the center of what &lt;code>dplyr&lt;/code> is about, this release expands on the
existing &lt;code>group_by()&lt;/code> with a set of &lt;em>experimental&lt;/em> functions with a variety of
perspectives on the notion of grouping.&lt;/p>
&lt;p>We believe they offer new unique possibilities, but we welcome community feedback and use cases
before we put a 💍 on them. Let&amp;rsquo;s illustrate them with a subset from the
well-known &lt;code>gapminder&lt;/code> data.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">oceania&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">gapminder&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">gapminder&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">continent&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;Oceania&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yr1952&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">year&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="m">1952&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">continent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">country&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">oceania&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 24 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: country [2]&lt;/span>
&lt;span class="c1">#&amp;gt; country year lifeExp pop gdpPercap yr1952&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Australia 1952 69.1 8691212 10040. 0&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Australia 1957 70.3 9712569 10950. 5&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Australia 1962 70.9 10794968 12217. 10&lt;/span>
&lt;span class="c1">#&amp;gt; 4 Australia 1967 71.1 11872264 14526. 15&lt;/span>
&lt;span class="c1">#&amp;gt; 5 Australia 1972 71.9 13177000 16789. 20&lt;/span>
&lt;span class="c1">#&amp;gt; 6 Australia 1977 73.5 14074100 18334. 25&lt;/span>
&lt;span class="c1">#&amp;gt; 7 Australia 1982 74.7 15184200 19477. 30&lt;/span>
&lt;span class="c1">#&amp;gt; 8 Australia 1987 76.3 16257249 21889. 35&lt;/span>
&lt;span class="c1">#&amp;gt; 9 Australia 1992 77.6 17481977 23425. 40&lt;/span>
&lt;span class="c1">#&amp;gt; 10 Australia 1997 78.8 18565243 26998. 45&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 14 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/group_nest.html" target="_blank" rel="noopener">group_nest()&lt;/a> is similar to
&lt;code>tidyr::nest()&lt;/code>, but focuses on the variables to &lt;em>nest by&lt;/em> instead of the nested columns.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">oceania&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_nest&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 2 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; country data &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 Australia &amp;lt;tibble [12 × 5]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 New Zealand &amp;lt;tibble [12 × 5]&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/group_split.html" target="_blank" rel="noopener">group_split()&lt;/a> is a tidy version
of &lt;code>base::split()&lt;/code>. In particular, it respects a &lt;code>group_by()&lt;/code>-like grouping specification,
and refuses to name its result.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">oceania&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_split&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [[1]]&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 12 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; country year lifeExp pop gdpPercap yr1952&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Australia 1952 69.1 8691212 10040. 0&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Australia 1957 70.3 9712569 10950. 5&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Australia 1962 70.9 10794968 12217. 10&lt;/span>
&lt;span class="c1">#&amp;gt; 4 Australia 1967 71.1 11872264 14526. 15&lt;/span>
&lt;span class="c1">#&amp;gt; 5 Australia 1972 71.9 13177000 16789. 20&lt;/span>
&lt;span class="c1">#&amp;gt; 6 Australia 1977 73.5 14074100 18334. 25&lt;/span>
&lt;span class="c1">#&amp;gt; 7 Australia 1982 74.7 15184200 19477. 30&lt;/span>
&lt;span class="c1">#&amp;gt; 8 Australia 1987 76.3 16257249 21889. 35&lt;/span>
&lt;span class="c1">#&amp;gt; 9 Australia 1992 77.6 17481977 23425. 40&lt;/span>
&lt;span class="c1">#&amp;gt; 10 Australia 1997 78.8 18565243 26998. 45&lt;/span>
&lt;span class="c1">#&amp;gt; 11 Australia 2002 80.4 19546792 30688. 50&lt;/span>
&lt;span class="c1">#&amp;gt; 12 Australia 2007 81.2 20434176 34435. 55&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[2]]&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 12 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; country year lifeExp pop gdpPercap yr1952&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 New Zealand 1952 69.4 1994794 10557. 0&lt;/span>
&lt;span class="c1">#&amp;gt; 2 New Zealand 1957 70.3 2229407 12247. 5&lt;/span>
&lt;span class="c1">#&amp;gt; 3 New Zealand 1962 71.2 2488550 13176. 10&lt;/span>
&lt;span class="c1">#&amp;gt; 4 New Zealand 1967 71.5 2728150 14464. 15&lt;/span>
&lt;span class="c1">#&amp;gt; 5 New Zealand 1972 71.9 2929100 16046. 20&lt;/span>
&lt;span class="c1">#&amp;gt; 6 New Zealand 1977 72.2 3164900 16234. 25&lt;/span>
&lt;span class="c1">#&amp;gt; 7 New Zealand 1982 73.8 3210650 17632. 30&lt;/span>
&lt;span class="c1">#&amp;gt; 8 New Zealand 1987 74.3 3317166 19007. 35&lt;/span>
&lt;span class="c1">#&amp;gt; 9 New Zealand 1992 76.3 3437674 18363. 40&lt;/span>
&lt;span class="c1">#&amp;gt; 10 New Zealand 1997 77.6 3676187 21050. 45&lt;/span>
&lt;span class="c1">#&amp;gt; 11 New Zealand 2002 79.1 3908037 23190. 50&lt;/span>
&lt;span class="c1">#&amp;gt; 12 New Zealand 2007 80.2 4115771 25185. 55&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/group_map.html" target="_blank" rel="noopener">group_map()&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/group_map.html" target="_blank" rel="noopener">group_walk()&lt;/a> offer
a way to iterate on groups of a grouped data frame.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">oceania&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yr1952&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">year&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="m">1952&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="n">broom&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">tidy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stats&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">lm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lifeExp&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">yr1952&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">.x&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 6&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: country [2]&lt;/span>
&lt;span class="c1">#&amp;gt; country term estimate std.error statistic p.value&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Australia (Intercept) 68.4 0.337 203. 2.07e-19&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Australia yr1952 0.228 0.0104 21.9 8.67e-10&lt;/span>
&lt;span class="c1">#&amp;gt; 3 New Zealand (Intercept) 68.7 0.437 157. 2.66e-18&lt;/span>
&lt;span class="c1">#&amp;gt; 4 New Zealand yr1952 0.193 0.0135 14.3 5.41e- 8&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/group_data.html" target="_blank" rel="noopener">group_data()&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/group_data.html" target="_blank" rel="noopener">group_rows()&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/group_split.html" target="_blank" rel="noopener">group_keys()&lt;/a> expose the grouping information, that has
been restructured in a tibble.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">oceania&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_data&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 2 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; country .rows &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 Australia &amp;lt;int [12]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 New Zealand &amp;lt;int [12]&amp;gt;&lt;/span>
&lt;span class="n">oceania&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_keys&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 2 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; country &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 Australia &lt;/span>
&lt;span class="c1">#&amp;gt; 2 New Zealand&lt;/span>
&lt;span class="n">oceania&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_rows&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [[1]]&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 1 2 3 4 5 6 7 8 9 10 11 12&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[2]]&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 13 14 15 16 17 18 19 20 21 22 23 24&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">group_by()&lt;/a> gains a &lt;code>.drop&lt;/code> argument
which you can set to &lt;code>FALSE&lt;/code> to respect empty groups associated with factors (more on this below).&lt;/li>
&lt;/ul>
&lt;h2 id="give-factors-some-love">Give factors some love
&lt;a href="#give-factors-some-love">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The internal grouping algorithm has been redesigned to make it possible to
better respect factor levels and empty groups. To limit the disruption, we have not made
this the default behaviour. To keep empty groups,
you have to set
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">group_by()&lt;/a>&amp;lsquo;s
&lt;code>.drop&lt;/code> argument to &lt;code>FALSE&lt;/code>.&lt;/p>
&lt;p>This can make data manipulation more predictable and reliable, because when factors are
involved, the groups are based on the levels of the factors, rather than which levels
have data points.&lt;/p>
&lt;p>Let&amp;rsquo;s illustrate this with our favourite flowers 💐,
and a function, &lt;code>species_count()&lt;/code>, that counts the number of each species after
a &lt;code>filter()&lt;/code>, and structures it as a tibble with one column per species.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">species_count&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.drop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">n&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="n">tidyr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">spread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Because we use &lt;code>.drop = FALSE&lt;/code> we get one column per level of the factor,
even when there&amp;rsquo;s no data associated with a level:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">species_count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Petal.Length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; setosa versicolor virginica&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 0 49 50&lt;/span>
&lt;span class="nf">species_count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Petal.Length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="m">6.5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; setosa versicolor virginica&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 0 0 4&lt;/span>
&lt;span class="nf">species_count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Petal.Length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="m">42&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; setosa versicolor virginica&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 0 0 0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>These 0 instead of missing columns make the experience easier when you want to combine multiple results:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">limits&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">seq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">.5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">limits&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="n">purrr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">map_dfr&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">~&lt;/span>&lt;span class="nf">species_count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Petal.Length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">.x&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">limits&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">everything&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 17 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length setosa versicolor virginica&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 0 50 50 50&lt;/span>
&lt;span class="c1">#&amp;gt; 2 0.5 50 50 50&lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 49 50 50&lt;/span>
&lt;span class="c1">#&amp;gt; 4 1.5 13 50 50&lt;/span>
&lt;span class="c1">#&amp;gt; 5 2 0 50 50&lt;/span>
&lt;span class="c1">#&amp;gt; 6 2.5 0 50 50&lt;/span>
&lt;span class="c1">#&amp;gt; 7 3 0 49 50&lt;/span>
&lt;span class="c1">#&amp;gt; 8 3.5 0 45 50&lt;/span>
&lt;span class="c1">#&amp;gt; 9 4 0 34 50&lt;/span>
&lt;span class="c1">#&amp;gt; 10 4.5 0 14 49&lt;/span>
&lt;span class="c1">#&amp;gt; 11 5 0 1 41&lt;/span>
&lt;span class="c1">#&amp;gt; 12 5.5 0 0 25&lt;/span>
&lt;span class="c1">#&amp;gt; 13 6 0 0 9&lt;/span>
&lt;span class="c1">#&amp;gt; 14 6.5 0 0 4&lt;/span>
&lt;span class="c1">#&amp;gt; 15 7 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 16 7.5 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 17 8 0 0 0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="thanks">Thanks
&lt;a href="#thanks">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to all contributors for this release.&lt;/p>
&lt;p>
&lt;a href="https://github.com/abouf" target="_blank" rel="noopener">@abouf&lt;/a>,
&lt;a href="https://github.com/adisarid" target="_blank" rel="noopener">@adisarid&lt;/a>,
&lt;a href="https://github.com/adrfantini" target="_blank" rel="noopener">@adrfantini&lt;/a>,
&lt;a href="https://github.com/aetiologicCanada" target="_blank" rel="noopener">@aetiologicCanada&lt;/a>,
&lt;a href="https://github.com/afdta" target="_blank" rel="noopener">@afdta&lt;/a>,
&lt;a href="https://github.com/albertomv83" target="_blank" rel="noopener">@albertomv83&lt;/a>,
&lt;a href="https://github.com/alistaire47" target="_blank" rel="noopener">@alistaire47&lt;/a>,
&lt;a href="https://github.com/aloes2512" target="_blank" rel="noopener">@aloes2512&lt;/a>,
&lt;a href="https://github.com/andresimi" target="_blank" rel="noopener">@andresimi&lt;/a>,
&lt;a href="https://github.com/antaldaniel" target="_blank" rel="noopener">@antaldaniel&lt;/a>,
&lt;a href="https://github.com/AnthonyEbert" target="_blank" rel="noopener">@AnthonyEbert&lt;/a>,
&lt;a href="https://github.com/ArtemSokolov" target="_blank" rel="noopener">@ArtemSokolov&lt;/a>,
&lt;a href="https://github.com/AshesITR" target="_blank" rel="noopener">@AshesITR&lt;/a>,
&lt;a href="https://github.com/bakaburg1" target="_blank" rel="noopener">@bakaburg1&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/bbachrach" target="_blank" rel="noopener">@bbachrach&lt;/a>,
&lt;a href="https://github.com/bbolker" target="_blank" rel="noopener">@bbolker&lt;/a>,
&lt;a href="https://github.com/behrman" target="_blank" rel="noopener">@behrman&lt;/a>,
&lt;a href="https://github.com/BenjaminLouis" target="_blank" rel="noopener">@BenjaminLouis&lt;/a>,
&lt;a href="https://github.com/bifouba" target="_blank" rel="noopener">@bifouba&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/bnicenboim" target="_blank" rel="noopener">@bnicenboim&lt;/a>,
&lt;a href="https://github.com/BobMuenchen" target="_blank" rel="noopener">@BobMuenchen&lt;/a>,
&lt;a href="https://github.com/brooke-watson" target="_blank" rel="noopener">@brooke-watson&lt;/a>,
&lt;a href="https://github.com/CarolineBarret" target="_blank" rel="noopener">@CarolineBarret&lt;/a>,
&lt;a href="https://github.com/cbailiss" target="_blank" rel="noopener">@cbailiss&lt;/a>,
&lt;a href="https://github.com/CerebralMastication" target="_blank" rel="noopener">@CerebralMastication&lt;/a>,
&lt;a href="https://github.com/cfhammill" target="_blank" rel="noopener">@cfhammill&lt;/a>,
&lt;a href="https://github.com/cfry-propeller" target="_blank" rel="noopener">@cfry-propeller&lt;/a>,
&lt;a href="https://github.com/choisy" target="_blank" rel="noopener">@choisy&lt;/a>,
&lt;a href="https://github.com/ChrisBeeley" target="_blank" rel="noopener">@ChrisBeeley&lt;/a>,
&lt;a href="https://github.com/chrsigg" target="_blank" rel="noopener">@chrsigg&lt;/a>,
&lt;a href="https://github.com/clauswilke" target="_blank" rel="noopener">@clauswilke&lt;/a>,
&lt;a href="https://github.com/ClaytonJY" target="_blank" rel="noopener">@ClaytonJY&lt;/a>,
&lt;a href="https://github.com/colearendt" target="_blank" rel="noopener">@colearendt&lt;/a>,
&lt;a href="https://github.com/ColinFay" target="_blank" rel="noopener">@ColinFay&lt;/a>,
&lt;a href="https://github.com/coolbutuseless" target="_blank" rel="noopener">@coolbutuseless&lt;/a>,
&lt;a href="https://github.com/Copepoda" target="_blank" rel="noopener">@Copepoda&lt;/a>,
&lt;a href="https://github.com/cpsievert" target="_blank" rel="noopener">@cpsievert&lt;/a>,
&lt;a href="https://github.com/dah33" target="_blank" rel="noopener">@dah33&lt;/a>,
&lt;a href="https://github.com/damianooldoni" target="_blank" rel="noopener">@damianooldoni&lt;/a>,
&lt;a href="https://github.com/DanChaltiel" target="_blank" rel="noopener">@DanChaltiel&lt;/a>,
&lt;a href="https://github.com/danyal123" target="_blank" rel="noopener">@danyal123&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/Demetrio92" target="_blank" rel="noopener">@Demetrio92&lt;/a>,
&lt;a href="https://github.com/dewoller" target="_blank" rel="noopener">@dewoller&lt;/a>,
&lt;a href="https://github.com/dfalbel" target="_blank" rel="noopener">@dfalbel&lt;/a>,
&lt;a href="https://github.com/DiogoFerrari" target="_blank" rel="noopener">@DiogoFerrari&lt;/a>,
&lt;a href="https://github.com/dirkschumacher" target="_blank" rel="noopener">@dirkschumacher&lt;/a>,
&lt;a href="https://github.com/dmenne" target="_blank" rel="noopener">@dmenne&lt;/a>,
&lt;a href="https://github.com/dmvianna" target="_blank" rel="noopener">@dmvianna&lt;/a>,
&lt;a href="https://github.com/dongzhuoer" target="_blank" rel="noopener">@dongzhuoer&lt;/a>,
&lt;a href="https://github.com/earowang" target="_blank" rel="noopener">@earowang&lt;/a>,
&lt;a href="https://github.com/echasnovski" target="_blank" rel="noopener">@echasnovski&lt;/a>,
&lt;a href="https://github.com/eddelbuettel" target="_blank" rel="noopener">@eddelbuettel&lt;/a>,
&lt;a href="https://github.com/EdwinTh" target="_blank" rel="noopener">@EdwinTh&lt;/a>,
&lt;a href="https://github.com/eijoac" target="_blank" rel="noopener">@eijoac&lt;/a>,
&lt;a href="https://github.com/elbersb" target="_blank" rel="noopener">@elbersb&lt;/a>,
&lt;a href="https://github.com/Eli-Berkow" target="_blank" rel="noopener">@Eli-Berkow&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/epetrovski" target="_blank" rel="noopener">@epetrovski&lt;/a>,
&lt;a href="https://github.com/erblast" target="_blank" rel="noopener">@erblast&lt;/a>,
&lt;a href="https://github.com/etienne-s" target="_blank" rel="noopener">@etienne-s&lt;/a>,
&lt;a href="https://github.com/foundinblank" target="_blank" rel="noopener">@foundinblank&lt;/a>,
&lt;a href="https://github.com/FrancoisGuillem" target="_blank" rel="noopener">@FrancoisGuillem&lt;/a>,
&lt;a href="https://github.com/geotheory" target="_blank" rel="noopener">@geotheory&lt;/a>,
&lt;a href="https://github.com/ggrothendieck" target="_blank" rel="noopener">@ggrothendieck&lt;/a>,
&lt;a href="https://github.com/GoldbergData" target="_blank" rel="noopener">@GoldbergData&lt;/a>,
&lt;a href="https://github.com/gowerc" target="_blank" rel="noopener">@gowerc&lt;/a>,
&lt;a href="https://github.com/grayskripko" target="_blank" rel="noopener">@grayskripko&lt;/a>,
&lt;a href="https://github.com/GrimTrigger88" target="_blank" rel="noopener">@GrimTrigger88&lt;/a>,
&lt;a href="https://github.com/grizzthepro64" target="_blank" rel="noopener">@grizzthepro64&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hafen" target="_blank" rel="noopener">@hafen&lt;/a>,
&lt;a href="https://github.com/heavywatal" target="_blank" rel="noopener">@heavywatal&lt;/a>,
&lt;a href="https://github.com/helix123" target="_blank" rel="noopener">@helix123&lt;/a>,
&lt;a href="https://github.com/henrikmidtiby" target="_blank" rel="noopener">@henrikmidtiby&lt;/a>,
&lt;a href="https://github.com/hpeaker" target="_blank" rel="noopener">@hpeaker&lt;/a>,
&lt;a href="https://github.com/htc502" target="_blank" rel="noopener">@htc502&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/ignacio82" target="_blank" rel="noopener">@ignacio82&lt;/a>,
&lt;a href="https://github.com/igoldin2u" target="_blank" rel="noopener">@igoldin2u&lt;/a>,
&lt;a href="https://github.com/igordot" target="_blank" rel="noopener">@igordot&lt;/a>,
&lt;a href="https://github.com/ilarischeinin" target="_blank" rel="noopener">@ilarischeinin&lt;/a>,
&lt;a href="https://github.com/Ilia-Kosenkov" target="_blank" rel="noopener">@Ilia-Kosenkov&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/ipofanes" target="_blank" rel="noopener">@ipofanes&lt;/a>,
&lt;a href="https://github.com/jasonmhoule" target="_blank" rel="noopener">@jasonmhoule&lt;/a>,
&lt;a href="https://github.com/jayhesselberth" target="_blank" rel="noopener">@jayhesselberth&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jepusto" target="_blank" rel="noopener">@jepusto&lt;/a>,
&lt;a href="https://github.com/jflynn264" target="_blank" rel="noopener">@jflynn264&lt;/a>,
&lt;a href="https://github.com/jialu512" target="_blank" rel="noopener">@jialu512&lt;/a>,
&lt;a href="https://github.com/JiaxiangBU" target="_blank" rel="noopener">@JiaxiangBU&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jkylearmstrongibx" target="_blank" rel="noopener">@jkylearmstrongibx&lt;/a>,
&lt;a href="https://github.com/jnolis" target="_blank" rel="noopener">@jnolis&lt;/a>,
&lt;a href="https://github.com/JohnMount" target="_blank" rel="noopener">@JohnMount&lt;/a>,
&lt;a href="https://github.com/jonkeane" target="_blank" rel="noopener">@jonkeane&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/jschelbert" target="_blank" rel="noopener">@jschelbert&lt;/a>,
&lt;a href="https://github.com/jsekamane" target="_blank" rel="noopener">@jsekamane&lt;/a>,
&lt;a href="https://github.com/jtelleria" target="_blank" rel="noopener">@jtelleria&lt;/a>,
&lt;a href="https://github.com/kendonB" target="_blank" rel="noopener">@kendonB&lt;/a>,
&lt;a href="https://github.com/kevinykuo" target="_blank" rel="noopener">@kevinykuo&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/langbe" target="_blank" rel="noopener">@langbe&lt;/a>,
&lt;a href="https://github.com/ldecicco-USGS" target="_blank" rel="noopener">@ldecicco-USGS&lt;/a>,
&lt;a href="https://github.com/leungi" target="_blank" rel="noopener">@leungi&lt;/a>,
&lt;a href="https://github.com/libbieweimer" target="_blank" rel="noopener">@libbieweimer&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/liz-is" target="_blank" rel="noopener">@liz-is&lt;/a>,
&lt;a href="https://github.com/lloven" target="_blank" rel="noopener">@lloven&lt;/a>,
&lt;a href="https://github.com/ltrgoddard" target="_blank" rel="noopener">@ltrgoddard&lt;/a>,
&lt;a href="https://github.com/luccastermans" target="_blank" rel="noopener">@luccastermans&lt;/a>,
&lt;a href="https://github.com/maicel1978" target="_blank" rel="noopener">@maicel1978&lt;/a>,
&lt;a href="https://github.com/Make42" target="_blank" rel="noopener">@Make42&lt;/a>,
&lt;a href="https://github.com/MalditoBarbudo" target="_blank" rel="noopener">@MalditoBarbudo&lt;/a>,
&lt;a href="https://github.com/markdly" target="_blank" rel="noopener">@markdly&lt;/a>,
&lt;a href="https://github.com/markvanderloo" target="_blank" rel="noopener">@markvanderloo&lt;/a>,
&lt;a href="https://github.com/mattbk" target="_blank" rel="noopener">@mattbk&lt;/a>,
&lt;a href="https://github.com/maxheld83" target="_blank" rel="noopener">@maxheld83&lt;/a>,
&lt;a href="https://github.com/melissakey" target="_blank" rel="noopener">@melissakey&lt;/a>,
&lt;a href="https://github.com/mem48" target="_blank" rel="noopener">@mem48&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/mikmart" target="_blank" rel="noopener">@mikmart&lt;/a>,
&lt;a href="https://github.com/MilesMcBain" target="_blank" rel="noopener">@MilesMcBain&lt;/a>,
&lt;a href="https://github.com/minhsphuc12" target="_blank" rel="noopener">@minhsphuc12&lt;/a>,
&lt;a href="https://github.com/mkoohafkan" target="_blank" rel="noopener">@mkoohafkan&lt;/a>,
&lt;a href="https://github.com/momeara" target="_blank" rel="noopener">@momeara&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/move[bot]" target="_blank" rel="noopener">@move[bot]&lt;/a>,
&lt;a href="https://github.com/nealpsmith" target="_blank" rel="noopener">@nealpsmith&lt;/a>,
&lt;a href="https://github.com/NightWinkle" target="_blank" rel="noopener">@NightWinkle&lt;/a>,
&lt;a href="https://github.com/o1iv3r" target="_blank" rel="noopener">@o1iv3r&lt;/a>,
&lt;a href="https://github.com/PascalKieslich" target="_blank" rel="noopener">@PascalKieslich&lt;/a>,
&lt;a href="https://github.com/petermeissner" target="_blank" rel="noopener">@petermeissner&lt;/a>,
&lt;a href="https://github.com/peterzsohar" target="_blank" rel="noopener">@peterzsohar&lt;/a>,
&lt;a href="https://github.com/philstraforelli" target="_blank" rel="noopener">@philstraforelli&lt;/a>,
&lt;a href="https://github.com/PMassicotte" target="_blank" rel="noopener">@PMassicotte&lt;/a>,
&lt;a href="https://github.com/PPICARDO" target="_blank" rel="noopener">@PPICARDO&lt;/a>,
&lt;a href="https://github.com/privefl" target="_blank" rel="noopener">@privefl&lt;/a>,
&lt;a href="https://github.com/prokulski" target="_blank" rel="noopener">@prokulski&lt;/a>,
&lt;a href="https://github.com/quartin" target="_blank" rel="noopener">@quartin&lt;/a>,
&lt;a href="https://github.com/rabutler-usbr" target="_blank" rel="noopener">@rabutler-usbr&lt;/a>,
&lt;a href="https://github.com/ramongallego" target="_blank" rel="noopener">@ramongallego&lt;/a>,
&lt;a href="https://github.com/randomgambit" target="_blank" rel="noopener">@randomgambit&lt;/a>,
&lt;a href="https://github.com/rappster" target="_blank" rel="noopener">@rappster&lt;/a>,
&lt;a href="https://github.com/rensa" target="_blank" rel="noopener">@rensa&lt;/a>,
&lt;a href="https://github.com/reshmamena" target="_blank" rel="noopener">@reshmamena&lt;/a>,
&lt;a href="https://github.com/richard987" target="_blank" rel="noopener">@richard987&lt;/a>,
&lt;a href="https://github.com/richierocks" target="_blank" rel="noopener">@richierocks&lt;/a>,
&lt;a href="https://github.com/RickPack" target="_blank" rel="noopener">@RickPack&lt;/a>,
&lt;a href="https://github.com/riship2009" target="_blank" rel="noopener">@riship2009&lt;/a>,
&lt;a href="https://github.com/RobertMyles" target="_blank" rel="noopener">@RobertMyles&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/rontomer" target="_blank" rel="noopener">@rontomer&lt;/a>,
&lt;a href="https://github.com/roumail" target="_blank" rel="noopener">@roumail&lt;/a>,
&lt;a href="https://github.com/rozsoma" target="_blank" rel="noopener">@rozsoma&lt;/a>,
&lt;a href="https://github.com/rundel" target="_blank" rel="noopener">@rundel&lt;/a>,
&lt;a href="https://github.com/rupesh2017" target="_blank" rel="noopener">@rupesh2017&lt;/a>,
&lt;a href="https://github.com/s-fleck" target="_blank" rel="noopener">@s-fleck&lt;/a>,
&lt;a href="https://github.com/S-UP" target="_blank" rel="noopener">@S-UP&lt;/a>,
&lt;a href="https://github.com/salmansyed0709" target="_blank" rel="noopener">@salmansyed0709&lt;/a>,
&lt;a href="https://github.com/schloerke" target="_blank" rel="noopener">@schloerke&lt;/a>,
&lt;a href="https://github.com/seasmith" target="_blank" rel="noopener">@seasmith&lt;/a>,
&lt;a href="https://github.com/sharlagelfand" target="_blank" rel="noopener">@sharlagelfand&lt;/a>,
&lt;a href="https://github.com/shizidushu" target="_blank" rel="noopener">@shizidushu&lt;/a>,
&lt;a href="https://github.com/simon-anasta" target="_blank" rel="noopener">@simon-anasta&lt;/a>,
&lt;a href="https://github.com/skaltman" target="_blank" rel="noopener">@skaltman&lt;/a>,
&lt;a href="https://github.com/skylarhopkins" target="_blank" rel="noopener">@skylarhopkins&lt;/a>,
&lt;a href="https://github.com/sowla" target="_blank" rel="noopener">@sowla&lt;/a>,
&lt;a href="https://github.com/statsccpr" target="_blank" rel="noopener">@statsccpr&lt;/a>,
&lt;a href="https://github.com/stenhaug" target="_blank" rel="noopener">@stenhaug&lt;/a>,
&lt;a href="https://github.com/streamline55" target="_blank" rel="noopener">@streamline55&lt;/a>,
&lt;a href="https://github.com/stuartE9" target="_blank" rel="noopener">@stuartE9&lt;/a>,
&lt;a href="https://github.com/stufield" target="_blank" rel="noopener">@stufield&lt;/a>,
&lt;a href="https://github.com/suzanbaert" target="_blank" rel="noopener">@suzanbaert&lt;/a>,
&lt;a href="https://github.com/sverchkov" target="_blank" rel="noopener">@sverchkov&lt;/a>,
&lt;a href="https://github.com/thackl" target="_blank" rel="noopener">@thackl&lt;/a>,
&lt;a href="https://github.com/the-knife" target="_blank" rel="noopener">@the-knife&lt;/a>,
&lt;a href="https://github.com/ThiAmm" target="_blank" rel="noopener">@ThiAmm&lt;/a>,
&lt;a href="https://github.com/thisisnic" target="_blank" rel="noopener">@thisisnic&lt;/a>,
&lt;a href="https://github.com/tinyheero" target="_blank" rel="noopener">@tinyheero&lt;/a>,
&lt;a href="https://github.com/tmelconian" target="_blank" rel="noopener">@tmelconian&lt;/a>,
&lt;a href="https://github.com/tobadia" target="_blank" rel="noopener">@tobadia&lt;/a>,
&lt;a href="https://github.com/tonyelhabr" target="_blank" rel="noopener">@tonyelhabr&lt;/a>,
&lt;a href="https://github.com/torbjorn" target="_blank" rel="noopener">@torbjorn&lt;/a>,
&lt;a href="https://github.com/trueNico" target="_blank" rel="noopener">@trueNico&lt;/a>,
&lt;a href="https://github.com/tungmilan" target="_blank" rel="noopener">@tungmilan&lt;/a>,
&lt;a href="https://github.com/TylerGrantSmith" target="_blank" rel="noopener">@TylerGrantSmith&lt;/a>,
&lt;a href="https://github.com/ukkonen" target="_blank" rel="noopener">@ukkonen&lt;/a>,
&lt;a href="https://github.com/vincentanutama" target="_blank" rel="noopener">@vincentanutama&lt;/a>,
&lt;a href="https://github.com/vnijs" target="_blank" rel="noopener">@vnijs&lt;/a>,
&lt;a href="https://github.com/wanfahmi" target="_blank" rel="noopener">@wanfahmi&lt;/a>,
&lt;a href="https://github.com/waynelapierre" target="_blank" rel="noopener">@waynelapierre&lt;/a>,
&lt;a href="https://github.com/wch" target="_blank" rel="noopener">@wch&lt;/a>,
&lt;a href="https://github.com/wdenton" target="_blank" rel="noopener">@wdenton&lt;/a>,
&lt;a href="https://github.com/wgrundlingh" target="_blank" rel="noopener">@wgrundlingh&lt;/a>,
&lt;a href="https://github.com/wmayner" target="_blank" rel="noopener">@wmayner&lt;/a>,
&lt;a href="https://github.com/wolski" target="_blank" rel="noopener">@wolski&lt;/a>,
&lt;a href="https://github.com/yiqinfu" target="_blank" rel="noopener">@yiqinfu&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>,
&lt;a href="https://github.com/Zanidean" target="_blank" rel="noopener">@Zanidean&lt;/a>,
&lt;a href="https://github.com/Zedseayou" target="_blank" rel="noopener">@Zedseayou&lt;/a>,
&lt;a href="https://github.com/zslajchrt" target="_blank" rel="noopener">@zslajchrt&lt;/a>,
&lt;a href="https://github.com/zx8754" target="_blank" rel="noopener">@zx8754&lt;/a>, and
&lt;a href="https://github.com/zzygyx9119" target="_blank" rel="noopener">@zzygyx9119&lt;/a>.&lt;/p></description></item><item><title>dbplyr 1.3.0</title><link>https://www.tidyverse.org/blog/2019/01/dbplyr-1-3-0/</link><pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/01/dbplyr-1-3-0/</guid><description>&lt;p>We&amp;rsquo;re stoked to announce that
&lt;a href="https://dbplyr.tidyverse.org" target="_blank" rel="noopener">dbplyr&lt;/a> 1.3.0 is now available on CRAN. dbplyr is the database backend for dplyr, translating dplyr syntax into SQL. This is a minor release primarily for compatibility with dplyr 0.8.0. However, there have been some changes to the API, and minor improvements (the full details of which can be found in the
&lt;a href="https://dbplyr.tidyverse.org/news/index.html" target="_blank" rel="noopener">changelog&lt;/a>). A more substantive update can be expected after rstudio::conf.&lt;/p>
&lt;h2 id="api-changes">API changes
&lt;a href="#api-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>Calls of the form &lt;code>dplyr::foo()&lt;/code> are now evaluated in the database, rather than locally.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The &lt;code>vars&lt;/code> argument to
&lt;a href="https://dbplyr.tidyverse.org/reference/tbl_sql.html" target="_blank" rel="noopener">&lt;code>tbl_sql()&lt;/code>&lt;/a> has been formally deprecated.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>src&lt;/code> and &lt;code>tbl&lt;/code> objects now include a class generated from the class of the underlying connection object. This makes it possible for dplyr backends to implement different behaviour at the dplyr level, when needed.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="sql-translation">SQL translation
&lt;a href="#sql-translation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>The new &lt;code>as.integer64(x)&lt;/code> is translated to &lt;code>CAST(x AS BIGINT)&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/cumall.html" target="_blank" rel="noopener">&lt;code>cummean()&lt;/code>&lt;/a> now translates to SQL &lt;code>AVG()&lt;/code> as opposed to &lt;code>MEAN()&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>x %in% y&lt;/code> is now translated to &lt;code>FALSE&lt;/code> if &lt;code>y&lt;/code> is empty.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thank you to the 49 people who contributed to this release:
&lt;a href="https://github.com/AkhilGNair" target="_blank" rel="noopener">@AkhilGNair&lt;/a>,
&lt;a href="https://github.com/andypohl" target="_blank" rel="noopener">@andypohl&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/bogdanrau" target="_blank" rel="noopener">@bogdanrau&lt;/a>,
&lt;a href="https://github.com/cboettig" target="_blank" rel="noopener">@cboettig&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/chris-park" target="_blank" rel="noopener">@chris-park&lt;/a>,
&lt;a href="https://github.com/colearendt" target="_blank" rel="noopener">@colearendt&lt;/a>,
&lt;a href="https://github.com/copernican" target="_blank" rel="noopener">@copernican&lt;/a>,
&lt;a href="https://github.com/cseidman" target="_blank" rel="noopener">@cseidman&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dgrtwo" target="_blank" rel="noopener">@dgrtwo&lt;/a>,
&lt;a href="https://github.com/dlindelof" target="_blank" rel="noopener">@dlindelof&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>,
&lt;a href="https://github.com/foonwong" target="_blank" rel="noopener">@foonwong&lt;/a>,
&lt;a href="https://github.com/gbisschoff" target="_blank" rel="noopener">@gbisschoff&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/halldc" target="_blank" rel="noopener">@halldc&lt;/a>,
&lt;a href="https://github.com/happyshows" target="_blank" rel="noopener">@happyshows&lt;/a>,
&lt;a href="https://github.com/iangow" target="_blank" rel="noopener">@iangow&lt;/a>,
&lt;a href="https://github.com/javierluraschi" target="_blank" rel="noopener">@javierluraschi&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jinaliu" target="_blank" rel="noopener">@jinaliu&lt;/a>,
&lt;a href="https://github.com/JohnMount" target="_blank" rel="noopener">@JohnMount&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/jrjohnson0821" target="_blank" rel="noopener">@jrjohnson0821&lt;/a>,
&lt;a href="https://github.com/karldw" target="_blank" rel="noopener">@karldw&lt;/a>,
&lt;a href="https://github.com/kevinykuo" target="_blank" rel="noopener">@kevinykuo&lt;/a>,
&lt;a href="https://github.com/kmace" target="_blank" rel="noopener">@kmace&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lincis" target="_blank" rel="noopener">@lincis&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/mfalcioni1" target="_blank" rel="noopener">@mfalcioni1&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/mkirzon" target="_blank" rel="noopener">@mkirzon&lt;/a>,
&lt;a href="https://github.com/mkuehn10" target="_blank" rel="noopener">@mkuehn10&lt;/a>,
&lt;a href="https://github.com/mtmorgan" target="_blank" rel="noopener">@mtmorgan&lt;/a>,
&lt;a href="https://github.com/N1h1l1sT" target="_blank" rel="noopener">@N1h1l1sT&lt;/a>,
&lt;a href="https://github.com/Prometheus77" target="_blank" rel="noopener">@Prometheus77&lt;/a>,
&lt;a href="https://github.com/ramnathv" target="_blank" rel="noopener">@ramnathv&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/sandan" target="_blank" rel="noopener">@sandan&lt;/a>,
&lt;a href="https://github.com/sverchkov" target="_blank" rel="noopener">@sverchkov&lt;/a>,
&lt;a href="https://github.com/tdsmith" target="_blank" rel="noopener">@tdsmith&lt;/a>,
&lt;a href="https://github.com/tmastny" target="_blank" rel="noopener">@tmastny&lt;/a>,
&lt;a href="https://github.com/TomWeishaar" target="_blank" rel="noopener">@TomWeishaar&lt;/a>,
&lt;a href="https://github.com/vitallish" target="_blank" rel="noopener">@vitallish&lt;/a>, and
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>.&lt;/p></description></item><item><title>dplyr 0.8.0 release candidate</title><link>https://www.tidyverse.org/blog/2018/12/dplyr-0-8-0-release-candidate/</link><pubDate>Mon, 03 Dec 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/12/dplyr-0-8-0-release-candidate/</guid><description>&lt;style>
blockquote {
margin: 10px 0px 10px 0px;
padding: 10px 10px 0px 10px;
border: 2px solid red;
background: rgb(248, 248, 248);
font-size: 100%;
font-style: inherit;
font-weight: inherit;
}
&lt;/style>
&lt;blockquote>
&lt;p>This post, published in early December 2018 and promoted on Twitter
generated valuable discussions that led us to reconsider some
design choices for &lt;code>dplyr&lt;/code> 0.8.0&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>We&amp;rsquo;ve left the original post unchanged, with addenda when
changes have been made.&lt;/p>
&lt;/blockquote>
&lt;p>A new release of dplyr (0.8.0) is on the horizon, &lt;del>roughly planned for early January&lt;/del> planned
for February 1st.&lt;/p>
&lt;p>Since it is a major release with some potential
disruption, we&amp;rsquo;d love for the community to try it out, give us some feedback,
and
&lt;a href="https://github.com/tidyverse/dplyr/issues" target="_blank" rel="noopener">report issues&lt;/a>
before we submit to CRAN. This version represents about nine months of development, making dplyr more
respectful of factors, and less surprising in its evaluation of expressions.&lt;/p>
&lt;p>In this post, we&amp;rsquo;ll highlight the major changes. Please see the
&lt;a href="https://github.com/tidyverse/dplyr/blob/master/NEWS.md" target="_blank" rel="noopener">NEWS&lt;/a> for a more
detailed description of changes. Our formalised process for this release is captured
in
&lt;a href="https://github.com/tidyverse/dplyr/issues/3931" target="_blank" rel="noopener">this issue&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># install.packages(&amp;#34;devtools&amp;#34;)&lt;/span>
&lt;span class="n">devtools&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">install_github&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tidyverse/dplyr@rc_0.8.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If needed, you can restore the
&lt;a href="https://CRAN.R-project.org/package=dplyr" target="_blank" rel="noopener">release version&lt;/a> by installing from CRAN:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dplyr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h1 id="new-grouping-algorithm">New grouping algorithm
&lt;a href="#new-grouping-algorithm">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>
&lt;h2 id="group-creation">Group creation
&lt;a href="#group-creation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The algorithm behind
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> has been redesigned to better respect factor levels,
so that a group is created for each level of the factor, even if there is no data. This
differs from previous versions of dplyr where groups were only created to
match the observed data. This closes the epic issue
&lt;a href="https://github.com/tidyverse/dplyr/issues/341" target="_blank" rel="noopener">341&lt;/a>, which dates back to 2014, and has generated
a lot of press and frustration, see
&lt;a href="https://kieranhealy.org/blog/archives/2018/11/19/zero-counts-in-dplyr/" target="_blank" rel="noopener">Zero Counts in dplyr&lt;/a>
for a recent walkthrough of the issue.&lt;/p>
&lt;p>Let&amp;rsquo;s illustrate the new algorithm with the
&lt;a href="https://dplyr.tidyverse.org/reference/count.html" target="_blank" rel="noopener">&lt;code>count()&lt;/code>&lt;/a> function:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">f1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">levels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">)),&lt;/span>
&lt;span class="n">f2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;e&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;e&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;f&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">levels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;e&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;f&amp;#34;&lt;/span>&lt;span class="p">)),&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; f1 f2 x y&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 a d 1 1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 a e 1 2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 a d 1 3&lt;/span>
&lt;span class="c1">#&amp;gt; 4 b e 2 4&lt;/span>
&lt;span class="c1">#&amp;gt; 5 b f 2 5&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; f1 n&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 a 3&lt;/span>
&lt;span class="c1">#&amp;gt; 2 b 2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 c 0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Where previous versions of &lt;code>dplyr&lt;/code> would have created only two groups (for levels &lt;code>a&lt;/code> and &lt;code>b&lt;/code>),
it now creates one group per level, and the group related to the level &lt;code>c&lt;/code> just happens to be
empty.&lt;/p>
&lt;p>Groups are still made to match the data on other types of columns:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 2 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; x n&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 3&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Expansion of groups for factors happens at each step of the grouping, so if we group
by &lt;code>f1&lt;/code> and &lt;code>f2&lt;/code> we get 9 groups,&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">f2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 9 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; f1 f2 n&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 a d 2&lt;/span>
&lt;span class="c1">#&amp;gt; 2 a e 1&lt;/span>
&lt;span class="c1">#&amp;gt; 3 a f 0&lt;/span>
&lt;span class="c1">#&amp;gt; 4 b d 0&lt;/span>
&lt;span class="c1">#&amp;gt; 5 b e 1&lt;/span>
&lt;span class="c1">#&amp;gt; 6 b f 1&lt;/span>
&lt;span class="c1">#&amp;gt; 7 c d 0&lt;/span>
&lt;span class="c1">#&amp;gt; 8 c e 0&lt;/span>
&lt;span class="c1">#&amp;gt; 9 c f 0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When factors and non factors are involved in the grouping, the number of
groups depends on the order. At each level of grouping, factors are always expanded
to one group per level, but non factors only create groups based on observed data.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; f1 x n&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 a 1 3&lt;/span>
&lt;span class="c1">#&amp;gt; 2 b 2 2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 c NA 0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this example, we group by &lt;code>f1&lt;/code> then &lt;code>x&lt;/code>. At the first layer, grouping on &lt;code>f1&lt;/code> creates
three groups. Each of these groups is then subdivided based on the values of the second
variable &lt;code>x&lt;/code>. Since &lt;code>x&lt;/code> is always 1 when &lt;code>f1&lt;/code> is &lt;code>a&lt;/code> the group is not
further divided.&lt;/p>
&lt;p>The last group, associated with the level &lt;code>c&lt;/code> of the factor &lt;code>f1&lt;/code> is empty, and
consequently has no values for the vector &lt;code>x&lt;/code>. In that case,
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> uses
&lt;code>NA&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">f1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 6 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; x f1 n&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a 3&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 b 0&lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 c 0&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 a 0&lt;/span>
&lt;span class="c1">#&amp;gt; 5 2 b 2&lt;/span>
&lt;span class="c1">#&amp;gt; 6 2 c 0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When we group by &lt;code>x&lt;/code> then &lt;code>f1&lt;/code> we initially split the data according to &lt;code>x&lt;/code> which
gives 2 groups. Each of these two groups is then further divided in 3 groups,
i.e. one for each level of &lt;code>f1&lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>We&amp;rsquo;ve added the possibility to drop the empty groups, and hence
get the previous behaviour by using &lt;code>group_by(.drop = TRUE)&lt;/code>.&lt;/p>
&lt;p>This is not the default value, because we still strongly believe that
all levels of factors should be represented in the grouping structure.&lt;/p>
&lt;/blockquote>
&lt;h2 id="group-preservation">Group preservation
&lt;a href="#group-preservation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The grouping structure is more coherently preserved by dplyr verbs.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">f1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 6 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: x [2]&lt;/span>
&lt;span class="c1">#&amp;gt; x f1 y&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a 2 &lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 b NaN &lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 c NaN &lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 a NaN &lt;/span>
&lt;span class="c1">#&amp;gt; 5 2 b 4.5&lt;/span>
&lt;span class="c1">#&amp;gt; 6 2 c NaN&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The expression &lt;code>mean(y)&lt;/code> is evaluated for the empty groups as well, and gives
consistent results with :&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">numeric&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; [1] NaN&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In particular the result of
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> preserves the grouping structure of the input
data frame.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">f1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: x, f1 [3]&lt;/span>
&lt;span class="c1">#&amp;gt; f1 f2 x y&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 a d 1 1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 a e 1 2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 a d 1 3&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The resulting tibble after the
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> call has six groups, the same
exact groups that were made by
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a>. Previous versions of dplyr
would perform an implicit &lt;code>group_by()&lt;/code> after the filtering, potentially losing
groups.&lt;/p>
&lt;p>Because this is potentially disruptive,
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> has gained a &lt;code>.preserve&lt;/code> argument,
when &lt;code>.preserve&lt;/code> is &lt;code>FALSE&lt;/code> the data is first filtered and then regrouped:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">f1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.preserve&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: x, f1 [6]&lt;/span>
&lt;span class="c1">#&amp;gt; f1 f2 x y&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 a d 1 1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 a e 1 2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 a d 1 3&lt;/span>
&lt;span class="c1">#&amp;gt; 4 b e 2 4&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>As opposed to what is described above, feedback from this post led us
to change the default value of &lt;code>.preserve&lt;/code> to &lt;code>FALSE&lt;/code>, and update the
algorithm to limit the cost of preserving.&lt;/p>
&lt;/blockquote>
&lt;p>Note however, that even &lt;code>.preserve = FALSE&lt;/code> respects the factors that are used as
grouping variables, in particular &lt;code>filter( , .preserve = FALSE)&lt;/code> is not a way to
discard empty groups. The
&lt;a href="https://forcats.tidyverse.org" target="_blank" rel="noopener">forcats&lt;/a> 📦 may help:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stringr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">str_detect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;^v&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">ungroup&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">forcats&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">fct_drop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 100 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: Species [2]&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 7 3.2 4.7 1.4 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 2 6.4 3.2 4.5 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 3 6.9 3.1 4.9 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 4 5.5 2.3 4 1.3 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 5 6.5 2.8 4.6 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 6 5.7 2.8 4.5 1.3 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 7 6.3 3.3 4.7 1.6 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 8 4.9 2.4 3.3 1 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 9 6.6 2.9 4.6 1.3 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 10 5.2 2.7 3.9 1.4 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 90 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Furthermore, the &lt;code>group_trim()&lt;/code> function has been added. &lt;code>group_trim()&lt;/code>
recalculates the grouping metadata after dropping unused levels for
all grouping variables that are factors.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stringr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">str_detect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;^v&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_trim&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 100 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: Species [2]&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 7 3.2 4.7 1.4 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 2 6.4 3.2 4.5 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 3 6.9 3.1 4.9 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 4 5.5 2.3 4 1.3 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 5 6.5 2.8 4.6 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 6 5.7 2.8 4.5 1.3 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 7 6.3 3.3 4.7 1.6 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 8 4.9 2.4 3.3 1 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 9 6.6 2.9 4.6 1.3 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 10 5.2 2.7 3.9 1.4 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 90 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="new-grouping-fuctions">New grouping fuctions
&lt;a href="#new-grouping-fuctions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The grouping family is extended with new functions:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/group_nest.html" target="_blank" rel="noopener">&lt;code>group_nest()&lt;/code>&lt;/a> : similar to
&lt;a href="https://tidyr.tidyverse.org/reference/nest.html" target="_blank" rel="noopener">&lt;code>tidyr::nest()&lt;/code>&lt;/a> but focusing on the grouping columns
rather than the columns to nest&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/group_split.html" target="_blank" rel="noopener">&lt;code>group_split()&lt;/code>&lt;/a> : similar to &lt;code>base::split()&lt;/code> but the grouping is subject to the data mask&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/group_keys.html" target="_blank" rel="noopener">&lt;code>group_keys()&lt;/code>&lt;/a> : retrieves a tibble with one row per group and one column per grouping variable&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/group_rows.html" target="_blank" rel="noopener">&lt;code>group_rows()&lt;/code>&lt;/a> : retrieves a list of 1-based integer vectors, each vector represents the indices
of the group in the grouped data frame&lt;/li>
&lt;/ul>
&lt;p>The primary use case for these functions is with already grouped data frames, that may directly
or indirectly originate from
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Length&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_nest&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; Species data &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa &amp;lt;tibble [22 × 4]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 versicolor &amp;lt;tibble [24 × 4]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 3 virginica &amp;lt;tibble [22 × 4]&amp;gt;&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_split&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [[1]]&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 22 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 5.1 3.5 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 2 5.4 3.9 1.7 0.4 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 3 5.4 3.7 1.5 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 4 5.8 4 1.2 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 5 5.7 4.4 1.5 0.4 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 6 5.4 3.9 1.3 0.4 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 7 5.1 3.5 1.4 0.3 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 8 5.7 3.8 1.7 0.3 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 9 5.1 3.8 1.5 0.3 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 10 5.4 3.4 1.7 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; # … with 12 more rows&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[2]]&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 24 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 7 3.2 4.7 1.4 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 2 6.4 3.2 4.5 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 3 6.9 3.1 4.9 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 4 6.5 2.8 4.6 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 5 6.3 3.3 4.7 1.6 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 6 6.6 2.9 4.6 1.3 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 7 6 2.2 4 1 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 8 6.1 2.9 4.7 1.4 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 9 6.7 3.1 4.4 1.4 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 10 6.2 2.2 4.5 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 14 more rows&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[3]]&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 22 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 7.1 3 5.9 2.1 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 2 7.6 3 6.6 2.1 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 3 7.3 2.9 6.3 1.8 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 4 6.7 2.5 5.8 1.8 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 5 7.2 3.6 6.1 2.5 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 6 6.8 3 5.5 2.1 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 7 7.7 3.8 6.7 2.2 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 8 7.7 2.6 6.9 2.3 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 9 6.9 3.2 5.7 2.3 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 10 7.7 2.8 6.7 2 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 12 more rows&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_keys&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; Species &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 2 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 3 virginica&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_rows&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [[1]]&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[2]]&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45&lt;/span>
&lt;span class="c1">#&amp;gt; [24] 46&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[3]]&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alternatively, these functions may be used on an ungrouped data frame, together with a
grouping specification that is subject to the data mask. In that case, the grouping is
implicitly performed by
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_nest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; Species data &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa &amp;lt;tibble [50 × 4]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 versicolor &amp;lt;tibble [50 × 4]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 3 virginica &amp;lt;tibble [50 × 4]&amp;gt;&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [[1]]&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 50 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 5.1 3.5 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 2 4.9 3 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 3 4.7 3.2 1.3 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 4 4.6 3.1 1.5 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 5 5 3.6 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 6 5.4 3.9 1.7 0.4 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 7 4.6 3.4 1.4 0.3 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 8 5 3.4 1.5 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 9 4.4 2.9 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 10 4.9 3.1 1.5 0.1 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; # … with 40 more rows&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[2]]&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 50 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 7 3.2 4.7 1.4 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 2 6.4 3.2 4.5 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 3 6.9 3.1 4.9 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 4 5.5 2.3 4 1.3 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 5 6.5 2.8 4.6 1.5 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 6 5.7 2.8 4.5 1.3 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 7 6.3 3.3 4.7 1.6 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 8 4.9 2.4 3.3 1 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 9 6.6 2.9 4.6 1.3 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 10 5.2 2.7 3.9 1.4 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 40 more rows&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[3]]&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 50 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 6.3 3.3 6 2.5 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 2 5.8 2.7 5.1 1.9 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 3 7.1 3 5.9 2.1 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 4 6.3 2.9 5.6 1.8 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 5 6.5 3 5.8 2.2 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 6 7.6 3 6.6 2.1 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 7 4.9 2.5 4.5 1.7 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 8 7.3 2.9 6.3 1.8 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 9 6.7 2.5 5.8 1.8 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; 10 7.2 3.6 6.1 2.5 virginica&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 40 more rows&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; Species &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 2 versicolor&lt;/span>
&lt;span class="c1">#&amp;gt; 3 virginica&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>These functions are related to each other in how they handle and organize the
grouping information and who/what is responsible for maintaining the relation between the
data and the groups.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>A grouped data frame, as generated by
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> stores the grouping information
as an attribute of the data frame, dplyr verbs use that information to maintain
the relationship&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When using
&lt;a href="https://dplyr.tidyverse.org/reference/group_nest.html" target="_blank" rel="noopener">&lt;code>group_nest()&lt;/code>&lt;/a> the data is structured as a data frame that has a list column
to hold the non grouping columns. The result of
&lt;a href="https://dplyr.tidyverse.org/reference/group_nest.html" target="_blank" rel="noopener">&lt;code>group_nest()&lt;/code>&lt;/a> is not a grouped data frame,
therefore the structure of the data frame maintains the relationship.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When using
&lt;a href="https://dplyr.tidyverse.org/reference/group_split.html" target="_blank" rel="noopener">&lt;code>group_split()&lt;/code>&lt;/a> the data is split into a list, and each element of the list
contains a tibble with the rows of the associated group. The user is responsible to
maintain the relationship, and may benefit from the assistance of the
&lt;a href="https://dplyr.tidyverse.org/reference/group_keys.html" target="_blank" rel="noopener">&lt;code>group_keys()&lt;/code>&lt;/a>
function, especially in the presence of empty groups.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="iterate-on-grouped-tibbles-by-group">Iterate on grouped tibbles by group
&lt;a href="#iterate-on-grouped-tibbles-by-group">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The new
&lt;a href="https://dplyr.tidyverse.org/reference/group_map.html" target="_blank" rel="noopener">&lt;code>group_map()&lt;/code>&lt;/a> function provides a purrr style function that can be used to
iterate on grouped tibbles. Each conceptual group of the data frame is exposed to the
function with two pieces of information:&lt;/p>
&lt;ul>
&lt;li>The subset of the data for the group, exposed as &lt;code>.x&lt;/code>.&lt;/li>
&lt;li>The key, a tibble with exactly one row and columns for each grouping variable,
exposed as &lt;code>.y&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="nf">head&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2L&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 6 x 11&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: cyl [3]&lt;/span>
&lt;span class="c1">#&amp;gt; cyl mpg disp hp drat wt qsec vs am gear carb&lt;/span>
&lt;span class="c1">#&amp;gt; * &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 4 22.8 108 93 3.85 2.32 18.6 1 1 4 1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 4 24.4 147. 62 3.69 3.19 20 1 0 4 2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 6 21 160 110 3.9 2.62 16.5 0 1 4 4&lt;/span>
&lt;span class="c1">#&amp;gt; 4 6 21 160 110 3.9 2.88 17.0 0 1 4 4&lt;/span>
&lt;span class="c1">#&amp;gt; 5 8 18.7 360 175 3.15 3.44 17.0 0 0 3 2&lt;/span>
&lt;span class="c1">#&amp;gt; 6 8 14.3 360 245 3.21 3.57 15.8 0 0 3 4&lt;/span>
&lt;span class="n">mtcars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mod&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">lm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">disp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">.x&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: cyl [3]&lt;/span>
&lt;span class="c1">#&amp;gt; cyl mod &lt;/span>
&lt;span class="c1">#&amp;gt; * &amp;lt;dbl&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 4 &amp;lt;S3: lm&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 6 &amp;lt;S3: lm&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 3 8 &amp;lt;S3: lm&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The lambda function must return a data frame.
&lt;a href="https://dplyr.tidyverse.org/reference/group_map.html" target="_blank" rel="noopener">&lt;code>group_map()&lt;/code>&lt;/a> row binds the data
frames, recycles the grouping columns and structures the result as a grouped tibble.&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>group_walk()&lt;/code> can be used when iterating on the groups is only desired for side effects.
It applies the formula to each group, and then silently returns its input.&lt;/p>
&lt;/blockquote>
&lt;h1 id="changes-in-filter-and-slice">Changes in filter and slice
&lt;a href="#changes-in-filter-and-slice">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>Besides changes described previously related to preservation of the grouping structure,
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>slice()&lt;/code>&lt;/a> now reorganize the data by groups for performance reasons:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: x [2]&lt;/span>
&lt;span class="c1">#&amp;gt; x y&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 3&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 4&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>This has been reverted for &lt;code>filter()&lt;/code> due to popular demand. Calling &lt;code>filter()&lt;/code>
on a grouped data frame leaves the rows in the original order.&lt;/p>
&lt;/blockquote>
&lt;h1 id="redesigned-hybrid-evaluation">Redesigned hybrid evaluation
&lt;a href="#redesigned-hybrid-evaluation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>
&lt;h2 id="whats-hybrid-evaluation-again-">What&amp;rsquo;s hybrid evaluation again ?
&lt;a href="#whats-hybrid-evaluation-again-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Hybrid evaluation is used in
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> to replace
potential expensive R operations by native C++ code that is group aware.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Petal.Length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Petal.Length&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; Species Petal.Length&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa 1.46&lt;/span>
&lt;span class="c1">#&amp;gt; 2 versicolor 4.26&lt;/span>
&lt;span class="c1">#&amp;gt; 3 virginica 5.55&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the example, the &lt;code>base::mean()&lt;/code> function is never called because the
hybrid alternative can directly calculate the mean for each group. Hybrid
evaluation typically gives better performance because it needs fewer memory
allocations.&lt;/p>
&lt;p>In this example, a standard evaluation path would need to:&lt;/p>
&lt;ul>
&lt;li>create subsets of the &lt;code>Petal.Length&lt;/code> column for each group&lt;/li>
&lt;li>call the &lt;code>base::mean()&lt;/code> function on each subset, which would also
imply a cost for S3 dispatching to the right method&lt;/li>
&lt;li>collect all results in a new vector&lt;/li>
&lt;/ul>
&lt;p>In constrast, hybrid evaluation can directly allocate the final
vector, and calculate all 3 means without having to allocate the subsets.&lt;/p>
&lt;h2 id="flaws-in-previous-version">Flaws in previous version
&lt;a href="#flaws-in-previous-version">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Previous versions of hybrid evaluation relied on folding to
replace part of the expression by their hybrid result. For example,
there are hybrid versions of &lt;code>sum()&lt;/code> and &lt;code>n()&lt;/code>, so previous
versions attempted to use them for:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Petal.Length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Petal.Length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nf">n&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; Species Petal.Length&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa 1.46&lt;/span>
&lt;span class="c1">#&amp;gt; 2 versicolor 4.26&lt;/span>
&lt;span class="c1">#&amp;gt; 3 virginica 5.55&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The gain of replacing parts of the expression with the result of the
hybrid versions was minimal, and the we had to rely on
brittle heuristics to try to respect standard R evaluation semantics.&lt;/p>
&lt;h2 id="new-implementation">New implementation
&lt;a href="#new-implementation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The new hybrid system is stricter and falls back to standard R evaluation
when the expression is not entirely recognized.&lt;/p>
&lt;p>The
&lt;a href="https://dplyr.tidyverse.org/reference/hybrid_call.html" target="_blank" rel="noopener">&lt;code>hybrid_call()&lt;/code>&lt;/a> function (subject to change) can be used to test if an expression
would be handled by hybrid or standard evaluation:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">hybrid_call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Length&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;hybrid evaluation&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; call : base::mean(Sepal.Length)&lt;/span>
&lt;span class="c1">#&amp;gt; C++ class : dplyr::hybrid::internal::SimpleDispatchImpl&amp;lt;14, false, dplyr::NaturalDataFrame, dplyr::hybrid::internal::MeanImpl&amp;gt;&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">hybrid_call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nf">n&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;standard evaluation&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; call : sum(Sepal.Length)/n()&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">hybrid_call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Length&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;standard evaluation&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; call : +mean(Sepal.Length)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Hybrid is very picky about what it can handle, for example &lt;code>TRUE&lt;/code> and &lt;code>FALSE&lt;/code>
are fine for &lt;code>na.rm=&lt;/code> because they are reserved words that can&amp;rsquo;t be replaced, but
&lt;code>T&lt;/code>, &lt;code>F&lt;/code> or any expression that would resolve to a scalar logical are not:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">hybrid_call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;hybrid evaluation&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; call : base::mean(Sepal.Length, na.rm = TRUE)&lt;/span>
&lt;span class="c1">#&amp;gt; C++ class : dplyr::hybrid::internal::SimpleDispatchImpl&amp;lt;14, true, dplyr::NaturalDataFrame, dplyr::hybrid::internal::MeanImpl&amp;gt;&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">hybrid_call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">T&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;standard evaluation&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; call : mean(Sepal.Length, na.rm = T)&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">hybrid_call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;standard evaluation&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; call : mean(Sepal.Length, na.rm = 1 == 1)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first step of the new hybrid system consists of studying the
expression and compare it to known expression patterns. If we find an exact
match, then we have all the information we need, and R is never called
to materialize the result.&lt;/p>
&lt;p>When there is no match, the expression gets evaluated for each group using R standard
evaluation rules in the data mask: a special environment that makes the
columns available and uses contextual information for functions such as
&lt;a href="https://dplyr.tidyverse.org/reference/n.html" target="_blank" rel="noopener">&lt;code>n()&lt;/code>&lt;/a>
and
&lt;a href="https://dplyr.tidyverse.org/reference/row_number.html" target="_blank" rel="noopener">&lt;code>row_number()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Petal.Length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Petal.Length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nf">n&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; Species Petal.Length&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa 1.46&lt;/span>
&lt;span class="c1">#&amp;gt; 2 versicolor 4.26&lt;/span>
&lt;span class="c1">#&amp;gt; 3 virginica 5.55&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h1 id="performance">Performance
&lt;a href="#performance">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>When
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarise()&lt;/code>&lt;/a> or
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> use expressions that cannot be handled by
hybrid evaluation, they call back to R from the C++ internals for each group.&lt;/p>
&lt;p>This is an expensive operation because the expressions have to be evaluated
with extra care. Traditionally it meant wrapping the expression in an R &lt;code>tryCatch()&lt;/code>
before evaluating, but R 3.5.0 has added unwind protection which we
&lt;a href="https://github.com/RcppCore/Rcpp/pull/873" target="_blank" rel="noopener">exposed to
Rcpp&lt;/a>. Consequently, the cost of evaluating an R expression carefully is lower
than before.&lt;/p>
&lt;p>We ran a benchmark calculating the means of 10,000 small groups with the
release version of dplyr and this release candidate with and without
using the unwind protect feature.&lt;/p>
&lt;p>Just using the &lt;code>mean()&lt;/code> function would not illustrate the feature, because dplyr would
use hybrid evaluation and never use callbacks to R. So instead we defined a &lt;code>mean_&lt;/code>
function that has the same body as &lt;code>base::mean()&lt;/code>. We also compare this to
the expression &lt;code>sum(x) / n()&lt;/code> because it woudld have been handled by
partial hybrid evaluation in previous versions.&lt;/p>
&lt;p>&lt;img src="https://www.tidyverse.org/articles/2018-12-dplyr-0-8-0_files/timings_summarise_mean.jpeg" alt="">&lt;/p>
&lt;p>This is not a comprehensive benchmark analysis, but on this small example we can read:&lt;/p>
&lt;ul>
&lt;li>unwind protection has no impact when using the hybrid evaluation, this is not a surprise
because the hybrid path does not call back to R.&lt;/li>
&lt;li>hybrid evaluation performs better on the release candidate. This is a direct consequence of
the redesign of hybrid evaluation.&lt;/li>
&lt;li>unwind protection gives a performance boost &lt;code>mean_()&lt;/code>. Please note that the
x axis is on a log scale.&lt;/li>
&lt;li>unwind protection more than compensates for no longer using partial hybrid evaluation.&lt;/li>
&lt;/ul>
&lt;h1 id="nest_join">nest_join
&lt;a href="#nest_join">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>The
&lt;a href="https://dplyr.tidyverse.org/reference/nest_join.html" target="_blank" rel="noopener">&lt;code>nest_join()&lt;/code>&lt;/a> function is the newest addition to the join family.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">band_members&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">nest_join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">band_instruments&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Joining, by = &amp;#34;name&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; name band band_instruments&lt;/span>
&lt;span class="c1">#&amp;gt; * &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 Mick Stones &amp;lt;tibble [0 × 1]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 John Beatles &amp;lt;tibble [1 × 1]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Paul Beatles &amp;lt;tibble [1 × 1]&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>A nest join of &lt;code>x&lt;/code> and &lt;code>y&lt;/code> returns all rows and all columns from &lt;code>x&lt;/code>, plus an additional column
that contains a list of tibbles. Each tibble contains all the rows from &lt;code>y&lt;/code> that match that row of &lt;code>x&lt;/code>.
When there is no match, the list column is a 0-row tibble with the same column names and types as &lt;code>y&lt;/code>.&lt;/p>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/nest_join.html" target="_blank" rel="noopener">&lt;code>nest_join()&lt;/code>&lt;/a> is the most fundamental join since you can recreate the other joins from it:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/inner_join.html" target="_blank" rel="noopener">&lt;code>inner_join()&lt;/code>&lt;/a> is a
&lt;a href="https://dplyr.tidyverse.org/reference/nest_join.html" target="_blank" rel="noopener">&lt;code>nest_join()&lt;/code>&lt;/a> plus an
&lt;a href="https://tidyr.tidyverse.org/reference/unnest.html" target="_blank" rel="noopener">&lt;code>tidyr::unnest()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/left_join.html" target="_blank" rel="noopener">&lt;code>left_join()&lt;/code>&lt;/a> is a
&lt;a href="https://dplyr.tidyverse.org/reference/nest_join.html" target="_blank" rel="noopener">&lt;code>nest_join()&lt;/code>&lt;/a> plus an
&lt;a href="https://tidyr.tidyverse.org/reference/unnest.html" target="_blank" rel="noopener">&lt;code>tidyr::unnest()&lt;/code>&lt;/a> with &lt;code>drop=TRUE&lt;/code>&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/semi_join.html" target="_blank" rel="noopener">&lt;code>semi_join()&lt;/code>&lt;/a> is a
&lt;a href="https://dplyr.tidyverse.org/reference/nest_join.html" target="_blank" rel="noopener">&lt;code>nest_join()&lt;/code>&lt;/a> plus a
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> where you check that every element of data has at least one row.&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/anti_join.html" target="_blank" rel="noopener">&lt;code>anti_join()&lt;/code>&lt;/a> is a
&lt;a href="https://dplyr.tidyverse.org/reference/nest_join.html" target="_blank" rel="noopener">&lt;code>nest_join()&lt;/code>&lt;/a> plus a
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> where you check every element has zero rows.&lt;/li>
&lt;/ul>
&lt;h1 id="scoped-variants">Scoped variants
&lt;a href="#scoped-variants">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>The scoped (or colwise) verbs are the set of verbs with &lt;code>_at&lt;/code>, &lt;code>_if&lt;/code> and &lt;code>_all&lt;/code> suffixes.
These verbs apply a certain behaviour (for instance, a mutating or summarising operation) to a given
selection of columns. This release of dplyr improves the consistency of the syntax and the behaviour with grouped tibbles.&lt;/p>
&lt;h2 id="a-purrr-like-syntax-for-passing-functions">A purrr-like syntax for passing functions
&lt;a href="#a-purrr-like-syntax-for-passing-functions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In dplyr 0.8.0, we have implemented support for functions and purrr-style lambda functions:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">iris&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">iris&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># For concise print method&lt;/span>
&lt;span class="nf">mutate_if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">iris&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is.numeric&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">. &lt;/span>&lt;span class="o">-&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.)&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 150 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 -0.743 0.443 -2.36 -0.999 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 2 -0.943 -0.0573 -2.36 -0.999 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 3 -1.14 0.143 -2.46 -0.999 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 4 -1.24 0.0427 -2.26 -0.999 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 5 -0.843 0.543 -2.36 -0.999 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 6 -0.443 0.843 -2.06 -0.799 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 7 -1.24 0.343 -2.36 -0.899 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 8 -0.843 0.343 -2.26 -0.999 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 9 -1.44 -0.157 -2.36 -0.999 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 10 -0.943 0.0427 -2.26 -1.10 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; # … with 140 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And lists of functions and purrr-style lambda functions:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">fns&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">centered&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># Function object&lt;/span>
&lt;span class="n">scaled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">. &lt;/span>&lt;span class="o">-&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nf">sd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.)&lt;/span> &lt;span class="c1"># Purrr-style lambda&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nf">mutate_if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">iris&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is.numeric&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fns&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 150 x 13&lt;/span>
&lt;span class="c1">#&amp;gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 5.1 3.5 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 2 4.9 3 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 3 4.7 3.2 1.3 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 4 4.6 3.1 1.5 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 5 5 3.6 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 6 5.4 3.9 1.7 0.4 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 7 4.6 3.4 1.4 0.3 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 8 5 3.4 1.5 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 9 4.4 2.9 1.4 0.2 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; 10 4.9 3.1 1.5 0.1 setosa &lt;/span>
&lt;span class="c1">#&amp;gt; # … with 140 more rows, and 8 more variables: Sepal.Length_centered &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # Sepal.Width_centered &amp;lt;dbl&amp;gt;, Petal.Length_centered &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # Petal.Width_centered &amp;lt;dbl&amp;gt;, Sepal.Length_scaled &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # Sepal.Width_scaled &amp;lt;dbl&amp;gt;, Petal.Length_scaled &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # Petal.Width_scaled &amp;lt;dbl&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is now the preferred syntax for passing functions to the scoped verbs because it is simpler and consistent with purrr.
Counting from dplyr 0.8.0, the hybrid evaluator recognises and inlines these lambdas, so that native implementation of
common algorithms will kick in just as it did with expressions passed with &lt;code>funs()&lt;/code>.
Consequently, we are soft-deprecating &lt;code>funs()&lt;/code>: it will continue to work without any warnings for now,
but will eventually start issuing warnings.&lt;/p>
&lt;h2 id="behaviour-with-grouped-tibbles">Behaviour with grouped tibbles
&lt;a href="#behaviour-with-grouped-tibbles">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We have reviewed the documentation of all scoped variants to make clear how the scoped operations
are applied to grouped tibbles. For most of the scoped verbs, the operations also apply on
the grouping variables when they are part of the selection. This includes:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/arrange_all.html" target="_blank" rel="noopener">&lt;code>arrange_all()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/arrange_at.html" target="_blank" rel="noopener">&lt;code>arrange_at()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/arrange_if.html" target="_blank" rel="noopener">&lt;code>arrange_if()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/distinct_all.html" target="_blank" rel="noopener">&lt;code>distinct_all()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/distinct_at.html" target="_blank" rel="noopener">&lt;code>distinct_at()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/distinct_if.html" target="_blank" rel="noopener">&lt;code>distinct_if()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/filter_all.html" target="_blank" rel="noopener">&lt;code>filter_all()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/filter_at.html" target="_blank" rel="noopener">&lt;code>filter_at()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/filter_if.html" target="_blank" rel="noopener">&lt;code>filter_if()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/group_by_all.html" target="_blank" rel="noopener">&lt;code>group_by_all()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/group_by_at.html" target="_blank" rel="noopener">&lt;code>group_by_at()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/group_by_if.html" target="_blank" rel="noopener">&lt;code>group_by_if()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dplyr.tidyverse.org/reference/select_all.html" target="_blank" rel="noopener">&lt;code>select_all()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/select_at.html" target="_blank" rel="noopener">&lt;code>select_at()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/select_if.html" target="_blank" rel="noopener">&lt;code>select_if()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>This is not the case for summarising and mutating variants where operations are &lt;em>not&lt;/em> applied on grouping variables.
The behaviour depends on whether the selection is &lt;strong>implicit&lt;/strong> (&lt;code>all&lt;/code> and &lt;code>if&lt;/code> selections) or &lt;strong>explicit&lt;/strong> (&lt;code>at&lt;/code> selections).
Grouping variables covered by explicit selections (with
&lt;a href="https://dplyr.tidyverse.org/reference/summarise_at.html" target="_blank" rel="noopener">&lt;code>summarise_at()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/mutate_at.html" target="_blank" rel="noopener">&lt;code>mutate_at()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/transmute_at.html" target="_blank" rel="noopener">&lt;code>transmute_at()&lt;/code>&lt;/a> are always an error.
For implicit selections, the grouping variables are always ignored. In this case, the level of verbosity depends on the kind of operation:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Summarising operations (
&lt;a href="https://dplyr.tidyverse.org/reference/summarise_all.html" target="_blank" rel="noopener">&lt;code>summarise_all()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/summarise_if.html" target="_blank" rel="noopener">&lt;code>summarise_if()&lt;/code>&lt;/a>
ignore grouping variables silently because it is obvious that
operations are not applied on grouping variables.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>On the other hand, it isn&amp;rsquo;t as obvious in the case of mutating operations (
&lt;a href="https://dplyr.tidyverse.org/reference/mutate_all.html" target="_blank" rel="noopener">&lt;code>mutate_all()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/mutate_if.html" target="_blank" rel="noopener">&lt;code>mutate_if()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/transmute_all.html" target="_blank" rel="noopener">&lt;code>transmute_all()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/transmute_if.html" target="_blank" rel="noopener">&lt;code>transmute_if()&lt;/code>&lt;/a>).
For this reason, they issue a message indicating which grouping variables are ignored.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>In order to make it easier to explicitly remove the grouping columns from an &lt;code>_at&lt;/code> selection, we have introduced a
new selection helper
&lt;a href="https://dplyr.tidyverse.org/reference/group_cols.html" target="_blank" rel="noopener">&lt;code>group_cols()&lt;/code>&lt;/a>. Just like
&lt;a href="https://dplyr.tidyverse.org/reference/last_col.html" target="_blank" rel="noopener">&lt;code>last_col()&lt;/code>&lt;/a> matches the last column of a tibble,
&lt;a href="https://dplyr.tidyverse.org/reference/group_cols.html" target="_blank" rel="noopener">&lt;code>group_cols()&lt;/code>&lt;/a> matches all grouping columns:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">group_cols&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 32 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: cyl [3]&lt;/span>
&lt;span class="c1">#&amp;gt; cyl&lt;/span>
&lt;span class="c1">#&amp;gt; * &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 6&lt;/span>
&lt;span class="c1">#&amp;gt; 2 6&lt;/span>
&lt;span class="c1">#&amp;gt; 3 4&lt;/span>
&lt;span class="c1">#&amp;gt; 4 6&lt;/span>
&lt;span class="c1">#&amp;gt; 5 8&lt;/span>
&lt;span class="c1">#&amp;gt; 6 6&lt;/span>
&lt;span class="c1">#&amp;gt; 7 8&lt;/span>
&lt;span class="c1">#&amp;gt; 8 4&lt;/span>
&lt;span class="c1">#&amp;gt; 9 4&lt;/span>
&lt;span class="c1">#&amp;gt; 10 6&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 22 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This new helper is mostly intended for selection in scoped variants:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate_at&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="nf">vars&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">)),&lt;/span>
&lt;span class="o">~&lt;/span> &lt;span class="n">. &lt;/span>&lt;span class="o">-&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Column `cyl` can&amp;#39;t be modified because it&amp;#39;s a grouping variable&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It makes it easy to remove explicitly the grouping variables:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cyl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate_at&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="nf">vars&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nf">group_cols&lt;/span>&lt;span class="p">()),&lt;/span>
&lt;span class="o">~&lt;/span> &lt;span class="n">. &lt;/span>&lt;span class="o">-&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 32 x 11&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: cyl [3]&lt;/span>
&lt;span class="c1">#&amp;gt; mpg cyl disp hp drat wt qsec vs am gear carb&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 21 6 160 110 3.9 2.62 16.5 0 1 4 0.571&lt;/span>
&lt;span class="c1">#&amp;gt; 2 21 6 160 110 3.9 2.88 17.0 0 1 4 0.571&lt;/span>
&lt;span class="c1">#&amp;gt; 3 22.8 4 108 93 3.85 2.32 18.6 1 1 4 -0.545&lt;/span>
&lt;span class="c1">#&amp;gt; 4 21.4 6 258 110 3.08 3.22 19.4 1 0 3 -2.43 &lt;/span>
&lt;span class="c1">#&amp;gt; 5 18.7 8 360 175 3.15 3.44 17.0 0 0 3 -1.5 &lt;/span>
&lt;span class="c1">#&amp;gt; 6 18.1 6 225 105 2.76 3.46 20.2 1 0 3 -2.43 &lt;/span>
&lt;span class="c1">#&amp;gt; 7 14.3 8 360 245 3.21 3.57 15.8 0 0 3 0.5 &lt;/span>
&lt;span class="c1">#&amp;gt; 8 24.4 4 147. 62 3.69 3.19 20 1 0 4 0.455&lt;/span>
&lt;span class="c1">#&amp;gt; 9 22.8 4 141. 95 3.92 3.15 22.9 1 0 4 0.455&lt;/span>
&lt;span class="c1">#&amp;gt; 10 19.2 6 168. 123 3.92 3.44 18.3 1 0 4 0.571&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 22 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>dplyr 0.7.5</title><link>https://www.tidyverse.org/blog/2018/06/dplyr-0.7.5/</link><pubDate>Wed, 06 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/06/dplyr-0.7.5/</guid><description>
&lt;p>We’re excited to announce version 0.7.5 of the &lt;em>dplyr&lt;/em> package, the grammar of data manipulation in the tidyverse. This minor release includes the move to &lt;em>tidyselect&lt;/em>, features like scoped operations on grouped data frames and support for raw vectors, and a number of bug fixes. Please see the &lt;a href="https://github.com/tidyverse/dplyr/releases/tag/v0.7.5">release notes&lt;/a> for the full list of improvements and bug fixes.&lt;/p>
&lt;p>The next planned release of &lt;em>dplyr&lt;/em>, for which work has already started, will be a feature release. Many of the features are available in the development version.&lt;/p>
&lt;div id="tidyselect" class="section level2">
&lt;h2>tidyselect&lt;/h2>
&lt;p>&lt;em>dplyr&lt;/em> always supported selecting by name, excluding columns, selecting by range, by match, or by position:&lt;/p>
&lt;pre class="r">&lt;code>tbl &amp;lt;- data.frame(a1 = 1, a2 = 2, a3 = 3, b = &amp;quot;x&amp;quot;)
tbl %&amp;gt;%
select(a1, a2)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a1 a2
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> 1 1 2
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>tbl %&amp;gt;%
select(-b)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a1 a2 a3
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> 1 1 2 3
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>tbl %&amp;gt;%
select(a1:a3)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a1 a2 a3
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> 1 1 2 3
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>tbl %&amp;gt;%
select(starts_with(&amp;quot;a&amp;quot;))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a1 a2 a3
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> 1 1 2 3
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>tbl %&amp;gt;%
select(2:4)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a2 a3 b
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> 1 2 3 x
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>vars &amp;lt;- syms(c(&amp;quot;a2&amp;quot;, &amp;quot;b&amp;quot;))
tbl %&amp;gt;%
select(!!!vars)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a2 b
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> 1 2 x
&lt;/span>&lt;/pre>
&lt;p>Last year, the core code that provides this functionality was moved out of &lt;em>dplyr&lt;/em> into the fairly new &lt;em>tidyselect&lt;/em> package. Selecting columns in a data frame (or items in a character vector, for that matter) is a common task in many other situations. The &lt;em>tidyselect&lt;/em> package offers a consistent and convenient interface with full support for quasiquotation, and is used by more than 20 packages, and now also by &lt;em>dplyr&lt;/em>. Internally, the &lt;code>select()&lt;/code> calls above are translated into the following &lt;em>tidyselect&lt;/em> operations:&lt;/p>
&lt;pre class="r">&lt;code>tbl_names &amp;lt;- names(tbl)
tbl_names %&amp;gt;%
tidyselect::vars_select(a1, a2)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a1 a2
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> "a1" "a2"
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>tbl_names %&amp;gt;%
tidyselect::vars_select(-b)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a1 a2 a3
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> "a1" "a2" "a3"
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>tbl_names %&amp;gt;%
tidyselect::vars_select(a1:a3)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a1 a2 a3
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> "a1" "a2" "a3"
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>tbl_names %&amp;gt;%
tidyselect::vars_select(starts_with(&amp;quot;a&amp;quot;))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a1 a2 a3
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> "a1" "a2" "a3"
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>tbl_names %&amp;gt;%
tidyselect::vars_select(2:4)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a2 a3 b
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> "a2" "a3" "b"
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>vars &amp;lt;- syms(c(&amp;quot;a2&amp;quot;, &amp;quot;b&amp;quot;))
tbl_names %&amp;gt;%
tidyselect::vars_select(!!!vars)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a2 b
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> "a2" "b"
&lt;/span>&lt;/pre>
&lt;p>The net effect of this change is improved consistency across the tidyverse and the other packages that use &lt;em>tidyselect&lt;/em>. The user interface is affected in two ways:&lt;/p>
&lt;ul>
&lt;li>&lt;p>The &lt;code>select_vars()&lt;/code>, &lt;code>select_var()&lt;/code> and &lt;code>rename_vars()&lt;/code> functions are soft-deprecated and will start issuing warnings in a future version. Instead, use &lt;code>tidyselect::vars_select()&lt;/code>, &lt;code>tidyselect::vars_pull()&lt;/code> and &lt;code>tidyselect::vars_rename()&lt;/code>, respectively.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>select()&lt;/code> and &lt;code>rename()&lt;/code> fully support character vectors. You can now unquote variables like this:&lt;/p>
&lt;pre class="r">&lt;code>vars &amp;lt;- c(&amp;quot;a2&amp;quot;, &amp;quot;b&amp;quot;)
select(tbl, !!vars)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a2 b
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> 1 2 x
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>select(tbl, -(!!vars))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> a1 a3
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> 1 1 3
&lt;/span>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="scoped-verbs-for-grouped-data" class="section level2">
&lt;h2>Scoped verbs for grouped data&lt;/h2>
&lt;p>Scoped verbs are useful when you want to apply the same operation on multiple columns. These functions end with &lt;code>_all&lt;/code> (affect all columns), &lt;code>_at&lt;/code> (affect selected columns), or &lt;code>_if&lt;/code> (affect columns that satisfy a predicate), and replaced the older &lt;code>_each&lt;/code> family of functions in &lt;em>dplyr&lt;/em> 0.7.0. In the most recent version of &lt;em>dplyr&lt;/em>, these functions have been extended to work on grouped data frames. Because the group columns need to stay unchanged, these operations work slightly differently on grouped data frames:&lt;/p>
&lt;ul>
&lt;li>&lt;p>In &lt;code>select_*()&lt;/code>, the group columns are always kept.&lt;/p>
&lt;pre class="r">&lt;code>grouped_iris &amp;lt;-
iris %&amp;gt;%
group_by(Species) %&amp;gt;%
slice(1:2)
grouped_iris %&amp;gt;%
select_if(funs(is.numeric))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># A tibble: 6 x 5&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># Groups: Species [3]&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Species&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Sepal.Length&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Sepal.Width&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Petal.Length&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Petal.Width&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>1&lt;/span>&lt;span> setosa 5.1 3.5 1.4 0.2
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>2&lt;/span>&lt;span> setosa 4.9 3 1.4 0.2
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>3&lt;/span>&lt;span> versicolor 7 3.2 4.7 1.4
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>4&lt;/span>&lt;span> versicolor 6.4 3.2 4.5 1.5
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>5&lt;/span>&lt;span> virginica 6.3 3.3 6 2.5
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>6&lt;/span>&lt;span> virginica 5.8 2.7 5.1 1.9
&lt;/span>&lt;/pre>&lt;/li>
&lt;li>&lt;p>In &lt;code>mutate_*()&lt;/code> and &lt;code>transmute_*()&lt;/code>, group columns are never altered:&lt;/p>
&lt;pre class="r">&lt;code>grouped_iris %&amp;gt;%
mutate_all(funs(. + 1))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># A tibble: 6 x 5&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># Groups: Species [3]&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Sepal.Length&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Sepal.Width&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Petal.Length&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Petal.Width&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Species&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>1&lt;/span>&lt;span> 6.1 4.5 2.4 1.2 setosa
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>2&lt;/span>&lt;span> 5.9 4 2.4 1.2 setosa
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>3&lt;/span>&lt;span> 8 4.2 5.7 2.4 versicolor
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>4&lt;/span>&lt;span> 7.4 4.2 5.5 2.5 versicolor
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>5&lt;/span>&lt;span> 7.3 4.3 7 3.5 virginica
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>6&lt;/span>&lt;span> 6.8 3.7 6.1 2.9 virginica
&lt;/span>&lt;/pre>&lt;/li>
&lt;li>&lt;p>&lt;code>filter_...()&lt;/code> currently includes group columns:&lt;/p>
&lt;pre class="r">&lt;code>grouped_iris %&amp;gt;%
filter_if(funs(is.numeric), all_vars(. &amp;gt; 1))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># A tibble: 4 x 5&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># Groups: Species [2]&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Sepal.Length&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Sepal.Width&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Petal.Length&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Petal.Width&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Species&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>1&lt;/span>&lt;span> 7 3.2 4.7 1.4 versicolor
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>2&lt;/span>&lt;span> 6.4 3.2 4.5 1.5 versicolor
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>3&lt;/span>&lt;span> 6.3 3.3 6 2.5 virginica
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>4&lt;/span>&lt;span> 5.8 2.7 5.1 1.9 virginica
&lt;/span>&lt;/pre>&lt;/li>
&lt;li>&lt;p>&lt;code>arrange_...()&lt;/code> ignores group columns:&lt;/p>
&lt;pre class="r">&lt;code>grouped_iris %&amp;gt;%
arrange_all()&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># A tibble: 6 x 5&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># Groups: Species [3]&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Sepal.Length&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Sepal.Width&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Petal.Length&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Petal.Width&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>Species&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>1&lt;/span>&lt;span> 4.9 3 1.4 0.2 setosa
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>2&lt;/span>&lt;span> 5.1 3.5 1.4 0.2 setosa
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>3&lt;/span>&lt;span> 5.8 2.7 5.1 1.9 virginica
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>4&lt;/span>&lt;span> 6.3 3.3 6 2.5 virginica
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>5&lt;/span>&lt;span> 6.4 3.2 4.5 1.5 versicolor
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>6&lt;/span>&lt;span> 7 3.2 4.7 1.4 versicolor
&lt;/span>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="raw-vectors" class="section level2">
&lt;h2>Raw vectors&lt;/h2>
&lt;p>The &lt;code>raw&lt;/code> data type is a first-class citizen in R’s type system, but has been somewhat neglected in &lt;em>dplyr&lt;/em> so far. In this version of &lt;em>dplyr&lt;/em> you can compute on that data type:&lt;/p>
&lt;pre class="r">&lt;code>raw_tbl &amp;lt;- tibble(a = 1:3, b = as.raw(1:3))
raw_tbl %&amp;gt;%
filter(b &amp;lt; 2)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># A tibble: 1 x 2&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>a&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>b&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;raw&amp;gt;&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>1&lt;/span>&lt;span> 1 01
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>raw_tbl %&amp;gt;%
arrange(desc(b))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># A tibble: 3 x 2&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>a&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>b&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;raw&amp;gt;&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>1&lt;/span>&lt;span> 3 03
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>2&lt;/span>&lt;span> 2 02
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>3&lt;/span>&lt;span> 1 01
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>all_equal(raw_tbl, slice(raw_tbl, 3:1))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> [1] TRUE
&lt;/span>&lt;/pre>
&lt;pre class="r">&lt;code>left_join(slice(raw_tbl, 1:2), slice(raw_tbl, 2:3), by = &amp;quot;b&amp;quot;)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># A tibble: 2 x 3&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>a.x&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>b&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>a.y&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;raw&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>1&lt;/span>&lt;span> 1 01 &lt;/span>&lt;span style='color: #BB0000;'>NA&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>2&lt;/span>&lt;span> 2 02 2
&lt;/span>&lt;/pre>
&lt;p>Be aware that &lt;code>raw&lt;/code> doesn’t know an &lt;code>NA&lt;/code> value, the result of a join may be surprising.&lt;/p>
&lt;pre class="r">&lt;code>left_join(slice(raw_tbl, 1:2), slice(raw_tbl, 2:3), by = &amp;quot;a&amp;quot;)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'># A tibble: 2 x 3&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>a&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>b.x&lt;/span>&lt;span> &lt;/span>&lt;span style='font-weight: bold;'>b.y&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;raw&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;raw&amp;gt;&lt;/span>&lt;span>
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>1&lt;/span>&lt;span> 1 01 00
&lt;/span>&lt;span style='color: #555555;'>#&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>2&lt;/span>&lt;span> 2 02 02
&lt;/span>&lt;/pre>
&lt;/div>
&lt;div id="welcome-back-romain" class="section level2">
&lt;h2>Welcome back Romain&lt;/h2>
&lt;p>Romain François, the author of the data frame backend for &lt;em>dplyr&lt;/em>, has joined the team and hit the ground running. He has implemented many of the features described in this blog post, and is now focused on features of the next release.&lt;/p>
&lt;p>The next release involves substantial refactoring of the internals to make hybrid evaluation simpler and less surprising, a new implementation of grouping that better respects levels of factors, and redesign of the grouping metadata to replace the current collection of attributes by a single tidy tibble. This is ambitious work, it is great to have Romain on board to tackle it.&lt;/p>
&lt;p>Welcome (back), Romain, looking forward to a great time!&lt;/p>
&lt;/div>
&lt;div id="acknowledgments" class="section level2">
&lt;h2>Acknowledgments&lt;/h2>
&lt;p>Thanks to all contributors to &lt;em>dplyr&lt;/em>, your feedback helps make this package better and easier to use: &lt;a href="https://github.com/2533245542">@2533245542&lt;/a>, &lt;a href="https://github.com/aammd">@aammd&lt;/a>, &lt;a href="https://github.com/ablack3">@ablack3&lt;/a>, &lt;a href="https://github.com/adder">@adder&lt;/a>, &lt;a href="https://github.com/AHoerner">@AHoerner&lt;/a>, &lt;a href="https://github.com/AjarKeen">@AjarKeen&lt;/a>, &lt;a href="https://github.com/ajay-d">@ajay-d&lt;/a>, &lt;a href="https://github.com/alexfun">@alexfun&lt;/a>, &lt;a href="https://github.com/alexhallam">@alexhallam&lt;/a>, &lt;a href="https://github.com/alexiglaser">@alexiglaser&lt;/a>, &lt;a href="https://github.com/AljazJ">@AljazJ&lt;/a>, &lt;a href="https://github.com/amjiuzi">@amjiuzi&lt;/a>, &lt;a href="https://github.com/andreaspano">@andreaspano&lt;/a>, &lt;a href="https://github.com/AndreMikulec">@AndreMikulec&lt;/a>, &lt;a href="https://github.com/andresimi">@andresimi&lt;/a>, &lt;a href="https://github.com/andrewjpfeiffer">@andrewjpfeiffer&lt;/a>, &lt;a href="https://github.com/anescalc">@anescalc&lt;/a>, &lt;a href="https://github.com/AngryR11">@AngryR11&lt;/a>, &lt;a href="https://github.com/apreshill">@apreshill&lt;/a>, &lt;a href="https://github.com/aswan89">@aswan89&lt;/a>, &lt;a href="https://github.com/Athospd">@Athospd&lt;/a>, &lt;a href="https://github.com/aurelberra">@aurelberra&lt;/a>, &lt;a href="https://github.com/austensen">@austensen&lt;/a>, &lt;a href="https://github.com/baileych">@baileych&lt;/a>, &lt;a href="https://github.com/batpigandme">@batpigandme&lt;/a>, &lt;a href="https://github.com/behrman">@behrman&lt;/a>, &lt;a href="https://github.com/benmarwick">@benmarwick&lt;/a>, &lt;a href="https://github.com/bensoltoff">@bensoltoff&lt;/a>, &lt;a href="https://github.com/bheavner">@bheavner&lt;/a>, &lt;a href="https://github.com/bigmw">@bigmw&lt;/a>, &lt;a href="https://github.com/billdenney">@billdenney&lt;/a>, &lt;a href="https://github.com/bilydr">@bilydr&lt;/a>, &lt;a href="https://github.com/BishtDinesh">@BishtDinesh&lt;/a>, &lt;a href="https://github.com/bjornerstedt">@bjornerstedt&lt;/a>, &lt;a href="https://github.com/bkkkk">@bkkkk&lt;/a>, &lt;a href="https://github.com/bobokdalibor">@bobokdalibor&lt;/a>, &lt;a href="https://github.com/brendanf">@brendanf&lt;/a>, &lt;a href="https://github.com/brianstamper">@brianstamper&lt;/a>, &lt;a href="https://github.com/briglass">@briglass&lt;/a>, &lt;a href="https://github.com/brooke-watson">@brooke-watson&lt;/a>, &lt;a href="https://github.com/capelastegui">@capelastegui&lt;/a>, &lt;a href="https://github.com/cderv">@cderv&lt;/a>, &lt;a href="https://github.com/CerebralMastication">@CerebralMastication&lt;/a>, &lt;a href="https://github.com/ChadEfaw">@ChadEfaw&lt;/a>, &lt;a href="https://github.com/ChiWPak">@ChiWPak&lt;/a>, &lt;a href="https://github.com/chrnin">@chrnin&lt;/a>, &lt;a href="https://github.com/chunjiw">@chunjiw&lt;/a>, &lt;a href="https://github.com/cipherz">@cipherz&lt;/a>, &lt;a href="https://github.com/cjyetman">@cjyetman&lt;/a>, &lt;a href="https://github.com/ckarras">@ckarras&lt;/a>, &lt;a href="https://github.com/cmhh">@cmhh&lt;/a>, &lt;a href="https://github.com/cnjr2">@cnjr2&lt;/a>, &lt;a href="https://github.com/colearendt">@colearendt&lt;/a>, &lt;a href="https://github.com/ColinFay">@ColinFay&lt;/a>, &lt;a href="https://github.com/coloneltriq">@coloneltriq&lt;/a>, &lt;a href="https://github.com/congdanh8391">@congdanh8391&lt;/a>, &lt;a href="https://github.com/coolbutuseless">@coolbutuseless&lt;/a>, &lt;a href="https://github.com/copernican">@copernican&lt;/a>, &lt;a href="https://github.com/courtiol">@courtiol&lt;/a>, &lt;a href="https://github.com/cperk">@cperk&lt;/a>, &lt;a href="https://github.com/cturbelin">@cturbelin&lt;/a>, &lt;a href="https://github.com/cuttlefish44">@cuttlefish44&lt;/a>, &lt;a href="https://github.com/daattali">@daattali&lt;/a>, &lt;a href="https://github.com/dadwalrajiv">@dadwalrajiv&lt;/a>, &lt;a href="https://github.com/dan87134">@dan87134&lt;/a>, &lt;a href="https://github.com/danielcanueto">@danielcanueto&lt;/a>, &lt;a href="https://github.com/danielmcauley">@danielmcauley&lt;/a>, &lt;a href="https://github.com/danielsjf">@danielsjf&lt;/a>, &lt;a href="https://github.com/danishahmadamu">@danishahmadamu&lt;/a>, &lt;a href="https://github.com/dantonnoriega">@dantonnoriega&lt;/a>, &lt;a href="https://github.com/darrkj">@darrkj&lt;/a>, &lt;a href="https://github.com/DasHammett">@DasHammett&lt;/a>, &lt;a href="https://github.com/DataStrategist">@DataStrategist&lt;/a>, &lt;a href="https://github.com/DataWookie">@DataWookie&lt;/a>, &lt;a href="https://github.com/davharris">@davharris&lt;/a>, &lt;a href="https://github.com/davidkane9">@davidkane9&lt;/a>, &lt;a href="https://github.com/DavisVaughan">@DavisVaughan&lt;/a>, &lt;a href="https://github.com/deeenes">@deeenes&lt;/a>, &lt;a href="https://github.com/deymos314">@deymos314&lt;/a>, &lt;a href="https://github.com/dgromer">@dgromer&lt;/a>, &lt;a href="https://github.com/dhicks">@dhicks&lt;/a>, &lt;a href="https://github.com/djbirke">@djbirke&lt;/a>, &lt;a href="https://github.com/dkincaid">@dkincaid&lt;/a>, &lt;a href="https://github.com/donaldmusgrove">@donaldmusgrove&lt;/a>, &lt;a href="https://github.com/dpeterson71">@dpeterson71&lt;/a>, &lt;a href="https://github.com/dpolychr">@dpolychr&lt;/a>, &lt;a href="https://github.com/dpprdan">@dpprdan&lt;/a>, &lt;a href="https://github.com/drf5n">@drf5n&lt;/a>, &lt;a href="https://github.com/dustindall">@dustindall&lt;/a>, &lt;a href="https://github.com/eamoncaddigan">@eamoncaddigan&lt;/a>, &lt;a href="https://github.com/earthcli">@earthcli&lt;/a>, &lt;a href="https://github.com/echasnovski">@echasnovski&lt;/a>, &lt;a href="https://github.com/econandrew">@econandrew&lt;/a>, &lt;a href="https://github.com/EconomiCurtis">@EconomiCurtis&lt;/a>, &lt;a href="https://github.com/edgararuiz">@edgararuiz&lt;/a>, &lt;a href="https://github.com/eduardgrebe">@eduardgrebe&lt;/a>, &lt;a href="https://github.com/edublancas">@edublancas&lt;/a>, &lt;a href="https://github.com/EdwardJRoss">@EdwardJRoss&lt;/a>, &lt;a href="https://github.com/edwindj">@edwindj&lt;/a>, &lt;a href="https://github.com/EdwinTh">@EdwinTh&lt;/a>, &lt;a href="https://github.com/edzer">@edzer&lt;/a>, &lt;a href="https://github.com/elben10">@elben10&lt;/a>, &lt;a href="https://github.com/EmilRehnberg">@EmilRehnberg&lt;/a>, &lt;a href="https://github.com/emilyriederer">@emilyriederer&lt;/a>, &lt;a href="https://github.com/enesn">@enesn&lt;/a>, &lt;a href="https://github.com/erikerhardt">@erikerhardt&lt;/a>, &lt;a href="https://github.com/etiennebr">@etiennebr&lt;/a>, &lt;a href="https://github.com/evanbiederstedt">@evanbiederstedt&lt;/a>, &lt;a href="https://github.com/filipefilardi">@filipefilardi&lt;/a>, &lt;a href="https://github.com/flying-sheep">@flying-sheep&lt;/a>, &lt;a href="https://github.com/fmichonneau">@fmichonneau&lt;/a>, &lt;a href="https://github.com/fnamugera">@fnamugera&lt;/a>, &lt;a href="https://github.com/foo-bar-baz-qux">@foo-bar-baz-qux&lt;/a>, &lt;a href="https://github.com/foundinblank">@foundinblank&lt;/a>, &lt;a href="https://github.com/fpmcardoso">@fpmcardoso&lt;/a>, &lt;a href="https://github.com/Fredo-XVII">@Fredo-XVII&lt;/a>, &lt;a href="https://github.com/gadenbuie">@gadenbuie&lt;/a>, &lt;a href="https://github.com/ganong123">@ganong123&lt;/a>, &lt;a href="https://github.com/garrettgman">@garrettgman&lt;/a>, &lt;a href="https://github.com/GeorgeRJacobs">@GeorgeRJacobs&lt;/a>, &lt;a href="https://github.com/ggrothendieck">@ggrothendieck&lt;/a>, &lt;a href="https://github.com/ghaarsma">@ghaarsma&lt;/a>, &lt;a href="https://github.com/gireeshkbogu">@gireeshkbogu&lt;/a>, &lt;a href="https://github.com/greg-botwin">@greg-botwin&lt;/a>, &lt;a href="https://github.com/gtumuluri">@gtumuluri&lt;/a>, &lt;a href="https://github.com/GuillaumePressiat">@GuillaumePressiat&lt;/a>, &lt;a href="https://github.com/halpo">@halpo&lt;/a>, &lt;a href="https://github.com/hameddashti">@hameddashti&lt;/a>, &lt;a href="https://github.com/hannesmuehleisen">@hannesmuehleisen&lt;/a>, &lt;a href="https://github.com/happyfishyqy">@happyfishyqy&lt;/a>, &lt;a href="https://github.com/happyshows">@happyshows&lt;/a>, &lt;a href="https://github.com/harryzyming">@harryzyming&lt;/a>, &lt;a href="https://github.com/hdelrio">@hdelrio&lt;/a>, &lt;a href="https://github.com/heavywatal">@heavywatal&lt;/a>, &lt;a href="https://github.com/Henrik-P">@Henrik-P&lt;/a>, &lt;a href="https://github.com/homerhanumat">@homerhanumat&lt;/a>, &lt;a href="https://github.com/Hong-Revo">@Hong-Revo&lt;/a>, &lt;a href="https://github.com/HuangRicky">@HuangRicky&lt;/a>, &lt;a href="https://github.com/huftis">@huftis&lt;/a>, &lt;a href="https://github.com/hughjonesd">@hughjonesd&lt;/a>, &lt;a href="https://github.com/iangow">@iangow&lt;/a>, &lt;a href="https://github.com/ijlyttle">@ijlyttle&lt;/a>, &lt;a href="https://github.com/ilyaminati">@ilyaminati&lt;/a>, &lt;a href="https://github.com/iron0012">@iron0012&lt;/a>, &lt;a href="https://github.com/itcarroll">@itcarroll&lt;/a>, &lt;a href="https://github.com/jabranham">@jabranham&lt;/a>, &lt;a href="https://github.com/Jafet">@Jafet&lt;/a>, &lt;a href="https://github.com/jakefrost">@jakefrost&lt;/a>, &lt;a href="https://github.com/jalsalam">@jalsalam&lt;/a>, &lt;a href="https://github.com/jamesthurgood34">@jamesthurgood34&lt;/a>, &lt;a href="https://github.com/jarauh">@jarauh&lt;/a>, &lt;a href="https://github.com/jarekj71">@jarekj71&lt;/a>, &lt;a href="https://github.com/jarodmeng">@jarodmeng&lt;/a>, &lt;a href="https://github.com/JasonAizkalns">@JasonAizkalns&lt;/a>, &lt;a href="https://github.com/jasperDD">@jasperDD&lt;/a>, &lt;a href="https://github.com/javierluraschi">@javierluraschi&lt;/a>, &lt;a href="https://github.com/jbao">@jbao&lt;/a>, &lt;a href="https://github.com/jcfisher">@jcfisher&lt;/a>, &lt;a href="https://github.com/jcheng5">@jcheng5&lt;/a>, &lt;a href="https://github.com/jennybc">@jennybc&lt;/a>, &lt;a href="https://github.com/jerryfuyu0104">@jerryfuyu0104&lt;/a>, &lt;a href="https://github.com/jerryzhujian9">@jerryzhujian9&lt;/a>, &lt;a href="https://github.com/jessekps">@jessekps&lt;/a>, &lt;a href="https://github.com/jfcharney">@jfcharney&lt;/a>, &lt;a href="https://github.com/jgellar">@jgellar&lt;/a>, &lt;a href="https://github.com/jhofman">@jhofman&lt;/a>, &lt;a href="https://github.com/jianboli">@jianboli&lt;/a>, &lt;a href="https://github.com/jimvine">@jimvine&lt;/a>, &lt;a href="https://github.com/jjacks12">@jjacks12&lt;/a>, &lt;a href="https://github.com/jjchern">@jjchern&lt;/a>, &lt;a href="https://github.com/JLYJabc">@JLYJabc&lt;/a>, &lt;a href="https://github.com/jnolis">@jnolis&lt;/a>, &lt;a href="https://github.com/joelgombin">@joelgombin&lt;/a>, &lt;a href="https://github.com/JohnMount">@JohnMount&lt;/a>, &lt;a href="https://github.com/jonocarroll">@jonocarroll&lt;/a>, &lt;a href="https://github.com/josnarog">@josnarog&lt;/a>, &lt;a href="https://github.com/jrosen48">@jrosen48&lt;/a>, &lt;a href="https://github.com/jrubinstein">@jrubinstein&lt;/a>, &lt;a href="https://github.com/jschelbert">@jschelbert&lt;/a>, &lt;a href="https://github.com/jtelleriar">@jtelleriar&lt;/a>, &lt;a href="https://github.com/jthurner">@jthurner&lt;/a>, &lt;a href="https://github.com/jtrecenti">@jtrecenti&lt;/a>, &lt;a href="https://github.com/juliangkr">@juliangkr&lt;/a>, &lt;a href="https://github.com/jwhendy">@jwhendy&lt;/a>, &lt;a href="https://github.com/jwnorman">@jwnorman&lt;/a>, &lt;a href="https://github.com/karldw">@karldw&lt;/a>, &lt;a href="https://github.com/KasperSkytte">@KasperSkytte&lt;/a>, &lt;a href="https://github.com/kdaily">@kdaily&lt;/a>, &lt;a href="https://github.com/kerry-ja">@kerry-ja&lt;/a>, &lt;a href="https://github.com/ketansahils">@ketansahils&lt;/a>, &lt;a href="https://github.com/kevinykuo">@kevinykuo&lt;/a>, &lt;a href="https://github.com/kforner">@kforner&lt;/a>, &lt;a href="https://github.com/klmr">@klmr&lt;/a>, &lt;a href="https://github.com/knbknb">@knbknb&lt;/a>, &lt;a href="https://github.com/knokknok">@knokknok&lt;/a>, &lt;a href="https://github.com/Koantig">@Koantig&lt;/a>, &lt;a href="https://github.com/komalsrathi">@komalsrathi&lt;/a>, &lt;a href="https://github.com/konny0201">@konny0201&lt;/a>, &lt;a href="https://github.com/kravhowe">@kravhowe&lt;/a>, &lt;a href="https://github.com/kylebarron">@kylebarron&lt;/a>, &lt;a href="https://github.com/kylelundstedt">@kylelundstedt&lt;/a>, &lt;a href="https://github.com/larmarange">@larmarange&lt;/a>, &lt;a href="https://github.com/lawremi">@lawremi&lt;/a>, &lt;a href="https://github.com/lbakerIsazi">@lbakerIsazi&lt;/a>, &lt;a href="https://github.com/lepennec">@lepennec&lt;/a>, &lt;a href="https://github.com/leungi">@leungi&lt;/a>, &lt;a href="https://github.com/lgautier">@lgautier&lt;/a>, &lt;a href="https://github.com/lhunsicker">@lhunsicker&lt;/a>, &lt;a href="https://github.com/lindesaysh">@lindesaysh&lt;/a>, &lt;a href="https://github.com/lionel-">@lionel-&lt;/a>, &lt;a href="https://github.com/lmullen">@lmullen&lt;/a>, &lt;a href="https://github.com/Lopa2016">@Lopa2016&lt;/a>, &lt;a href="https://github.com/lorenzwalthert">@lorenzwalthert&lt;/a>, &lt;a href="https://github.com/lukeholman">@lukeholman&lt;/a>, &lt;a href="https://github.com/MargaretJones">@MargaretJones&lt;/a>, &lt;a href="https://github.com/markvanderloo">@markvanderloo&lt;/a>, &lt;a href="https://github.com/Marlein">@Marlein&lt;/a>, &lt;a href="https://github.com/mathematiguy">@mathematiguy&lt;/a>, &lt;a href="https://github.com/matsuobasho">@matsuobasho&lt;/a>, &lt;a href="https://github.com/mattbaggott">@mattbaggott&lt;/a>, &lt;a href="https://github.com/matthieugomez">@matthieugomez&lt;/a>, &lt;a href="https://github.com/MatthieuStigler">@MatthieuStigler&lt;/a>, &lt;a href="https://github.com/md0u80c9">@md0u80c9&lt;/a>, &lt;a href="https://github.com/mdancho84">@mdancho84&lt;/a>, &lt;a href="https://github.com/mdlincoln">@mdlincoln&lt;/a>, &lt;a href="https://github.com/metanoid">@metanoid&lt;/a>, &lt;a href="https://github.com/mgirlich">@mgirlich&lt;/a>, &lt;a href="https://github.com/michaellevy">@michaellevy&lt;/a>, &lt;a href="https://github.com/mienkoja">@mienkoja&lt;/a>, &lt;a href="https://github.com/mikldk">@mikldk&lt;/a>, &lt;a href="https://github.com/mine-cetinkaya-rundel">@mine-cetinkaya-rundel&lt;/a>, &lt;a href="https://github.com/mkirzon">@mkirzon&lt;/a>, &lt;a href="https://github.com/mkwiecinski">@mkwiecinski&lt;/a>, &lt;a href="https://github.com/mlell">@mlell&lt;/a>, &lt;a href="https://github.com/moodymudskipper">@moodymudskipper&lt;/a>, &lt;a href="https://github.com/mr-majkel">@mr-majkel&lt;/a>, &lt;a href="https://github.com/mredaelli">@mredaelli&lt;/a>, &lt;a href="https://github.com/mrkowalski">@mrkowalski&lt;/a>, &lt;a href="https://github.com/msberends">@msberends&lt;/a>, &lt;a href="https://github.com/msgoussi">@msgoussi&lt;/a>, &lt;a href="https://github.com/mtmorgan">@mtmorgan&lt;/a>, &lt;a href="https://github.com/mungojam">@mungojam&lt;/a>, &lt;a href="https://github.com/mwillumz">@mwillumz&lt;/a>, &lt;a href="https://github.com/my-katie">@my-katie&lt;/a>, &lt;a href="https://github.com/MZLABS">@MZLABS&lt;/a>, &lt;a href="https://github.com/nachocab">@nachocab&lt;/a>, &lt;a href="https://github.com/nc6">@nc6&lt;/a>, &lt;a href="https://github.com/neelrakholia">@neelrakholia&lt;/a>, &lt;a href="https://github.com/Nick-Rivera">@Nick-Rivera&lt;/a>, &lt;a href="https://github.com/nickbond">@nickbond&lt;/a>, &lt;a href="https://github.com/nilescbn">@nilescbn&lt;/a>, &lt;a href="https://github.com/OssiLehtinen">@OssiLehtinen&lt;/a>, &lt;a href="https://github.com/otoomet">@otoomet&lt;/a>, &lt;a href="https://github.com/otsaw">@otsaw&lt;/a>, &lt;a href="https://github.com/pachamaltese">@pachamaltese&lt;/a>, &lt;a href="https://github.com/paulponcet">@paulponcet&lt;/a>, &lt;a href="https://github.com/petehobo">@petehobo&lt;/a>, &lt;a href="https://github.com/PeterBolo">@PeterBolo&lt;/a>, &lt;a href="https://github.com/pgensler">@pgensler&lt;/a>, &lt;a href="https://github.com/phirsch">@phirsch&lt;/a>, &lt;a href="https://github.com/piccolbo">@piccolbo&lt;/a>, &lt;a href="https://github.com/pierucci">@pierucci&lt;/a>, &lt;a href="https://github.com/potterzot">@potterzot&lt;/a>, &lt;a href="https://github.com/profdave">@profdave&lt;/a>, &lt;a href="https://github.com/Prometheus77">@Prometheus77&lt;/a>, &lt;a href="https://github.com/pssguy">@pssguy&lt;/a>, &lt;a href="https://github.com/QuentinRoy">@QuentinRoy&lt;/a>, &lt;a href="https://github.com/ramongallego">@ramongallego&lt;/a>, &lt;a href="https://github.com/rappster">@rappster&lt;/a>, &lt;a href="https://github.com/rasmusrhl">@rasmusrhl&lt;/a>, &lt;a href="https://github.com/rebeccaferrell">@rebeccaferrell&lt;/a>, &lt;a href="https://github.com/renlund">@renlund&lt;/a>, &lt;a href="https://github.com/rgknight">@rgknight&lt;/a>, &lt;a href="https://github.com/RickPack">@RickPack&lt;/a>, &lt;a href="https://github.com/ringprince">@ringprince&lt;/a>, &lt;a href="https://github.com/rkrug">@rkrug&lt;/a>, &lt;a href="https://github.com/rtaph">@rtaph&lt;/a>, &lt;a href="https://github.com/rundel">@rundel&lt;/a>, &lt;a href="https://github.com/russellpierce">@russellpierce&lt;/a>, &lt;a href="https://github.com/s-geissler">@s-geissler&lt;/a>, &lt;a href="https://github.com/saberbouabid">@saberbouabid&lt;/a>, &lt;a href="https://github.com/salim-b">@salim-b&lt;/a>, &lt;a href="https://github.com/sammcq">@sammcq&lt;/a>, &lt;a href="https://github.com/sandan">@sandan&lt;/a>, &lt;a href="https://github.com/saurfang">@saurfang&lt;/a>, &lt;a href="https://github.com/SeabassWells">@SeabassWells&lt;/a>, &lt;a href="https://github.com/sfirke">@sfirke&lt;/a>, &lt;a href="https://github.com/shizidushu">@shizidushu&lt;/a>, &lt;a href="https://github.com/shntnu">@shntnu&lt;/a>, &lt;a href="https://github.com/sibojan">@sibojan&lt;/a>, &lt;a href="https://github.com/Sidt1">@Sidt1&lt;/a>, &lt;a href="https://github.com/simonthelwall">@simonthelwall&lt;/a>, &lt;a href="https://github.com/skranz">@skranz&lt;/a>, &lt;a href="https://github.com/sollano">@sollano&lt;/a>, &lt;a href="https://github.com/spedygiorgio">@spedygiorgio&lt;/a>, &lt;a href="https://github.com/srlivingstone">@srlivingstone&lt;/a>, &lt;a href="https://github.com/stephlocke">@stephlocke&lt;/a>, &lt;a href="https://github.com/steromano">@steromano&lt;/a>, &lt;a href="https://github.com/stevenfazzio">@stevenfazzio&lt;/a>, &lt;a href="https://github.com/strengejacke">@strengejacke&lt;/a>, &lt;a href="https://github.com/stufield">@stufield&lt;/a>, &lt;a href="https://github.com/SulevR">@SulevR&lt;/a>, &lt;a href="https://github.com/sz-cgt">@sz-cgt&lt;/a>, &lt;a href="https://github.com/t-kalinowski">@t-kalinowski&lt;/a>, &lt;a href="https://github.com/takahisah">@takahisah&lt;/a>, &lt;a href="https://github.com/thomascwells">@thomascwells&lt;/a>, &lt;a href="https://github.com/thomasp85">@thomasp85&lt;/a>, &lt;a href="https://github.com/timothyslau">@timothyslau&lt;/a>, &lt;a href="https://github.com/tobiasgerstenberg">@tobiasgerstenberg&lt;/a>, &lt;a href="https://github.com/topepo">@topepo&lt;/a>, &lt;a href="https://github.com/tslumley">@tslumley&lt;/a>, &lt;a href="https://github.com/tvedebrink">@tvedebrink&lt;/a>, &lt;a href="https://github.com/twolodzko">@twolodzko&lt;/a>, &lt;a href="https://github.com/tzoltak">@tzoltak&lt;/a>, &lt;a href="https://github.com/VikrantDogra">@VikrantDogra&lt;/a>, &lt;a href="https://github.com/VincentGuyader">@VincentGuyader&lt;/a>, &lt;a href="https://github.com/vitallish">@vitallish&lt;/a>, &lt;a href="https://github.com/vjcitn">@vjcitn&lt;/a>, &lt;a href="https://github.com/vnijs">@vnijs&lt;/a>, &lt;a href="https://github.com/vpanfilov">@vpanfilov&lt;/a>, &lt;a href="https://github.com/vspinu">@vspinu&lt;/a>, &lt;a href="https://github.com/washcycle">@washcycle&lt;/a>, &lt;a href="https://github.com/WaterworthD">@WaterworthD&lt;/a>, &lt;a href="https://github.com/wch">@wch&lt;/a>, &lt;a href="https://github.com/wenbostar">@wenbostar&lt;/a>, &lt;a href="https://github.com/wodsworth">@wodsworth&lt;/a>, &lt;a href="https://github.com/xuefliang">@xuefliang&lt;/a>, &lt;a href="https://github.com/youcc">@youcc&lt;/a>, &lt;a href="https://github.com/yutannihilation">@yutannihilation&lt;/a>, &lt;a href="https://github.com/zeehio">@zeehio&lt;/a>, &lt;a href="https://github.com/zenggyu">@zenggyu&lt;/a>, &lt;a href="https://github.com/zhangchuck">@zhangchuck&lt;/a>, and &lt;a href="https://github.com/zx8754">@zx8754&lt;/a>&lt;/p>
&lt;/div></description></item><item><title>dbplyr 1.2.0</title><link>https://www.tidyverse.org/blog/2018/01/dbplyr-1-2/</link><pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/01/dbplyr-1-2/</guid><description>
&lt;p>We are very excited to announce that &lt;a href="http://dbplyr.tidyverse.org/">dbplyr 1.2.0&lt;/a> is now available on CRAN! &lt;strong>dbplyr&lt;/strong> is the database backend for dplyr. It interacts with databases directly by translating dplyr code into SQL queries. dbplyr is part of an expanding ecosystem of packages meant to help analysts access and analyze data in databases. To learn more, visit our website dedicated to &lt;em>all things R and databases&lt;/em>: &lt;a href="http://db.rstudio.com/" class="uri">http://db.rstudio.com/&lt;/a>&lt;/p>
&lt;p>Install the latest version of dbplyr with:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;dbplyr&amp;quot;)&lt;/code>&lt;/pre>
&lt;div id="whats-new" class="section level2">
&lt;h2>What’s new?&lt;/h2>
&lt;p>Here are some highlights of new features and fixes found in this release. To see the full details please refer to the &lt;a href="https://github.com/tidyverse/dbplyr/blob/master/NEWS.md#dbplyr-120">release notes&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>&lt;p>New custom translation for &lt;strong>Microsoft Access&lt;/strong> and &lt;a href="http://db.rstudio.com/databases/teradata/">Teradata&lt;/a>&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;a href="http://db.rstudio.com/databases/redshift/">Amazon Redshift&lt;/a> connections now point to the PostgreSQL translation.&lt;/p>&lt;/li>
&lt;li>Adds support for &lt;strong>two new database R packages&lt;/strong>. These new packages are fully &lt;a href="http://db.rstudio.com/dbi/">DBI&lt;/a>-compliant and tested with &lt;a href="https://cran.r-project.org/web/packages/DBItest/index.html">DBItest&lt;/a>. We recommend to use these instead of older packages:
&lt;ol style="list-style-type: decimal">
&lt;li>&lt;a href="https://cran.r-project.org/web/packages/RMariaDB/index.html">RMariaDB&lt;/a>, use in favor of RMySQL&lt;/li>
&lt;li>&lt;a href="https://cran.r-project.org/web/packages/RPostgres/index.html">RPostgres&lt;/a>, use in favor of RPostgreSQL&lt;/li>
&lt;/ol>&lt;/li>
&lt;li>&lt;a href="https://cran.r-project.org/web/packages/ROracle/index.html">ROracle&lt;/a> connections now point to the &lt;a href="http://db.rstudio.com/databases/oracle/">Oracle&lt;/a> translation.&lt;/li>
&lt;li>&lt;p>Cache query results using &lt;code>copy_to&lt;/code>. This feature is very useful because after cached, the results of a long running query can be iteratively analyzed without having to wait for the same base query to run over and over.&lt;/p>&lt;/li>
&lt;li>&lt;p>stringr functions: &lt;code>str_length()&lt;/code>, &lt;code>str_to_upper()&lt;/code>, &lt;code>str_to_lower()&lt;/code>, &lt;code>str_replace_all()&lt;/code>, &lt;code>str_detect()&lt;/code>, and &lt;code>str_trim()&lt;/code> are now supported.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>in_schema()&lt;/code> should now work in more places, particularly in &lt;code>copy_to()&lt;/code>&lt;/p>&lt;/li>
&lt;li>&lt;p>For those who need to extract the resulting SQL query from dplyr code, there is now a new function called &lt;code>remote_query()&lt;/code>. Unlike &lt;code>show_query()&lt;/code>, &lt;code>remote_query()&lt;/code> returns a character object, and unlike &lt;code>sql_render()&lt;/code>, the new function automatically detects the type of database attached to the given dplyr code and translates accordingly. There are four additional functions that provide a standard API to get metadata about a remote &lt;code>tbl&lt;/code>, these are: &lt;code>remote_name()&lt;/code>, &lt;code>remote_con()&lt;/code>, &lt;code>remote_src()&lt;/code>, and &lt;code>remote_query_plan()&lt;/code>.&lt;/p>&lt;/li>
&lt;li>&lt;p>Adds support for temporary tables in Microsoft SQL Server. Additionally, the issue of certain operators working only in &lt;code>mutate()&lt;/code> or only in &lt;code>filter()&lt;/code> has been resolved.&lt;/p>&lt;/li>
&lt;li>&lt;p>Two new functions for developers: &lt;code>sql_aggregate()&lt;/code> and &lt;code>win_aggregate()&lt;/code>. They are for generating SQL and windowed SQL functions for aggregates.&lt;/p>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="caching-results" class="section level2">
&lt;h2>Caching results&lt;/h2>
&lt;p>The &lt;code>copy_to()&lt;/code> function is now able to &lt;strong>cache the results of a set of dplyr database transformations&lt;/strong>. An additional advantage is that &lt;code>copy_to()&lt;/code> uses the database to run and cache the data, so there is no data being transmitted back to R. For this feature to work, the user needs sufficient rights to create temporary tables in the database.&lt;/p>
&lt;pre class="r">&lt;code>con &amp;lt;- DBI::dbConnect(RSQLite::SQLite(), &amp;quot;:memory:&amp;quot;)
mtcars_db &amp;lt;- copy_to(con, rownames_to_column(mtcars), &amp;quot;mtcars&amp;quot;)
only_auto &amp;lt;- mtcars_db %&amp;gt;%
filter(am == 1) %&amp;gt;%
select(mpg, cyl, am)
auto &amp;lt;- copy_to(con, only_auto, &amp;quot;auto&amp;quot;) # New in dbplyr 1.2.0
head(auto)
#&amp;gt; # Source: lazy query [?? x 3]
#&amp;gt; # Database: sqlite 3.19.3 [:memory:]
#&amp;gt; mpg cyl am
#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 21.0 6.00 1.00
#&amp;gt; 2 21.0 6.00 1.00
#&amp;gt; 3 22.8 4.00 1.00
#&amp;gt; 4 32.4 4.00 1.00
#&amp;gt; 5 30.4 4.00 1.00
#&amp;gt; 6 33.9 4.00 1.00&lt;/code>&lt;/pre>
&lt;p>If the set of dplyr transformations need to be cached to a &lt;strong>different database&lt;/strong>, &lt;code>copy_to()&lt;/code> is smart enough to download the data into memory in R, and then uploads the data to the target database.&lt;/p>
&lt;pre class="r">&lt;code>second_con &amp;lt;- DBI::dbConnect(RSQLite::SQLite(), &amp;quot;:memory:&amp;quot;)
second_auto &amp;lt;- copy_to(second_con, only_auto, &amp;quot;auto&amp;quot;) # New in dbplyr 1.2.0
head(second_auto)
#&amp;gt; # Source: lazy query [?? x 3]
#&amp;gt; # Database: sqlite 3.19.3 [:memory:]
#&amp;gt; mpg cyl am
#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 21.0 6.00 1.00
#&amp;gt; 2 21.0 6.00 1.00
#&amp;gt; 3 22.8 4.00 1.00
#&amp;gt; 4 32.4 4.00 1.00
#&amp;gt; 5 30.4 4.00 1.00
#&amp;gt; 6 33.9 4.00 1.00&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="stringr-functions" class="section level2">
&lt;h2>stringr functions&lt;/h2>
&lt;p>Six stringr functions are now supported. Regular expression support varies from database to database, but most simple regular expressions should be ok. The functions are:&lt;/p>
&lt;ol style="list-style-type: decimal">
&lt;li>&lt;code>str_length()&lt;/code>&lt;/li>
&lt;li>&lt;code>str_to_upper()&lt;/code>&lt;/li>
&lt;li>&lt;code>str_to_lower()&lt;/code>&lt;/li>
&lt;li>&lt;code>str_replace_all()&lt;/code>&lt;/li>
&lt;li>&lt;code>str_detect()&lt;/code>&lt;/li>
&lt;li>&lt;code>str_trim()&lt;/code>&lt;/li>
&lt;/ol>
&lt;pre class="r">&lt;code>tbl(con, &amp;quot;mtcars&amp;quot;) %&amp;gt;%
head() %&amp;gt;%
select(rowname) %&amp;gt;%
mutate(
s1 = str_length(rowname), # New in dbplyr 1.2.0
s2 = str_to_upper(rowname), # New in dbplyr 1.2.0
s3 = str_to_lower(rowname), # New in dbplyr 1.2.0
s4 = str_replace_all(rowname, &amp;quot;M&amp;quot;, &amp;quot;X&amp;quot;), # New in dbplyr 1.2.0
s5 = str_detect(rowname, &amp;quot;M&amp;quot;), # New in dbplyr 1.2.0
s6 = str_trim(rowname) # New in dbplyr 1.2.0
)
#&amp;gt; # Source: lazy query [?? x 7]
#&amp;gt; # Database: sqlite 3.19.3 [:memory:]
#&amp;gt; rowname s1 s2 s3 s4 s5 s6
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;
#&amp;gt; 1 Mazda RX4 9 MAZDA RX4 mazda r~ Xazda ~ 0 Mazda ~
#&amp;gt; 2 Mazda RX4 Wag 13 MAZDA RX4 WAG mazda r~ Xazda ~ 0 Mazda ~
#&amp;gt; 3 Datsun 710 10 DATSUN 710 datsun ~ Datsun~ 0 Datsun~
#&amp;gt; 4 Hornet 4 Drive 14 HORNET 4 DRIVE hornet ~ Hornet~ 0 Hornet~
#&amp;gt; 5 Hornet Sportabout 17 HORNET SPORTABOUT hornet ~ Hornet~ 0 Hornet~
#&amp;gt; 6 Valiant 7 VALIANT valiant Valiant 0 Valiant&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="contributors" class="section level2">
&lt;h2>Contributors&lt;/h2>
&lt;p>A big thanks goes to those who made this release possible by contributing code or documentation: &lt;a href="https://github.com/DavisVaughan">@DavisVaughan&lt;/a>, &lt;a href="https://github.com/baileych">@baileych&lt;/a>, &lt;a href="https://github.com/Hong-Revo">@Hong-Revo&lt;/a>, &lt;a href="https://github.com/cwarden">@cwarden&lt;/a>, &lt;a href="https://github.com/zozlak">@zozlak&lt;/a>, &lt;a href="https://github.com/denismaciel">@denismaciel&lt;/a>, &lt;a href="https://github.com/jonassundman">@jonassundman&lt;/a>, &lt;a href="https://github.com/wibeasley">@wibeasley&lt;/a>, &lt;a href="https://github.com/mungojam">@mungojam&lt;/a>, &lt;a href="https://github.com/hoxo-m">@hoxo-m&lt;/a>, &lt;a href="https://github.com/dpprdan">@dpprdan&lt;/a>,&lt;a href="https://github.com/jimhester">@jimhester&lt;/a>, &lt;a href="https://github.com/krlmlr">@krlmlr&lt;/a>, and &lt;a href="https://github.com/javierluraschi">@javierluraschi&lt;/a>. Also, a thank you to those who helped up improve this package by suggesting features and reporting issues: &lt;a href="https://github.com/drf5n">@drf5n&lt;/a>, &lt;a href="https://github.com/larspijnappel">@larspijnappel&lt;/a>, &lt;a href="https://github.com/lbakerIsazi">@lbakerIsazi&lt;/a>, &lt;a href="https://github.com/mtmorgan">@mtmorgan&lt;/a>, &lt;a href="https://github.com/refik">@refik&lt;/a>, &lt;a href="https://github.com/sicarul">@sicarul&lt;/a>, and &lt;a href="https://github.com/vitallish">@vitallish&lt;/a>&lt;/p>
&lt;/div></description></item></channel></rss>