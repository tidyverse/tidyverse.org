<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>testthat | Tidyverse</title><link>https://www.tidyverse.org/tags/testthat/</link><atom:link href="https://www.tidyverse.org/tags/testthat/index.xml" rel="self" type="application/rss+xml"/><description>testthat</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 08 Oct 2023 00:00:00 +0000</lastBuildDate><item><title>testthat 3.2.0</title><link>https://www.tidyverse.org/blog/2023/10/testthat-3-2-0/</link><pubDate>Sun, 08 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/10/testthat-3-2-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re chuffed to announce the release of
&lt;a href="http://testthat.r-lib.org/" target="_blank" rel="noopener">testthat&lt;/a> 3.2.0. testthat makes it easy to turn your existing informal tests into formal, automated tests that you can rerun quickly and easily. testthat is the most popular unit-testing package for R, and is used by almost 9,000 CRAN and Bioconductor packages. You can learn more about unit testing at &lt;a href="https://r-pkgs.org/tests.html">https://r-pkgs.org/tests.html&lt;/a>.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"testthat"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>testthat 3.2.0 includes relatively few new features but there have been nine patch releases since testthat 3.1.0. These patch releases contained a bunch of experiments that we now believe are ready for the world. So this blog post summarises the changes in
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v3.1.1" target="_blank" rel="noopener">3.1.1&lt;/a>,
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v3.1.2" target="_blank" rel="noopener">3.1.2&lt;/a>,
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v3.1.3" target="_blank" rel="noopener">3.1.3&lt;/a>,
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v3.1.4" target="_blank" rel="noopener">3.1.4&lt;/a>,
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v3.1.5" target="_blank" rel="noopener">3.1.5&lt;/a>,
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v3.1.6" target="_blank" rel="noopener">3.1.6&lt;/a>,
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v3.1.7" target="_blank" rel="noopener">3.1.7&lt;/a>,
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v3.1.8" target="_blank" rel="noopener">3.1.8&lt;/a>,
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v3.1.9" target="_blank" rel="noopener">3.1.9&lt;/a>, and
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v3.1.10" target="_blank" rel="noopener">3.1.10&lt;/a> over the last two years.&lt;/p>
&lt;p>Here we&amp;rsquo;ll focus on the biggest news: new expectations, tweaks to the way that error snapshots are reported, support for mocking, a new way to detect if a test has changed global state, and a bunch of smaller UI improvements.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://testthat.r-lib.org'>testthat&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="documentation">Documentation
&lt;a href="#documentation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The first and most important thing to point out is that the second edition of
&lt;a href="https://r-pkgs.org" target="_blank" rel="noopener">R Packages&lt;/a> contains updated and much expanded coverage of testing. Coverage of testing is now split up over three chapters:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://r-pkgs.org/testing-basics.html" target="_blank" rel="noopener">Testing basics&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://r-pkgs.org/testing-design.html" target="_blank" rel="noopener">Designing your test suite&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://r-pkgs.org/testing-advanced.html" target="_blank" rel="noopener">Advanced testing techniques&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>There&amp;rsquo;s also a new vignette about special files (
&lt;a href="https://testthat.r-lib.org/articles/special-files.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;special-files&amp;quot;)&lt;/code>&lt;/a>) which describes the various special files that you find in &lt;code>tests/testthat&lt;/code> and when you might need to use them.&lt;/p>
&lt;h2 id="new-expectations">New expectations
&lt;a href="#new-expectations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are a handful of notable new expectations.
&lt;a href="https://testthat.r-lib.org/reference/expect_setequal.html" target="_blank" rel="noopener">&lt;code>expect_contains()&lt;/code>&lt;/a> and
&lt;a href="https://testthat.r-lib.org/reference/expect_setequal.html" target="_blank" rel="noopener">&lt;code>expect_in()&lt;/code>&lt;/a> work similarly to &lt;code>expect_true(all(expected %in% object))&lt;/code> or &lt;code>expect_true(all(object %in% expected))&lt;/code> but give more informative failure messages:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>fruits&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"apple"&lt;/span>, &lt;span class='s'>"banana"&lt;/span>, &lt;span class='s'>"pear"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_setequal.html'>expect_contains&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>fruits&lt;/span>, &lt;span class='s'>"apple"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_setequal.html'>expect_contains&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>fruits&lt;/span>, &lt;span class='s'>"pineapple"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Error: `fruits` (`actual`) doesn't fully contain all the values in "pineapple" (`expected`).&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; * Missing from `actual`: "pineapple"&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; * Present in `actual`: "apple", "banana", "pear"&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>TRUE&lt;/span>, &lt;span class='kc'>FALSE&lt;/span>, &lt;span class='kc'>TRUE&lt;/span>, &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_setequal.html'>expect_in&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>TRUE&lt;/span>, &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>TRUE&lt;/span>, &lt;span class='kc'>FALSE&lt;/span>, &lt;span class='kc'>TRUE&lt;/span>, &lt;span class='kc'>NA&lt;/span>, &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_setequal.html'>expect_in&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>TRUE&lt;/span>, &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Error: `x` (`actual`) isn't fully contained within c(TRUE, FALSE) (`expected`).&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; * Missing from `expected`: NA&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; * Present in `expected`: TRUE, FALSE&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;a href="https://testthat.r-lib.org/reference/expect_no_error.html" target="_blank" rel="noopener">&lt;code>expect_no_error()&lt;/code>&lt;/a>,
&lt;a href="https://testthat.r-lib.org/reference/expect_no_error.html" target="_blank" rel="noopener">&lt;code>expect_no_warning()&lt;/code>&lt;/a>, and
&lt;a href="https://testthat.r-lib.org/reference/expect_no_error.html" target="_blank" rel="noopener">&lt;code>expect_no_message()&lt;/code>&lt;/a> make it easier (and clearer) to confirm that code runs without errors, warnings, or messages. The default fails if there is any error/warning/message, but you can optionally supply either the &lt;code>message&lt;/code> or &lt;code>class&lt;/code> arguments to confirm the absence of a specific error/warning/message.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>foo&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='kr'>if&lt;/span> &lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='s'>"10"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>&amp;#125;&lt;/span> &lt;span class='kr'>else&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>=&lt;/span> &lt;span class='m'>20&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_no_error.html'>expect_no_error&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>foo&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Error: Expected `foo(-10)` to run without any errors.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span> Actually got a &amp;lt;simpleError&amp;gt; with text:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; non-numeric argument to binary operator&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># No difference here but will lead to a better failure later&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'># once you've fixed this problem and later introduce a new one&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_no_error.html'>expect_no_error&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>foo&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>, message &lt;span class='o'>=&lt;/span> &lt;span class='s'>"non-numeric argument"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Error: Expected `foo(-10)` to run without any errors matching pattern 'non-numeric argument'.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span> Actually got a &amp;lt;simpleError&amp;gt; with text:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; non-numeric argument to binary operator&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="snapshotting-changes">Snapshotting changes
&lt;a href="#snapshotting-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>expect_snapshot(error = TRUE)&lt;/code> has a new display of error messages that strives to be closer to what you see interactively. In particular, you&amp;rsquo;ll no longer see the error class and you will now see the error call.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Old display:&lt;/p>
&lt;pre>&lt;code>Code
f()
Error &amp;lt;simpleError&amp;gt;
baz
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>New display:&lt;/p>
&lt;pre>&lt;code>Code
f()
Condition
Error in `f()`:
! baz
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;p>If you have used &lt;code>expect_snapshot(error = TRUE)&lt;/code> in your package, this means that you will need to re-run and approve your snapshots. We hope this is not too annoying and we believe it is worth it given the more accurate reflection of generated error messages. This will not affect checks on CRAN because, by default, snapshot tests are not run on CRAN.&lt;/p>
&lt;h2 id="mocking">Mocking
&lt;a href="#mocking">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Mocking&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> is a tool for temporarily replacing the implementation of a function in order to make testing easier. Sometimes when testing a function, one part of it is challenging to run in your test environment (maybe it requires human interaction, a live database connection, or maybe it just takes a long time to run). For example, take the following imaginary function. It has a bunch of straightforward computation that would be easy to test but right in the middle of the function it calls &lt;code>complicated()&lt;/code> which is hard to test:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>my_function&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>y&lt;/span>, &lt;span class='nv'>z&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>a&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>f&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>b&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>g&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>y&lt;/span>, &lt;span class='nv'>z&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>c&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>h&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>a&lt;/span>, &lt;span class='nv'>b&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;/span>
&lt;span> &lt;span class='nv'>d&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>complicated&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>c&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;/span>
&lt;span> &lt;span class='nf'>i&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>d&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Mocking allows you to temporarily replace &lt;code>complicated()&lt;/code> with something simpler, allowing you to test the rest of the function. testthat now supports mocking with
&lt;a href="https://testthat.r-lib.org/reference/local_mocked_bindings.html" target="_blank" rel="noopener">&lt;code>local_mocked_bindings()&lt;/code>&lt;/a>, which temporarily replaces the implementation of a function. For example, to test &lt;code>my_function()&lt;/code> you might write something like this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/test_that.html'>test_that&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"my_function() returns expected result"&lt;/span>, &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/local_mocked_bindings.html'>local_mocked_bindings&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> complicated &lt;span class='o'>=&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>...&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>testthat has a complicated past with mocking. testthat introduced
&lt;a href="https://testthat.r-lib.org/reference/with_mock.html" target="_blank" rel="noopener">&lt;code>with_mock()&lt;/code>&lt;/a> in v0.9 (way back in 2014), but we started discovering problems with the implementation in v2.0.0 (2017) leading to its deprecation in v3.0.0 (2020). A few packages arose to fill the gap (like
&lt;a href="https://github.com/r-lib/mockery" target="_blank" rel="noopener">mockery&lt;/a>,
&lt;a href="https://krlmlr.github.io/mockr/" target="_blank" rel="noopener">mockr&lt;/a>, and
&lt;a href="https://nbenn.github.io/mockthat/" target="_blank" rel="noopener">mockthat&lt;/a>) but none of their implementations were completely satisfactory. Earlier this year a new approach occurred to me that avoids many of the problems of the previous approaches. This is now implemented in
&lt;a href="https://testthat.r-lib.org/reference/local_mocked_bindings.html" target="_blank" rel="noopener">&lt;code>with_mocked_bindings()&lt;/code>&lt;/a> and
&lt;a href="https://testthat.r-lib.org/reference/local_mocked_bindings.html" target="_blank" rel="noopener">&lt;code>local_mocked_bindings()&lt;/code>&lt;/a>; we&amp;rsquo;ve been using these new functions for a few months now without problems, and it feels like time to announce to the world.&lt;/p>
&lt;h2 id="state-inspector">State inspector
&lt;a href="#state-inspector">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In times gone by it was very easy to accidentally change the state of the world in a test:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/test_that.html'>test_that&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"side-by-side diffs work"&lt;/span>, &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/options.html'>options&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>width &lt;span class='o'>=&lt;/span> &lt;span class='m'>20&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_snapshot.html'>expect_snapshot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>waldo&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://waldo.r-lib.org/reference/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"X"&lt;/span>, &lt;span class='nv'>letters&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>letters&lt;/span>, &lt;span class='s'>"X"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>When you look at a single test it&amp;rsquo;s easy to spot the problem, and switch to a more appropriate way of temporarily changing the options, like
&lt;a href="https://withr.r-lib.org/reference/with_options.html" target="_blank" rel="noopener">&lt;code>withr::local_options()&lt;/code>&lt;/a>. But sometimes this mistake crept in a long time ago and is now hiding amongst hundreds or thousands of tests.&lt;/p>
&lt;p>In earlier versions of testthat, finding tests that accidentally changed the world was painful: the only way was to painstakingly review each test. Now you can use
&lt;a href="https://testthat.r-lib.org/reference/set_state_inspector.html" target="_blank" rel="noopener">&lt;code>set_state_inspector()&lt;/code>&lt;/a> to register a function that&amp;rsquo;s called before and after every test. If the function returns different values, testthat will let you know. You&amp;rsquo;ll typically do this either in &lt;code>tests/testhat/setup.R&lt;/code> or an existing helper file.&lt;/p>
&lt;p>So, for example, to detect if any of your tests have modified options you could use this state inspector:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/set_state_inspector.html'>set_state_inspector&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>options &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/options.html'>options&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Or maybe you&amp;rsquo;ve seen an &lt;code>R CMD check&lt;/code> warning that you&amp;rsquo;ve forgotten to close a connection:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/set_state_inspector.html'>set_state_inspector&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>connections &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/nrow.html'>nrow&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/showConnections.html'>showConnections&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And you can of course combine multiple checks just by returning a more complicated list.&lt;/p>
&lt;h2 id="ui-improvements">UI improvements
&lt;a href="#ui-improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>testthat 3.2.0 includes a bunch of minor user interface improvements that should make day-to-day use of testthat more enjoyable. Some of our favourite highlights are:&lt;/p>
&lt;ul>
&lt;li>Parallel testing now works much better with snapshot tests. (And updates to the processx package means that testthat no longer leaves processes around if you terminate a test process early.)&lt;/li>
&lt;li>We use an improved algorithm to find the source reference associated with an expectation/error/warning/skip. We now look for the most recent call (within inside
&lt;a href="https://testthat.r-lib.org/reference/test_that.html" target="_blank" rel="noopener">&lt;code>test_that()&lt;/code>&lt;/a> that has known source. This generally gives more specific locations than the previous approach and gives much better locations if an error occurs in an exit handler.&lt;/li>
&lt;li>Tracebacks are no longer truncated and we use rlang&amp;rsquo;s default tree display; this should make it easier to track down problems when testing in non-interactive contexts.&lt;/li>
&lt;li>Assuming you have a recent RStudio, test failures are now clickable, taking you to the line where the problem occurred. Similarly, when a snapshot test changes, you can now click that suggested code to run the appropriate
&lt;a href="https://testthat.r-lib.org/reference/snapshot_accept.html" target="_blank" rel="noopener">&lt;code>snapshot_accept()&lt;/code>&lt;/a> call.&lt;/li>
&lt;li>Skips are now only shown at the end of reporter summaries, not as tests are run. This makes them less intrusive in interactive tests while still allowing you to verify that the correct tests are skipped.&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all 127 contributors who helped make these last 10 release of testthat happen, whether it be through contributed code or filing issues:
&lt;a href="https://github.com/ALanguillaume" target="_blank" rel="noopener">@ALanguillaume&lt;/a>,
&lt;a href="https://github.com/alessandroaccettulli" target="_blank" rel="noopener">@alessandroaccettulli&lt;/a>,
&lt;a href="https://github.com/ambica-aas" target="_blank" rel="noopener">@ambica-aas&lt;/a>,
&lt;a href="https://github.com/annweideman" target="_blank" rel="noopener">@annweideman&lt;/a>,
&lt;a href="https://github.com/aronatkins" target="_blank" rel="noopener">@aronatkins&lt;/a>,
&lt;a href="https://github.com/ashander" target="_blank" rel="noopener">@ashander&lt;/a>,
&lt;a href="https://github.com/AshesITR" target="_blank" rel="noopener">@AshesITR&lt;/a>,
&lt;a href="https://github.com/astayleraz" target="_blank" rel="noopener">@astayleraz&lt;/a>,
&lt;a href="https://github.com/ateucher" target="_blank" rel="noopener">@ateucher&lt;/a>,
&lt;a href="https://github.com/avraam-inside" target="_blank" rel="noopener">@avraam-inside&lt;/a>,
&lt;a href="https://github.com/b-steve" target="_blank" rel="noopener">@b-steve&lt;/a>,
&lt;a href="https://github.com/bersbersbers" target="_blank" rel="noopener">@bersbersbers&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/cboettig" target="_blank" rel="noopener">@cboettig&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/chendaniely" target="_blank" rel="noopener">@chendaniely&lt;/a>,
&lt;a href="https://github.com/ChrisBeeley" target="_blank" rel="noopener">@ChrisBeeley&lt;/a>,
&lt;a href="https://github.com/ColinFay" target="_blank" rel="noopener">@ColinFay&lt;/a>,
&lt;a href="https://github.com/CorradoLanera" target="_blank" rel="noopener">@CorradoLanera&lt;/a>,
&lt;a href="https://github.com/daattali" target="_blank" rel="noopener">@daattali&lt;/a>,
&lt;a href="https://github.com/damianooldoni" target="_blank" rel="noopener">@damianooldoni&lt;/a>,
&lt;a href="https://github.com/DanChaltiel" target="_blank" rel="noopener">@DanChaltiel&lt;/a>,
&lt;a href="https://github.com/danielinteractive" target="_blank" rel="noopener">@danielinteractive&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/daynefiler" target="_blank" rel="noopener">@daynefiler&lt;/a>,
&lt;a href="https://github.com/dbdimitrov" target="_blank" rel="noopener">@dbdimitrov&lt;/a>,
&lt;a href="https://github.com/dcaseykc" target="_blank" rel="noopener">@dcaseykc&lt;/a>,
&lt;a href="https://github.com/dgkf" target="_blank" rel="noopener">@dgkf&lt;/a>,
&lt;a href="https://github.com/dhicks" target="_blank" rel="noopener">@dhicks&lt;/a>,
&lt;a href="https://github.com/dimfalk" target="_blank" rel="noopener">@dimfalk&lt;/a>,
&lt;a href="https://github.com/dougwyu" target="_blank" rel="noopener">@dougwyu&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/dvg-p4" target="_blank" rel="noopener">@dvg-p4&lt;/a>,
&lt;a href="https://github.com/elong0527" target="_blank" rel="noopener">@elong0527&lt;/a>,
&lt;a href="https://github.com/Enchufa2" target="_blank" rel="noopener">@Enchufa2&lt;/a>,
&lt;a href="https://github.com/etiennebacher" target="_blank" rel="noopener">@etiennebacher&lt;/a>,
&lt;a href="https://github.com/FlippieCoetser" target="_blank" rel="noopener">@FlippieCoetser&lt;/a>,
&lt;a href="https://github.com/florisvdh" target="_blank" rel="noopener">@florisvdh&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gareth-j" target="_blank" rel="noopener">@gareth-j&lt;/a>,
&lt;a href="https://github.com/gavinsimpson" target="_blank" rel="noopener">@gavinsimpson&lt;/a>,
&lt;a href="https://github.com/ghill-fusion" target="_blank" rel="noopener">@ghill-fusion&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/heavywatal" target="_blank" rel="noopener">@heavywatal&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/hhau" target="_blank" rel="noopener">@hhau&lt;/a>,
&lt;a href="https://github.com/hpages" target="_blank" rel="noopener">@hpages&lt;/a>,
&lt;a href="https://github.com/hsloot" target="_blank" rel="noopener">@hsloot&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jameslairdsmith" target="_blank" rel="noopener">@jameslairdsmith&lt;/a>,
&lt;a href="https://github.com/jamieRowen" target="_blank" rel="noopener">@jamieRowen&lt;/a>,
&lt;a href="https://github.com/jayruffell" target="_blank" rel="noopener">@jayruffell&lt;/a>,
&lt;a href="https://github.com/JBGruber" target="_blank" rel="noopener">@JBGruber&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/JohnCoene" target="_blank" rel="noopener">@JohnCoene&lt;/a>,
&lt;a href="https://github.com/jonathanvoelkle" target="_blank" rel="noopener">@jonathanvoelkle&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/josherrickson" target="_blank" rel="noopener">@josherrickson&lt;/a>,
&lt;a href="https://github.com/kalaschnik" target="_blank" rel="noopener">@kalaschnik&lt;/a>,
&lt;a href="https://github.com/kapsner" target="_blank" rel="noopener">@kapsner&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/kjytay" target="_blank" rel="noopener">@kjytay&lt;/a>,
&lt;a href="https://github.com/krivit" target="_blank" rel="noopener">@krivit&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/larmarange" target="_blank" rel="noopener">@larmarange&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/llrs" target="_blank" rel="noopener">@llrs&lt;/a>,
&lt;a href="https://github.com/luma-sb" target="_blank" rel="noopener">@luma-sb&lt;/a>,
&lt;a href="https://github.com/machow" target="_blank" rel="noopener">@machow&lt;/a>,
&lt;a href="https://github.com/maciekbanas" target="_blank" rel="noopener">@maciekbanas&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/majr-red" target="_blank" rel="noopener">@majr-red&lt;/a>,
&lt;a href="https://github.com/maksymiuks" target="_blank" rel="noopener">@maksymiuks&lt;/a>,
&lt;a href="https://github.com/mardam" target="_blank" rel="noopener">@mardam&lt;/a>,
&lt;a href="https://github.com/MarkMc1089" target="_blank" rel="noopener">@MarkMc1089&lt;/a>,
&lt;a href="https://github.com/markschat" target="_blank" rel="noopener">@markschat&lt;/a>,
&lt;a href="https://github.com/MatthieuStigler" target="_blank" rel="noopener">@MatthieuStigler&lt;/a>,
&lt;a href="https://github.com/maurolepore" target="_blank" rel="noopener">@maurolepore&lt;/a>,
&lt;a href="https://github.com/maxheld83" target="_blank" rel="noopener">@maxheld83&lt;/a>,
&lt;a href="https://github.com/mbojan" target="_blank" rel="noopener">@mbojan&lt;/a>,
&lt;a href="https://github.com/mcol" target="_blank" rel="noopener">@mcol&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/mkb13" target="_blank" rel="noopener">@mkb13&lt;/a>,
&lt;a href="https://github.com/mkoohafkan" target="_blank" rel="noopener">@mkoohafkan&lt;/a>,
&lt;a href="https://github.com/MKyhos" target="_blank" rel="noopener">@MKyhos&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/Mosk915" target="_blank" rel="noopener">@Mosk915&lt;/a>,
&lt;a href="https://github.com/mpjashby" target="_blank" rel="noopener">@mpjashby&lt;/a>,
&lt;a href="https://github.com/ms609" target="_blank" rel="noopener">@ms609&lt;/a>,
&lt;a href="https://github.com/mtmorgan" target="_blank" rel="noopener">@mtmorgan&lt;/a>,
&lt;a href="https://github.com/musvaage" target="_blank" rel="noopener">@musvaage&lt;/a>,
&lt;a href="https://github.com/nealrichardson" target="_blank" rel="noopener">@nealrichardson&lt;/a>,
&lt;a href="https://github.com/netique" target="_blank" rel="noopener">@netique&lt;/a>,
&lt;a href="https://github.com/njtierney" target="_blank" rel="noopener">@njtierney&lt;/a>,
&lt;a href="https://github.com/olivroy" target="_blank" rel="noopener">@olivroy&lt;/a>,
&lt;a href="https://github.com/osorensen" target="_blank" rel="noopener">@osorensen&lt;/a>,
&lt;a href="https://github.com/pbulsink" target="_blank" rel="noopener">@pbulsink&lt;/a>,
&lt;a href="https://github.com/peterdesmet" target="_blank" rel="noopener">@peterdesmet&lt;/a>,
&lt;a href="https://github.com/r2evans" target="_blank" rel="noopener">@r2evans&lt;/a>,
&lt;a href="https://github.com/radbasa" target="_blank" rel="noopener">@radbasa&lt;/a>,
&lt;a href="https://github.com/remlapmot" target="_blank" rel="noopener">@remlapmot&lt;/a>,
&lt;a href="https://github.com/rfineman" target="_blank" rel="noopener">@rfineman&lt;/a>,
&lt;a href="https://github.com/rgayler" target="_blank" rel="noopener">@rgayler&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/s-fleck" target="_blank" rel="noopener">@s-fleck&lt;/a>,
&lt;a href="https://github.com/salim-b" target="_blank" rel="noopener">@salim-b&lt;/a>,
&lt;a href="https://github.com/schloerke" target="_blank" rel="noopener">@schloerke&lt;/a>,
&lt;a href="https://github.com/sorhawell" target="_blank" rel="noopener">@sorhawell&lt;/a>,
&lt;a href="https://github.com/StatisMike" target="_blank" rel="noopener">@StatisMike&lt;/a>,
&lt;a href="https://github.com/StatsMan53" target="_blank" rel="noopener">@StatsMan53&lt;/a>,
&lt;a href="https://github.com/stela2502" target="_blank" rel="noopener">@stela2502&lt;/a>,
&lt;a href="https://github.com/stla" target="_blank" rel="noopener">@stla&lt;/a>,
&lt;a href="https://github.com/t-kalinowski" target="_blank" rel="noopener">@t-kalinowski&lt;/a>,
&lt;a href="https://github.com/tansaku" target="_blank" rel="noopener">@tansaku&lt;/a>,
&lt;a href="https://github.com/tomliptrot" target="_blank" rel="noopener">@tomliptrot&lt;/a>,
&lt;a href="https://github.com/torres-pedro" target="_blank" rel="noopener">@torres-pedro&lt;/a>,
&lt;a href="https://github.com/wes-brooks" target="_blank" rel="noopener">@wes-brooks&lt;/a>,
&lt;a href="https://github.com/wfmueller29" target="_blank" rel="noopener">@wfmueller29&lt;/a>,
&lt;a href="https://github.com/wleoncio" target="_blank" rel="noopener">@wleoncio&lt;/a>,
&lt;a href="https://github.com/wurli" target="_blank" rel="noopener">@wurli&lt;/a>,
&lt;a href="https://github.com/yogat3ch" target="_blank" rel="noopener">@yogat3ch&lt;/a>,
&lt;a href="https://github.com/yuliaUU" target="_blank" rel="noopener">@yuliaUU&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>, and
&lt;a href="https://github.com/zsigmas" target="_blank" rel="noopener">@zsigmas&lt;/a>.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Think mimicking, like a mockingbird, not making fun of. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Upgrading to testthat edition 3</title><link>https://www.tidyverse.org/blog/2022/02/upkeep-testthat-3/</link><pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/02/upkeep-testthat-3/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ ] ~Add intro sentence, e.g. the standard tagline for the package~
* [ ] ~[`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)~
-->
&lt;p>As the collection of packages in the tidyverse grows, maintenance becomes increasingly important, and Hadley made this the topic of his
&lt;a href="https://www.rstudio.com/resources/rstudioglobal-2021/maintaining-the-house-the-tidyverse-built/" target="_blank" rel="noopener">keynote at rstudio::global 2021&lt;/a>.&lt;/p>
&lt;p>In this blog post, I discuss my process for a recent maintenance task, upgrading package tests to use the third edition of testthat.&lt;/p>
&lt;h2 id="testthat-3e">testthat 3e
&lt;a href="#testthat-3e">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The testthat package introduced the idea of an &amp;ldquo;edition&amp;rdquo; in version 3.0.0:&lt;/p>
&lt;blockquote>
&lt;p>An edition is a bundle of behaviours that you have to explicitly choose to use, allowing us to make otherwise backward incompatible changes.&lt;/p>
&lt;/blockquote>
&lt;p>If you haven&amp;rsquo;t heard of testthat 3e yet, the
&lt;a href="https://testthat.r-lib.org/articles/third-edition.html" target="_blank" rel="noopener">testthat article introducing the 3rd edition&lt;/a> is a great place to start. It outlines all the changes this edition brings.&lt;/p>
&lt;p>While you can continue to use testthat&amp;rsquo;s previous behaviour, it&amp;rsquo;s a good idea to upgrade so that you can make use of handy new features. As some of the changes may break your tests, you might have been putting that off, though. You would not be alone in that! Several tidymodels packages still have to make the jump, but I recently upgraded
&lt;a href="https://github.com/tidymodels/dials/" target="_blank" rel="noopener">dials&lt;/a> and
&lt;a href="https://github.com/tidymodels/censored/" target="_blank" rel="noopener">censored&lt;/a> to testthat edition 3. Here is what I did and learned along the way.&lt;/p>
&lt;h3 id="workflow-to-upgrade">Workflow to upgrade
&lt;a href="#workflow-to-upgrade">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The testthat article tells you how you can opt in to the new edition, and about major changes: deprecations, how messages and warnings are handled, and how comparisons of objects are made.&lt;/p>
&lt;p>The main guidance for a workflow is:&lt;/p>
&lt;ol>
&lt;li>Activate edition 3.&lt;/li>
&lt;li>Remove or replace deprecated functions.&lt;/li>
&lt;li>If your output got noisy, quiet things down as needed.&lt;/li>
&lt;li>Think about what it means if things are not &amp;ldquo;all equal&amp;rdquo; anymore.&lt;/li>
&lt;/ol>
&lt;h3 id="activation-">Activation 🚀
&lt;a href="#activation-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>To activate you need to do two things in the DESCRIPTION - or you can let &lt;code>usethis::use_testthat(3)&lt;/code> do it for you:&lt;/p>
&lt;ul>
&lt;li>Increase the testthat version to &lt;code>&amp;gt;= 3.0.0&lt;/code>.&lt;/li>
&lt;li>Set the &lt;code>Config/testthat/edition&lt;/code> field to &lt;code>3&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="moving-on-from-deprecations-">Moving on from deprecations ✨
&lt;a href="#moving-on-from-deprecations-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The article on testthat 3e contains a
&lt;a href="https://testthat.r-lib.org/articles/third-edition.html#deprecations" target="_blank" rel="noopener">list of deprecated functions&lt;/a> together with their successors. You can work your way through it, searching for the deprecated function and then replacing it with the most suitable alternative. The first one in that list is &lt;code>context()&lt;/code> as testthat will use the file name instead, ensuring that context and file name are in sync. As such, &lt;code>context()&lt;/code> does not have a replacement. My first
&lt;a href="https://github.com/tidymodels/censored/pull/142" target="_blank" rel="noopener">commit&lt;/a> after activating the third edition was to remove all calls to &lt;code>context()&lt;/code>, followed by replacing other deprecated functions and arguments.&lt;/p>
&lt;p>&lt;img src="commits.png" alt="A list of commits starting with &amp;ldquo;require testthat 3e, followed by removing context() and other deprecated functions&amp;rdquo;">&lt;/p>
&lt;h3 id="warnings-and-messages-">Warnings and messages 🤫
&lt;a href="#warnings-and-messages-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>testthat edition 3 handles warnings and messages differently than edition 2: &lt;code>expect_warning()&lt;/code> captures at most one warning, so if your code generates multiple warnings, they will bubble up now. Messages were previously silently ignored, now they also bubble up. That means the output may be a lot noisier after switching to edition 3. If the warnings or messages are important, you should explicitly capture them. Otherwise you can suppress them to clean up the output and make it easier to focus on what&amp;rsquo;s important. Again, the testthat article has good examples for how to do either.&lt;/p>
&lt;h3 id="comparing-things--">Comparing things 🍎 🍊
&lt;a href="#comparing-things--">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The last big change from edition 2 to edition 3 that I want to mention is what is happening under the hood of &lt;code>expect_equal()&lt;/code> and &lt;code>expect_identical()&lt;/code>. Edition 3 uses
&lt;a href="https://waldo.r-lib.org/reference/compare.html" target="_blank" rel="noopener">&lt;code>waldo::compare()&lt;/code>&lt;/a> while edition 2 uses
&lt;a href="https://rdrr.io/r/base/all.equal.html" target="_blank" rel="noopener">&lt;code>all.equal()&lt;/code>&lt;/a>. For the most part, that meant changing the argument name from &lt;code>tol&lt;/code> to &lt;code>tolerance&lt;/code>, like in my third commit above.&lt;/p>
&lt;p>I did, however, run into a situation where a test newly failed. Those are the situations where general advice is hard because it depends so much on the context. In my case, I made use of the &lt;code>ignore_function_env&lt;/code> and &lt;code>ignore_formula_env&lt;/code> arguments to
&lt;a href="https://waldo.r-lib.org/reference/compare.html" target="_blank" rel="noopener">&lt;code>waldo::compare()&lt;/code>&lt;/a> to exclude those environments from the comparison. Those are probably useful to know about if you are upgrading a modelling package, but not particularly important otherwise. For dials and censored, that solved most of the cases. In one instance, I ended up tweaking the reference value based on theoretical considerations of the model I was dealing with rather than increasing the tolerance.&lt;/p>
&lt;p>Those instances may be the most work when upgrading to edition 3, but I did not encounter many of them &amp;ndash; and, when I did, it was valuable to know about the differences (well, those which I didn&amp;rsquo;t choose to ignore).&lt;/p>
&lt;h2 id="more-testing-made-easier">More testing made easier
&lt;a href="#more-testing-made-easier">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>While I was going over all the test files, I also decided to cover a few other aspects.&lt;/p>
&lt;h3 id="nested-expectations">Nested expectations
&lt;a href="#nested-expectations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>When
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">Davis Vaughan&lt;/a> moved other tidymodels packages to testthat 3e, I saw him disentangle nested expectations. For example, patterns like&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expect_warning&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">one_call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">another_call&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>or&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">expect_warning&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">one_call&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">expect_warning&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">another_call&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>can be re-written as&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expect_snapshot&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="n">object_from_one_call&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">one_call&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">object_from_another_call&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">another_call&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object_from_one_call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">object_from_another_call&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This separates an expectation about the warnings from the expectation about the value, making it easier to see which part(s) fail. Snapshots can also be particularly helpful in situations where you are trying to test for a combination of warnings, messages, and/or errors because they cover them all.&lt;/p>
&lt;h3 id="self-contained-tests">Self-contained tests
&lt;a href="#self-contained-tests">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>I wanted to make the tests more self-contained so that a test could run with a single call to &lt;code>test_that()&lt;/code>. Specifically, I didn&amp;rsquo;t want to have to scroll back up to the top of the file to load any necessary package or find the code that creates helper objects.&lt;/p>
&lt;p>You can avoid the former by prefixing functions with the package they belong to, i.e. using
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>dplyr::mutate()&lt;/code>&lt;/a> instead of
&lt;a href="https://dplyr.tidyverse.org" target="_blank" rel="noopener">&lt;code>library(dplyr)&lt;/code>&lt;/a> at the top of the file and later &lt;code>mutate()&lt;/code> inside of the expression for &lt;code>test_that()&lt;/code>.&lt;/p>
&lt;p>If creating a helper object is short, I might move the code inside of &lt;code>test_that()&lt;/code>. If you create the same helper objects multiple times and don&amp;rsquo;t want to see the code repeatedly, you can move it into a helper function. Files inside the &lt;code>testthat&lt;/code> folder of your source code with file names starting with &lt;code>helper&lt;/code> are executed before tests are run. You could put your helper code there but it is
&lt;a href="https://testthat.r-lib.org/reference/test_file.html#special-files" target="_blank" rel="noopener">recommended&lt;/a> to put the helper code in your &lt;code>R/&lt;/code> folder, for example as
&lt;a href="https://testthat.r-lib.org/articles/custom-expectation.html" target="_blank" rel="noopener">&lt;code>test-helpers.R&lt;/code>&lt;/a>.&lt;/p>
&lt;p>An example helper function is called &lt;code>make_test_model()&lt;/code>, which returns a list with training and testing data as well as the fitted model. A test on the prediction method could then look like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;prediction returns the correct number of records&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">helper_objects&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">make_test_model&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">pred&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">helper_objects&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">model&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">helper_objects&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">nrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">nrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">helper_objects&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Any other data objects needed for testing I moved into &lt;code>tests/testthat/data/&lt;/code>.&lt;/p>
&lt;h3 id="corresponding-files-in-r-and-teststestthat">Corresponding files in &lt;code>R/&lt;/code> and &lt;code>tests/testthat/&lt;/code>
&lt;a href="#corresponding-files-in-r-and-teststestthat">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>If a file in &lt;code>R/&lt;/code> had a corresponding file in &lt;code>testthat/&lt;/code>, I made sure the names matched up, e.g., &lt;code>monstera.R&lt;/code> and &lt;code>test-monstera.R&lt;/code>.&lt;/p>
&lt;p>This gives you access to some convenient features of usethis and devtools:&lt;/p>
&lt;ul>
&lt;li>When you have the R file open, it&amp;rsquo;s easy to open the corresponding test file with
&lt;a href="https://usethis.r-lib.org/reference/use_r.html" target="_blank" rel="noopener">&lt;code>usethis::use_test()&lt;/code>&lt;/a> - and vice versa with
&lt;a href="https://usethis.r-lib.org/reference/use_r.html" target="_blank" rel="noopener">&lt;code>usethis::use_r()&lt;/code>&lt;/a>. No clicking around needed!&lt;/li>
&lt;li>When you have either file open, you can run the tests with
&lt;a href="http://devtools.r-lib.org/reference/test.html" target="_blank" rel="noopener">&lt;code>devtools:::test_active_file()&lt;/code>&lt;/a>, and see the test coverage report with &lt;code>test_coverage_active_file()&lt;/code> (which also shows you which lines are actually being tested). Both also have an RStudio addin, which means you can add
&lt;a href="https://rstudio.github.io/rstudioaddins/#keyboard-shorcuts" target="_blank" rel="noopener">keyboard shortcuts&lt;/a> for them!&lt;/li>
&lt;/ul>
&lt;p>And, with that, dials and censored were ready for more snapshot tests in the future!&lt;/p>
&lt;p>For more guidance on implementing tidy standards, check out
&lt;a href="https://usethis.r-lib.org/reference/tidyverse.html" target="_blank" rel="noopener">&lt;code>usethis::use_tidy_upkeep_issue()&lt;/code>&lt;/a>. It creates a GitHub issue with a handy checklist. You will be seeing those popping up in our repositories soon when we do some spring cleaning!&lt;/p></description></item><item><title>testthat 3.1.0</title><link>https://www.tidyverse.org/blog/2021/10/testthat-3-1/</link><pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/10/testthat-3-1/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re stoked to announce the release of
&lt;a href="http://testthat.r-lib.org/" target="_blank" rel="noopener">testthat&lt;/a> 3.1.0. testthat makes it easy to turn your existing informal tests into formal, automated tests that you can rerun quickly and easily. testthat is the most popular unit-testing package for R, and is used by over 6,000 CRAN and Bioconductor packages. You can learn more about unit testing at &lt;a href="https://r-pkgs.org/tests.html">https://r-pkgs.org/tests.html&lt;/a>.&lt;/p>
&lt;p>You can install testthat from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"testthat"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This release of testthat includes a bunch of minor improvements to snapshotting, as well as one breaking change (which only applies if you&amp;rsquo;re using the 3rd edition). You can see a full list of changes in the
&lt;a href="https://github.com/r-lib/testthat/blob/master/NEWS.md" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://testthat.r-lib.org'>testthat&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="snapshot-tests">Snapshot tests
&lt;a href="#snapshot-tests">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Most of the effort in this release has gone into
&lt;a href="https://testthat.r-lib.org/articles/snapshotting.html" target="_blank" rel="noopener">snapshot tests&lt;/a>, a new feature in testthat 3.0.0. snapshot tests (also known as
&lt;a href="https://ro-che.info/articles/2017-12-04-golden-tests" target="_blank" rel="noopener">golden tests&lt;/a>) record expected output in a separate human-readable file instead of using code to describe what the expected output looks like. Since the release of testthat 3.0.0, we&amp;rsquo;ve started using snapshot tests across a bunch of tidyverse packages and they&amp;rsquo;ve been working out really well. I don&amp;rsquo;t anticipate any major changes (although we may continue to add new features), so the snapshot functions have changed lifecycle stages from experimental to &lt;strong>stable&lt;/strong>.&lt;/p>
&lt;p>This release also includes two new features that help you use snapshot tests in more places:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://testthat.r-lib.org/reference/expect_snapshot.html" target="_blank" rel="noopener">&lt;code>expect_snapshot()&lt;/code>&lt;/a> gains a &lt;code>transform&lt;/code> argument, which should be a function that takes a character vector of lines and returns a modified character vector of lines. This makes it easy to remove sensitive (e.g. API keys) or stochastic (e.g. random temporary directory names) data from snapshot output.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>get_info&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Hadley"&lt;/span>,
password &lt;span class='o'>=&lt;/span> &lt;span class='s'>"sssh-its-a-secret"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>
&lt;span class='nv'>hide_password&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nv'>is_password&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/grep.html'>grepl&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"password"&lt;/span>, &lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/ifelse.html'>ifelse&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>is_password&lt;/span>, &lt;span class='s'>"&amp;lt;REDACTED&amp;gt;"&lt;/span>, &lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>
&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/test_that.html'>test_that&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"info retruns name and password"&lt;/span>, &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/local_edition.html'>local_edition&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_snapshot.html'>expect_snapshot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/str.html'>str&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>get_info&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, transform &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hide_password&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Can't compare snapshot to reference when testing interactively&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span> Run `devtools::test()` or `testthat::test_file()` to see changes&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span> Current value:&lt;/span>
&lt;span class='c'>#&amp;gt; Code&lt;/span>
&lt;span class='c'>#&amp;gt; str(get_info())&lt;/span>
&lt;span class='c'>#&amp;gt; Output&lt;/span>
&lt;span class='c'>#&amp;gt; List of 2&lt;/span>
&lt;span class='c'>#&amp;gt; $ name : chr "Hadley"&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;REDACTED&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='color: #0000BB; font-weight: bold;'>Skip&lt;/span>&lt;span style='font-weight: bold;'> (test-that.R:50:3): info retruns name and password&lt;/span> ─────────────────────&lt;/span>
&lt;span class='c'>#&amp;gt; Reason: empty test&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you need &lt;code>transform&lt;/code>, I recommend designing your printing methods so the output can be easily manipulated with regexps.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://testthat.r-lib.org/reference/expect_snapshot.html" target="_blank" rel="noopener">&lt;code>expect_snapshot()&lt;/code>&lt;/a> and friends get an experimental new &lt;code>variant&lt;/code> argument which causes the snapshot to be saved in &lt;code>_snaps/{variant}/{test}.md&lt;/code> instead of &lt;code>_snaps/{test}.md&lt;/code>. This allows you to generate (and compare) unique snapshots for different scenarios where the output is otherwise out of your control, like differences across operating systems or R versions.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>r_version&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/paste.html'>paste0&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"R"&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/numeric_version.html'>getRversion&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>[&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/test_that.html'>test_that&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"can capture version nickname"&lt;/span>, &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_snapshot.html'>expect_snapshot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>version&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>nickname&lt;/span>, variant &lt;span class='o'>=&lt;/span> &lt;span class='nf'>r_version&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;p>Remember that snapshot tests are not run on CRAN by default because they require a human to confirm whether or not a change is a breakage, so you shouldn&amp;rsquo;t rely only on snapshot tests to ensure that your code is correct. While it is possible to set &lt;code>cran = TRUE&lt;/code>, to force snapshot tests to run on CRAN, I don&amp;rsquo;t generally recommend it as snapshots are often vulnerable to minor changes that don&amp;rsquo;t merit breaking your released package.&lt;/p>
&lt;h2 id="breaking-changes">Breaking changes
&lt;a href="#breaking-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We made one breaking change that affects the
&lt;a href="https://testthat.r-lib.org/articles/third-edition.html" target="_blank" rel="noopener">third edition&lt;/a>. Previously,
&lt;a href="https://testthat.r-lib.org/reference/expect_error.html" target="_blank" rel="noopener">&lt;code>expect_message()&lt;/code>&lt;/a> and
&lt;a href="https://testthat.r-lib.org/reference/expect_error.html" target="_blank" rel="noopener">&lt;code>expect_warning()&lt;/code>&lt;/a> returned the value of the first argument, unless that was &lt;code>NULL&lt;/code>, when they instead returned the condition object. This meant you could write code like this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/equality-expectations.html'>expect_equal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_error.html'>expect_warning&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>f&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='s'>"warning"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='s'>"value"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now
&lt;a href="https://testthat.r-lib.org/reference/expect_error.html" target="_blank" rel="noopener">&lt;code>expect_message()&lt;/code>&lt;/a> and
&lt;a href="https://testthat.r-lib.org/reference/expect_error.html" target="_blank" rel="noopener">&lt;code>expect_warning()&lt;/code>&lt;/a> always return the condition object so you need to flip the order of the expectations:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_error.html'>expect_warning&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/equality-expectations.html'>expect_equal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>f&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='s'>"value"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='s'>"warning"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This (IMO) is a little easier to read with the pipe:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># Or use the pipe:&lt;/span>
&lt;span class='nf'>f&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/equality-expectations.html'>expect_equal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"value"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_error.html'>expect_warning&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"warning"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Or with an intermediate object:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_error.html'>expect_warning&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>value&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>f&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='s'>"warning"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/equality-expectations.html'>expect_equal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>value&lt;/span>, &lt;span class='s'>"value"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>As with any breaking change, we made this change with great care. Fortunately it only affects the 3rd edition, which relatively few packages use, and we submitted PRs to all affected packages on CRAN.&lt;/p>
&lt;p>We made this change because it makes
&lt;a href="https://testthat.r-lib.org/reference/expect_error.html" target="_blank" rel="noopener">&lt;code>expect_message()&lt;/code>&lt;/a> and
&lt;a href="https://testthat.r-lib.org/reference/expect_error.html" target="_blank" rel="noopener">&lt;code>expect_warning()&lt;/code>&lt;/a> more consistent with
&lt;a href="https://testthat.r-lib.org/reference/expect_error.html" target="_blank" rel="noopener">&lt;code>expect_error()&lt;/code>&lt;/a>, while make it easier to inspect both the value and the message/warning. This is important because it makes it easier to test functions that produce
&lt;a href="https://adv-r.hadley.nz/conditions.html#custom-conditions" target="_blank" rel="noopener">custom condition objects&lt;/a> that themselves contain meaningful data:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://rlang.r-lib.org'>rlang&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>informative_error&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nf'>&lt;a href='https://rlang.r-lib.org/reference/abort.html'>abort&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='s'>"An error with extra info"&lt;/span>,
name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"patrice"&lt;/span>,
number &lt;span class='o'>=&lt;/span> &lt;span class='m'>17&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>
&lt;span class='nv'>err&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/expect_error.html'>expect_error&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>my_function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, class &lt;span class='o'>=&lt;/span> &lt;span class='s'>"package_error_class"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/equality-expectations.html'>expect_equal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>err&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>name&lt;/span>, &lt;span class='s'>"patrice"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/equality-expectations.html'>expect_equal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>err&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>number&lt;/span>, &lt;span class='m'>17&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Richer conditions are a tool that we use within the tidyverse to provide more context in errors, warnings, and messages. You&amp;rsquo;re unlikely to see them directly, but we&amp;rsquo;re using them as part of our general effort to make more actionable error messages.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all 104 contributors who filed issues and contributed code to this and the last few patch releases:
&lt;a href="https://github.com/Aariq" target="_blank" rel="noopener">@Aariq&lt;/a>,
&lt;a href="https://github.com/Aehmlo" target="_blank" rel="noopener">@Aehmlo&lt;/a>,
&lt;a href="https://github.com/aguynamedryan" target="_blank" rel="noopener">@aguynamedryan&lt;/a>,
&lt;a href="https://github.com/ahjota" target="_blank" rel="noopener">@ahjota&lt;/a>,
&lt;a href="https://github.com/akersting" target="_blank" rel="noopener">@akersting&lt;/a>,
&lt;a href="https://github.com/Akirathan" target="_blank" rel="noopener">@Akirathan&lt;/a>,
&lt;a href="https://github.com/arnaud-feldmann" target="_blank" rel="noopener">@arnaud-feldmann&lt;/a>,
&lt;a href="https://github.com/aronatkins" target="_blank" rel="noopener">@aronatkins&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/boennecd" target="_blank" rel="noopener">@boennecd&lt;/a>,
&lt;a href="https://github.com/BS1125" target="_blank" rel="noopener">@BS1125&lt;/a>,
&lt;a href="https://github.com/byoung" target="_blank" rel="noopener">@byoung&lt;/a>,
&lt;a href="https://github.com/cboettig" target="_blank" rel="noopener">@cboettig&lt;/a>,
&lt;a href="https://github.com/clauswilke" target="_blank" rel="noopener">@clauswilke&lt;/a>,
&lt;a href="https://github.com/ColinFay" target="_blank" rel="noopener">@ColinFay&lt;/a>,
&lt;a href="https://github.com/CorradoLanera" target="_blank" rel="noopener">@CorradoLanera&lt;/a>,
&lt;a href="https://github.com/dagola" target="_blank" rel="noopener">@dagola&lt;/a>,
&lt;a href="https://github.com/DanChaltiel" target="_blank" rel="noopener">@DanChaltiel&lt;/a>,
&lt;a href="https://github.com/david-barnett" target="_blank" rel="noopener">@david-barnett&lt;/a>,
&lt;a href="https://github.com/david-cortes" target="_blank" rel="noopener">@david-cortes&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dmenne" target="_blank" rel="noopener">@dmenne&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/egonulates" target="_blank" rel="noopener">@egonulates&lt;/a>,
&lt;a href="https://github.com/espinielli" target="_blank" rel="noopener">@espinielli&lt;/a>,
&lt;a href="https://github.com/eveyp" target="_blank" rel="noopener">@eveyp&lt;/a>,
&lt;a href="https://github.com/FBartos" target="_blank" rel="noopener">@FBartos&lt;/a>,
&lt;a href="https://github.com/federicomarini" target="_blank" rel="noopener">@federicomarini&lt;/a>,
&lt;a href="https://github.com/flying-sheep" target="_blank" rel="noopener">@flying-sheep&lt;/a>,
&lt;a href="https://github.com/franzbischoff" target="_blank" rel="noopener">@franzbischoff&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hamstr147" target="_blank" rel="noopener">@hamstr147&lt;/a>,
&lt;a href="https://github.com/harell" target="_blank" rel="noopener">@harell&lt;/a>,
&lt;a href="https://github.com/harsh9898" target="_blank" rel="noopener">@harsh9898&lt;/a>,
&lt;a href="https://github.com/helix123" target="_blank" rel="noopener">@helix123&lt;/a>,
&lt;a href="https://github.com/hongooi73" target="_blank" rel="noopener">@hongooi73&lt;/a>,
&lt;a href="https://github.com/hsloot" target="_blank" rel="noopener">@hsloot&lt;/a>,
&lt;a href="https://github.com/jeffreyhanson" target="_blank" rel="noopener">@jeffreyhanson&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a>,
&lt;a href="https://github.com/jesterxd" target="_blank" rel="noopener">@jesterxd&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lcougnaud" target="_blank" rel="noopener">@lcougnaud&lt;/a>,
&lt;a href="https://github.com/linusheinz" target="_blank" rel="noopener">@linusheinz&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/llrs" target="_blank" rel="noopener">@llrs&lt;/a>,
&lt;a href="https://github.com/lutzgruber-quantco" target="_blank" rel="noopener">@lutzgruber-quantco&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/maia-sh" target="_blank" rel="noopener">@maia-sh&lt;/a>,
&lt;a href="https://github.com/malcolmbarrett" target="_blank" rel="noopener">@malcolmbarrett&lt;/a>,
&lt;a href="https://github.com/MarkEdmondson1234" target="_blank" rel="noopener">@MarkEdmondson1234&lt;/a>,
&lt;a href="https://github.com/marko-stojovic" target="_blank" rel="noopener">@marko-stojovic&lt;/a>,
&lt;a href="https://github.com/mattfidler" target="_blank" rel="noopener">@mattfidler&lt;/a>,
&lt;a href="https://github.com/maxachis" target="_blank" rel="noopener">@maxachis&lt;/a>,
&lt;a href="https://github.com/maxheld83" target="_blank" rel="noopener">@maxheld83&lt;/a>,
&lt;a href="https://github.com/mbojan" target="_blank" rel="noopener">@mbojan&lt;/a>,
&lt;a href="https://github.com/mcol" target="_blank" rel="noopener">@mcol&lt;/a>,
&lt;a href="https://github.com/MechantRouquin" target="_blank" rel="noopener">@MechantRouquin&lt;/a>,
&lt;a href="https://github.com/mem48" target="_blank" rel="noopener">@mem48&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/michaelquinn32" target="_blank" rel="noopener">@michaelquinn32&lt;/a>,
&lt;a href="https://github.com/mihaiconstantin" target="_blank" rel="noopener">@mihaiconstantin&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/MilesMcBain" target="_blank" rel="noopener">@MilesMcBain&lt;/a>,
&lt;a href="https://github.com/mjskay" target="_blank" rel="noopener">@mjskay&lt;/a>,
&lt;a href="https://github.com/mllg" target="_blank" rel="noopener">@mllg&lt;/a>,
&lt;a href="https://github.com/Mosk915" target="_blank" rel="noopener">@Mosk915&lt;/a>,
&lt;a href="https://github.com/ms609" target="_blank" rel="noopener">@ms609&lt;/a>,
&lt;a href="https://github.com/multimeric" target="_blank" rel="noopener">@multimeric&lt;/a>,
&lt;a href="https://github.com/nbenn" target="_blank" rel="noopener">@nbenn&lt;/a>,
&lt;a href="https://github.com/neonira" target="_blank" rel="noopener">@neonira&lt;/a>,
&lt;a href="https://github.com/nicholasproietti" target="_blank" rel="noopener">@nicholasproietti&lt;/a>,
&lt;a href="https://github.com/njtierney" target="_blank" rel="noopener">@njtierney&lt;/a>,
&lt;a href="https://github.com/nkehrein" target="_blank" rel="noopener">@nkehrein&lt;/a>,
&lt;a href="https://github.com/pat-s" target="_blank" rel="noopener">@pat-s&lt;/a>,
&lt;a href="https://github.com/pbarber" target="_blank" rel="noopener">@pbarber&lt;/a>,
&lt;a href="https://github.com/pkrog" target="_blank" rel="noopener">@pkrog&lt;/a>,
&lt;a href="https://github.com/przmv" target="_blank" rel="noopener">@przmv&lt;/a>,
&lt;a href="https://github.com/r2evans" target="_blank" rel="noopener">@r2evans&lt;/a>,
&lt;a href="https://github.com/raphael-lorenzdelaigue" target="_blank" rel="noopener">@raphael-lorenzdelaigue&lt;/a>,
&lt;a href="https://github.com/rfaelens" target="_blank" rel="noopener">@rfaelens&lt;/a>,
&lt;a href="https://github.com/rjnb50" target="_blank" rel="noopener">@rjnb50&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/rwhetten" target="_blank" rel="noopener">@rwhetten&lt;/a>,
&lt;a href="https://github.com/salim-b" target="_blank" rel="noopener">@salim-b&lt;/a>,
&lt;a href="https://github.com/schloerke" target="_blank" rel="noopener">@schloerke&lt;/a>,
&lt;a href="https://github.com/sigmafelix" target="_blank" rel="noopener">@sigmafelix&lt;/a>,
&lt;a href="https://github.com/srfall" target="_blank" rel="noopener">@srfall&lt;/a>,
&lt;a href="https://github.com/strengejacke" target="_blank" rel="noopener">@strengejacke&lt;/a>,
&lt;a href="https://github.com/SubieG" target="_blank" rel="noopener">@SubieG&lt;/a>,
&lt;a href="https://github.com/thebioengineer" target="_blank" rel="noopener">@thebioengineer&lt;/a>,
&lt;a href="https://github.com/thisisnic" target="_blank" rel="noopener">@thisisnic&lt;/a>,
&lt;a href="https://github.com/tiQu" target="_blank" rel="noopener">@tiQu&lt;/a>,
&lt;a href="https://github.com/torbjorn" target="_blank" rel="noopener">@torbjorn&lt;/a>,
&lt;a href="https://github.com/ttimbers" target="_blank" rel="noopener">@ttimbers&lt;/a>,
&lt;a href="https://github.com/tzakharko" target="_blank" rel="noopener">@tzakharko&lt;/a>,
&lt;a href="https://github.com/vspinu" target="_blank" rel="noopener">@vspinu&lt;/a>,
&lt;a href="https://github.com/wch" target="_blank" rel="noopener">@wch&lt;/a>,
&lt;a href="https://github.com/weiyaw" target="_blank" rel="noopener">@weiyaw&lt;/a>, and
&lt;a href="https://github.com/yasushm" target="_blank" rel="noopener">@yasushm&lt;/a>.&lt;/p></description></item><item><title>waldo 0.3.0</title><link>https://www.tidyverse.org/blog/2021/08/waldo-0-3-0/</link><pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/08/waldo-0-3-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re delighted to announce the release of
&lt;a href="https://waldo.r-lib.org" target="_blank" rel="noopener">waldo&lt;/a> 0.3.0. waldo is designed to find and concisely describe the difference between a pair of R objects. It was designed primarily to improve failure messages for
&lt;a href="https://testthat.r-lib.org/reference/equality-expectations.html" target="_blank" rel="noopener">&lt;code>testthat::expect_equal()&lt;/code>&lt;/a>, but it turns out to be useful in a number of other situations.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"waldo"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post highlights the two biggest changes in this release: a new display format for data frame differences, and new tools for package developers to control the details of comparison. You can see a full list of changes in the
&lt;a href="https://github.com/r-lib/waldo/blob/master/NEWS.md" target="_blank" rel="noopener">release notes&lt;/a>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://waldo.r-lib.org'>waldo&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="data-frame-differences">Data frame differences
&lt;a href="#data-frame-differences">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>waldo 0.2.0 treated data frames in the same way as lists, which worked fine if a column changed, but wasn&amp;rsquo;t terribly informative if a row changed. In 0.3.0, data frames get a new row-oriented comparison:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>df1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>4&lt;/span>, &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>, &lt;span class='s'>"c"&lt;/span>, &lt;span class='s'>"d"&lt;/span>, &lt;span class='s'>"e"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>df2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>4&lt;/span>, &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>, &lt;span class='s'>"c"&lt;/span>, &lt;span class='s'>"X"&lt;/span>, &lt;span class='s'>"d"&lt;/span>, &lt;span class='s'>"e"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://waldo.r-lib.org/reference/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df1&lt;/span>, &lt;span class='nv'>df2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `attr(old, 'row.names')[3:5]`: &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>5&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; `attr(new, 'row.names')[3:6]`: &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #0000BB;'>6&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; old vs new&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'> x y&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> old[1, ] 1 a&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> old[2, ] 2 b&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> old[3, ] 3 c&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>+ new[4, ] 10 X&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> old[4, ] 4 d&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> old[5, ] 5 e&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; `old$x`: &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new$x`: &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #0000BB;'>10&lt;/span> &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; `old$y`: &lt;span style='color: #555555;'>"a"&lt;/span> &lt;span style='color: #555555;'>"b"&lt;/span> &lt;span style='color: #555555;'>"c"&lt;/span> &lt;span style='color: #555555;'>"d"&lt;/span> &lt;span style='color: #555555;'>"e"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new$y`: &lt;span style='color: #555555;'>"a"&lt;/span> &lt;span style='color: #555555;'>"b"&lt;/span> &lt;span style='color: #555555;'>"c"&lt;/span> &lt;span style='color: #0000BB;'>"X"&lt;/span> &lt;span style='color: #555555;'>"d"&lt;/span> &lt;span style='color: #555555;'>"e"&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You&amp;rsquo;ll notice that you still get the column comparison as well. This is important because the row-oriented comparison relies on the printed representation of the data frames, and there are cases where data frames look the same but are actually different. The most important case is probably strings vs factors: example:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>, &lt;span class='s'>"c"&lt;/span>&lt;span class='o'>)&lt;/span>, stringsAsFactors &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; x&lt;/span>
&lt;span class='c'>#&amp;gt; 1 a&lt;/span>
&lt;span class='c'>#&amp;gt; 2 b&lt;/span>
&lt;span class='c'>#&amp;gt; 3 c&lt;/span>
&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>, &lt;span class='s'>"c"&lt;/span>&lt;span class='o'>)&lt;/span>, stringsAsFactors &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; x&lt;/span>
&lt;span class='c'>#&amp;gt; 1 a&lt;/span>
&lt;span class='c'>#&amp;gt; 2 b&lt;/span>
&lt;span class='c'>#&amp;gt; 3 c&lt;/span>
&lt;span class='nf'>&lt;a href='https://waldo.r-lib.org/reference/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df1&lt;/span>, &lt;span class='nv'>df2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `old$x` is &lt;span style='color: #00BB00;'>an S3 object of class &amp;lt;factor&amp;gt;, an integer vector&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new$x` is &lt;span style='color: #00BB00;'>a character vector&lt;/span> ('a', 'b', 'c')&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="control-of-comparison">Control of comparison
&lt;a href="#control-of-comparison">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When developing new data structures, you often need to be able to control the details of waldo&amp;rsquo;s comparisons. For example, take the xml2 package, which uses the
&lt;a href="http://xmlsoft.org" target="_blank" rel="noopener">libxml&lt;/a> C library to parse and process XML. When you print XML that&amp;rsquo;s been parsed with xml2 it looks like a string:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://xml2.r-lib.org/'>xml2&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>x1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>xml2&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://xml2.r-lib.org/reference/read_xml.html'>read_xml&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"&amp;lt;a&amp;gt;1&amp;lt;/a&amp;gt;"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>x1&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;#123;xml_document&amp;#125;&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;a&amp;gt;&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>But behind the scenes, it&amp;rsquo;s actually two pointers to C data structures:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/str.html'>str&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; List of 2&lt;/span>
&lt;span class='c'>#&amp;gt; $ node:&amp;lt;externalptr&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; $ doc :&amp;lt;externalptr&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; - attr(*, "class")= chr [1:2] "xml_document" "xml_node"&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This means that a naïve comparison isn&amp;rsquo;t very useful:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>x2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>xml2&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://xml2.r-lib.org/reference/read_xml.html'>read_xml&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"&amp;lt;a&amp;gt;2&amp;lt;/a&amp;gt;"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://waldo.r-lib.org/reference/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/class.html'>unclass&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/class.html'>unclass&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `old$node` is &amp;lt;pointer: 0x7fbc824876b0&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; `new$node` is &amp;lt;pointer: 0x7fbc52557dd0&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; `old$doc` is &amp;lt;pointer: 0x7fbc82487600&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; `new$doc` is &amp;lt;pointer: 0x7fbc52544cc0&amp;gt;&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To resolve this problem, waldo provides the
&lt;a href="https://waldo.r-lib.org/reference/compare_proxy.html" target="_blank" rel="noopener">&lt;code>compare_proxy()&lt;/code>&lt;/a> generic. This is called on every S3 object prior to comparison so you can transform your objects into equivalent data structures that waldo can more easily compare. For example, waldo includes a built-in &lt;code>compare_proxy.xml_node()&lt;/code> method that converts the C data structures back to strings:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://waldo.r-lib.org/reference/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>, &lt;span class='nv'>x2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; lines(as.character(old)) vs lines(as.character(new))&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> "&amp;lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&amp;gt;"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>- "&amp;lt;a&amp;gt;1&amp;lt;/a&amp;gt;"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>+ "&amp;lt;a&amp;gt;2&amp;lt;/a&amp;gt;"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> ""&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>(You could imagine converting the XML structure to a tree data structure in R to get even more informative comparisons, but I didn&amp;rsquo;t take the time to do so.)&lt;/p>
&lt;p>
&lt;a href="https://waldo.r-lib.org/reference/compare_proxy.html" target="_blank" rel="noopener">&lt;code>compare_proxy()&lt;/code>&lt;/a> has existed for some time, but waldo 0.3.0 generalised it so, as well as returning the modifying object, it also returns a modified &amp;ldquo;path&amp;rdquo; that describes how the object has been transformed:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>waldo&lt;/span>&lt;span class='nf'>:::&lt;/span>&lt;span class='nv'>compare_proxy.xml_node&lt;/span>
&lt;span class='c'>#&amp;gt; function (x, path) &lt;/span>
&lt;span class='c'>#&amp;gt; &amp;#123;&lt;/span>
&lt;span class='c'>#&amp;gt; list(object = as.character(x), path = paste0("as.character(", &lt;/span>
&lt;span class='c'>#&amp;gt; path, ")"))&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;#125;&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;bytecode: 0x7fbc633408d8&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;environment: namespace:waldo&amp;gt;&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This means that when comparison fails, you get a clear path to the root cause.&lt;/p>
&lt;p>Creating a new S3 method is reasonably heavy (and requires a little gymnastics in your package to correctly register without taking a hard dependency on waldo), so thanks to
&lt;a href="http://github.com/dmurdoch" target="_blank" rel="noopener">Duncan Murdoch&lt;/a> waldo 0.3.0 gains a new way of controlling comparisons: the &lt;code>waldo_opts&lt;/code> attribute. This attribute is a list with the same names as the arguments to
&lt;a href="https://waldo.r-lib.org/reference/compare.html" target="_blank" rel="noopener">&lt;code>compare()&lt;/code>&lt;/a>, where the values are used override the default values of
&lt;a href="https://waldo.r-lib.org/reference/compare.html" target="_blank" rel="noopener">&lt;code>compare()&lt;/code>&lt;/a>. This is a powerful tool because you can inject these attributes at any level of the object hierarchy, no matter how deep.&lt;/p>
&lt;p>For example, take these two lists which contain the same data but in different order:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>x1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>a &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, b &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>x2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>b &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>, a &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Usually waldo will report these to be different:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://waldo.r-lib.org/reference/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>, &lt;span class='nv'>x2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `names(old)`: &lt;span style='color: #00BB00;'>"a"&lt;/span> &lt;span style='color: #00BB00;'>"b"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `names(new)`: &lt;span style='color: #00BB00;'>"b"&lt;/span> &lt;span style='color: #00BB00;'>"a"&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With the new &lt;code>list_as_map&lt;/code> arugment (also thanks to an idea from Duncan Murdoch), you can request that the list be compared purely as mappings between names and values:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://waldo.r-lib.org/reference/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>, &lt;span class='nv'>x2&lt;/span>, list_as_map &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> No differences&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This is great if you want this comparison to happen at the top level of the object, but what if the difference is buried deep within a list of lists, and you only want &lt;code>list_as_map&lt;/code> to affect one small part of the object? Well, now you can add the &lt;code>waldo_opts&lt;/code> attribute:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/attr.html'>attr&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>, &lt;span class='s'>"waldo_opts"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>list_as_map &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://waldo.r-lib.org/reference/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> No differences&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to all 14 folks who contributed to this release by filing issues, discussion ideas, and creating pull requests:
&lt;a href="https://github.com/adamhsparks" target="_blank" rel="noopener">@adamhsparks&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/bhogan-mitre" target="_blank" rel="noopener">@bhogan-mitre&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/brodieG" target="_blank" rel="noopener">@brodieG&lt;/a>,
&lt;a href="https://github.com/dmurdoch" target="_blank" rel="noopener">@dmurdoch&lt;/a>,
&lt;a href="https://github.com/ericnewkirk" target="_blank" rel="noopener">@ericnewkirk&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/michaelquinn32" target="_blank" rel="noopener">@michaelquinn32&lt;/a>,
&lt;a href="https://github.com/mpettis" target="_blank" rel="noopener">@mpettis&lt;/a>,
&lt;a href="https://github.com/paleolimbot" target="_blank" rel="noopener">@paleolimbot&lt;/a>, and
&lt;a href="https://github.com/tmwdr" target="_blank" rel="noopener">@tmwdr&lt;/a>.&lt;/p></description></item><item><title>vdiffr 1.0.0</title><link>https://www.tidyverse.org/blog/2021/06/vdiffr-1-0-0/</link><pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/06/vdiffr-1-0-0/</guid><description>&lt;p>We&amp;rsquo;re delighted to announce the release of
&lt;a href="https://vdiffr.r-lib.org/" target="_blank" rel="noopener">vdiffr&lt;/a> 1.0.0. vdiffr is a testthat extension that makes it easy to automatically check code that generates R graphics. In particular, vdiffr is used by the ggplot2 team to ensure that changes and contributions do not affect the expected output of plots.&lt;/p>
&lt;p>You can install vdiffr from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"vdiffr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post briefly introduces the vdiffr workflow and describes the changes in this 1.0 version. In the last section you will learn how to migrate your existing vdiffr snapshots to the new version. You can see a full list of changes in the
&lt;a href="https://vdiffr.r-lib.org/news/index.html#vdiffr-1-0-0-2021-06-08" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;p>Attach these three packages to follow the examples:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://testthat.r-lib.org'>testthat&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://vdiffr.r-lib.org/'>vdiffr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://ggplot2.tidyverse.org'>ggplot2&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="regression-testing-for-r-graphics">Regression testing for R graphics
&lt;a href="#regression-testing-for-r-graphics">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>vdiffr is a
&lt;a href="https://testthat.r-lib.org/" target="_blank" rel="noopener">testthat&lt;/a> extension for monitoring the appearance of R plots and graphics over time. Its goals are to make it easy to test graphics, make it easy to review changes, and to be reproducible across platforms.&lt;/p>
&lt;p>The only vdiffr function you will need to use is
&lt;a href="https://vdiffr.r-lib.org/reference/expect_doppelganger.html" target="_blank" rel="noopener">&lt;code>expect_doppelganger()&lt;/code>&lt;/a>. It takes a plot title and a plot object.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/test_that.html'>test_that&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ggplot2 histogram works"&lt;/span>, &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nv'>p&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_histogram.html'>geom_histogram&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>disp&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://vdiffr.r-lib.org/reference/expect_doppelganger.html'>expect_doppelganger&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"default histogram"&lt;/span>, &lt;span class='nv'>p&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With base graphics a slightly different syntax is needed because base plots are created by side effects rather than by constructing a plot object as in ggplot2. In this case you can supply a function that generates the plot:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://testthat.r-lib.org/reference/test_that.html'>test_that&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"base histogram works"&lt;/span>, &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nv'>p&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/hist.html'>hist&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>disp&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://vdiffr.r-lib.org/reference/expect_doppelganger.html'>expect_doppelganger&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"base histogram"&lt;/span>, &lt;span class='nv'>p&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Then run
&lt;a href="https://devtools.r-lib.org//reference/test.html" target="_blank" rel="noopener">&lt;code>devtools::test()&lt;/code>&lt;/a> as usual. The first time it is run,
&lt;a href="https://vdiffr.r-lib.org/reference/expect_doppelganger.html" target="_blank" rel="noopener">&lt;code>expect_doppelganger()&lt;/code>&lt;/a> generates a reproducible SVG file that represents the expected appearance of your plot and saves it inside your test folder. After that, the generated SVG is compared to the saved version and any mismatch is reported as a failure in the testthat output.&lt;/p>
&lt;p>Note that, by default, mismatches do not cause failures on CRAN machines. That&amp;rsquo;s because testing the appearance of a plot is inherently fragile. Small upstream changes (e.g. in the R graphics device or in the ggplot2 package) might cause subtle differences in the appearance of a plot that are not real failures. If every such change caused a CRAN failure this would be distracting for both you and the CRAN maintainers. This is why vdiffr expectations only report failures when they are ran locally or in your CI platform. This allows you to monitor the appearance of your plots over time without causing distracting and time-consuming failures on CRAN.&lt;/p>
&lt;h2 id="new-snapshot-management-system-via-testthat-3">New snapshot management system via testthat 3
&lt;a href="#new-snapshot-management-system-via-testthat-3">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The main user visible change in vdiffr 1.0.0 is the replacement of the case management system and the accompanying Shiny app by the
&lt;a href="https://testthat.r-lib.org/articles/snapshotting.html" target="_blank" rel="noopener">snapshot system introduced in testthat 3&lt;/a>. Following this change, a lot of vdiffr code has been removed and the package is now a simple generator of reproducible SVGs.&lt;/p>
&lt;p>Snapshot management in testthat 3 is much more straightforward than the mechanism in previous versions of vdiffr.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>New cases are automatically recorded in the snapshot folder. They no longer need to be validated via the Shiny app.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Orphaned cases are automatically deleted from the snapshot folder.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Failures are reviewed with
&lt;a href="https://testthat.r-lib.org/reference/snapshot_accept.html" target="_blank" rel="noopener">&lt;code>testthat::snapshot_review()&lt;/code>&lt;/a>, a minimalist Shiny app powered by the
&lt;a href="https://github.com/r-lib/diffviewer/" target="_blank" rel="noopener">diffviewer&lt;/a> package.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>This workflow integrates nicely with other kinds of testthat snapshots such as error, warning, or output snapshots.&lt;/p>
&lt;h2 id="a-simpler-svg-engine">A simpler SVG engine
&lt;a href="#a-simpler-svg-engine">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To generate reproducible snapshots, vdiffr embeds an SVG generation engine based on svglite. This engine has been updated and simplified.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The main user-visible change from this update is that points now look smaller in the new SVGs. In the old snapshots they were too large.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The computation of character sizes is now hardcoded which allowed us to simplify the dependencies of vdiffr. It should also be less maintenance work for us in the long term.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="migrating-existing-vdiffr-snapshots">Migrating existing vdiffr snapshots
&lt;a href="#migrating-existing-vdiffr-snapshots">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Because of the switch to testthat 3 snapshots and the update to the SVG engine, you will need to regenerate all of your figures if you are an existing vdiffr user. Thankfully the process is straightforward and only includes two steps.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>This step is optional. Since the update to the SVG engine alters the appearance of your plots, you might want to review the changes. To do so, install the github-only 0.4.0 version of vdiffr with
&lt;a href="https://remotes.r-lib.org/reference/install_github.html" target="_blank" rel="noopener">&lt;code>remotes::install_github(&amp;quot;r-lib/vdiffr@v0.4.0&amp;quot;)&lt;/code>&lt;/a>. This release only contains the new SVG engine. You can then review the snapshot changes as usual with &lt;code>vdiffr::manage_cases()&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install vdiffr 1.0.0 from CRAN. Delete the &lt;code>tests/figs&lt;/code> directory where the old snapshots were saved (they will now be saved in &lt;code>tests/testthat/_snaps&lt;/code>) and run
&lt;a href="https://devtools.r-lib.org//reference/test.html" target="_blank" rel="noopener">&lt;code>devtools::test()&lt;/code>&lt;/a> to generate the new snapshots.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Please let us know of any trouble during migration, we&amp;rsquo;re here to help!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>vdiffr 1.0.0 wouldn&amp;rsquo;t be possible without my colleague Thomas Lin Pedersen. His experience with R graphics device (
&lt;a href="https://github.com/r-lib/ragg" target="_blank" rel="noopener">raggs&lt;/a>,
&lt;a href="https://github.com/r-lib/textshaping" target="_blank" rel="noopener">textshaping&lt;/a>, &amp;hellip;) was crucial to the update and simplification of the SVG engine. Thanks Thomas!&lt;/p>
&lt;p>We also would like to thank all the issues and code contributors for this release:
&lt;a href="https://github.com/aghaynes" target="_blank" rel="noopener">@aghaynes&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/JauntyJJS" target="_blank" rel="noopener">@JauntyJJS&lt;/a>,
&lt;a href="https://github.com/jgabry" target="_blank" rel="noopener">@jgabry&lt;/a>,
&lt;a href="https://github.com/krassowski" target="_blank" rel="noopener">@krassowski&lt;/a>,
&lt;a href="https://github.com/mtalluto" target="_blank" rel="noopener">@mtalluto&lt;/a>,
&lt;a href="https://github.com/pat-s" target="_blank" rel="noopener">@pat-s&lt;/a>,
&lt;a href="https://github.com/rfaelens" target="_blank" rel="noopener">@rfaelens&lt;/a>, and
&lt;a href="https://github.com/Sumidu" target="_blank" rel="noopener">@Sumidu&lt;/a>.&lt;/p></description></item><item><title>testthat 3.0.0</title><link>https://www.tidyverse.org/blog/2020/10/testthat-3-0-0/</link><pubDate>Sat, 31 Oct 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/10/testthat-3-0-0/</guid><description>&lt;p>We&amp;rsquo;re tickled pink to announce the release of
&lt;a href="http://testthat.r-lib.org/" target="_blank" rel="noopener">testthat&lt;/a> 3.0.0. testthat makes it easy to turn your existing informal tests into formal, automated tests that you can rerun quickly and easily. testthat is the most popular unit-testing package for R, and is used by over 5,000 CRAN and Bioconductor packages. You can learn more about unit testing at &lt;a href="https://r-pkgs.org/tests.html">https://r-pkgs.org/tests.html&lt;/a>.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"testthat"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In this blog post, I want to discuss the two biggest changes: the introduction of the &amp;ldquo;edition&amp;rdquo;, which allows us to make breaking changes that you have to specifically opt-in to, and a new family of &amp;ldquo;snapshot&amp;rdquo; tests. I&amp;rsquo;ll also give a quick round up of the other major changes, but you might want to look at the
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v3.0.0" target="_blank" rel="noopener">release notes&lt;/a> for the full details.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://testthat.r-lib.org'>testthat&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="3rd-edition">3rd edition
&lt;a href="#3rd-edition">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>testthat 3.0.0 introduces the idea of an &lt;strong>edition&lt;/strong>. An edition is a bundle of behaviours that you have to explicitly choose to use, allowing us to make backward incompatible changes. This is particularly important for testthat since it&amp;rsquo;s used by a very large number of packages, and the old edition includes a few design infelicities that we wanted want to fix. Choosing to use the 3rd edition allows you to use our latest recommendations for ongoing and new work, while historical packages continue to use the old behaviour. To use it, and this line to your &lt;code>DESCRIPTION&lt;/code>:&lt;/p>
&lt;pre>&lt;code>Config/testthat/edition: 3
&lt;/code>&lt;/pre>
&lt;p>The second edition will never go away, but new features will only appear in the 3rd edition. We don&amp;rsquo;t anticipate creating new editions very often (maybe once every 5 years at most), and they&amp;rsquo;ll always be paired with a new major version of testthat, i.e. if there&amp;rsquo;s another edition, it&amp;rsquo;ll be the 4th edition and will come with testthat 4.0.0.&lt;/p>
&lt;p>The full details of the 3rd edition are described in
&lt;a href="https://testthat.r-lib.org/articles/third-edition.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;third-edition&amp;quot;, package = &amp;quot;testthat&amp;quot;)&lt;/code>&lt;/a>. If you&amp;rsquo;re a heavy testthat user, I strongly recommend reading the vignette. Here are the most important changes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://testthat.r-lib.org/reference/context.html" target="_blank" rel="noopener">&lt;code>context()&lt;/code>&lt;/a> is now deprecated. It hasn&amp;rsquo;t been recommended for some time since it usually duplicates data also present in the file name.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://testthat.r-lib.org/reference/equality-expectations.html" target="_blank" rel="noopener">&lt;code>expect_identical()&lt;/code>&lt;/a> and
&lt;a href="https://testthat.r-lib.org/reference/equality-expectations.html" target="_blank" rel="noopener">&lt;code>expect_equal()&lt;/code>&lt;/a> use
&lt;a href="https://rdrr.io/pkg/waldo/man/compare.html" target="_blank" rel="noopener">&lt;code>waldo::compare()&lt;/code>&lt;/a> to compare actual and expected results. This should give considerably more informative output for test failures, but
&lt;a href="https://rdrr.io/pkg/waldo/man/compare.html" target="_blank" rel="noopener">&lt;code>waldo::compare()&lt;/code>&lt;/a> is not 100% compatible with
&lt;a href="https://rdrr.io/r/base/all.equal.html" target="_blank" rel="noopener">&lt;code>all.equal()&lt;/code>&lt;/a> (which previously powered
&lt;a href="https://testthat.r-lib.org/reference/equality-expectations.html" target="_blank" rel="noopener">&lt;code>expect_equal()&lt;/code>&lt;/a>). There are a few differences due to a bug in testthat&amp;rsquo;s comparison of floating point values and subtle differences when comparing environments stored in attributes (common in modelling functions); see the vignette for full details.&lt;/p>
&lt;p>
&lt;a href="https://testthat.r-lib.org/reference/expect_equivalent.html" target="_blank" rel="noopener">&lt;code>expect_equivalent()&lt;/code>&lt;/a> is now deprecated because it&amp;rsquo;s equivalent to
&lt;a href="https://testthat.r-lib.org/reference/equality-expectations.html" target="_blank" rel="noopener">&lt;code>expect_equal(ignore_attr = TRUE)&lt;/code>&lt;/a> (which is generally not recommended, anyway, because it&amp;rsquo;s such a blunt tool).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://testthat.r-lib.org/reference/expect_error.html" target="_blank" rel="noopener">&lt;code>expect_error()&lt;/code>&lt;/a>,
&lt;a href="https://testthat.r-lib.org/reference/expect_error.html" target="_blank" rel="noopener">&lt;code>expect_warning()&lt;/code>&lt;/a>,
&lt;a href="https://testthat.r-lib.org/reference/expect_error.html" target="_blank" rel="noopener">&lt;code>expect_message()&lt;/code>&lt;/a>, and
&lt;a href="https://testthat.r-lib.org/reference/expect_error.html" target="_blank" rel="noopener">&lt;code>expect_condition()&lt;/code>&lt;/a> now all use the same underlying logic: they capture the first condition that matches &lt;code>class&lt;/code>/&lt;code>regexp&lt;/code> and allow anything else to bubble up. This behaviour pairs particularly well with upcoming changes to the pipe in
&lt;a href="https://www.tidyverse.org/blog/2020/08/magrittr-2-0/">magrittr 2.0.0&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Messages are no longer automatically silenced. You&amp;rsquo;ll now need to use
&lt;a href="https://rdrr.io/r/base/message.html" target="_blank" rel="noopener">&lt;code>suppressMessages()&lt;/code>&lt;/a> to hide unimportant messages or &lt;code>expect_messsage()&lt;/code> to catch important messages.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://testthat.r-lib.org/reference/test_that.html" target="_blank" rel="noopener">&lt;code>test_that()&lt;/code>&lt;/a> now sets a number of options and env vars to make output as reproducible as possible. Many of these options were previously set in various places (including
&lt;a href="https://devtools.r-lib.org//reference/test.html" target="_blank" rel="noopener">&lt;code>devtools::test()&lt;/code>&lt;/a>,
&lt;a href="https://testthat.r-lib.org/reference/test_dir.html" target="_blank" rel="noopener">&lt;code>test_dir()&lt;/code>&lt;/a>,
&lt;a href="https://testthat.r-lib.org/reference/test_file.html" target="_blank" rel="noopener">&lt;code>test_file()&lt;/code>&lt;/a>, and
&lt;a href="https://testthat.r-lib.org/reference/verify_output.html" target="_blank" rel="noopener">&lt;code>verify_output()&lt;/code>&lt;/a>) but they have now been centralised in to
&lt;a href="https://testthat.r-lib.org/reference/local_test_context.html" target="_blank" rel="noopener">&lt;code>local_test_context()&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="snapshot-testing">Snapshot testing
&lt;a href="#snapshot-testing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The goal of a unit test is to record the expected output of a function using code. This is a powerful technique because because not only does it ensure that code doesn&amp;rsquo;t change unexpectedly, it also expresses the desired behaviour in a way that a human can understand. However, it&amp;rsquo;s not always convenient to record the expected behaviour with code. Some challenges include:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Text output that includes many characters like quotes and newlines that require special handling in a string.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Output that is large, making it painful to define the reference output, and bloating the size of the test file and making it hard to navigate.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Cases where you want to record a mix of printed output, messages, warnings, or errors.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Binary formats, like plots or images, which are very difficult to describe in code: i.e. the plot looks right, the error message is useful to a human, the print method uses colour effectively.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>For these situations, testthat provides an alternative mechanism: snapshot tests. Instead of using code to describe expected output, snapshot tests (also known as
&lt;a href="https://ro-che.info/articles/2017-12-04-golden-tests" target="_blank" rel="noopener">golden tests&lt;/a>) record results in a separate human-readable file. Snapshot tests in testthat are inspired primarily by
&lt;a href="https://jestjs.io/docs/en/snapshot-testing" target="_blank" rel="noopener">Jest&lt;/a>, thanks to a number of very useful discussions with Joe Cheng.&lt;/p>
&lt;p>If snapshot tests sound intriguing to you, please read the details in &lt;code>vignette(&amp;quot;snapshotting&amp;quot;, package = &amp;quot;testthat&amp;quot;).&lt;/code>&lt;/p>
&lt;h2 id="other-improvements">Other improvements
&lt;a href="#other-improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>testthat has preliminary support for running tests in parallel. See details in
&lt;a href="https://testthat.r-lib.org/articles/parallel.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;parallel&amp;quot;, package = &amp;quot;testthat&amp;quot;)&lt;/code>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We now recommend using test fixtures rather than
&lt;a href="https://testthat.r-lib.org/reference/teardown.html" target="_blank" rel="noopener">&lt;code>setup()&lt;/code>&lt;/a> and
&lt;a href="https://testthat.r-lib.org/reference/teardown.html" target="_blank" rel="noopener">&lt;code>teardown()&lt;/code>&lt;/a> code. See details in
&lt;a href="https://testthat.r-lib.org/articles/test-fixtures.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;test-fixtures&amp;quot;, package = &amp;quot;testthat&amp;quot;)&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We have revamped the non-interactive reporters to do a better job of displaying skipped tests, and have written a vignette,
&lt;a href="https://testthat.r-lib.org/articles/skipping.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;skipping&amp;quot;, package = &amp;quot;testthat&amp;quot;)&lt;/code>&lt;/a>, describing best practices (including how to test your own skip functions).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Made a number of tweaks to test reporting. Most importantly, the reporter used by
&lt;a href="https://devtools.r-lib.org//reference/test.html" target="_blank" rel="noopener">&lt;code>devtools::test()&lt;/code>&lt;/a> now displays stack traces of warnings and errors that occur outside of tests, making these problems substantially easier to track down. (It also gets a number of new random praise options that use emoji). There&amp;rsquo;s also a new reporter for use by
&lt;a href="https://devtools.r-lib.org//reference/test.html" target="_blank" rel="noopener">&lt;code>devtools::test_file()&lt;/code>&lt;/a> which displays results more compactly.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all 64 contributors who helped with this release by discussing problems, proposing features and contributing code:
&lt;a href="https://github.com/aalucaci" target="_blank" rel="noopener">@aalucaci&lt;/a>,
&lt;a href="https://github.com/andrewmarx" target="_blank" rel="noopener">@andrewmarx&lt;/a>,
&lt;a href="https://github.com/Anirban166" target="_blank" rel="noopener">@Anirban166&lt;/a>,
&lt;a href="https://github.com/benxiahu" target="_blank" rel="noopener">@benxiahu&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/boerjames" target="_blank" rel="noopener">@boerjames&lt;/a>,
&lt;a href="https://github.com/brodieG" target="_blank" rel="noopener">@brodieG&lt;/a>,
&lt;a href="https://github.com/c0k3b0y" target="_blank" rel="noopener">@c0k3b0y&lt;/a>,
&lt;a href="https://github.com/Christoph999" target="_blank" rel="noopener">@Christoph999&lt;/a>,
&lt;a href="https://github.com/daattali" target="_blank" rel="noopener">@daattali&lt;/a>,
&lt;a href="https://github.com/damianooldoni" target="_blank" rel="noopener">@damianooldoni&lt;/a>,
&lt;a href="https://github.com/DanChaltiel" target="_blank" rel="noopener">@DanChaltiel&lt;/a>,
&lt;a href="https://github.com/davidchall" target="_blank" rel="noopener">@davidchall&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EdwardJGillian" target="_blank" rel="noopener">@EdwardJGillian&lt;/a>,
&lt;a href="https://github.com/emiliesecherre" target="_blank" rel="noopener">@emiliesecherre&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gavinsimpson" target="_blank" rel="noopener">@gavinsimpson&lt;/a>,
&lt;a href="https://github.com/gergness" target="_blank" rel="noopener">@gergness&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hbaniecki" target="_blank" rel="noopener">@hbaniecki&lt;/a>,
&lt;a href="https://github.com/hongooi73" target="_blank" rel="noopener">@hongooi73&lt;/a>,
&lt;a href="https://github.com/HughParsonage" target="_blank" rel="noopener">@HughParsonage&lt;/a>,
&lt;a href="https://github.com/jarauh" target="_blank" rel="noopener">@jarauh&lt;/a>,
&lt;a href="https://github.com/jcheng5" target="_blank" rel="noopener">@jcheng5&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jonkeane" target="_blank" rel="noopener">@jonkeane&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/khaeru" target="_blank" rel="noopener">@khaeru&lt;/a>,
&lt;a href="https://github.com/kjytay" target="_blank" rel="noopener">@kjytay&lt;/a>,
&lt;a href="https://github.com/kos59125" target="_blank" rel="noopener">@kos59125&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/ksvanhorn" target="_blank" rel="noopener">@ksvanhorn&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/manumart" target="_blank" rel="noopener">@manumart&lt;/a>,
&lt;a href="https://github.com/mardam" target="_blank" rel="noopener">@mardam&lt;/a>,
&lt;a href="https://github.com/md0u80c9" target="_blank" rel="noopener">@md0u80c9&lt;/a>,
&lt;a href="https://github.com/melvidoni" target="_blank" rel="noopener">@melvidoni&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/msberends" target="_blank" rel="noopener">@msberends&lt;/a>,
&lt;a href="https://github.com/mtkerbeR" target="_blank" rel="noopener">@mtkerbeR&lt;/a>,
&lt;a href="https://github.com/MyKo101" target="_blank" rel="noopener">@MyKo101&lt;/a>,
&lt;a href="https://github.com/nbenn" target="_blank" rel="noopener">@nbenn&lt;/a>,
&lt;a href="https://github.com/Nelson-Gon" target="_blank" rel="noopener">@Nelson-Gon&lt;/a>,
&lt;a href="https://github.com/njtierney" target="_blank" rel="noopener">@njtierney&lt;/a>,
&lt;a href="https://github.com/noeliarico" target="_blank" rel="noopener">@noeliarico&lt;/a>,
&lt;a href="https://github.com/omsai" target="_blank" rel="noopener">@omsai&lt;/a>,
&lt;a href="https://github.com/pat-s" target="_blank" rel="noopener">@pat-s&lt;/a>,
&lt;a href="https://github.com/psteinb" target="_blank" rel="noopener">@psteinb&lt;/a>,
&lt;a href="https://github.com/salim-b" target="_blank" rel="noopener">@salim-b&lt;/a>,
&lt;a href="https://github.com/SKalt" target="_blank" rel="noopener">@SKalt&lt;/a>,
&lt;a href="https://github.com/stefanoborini" target="_blank" rel="noopener">@stefanoborini&lt;/a>,
&lt;a href="https://github.com/stufield" target="_blank" rel="noopener">@stufield&lt;/a>,
&lt;a href="https://github.com/sumedh10" target="_blank" rel="noopener">@sumedh10&lt;/a>,
&lt;a href="https://github.com/tanho63" target="_blank" rel="noopener">@tanho63&lt;/a>,
&lt;a href="https://github.com/tbrown122387" target="_blank" rel="noopener">@tbrown122387&lt;/a>,
&lt;a href="https://github.com/torfason" target="_blank" rel="noopener">@torfason&lt;/a>,
&lt;a href="https://github.com/torockel" target="_blank" rel="noopener">@torockel&lt;/a>,
&lt;a href="https://github.com/xiaodaigh" target="_blank" rel="noopener">@xiaodaigh&lt;/a>,
&lt;a href="https://github.com/yitao-li" target="_blank" rel="noopener">@yitao-li&lt;/a>, and
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>.&lt;/p></description></item><item><title>waldo</title><link>https://www.tidyverse.org/blog/2020/10/waldo/</link><pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/10/waldo/</guid><description>&lt;p>We&amp;rsquo;re stoked to announce the
&lt;a href="http://waldo.r-lib.org/" target="_blank" rel="noopener">waldo&lt;/a> package. waldo is designed to find and concisely describe the difference between a pair of R objects. It was designed primarily to improve failure messages for
&lt;a href="https://testthat.r-lib.org/reference/equality-expectations.html" target="_blank" rel="noopener">&lt;code>testthat::expect_equal()&lt;/code>&lt;/a>, but it turns out to be useful in a number of other situations.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"waldo"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="waldo-basics">waldo basics
&lt;a href="#waldo-basics">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/r-lib/waldo'>waldo&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>There&amp;rsquo;s really only one function in waldo that you&amp;rsquo;ll ever use:
&lt;a href="https://rdrr.io/pkg/waldo/man/compare.html" target="_blank" rel="noopener">&lt;code>waldo::compare()&lt;/code>&lt;/a>. Its job is to take a pair of objects and succinctly display all differences. When comparing atomic vectors,
&lt;a href="https://rdrr.io/pkg/waldo/man/compare.html" target="_blank" rel="noopener">&lt;code>compare()&lt;/code>&lt;/a> uses the
&lt;a href="https://github.com/brodieG/diffobj" target="_blank" rel="noopener">diffobj&lt;/a> package by Brodie Gaslam to show additions, deletions, and changes:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># addition&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>, &lt;span class='s'>"c"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `old`: &lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"b"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #BBBB00;'>"c"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new`: &lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"b"&lt;/span>&lt;/span>
&lt;span class='c'># deletion&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>, &lt;span class='s'>"c"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `old`: &lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"b"&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new`: &lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"b"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #0000BB;'>"c"&lt;/span>&lt;/span>
&lt;span class='c'># modification&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>, &lt;span class='s'>"c"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"c"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `old`: &lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #00BB00;'>"b"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"c"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new`: &lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #00BB00;'>"B"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"c"&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Large vectors with small changes only show a little context around the changes, not all the parts that are the same:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"X"&lt;/span>, &lt;span class='nv'>letters&lt;/span>, &lt;span class='nv'>letters&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>letters&lt;/span>, &lt;span class='nv'>letters&lt;/span>, &lt;span class='s'>"X"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `old[1:4]`: &lt;span style='color: #BBBB00;'>"X"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"b"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"c"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new[1:3]`: &lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"b"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"c"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; `old[51:53]`: &lt;span style='color: #555555;'>"x"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"y"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"z"&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new[50:53]`: &lt;span style='color: #555555;'>"x"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"y"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"z"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #0000BB;'>"X"&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Depending on the size of the differences and the width of your console you&amp;rsquo;ll get one of three displays. The default display shows the vectors one atop the other. If there&amp;rsquo;s not enough room for that, the two vectors are shown side-by-side. And if there&amp;rsquo;s still not enough room for side-by-side, then each element is shown on its own line:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>with_width&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>width&lt;/span>, &lt;span class='nv'>code&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>{&lt;/span>
&lt;span class='nf'>withr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://withr.r-lib.org/reference/with_options.html'>local_options&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>width &lt;span class='o'>=&lt;/span> &lt;span class='nv'>width&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>code&lt;/span>
&lt;span class='o'>}&lt;/span>
&lt;span class='nv'>old&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"x"&lt;/span>, &lt;span class='s'>"y"&lt;/span>, &lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>, &lt;span class='s'>"c"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>new&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"y"&lt;/span>, &lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"c"&lt;/span>, &lt;span class='s'>"d"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>with_width&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>80&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>old&lt;/span>, &lt;span class='nv'>new&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `old`: &lt;span style='color: #BBBB00;'>"x"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"y"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #00BB00;'>"b"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"c"&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new`: &lt;span style='color: #555555;'>"y"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #00BB00;'>"B"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"c"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #0000BB;'>"d"&lt;/span>&lt;/span>
&lt;span class='nf'>with_width&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>20&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>old&lt;/span>, &lt;span class='nv'>new&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; old | new &lt;/span>
&lt;span class='c'>#&amp;gt; [1] &lt;span style='color: #BBBB00;'>"x"&lt;/span>&lt;span> - &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; [2] &lt;span style='color: #555555;'>"y"&lt;/span>&lt;span> | &lt;/span>&lt;span style='color: #555555;'>"y"&lt;/span>&lt;span> [1]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; [3] &lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> | &lt;/span>&lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> [2]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; [4] &lt;span style='color: #00BB00;'>"b"&lt;/span>&lt;span> - &lt;/span>&lt;span style='color: #00BB00;'>"B"&lt;/span>&lt;span> [3]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; [5] &lt;span style='color: #555555;'>"c"&lt;/span>&lt;span> | &lt;/span>&lt;span style='color: #555555;'>"c"&lt;/span>&lt;span> [4]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; - &lt;span style='color: #0000BB;'>"d"&lt;/span>&lt;span> [5]&lt;/span>&lt;/span>
&lt;span class='nf'>with_width&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>10&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>old&lt;/span>, &lt;span class='nv'>new&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; old vs new&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>+ "x"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> "y"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> "a"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>- "B"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>+ "b"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> "c"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>- "d"&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>As you can see, in situations where colour is available, additions are coloured in blue, deletions in yellow, and changes in green.&lt;/p>
&lt;h2 id="nested-objects">Nested objects
&lt;a href="#nested-objects">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>For more complex objects, waldo drills down precisely to the location of differences, using R code to describe their location. Unnamed lists show the position of changes:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/factor.html'>factor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"x"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1L&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `old[[1]]` is &lt;span style='color: #00BB00;'>an S3 object of class &amp;lt;factor&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new[[1]]` is &lt;span style='color: #00BB00;'>an integer vector&lt;/span>&lt;span> (1)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>But most complex lists have names, so if they&amp;rsquo;re available waldo will use them:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>z &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>z &lt;span class='o'>=&lt;/span> &lt;span class='s'>"a"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `old$x$y$z` is &lt;span style='color: #00BB00;'>a double vector&lt;/span>&lt;span> (3)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new$x$y$z` is &lt;span style='color: #00BB00;'>a character vector&lt;/span>&lt;span> ('a')&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If named valued are the same but with different positions, waldo just reports on the difference in names:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>,
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>y &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>, x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `names(old)`: &lt;span style='color: #BBBB00;'>"x"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>"y"&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `names(new)`: &lt;span style='color: #555555;'>"y"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #0000BB;'>"x"&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>waldo also reports on differences in attributes:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/structure.html'>structure&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>5&lt;/span>, a &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>,
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/structure.html'>structure&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>5&lt;/span>, a &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `attr(old, 'a')`: &lt;span style='color: #00BB00;'>1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `attr(new, 'a')`: &lt;span style='color: #00BB00;'>2&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And can recurse arbitrarily deep:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>a &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>b &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>c &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/structure.html'>structure&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, d &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/factor.html'>factor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>y&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>a &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>b &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>c &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/structure.html'>structure&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, d &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/factor.html'>factor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, levels &lt;span class='o'>=&lt;/span> &lt;span class='nv'>letters&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `levels(attr(old$a$b$c, 'd'))`: &lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `levels(attr(new$a$b$c, 'd'))`: &lt;span style='color: #555555;'>"a"&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #0000BB;'>"b"&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To illustrate how you might use waldo in practice, I include two case studies below. They both come from my colleagues at RStudio, who have been trying it out prior to its public debut.&lt;/p>
&lt;h2 id="case-study-github-api">Case study: GitHub API
&lt;a href="#case-study-github-api">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The first case study comes from Jenny Bryan. She was trying to figure out precisely what changed when a certain request to the GitHub API was performed with and without authentication:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># Use default auth&lt;/span>
&lt;span class='nv'>x1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>gh&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://gh.r-lib.org/reference/gh.html'>gh&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"/repos/gaborcsardi/roxygenlabs"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Suppress auth&lt;/span>
&lt;span class='nv'>x2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>gh&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://gh.r-lib.org/reference/gh.html'>gh&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"/repos/gaborcsardi/roxygenlabs"&lt;/span>, .token &lt;span class='o'>=&lt;/span> &lt;span class='s'>""&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Strip part of the results that might expose my GitHub credentials&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/attr.html'>attr&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>, &lt;span class='s'>"response"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kc'>NULL&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/attr.html'>attr&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>, &lt;span class='s'>".send_headers"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kc'>NULL&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/attr.html'>attr&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x2&lt;/span>, &lt;span class='s'>"response"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kc'>NULL&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/attr.html'>attr&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x2&lt;/span>, &lt;span class='s'>".send_headers"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kc'>NULL&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The individual objects are rather complicated!&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/str.html'>str&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>, list.len &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; List of 77&lt;/span>
&lt;span class='c'>#&amp;gt; $ id : int 229545533&lt;/span>
&lt;span class='c'>#&amp;gt; $ node_id : chr "MDEwOlJlcG9zaXRvcnkyMjk1NDU1MzM="&lt;/span>
&lt;span class='c'>#&amp;gt; $ name : chr "roxygenlabs"&lt;/span>
&lt;span class='c'>#&amp;gt; $ full_name : chr "gaborcsardi/roxygenlabs"&lt;/span>
&lt;span class='c'>#&amp;gt; $ private : logi FALSE&lt;/span>
&lt;span class='c'>#&amp;gt; $ owner :List of 18&lt;/span>
&lt;span class='c'>#&amp;gt; ..$ login : chr "gaborcsardi"&lt;/span>
&lt;span class='c'>#&amp;gt; ..$ id : int 660288&lt;/span>
&lt;span class='c'>#&amp;gt; ..$ node_id : chr "MDQ6VXNlcjY2MDI4OA=="&lt;/span>
&lt;span class='c'>#&amp;gt; ..$ avatar_url : chr "https://avatars3.githubusercontent.com/u/660288?v=4"&lt;/span>
&lt;span class='c'>#&amp;gt; ..$ gravatar_id : chr ""&lt;/span>
&lt;span class='c'>#&amp;gt; ..$ url : chr "https://api.github.com/users/gaborcsardi"&lt;/span>
&lt;span class='c'>#&amp;gt; ..$ html_url : chr "https://github.com/gaborcsardi"&lt;/span>
&lt;span class='c'>#&amp;gt; ..$ followers_url : chr "https://api.github.com/users/gaborcsardi/followers"&lt;/span>
&lt;span class='c'>#&amp;gt; ..$ following_url : chr "https://api.github.com/users/gaborcsardi/following{/other_user}"&lt;/span>
&lt;span class='c'>#&amp;gt; ..$ gists_url : chr "https://api.github.com/users/gaborcsardi/gists{/gist_id}"&lt;/span>
&lt;span class='c'>#&amp;gt; .. [list output truncated]&lt;/span>
&lt;span class='c'>#&amp;gt; $ html_url : chr "https://github.com/gaborcsardi/roxygenlabs"&lt;/span>
&lt;span class='c'>#&amp;gt; $ description : chr "Experimental roxygen tags and extensions"&lt;/span>
&lt;span class='c'>#&amp;gt; $ fork : logi FALSE&lt;/span>
&lt;span class='c'>#&amp;gt; $ url : chr "https://api.github.com/repos/gaborcsardi/roxygenlabs"&lt;/span>
&lt;span class='c'>#&amp;gt; [list output truncated]&lt;/span>
&lt;span class='c'>#&amp;gt; - attr(*, "method")= chr "GET"&lt;/span>
&lt;span class='c'>#&amp;gt; - attr(*, "class")= chr [1:2] "gh_response" "list"&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>While
&lt;a href="https://rdrr.io/r/base/all.equal.html" target="_blank" rel="noopener">&lt;code>all.equal()&lt;/code>&lt;/a> identifies that there is a difference, it doesn&amp;rsquo;t make it easy to see what the difference is:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/all.equal.html'>all.equal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>, &lt;span class='nv'>x2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "Names: 3 string mismatches" &lt;/span>
&lt;span class='c'>#&amp;gt; [2] "Length mismatch: comparison on first 76 components" &lt;/span>
&lt;span class='c'>#&amp;gt; [3] "Component 74: Modes: list, NULL" &lt;/span>
&lt;span class='c'>#&amp;gt; [4] "Component 74: Lengths: 3, 0" &lt;/span>
&lt;span class='c'>#&amp;gt; [5] "Component 74: names for target but not for current" &lt;/span>
&lt;span class='c'>#&amp;gt; [6] "Component 74: current is not list-like" &lt;/span>
&lt;span class='c'>#&amp;gt; [7] "Component 75: Modes: character, numeric" &lt;/span>
&lt;span class='c'>#&amp;gt; [8] "Component 75: target is character, current is numeric"&lt;/span>
&lt;span class='c'>#&amp;gt; [9] "Component 76: Mean relative difference: 0.5"&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>waldo makes it easy: the request with auth returns a new key that contains the &lt;code>permissions&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>waldo&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x1&lt;/span>, &lt;span class='nv'>x2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `old` is length 77&lt;/span>
&lt;span class='c'>#&amp;gt; `new` is length 76&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; names(old) | names(new) &lt;/span>
&lt;span class='c'>#&amp;gt; [71] &lt;span style='color: #555555;'>"open_issues"&lt;/span>&lt;span> | &lt;/span>&lt;span style='color: #555555;'>"open_issues"&lt;/span>&lt;span> [71]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; [72] &lt;span style='color: #555555;'>"watchers"&lt;/span>&lt;span> | &lt;/span>&lt;span style='color: #555555;'>"watchers"&lt;/span>&lt;span> [72]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; [73] &lt;span style='color: #555555;'>"default_branch"&lt;/span>&lt;span> | &lt;/span>&lt;span style='color: #555555;'>"default_branch"&lt;/span>&lt;span> [73]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; [74] &lt;span style='color: #BBBB00;'>"permissions"&lt;/span>&lt;span> - &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; [75] &lt;span style='color: #555555;'>"temp_clone_token"&lt;/span>&lt;span> | &lt;/span>&lt;span style='color: #555555;'>"temp_clone_token"&lt;/span>&lt;span> [74]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; [76] &lt;span style='color: #555555;'>"network_count"&lt;/span>&lt;span> | &lt;/span>&lt;span style='color: #555555;'>"network_count"&lt;/span>&lt;span> [75]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; [77] &lt;span style='color: #555555;'>"subscribers_count"&lt;/span>&lt;span> | &lt;/span>&lt;span style='color: #555555;'>"subscribers_count"&lt;/span>&lt;span> [76]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; `old$permissions` is &lt;span style='color: #0000BB;'>a list&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new$permissions` is absent&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; `old$temp_clone_token` is &lt;span style='color: #00BB00;'>a character vector&lt;/span>&lt;span> ('')&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; `new$temp_clone_token` is &lt;span style='color: #00BB00;'>NULL&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="case-study-spatial-data">Case study: Spatial data
&lt;a href="#case-study-spatial-data">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The second case study comes from Joe Cheng who received a request from Roger Bivand to update map data bundled in the leaftlet package. Roger Bivand had helpfully provide the updated data, but Joe wanted to understand exactly what had changed:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>old&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/readRDS.html'>readRDS&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"storms-old.rds"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>new&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/readRDS.html'>readRDS&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"storms-new.rds"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Again, the individual objects are complicated:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/str.html'>str&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>old&lt;/span>, list.len &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>, max.level &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Loading required package: sp&lt;/span>
&lt;span class='c'>#&amp;gt; Formal class 'SpatialLinesDataFrame' [package "sp"] with 4 slots&lt;/span>
&lt;span class='c'>#&amp;gt; ..@ data :'data.frame': 24 obs. of 3 variables:&lt;/span>
&lt;span class='c'>#&amp;gt; .. ..$ Name : Factor w/ 24 levels "ALPHA","ARLENE",..: 1 2 3 4 5 6 7 8 9 10 ...&lt;/span>
&lt;span class='c'>#&amp;gt; .. ..$ MaxWind : num [1:24] 45 60 35 65 60 130 140 75 60 45 ...&lt;/span>
&lt;span class='c'>#&amp;gt; .. ..$ MinPress: num [1:24] 998 989 1002 991 980 ...&lt;/span>
&lt;span class='c'>#&amp;gt; ..@ lines :List of 24&lt;/span>
&lt;span class='c'>#&amp;gt; .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. .. ..@ Lines:List of 1&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. .. ..@ ID : chr "1"&lt;/span>
&lt;span class='c'>#&amp;gt; .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. .. ..@ Lines:List of 1&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. .. ..@ ID : chr "2"&lt;/span>
&lt;span class='c'>#&amp;gt; .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. .. ..@ Lines:List of 1&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. .. ..@ ID : chr "3"&lt;/span>
&lt;span class='c'>#&amp;gt; .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. .. ..@ Lines:List of 1&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. .. ..@ ID : chr "4"&lt;/span>
&lt;span class='c'>#&amp;gt; .. ..$ :Formal class 'Lines' [package "sp"] with 2 slots&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. .. ..@ Lines:List of 1&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. .. ..@ ID : chr "5"&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. [list output truncated]&lt;/span>
&lt;span class='c'>#&amp;gt; ..@ bbox : num [1:2, 1:2] -101.4 10.7 6.6 68.8&lt;/span>
&lt;span class='c'>#&amp;gt; .. ..- attr(*, "dimnames")=List of 2&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. ..$ : chr [1:2] "x" "y"&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. ..$ : chr [1:2] "min" "max"&lt;/span>
&lt;span class='c'>#&amp;gt; ..@ proj4string:Formal class 'CRS' [package "sp"] with 1 slot&lt;/span>
&lt;span class='c'>#&amp;gt; .. .. ..@ projargs: chr "+init=epsg:4326 +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;a href="https://rdrr.io/r/base/all.equal.html" target="_blank" rel="noopener">&lt;code>all.equal()&lt;/code>&lt;/a> is bit more helpful here, at least getting us to the right general vicinity:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/all.equal.html'>all.equal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>old&lt;/span>, &lt;span class='nv'>new&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "Attributes: &amp;lt; Component \"proj4string\": Attributes: &amp;lt; Names: 1 string mismatch &amp;gt; &amp;gt;" &lt;/span>
&lt;span class='c'>#&amp;gt; [2] "Attributes: &amp;lt; Component \"proj4string\": Attributes: &amp;lt; Length mismatch: comparison on first 2 components &amp;gt; &amp;gt;"&lt;/span>
&lt;span class='c'>#&amp;gt; [3] "Attributes: &amp;lt; Component \"proj4string\": Attributes: &amp;lt; Component 2: 1 string mismatch &amp;gt; &amp;gt;"&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>But waldo gets us right to the change: the definition of the spatial projection has changed, and it now contains a comment with a lot more data.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>waldo&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/waldo/man/compare.html'>compare&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>old&lt;/span>, &lt;span class='nv'>new&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; old@proj4string@projargs vs new@proj4string@projargs&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>- "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>+ "+init=epsg:4326 +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; `comment(old@proj4string)` is absent&lt;/span>
&lt;span class='c'>#&amp;gt; `comment(new@proj4string)` is &lt;span style='color: #BBBB00;'>a character vector&lt;/span>&lt;span> ('GEOGCRS["unknown",\n DATUM["World Geodetic System 1984",\n ELLIPSOID["WGS 84",6378137,298.257223563,\n LENGTHUNIT["metre",1]],\n ID["EPSG",6326]],\n PRIMEM["Greenwich",0,\n ANGLEUNIT["degree",0.0174532925199433],\n ID["EPSG",8901]],\n CS[ellipsoidal,2],\n AXIS["longitude",east,\n ORDER[1],\n ANGLEUNIT["degree",0.0174532925199433,\n ID["EPSG",9122]]],\n AXIS["latitude",north,\n ORDER[2],\n ANGLEUNIT["degree",0.0174532925199433,\n ID["EPSG",9122]]]]')&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div></description></item><item><title>testthat 2.3.0</title><link>https://www.tidyverse.org/blog/2019/11/testthat-2-3-0/</link><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/11/testthat-2-3-0/</guid><description>&lt;p>We&amp;rsquo;re pumped to announce that
&lt;a href="http://testthat.r-lib.org" target="_blank" rel="noopener">testthat 2.3.0&lt;/a> is now available on CRAN!
testthat makes it easy to turn your existing informal tests into formal automated tests that you can rerun quickly and easily.
testthat is the most popular unit-testing package for R, and is used by over 4,000 CRAN and Bioconductor packages.
You can learn more about unit testing at &lt;a href="https://r-pkgs.org/tests.html">https://r-pkgs.org/tests.html&lt;/a>.&lt;/p>
&lt;p>(We didn&amp;rsquo;t write a blog post about testthat 2.2.0 because it only introduced a single, experimental, new feature: &lt;code>verify_output()&lt;/code>.
It has now matured to the point we think you should also try it out, so it&amp;rsquo;s discussed below.)&lt;/p>
&lt;p>Install the latest version of testthat with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;testthat&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This release features two main improvements:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>A general overhaul of condition and error handling.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A polished &lt;code>verify_output()&lt;/code> that is ready for you to use to test your
print methods and error messages.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>For a complete list of changes, please see the
&lt;a href="https://testthat.r-lib.org/news/index.html#testthat-2-3-0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testthat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="errors">Errors
&lt;a href="#errors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The main improvements are mostly behind the scenes: we have overhauled the handling of errors and backtraces so that you should get more informative outputs when tests error unexpectedly or fail.
It&amp;rsquo;s hard to authentically demonstrate this in an RMarkdown document, but if you have an error inside a test, like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">f&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nf">g&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">g&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nf">h&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">h&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nf">stop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;This is an error!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;f() works as expected&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You&amp;rsquo;ll now get an informative backtrace that should allow you to quickly locate the source of the error:&lt;/p>
&lt;pre>&lt;code>test-error.R:6: error: f() works as expected
This is an error!
Backtrace:
1. testthat::expect_equal(f(), 10) tests/testthat/test-error.R:6:2
4. testthat:::f()
5. testthat:::g() tests/testthat/test-catch.R:1:5
6. testthat:::h() tests/testthat/test-catch.R:2:5
&lt;/code>&lt;/pre>&lt;p>The previous version only showed the error message, which wasn&amp;rsquo;t terribly useful!&lt;/p>
&lt;h2 id="verify_output">&lt;code>verify_output()&lt;/code>
&lt;a href="#verify_output">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>verify_output()&lt;/code> is designed to test output aimed at a human, like print methods and error messages.
Here you want to test that the output is useful to a human, but there&amp;rsquo;s obviously no way to do that automatically.
Instead, the best you can do is to check the results with your eyeballs every time the results change.
&lt;code>verify_output()&lt;/code> is designed to help you do this, making it a type of visual regression test.&lt;/p>
&lt;p>You&amp;rsquo;ll need to use &lt;code>verify_output()&lt;/code> in concert with git.
Whenever the output changes, you&amp;rsquo;ll get a test failure, but to see the change, you&amp;rsquo;ll need to use git.
If the change is correct, commit it with git.
If it&amp;rsquo;s incorrect, fix your code and rerun the tests.
Once fixed, the git diff will disappear.&lt;/p>
&lt;p>&lt;code>verify_output()&lt;/code> works a little like RMarkdown: you give it some R code and it will run it, interleaving the input and output.
For example, imagine we were writing some tests to check that tibbles print correctly:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tibble&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tibbles print usefully&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">verify_output&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">test_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;test-print-dataframe.txt&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">df1&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1e6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That test yields a &lt;code>test-print-dataframe.txt&lt;/code> containing this output:&lt;/p>
&lt;pre>&lt;code>&amp;gt; df1 &amp;lt;- tibble(x = 1:1e+06)
&amp;gt; print(df1)
# A tibble: 1,000,000 x 1
x
&amp;lt;int&amp;gt;
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
# ... with 999,990 more rows
&lt;/code>&lt;/pre>&lt;p>Unfortunately, there&amp;rsquo;s no way for &lt;code>verify_output()&lt;/code> to capture comments, so you can instead use bare strings if you want comments to appear in the output. If you start the comment with &lt;code>#&lt;/code> it will be formatted as a heading:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tibbles print usefully&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">verify_output&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">test_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;test-print-dataframe-2.txt&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s">&amp;#34;# long tibbles&amp;#34;&lt;/span>
&lt;span class="n">df1&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1e6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="s">&amp;#34;# wide tibbles&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;not yet written&amp;#34;&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>
long tibbles
============
&amp;gt; df1 &amp;lt;- tibble(x = 1:1e+06)
&amp;gt; print(df1)
# A tibble: 1,000,000 x 1
x
&amp;lt;int&amp;gt;
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
# ... with 999,990 more rows
wide tibbles
============
&amp;gt; # not yet written
&lt;/code>&lt;/pre>&lt;p>&lt;code>verify_output()&lt;/code> is automatically skipped when run on CRAN.
This avoids false positives because it&amp;rsquo;s very easy to accidentally depend on the code from other packages, and failure does not imply incorrect computation, just a change in presentation.
In other words, &lt;code>verify_output()&lt;/code> is meant to monitor the evolution of outputs produced by your package rather than checking for regressions.
In this way, it is similar to the
&lt;a href="http://vdiffr.r-lib.org/" target="_blank" rel="noopener">vdiffr&lt;/a> extension to testthat which uses the same approach to monitor the evolution of plots.&lt;/p>
&lt;h2 id="acknoweldgements">Acknoweldgements
&lt;a href="#acknoweldgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to everyone who helped make this version happen!
&lt;a href="https://github.com/aaronrudkin" target="_blank" rel="noopener">@aaronrudkin&lt;/a>,
&lt;a href="https://github.com/aneudecker" target="_blank" rel="noopener">@aneudecker&lt;/a>,
&lt;a href="https://github.com/atheriel" target="_blank" rel="noopener">@atheriel&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/cimentadaj" target="_blank" rel="noopener">@cimentadaj&lt;/a>,
&lt;a href="https://github.com/CorradoLanera" target="_blank" rel="noopener">@CorradoLanera&lt;/a>,
&lt;a href="https://github.com/cosi1" target="_blank" rel="noopener">@cosi1&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dtm2451" target="_blank" rel="noopener">@dtm2451&lt;/a>,
&lt;a href="https://github.com/EmielSchmeink" target="_blank" rel="noopener">@EmielSchmeink&lt;/a>,
&lt;a href="https://github.com/flying-sheep" target="_blank" rel="noopener">@flying-sheep&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gdurif" target="_blank" rel="noopener">@gdurif&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/ianmcook" target="_blank" rel="noopener">@ianmcook&lt;/a>,
&lt;a href="https://github.com/jameslamb" target="_blank" rel="noopener">@jameslamb&lt;/a>,
&lt;a href="https://github.com/jcheng5" target="_blank" rel="noopener">@jcheng5&lt;/a>,
&lt;a href="https://github.com/jcubic" target="_blank" rel="noopener">@jcubic&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jozefhajnala" target="_blank" rel="noopener">@jozefhajnala&lt;/a>,
&lt;a href="https://github.com/jpritikin" target="_blank" rel="noopener">@jpritikin&lt;/a>,
&lt;a href="https://github.com/keesh0" target="_blank" rel="noopener">@keesh0&lt;/a>,
&lt;a href="https://github.com/kenahoo" target="_blank" rel="noopener">@kenahoo&lt;/a>,
&lt;a href="https://github.com/KrishanBhasin" target="_blank" rel="noopener">@KrishanBhasin&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/maxheld83" target="_blank" rel="noopener">@maxheld83&lt;/a>,
&lt;a href="https://github.com/mcol" target="_blank" rel="noopener">@mcol&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/mkurdej" target="_blank" rel="noopener">@mkurdej&lt;/a>,
&lt;a href="https://github.com/MLopez-Ibanez" target="_blank" rel="noopener">@MLopez-Ibanez&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/mwmclean" target="_blank" rel="noopener">@mwmclean&lt;/a>,
&lt;a href="https://github.com/Nachtfeuer" target="_blank" rel="noopener">@Nachtfeuer&lt;/a>,
&lt;a href="https://github.com/nalzok" target="_blank" rel="noopener">@nalzok&lt;/a>,
&lt;a href="https://github.com/nbenn" target="_blank" rel="noopener">@nbenn&lt;/a>,
&lt;a href="https://github.com/oxr463" target="_blank" rel="noopener">@oxr463&lt;/a>,
&lt;a href="https://github.com/patr1ckm" target="_blank" rel="noopener">@patr1ckm&lt;/a>,
&lt;a href="https://github.com/richierocks" target="_blank" rel="noopener">@richierocks&lt;/a>,
&lt;a href="https://github.com/rillig" target="_blank" rel="noopener">@rillig&lt;/a>,
&lt;a href="https://github.com/sebastiangonsal" target="_blank" rel="noopener">@sebastiangonsal&lt;/a>,
&lt;a href="https://github.com/shrektan" target="_blank" rel="noopener">@shrektan&lt;/a>,
&lt;a href="https://github.com/StevenMaude" target="_blank" rel="noopener">@StevenMaude&lt;/a>,
&lt;a href="https://github.com/tdhock" target="_blank" rel="noopener">@tdhock&lt;/a>,
&lt;a href="https://github.com/theclue" target="_blank" rel="noopener">@theclue&lt;/a>,
&lt;a href="https://github.com/tjbell" target="_blank" rel="noopener">@tjbell&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/torbjorn" target="_blank" rel="noopener">@torbjorn&lt;/a>,
&lt;a href="https://github.com/trevorld" target="_blank" rel="noopener">@trevorld&lt;/a>,
&lt;a href="https://github.com/wlandau" target="_blank" rel="noopener">@wlandau&lt;/a>, and
&lt;a href="https://github.com/zappingseb" target="_blank" rel="noopener">@zappingseb&lt;/a>&lt;/p></description></item><item><title>testthat 2.1.0</title><link>https://www.tidyverse.org/blog/2019/04/testthat-2-1-0/</link><pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/04/testthat-2-1-0/</guid><description>&lt;html>
&lt;style>
h2 code {
font-size: 1em;
}
&lt;/style>
&lt;/html>
&lt;p>We&amp;rsquo;re happy to announce that
&lt;a href="http://testthat.r-lib.org" target="_blank" rel="noopener">testthat 2.1.0&lt;/a> is now available on CRAN! testthat makes it easy to turn your existing informal tests into formal automated tests that you can rerun quickly and easily. testthat is the most popular unit-testing package for R, and is used by over 4,000 CRAN and Bioconductor packages. You can learn more about unit testing at &lt;a href="https://r-pkgs.org/tests.html">https://r-pkgs.org/tests.html&lt;/a>.&lt;/p>
&lt;p>Install the latest version of testthat with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;testthat&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>testthat 2.1.0 mostly contains a large number of minor improvements and bug fixes, as described in the
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v2.1.0" target="_blank" rel="noopener">release notes&lt;/a>. This blog post discusses the bigger improvements:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>context()&lt;/code>s are now optional.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Two new expectations: &lt;code>expect_invisible()&lt;/code> and &lt;code>expect_mapequal()&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="context-is-now-optional">&lt;code>context()&lt;/code> is now optional
&lt;a href="#context-is-now-optional">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The biggest change in this version is that &lt;code>context()&lt;/code> is now optional, and in fact we recommend that you no longer use it. &lt;code>context()&lt;/code> made sense with the original design of testthat, which supported a very flexible mapping between your R code and the corresponding tests.&lt;/p>
&lt;p>Now, however, we have a stronger recommendation: organise the files in &lt;code>tests/testthat&lt;/code> in the same way that you organise the files in &lt;code>R/&lt;/code>, so that tests for code in &lt;code>R/my-file.R&lt;/code> live in &lt;code>tests/testthat-my-file.R&lt;/code>. (This begs the question of how you should organise your &lt;code>R/&lt;/code> directory, which we don&amp;rsquo;t have a good answer for yet, but at least you only need to struggle to organise one directory). With this convention, &lt;code>context()&lt;/code> tends to end up duplicating the file name, causing needless hassle if you reorganise your code structure.&lt;/p>
&lt;p>The convention that every file in &lt;code>R/&lt;/code> has a corresponding file in &lt;code>tests/testthat&lt;/code> (and vice versa) is used by two other helpful functions:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>usethis::use_test()&lt;/code>, which, if you use RStudio, will automatically
create and open a test file corresponding to the R file in the right
location. (If you&amp;rsquo;ve written the test file first, you can instead use
&lt;code>usethis::use_r()&lt;/code>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>devtools::test_coverage_file()&lt;/code>: again, if you use RStudio, this will look
at the active file, run just the tests for that file, and report the coverage
results. This is a great way to rapidly iterate to ensure that you have
tested all the branches of new code.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="new-expectations">New expectations
&lt;a href="#new-expectations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testthat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This version of testthat introduces two important new expectations:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>expect_invisible()&lt;/code> makes it easier to check if a function returns its
results invisibly. This is useful if you are testing a function that is
called primarily for its side-effects, which should (as a general rule)
invisibly return its first argument.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">greet&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">cat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;!\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sep&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">invisible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">expect_invisible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">greet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hadley&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Hello Hadley!&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Hadley&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For symmetry, &lt;code>expect_visible()&lt;/code> is also available, but you would not
generally test for it, as visible return values are the default.
Only use it if you find a bug related to visibilty and want to
programmatically verify that it&amp;rsquo;s fixed.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New &lt;code>expect_mapequal(x, y)&lt;/code> checks that &lt;code>x&lt;/code> and &lt;code>y&lt;/code> have the same names,
and the same value associated with each name (i.e. it compares the values
of the vector standardising the order of the names).&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">exp&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">expect_mapequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">exp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">expect_mapequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">exp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">expect_mapequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">exp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Names absent from `object`: &amp;#34;a&amp;#34;,&lt;/span>
&lt;span class="nf">expect_mapequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">exp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: act$val[exp_nms] not equal to exp$val.&lt;/span>
&lt;span class="c1">#&amp;gt; Component &amp;#34;a&amp;#34;: Mean relative difference: 0.6666667&lt;/span>
&lt;span class="nf">expect_mapequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">exp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Names absent from `expected`: &amp;#34;c&amp;#34;,&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>expect_mapequal()&lt;/code> is related to &lt;code>expect_setequal()&lt;/code>, which compares
values, ignoring order and count:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expect_setequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">expect_setequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all 51 people who helped contribute to this release by reporting bugs, suggesting new features, or creating pull requests:
&lt;a href="https://github.com/aabor" target="_blank" rel="noopener">@aabor&lt;/a>,
&lt;a href="https://github.com/AEBilgrau" target="_blank" rel="noopener">@AEBilgrau&lt;/a>,
&lt;a href="https://github.com/antaldaniel" target="_blank" rel="noopener">@antaldaniel&lt;/a>,
&lt;a href="https://github.com/bflammers" target="_blank" rel="noopener">@bflammers&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/BillDunlap" target="_blank" rel="noopener">@BillDunlap&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/burchill" target="_blank" rel="noopener">@burchill&lt;/a>,
&lt;a href="https://github.com/chasemc" target="_blank" rel="noopener">@chasemc&lt;/a>,
&lt;a href="https://github.com/colearendt" target="_blank" rel="noopener">@colearendt&lt;/a>,
&lt;a href="https://github.com/comicfans" target="_blank" rel="noopener">@comicfans&lt;/a>,
&lt;a href="https://github.com/dmenne" target="_blank" rel="noopener">@dmenne&lt;/a>,
&lt;a href="https://github.com/euklid321" target="_blank" rel="noopener">@euklid321&lt;/a>,
&lt;a href="https://github.com/flying-sheep" target="_blank" rel="noopener">@flying-sheep&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gabrielodom" target="_blank" rel="noopener">@gabrielodom&lt;/a>,
&lt;a href="https://github.com/gvwilson" target="_blank" rel="noopener">@gvwilson&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/harvey131" target="_blank" rel="noopener">@harvey131&lt;/a>,
&lt;a href="https://github.com/Hong-Revo" target="_blank" rel="noopener">@Hong-Revo&lt;/a>,
&lt;a href="https://github.com/HughParsonage" target="_blank" rel="noopener">@HughParsonage&lt;/a>,
&lt;a href="https://github.com/jackhannah95" target="_blank" rel="noopener">@jackhannah95&lt;/a>,
&lt;a href="https://github.com/jackwasey" target="_blank" rel="noopener">@jackwasey&lt;/a>,
&lt;a href="https://github.com/jarodmeng" target="_blank" rel="noopener">@jarodmeng&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jsilve24" target="_blank" rel="noopener">@jsilve24&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/kforner" target="_blank" rel="noopener">@kforner&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/markvanderloo" target="_blank" rel="noopener">@markvanderloo&lt;/a>,
&lt;a href="https://github.com/masaha03" target="_blank" rel="noopener">@masaha03&lt;/a>,
&lt;a href="https://github.com/mb706" target="_blank" rel="noopener">@mb706&lt;/a>,
&lt;a href="https://github.com/mbjoseph" target="_blank" rel="noopener">@mbjoseph&lt;/a>,
&lt;a href="https://github.com/merliseclyde" target="_blank" rel="noopener">@merliseclyde&lt;/a>,
&lt;a href="https://github.com/mikejiang" target="_blank" rel="noopener">@mikejiang&lt;/a>,
&lt;a href="https://github.com/Mooskey" target="_blank" rel="noopener">@Mooskey&lt;/a>,
&lt;a href="https://github.com/olsgaard" target="_blank" rel="noopener">@olsgaard&lt;/a>,
&lt;a href="https://github.com/patr1ckm" target="_blank" rel="noopener">@patr1ckm&lt;/a>,
&lt;a href="https://github.com/ramiromagno" target="_blank" rel="noopener">@ramiromagno&lt;/a>,
&lt;a href="https://github.com/randy3k" target="_blank" rel="noopener">@randy3k&lt;/a>,
&lt;a href="https://github.com/renkun-ken" target="_blank" rel="noopener">@renkun-ken&lt;/a>,
&lt;a href="https://github.com/smbache" target="_blank" rel="noopener">@smbache&lt;/a>,
&lt;a href="https://github.com/stevecondylios" target="_blank" rel="noopener">@stevecondylios&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/tramontini" target="_blank" rel="noopener">@tramontini&lt;/a>,
&lt;a href="https://github.com/wch" target="_blank" rel="noopener">@wch&lt;/a>,
&lt;a href="https://github.com/wsherwin" target="_blank" rel="noopener">@wsherwin&lt;/a>,
&lt;a href="https://github.com/Yuri-M-Dias" target="_blank" rel="noopener">@Yuri-M-Dias&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>, and
&lt;a href="https://github.com/zappingseb" target="_blank" rel="noopener">@zappingseb&lt;/a>.&lt;/p></description></item><item><title>testthat 2.0.0</title><link>https://www.tidyverse.org/blog/2017/12/testthat-2-0-0/</link><pubDate>Tue, 19 Dec 2017 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2017/12/testthat-2-0-0/</guid><description>
&lt;p>We are very excited to announce that &lt;a href="http://testthat.r-lib.org">testthat 2.0.0&lt;/a> is now available on CRAN! Testthat makes it easy to turn your existing informal tests into formal automated tests that you can rerun quickly and easily. testthat is the most popular unit testing package for R, and is used by over 2,600 CRAN packages and by many more &lt;a href="https://github.com/search?q=filename%3Atestthat.R">Github packages&lt;/a>. Learn more about unit testing at &lt;a href="http://r-pkgs.had.co.nz/tests.html" class="uri">http://r-pkgs.had.co.nz/tests.html&lt;/a>.&lt;/p>
&lt;p>Install the latest version of testthat with:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;testthat&amp;quot;)&lt;/code>&lt;/pre>
&lt;p>testthat 2.0.0 is a massive release containing a bunch of new features. For the full details, see the &lt;a href="https://github.com/r-lib/testthat/releases/tag/v2.0.0">release notes&lt;/a>, or read the hightlights below:&lt;/p>
&lt;ul>
&lt;li>&lt;p>A new default reporter revamps the output to make better use of colour.&lt;/p>&lt;/li>
&lt;li>&lt;p>New setup and teardown tools make it easier to run code before and after each test file, and before and after all tests.&lt;/p>&lt;/li>
&lt;li>&lt;p>New and improved expectations make it easier to test printed output and precisely test conditions (i.e. errors, warnings, and messages).&lt;/p>&lt;/li>
&lt;li>&lt;p>Quasiquotation support makes it easier to wrap tests in for loops and functions and still get useful failure messages.&lt;/p>&lt;/li>
&lt;li>&lt;p>Along with these new features we unfortunately also had to make a few breaking changes. We describe the symptoms and how to work around the changes below.&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>In addition, as part of a general process to make tidyverse and r-lib packages available more widely, we are now checking testthat with R 3.1, 3.2, 3.3, 3.4, and 3.5.&lt;/p>
&lt;div id="new-default-reporter" class="section level2">
&lt;h2>New default reporter&lt;/h2>
&lt;p>A new default reporter, &lt;code>ReporterProgress&lt;/code>, revamps the output to make use of colour and reveal details of failures as they occur:&lt;/p>
&lt;p>&lt;img src="https://www.tidyverse.org/images/testthat-2-0/progress.gif" />&lt;/p>
&lt;p>If you prefer the previous version, you can run it once with &lt;code>devtools::test(reporter = &amp;quot;summary&amp;quot;)&lt;/code> or turn back time by setting &lt;code>option(testthat.default_reporter = &amp;quot;summary&amp;quot;)&lt;/code>.&lt;/p>
&lt;/div>
&lt;div id="setup-and-teardown" class="section level2">
&lt;h2>Setup and teardown&lt;/h2>
&lt;p>There are two new ways to setup and teardown code:&lt;/p>
&lt;ul>
&lt;li>&lt;p>New &lt;code>setup()&lt;/code> and &lt;code>teardown()&lt;/code> functions specify code to be run at the beginning and end of each test file. Write them next to each other so you can easily confirm that each &lt;code>setup()&lt;/code> is paired with a &lt;code>teardown()&lt;/code> that cleans up any changes to the global state.&lt;/p>
&lt;pre class="r">&lt;code>tmp &amp;lt;- tempfile()
setup({
writeLines(&amp;quot;TEST DATA&amp;quot;, tmp)
})
teardown({
unlink(tmp)
})&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;p>&lt;code>tests/testthat/setup-xyz.R&lt;/code> files are run before the first test file is executed. They are similar to the existing &lt;code>helpers-xyz.R&lt;/code> files, but are not run by &lt;code>devtools::load_all()&lt;/code>. Similarly, &lt;code>test/teststhat/teardown-xyz.R&lt;/code> files are run after all tests are complete; use these to clean up any global changes made by the setup files.&lt;/p>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="new-and-improved-expectations" class="section level2">
&lt;h2>New and improved expectations&lt;/h2>
&lt;p>We have identified a new family of expectations that compares the results of an expression to a known good value stored in a file. They are designed to be used in conjunction with git so that you can see what precisely has changed, and revert it if needed:&lt;/p>
&lt;ul>
&lt;li>&lt;p>&lt;code>expect_known_output()&lt;/code> saves the output of an expression and will fail the first time the output changes. The file is updated on each run, so needs to be used in conjunction with git. It replaces &lt;code>expect_output_file()&lt;/code> which is now soft-deprecated.&lt;/p>
&lt;pre class="r">&lt;code># File to save results: would usually be filename, which will be stored
# in tests/testthat.
tmp &amp;lt;- tempfile()
# The first run always succeeds, but warns
expect_known_output(mtcars[1:10, ], tmp, print = TRUE)
#&amp;gt; Warning: Creating reference output
# Subsequent runs will suceed only if the file is unchanged
# This will succeed:
expect_known_output(mtcars[1:10, ], tmp, print = TRUE)
# This will fail
expect_known_output(mtcars[1:9, ], tmp, print = TRUE)
#&amp;gt; Error: `mtcars[1:9, ]` has changed from known value recorded in &amp;#39;/tmp/Rtmphlp98S/file481a3697072d&amp;#39;.
#&amp;gt; Lengths differ: 10 is not 11&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;p>&lt;code>expect_known_value()&lt;/code> replaces &lt;code>expect_equal_to_reference()&lt;/code>, which has been soft-deprecated. It gains an update argument defaulting to &lt;code>TRUE&lt;/code>. This changes behaviour from the previous version, and soft-deprecated &lt;code>expect_equal_to_reference()&lt;/code> gets &lt;code>update = FALSE&lt;/code>.&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>We’ve also improved tools for testing for failures:&lt;/p>
&lt;ul>
&lt;li>&lt;p>&lt;code>expect_condition()&lt;/code> works like &lt;code>expect_error()&lt;/code> but captures any condition, not just error conditions.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>expect_error()&lt;/code> gains a &lt;code>class&lt;/code> argument that allows you to make an assertion about the class of the error object.&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>We’ve also added &lt;code>expect_setequal()&lt;/code> to compares two sets (stored in vectors), ignoring duplicates and differences in order. Finally, we added a few new helpers for skipping tests:&lt;/p>
&lt;ul>
&lt;li>&lt;p>&lt;code>skip_if()&lt;/code> makes it easy to skip a test when a condition is true. For example, use &lt;code>skip_if(getRversion() &amp;lt;= 3.1)&lt;/code> to skip a test in older R versions.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>skip_if_translated()&lt;/code> skips tests if you’re running in an locale where translations are likely to occur. Use this to avoid spurious failures when checking the text of error messages in non-English locales.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>skip_if_not_installed()&lt;/code> gains new &lt;code>minimum_version&lt;/code> argument. This allows you to only test if a minimum version requrement is met, e.g.&lt;/p>
&lt;pre class="r">&lt;code>skip_if_not_installed(&amp;quot;ggplot2&amp;quot;, &amp;quot;2.0.0&amp;quot;)&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="quasiquotation-support" class="section level2">
&lt;h2>Quasiquotation support&lt;/h2>
&lt;p>All expectations can now make use of &lt;a href="https://adv-r.hadley.nz/tidy-eval">unquoting&lt;/a>, with &lt;code>!!&lt;/code>. This makes it much easier to generate informative failure messages when running tests in a for loop or function. For example take this test:&lt;/p>
&lt;pre class="r">&lt;code>f &amp;lt;- function(i) if (i &amp;gt; 3) i * 9 else i * 10
for (i in 1:5) {
expect_equal(f(i), i * 10)
}
#&amp;gt; Error: f(i) not equal to i * 10.
#&amp;gt; 1/1 mismatches
#&amp;gt; [1] 36 - 40 == -4&lt;/code>&lt;/pre>
&lt;p>The error message is not great because you don’t know which iteration caused the problem! You can resolve that problem by using the unquoting operator &lt;code>!!&lt;/code> (pronounced bang-bang):&lt;/p>
&lt;pre class="r">&lt;code>for (i in 1:5) {
expect_equal(f(!!i), !!(i * 10))
}
#&amp;gt; Error: f(4L) not equal to 40.
#&amp;gt; 1/1 mismatches
#&amp;gt; [1] 36 - 40 == -4&lt;/code>&lt;/pre>
&lt;p>(Note that this is not tidy evaluation &lt;em>per se&lt;/em>, but is closely related. It works a little differently compared to tidyverse packages because quoting is only used to generate the failure messages: see &lt;code>?quasi_label()&lt;/code> for more details. At this time you can not unquote quosures.)&lt;/p>
&lt;/div>
&lt;div id="breaking-changes" class="section level2">
&lt;h2>Breaking changes&lt;/h2>
&lt;p>Unfortunately it was necessary to make a few API breaking changes in testthat in order to make testthat more flexible for the future, and deal with some changes made to R. These changes affected around 1 in 40 packages using testthat on CRAN, and all maintainers were warned a month in advance.&lt;/p>
&lt;p>If you have a non-CRAN package, read the following list of symptoms and remedies in order to get your package working with testthat 2.0.0:&lt;/p>
&lt;ul>
&lt;li>&lt;p>&lt;strong>“Can’t mock functions in base packages”&lt;/strong>: You can no longer use &lt;code>with_mock()&lt;/code> to mock functions in base packages, because this no longer works in R-devel due to changes with the byte code compiler. I recommend using &lt;a href="https://github.com/n-s-f/mockery">mockery&lt;/a> or &lt;a href="https://github.com/krlmlr/mockr">mockr&lt;/a> instead.&lt;/p>&lt;/li>
&lt;li>&lt;p>The order of arguments to &lt;code>expect_equivalent()&lt;/code> and &lt;code>expect_error()&lt;/code> was changed slightly as both now pass &lt;code>...&lt;/code> on to another function. This reveals itself with a number of different errors, like:&lt;/p>
&lt;ul>
&lt;li>‘what’ must be a character vector&lt;/li>
&lt;li>‘check.attributes’ must be logical&lt;/li>
&lt;li>‘tolerance’ should be numeric&lt;/li>
&lt;li>argument is not interpretable as logical&lt;/li>
&lt;li>threw an error with unexpected class&lt;/li>
&lt;li>argument “quo” is missing, with no default&lt;/li>
&lt;li>argument is missing, with no default&lt;/li>
&lt;/ul>
&lt;p>If you see one of these errors, check the number, order, and names of arguments to the expectation.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;strong>“Failure: (unknown)”&lt;/strong>. The last release mistakenly failed to test bare expectations not wrapped inside &lt;code>test_that()&lt;/code>. If you see “(unknown)” in a failure message, this is a failing expectation that you previously weren’t seeing. As well as fixing the failure, please also wrap inside a &lt;code>test_that()&lt;/code> with an informative name.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;strong>“Error: the argument has already been evaluated”&lt;/strong>: the way in which expectations now create labels has changed, which caused a couple of failures with unusual usage when combined with &lt;code>Reduce&lt;/code>, &lt;code>lapply()&lt;/code>, and &lt;code>Map()&lt;/code>. Avoid these functions in favour of for loops. I also recommend reading the section on quasiquotation support (above) in order to create more informative failure messages.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>is_null()&lt;/code> and &lt;code>matches()&lt;/code> have been deprecated because they conflict with other functions in the tidyverse. Use the modern &lt;code>expect_null()&lt;/code> and &lt;code>expect_matches()&lt;/code> instead.&lt;/p>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="acknowledgements" class="section level2">
&lt;h2>Acknowledgements&lt;/h2>
&lt;p>A big thanks goes to &lt;a href="https://github.com/krlmlr">Kirill Müller&lt;/a> for his help running R CMD check on all the packages that use testthat - in total he ran R CMD check over 10,000 times! Likewise, a big thanks to the CRAN team who also have to run these checks to ensure that other packages are not broken inadvertently.&lt;/p>
&lt;p>A whopping 103 people helped to make this release happen. Thanks to everyone who opened issues and contributed code: &lt;a href="https://github.com/3psil0n">@3psil0n&lt;/a>, &lt;a href="https://github.com/agricolamz">@agricolamz&lt;/a>, &lt;a href="https://github.com/akbertram">@akbertram&lt;/a>, &lt;a href="https://github.com/AmeliaMN">@AmeliaMN&lt;/a>, &lt;a href="https://github.com/andrie">@andrie&lt;/a>, &lt;a href="https://github.com/aronatkins">@aronatkins&lt;/a>, &lt;a href="https://github.com/BarkleyBG">@BarkleyBG&lt;/a>, &lt;a href="https://github.com/bbolker">@bbolker&lt;/a>, &lt;a href="https://github.com/bc">@bc&lt;/a>, &lt;a href="https://github.com/bdwyer2">@bdwyer2&lt;/a>, &lt;a href="https://github.com/billchenxi">@billchenxi&lt;/a>, &lt;a href="https://github.com/billdenney">@billdenney&lt;/a>, &lt;a href="https://github.com/BillDunlap">@BillDunlap&lt;/a>, &lt;a href="https://github.com/boennecd">@boennecd&lt;/a>, &lt;a href="https://github.com/bradleyjeck">@bradleyjeck&lt;/a>, &lt;a href="https://github.com/briencj">@briencj&lt;/a>, &lt;a href="https://github.com/brodieG">@brodieG&lt;/a>, &lt;a href="https://github.com/carlganz">@carlganz&lt;/a>, &lt;a href="https://github.com/cbare">@cbare&lt;/a>, &lt;a href="https://github.com/cderv">@cderv&lt;/a>, &lt;a href="https://github.com/cdriveraus">@cdriveraus&lt;/a>, &lt;a href="https://github.com/cfhammill">@cfhammill&lt;/a>, &lt;a href="https://github.com/chambm">@chambm&lt;/a>, &lt;a href="https://github.com/Christoph999">@Christoph999&lt;/a>, &lt;a href="https://github.com/cogmind">@cogmind&lt;/a>, &lt;a href="https://github.com/colearendt">@colearendt&lt;/a>, &lt;a href="https://github.com/dchudz">@dchudz&lt;/a>, &lt;a href="https://github.com/dlindelof">@dlindelof&lt;/a>, &lt;a href="https://github.com/dmenne">@dmenne&lt;/a>, &lt;a href="https://github.com/dougpagani">@dougpagani&lt;/a>, &lt;a href="https://github.com/egnha">@egnha&lt;/a>, &lt;a href="https://github.com/epurdom">@epurdom&lt;/a>, &lt;a href="https://github.com/fangly">@fangly&lt;/a>, &lt;a href="https://github.com/floybix">@floybix&lt;/a>, &lt;a href="https://github.com/FrancoisGuillem">@FrancoisGuillem&lt;/a>, &lt;a href="https://github.com/frankandrobot">@frankandrobot&lt;/a>, &lt;a href="https://github.com/fritzo">@fritzo&lt;/a>, &lt;a href="https://github.com/gaborcsardi">@gaborcsardi&lt;/a>, &lt;a href="https://github.com/george-weingart">@george-weingart&lt;/a>, &lt;a href="https://github.com/hadley">@hadley&lt;/a>, &lt;a href="https://github.com/hansharhoff">@hansharhoff&lt;/a>, &lt;a href="https://github.com/hesamaseh">@hesamaseh&lt;/a>, &lt;a href="https://github.com/HyukjinKwon">@HyukjinKwon&lt;/a>, &lt;a href="https://github.com/jackolney">@jackolney&lt;/a>, &lt;a href="https://github.com/jackwasey">@jackwasey&lt;/a>, &lt;a href="https://github.com/jcheng5">@jcheng5&lt;/a>, &lt;a href="https://github.com/jdblischak">@jdblischak&lt;/a>, &lt;a href="https://github.com/jdshkolnik">@jdshkolnik&lt;/a>, &lt;a href="https://github.com/jefferis">@jefferis&lt;/a>, &lt;a href="https://github.com/jennybc">@jennybc&lt;/a>, &lt;a href="https://github.com/jeroen">@jeroen&lt;/a>, &lt;a href="https://github.com/jimhester">@jimhester&lt;/a>, &lt;a href="https://github.com/joethorley">@joethorley&lt;/a>, &lt;a href="https://github.com/jspitzen">@jspitzen&lt;/a>, &lt;a href="https://github.com/kalibera">@kalibera&lt;/a>, &lt;a href="https://github.com/katrinleinweber">@katrinleinweber&lt;/a>, &lt;a href="https://github.com/kenahoo">@kenahoo&lt;/a>, &lt;a href="https://github.com/kenahoo-windlogics">@kenahoo-windlogics&lt;/a>, &lt;a href="https://github.com/kendonB">@kendonB&lt;/a>, &lt;a href="https://github.com/kevinushey">@kevinushey&lt;/a>, &lt;a href="https://github.com/kevinykuo">@kevinykuo&lt;/a>, &lt;a href="https://github.com/kforner">@kforner&lt;/a>, &lt;a href="https://github.com/klmr">@klmr&lt;/a>, &lt;a href="https://github.com/krlmlr">@krlmlr&lt;/a>, &lt;a href="https://github.com/lbartnik">@lbartnik&lt;/a>, &lt;a href="https://github.com/lc0">@lc0&lt;/a>, &lt;a href="https://github.com/lionel-">@lionel-&lt;/a>, &lt;a href="https://github.com/lorenzwalthert">@lorenzwalthert&lt;/a>, &lt;a href="https://github.com/mahaiyer">@mahaiyer&lt;/a>, &lt;a href="https://github.com/MarkEdmondson1234">@MarkEdmondson1234&lt;/a>, &lt;a href="https://github.com/maxheld83">@maxheld83&lt;/a>, &lt;a href="https://github.com/micstr">@micstr&lt;/a>, &lt;a href="https://github.com/mllg">@mllg&lt;/a>, &lt;a href="https://github.com/mlysy">@mlysy&lt;/a>, &lt;a href="https://github.com/mschubert">@mschubert&lt;/a>, &lt;a href="https://github.com/nabilabd">@nabilabd&lt;/a>, &lt;a href="https://github.com/nealrichardson">@nealrichardson&lt;/a>, &lt;a href="https://github.com/p-smirnov">@p-smirnov&lt;/a>, &lt;a href="https://github.com/paciorek">@paciorek&lt;/a>, &lt;a href="https://github.com/pat-s">@pat-s&lt;/a>, &lt;a href="https://github.com/patperry">@patperry&lt;/a>, &lt;a href="https://github.com/r2evans">@r2evans&lt;/a>, &lt;a href="https://github.com/rdiaz02">@rdiaz02&lt;/a>, &lt;a href="https://github.com/rgknight">@rgknight&lt;/a>, &lt;a href="https://github.com/richierocks">@richierocks&lt;/a>, &lt;a href="https://github.com/robwe">@robwe&lt;/a>, &lt;a href="https://github.com/ruaridhw">@ruaridhw&lt;/a>, &lt;a href="https://github.com/s6mike">@s6mike&lt;/a>, &lt;a href="https://github.com/schoettl">@schoettl&lt;/a>, &lt;a href="https://github.com/scottkosty">@scottkosty&lt;/a>, &lt;a href="https://github.com/Stan125">@Stan125&lt;/a>, &lt;a href="https://github.com/stla">@stla&lt;/a>, &lt;a href="https://github.com/swt30">@swt30&lt;/a>, &lt;a href="https://github.com/twolodzko">@twolodzko&lt;/a>, &lt;a href="https://github.com/unDocUMeantIt">@unDocUMeantIt&lt;/a>, &lt;a href="https://github.com/vermouthmjl">@vermouthmjl&lt;/a>, &lt;a href="https://github.com/wch">@wch&lt;/a>, &lt;a href="https://github.com/wlandau-lilly">@wlandau-lilly&lt;/a>, &lt;a href="https://github.com/wligtenberg">@wligtenberg&lt;/a>, &lt;a href="https://github.com/wsloand">@wsloand&lt;/a>, &lt;a href="https://github.com/wush978">@wush978&lt;/a>, &lt;a href="https://github.com/zachcp">@zachcp&lt;/a>, and &lt;a href="https://github.com/zer0hedge">@zer0hedge&lt;/a>&lt;/p>
&lt;/div></description></item></channel></rss>