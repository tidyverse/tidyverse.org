<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tidymodels | Tidyverse</title><link>https://www.tidyverse.org/tags/tidymodels/</link><atom:link href="https://www.tidyverse.org/tags/tidymodels/index.xml" rel="self" type="application/rss+xml"/><description>tidymodels</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 28 Apr 2025 00:00:00 +0000</lastBuildDate><item><title>recipes 1.3.0</title><link>https://www.tidyverse.org/blog/2025/04/recipes-1-3-0/</link><pubDate>Mon, 28 Apr 2025 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2025/04/recipes-1-3-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re thrilled to announce the release of
&lt;a href="https://recipes.tidymodels.org/" target="_blank" rel="noopener">recipes&lt;/a> 1.3.0. recipes lets you create a pipeable sequence of feature engineering steps.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"recipes"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will walk through some of the highlights of this release, which includes changes to how &lt;code>strings_as_factors&lt;/code> are specified, deprecation of
&lt;a href="https://recipes.tidymodels.org/reference/step_select.html" target="_blank" rel="noopener">&lt;code>step_select()&lt;/code>&lt;/a>, new &lt;code>contrasts&lt;/code> argument for
&lt;a href="https://recipes.tidymodels.org/reference/step_dummy.html" target="_blank" rel="noopener">&lt;code>step_dummy()&lt;/code>&lt;/a>, and improvements for
&lt;a href="https://recipes.tidymodels.org/reference/step_impute_bag.html" target="_blank" rel="noopener">&lt;code>step_impute_bag()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>You can see a full list of changes in the
&lt;a href="https://recipes.tidymodels.org/news/index.html#recipes-130" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;p>Let&amp;rsquo;s first load the package:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/recipes'>recipes&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="strings_as_factors">&lt;code>strings_as_factors&lt;/code>
&lt;a href="#strings_as_factors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Recipes by default convert predictor strings to factors, and the option for that is located in
&lt;a href="https://recipes.tidymodels.org/reference/prep.html" target="_blank" rel="noopener">&lt;code>prep()&lt;/code>&lt;/a>. This caused an issue when you wanted to set &lt;code>strings_as_factors = FALSE&lt;/code> for a recipe that is used somewhere else like in a workflow.&lt;/p>
&lt;p>This is no longer an issue as we have moved the argument to
&lt;a href="https://recipes.tidymodels.org/reference/recipe.html" target="_blank" rel="noopener">&lt;code>recipe()&lt;/code>&lt;/a> itself. We are at the same time deprecating the use of &lt;code>strings_as_factors&lt;/code> when used in
&lt;a href="https://recipes.tidymodels.org/reference/prep.html" target="_blank" rel="noopener">&lt;code>prep()&lt;/code>&lt;/a>. Here is an example:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://modeldata.tidymodels.org'>modeldata&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>tate_text&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4,284 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id artist title medium year&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='text-decoration: underline;'>21&lt;/span>926 Absalon Proposals for a Habitat Video… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>472 Auerbach, Frank Michael Etchi… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>474 Auerbach, Frank Geoffrey Etchi… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>473 Auerbach, Frank Jake Etchi… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>513 Auerbach, Frank To the Studios Oil p… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='text-decoration: underline;'>21&lt;/span>389 Ayres, OBE Gillian Phaëthon Oil p… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='text-decoration: underline;'>121&lt;/span>187 Barlow, Phyllida Untitled Acryl… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='text-decoration: underline;'>19&lt;/span>455 Baselitz, Georg Green VIII Woodc… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>938 Beattie, Basil Present Bound Oil p… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='text-decoration: underline;'>105&lt;/span>941 Beuys, Joseph Joseph Beuys: A Private Collection. A… Print… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 4,274 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We are loading the modeldata package to get &lt;code>tate_text&lt;/code> which has a character column &lt;code>title&lt;/code>. If we don&amp;rsquo;t do anything then it turns into a factor.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span>&lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>tate_text&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tate_text&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4,284 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id artist title medium year&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='text-decoration: underline;'>21&lt;/span>926 Absalon Proposals for a Habitat Video… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>472 Auerbach, Frank Michael Etchi… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>474 Auerbach, Frank Geoffrey Etchi… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>473 Auerbach, Frank Jake Etchi… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>513 Auerbach, Frank To the Studios Oil p… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='text-decoration: underline;'>21&lt;/span>389 Ayres, OBE Gillian Phaëthon Oil p… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='text-decoration: underline;'>121&lt;/span>187 Barlow, Phyllida Untitled Acryl… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='text-decoration: underline;'>19&lt;/span>455 Baselitz, Georg Green VIII Woodc… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>938 Beattie, Basil Present Bound Oil p… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='text-decoration: underline;'>105&lt;/span>941 Beuys, Joseph Joseph Beuys: A Private Collection. A… Print… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 4,274 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>But we can set &lt;code>strings_as_factors = FALSE&lt;/code> in
&lt;a href="https://recipes.tidymodels.org/reference/recipe.html" target="_blank" rel="noopener">&lt;code>recipe()&lt;/code>&lt;/a> and it won&amp;rsquo;t anymore.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span>&lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>tate_text&lt;/span>, strings_as_factors &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tate_text&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4,284 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id artist title medium year&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='text-decoration: underline;'>21&lt;/span>926 Absalon Proposals for a Habitat Video… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>472 Auerbach, Frank Michael Etchi… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>474 Auerbach, Frank Geoffrey Etchi… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>473 Auerbach, Frank Jake Etchi… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>513 Auerbach, Frank To the Studios Oil p… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='text-decoration: underline;'>21&lt;/span>389 Ayres, OBE Gillian Phaëthon Oil p… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='text-decoration: underline;'>121&lt;/span>187 Barlow, Phyllida Untitled Acryl… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='text-decoration: underline;'>19&lt;/span>455 Baselitz, Georg Green VIII Woodc… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='text-decoration: underline;'>20&lt;/span>938 Beattie, Basil Present Bound Oil p… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='text-decoration: underline;'>105&lt;/span>941 Beuys, Joseph Joseph Beuys: A Private Collection. A… Print… &lt;span style='text-decoration: underline;'>1&lt;/span>990&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 4,274 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This change should also make pragmatic sense as whether you want to turn strings into factors is something that should encoded into the recipe itself.&lt;/p>
&lt;h2 id="deprecating-step_select">Deprecating &lt;code>step_select()&lt;/code>
&lt;a href="#deprecating-step_select">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We have started the process of deprecating
&lt;a href="https://recipes.tidymodels.org/reference/step_select.html" target="_blank" rel="noopener">&lt;code>step_select()&lt;/code>&lt;/a>. Given the number of issues people are having with the step and the fact that it doesn&amp;rsquo;t play well with workflows we think this is the right call.&lt;/p>
&lt;p>There are two main use cases where
&lt;a href="https://recipes.tidymodels.org/reference/step_select.html" target="_blank" rel="noopener">&lt;code>step_select()&lt;/code>&lt;/a> was used: removing variables, and selecting variables. Removing variables when done with &lt;code>-&lt;/code> in
&lt;a href="https://recipes.tidymodels.org/reference/step_select.html" target="_blank" rel="noopener">&lt;code>step_select()&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_select.html'>step_select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"d"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>new_data &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NULL&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 32 × 9&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; cyl hp wt qsec vs am gear carb mpg&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 6 110 2.62 16.5 0 1 4 4 21 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 6 110 2.88 17.0 0 1 4 4 21 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 4 93 2.32 18.6 1 1 4 1 22.8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 6 110 3.22 19.4 1 0 3 1 21.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 8 175 3.44 17.0 0 0 3 2 18.7&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 6 105 3.46 20.2 1 0 3 1 18.1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 8 245 3.57 15.8 0 0 3 4 14.3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 4 62 3.19 20 1 0 4 2 24.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 4 95 3.15 22.9 1 0 4 2 22.8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 6 123 3.44 18.3 1 0 4 4 19.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 22 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>These use cases can seamlessly be converted to use
&lt;a href="https://recipes.tidymodels.org/reference/step_rm.html" target="_blank" rel="noopener">&lt;code>step_rm()&lt;/code>&lt;/a> without the &lt;code>-&lt;/code> for the same result.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_rm.html'>step_rm&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"d"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>new_data &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NULL&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 32 × 9&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; cyl hp wt qsec vs am gear carb mpg&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 6 110 2.62 16.5 0 1 4 4 21 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 6 110 2.88 17.0 0 1 4 4 21 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 4 93 2.32 18.6 1 1 4 1 22.8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 6 110 3.22 19.4 1 0 3 1 21.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 8 175 3.44 17.0 0 0 3 2 18.7&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 6 105 3.46 20.2 1 0 3 1 18.1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 8 245 3.57 15.8 0 0 3 4 14.3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 4 62 3.19 20 1 0 4 2 24.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 4 95 3.15 22.9 1 0 4 2 22.8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 6 123 3.44 18.3 1 0 4 4 19.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 22 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>For selecting variables there are two cases. The first is as a tool to select which variables to use in our model. We recommend that you use
&lt;a href="https://dplyr.tidyverse.org/reference/select.html" target="_blank" rel="noopener">&lt;code>select()&lt;/code>&lt;/a> to do that before passing the data into the
&lt;a href="https://recipes.tidymodels.org/reference/recipe.html" target="_blank" rel="noopener">&lt;code>recipe()&lt;/code>&lt;/a>. This is especially helpful since
&lt;a href="https://www.tidyverse.org/blog/2024/07/recipes-1-1-0/#column-type-checking" target="_blank" rel="noopener">recipes are tighter with respect to their input types&lt;/a>, so only passing the data you need to use is helpful.&lt;/p>
&lt;p>If you need to do the selection after another step takes effect you should still be able to do so, by using
&lt;a href="https://recipes.tidymodels.org/reference/step_rm.html" target="_blank" rel="noopener">&lt;code>step_rm()&lt;/code>&lt;/a> in the following manner.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">step_rm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">recipe&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nf">all_of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">variables&lt;/span> &lt;span class="n">that&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">want&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">keep&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="step_dummy-contrasts-argument">&lt;code>step_dummy()&lt;/code> contrasts argument
&lt;a href="#step_dummy-contrasts-argument">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Contrasts such as
&lt;a href="https://rdrr.io/r/stats/contrast.html" target="_blank" rel="noopener">&lt;code>contr.treatment()&lt;/code>&lt;/a> and
&lt;a href="https://rdrr.io/r/stats/contrast.html" target="_blank" rel="noopener">&lt;code>contr.poly()&lt;/code>&lt;/a> are used in
&lt;a href="https://recipes.tidymodels.org/reference/step_dummy.html" target="_blank" rel="noopener">&lt;code>step_dummy()&lt;/code>&lt;/a> to determine how the steps should translate categorical values into one or more numeric columns. Traditionally the contrasts were set using
&lt;a href="https://rdrr.io/r/base/options.html" target="_blank" rel="noopener">&lt;code>options()&lt;/code>&lt;/a> like so:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/options.html'>options&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>contrasts &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>unordered &lt;span class='o'>=&lt;/span> &lt;span class='s'>"contr.poly"&lt;/span>, ordered &lt;span class='o'>=&lt;/span> &lt;span class='s'>"contr.poly"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span>&lt;span class='nv'>species&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>island&lt;/span>, &lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_dummy.html'>step_dummy&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_nominal_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 344 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species_Chinstrap species_Gentoo island_Dream island_Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 334 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The issue with this approach is that it pulls from
&lt;a href="https://rdrr.io/r/base/options.html" target="_blank" rel="noopener">&lt;code>options()&lt;/code>&lt;/a> when it needs it instead of storing the information. This means that if you put this recipe in production you will need to set the option in the production environment to match that of the training environment.&lt;/p>
&lt;div class="highlight">
&lt;/div>
&lt;p>To fix this issue we have given
&lt;a href="https://recipes.tidymodels.org/reference/step_dummy.html" target="_blank" rel="noopener">&lt;code>step_dummy()&lt;/code>&lt;/a> an argument &lt;code>contrasts&lt;/code> that work in much the same way. You simply specify the contrast you want and it will be stored in the object for easy deployment.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span>&lt;span class='nv'>species&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>island&lt;/span>, &lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_dummy.html'>step_dummy&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_nominal_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, contrasts &lt;span class='o'>=&lt;/span> &lt;span class='s'>"contr.poly"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 344 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species_Chinstrap species_Gentoo island_Dream island_Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> -&lt;span style='color: #BB0000;'>0.707&lt;/span> 0.408 0.707 0.408&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 334 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you are using a contrasts from an external package such as
&lt;a href="https://hardhat.tidymodels.org/reference/contr_one_hot.html" target="_blank" rel="noopener">&lt;code>hardhat::contr_one_hot()&lt;/code>&lt;/a> you will need to have the package loaded in the environments you are working in with
&lt;a href="https://github.com/tidymodels/hardhat" target="_blank" rel="noopener">&lt;code>library(hardhat)&lt;/code>&lt;/a> and setting &lt;code>contrasts = &amp;quot;contr_one_hot&amp;quot;&lt;/code>. You will also need to call
&lt;a href="https://github.com/tidymodels/hardhat" target="_blank" rel="noopener">&lt;code>library(hardhat)&lt;/code>&lt;/a> in any production environments you are using this recipe.&lt;/p>
&lt;h2 id="tidyselect-can-be-used-everywhere">tidyselect can be used everywhere
&lt;a href="#tidyselect-can-be-used-everywhere">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Several steps such as
&lt;a href="https://recipes.tidymodels.org/reference/step_pls.html" target="_blank" rel="noopener">&lt;code>step_pls()&lt;/code>&lt;/a> and
&lt;a href="https://recipes.tidymodels.org/reference/step_impute_bag.html" target="_blank" rel="noopener">&lt;code>step_impute_bag()&lt;/code>&lt;/a> require the selection of more than just the affected columns.
&lt;a href="https://recipes.tidymodels.org/reference/step_pls.html" target="_blank" rel="noopener">&lt;code>step_pls()&lt;/code>&lt;/a> needs you to select an &lt;code>outcome&lt;/code> variable and
&lt;a href="https://recipes.tidymodels.org/reference/step_impute_bag.html" target="_blank" rel="noopener">&lt;code>step_impute_bag()&lt;/code>&lt;/a> needs you to select which variables to impute with, &lt;code>impute_with&lt;/code>, if you don&amp;rsquo;t want to use all predictors. Previously these needed to be strings or use special selectors like
&lt;a href="https://recipes.tidymodels.org/reference/step_impute_bag.html" target="_blank" rel="noopener">&lt;code>imp_vars()&lt;/code>&lt;/a>. You don&amp;rsquo;t have to do that anymore. You can now use tidyselect in these arguments too.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_pls.html'>step_pls&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, outcome &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mpg&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 32 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mpg PLS1 PLS2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 21 0.693 0.895&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 21 0.650 0.654&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 22.8 2.78 0.378&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 21.4 0.210 -&lt;span style='color: #BB0000;'>0.368&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 18.7 -&lt;span style='color: #BB0000;'>1.95&lt;/span> 0.845&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 18.1 0.137 -&lt;span style='color: #BB0000;'>0.624&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 14.3 -&lt;span style='color: #BB0000;'>2.77&lt;/span> 0.364&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 24.4 1.81 -&lt;span style='color: #BB0000;'>1.30&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 22.8 2.12 -&lt;span style='color: #BB0000;'>1.95&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 19.2 0.531 -&lt;span style='color: #BB0000;'>1.51&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 22 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>For arguments that allow for multiple selections now work with recipes selectors like
&lt;a href="https://recipes.tidymodels.org/reference/has_role.html" target="_blank" rel="noopener">&lt;code>all_numeric_predictors()&lt;/code>&lt;/a> and
&lt;a href="https://recipes.tidymodels.org/reference/has_role.html" target="_blank" rel="noopener">&lt;code>has_role()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_impute_bag.html'>step_impute_bag&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, impute_with &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>has_role&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"predictor"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 32 × 11&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; cyl disp hp drat wt qsec vs am gear carb mpg&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 6 160 110 3.9 2.62 16.5 0 1 4 4 21 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 6 160 110 3.9 2.88 17.0 0 1 4 4 21 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 4 108 93 3.85 2.32 18.6 1 1 4 1 22.8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 6 258 110 3.08 3.22 19.4 1 0 3 1 21.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 8 360 175 3.15 3.44 17.0 0 0 3 2 18.7&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 6 225 105 2.76 3.46 20.2 1 0 3 1 18.1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 8 360 245 3.21 3.57 15.8 0 0 3 4 14.3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 4 147. 62 3.69 3.19 20 1 0 4 2 24.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 4 141. 95 3.92 3.15 22.9 1 0 4 2 22.8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 6 168. 123 3.92 3.44 18.3 1 0 4 4 19.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 22 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>These changes are backwards compatible meaning that the old ways still work with minimal warnings.&lt;/p>
&lt;h2 id="step_impute_bag-now-takes-up-less-memory">&lt;code>step_impute_bag()&lt;/code> now takes up less memory
&lt;a href="#step_impute_bag-now-takes-up-less-memory">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We have another benefit for users of
&lt;a href="https://recipes.tidymodels.org/reference/step_impute_bag.html" target="_blank" rel="noopener">&lt;code>step_impute_bag()&lt;/code>&lt;/a>. For each variable it imputes on, it fits a bagged tree model, which is then used to predict with for imputation. It was noticed that these models had a larger memory footprint than was needed. This has been remedied, so now there should be a noticeable decrease in size for recipes with
&lt;a href="https://recipes.tidymodels.org/reference/step_impute_bag.html" target="_blank" rel="noopener">&lt;code>step_impute_bag()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_impute_bag.html'>step_impute_bag&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Lot_"&lt;/span>&lt;span class='o'>)&lt;/span>, impute_with &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_numeric_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>lobstr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://lobstr.r-lib.org/reference/obj_size.html'>obj_size&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>rec&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 20.23 MB&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This recipe took up over &lt;code>75 MB&lt;/code> and now takes up &lt;code>20 MB&lt;/code>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many thanks to all the people who contributed to recipes since the last release!&lt;/p>
&lt;p>
&lt;a href="https://github.com/chillerb" target="_blank" rel="noopener">@chillerb&lt;/a>,
&lt;a href="https://github.com/dshemetov" target="_blank" rel="noopener">@dshemetov&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/kevbaer" target="_blank" rel="noopener">@kevbaer&lt;/a>,
&lt;a href="https://github.com/nhward" target="_blank" rel="noopener">@nhward&lt;/a>,
&lt;a href="https://github.com/regisely" target="_blank" rel="noopener">@regisely&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p></description></item><item><title>rsample 1.3.0</title><link>https://www.tidyverse.org/blog/2025/04/rsample-1-3-0/</link><pubDate>Thu, 03 Apr 2025 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2025/04/rsample-1-3-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re thrilled to announce the release of
&lt;a href="https://rsample.tidymodels.org/" target="_blank" rel="noopener">rsample&lt;/a> 1.3.0. rsample makes it easy to create resamples for assessing model performance. It is part of the tidymodels framework, a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"rsample"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will walk you through the more flexible grouping for calculating bootstrap confidence intervals and highlight the contributions made by participants of the tidyverse developer day.&lt;/p>
&lt;p>You can see a full list of changes in the
&lt;a href="https://rsample.tidymodels.org/news/index.html#rsample-130" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://rsample.tidymodels.org'>rsample&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="flexible-grouping-for-bootstrap-intervals">Flexible grouping for bootstrap intervals
&lt;a href="#flexible-grouping-for-bootstrap-intervals">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Resampling allows you get an understanding of the variability of an estimate, e.g., a summary statistic of your data. If you want to lean on statistical theory and get confidence intervals for your estimate, you can reach for the bootstrap resampling scheme: calculating your summary statistic on the bootstrap samples enables you to calculate confidence intervals around your point estimate.&lt;/p>
&lt;p>rsample contains a family of &lt;code>int_*()&lt;/code> functions to calculate bootstrap confidence intervals of different flavors: percentile intervals, &amp;ldquo;BCa&amp;rdquo; intervals, and bootstrap-t intervals. If you want to dive into the technical details, Chapter 11 of
&lt;a href="https://hastie.su.domains/CASI/" target="_blank" rel="noopener">CASI&lt;/a> is a good place to start.&lt;/p>
&lt;p>You can calculate the confidence intervals based on a grouping in your data. However, so far, rsample would only let you provide a single grouping variable. With this release, we are extending this functionality to allow a more flexible grouping.&lt;/p>
&lt;p>The motivating application for us was to be able to calculate confidence intervals around multiple model performance metrics, including dynamic metrics for time-to-event models which depend on an evaluation time point. So in this case, the metric is one grouping variable and the evaluation time another. But let&amp;rsquo;s pull back complexity for an example of how the new rsample functionality works!&lt;/p>
&lt;p>We have a dataset with delivery times for orders containing one or more items. We&amp;rsquo;ll do some data wrangling with it, so we are also loading dplyr.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Attaching package: 'dplyr'&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; The following objects are masked from 'package:stats':&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; filter, lag&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; The following objects are masked from 'package:base':&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; intersect, setdiff, setequal, union&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>deliveries&lt;/span>, package &lt;span class='o'>=&lt;/span> &lt;span class='s'>"modeldata"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>deliveries&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 10,012 × 31&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; time_to_delivery hour day distance item_01 item_02 item_03 item_04 item_05&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 16.1 11.9 Thu 3.15 0 0 2 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 22.9 19.2 Tue 3.69 0 0 0 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 30.3 18.4 Fri 2.06 0 0 0 0 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 33.4 15.8 Thu 5.97 0 0 0 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 27.2 19.6 Fri 2.52 0 0 0 1 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 19.6 13.0 Sat 3.35 1 0 0 1 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 22.1 15.5 Sun 2.46 0 0 1 1 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 26.6 17.0 Thu 2.21 0 0 1 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 30.8 16.7 Fri 2.62 0 0 0 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 17.4 11.9 Sun 2.75 0 2 1 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 10,002 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 22 more variables: item_06 &amp;lt;int&amp;gt;, item_07 &amp;lt;int&amp;gt;, item_08 &amp;lt;int&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># item_09 &amp;lt;int&amp;gt;, item_10 &amp;lt;int&amp;gt;, item_11 &amp;lt;int&amp;gt;, item_12 &amp;lt;int&amp;gt;, item_13 &amp;lt;int&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># item_14 &amp;lt;int&amp;gt;, item_15 &amp;lt;int&amp;gt;, item_16 &amp;lt;int&amp;gt;, item_17 &amp;lt;int&amp;gt;, item_18 &amp;lt;int&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># item_19 &amp;lt;int&amp;gt;, item_20 &amp;lt;int&amp;gt;, item_21 &amp;lt;int&amp;gt;, item_22 &amp;lt;int&amp;gt;, item_23 &amp;lt;int&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># item_24 &amp;lt;int&amp;gt;, item_25 &amp;lt;int&amp;gt;, item_26 &amp;lt;int&amp;gt;, item_27 &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Instead of fitting a whole model here, we are calculating a straightforward summary statistic for how much delivery time increases if an item is included in the order. So the item is one grouping factor. As a second one, we are using whether the order was delivered on a weekday or a weekend. Let&amp;rsquo;s start by making that weekend indicator and reshaping the data to make it easier to calculate our summary statistic.&lt;/p>
&lt;p>Note that the name for the weekend indicator column, &lt;code>.weekend&lt;/code>, starts with a dot. That is important as it is the convention to signal to rsample that this is an additional grouping variable.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>item_data&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>deliveries&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>.weekend &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/ifelse.html'>ifelse&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>day&lt;/span> &lt;span class='o'>&lt;a href='https://rdrr.io/r/base/match.html'>%in%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Sat"&lt;/span>, &lt;span class='s'>"Sun"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='s'>"weekend"&lt;/span>, &lt;span class='s'>"weekday"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time_to_delivery&lt;/span>, &lt;span class='nv'>.weekend&lt;/span>, &lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"item"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>tidyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_longer.html'>pivot_longer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"item"&lt;/span>&lt;span class='o'>)&lt;/span>, names_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"item"&lt;/span>, values_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"value"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Next, we are making a small function that calculates the ratio of average delivery times with and without the item included in the order, as a estimate of how much a specific item in an order increases the delivery time.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>relative_increase&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>data&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>data&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>includes_item &lt;span class='o'>=&lt;/span> &lt;span class='nv'>value&lt;/span> &lt;span class='o'>&amp;gt;&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> has &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time_to_delivery&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='nv'>includes_item&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> has_not &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time_to_delivery&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='o'>!&lt;/span>&lt;span class='nv'>includes_item&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> .by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>item&lt;/span>, &lt;span class='nv'>.weekend&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>estimate &lt;span class='o'>=&lt;/span> &lt;span class='nv'>has&lt;/span> &lt;span class='o'>/&lt;/span> &lt;span class='nv'>has_not&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>term &lt;span class='o'>=&lt;/span> &lt;span class='nv'>item&lt;/span>, &lt;span class='nv'>.weekend&lt;/span>, &lt;span class='nv'>estimate&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can calculate that on our entire dataset.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>relative_increase&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>item_data&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 54 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; term .weekend estimate&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> item_01 weekday 1.07&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> item_02 weekday 1.02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> item_03 weekday 1.02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> item_04 weekday 1.00&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> item_05 weekday 1.00&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> item_06 weekday 1.01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> item_07 weekday 1.03&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> item_08 weekday 1.01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> item_09 weekday 1.01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> item_10 weekday 1.06&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 44 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This is fine, but what we really want here is to get confidence intervals around these estimates!&lt;/p>
&lt;p>So let&amp;rsquo;s make bootstrap samples and calculate our statistic on those.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>item_bootstrap&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/bootstraps.html'>bootstraps&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>item_data&lt;/span>, times &lt;span class='o'>=&lt;/span> &lt;span class='m'>1000&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>item_stats&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>item_bootstrap&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stats &lt;span class='o'>=&lt;/span> &lt;span class='nf'>purrr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map.html'>map&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>splits&lt;/span>, &lt;span class='o'>~&lt;/span> &lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/as.data.frame.rsplit.html'>analysis&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>.x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>relative_increase&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now we have everything we need to calculate the confidence intervals, stashed into the tibbles in the &lt;code>stats&lt;/code> column: an &lt;code>estimate&lt;/code>, a &lt;code>term&lt;/code> (the primary grouping variable), and our additional grouping variable &lt;code>.weekend&lt;/code>, starting with a dot. What&amp;rsquo;s left to do is call one of the &lt;code>int_*()&lt;/code> functions and specify which column contains the statistics. Here, we&amp;rsquo;ll calculate percentile intervals with
&lt;a href="https://rsample.tidymodels.org/reference/int_pctl.html" target="_blank" rel="noopener">&lt;code>int_pctl()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>item_ci&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/int_pctl.html'>int_pctl&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>item_stats&lt;/span>, statistics &lt;span class='o'>=&lt;/span> &lt;span class='nv'>stats&lt;/span>, alpha &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>item_ci&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 54 × 7&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; term .weekend .lower .estimate .upper .alpha .method &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> item_01 weekday 1.05 1.07 1.09 0.1 percentile&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> item_01 weekend 1.04 1.07 1.10 0.1 percentile&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> item_02 weekday 1.00 1.02 1.03 0.1 percentile&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> item_02 weekend 0.996 1.01 1.03 0.1 percentile&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> item_03 weekday 1.01 1.02 1.04 0.1 percentile&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> item_03 weekend 0.970 0.990 1.01 0.1 percentile&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> item_04 weekday 0.989 1.00 1.02 0.1 percentile&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> item_04 weekend 0.998 1.02 1.03 0.1 percentile&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> item_05 weekday 0.987 1.00 1.02 0.1 percentile&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> item_05 weekend 0.982 1.00 1.03 0.1 percentile&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 44 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="tidyverse-developer-day">Tidyverse developer day
&lt;a href="#tidyverse-developer-day">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>At the tidyverse developer day after posit::conf, rsample got a lot of love in form of contributions by various community members. People improved documentation and examples, move deprecations along, tightened checks to support good practice, and upgraded errors and warnings, both in style and content. None of these changes are flashy new features but all of them are essential to rsample working well!&lt;/p>
&lt;p>So for example, leave-one-out (LOO) cross-validation is not a great choice of resampling scheme in most situations. From
&lt;a href="https://www.tmwr.org/resampling#leave-one-out-cross-validation" target="_blank" rel="noopener">Tidy modeling with R&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>For anything but pathologically small samples, LOO is computationally excessive, and it may not have good statistical properties.&lt;/p>
&lt;/blockquote>
&lt;p>It was possible, however, to create implicit LOO samples by using
&lt;a href="https://rsample.tidymodels.org/reference/vfold_cv.html" target="_blank" rel="noopener">&lt;code>vfold_cv()&lt;/code>&lt;/a> with the number of folds set to the number of rows in the data. With a dev day contribution, this now errors:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/vfold_cv.html'>vfold_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>, v &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/nrow.html'>nrow&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `vfold_cv()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Leave-one-out cross-validation is not supported by this function.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> You set `v` to `nrow(data)`, which would result in a leave-one-out&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; cross-validation.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Use `loo_cv()` in this case.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This is to make users pause and consider if this a good choice for their dataset. If you require LOO, you can still use
&lt;a href="https://rsample.tidymodels.org/reference/loo_cv.html" target="_blank" rel="noopener">&lt;code>loo_cv()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Error messages in general have been a focus of ours across various tidymodels packages, rsample is no exception. We opened a bunch of issues to tackle all of rsample - and all got closed! Some of these changes are purely internal, upgrading manual formatting to let the cli package do the work. While the error message in most cases doesn&amp;rsquo;t &lt;em>look&lt;/em> different, it&amp;rsquo;s a great deal more consistency in formatting.&lt;/p>
&lt;p>For some error messages, the additional functionality in cli makes it easy to improve readability. This error message used to be one block of text, now it comes as three bullet points.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/permutations.html'>permutations&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>, &lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/everything.html'>everything&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `permutations()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> You have selected all columns to permute.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> This effectively reorders the rows in the original data without changing the&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; data structure.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; → Please select fewer columns to permute.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Changes like these are super helpful to users and developers alike. A big thank you to all the contributors!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many thanks to all the people who contributed to rsample since the last release!&lt;/p>
&lt;p>
&lt;a href="https://github.com/agmurray" target="_blank" rel="noopener">@agmurray&lt;/a>,
&lt;a href="https://github.com/brshallo" target="_blank" rel="noopener">@brshallo&lt;/a>,
&lt;a href="https://github.com/ccani007" target="_blank" rel="noopener">@ccani007&lt;/a>,
&lt;a href="https://github.com/dicook" target="_blank" rel="noopener">@dicook&lt;/a>,
&lt;a href="https://github.com/Dpananos" target="_blank" rel="noopener">@Dpananos&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gregor-fausto" target="_blank" rel="noopener">@gregor-fausto&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/JamesHWade" target="_blank" rel="noopener">@JamesHWade&lt;/a>,
&lt;a href="https://github.com/jttoivon" target="_blank" rel="noopener">@jttoivon&lt;/a>,
&lt;a href="https://github.com/krz" target="_blank" rel="noopener">@krz&lt;/a>,
&lt;a href="https://github.com/laurabrianna" target="_blank" rel="noopener">@laurabrianna&lt;/a>,
&lt;a href="https://github.com/malcolmbarrett" target="_blank" rel="noopener">@malcolmbarrett&lt;/a>,
&lt;a href="https://github.com/MatthieuStigler" target="_blank" rel="noopener">@MatthieuStigler&lt;/a>,
&lt;a href="https://github.com/msberends" target="_blank" rel="noopener">@msberends&lt;/a>,
&lt;a href="https://github.com/nmercadeb" target="_blank" rel="noopener">@nmercadeb&lt;/a>,
&lt;a href="https://github.com/PriKalra" target="_blank" rel="noopener">@PriKalra&lt;/a>,
&lt;a href="https://github.com/seb09" target="_blank" rel="noopener">@seb09&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/ZWael" target="_blank" rel="noopener">@ZWael&lt;/a>, and
&lt;a href="https://github.com/zz77zz" target="_blank" rel="noopener">@zz77zz&lt;/a>.&lt;/p></description></item><item><title>Improved sparsity support in tidymodels</title><link>https://www.tidyverse.org/blog/2025/03/tidymodels-sparsity/</link><pubDate>Wed, 19 Mar 2025 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2025/03/tidymodels-sparsity/</guid><description>&lt;p>Photo by &lt;a href="https://unsplash.com/@oxygenvisuals?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Oliver Olah&lt;/a> on &lt;a href="https://unsplash.com/photos/green-tree-in-the-middle-of-grass-field-KD8nzFznQQ0?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Unsplash&lt;/a>&lt;/p>
&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re stoked to announce tidymodels now fully supports sparse data from end to end. We have been working on this for
&lt;a href="https://github.com/tidymodels/recipes/pull/515" target="_blank" rel="noopener">over 5 years&lt;/a>. This is an extension of the work we have done
&lt;a href="https://www.tidyverse.org/blog/2020/11/tidymodels-sparse-support/" target="_blank" rel="noopener">previously&lt;/a> with blueprints, which would carry the data sparsely some of the way.&lt;/p>
&lt;p>You will need
&lt;a href="https://recipes.tidymodels.org/news/index.html#recipes-120" target="_blank" rel="noopener">recipes 1.2.0&lt;/a>,
&lt;a href="https://parsnip.tidymodels.org/news/index.html#parsnip-130" target="_blank" rel="noopener">parsnip 1.3.0&lt;/a>,
&lt;a href="https://workflows.tidymodels.org/news/index.html#workflows-120" target="_blank" rel="noopener">workflows 1.2.0&lt;/a> or later for this to work.&lt;/p>
&lt;h2 id="what-are-sparse-data">What are sparse data?
&lt;a href="#what-are-sparse-data">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The term &lt;strong>sparse data&lt;/strong> refers to a data set containing many zeroes. Sparse data appears in all kinds of fields and can be produced in a number of preprocessing methods. The reason why we care about sparse data is because of how computers store numbers. A 32-bit integer value takes 4 bytes to store. An array of 32-bit integers takes 40 bytes, and so on. This happens because each value is written down.&lt;/p>
&lt;p>A sparse representation instead stores the locations and values of the non-zero entries. Suppose we have the following vector with 20 entries:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It could be represented sparsely using the 3 values &lt;code>positions = c(1, 3, 7)&lt;/code>, &lt;code>values = c(3, 5, 8)&lt;/code>, and &lt;code>length = 20&lt;/code>. Now, we have seven values to represent a vector of 20 elements. Since some modeling tasks contain even sparser data, this type of representation starts to show real benefits in terms of execution time and memory consumption.&lt;/p>
&lt;p>The tidymodels set of packages has undergone several internal changes to allow it to represent data sparsely internally when it would be beneficial. These changes allow you to fit models that contain sparse data faster and more memory efficiently than before. Moreover, it allows you to fit models previously not possible due to them not fitting in memory.&lt;/p>
&lt;h2 id="sparse-matrix-support">Sparse matrix support
&lt;a href="#sparse-matrix-support">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The first benefit of these changes is that &lt;code>recipe()&lt;/code>, &lt;code>prep()&lt;/code>, &lt;code>bake()&lt;/code>, &lt;code>fit()&lt;/code>, and
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> now accept sparse matrices created using the Matrix package.&lt;/p>
&lt;p>The &lt;code>permeability_qsar&lt;/code> data set from the modeldata package contains quite a lot of zeroes in the predictors, so we will use it as a demonstration. Starting by coercing it into a sparse matrix.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://Matrix.R-forge.R-project.org'>Matrix&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>permeability_sparse&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/methods/as.html'>as&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/matrix.html'>as.matrix&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>permeability_qsar&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='s'>"sparseMatrix"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can now use this sparse matrix in our code the same way as a dense matrix or data frame:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>rec_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>permeability&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>permeability_sparse&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_zv&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>mod_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>boost_tree&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>, &lt;span class='s'>"xgboost"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>wf_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>rec_spec&lt;/span>, &lt;span class='nv'>mod_spec&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Model training has the usual syntax:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>wf_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wf_spec&lt;/span>, &lt;span class='nv'>permeability_sparse&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>as does prediction:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wf_fit&lt;/span>, &lt;span class='nv'>permeability_sparse&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 165 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 10.5 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 1.50 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 13.1 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 1.10 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 1.25 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 0.738&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 29.3 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 2.44 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 36.3 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 4.31 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 155 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that only some models/engines work well with sparse data. These are all listed here &lt;a href="https://www.tidymodels.org/find/sparse/">https://www.tidymodels.org/find/sparse/&lt;/a>. If the model doesn&amp;rsquo;t support sparse data, it will be coerced into the default non-sparse representation and used as usual.&lt;/p>
&lt;p>With a few exceptions, it should work like any other data set. However, this approach has two main limitations. The first is that we are limited to regression tasks since the outcome has to be numeric to be part of the sparse matrix.&lt;/p>
&lt;p>The second limitation is that it only works with non-formula methods for parsnip and workflows. This means that you can use a recipe with &lt;code>add_recipe()&lt;/code> or select variables directly with &lt;code>add_variables()&lt;/code> when using a workflow. And you need to use &lt;code>fit_xy()&lt;/code> instead of &lt;code>fit()&lt;/code> when using a parsnip object by itself.&lt;/p>
&lt;p>If this is of interest we also have a &lt;a href="https://www.tidymodels.org/">https://www.tidymodels.org/&lt;/a> post about
&lt;a href="https://www.tidymodels.org/learn/work/sparse-matrix/" target="_blank" rel="noopener">using sparse matrices in tidymodels&lt;/a>.&lt;/p>
&lt;h2 id="sparse-data-from-recipes-steps">Sparse data from recipes steps
&lt;a href="#sparse-data-from-recipes-steps">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Where this sparsity support really starts to shine is when the recipe we use will generate sparse data. They come in two flavors, sparsity creation steps and sparsity preserving steps. Both listed here: &lt;a href="https://www.tidymodels.org/find/sparse/">https://www.tidymodels.org/find/sparse/&lt;/a>.&lt;/p>
&lt;p>Some steps like &lt;code>step_dummy()&lt;/code>, &lt;code>step_indicate_na()&lt;/code>, and
&lt;a href="https://textrecipes.tidymodels.org/reference/step_tf.html" target="_blank" rel="noopener">&lt;code>textrecipes::step_tf()&lt;/code>&lt;/a> will almost always produce a lot of zeroes. We take advantage of that by generating it sparsely when it is beneficial. If these steps end up producing sparse vectors, we want to make sure the sparsity is preserved. A couple of handfuls of steps, such as &lt;code>step_impute_mean()&lt;/code> and &lt;code>step_scale(),&lt;/code> have been updated to be able to work efficiently with sparse vectors. Both types of steps are detailed in the above-linked list of compatible methods.&lt;/p>
&lt;p>What this means in practice is that if you use a model/engine that supports sparse data and have a recipe that produces enough sparse data, then the steps will switch to produce sparse data by using a new sparse data format to store the data (when appropriate) as the recipe is being processed. Then if the model can accept sparse objects, we convert the data from our new sparse format to a standard sparse matrix object. Increasing performance when possible while preserving performance otherwise.&lt;/p>
&lt;p>Below is a simple recipe using the &lt;code>ames&lt;/code> data set. &lt;code>step_dummy()&lt;/code> is applied to all the categorical predictors, leading to a significant amount of zeroes.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>rec_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_zv&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_normalize&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_dummy&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_nominal_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>mod_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>boost_tree&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>, &lt;span class='s'>"xgboost"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>wf_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>rec_spec&lt;/span>, &lt;span class='nv'>mod_spec&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>When we go to fit it now, it takes around 125ms and allocates 37.2MB. Compared to before these changes it would take around 335ms and allocate 67.5MB.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>wf_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wf_spec&lt;/span>, &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We see similar speedups when we predictor with around 20ms and 25.2MB now, compared to around 60ms and 55.6MB before.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wf_fit&lt;/span>, &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2,930 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='text-decoration: underline;'>208&lt;/span>649.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='text-decoration: underline;'>115&lt;/span>339.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='text-decoration: underline;'>148&lt;/span>634.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='text-decoration: underline;'>239&lt;/span>770.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='text-decoration: underline;'>190&lt;/span>082.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='text-decoration: underline;'>184&lt;/span>604.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='text-decoration: underline;'>208&lt;/span>572.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='text-decoration: underline;'>177&lt;/span>403 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='text-decoration: underline;'>261&lt;/span>000.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='text-decoration: underline;'>198&lt;/span>604.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 2,920 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>These improvements are tightly related to memory allocation, which depends on the sparsity of the data set produced by the recipe. This is why it is hard to say how much benefit you will see. We have seen orders of magnitudes of improvements, both in terms of time and memory allocation. We have also been able to fit models where previously the data was too big to fit in memory.&lt;/p>
&lt;p>Please see the post on tidymodels.org, which goes into more detail about when you are likely to benefit from this and how to change your recipes and workflows to take full advantage of this new feature.&lt;/p>
&lt;p>There is also a &lt;a href="https://www.tidymodels.org/">https://www.tidymodels.org/&lt;/a> post going into a bit more detail about how to
&lt;a href="https://www.tidymodels.org/learn/work/sparse-recipe/" target="_blank" rel="noopener">use recipes to produce sparse data&lt;/a>.&lt;/p></description></item><item><title>Q1 2025 tidymodels digest</title><link>https://www.tidyverse.org/blog/2025/02/tidymodels-2025-q1/</link><pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2025/02/tidymodels-2025-q1/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with `hugodown::tidy_show_meta()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnails()`
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] `usethis::use_tidy_thanks()`
-->
&lt;p>The tidymodels framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;p>Since the beginning of 2021, we have been publishing quarterly updates here on the tidyverse blog summarizing what’s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the tidymodels tag to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused.&lt;/p>
&lt;p>We&amp;rsquo;ve sent a steady stream of tidymodels packages to CRAN recently. We usually release them in batches since many of our packages are tightly coupled with one another. Internally, this process is referred to as the &amp;ldquo;cascade&amp;rdquo; of CRAN submissions.&lt;/p>
&lt;p>The post will update you on which packages have changed and the major improvements you should know about.&lt;/p>
&lt;p>Here&amp;rsquo;s a list of the packages and their News sections:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://baguette.tidymodels.org/news/index.html" target="_blank" rel="noopener">baguette&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://brulee.tidymodels.org/news/index.html" target="_blank" rel="noopener">brulee&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://censored.tidymodels.org/news/index.html" target="_blank" rel="noopener">censored&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dials.tidymodels.org/news/index.html" target="_blank" rel="noopener">dials&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://hardhat.tidymodels.org/news/index.html" target="_blank" rel="noopener">hardhat&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://parsnip.tidymodels.org/news/index.html" target="_blank" rel="noopener">parsnip&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">recipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.tidymodels.org/news/index.html" target="_blank" rel="noopener">tidymodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tune.tidymodels.org/news/index.html" target="_blank" rel="noopener">tune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflows.tidymodels.org/news/index.html" target="_blank" rel="noopener">workflows&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Let&amp;rsquo;s look at a few specific updates.&lt;/p>
&lt;h2 id="improvements-in-errors-and-warnings">Improvements in errors and warnings
&lt;a href="#improvements-in-errors-and-warnings">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A group effort was made to improve our error and warning messages across many packages. This started with an internal &amp;ldquo;upkeep week&amp;rdquo; (which ended up being 3-4 weeks) and concluded at the
&lt;a href="https://www.tidyverse.org/blog/2024/04/tdd-2024/" target="_blank" rel="noopener">Tidy Dev Day in Seattle&lt;/a> after posit::conf(2024).&lt;/p>
&lt;p>The goal was to use new tools in the cli and rlang packages to make messages more informative than they used to be. For example, using:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">tidy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pca_extract_trained&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;variances&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>used to result in the error message:&lt;/p>
&lt;pre>&lt;code>Error in `match.arg()`:
! 'arg' should be one of &amp;quot;coef&amp;quot;, &amp;quot;variance&amp;quot;
&lt;/code>&lt;/pre>&lt;p>The new system references the function that you called and not the underlying base R function that actually errored. It also suggests a solution:&lt;/p>
&lt;pre>&lt;code>Error in `tidy()`:
! `type` must be one of &amp;quot;coef&amp;quot; or &amp;quot;variance&amp;quot;, not &amp;quot;variances&amp;quot;.
i Did you mean &amp;quot;variance&amp;quot;?
&lt;/code>&lt;/pre>&lt;p>The rlang package created a set of
&lt;a href="https://usethis.r-lib.org/reference/use_standalone.html" target="_blank" rel="noopener">standalone files&lt;/a> that contain high-quality type checkers and related functions. This also improves the information that users get from an error. For example, using an inappropriate formula value in &lt;code>fit(linear_reg(), &amp;quot;boop&amp;quot;, mtcars)&lt;/code>, the old message was:&lt;/p>
&lt;pre>&lt;code>Error in `fit()`:
! The `formula` argument must be a formula, but it is a &amp;lt;character&amp;gt;.
&lt;/code>&lt;/pre>&lt;p>and now you see:&lt;/p>
&lt;pre>&lt;code>Error in `fit()`:
! `formula` must be a formula, not the string &amp;quot;boop&amp;quot;.
&lt;/code>&lt;/pre>&lt;p>This was &lt;em>a lot&lt;/em> of work and we&amp;rsquo;re still aren’t finished. Two events helped us get as far as we did.&lt;/p>
&lt;p>First, Simon Couch made the
&lt;a href="https://simonpcouch.github.io/chores/" target="_blank" rel="noopener">chores&lt;/a> package (its previous name was &amp;ldquo;pal&amp;rdquo;), which enabled us to use AI tools to solve small-scope problems, such as converting old rlang error code to use the new
&lt;a href="https://rlang.r-lib.org/reference/topic-condition-formatting.html" target="_blank" rel="noopener">cli syntax&lt;/a>. I can’t overstate how much of a speed-up this was for us.&lt;/p>
&lt;p>Second, at developer day, many external folks pitched in to make pull requests from a list of issues:&lt;/p>
&lt;div class="figure" style="text-align: center">
&lt;img src="IMG_4743.jpeg" alt="Organizing Tidy Dev Day issues." />
&lt;p class="caption">Organizing Tidy Dev Day issues.&lt;/p>
&lt;/div>
&lt;p>I love these sessions for many reasons, but mostly because we meet users and contributors to our packages in person and work with them on specific tasks.&lt;/p>
&lt;p>There is a lot more to do here; we have a lot of secondary packages that would benefit from these improvements too.&lt;/p>
&lt;h2 id="quantile-regression-in-parsnip">Quantile regression in parsnip
&lt;a href="#quantile-regression-in-parsnip">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One big update in parsnip was a new modeling mode of &lt;code>&amp;quot;quantile regression&amp;quot;&lt;/code>. Daniel McDonald and Ryan Tibshirani largely provided some inertia for this work based on their
&lt;a href="https://delphi.cmu.edu/" target="_blank" rel="noopener">disease modeling framework&lt;/a>.&lt;/p>
&lt;p>You can generate quantile predictions by first creating a model specification, which includes the quantiles that you want to predict:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">tidymodels_prefer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">ames&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">modeldata&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ames&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sale_Price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">log10&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sale_Price&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sale_Price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Latitude&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">quant_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;quantreg&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;quantile regression&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">quantile_levels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.9&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">quant_spec&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Linear Regression Model Specification (quantile regression)
##
## Computational engine: quantreg
&lt;/code>&lt;/pre>&lt;pre>&lt;code>## Quantile levels: 0.1, 0.5, and 0.9.
&lt;/code>&lt;/pre>&lt;p>We&amp;rsquo;ll add some spline terms via a recipe and fit the model:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">spline_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sale_Price&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ames&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">step_spline_natural&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Latitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">deg_free&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">quant_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">spline_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">quant_spec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ames&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">quant_fit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## ══ Workflow [trained] ═════════════════════════════════════════════════
## Preprocessor: Recipe
## Model: linear_reg()
##
## ── Preprocessor ───────────────────────────────────────────────────────
## 1 Recipe Step
##
## • step_spline_natural()
##
## ── Model ──────────────────────────────────────────────────────────────
## Call:
## quantreg::rq(formula = ..y ~ ., tau = quantile_levels, data = data)
##
## Coefficients:
## tau= 0.1 tau= 0.5 tau= 0.9
## (Intercept) 4.71981123 5.07728741 5.25221335
## Latitude_01 1.22409173 0.70928577 0.79000849
## Latitude_02 0.19561816 0.04937750 0.02832633
## Latitude_03 0.16616065 0.02045910 0.14730573
## Latitude_04 0.30583648 0.08489487 0.15595080
## Latitude_05 0.21663212 0.02016258 -0.01110625
## Latitude_06 0.33541228 0.12005254 0.03006777
## Latitude_07 0.47732205 0.09146728 0.17394021
## Latitude_08 0.24028784 0.30450058 0.26144584
## Latitude_09 0.05840312 -0.14733781 -0.11911843
## Latitude_10 1.52800673 0.95994216 1.21750501
##
## Degrees of freedom: 2930 total; 2919 residual
&lt;/code>&lt;/pre>&lt;p>For prediction, tidymodels always returns a data frame with as many rows as the input data set (here: &lt;code>ames&lt;/code>). The result for quantile predictions is a special vctrs class:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">quant_pred&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">quant_fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ames&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">quant_pred&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span> &lt;span class="nf">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 4 × 1
## .pred_quantile
## &amp;lt;qtls(3)&amp;gt;
## 1 [5.33]
## 2 [5.33]
## 3 [5.33]
## 4 [5.31]
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">class&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">quant_pred&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">.pred_quantile&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## [1] &amp;quot;quantile_pred&amp;quot; &amp;quot;vctrs_vctr&amp;quot; &amp;quot;list&amp;quot;
&lt;/code>&lt;/pre>&lt;p>where the output &lt;code>[5.31]&lt;/code> shows the middle quantile.&lt;/p>
&lt;p>We can expand the set of quantile predictions so that there are three rows for each source row in &lt;code>ames&lt;/code>. There’s also an integer column called &lt;code>.row&lt;/code> so that we can merge the data with the source data:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">quant_pred&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">.pred_quantile[1]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## &amp;lt;quantiles[1]&amp;gt;
## [1] [5.33]
## # Quantile levels: 0.1 0.5 0.9
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">quant_pred&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">.pred_quantile[1]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 3 × 3
## .pred_quantile .quantile_levels .row
## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1 5.08 0.1 1
## 2 5.33 0.5 1
## 3 5.52 0.9 1
&lt;/code>&lt;/pre>&lt;p>Here are the predicted quantile values:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">quant_pred&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">.pred_quantile&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">full_join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span> &lt;span class="nf">add_rowindex&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;.row&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">arrange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Latitude&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Latitude&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ames&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Sale_Price&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_line&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">.pred_quantile&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.quantile_levels&lt;/span>&lt;span class="p">)),&lt;/span>
&lt;span class="n">show.legend&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">linewidth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1.5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="figure" style="text-align: center">
&lt;img src="figure/quant-plot-1.svg" alt="10%, 50%, and 90% quantile predictions." width="80%" />
&lt;p class="caption">10%, 50%, and 90% quantile predictions.&lt;/p>
&lt;/div>
&lt;p>For now, the new mode does not have many engines. We need to implement some performance statistics in the yardstick package before integrating these models into the whole tidymodels ecosystem.&lt;/p>
&lt;p>In other news, we’ve added some additional neural network models based on some improvements in the brulee package. Namely, two-layer networks can be tuned for feed-forward networks on tabular data (using torch).&lt;/p>
&lt;p>One other improvement has been simmering for a long time: the ability to exploit sparse data structures better. We’ve improved our &lt;code>fit()&lt;/code> interfaces for the few model engines that can use sparsely encoded data. There is much more to come on this in a few months, especially around recipes, so stay tuned.&lt;/p>
&lt;p>Finally, we’ve created a set of
&lt;a href="https://parsnip.tidymodels.org/articles/checklists.html" target="_blank" rel="noopener">checklists&lt;/a> that can be used when creating new models or engines. These are very helpful, even for us, since there is a lot of minutiae to remember.&lt;/p>
&lt;h2 id="parallelism-in-tune">Parallelism in tune
&lt;a href="#parallelism-in-tune">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This was a small maintenance release mostly related to parallel processing. Up to now, tune facilitated parallelism using the
&lt;a href="https://cran.r-project.org/package=foreach" target="_blank" rel="noopener">foreach&lt;/a> package. That package is mature but not actively developed, so we have been slowly moving toward using the
&lt;a href="https://www.futureverse.org/packages-overview.html" target="_blank" rel="noopener">future&lt;/a> package(s).&lt;/p>
&lt;p>The
&lt;a href="https://www.tidyverse.org/blog/2024/04/tune-1-2-0/#modernized-support-for-parallel-processing" target="_blank" rel="noopener">first step in this journey&lt;/a> was to keep using foreach internally (but lean toward future) but to encourage users to move from directly invoking the foreach package and, instead, load and use the future package.&lt;/p>
&lt;p>We’re now moving folks into the second stage. tune will now raise a warning when:&lt;/p>
&lt;ul>
&lt;li>A parallel backend has been registered with foreach, and&lt;/li>
&lt;li>No
&lt;a href="https://future.futureverse.org/reference/plan.html" target="_blank" rel="noopener">&lt;code>plan()&lt;/code>&lt;/a> has been specified with future.&lt;/li>
&lt;/ul>
&lt;p>This will allow users to transition their existing code to only future and allow us to update existing documentation and training materials.&lt;/p>
&lt;p>We anticipate that the third stage, &lt;strong>removing foreach entirely&lt;/strong>, will occur sometime before posit::conf(2025) in September.&lt;/p>
&lt;h2 id="things-to-look-forward-to">Things to look forward to
&lt;a href="#things-to-look-forward-to">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We are working hard on a few major initiatives that we plan on showing off at
&lt;a href="https://posit.co/conference/" target="_blank" rel="noopener">posit::conf(2025)&lt;/a>.&lt;/p>
&lt;p>First is integrated support for sparse &lt;strong>data&lt;/strong>. The emphasis is on &amp;ldquo;data&amp;rdquo; because users can use a data frame of sparse vectors &lt;em>or&lt;/em> the usual sparse matrix format. This is a big deal because it does not force you to convert non-numeric data into a numeric matrix format. Again, we’ll discuss this more in the future, but you should be able to use sparse data frames in parsnip, recipes, tune, etc.&lt;/p>
&lt;p>The second initiative is the longstanding goal of adding &lt;strong>postprocessing&lt;/strong> to tidymodels. Just as you can add a preprocessor to a model workflow, you will be able to add a set of postprocessing adjustments to the predictions your model generates. See our
&lt;a href="https://www.tidyverse.org/blog/2024/10/postprocessing-preview/" target="_blank" rel="noopener">previous post&lt;/a> for a sneak peek.&lt;/p>
&lt;p>Finally, this year&amp;rsquo;s
&lt;a href="https://www.tidyverse.org/blog/2025/01/tidymodels-2025-internship/" target="_blank" rel="noopener">summer internship&lt;/a> focuses on supervised feature selection methods. We’ll also have releases (and probably another package) for these tools.&lt;/p>
&lt;p>These should come to fruition (and CRAN) before or around August 2025.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We want to sincerely thank everyone who contributed to these packages since their previous versions:&lt;/p>
&lt;p>
&lt;a href="https://github.com/AlbertoImg" target="_blank" rel="noopener">@AlbertoImg&lt;/a>,
&lt;a href="https://github.com/asb2111" target="_blank" rel="noopener">@asb2111&lt;/a>,
&lt;a href="https://github.com/balraadjsings" target="_blank" rel="noopener">@balraadjsings&lt;/a>,
&lt;a href="https://github.com/bcjaeger" target="_blank" rel="noopener">@bcjaeger&lt;/a>,
&lt;a href="https://github.com/beansrowning" target="_blank" rel="noopener">@beansrowning&lt;/a>,
&lt;a href="https://github.com/BrennanAntone" target="_blank" rel="noopener">@BrennanAntone&lt;/a>,
&lt;a href="https://github.com/cheryldietrich" target="_blank" rel="noopener">@cheryldietrich&lt;/a>,
&lt;a href="https://github.com/chillerb" target="_blank" rel="noopener">@chillerb&lt;/a>,
&lt;a href="https://github.com/conarr5" target="_blank" rel="noopener">@conarr5&lt;/a>,
&lt;a href="https://github.com/corybrunson" target="_blank" rel="noopener">@corybrunson&lt;/a>,
&lt;a href="https://github.com/dajmcdon" target="_blank" rel="noopener">@dajmcdon&lt;/a>,
&lt;a href="https://github.com/davidrsch" target="_blank" rel="noopener">@davidrsch&lt;/a>,
&lt;a href="https://github.com/Edgar-Zamora" target="_blank" rel="noopener">@Edgar-Zamora&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gimholte" target="_blank" rel="noopener">@gimholte&lt;/a>,
&lt;a href="https://github.com/grantmcdermott" target="_blank" rel="noopener">@grantmcdermott&lt;/a>,
&lt;a href="https://github.com/grouptheory" target="_blank" rel="noopener">@grouptheory&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/ilaria-kode" target="_blank" rel="noopener">@ilaria-kode&lt;/a>,
&lt;a href="https://github.com/JamesHWade" target="_blank" rel="noopener">@JamesHWade&lt;/a>,
&lt;a href="https://github.com/jesusherranz" target="_blank" rel="noopener">@jesusherranz&lt;/a>,
&lt;a href="https://github.com/jkylearmstrong" target="_blank" rel="noopener">@jkylearmstrong&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/joscani" target="_blank" rel="noopener">@joscani&lt;/a>,
&lt;a href="https://github.com/Joscelinrocha" target="_blank" rel="noopener">@Joscelinrocha&lt;/a>,
&lt;a href="https://github.com/josho88" target="_blank" rel="noopener">@josho88&lt;/a>,
&lt;a href="https://github.com/joshuagi" target="_blank" rel="noopener">@joshuagi&lt;/a>,
&lt;a href="https://github.com/JosiahParry" target="_blank" rel="noopener">@JosiahParry&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/jrwinget" target="_blank" rel="noopener">@jrwinget&lt;/a>,
&lt;a href="https://github.com/KarlKoe" target="_blank" rel="noopener">@KarlKoe&lt;/a>,
&lt;a href="https://github.com/kscott-1" target="_blank" rel="noopener">@kscott-1&lt;/a>,
&lt;a href="https://github.com/lilykoff" target="_blank" rel="noopener">@lilykoff&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/LouisMPenrod" target="_blank" rel="noopener">@LouisMPenrod&lt;/a>,
&lt;a href="https://github.com/luisDVA" target="_blank" rel="noopener">@luisDVA&lt;/a>,
&lt;a href="https://github.com/marcelglueck" target="_blank" rel="noopener">@marcelglueck&lt;/a>,
&lt;a href="https://github.com/marcozanotti" target="_blank" rel="noopener">@marcozanotti&lt;/a>,
&lt;a href="https://github.com/martaalcalde" target="_blank" rel="noopener">@martaalcalde&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mihem" target="_blank" rel="noopener">@mihem&lt;/a>,
&lt;a href="https://github.com/mitchellmanware" target="_blank" rel="noopener">@mitchellmanware&lt;/a>,
&lt;a href="https://github.com/naokiohno" target="_blank" rel="noopener">@naokiohno&lt;/a>,
&lt;a href="https://github.com/nhward" target="_blank" rel="noopener">@nhward&lt;/a>,
&lt;a href="https://github.com/npelikan" target="_blank" rel="noopener">@npelikan&lt;/a>,
&lt;a href="https://github.com/obgeneralao" target="_blank" rel="noopener">@obgeneralao&lt;/a>,
&lt;a href="https://github.com/owenjonesuob" target="_blank" rel="noopener">@owenjonesuob&lt;/a>,
&lt;a href="https://github.com/pbhogale" target="_blank" rel="noopener">@pbhogale&lt;/a>,
&lt;a href="https://github.com/Peter4801" target="_blank" rel="noopener">@Peter4801&lt;/a>,
&lt;a href="https://github.com/pgg1309" target="_blank" rel="noopener">@pgg1309&lt;/a>,
&lt;a href="https://github.com/reisner" target="_blank" rel="noopener">@reisner&lt;/a>,
&lt;a href="https://github.com/rfsaldanha" target="_blank" rel="noopener">@rfsaldanha&lt;/a>,
&lt;a href="https://github.com/rkb965" target="_blank" rel="noopener">@rkb965&lt;/a>,
&lt;a href="https://github.com/RobLBaker" target="_blank" rel="noopener">@RobLBaker&lt;/a>,
&lt;a href="https://github.com/RodDalBen" target="_blank" rel="noopener">@RodDalBen&lt;/a>,
&lt;a href="https://github.com/SantiagoD999" target="_blank" rel="noopener">@SantiagoD999&lt;/a>,
&lt;a href="https://github.com/shum461" target="_blank" rel="noopener">@shum461&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/szimmer" target="_blank" rel="noopener">@szimmer&lt;/a>,
&lt;a href="https://github.com/talegari" target="_blank" rel="noopener">@talegari&lt;/a>,
&lt;a href="https://github.com/therealjpetereit" target="_blank" rel="noopener">@therealjpetereit&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/walkerjameschris" target="_blank" rel="noopener">@walkerjameschris&lt;/a>, and
&lt;a href="https://github.com/ZWael" target="_blank" rel="noopener">@ZWael&lt;/a>&lt;/p></description></item><item><title>orbital 0.3.0</title><link>https://www.tidyverse.org/blog/2025/01/orbital-0-3-0/</link><pubDate>Mon, 13 Jan 2025 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2025/01/orbital-0-3-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re thrilled to announce the release of
&lt;a href="https://orbital.tidymodels.org/" target="_blank" rel="noopener">orbital&lt;/a> 0.3.0. orbital lets you predict in databases using tidymodels workflows.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"orbital"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will cover the highlights, which are classification support and the new augment method.&lt;/p>
&lt;p>You can see a full list of changes in the
&lt;a href="https://orbital.tidymodels.org/news/index.html#orbital-030" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="classification-support">Classification support
&lt;a href="#classification-support">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The biggest improvement in this version is that
&lt;a href="https://orbital.tidymodels.org/reference/orbital.html" target="_blank" rel="noopener">&lt;code>orbital()&lt;/code>&lt;/a> now works for supported classification models. See
&lt;a href="https://orbital.tidymodels.org/articles/supported-models.html#supported-models" target="_blank" rel="noopener">vignette&lt;/a> for list of all supported models.&lt;/p>
&lt;p>Let&amp;rsquo;s start by fitting a classification model on the &lt;code>penguins&lt;/code> data set, using {xgboost} as the engine.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>rec_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_unknown&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_nominal_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_dummy&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_nominal_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_impute_mean&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_zv&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>lr_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>boost_tree&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"classification"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"xgboost"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>wf_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>rec_spec&lt;/span>, &lt;span class='nv'>lr_spec&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>wf_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wf_spec&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With this fitted workflow object, we can call
&lt;a href="https://orbital.tidymodels.org/reference/orbital.html" target="_blank" rel="noopener">&lt;code>orbital()&lt;/code>&lt;/a> on it to create an orbital object.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>orbital_obj&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://orbital.tidymodels.org/reference/orbital.html'>orbital&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wf_fit&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>orbital_obj&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>──&lt;/span> &lt;span style='font-weight: bold;'>orbital Object&lt;/span> &lt;span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • island = dplyr::if_else(is.na(island), "unknown", island)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • sex = dplyr::if_else(is.na(sex), "unknown", sex)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • island_Dream = as.numeric(island == "Dream")&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • island_Torgersen = as.numeric(island == "Torgersen")&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • sex_male = as.numeric(sex == "male")&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • sex_unknown = as.numeric(sex == "unknown")&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • bill_length_mm = dplyr::if_else(is.na(bill_length_mm), 43.92193, bill_l ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • bill_depth_mm = dplyr::if_else(is.na(bill_depth_mm), 17.15117, bill_dep ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • flipper_length_mm = dplyr::if_else(is.na(flipper_length_mm), 201, flipp ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • body_mass_g = dplyr::if_else(is.na(body_mass_g), 4202, body_mass_g)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • island_Dream = dplyr::if_else(is.na(island_Dream), 0.3604651, island_Dr ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • island_Torgersen = dplyr::if_else(is.na(island_Torgersen), 0.1511628, i ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • sex_male = dplyr::if_else(is.na(sex_male), 0.4883721, sex_male)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • sex_unknown = dplyr::if_else(is.na(sex_unknown), 0.03197674, sex_unknow ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • Adelie = 0 + dplyr::case_when((bill_depth_mm &amp;lt; 15.1 | is.na(bill_depth_ ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • Chinstrap = 0 + dplyr::case_when((island_Dream &amp;lt; 0.5 | is.na(island_Dre ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • Gentoo = 0 + dplyr::case_when((bill_depth_mm &amp;lt; 15.95 | is.na(bill_depth ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • .pred_class = dplyr::case_when(Adelie &amp;gt; Chinstrap &amp;amp; Adelie &amp;gt; Gentoo ~ " ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ────────────────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 18 equations in total.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This object contains all the information that is needed to produce predictions. Which we can produce with
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>orbital_obj&lt;/span>, &lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 344 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred_class&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 334 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The main thing to note here is that the orbital package produces character vectors instead of factors. This is done as a unifying approach since many databases don&amp;rsquo;t have factor types.&lt;/p>
&lt;p>Speaking of databases, you can
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> on an orbital object using tables from databases. Below we create an ephemeral in-memory RSQLite database.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dbi.r-dbi.org'>DBI&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://rsqlite.r-dbi.org'>RSQLite&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>con_sqlite&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbi.r-dbi.org/reference/dbConnect.html'>dbConnect&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rsqlite.r-dbi.org/reference/SQLite.html'>SQLite&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, path &lt;span class='o'>=&lt;/span> &lt;span class='s'>":memory:"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>penguins_sqlite&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>copy_to&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>con_sqlite&lt;/span>, &lt;span class='nv'>penguins&lt;/span>, name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"penguins_table"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And we can predict with it like normal. All the calculations are sent to the database for execution.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>orbital_obj&lt;/span>, &lt;span class='nv'>penguins_sqlite&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Source: SQL [?? x 1]&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Database: sqlite 3.47.1 []&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred_class&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This works the same with
&lt;a href="https://orbital.tidymodels.org/articles/databases.html" target="_blank" rel="noopener">many types of databases&lt;/a>.&lt;/p>
&lt;p>Classification is different from regression in part because it comes with multiple prediction types. The above example showed the default which is hard classification. You can set the type of prediction you want with the &lt;code>type&lt;/code> argument to &lt;code>orbital&lt;/code>. For classification models, possible options are &lt;code>&amp;quot;class&amp;quot;&lt;/code> and &lt;code>&amp;quot;prob&amp;quot;&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>orbital_obj_prob&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://orbital.tidymodels.org/reference/orbital.html'>orbital&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wf_fit&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"class"&lt;/span>, &lt;span class='s'>"prob"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>orbital_obj_prob&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>──&lt;/span> &lt;span style='font-weight: bold;'>orbital Object&lt;/span> &lt;span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • island = dplyr::if_else(is.na(island), "unknown", island)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • sex = dplyr::if_else(is.na(sex), "unknown", sex)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • island_Dream = as.numeric(island == "Dream")&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • island_Torgersen = as.numeric(island == "Torgersen")&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • sex_male = as.numeric(sex == "male")&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • sex_unknown = as.numeric(sex == "unknown")&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • bill_length_mm = dplyr::if_else(is.na(bill_length_mm), 43.92193, bill_l ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • bill_depth_mm = dplyr::if_else(is.na(bill_depth_mm), 17.15117, bill_dep ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • flipper_length_mm = dplyr::if_else(is.na(flipper_length_mm), 201, flipp ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • body_mass_g = dplyr::if_else(is.na(body_mass_g), 4202, body_mass_g)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • island_Dream = dplyr::if_else(is.na(island_Dream), 0.3604651, island_Dr ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • island_Torgersen = dplyr::if_else(is.na(island_Torgersen), 0.1511628, i ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • sex_male = dplyr::if_else(is.na(sex_male), 0.4883721, sex_male)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • sex_unknown = dplyr::if_else(is.na(sex_unknown), 0.03197674, sex_unknow ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • Adelie = 0 + dplyr::case_when((bill_depth_mm &amp;lt; 15.1 | is.na(bill_depth_ ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • Chinstrap = 0 + dplyr::case_when((island_Dream &amp;lt; 0.5 | is.na(island_Dre ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • Gentoo = 0 + dplyr::case_when((bill_depth_mm &amp;lt; 15.95 | is.na(bill_depth ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • .pred_class = dplyr::case_when(Adelie &amp;gt; Chinstrap &amp;amp; Adelie &amp;gt; Gentoo ~ " ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • norm = exp(Adelie) + exp(Chinstrap) + exp(Gentoo)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • .pred_Adelie = exp(Adelie) / norm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • .pred_Chinstrap = exp(Chinstrap) / norm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • .pred_Gentoo = exp(Gentoo) / norm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ────────────────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 22 equations in total.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Notice how we can select both &lt;code>&amp;quot;class&amp;quot;&lt;/code> and &lt;code>&amp;quot;prob&amp;quot;&lt;/code>. The predictions now include both hard and soft class predictions.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>orbital_obj_prob&lt;/span>, &lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 344 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred_class .pred_Adelie .pred_Chinstrap .pred_Gentoo&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie 0.709 0.024&lt;span style='text-decoration: underline;'>5&lt;/span> 0.267 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie 0.979 0.005&lt;span style='text-decoration: underline;'>49&lt;/span> 0.015&lt;span style='text-decoration: underline;'>8&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie 0.980 0.005&lt;span style='text-decoration: underline;'>59&lt;/span> 0.014&lt;span style='text-decoration: underline;'>8&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 334 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>That works equally well in databases.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>orbital_obj_prob&lt;/span>, &lt;span class='nv'>penguins_sqlite&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Source: SQL [?? x 4]&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Database: sqlite 3.47.1 []&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred_class .pred_Adelie .pred_Chinstrap .pred_Gentoo&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie 0.709 0.024&lt;span style='text-decoration: underline;'>5&lt;/span> 0.267 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie 0.989 0.005&lt;span style='text-decoration: underline;'>54&lt;/span> 0.005&lt;span style='text-decoration: underline;'>60&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie 0.979 0.005&lt;span style='text-decoration: underline;'>49&lt;/span> 0.015&lt;span style='text-decoration: underline;'>8&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie 0.980 0.005&lt;span style='text-decoration: underline;'>59&lt;/span> 0.014&lt;span style='text-decoration: underline;'>8&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="new-augment-method">New augment method
&lt;a href="#new-augment-method">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The users of tidymodels have found the
&lt;a href="https://generics.r-lib.org/reference/augment.html" target="_blank" rel="noopener">&lt;code>augment()&lt;/code>&lt;/a> function to be a handy tool. This function performs predictions and returns them alongside the original data set.&lt;/p>
&lt;p>This release adds
&lt;a href="https://generics.r-lib.org/reference/augment.html" target="_blank" rel="noopener">&lt;code>augment()&lt;/code>&lt;/a> support for orbital objects.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/augment.html'>augment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>orbital_obj&lt;/span>, &lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 344 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred_class species island bill_length_mm bill_depth_mm flipper_length_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie Adelie Torgersen 39.1 18.7 181&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie Adelie Torgersen 39.5 17.4 186&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie Adelie Torgersen 40.3 18 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie Adelie Torgersen &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie Adelie Torgersen 36.7 19.3 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie Adelie Torgersen 39.3 20.6 190&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie Adelie Torgersen 38.9 17.8 181&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie Adelie Torgersen 39.2 19.6 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie Adelie Torgersen 34.1 18.1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie Adelie Torgersen 42 20.2 190&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 334 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 2 more variables: body_mass_g &amp;lt;int&amp;gt;, sex &amp;lt;fct&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The function works for most databases, but for technical reasons doesn&amp;rsquo;t work with all. It has been confirmed to not work work in spark databases or arrow tables.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/augment.html'>augment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>orbital_obj&lt;/span>, &lt;span class='nv'>penguins_sqlite&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Source: SQL [?? x 8]&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Database: sqlite 3.47.1 []&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred_class species island bill_length_mm bill_depth_mm flipper_length_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie Adelie Torgersen 39.1 18.7 181&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie Adelie Torgersen 39.5 17.4 186&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie Adelie Torgersen 40.3 18 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie Adelie Torgersen &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie Adelie Torgersen 36.7 19.3 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie Adelie Torgersen 39.3 20.6 190&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie Adelie Torgersen 38.9 17.8 181&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie Adelie Torgersen 39.2 19.6 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie Adelie Torgersen 34.1 18.1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie Adelie Torgersen 42 20.2 190&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 2 more variables: body_mass_g &amp;lt;int&amp;gt;, sex &amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thank you to all the people who have contributed to orbital since the release of v0.3.0:&lt;/p>
&lt;p>
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/joscani" target="_blank" rel="noopener">@joscani&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/npelikan" target="_blank" rel="noopener">@npelikan&lt;/a>, and
&lt;a href="https://github.com/szimmer" target="_blank" rel="noopener">@szimmer&lt;/a>.&lt;/p></description></item><item><title>tidymodels Internship for 2025</title><link>https://www.tidyverse.org/blog/2025/01/tidymodels-2025-internship/</link><pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2025/01/tidymodels-2025-internship/</guid><description>&lt;p>We are chuffed once again to offer a summer internship with the tidymodels team.&lt;/p>
&lt;p>We&amp;rsquo;ve had eight previous summer interns and these led to the creation of a number of new packages:
&lt;a href="https://agua.tidymodels.org/" target="_blank" rel="noopener">agua&lt;/a>,
&lt;a href="https://applicable.tidymodels.org/" target="_blank" rel="noopener">applicable&lt;/a>,
&lt;a href="https://rstudio.github.io/bundle/" target="_blank" rel="noopener">bundle&lt;/a>,
&lt;a href="https://butcher.tidymodels.org/" target="_blank" rel="noopener">butcher&lt;/a>,
&lt;a href="https://shinymodels.tidymodels.org/" target="_blank" rel="noopener">shinymodels&lt;/a>,
&lt;a href="https://spatialsample.tidymodels.org/" target="_blank" rel="noopener">spatialsample&lt;/a>, and
&lt;a href="https://stacks.tidymodels.org/" target="_blank" rel="noopener">stacks&lt;/a>. Our own
&lt;a href="https://www.simonpcouch.com/" target="_blank" rel="noopener">Simon Couch&lt;/a> is a former intern who won
&lt;a href="https://community.amstat.org/jointscsg-section/awards/john-m-chambers" target="_blank" rel="noopener">an award&lt;/a> for his work.&lt;/p>
&lt;p>This year, the primary focus is on expanding our feature selection capabilities. Some of this will involve new recipe steps and other functions. Towards the end of the internship, there might be time to work on other things, too!&lt;/p>
&lt;p>To apply, make sure that you have a GitHub handle and follow this link:&lt;/p>
&lt;p>&lt;strong>
&lt;a href="https://posit.co/job-detail/?gh_jid=6323043003" target="_blank" rel="noopener">&lt;code>https://posit.co/job-detail/?gh_jid=6323043003&lt;/code>&lt;/a>&lt;/strong>&lt;/p>
&lt;p>The internship is US-based.&lt;/p>
&lt;p>If you want to know what the internship is like, a few of our alumni have written about it:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.alexpghayes.com/post/2018-08-10_a-summer-with-rstudio/" target="_blank" rel="noopener">&lt;em>A summer with RStudio&lt;/em> (2018)&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://fbchow.rbind.io/2018/07/27/rstudio-summer-internship/" target="_blank" rel="noopener">&lt;em>RStudio Summer Internship&lt;/em> (2018)&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://education.rstudio.com/blog/2019/12/this-is-not-like-the-others/" target="_blank" rel="noopener">&lt;em>This Is Not Like the Others&lt;/em> (2019)&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://education.rstudio.com/blog/2020/06/tidymodels-internship/" target="_blank" rel="noopener">&lt;em>Tidymodels Internship&lt;/em> (2020)&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.mm218.dev/posts/2022-08-15-last-summer/" target="_blank" rel="noopener">&lt;em>I know what I did last summer&lt;/em> (2022)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>We can&amp;rsquo;t wait to get started and look forward to reading your applications.&lt;/p></description></item><item><title>Postprocessing is coming to tidymodels</title><link>https://www.tidyverse.org/blog/2024/10/postprocessing-preview/</link><pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/10/postprocessing-preview/</guid><description>&lt;p>We&amp;rsquo;re bristling with elation to share about a set of upcoming features for postprocessing with tidymodels. Postprocessors refine predictions outputted from machine learning models to improve predictive performance or better satisfy distributional limitations. The developmental versions of many tidymodels core packages include changes to support postprocessors, and we&amp;rsquo;re ready to share about our work and hear the community&amp;rsquo;s thoughts on our progress so far.&lt;/p>
&lt;p>Postprocessing support with tidymodels hasn&amp;rsquo;t yet made it to CRAN, but you can install the needed versions of tidymodels packages with the following code.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>pak&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://pak.r-lib.org/reference/pak.html'>pak&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/paste.html'>paste0&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='s'>"tidymodels/"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tune"&lt;/span>, &lt;span class='s'>"workflows"&lt;/span>, &lt;span class='s'>"rsample"&lt;/span>, &lt;span class='s'>"tailor"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now, we load packages with those developmental versions installed.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/probably'>probably&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/tailor'>tailor&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Existing tidymodels users might have spotted something funky already; who is this tailor character?&lt;/p>
&lt;h2 id="meet-tailor">Meet tailor👋
&lt;a href="#meet-tailor">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The tailor package introduces tailor objects, which compose iterative adjustments to model predictions. tailor is to postprocessing as recipes is to preprocessing; applying your mental model of recipes to tailor should get you a good bit of the way there.&lt;/p>
&lt;div style="width: 140%; max-width: 140%; overflow-x: auto;">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tool&lt;/th>
&lt;th>Applied to...&lt;/th>
&lt;th>Initialize with...&lt;/th>
&lt;th>Composes...&lt;/th>
&lt;th>Train with...&lt;/th>
&lt;th>Predict with...&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>recipes&lt;/td>
&lt;td>Training data&lt;/td>
&lt;td>&lt;code>recipe()&lt;/code>&lt;/td>
&lt;td>&lt;code>step_*()&lt;/code>s&lt;/td>
&lt;td>&lt;code>prep()&lt;/code>&lt;/td>
&lt;td>&lt;code>bake()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tailor&lt;/td>
&lt;td>Model predictions&lt;/td>
&lt;td>
&lt;a href="https://tailor.tidymodels.org/reference/tailor.html" target="_blank" rel="noopener">&lt;code>tailor()&lt;/code>&lt;/a>&lt;/td>
&lt;td>&lt;code>adjust_*()&lt;/code>ments&lt;/td>
&lt;td>
&lt;a href="https://generics.r-lib.org/reference/fit.html" target="_blank" rel="noopener">&lt;code>fit()&lt;/code>&lt;/a>&lt;/td>
&lt;td>
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>First, users can initialize a tailor object with
&lt;a href="https://tailor.tidymodels.org/reference/tailor.html" target="_blank" rel="noopener">&lt;code>tailor()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://tailor.tidymodels.org/reference/tailor.html'>tailor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>──&lt;/span> &lt;span style='font-weight: bold;'>tailor&lt;/span> &lt;span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; A postprocessor with 0 adjustments.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Tailors compose &amp;ldquo;adjustments,&amp;rdquo; analogous to steps from the recipes package.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://tailor.tidymodels.org/reference/tailor.html'>tailor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tailor.tidymodels.org/reference/adjust_probability_threshold.html'>adjust_probability_threshold&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>threshold &lt;span class='o'>=&lt;/span> &lt;span class='m'>.7&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>──&lt;/span> &lt;span style='font-weight: bold;'>tailor&lt;/span> &lt;span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; A binary postprocessor with 1 adjustment:&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> Adjust probability threshold to 0.7.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>As an example, we&amp;rsquo;ll apply this tailor to the &lt;code>two_class_example&lt;/code> data made available after loading tidymodels.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/head.html'>head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>two_class_example&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; truth Class1 Class2 predicted&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 Class2 0.003589243 0.9964107574 Class2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 2 Class1 0.678621054 0.3213789460 Class1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 3 Class2 0.110893522 0.8891064779 Class2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 4 Class1 0.735161703 0.2648382969 Class1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 5 Class2 0.016239960 0.9837600397 Class2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 6 Class1 0.999275071 0.0007249286 Class1&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This data gives the true value of an outcome variable &lt;code>truth&lt;/code> as well as predicted probabilities (&lt;code>Class1&lt;/code> and &lt;code>Class2&lt;/code>). The hard class predictions, in &lt;code>predicted&lt;/code>, are &lt;code>&amp;quot;Class1&amp;quot;&lt;/code> if the probability assigned to &lt;code>&amp;quot;Class1&amp;quot;&lt;/code> is above .5, and &lt;code>&amp;quot;Class2&amp;quot;&lt;/code> otherwise.&lt;/p>
&lt;p>The model predicts &lt;code>&amp;quot;Class1&amp;quot;&lt;/code> more often than it does &lt;code>&amp;quot;Class2&amp;quot;&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>two_class_example&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>count&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>predicted&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; predicted n&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 Class1 277&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 2 Class2 223&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If we wanted the model to predict &lt;code>&amp;quot;Class2&amp;quot;&lt;/code> more often, we could increase the probability threshold assigned to &lt;code>&amp;quot;Class1&amp;quot;&lt;/code> above which the hard class prediction will be &lt;code>&amp;quot;Class1&amp;quot;&lt;/code>. In the tailor package, this adjustment is implemented in
&lt;a href="https://tailor.tidymodels.org/reference/adjust_probability_threshold.html" target="_blank" rel="noopener">&lt;code>adjust_probability_threshold()&lt;/code>&lt;/a>, which can be situated in a tailor object.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>tlr&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tailor.tidymodels.org/reference/tailor.html'>tailor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tailor.tidymodels.org/reference/adjust_probability_threshold.html'>adjust_probability_threshold&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>threshold &lt;span class='o'>=&lt;/span> &lt;span class='m'>.7&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>tlr&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>──&lt;/span> &lt;span style='font-weight: bold;'>tailor&lt;/span> &lt;span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; A binary postprocessor with 1 adjustment:&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> Adjust probability threshold to 0.7.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>tailors must be fitted before they can predict on new data. For adjustments like
&lt;a href="https://tailor.tidymodels.org/reference/adjust_probability_threshold.html" target="_blank" rel="noopener">&lt;code>adjust_probability_threshold()&lt;/code>&lt;/a>, there&amp;rsquo;s no training that actually happens at the
&lt;a href="https://generics.r-lib.org/reference/fit.html" target="_blank" rel="noopener">&lt;code>fit()&lt;/code>&lt;/a> step besides recording the name and type of relevant variables. For other adjustments, like numeric calibration with
&lt;a href="https://tailor.tidymodels.org/reference/adjust_numeric_calibration.html" target="_blank" rel="noopener">&lt;code>adjust_numeric_calibration()&lt;/code>&lt;/a>, parameters are actually estimated at the
&lt;a href="https://generics.r-lib.org/reference/fit.html" target="_blank" rel="noopener">&lt;code>fit()&lt;/code>&lt;/a> stage and separate data should be used to train the postprocessor and evaluate its performance. More on this in
&lt;a href="#tailors-in-context">Tailors in context&lt;/a>.&lt;/p>
&lt;p>In this case, though, we can
&lt;a href="https://generics.r-lib.org/reference/fit.html" target="_blank" rel="noopener">&lt;code>fit()&lt;/code>&lt;/a> on the whole dataset. The resulting object is still a tailor, but is now flagged as trained.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>tlr_trained&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>tlr&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>two_class_example&lt;/span>,&lt;/span>
&lt;span> outcome &lt;span class='o'>=&lt;/span> &lt;span class='nv'>truth&lt;/span>,&lt;/span>
&lt;span> estimate &lt;span class='o'>=&lt;/span> &lt;span class='nv'>predicted&lt;/span>,&lt;/span>
&lt;span> probabilities &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Class1&lt;/span>, &lt;span class='nv'>Class2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>tlr_trained&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>──&lt;/span> &lt;span style='font-weight: bold;'>tailor&lt;/span> &lt;span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; A binary postprocessor with 1 adjustment:&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> Adjust probability threshold to 0.7. [trained]&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>When used with a model
&lt;a href="https://workflows.tidymodels.org" target="_blank" rel="noopener">workflow&lt;/a> via
&lt;a href="https://workflows.tidymodels.org/dev/reference/add_tailor.html" target="_blank" rel="noopener">&lt;code>add_tailor()&lt;/code>&lt;/a>, the arguments to
&lt;a href="https://generics.r-lib.org/reference/fit.html" target="_blank" rel="noopener">&lt;code>fit()&lt;/code>&lt;/a> a tailor will be set automatically. Generally, as in recipes, we recommend that users add tailors to model workflows for training and prediction rather than using them standalone for greater ease of use and to prevent data leakage, but tailors are totally functional by themselves, too.&lt;/p>
&lt;p>Now, when passed new data, the trained tailor will determine the outputted class based on whether the probability assigned to the level &lt;code>&amp;quot;Class1&amp;quot;&lt;/code> is above &lt;code>.7&lt;/code>, resulting in more predictions of &lt;code>&amp;quot;Class2&amp;quot;&lt;/code> than before.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tlr_trained&lt;/span>, &lt;span class='nv'>two_class_example&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>count&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>predicted&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; predicted n&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Class1 236&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Class2 264&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Changing the probability threshold is one of many possible adjustments available in tailor.&lt;/p>
&lt;ul>
&lt;li>For probabilities:
&lt;a href="https://tailor.tidymodels.org/reference/adjust_probability_calibration.html" target="_blank" rel="noopener">calibration&lt;/a>&lt;/li>
&lt;li>For transformation of probabilities to hard class predictions:
&lt;a href="https://tailor.tidymodels.org/reference/adjust_probability_threshold.html" target="_blank" rel="noopener">thresholds&lt;/a>,
&lt;a href="https://tailor.tidymodels.org/reference/adjust_equivocal_zone.html" target="_blank" rel="noopener">equivocal zones&lt;/a>&lt;/li>
&lt;li>For numeric outcomes:
&lt;a href="https://tailor.tidymodels.org/reference/adjust_numeric_calibration.html" target="_blank" rel="noopener">calibration&lt;/a>,
&lt;a href="https://tailor.tidymodels.org/reference/adjust_numeric_range.html" target="_blank" rel="noopener">range&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Support for tailors is now plumbed through workflows (via
&lt;a href="https://workflows.tidymodels.org/dev/reference/add_tailor.html" target="_blank" rel="noopener">&lt;code>add_tailor()&lt;/code>&lt;/a>) and tune, and rsample includes a set of infrastructural changes to prevent data leakage behind the scenes. That said, we haven&amp;rsquo;t yet implemented support for tuning parameters in tailors, but we plan to implement that before this functionality heads to CRAN.&lt;/p>
&lt;h2 id="tailors-in-context">Tailors in context
&lt;a href="#tailors-in-context">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As an example, let&amp;rsquo;s model a study of food delivery times in minutes (i.e., the time from the initial order to receiving the food) for a single restaurant. The &lt;code>deliveries&lt;/code> data is available upon loading the tidymodels meta-package.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>deliveries&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># split into training and testing sets&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>delivery_split&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>initial_split&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>deliveries&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>delivery_train&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>training&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>delivery_split&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>delivery_test&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>testing&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>delivery_split&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># resample the training set using 10-fold cross-validation&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>delivery_folds&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>vfold_cv&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>delivery_train&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># print out the training set&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>delivery_train&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 7,509 × 31&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; time_to_delivery hour day distance item_01 item_02 item_03 item_04 item_05&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 21.2 16.1 Tue 3.02 0 0 0 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 17.9 12.4 Sun 3.37 0 0 0 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 22.4 14.2 Fri 2.59 0 0 0 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 30.9 19.1 Sat 2.77 0 0 0 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 30.1 16.5 Fri 2.05 0 0 0 1 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 35.3 14.7 Sat 4.57 0 0 2 1 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 13.1 11.5 Sat 2.09 0 0 0 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 18.3 13.4 Tue 2.35 0 2 1 0 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 25.2 20.5 Sat 2.43 0 0 0 1 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 30.7 16.7 Fri 2.24 0 0 0 1 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 7,499 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 22 more variables: item_06 &amp;lt;int&amp;gt;, item_07 &amp;lt;int&amp;gt;, item_08 &amp;lt;int&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># item_09 &amp;lt;int&amp;gt;, item_10 &amp;lt;int&amp;gt;, item_11 &amp;lt;int&amp;gt;, item_12 &amp;lt;int&amp;gt;, item_13 &amp;lt;int&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># item_14 &amp;lt;int&amp;gt;, item_15 &amp;lt;int&amp;gt;, item_16 &amp;lt;int&amp;gt;, item_17 &amp;lt;int&amp;gt;, item_18 &amp;lt;int&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># item_19 &amp;lt;int&amp;gt;, item_20 &amp;lt;int&amp;gt;, item_21 &amp;lt;int&amp;gt;, item_22 &amp;lt;int&amp;gt;, item_23 &amp;lt;int&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># item_24 &amp;lt;int&amp;gt;, item_25 &amp;lt;int&amp;gt;, item_26 &amp;lt;int&amp;gt;, item_27 &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Let&amp;rsquo;s deliberately define a regression model that has poor predicted values: a boosted tree with only three ensemble members.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>delivery_wflow&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>add_formula&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time_to_delivery&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>add_model&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>boost_tree&lt;/span>&lt;span class='o'>(&lt;/span>mode &lt;span class='o'>=&lt;/span> &lt;span class='s'>"regression"&lt;/span>, trees &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Evaluating against resamples:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>delivery_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>fit_resamples&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>delivery_wflow&lt;/span>, &lt;/span>
&lt;span> &lt;span class='nv'>delivery_folds&lt;/span>, &lt;/span>
&lt;span> control &lt;span class='o'>=&lt;/span> &lt;span class='nf'>control_resamples&lt;/span>&lt;span class='o'>(&lt;/span>save_pred &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The $R^2$ looks quite strong!&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/collect_predictions.html'>collect_metrics&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>delivery_res&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 6&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> rmse standard 9.52 10 0.053&lt;span style='text-decoration: underline;'>3&lt;/span> Preprocessor1_Model1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> rsq standard 0.853 10 0.003&lt;span style='text-decoration: underline;'>57&lt;/span> Preprocessor1_Model1&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Let&amp;rsquo;s take a closer look at the predictions, though. How well are they calibrated? We can use the
&lt;a href="https://probably.tidymodels.org/reference/cal_plot_regression.html" target="_blank" rel="noopener">&lt;code>cal_plot_regression()&lt;/code>&lt;/a> helper from the probably package to put together a quick diagnostic plot.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/collect_predictions.html'>collect_predictions&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>delivery_res&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://probably.tidymodels.org/reference/cal_plot_regression.html'>cal_plot_regression&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>truth &lt;span class='o'>=&lt;/span> &lt;span class='nv'>time_to_delivery&lt;/span>, estimate &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/predictions-bad-boost-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Ooof.&lt;/p>
&lt;p>In comes tailor! Numeric calibration can help address the correlated errors here. We can add a tailor to our existing workflow to &amp;ldquo;bump up&amp;rdquo; predictions towards their true value.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>delivery_wflow_improved&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>delivery_wflow&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>add_tailor&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tailor.tidymodels.org/reference/tailor.html'>tailor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://tailor.tidymodels.org/reference/adjust_numeric_calibration.html'>adjust_numeric_calibration&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The resampling code looks the same from here.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>delivery_res_improved&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>fit_resamples&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>delivery_wflow_improved&lt;/span>, &lt;/span>
&lt;span> &lt;span class='nv'>delivery_folds&lt;/span>, &lt;/span>
&lt;span> control &lt;span class='o'>=&lt;/span> &lt;span class='nf'>control_resamples&lt;/span>&lt;span class='o'>(&lt;/span>save_pred &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Checking out the same plot reveals a much better fit!&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/collect_predictions.html'>collect_predictions&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>delivery_res_improved&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://probably.tidymodels.org/reference/cal_plot_regression.html'>cal_plot_regression&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>truth &lt;span class='o'>=&lt;/span> &lt;span class='nv'>time_to_delivery&lt;/span>, estimate &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/predictios-better-boost-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>There&amp;rsquo;s actually some tricky data leakage prevention happening under the hood here. When you add tailors to workflow and fit them with tune, this is all taken care of for you. If you&amp;rsquo;re interested in using tailors outside of that context, check out
&lt;a href="https://workflows.tidymodels.org/dev/reference/add_tailor.html#data-usage" target="_blank" rel="noopener">this documentation section&lt;/a> in &lt;code>add_tailor()&lt;/code>.&lt;/p>
&lt;h2 id="whats-to-come">What&amp;rsquo;s to come
&lt;a href="#whats-to-come">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;re excited about how this work is shaping up and would love to hear yall&amp;rsquo;s thoughts on what we&amp;rsquo;ve brought together so far. Please do comment on our social media posts about this blog entry or leave issues on the
&lt;a href="https://github.com/tidymodels/tailor" target="_blank" rel="noopener">tailor GitHub repository&lt;/a> and let us know what you think!&lt;/p>
&lt;p>Before these changes head out to CRAN, we&amp;rsquo;ll also be implementing tuning functionality for postprocessors. You&amp;rsquo;ll be able to tag arguments like &lt;code>adjust_probability_threshold(threshold)&lt;/code> or &lt;code>adjust_probability_calibration(method)&lt;/code> with &lt;code>tune()&lt;/code> to optimize across several values. Besides that, post-processing with tidymodels should &amp;ldquo;just work&amp;rdquo; on the developmental versions of our packages&amp;mdash;let us know if you come across anything wonky.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Postprocessing support has been a longstanding feature request across many of our repositories; we&amp;rsquo;re grateful for the community discussions there for shaping this work. Additionally, we thank Ryan Tibshirani and Daniel McDonald for fruitful discussions on how we might scope these features.&lt;/p></description></item><item><title>recipes 1.1.0</title><link>https://www.tidyverse.org/blog/2024/07/recipes-1-1-0/</link><pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/07/recipes-1-1-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re thrilled to announce the release of
&lt;a href="https://recipes.tidymodels.org/" target="_blank" rel="noopener">recipes&lt;/a> 1.1.0. recipes lets you create a pipeable sequence of feature engineering steps.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"recipes"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will go over some of the bigger changes in this release. Improvements in column type checking, allowing more data types to be passed to recipes, use of long formulas and better error for misspelled argument names.&lt;/p>
&lt;p>You can see a full list of changes in the
&lt;a href="https://github.com/tidymodels/recipes/releases/tag/v1.1.0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="column-type-checking">Column type checking
&lt;a href="#column-type-checking">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A
&lt;a href="https://github.com/tidymodels/recipes/issues/793" target="_blank" rel="noopener">longtime issue&lt;/a> in recipes came from the fact that recipes didn&amp;rsquo;t keep a
&lt;a href="https://vctrs.r-lib.org/articles/type-size.html" target="_blank" rel="noopener">prototype&lt;/a> (ptype) of the data it was specified with. This would cause unexpected things to happen or uninformative error messages to appear if different data was used to
&lt;a href="https://recipes.tidymodels.org/reference/prep.html" target="_blank" rel="noopener">&lt;code>prep()&lt;/code>&lt;/a> than was used to create the
&lt;a href="https://recipes.tidymodels.org/reference/recipe.html" target="_blank" rel="noopener">&lt;code>recipe()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Every recipe you create starts with a call to
&lt;a href="https://recipes.tidymodels.org/reference/recipe.html" target="_blank" rel="noopener">&lt;code>recipe()&lt;/code>&lt;/a>. In the below example, we create a recipe where &lt;code>x2&lt;/code> starts by being a character vector, but the recipe is prepped where &lt;code>x2&lt;/code> is a numeric vector. This didn&amp;rsquo;t produce any warnings or errors, silently doing something unintended.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">data_template&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">outcome&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">x1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">x2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">sample&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">letters&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">T&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">outcome&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data_template&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_bin2factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_numeric_predictors&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">data_training&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">outcome&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1000&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">x1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1000&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">x2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1000&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">training&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data_training&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; ── Recipe ──────────────────────────────────────────────────────────────────────&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; ── Inputs&lt;/span>
&lt;span class="c1">#&amp;gt; Number of variables by role&lt;/span>
&lt;span class="c1">#&amp;gt; outcome: 1&lt;/span>
&lt;span class="c1">#&amp;gt; predictor: 2&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; ── Training information&lt;/span>
&lt;span class="c1">#&amp;gt; Training data contained 1000 data points and no incomplete rows.&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; ── Operations&lt;/span>
&lt;span class="c1">#&amp;gt; • Dummy variable to factor conversion for: x1 | Trained&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, we get an error detailing how the data is different.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>data_template&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>outcome &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Normal.html'>rnorm&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>, x1 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Normal.html'>rnorm&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>, x2 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sample.html'>sample&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>letters&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='kc'>T&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>outcome&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>data_template&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_bin2factor.html'>step_bin2factor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_numeric_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>data_training&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>outcome &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Normal.html'>rnorm&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1000&lt;/span>&lt;span class='o'>)&lt;/span>, x1 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Normal.html'>rnorm&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1000&lt;/span>&lt;span class='o'>)&lt;/span>, x2 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Normal.html'>rnorm&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1000&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>rec&lt;/span>, training &lt;span class='o'>=&lt;/span> &lt;span class='nv'>data_training&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `prep()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> The following variable has the wrong class:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> `x2` must have class &lt;span style='color: #0000BB;'>&amp;lt;numeric&amp;gt;&lt;/span>, not &lt;span style='color: #0000BB;'>&amp;lt;character&amp;gt;&lt;/span>.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that recipes created before version 1.1.0 don&amp;rsquo;t contain any ptype information, and will not undergo checking. Rerunning the code to create the recipe will add ptype information to the recipe.&lt;/p>
&lt;h2 id="input-checking-in-recipe">Input checking in &lt;code>recipe()&lt;/code>
&lt;a href="#input-checking-in-recipe">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We have relaxed the requirements of data frames, while making feedback more helpful when something goes wrong.&lt;/p>
&lt;p>The data was previously passed through
&lt;a href="https://rdrr.io/r/stats/model.frame.html" target="_blank" rel="noopener">&lt;code>model.frame()&lt;/code>&lt;/a> inside the recipe, which restricted what could be handled. Previously prohibited input included data frames with list-columns or
&lt;a href="https://r-spatial.github.io/sf/" target="_blank" rel="noopener">sf&lt;/a> data frames. Both of these are now supported, as long as they are a &lt;code>data.frame&lt;/code> object.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>data_listcolumn&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> y &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>4&lt;/span>,&lt;/span>
&lt;span> x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>, &lt;span class='m'>4&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>6&lt;/span>, &lt;span class='m'>3&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>y&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>data_listcolumn&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>──&lt;/span> &lt;span style='font-weight: bold;'>Recipe&lt;/span> &lt;span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; ── Inputs&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; Number of variables by role&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; outcome: 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; predictor: 1&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://r-spatial.github.io/sf/'>sf&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Linking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nv'>pathshp&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/system.file.html'>system.file&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"shape/nc.shp"&lt;/span>, package &lt;span class='o'>=&lt;/span> &lt;span class='s'>"sf"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>data_sf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://r-spatial.github.io/sf/reference/st_read.html'>st_read&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>pathshp&lt;/span>, quiet &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>AREA&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>data_sf&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>──&lt;/span> &lt;span style='font-weight: bold;'>Recipe&lt;/span> &lt;span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; ── Inputs&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; Number of variables by role&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; outcome: 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; predictor: 14&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We are excited to see what people can do with these new options.&lt;/p>
&lt;p>Another way to tell a recipe what variables should be included and what roles they should have is to use
&lt;a href="https://recipes.tidymodels.org/reference/roles.html" target="_blank" rel="noopener">&lt;code>add_role()&lt;/code>&lt;/a> and
&lt;a href="https://recipes.tidymodels.org/reference/roles.html" target="_blank" rel="noopener">&lt;code>update_role()&lt;/code>&lt;/a>. But if you were not careful, you could end up in situations where the same variable is labeled as both the outcome and predictor.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># didn't used to throw a warning&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/roles.html'>update_role&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/everything.html'>everything&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, new_role &lt;span class='o'>=&lt;/span> &lt;span class='s'>"predictor"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/roles.html'>add_role&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"mpg"&lt;/span>, new_role &lt;span class='o'>=&lt;/span> &lt;span class='s'>"outcome"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `add_role()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> `mpg` cannot get &lt;span style='color: #0000BB;'>"outcome"&lt;/span> role as it already has role &lt;span style='color: #0000BB;'>"predictor"&lt;/span>.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This error can be avoided by using
&lt;a href="https://recipes.tidymodels.org/reference/roles.html" target="_blank" rel="noopener">&lt;code>update_role()&lt;/code>&lt;/a> instead of
&lt;a href="https://recipes.tidymodels.org/reference/roles.html" target="_blank" rel="noopener">&lt;code>add_role()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/roles.html'>update_role&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/everything.html'>everything&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, new_role &lt;span class='o'>=&lt;/span> &lt;span class='s'>"predictor"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/roles.html'>update_role&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"mpg"&lt;/span>, new_role &lt;span class='o'>=&lt;/span> &lt;span class='s'>"outcome"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>──&lt;/span> &lt;span style='font-weight: bold;'>Recipe&lt;/span> &lt;span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; ── Inputs&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; Number of variables by role&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; outcome: 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; predictor: 10&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="long-formulas-in-recipe">Long formulas in &lt;code>recipe()&lt;/code>
&lt;a href="#long-formulas-in-recipe">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Related to the changes we saw above, we now fully support very long formulas without hitting a &lt;code>C stack usage&lt;/code> error.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>data_wide&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/matrix.html'>matrix&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>10000&lt;/span>, ncol &lt;span class='o'>=&lt;/span> &lt;span class='m'>10000&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>data_wide&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.data.frame.html'>as.data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>data_wide&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/names.html'>names&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>data_wide&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/paste.html'>paste0&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"x"&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>10000&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>long_formula&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/formula.html'>as.formula&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/paste.html'>paste&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"~ "&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/paste.html'>paste&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/names.html'>names&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>data_wide&lt;/span>&lt;span class='o'>)&lt;/span>, collapse &lt;span class='o'>=&lt;/span> &lt;span class='s'>" + "&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>long_formula&lt;/span>, &lt;span class='nv'>data_wide&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>──&lt;/span> &lt;span style='font-weight: bold;'>Recipe&lt;/span> &lt;span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; ── Inputs&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; Number of variables by role&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; predictor: 10000&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="better-error-for-misspelled-argument-names">Better error for misspelled argument names
&lt;a href="#better-error-for-misspelled-argument-names">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you have used recipes long enough you are very likely to have run into the following error.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">step_pca&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_numeric_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `step_pca()`:&lt;/span>
&lt;span class="c1">#&amp;gt; Caused by error in `prep()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! Can&amp;#39;t rename variables in this context.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first time you saw it, it didn&amp;rsquo;t make much sense. Hopefully, you figured out that
&lt;a href="https://recipes.tidymodels.org/reference/step_pca.html" target="_blank" rel="noopener">step_pca()&lt;/a> doesn&amp;rsquo;t have a &lt;code>number&lt;/code> argument, and instead uses &lt;code>num_comp&lt;/code> to determine the number of principal components to return. This confusion will be a thing of the past as we now include this improved error message.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_pca.html'>step_pca&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_numeric_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, number &lt;span class='o'>=&lt;/span> &lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `step_pca()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Caused by error in `prep()` at recipes/R/recipe.R:479:9:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> The following argument was specified but do not exist: `number`.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="quality-of-life-increases-in-step_dummy">Quality of life increases in &lt;code>step_dummy()&lt;/code>
&lt;a href="#quality-of-life-increases-in-step_dummy">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I would imagine that one of the most used steps is
&lt;a href="https://recipes.tidymodels.org/reference/step_dummy.html" target="_blank" rel="noopener">&lt;code>step_dummy()&lt;/code>&lt;/a>. We have improved the errors and warnings it spits out when things go sideways.&lt;/p>
&lt;p>If you apply
&lt;a href="https://recipes.tidymodels.org/reference/step_dummy.html" target="_blank" rel="noopener">&lt;code>step_dummy()&lt;/code>&lt;/a> to a variable that contains a lot of levels, it will produce a lot of columns, and the resulting object may not fit in memory. This can lead to the following error.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">data_id&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">as.character&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">100000&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">x1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">100000&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">x2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">sample&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">letters&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">100000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data_id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_nominal_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Error: vector memory exhausted (limit reached?)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Instead, you now get a more helpful error message.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>data_id&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/character.html'>as.character&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>100000&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> x1 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/Normal.html'>rnorm&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>100000&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> x2 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sample.html'>sample&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>letters&lt;/span>, &lt;span class='m'>100000&lt;/span>, &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>data_id&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_dummy.html'>step_dummy&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_nominal_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `step_dummy()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Caused by error:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> `id` contains too many levels (100000), which would result in a&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; data.frame too large to fit in memory.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Likewise, you will get helpful errors if
&lt;a href="https://recipes.tidymodels.org/reference/step_dummy.html" target="_blank" rel="noopener">&lt;code>step_dummy()&lt;/code>&lt;/a> gets a &lt;code>NA&lt;/code> or unseen values.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>data_train&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>data_unseen&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='s'>"c"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>rec_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span>&lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>data_train&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_dummy.html'>step_dummy&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>rec_spec&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>data_unseen&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning: &lt;span style='color: #BBBB00;'>!&lt;/span> There are new levels in `x`: &lt;span style='color: #0000BB;'>"c"&lt;/span>.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Consider using step_novel() (`?recipes::step_novel()`) before `step_dummy()`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; to handle unseen values.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x_b&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>data_na&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NA&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>rec_spec&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>data_na&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning: &lt;span style='color: #BBBB00;'>!&lt;/span> There are new levels in `x`: &lt;span style='color: #0000BB;'>NA&lt;/span>.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Consider using step_unknown() (`?recipes::step_unknown()`) before&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `step_dummy()` to handle missing values.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x_b&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thank you to all the people who have contributed to recipes since the release of v1.0.10:&lt;/p>
&lt;p>
&lt;a href="https://github.com/brynhum" target="_blank" rel="noopener">@brynhum&lt;/a>,
&lt;a href="https://github.com/DemetriPananos" target="_blank" rel="noopener">@DemetriPananos&lt;/a>,
&lt;a href="https://github.com/diegoperoni" target="_blank" rel="noopener">@diegoperoni&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/JiahuaQu" target="_blank" rel="noopener">@JiahuaQu&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/nhward" target="_blank" rel="noopener">@nhward&lt;/a>,
&lt;a href="https://github.com/olivroy" target="_blank" rel="noopener">@olivroy&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/p>
&lt;h2 id="chocolate-chocolate-chip-cookies">Chocolate Chocolate Chip Cookies
&lt;a href="#chocolate-chocolate-chip-cookies">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>preheat oven 350°F&lt;/p>
&lt;ul>
&lt;li>1/3c butter&lt;/li>
&lt;li>1/2 + 1/3c sugar&lt;/li>
&lt;/ul>
&lt;p>mix until fluffy&lt;/p>
&lt;ul>
&lt;li>1 tsp vanilla&lt;/li>
&lt;li>1 egg&lt;/li>
&lt;/ul>
&lt;p>mix until combined&lt;/p>
&lt;ul>
&lt;li>1/2c cocoa&lt;/li>
&lt;li>1/2 tsp baking soda&lt;/li>
&lt;li>1c flour&lt;/li>
&lt;/ul>
&lt;p>mix until combined&lt;/p>
&lt;ul>
&lt;li>3/4c chocolate chips&lt;/li>
&lt;/ul>
&lt;p>bake for about 8 mins, depending on size! they will crack on top, but still be soft.&lt;/p></description></item><item><title>bonsai 0.3.0</title><link>https://www.tidyverse.org/blog/2024/06/bonsai-0-3-0/</link><pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/06/bonsai-0-3-0/</guid><description>&lt;p>We&amp;rsquo;re brimming with glee to announce the release of
&lt;a href="https://bonsai.tidymodels.org" target="_blank" rel="noopener">bonsai&lt;/a> 0.3.0. bonsai is a parsnip extension package for tree-based models, and includes support for random forest and gradient-boosted tree frameworks like partykit and LightGBM. This most recent release of the package introduces support for the &lt;code>&amp;quot;aorsf&amp;quot;&lt;/code> engine, which implements accelerated oblique random forests (Jaeger et al. 2022, Jaeger et al. 2024).&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"bonsai"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will demonstrate a modeling workflow where the benefits of using oblique random forests shine through.&lt;/p>
&lt;p>You can see a full list of changes in the
&lt;a href="https://bonsai.tidymodels.org/news/index.html#bonsai-030" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://bonsai.tidymodels.org/'>bonsai&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://plsmod.tidymodels.org'>plsmod&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/corrr'>corrr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="the-meats-data">The &lt;code>meats&lt;/code> data
&lt;a href="#the-meats-data">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The modeldata package, loaded automatically with the tidymodels meta-package, includes several example datasets to demonstrate modeling problems. We&amp;rsquo;ll make use of a dataset called &lt;code>meats&lt;/code> in this post. Each row is a measurement of a sample of finely chopped meat.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>meats&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 215 × 103&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; x_001 x_002 x_003 x_004 x_005 x_006 x_007 x_008 x_009 x_010 x_011 x_012 x_013&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 2.62 2.62 2.62 2.62 2.62 2.62 2.62 2.62 2.63 2.63 2.63 2.63 2.64&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 2.83 2.84 2.84 2.85 2.85 2.86 2.86 2.87 2.87 2.88 2.88 2.89 2.90&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 2.58 2.58 2.59 2.59 2.59 2.59 2.59 2.60 2.60 2.60 2.60 2.61 2.61&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 2.82 2.82 2.83 2.83 2.83 2.83 2.83 2.84 2.84 2.84 2.84 2.85 2.85&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 2.79 2.79 2.79 2.79 2.80 2.80 2.80 2.80 2.81 2.81 2.81 2.82 2.82&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 3.01 3.02 3.02 3.03 3.03 3.04 3.04 3.05 3.06 3.06 3.07 3.08 3.09&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 2.99 2.99 3.00 3.01 3.01 3.02 3.02 3.03 3.04 3.04 3.05 3.06 3.07&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 2.53 2.53 2.53 2.53 2.53 2.53 2.53 2.53 2.54 2.54 2.54 2.54 2.54&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 3.27 3.28 3.29 3.29 3.30 3.31 3.31 3.32 3.33 3.33 3.34 3.35 3.36&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 3.40 3.41 3.41 3.42 3.43 3.43 3.44 3.45 3.46 3.47 3.48 3.48 3.49&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 205 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 90 more variables: x_014 &amp;lt;dbl&amp;gt;, x_015 &amp;lt;dbl&amp;gt;, x_016 &amp;lt;dbl&amp;gt;, x_017 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># x_018 &amp;lt;dbl&amp;gt;, x_019 &amp;lt;dbl&amp;gt;, x_020 &amp;lt;dbl&amp;gt;, x_021 &amp;lt;dbl&amp;gt;, x_022 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># x_023 &amp;lt;dbl&amp;gt;, x_024 &amp;lt;dbl&amp;gt;, x_025 &amp;lt;dbl&amp;gt;, x_026 &amp;lt;dbl&amp;gt;, x_027 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># x_028 &amp;lt;dbl&amp;gt;, x_029 &amp;lt;dbl&amp;gt;, x_030 &amp;lt;dbl&amp;gt;, x_031 &amp;lt;dbl&amp;gt;, x_032 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># x_033 &amp;lt;dbl&amp;gt;, x_034 &amp;lt;dbl&amp;gt;, x_035 &amp;lt;dbl&amp;gt;, x_036 &amp;lt;dbl&amp;gt;, x_037 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># x_038 &amp;lt;dbl&amp;gt;, x_039 &amp;lt;dbl&amp;gt;, x_040 &amp;lt;dbl&amp;gt;, x_041 &amp;lt;dbl&amp;gt;, x_042 &amp;lt;dbl&amp;gt;, …&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>From that dataset&amp;rsquo;s documentation:&lt;/p>
&lt;blockquote>
&lt;p>These data are recorded on a Tecator Infratec Food and Feed Analyzer&amp;hellip; For each meat sample the data consists of a 100 channel spectrum of absorbances and the contents of moisture (water), fat and protein. The absorbance is -log10 of the transmittance measured by the spectrometer. The three contents, measured in percent, are determined by analytic chemistry.&lt;/p>
&lt;/blockquote>
&lt;p>We&amp;rsquo;ll try to predict the protein content, as a percentage, using the absorbance measurements.&lt;/p>
&lt;p>Before we take a further look, let&amp;rsquo;s split up our data. I&amp;rsquo;ll first select off two other possible outcome variables and, after splitting into training and testing sets, resample the data using 5-fold cross-validation with 2 repeats.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>meats&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>meats&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='nv'>water&lt;/span>, &lt;span class='o'>-&lt;/span>&lt;span class='nv'>fat&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>meats_split&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>initial_split&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>meats&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>meats_train&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>training&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>meats_split&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>meats_test&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>testing&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>meats_split&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>meats_folds&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>vfold_cv&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>meats_train&lt;/span>, v &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>, repeats &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The tricky parts of this modeling problem are that:&lt;/p>
&lt;ol>
&lt;li>There are few observations to work with (215 total).&lt;/li>
&lt;li>Each of these 100 absorbance measurements are &lt;em>highly&lt;/em> correlated.&lt;/li>
&lt;/ol>
&lt;p>Visualizing that correlation:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>meats_train&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://corrr.tidymodels.org/reference/correlate.html'>correlate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>theme&lt;/span>&lt;span class='o'>(&lt;/span>axis.text.x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>element_blank&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, axis.text.y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>element_blank&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Correlation computed with&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> Method: 'pearson'&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> Missing treated using: 'pairwise.complete.obs'&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/correlate-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Almost all of these pairwise correlations between predictors are near 1, besides the last variable and every other variable. That last variable with weaker correlation values? It&amp;rsquo;s the outcome.&lt;/p>
&lt;h2 id="baseline-models">Baseline models
&lt;a href="#baseline-models">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are several existing model implementations in tidymodels that are resilient to highly correlated predictors. The first one I&amp;rsquo;d probably reach for is an elastic net: an interpolation of the LASSO and Ridge regularized linear regression models. Evaluating that modeling approach against resamples:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># define a regularized linear model&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>spec_lr&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/linear_reg.html'>linear_reg&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>penalty &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, mixture &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"glmnet"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># try out different penalization approaches&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>res_lr&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>tune_grid&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>spec_lr&lt;/span>, &lt;span class='nv'>protein&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>meats_folds&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>show_best&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>res_lr&lt;/span>, metric &lt;span class='o'>=&lt;/span> &lt;span class='s'>"rmse"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; penalty mixture .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 0.000&lt;span style='text-decoration: underline;'>032&lt;/span>4 0.668 rmse standard 1.24 10 0.051&lt;span style='text-decoration: underline;'>6&lt;/span> Preprocessor1_Mo…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 0.000&lt;span style='text-decoration: underline;'>000&lt;/span>005&lt;span style='text-decoration: underline;'>24&lt;/span> 0.440 rmse standard 1.25 10 0.054&lt;span style='text-decoration: underline;'>8&lt;/span> Preprocessor1_Mo…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 0.000&lt;span style='text-decoration: underline;'>000&lt;/span>461 0.839 rmse standard 1.26 10 0.053&lt;span style='text-decoration: underline;'>8&lt;/span> Preprocessor1_Mo…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 0.000&lt;span style='text-decoration: underline;'>005&lt;/span>50 0.965 rmse standard 1.26 10 0.054&lt;span style='text-decoration: underline;'>0&lt;/span> Preprocessor1_Mo…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 0.000&lt;span style='text-decoration: underline;'>000&lt;/span>048&lt;span style='text-decoration: underline;'>9&lt;/span> 0.281 rmse standard 1.26 10 0.053&lt;span style='text-decoration: underline;'>4&lt;/span> Preprocessor1_Mo…&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nf'>show_best&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>res_lr&lt;/span>, metric &lt;span class='o'>=&lt;/span> &lt;span class='s'>"rsq"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; penalty mixture .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 0.000&lt;span style='text-decoration: underline;'>032&lt;/span>4 0.668 rsq standard 0.849 10 0.012&lt;span style='text-decoration: underline;'>6&lt;/span> Preprocessor1_Mo…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 0.000&lt;span style='text-decoration: underline;'>000&lt;/span>005&lt;span style='text-decoration: underline;'>24&lt;/span> 0.440 rsq standard 0.848 10 0.012&lt;span style='text-decoration: underline;'>8&lt;/span> Preprocessor1_Mo…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 0.000&lt;span style='text-decoration: underline;'>000&lt;/span>461 0.839 rsq standard 0.846 10 0.011&lt;span style='text-decoration: underline;'>4&lt;/span> Preprocessor1_Mo…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 0.000&lt;span style='text-decoration: underline;'>005&lt;/span>50 0.965 rsq standard 0.846 10 0.011&lt;span style='text-decoration: underline;'>1&lt;/span> Preprocessor1_Mo…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 0.000&lt;span style='text-decoration: underline;'>000&lt;/span>048&lt;span style='text-decoration: underline;'>9&lt;/span> 0.281 rsq standard 0.846 10 0.012&lt;span style='text-decoration: underline;'>6&lt;/span> Preprocessor1_Mo…&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>That best RMSE value of 1.24 gives us a baseline to work with, and the best R-squared 0.85 seems like a good start.&lt;/p>
&lt;p>Many tree-based model implementations in tidymodels generally handle correlated predictors well. Just to be apples-to-apples with &lt;code>&amp;quot;aorsf&amp;quot;&lt;/code>, let&amp;rsquo;s use a different random forest engine to get a better sense for baseline performance:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>spec_rf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/rand_forest.html'>rand_forest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mtry &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, min_n &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='c'># this is the default engine, but for consistency's sake:&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ranger"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>res_rf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>tune_grid&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>spec_rf&lt;/span>, &lt;span class='nv'>protein&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>meats_folds&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>i&lt;/span> &lt;span style='color: #000000;'>Creating pre-processing data to finalize unknown parameter: mtry&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>show_best&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>res_rf&lt;/span>, metric &lt;span class='o'>=&lt;/span> &lt;span class='s'>"rmse"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mtry min_n .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 96 4 rmse standard 2.37 10 0.090&lt;span style='text-decoration: underline;'>5&lt;/span> Preprocessor1_Model08&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 41 6 rmse standard 2.39 10 0.088&lt;span style='text-decoration: underline;'>3&lt;/span> Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 88 10 rmse standard 2.43 10 0.081&lt;span style='text-decoration: underline;'>6&lt;/span> Preprocessor1_Model06&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 79 17 rmse standard 2.51 10 0.074&lt;span style='text-decoration: underline;'>0&lt;/span> Preprocessor1_Model07&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 27 18 rmse standard 2.52 10 0.077&lt;span style='text-decoration: underline;'>8&lt;/span> Preprocessor1_Model04&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nf'>show_best&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>res_rf&lt;/span>, metric &lt;span class='o'>=&lt;/span> &lt;span class='s'>"rsq"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mtry min_n .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 96 4 rsq standard 0.424 10 0.038&lt;span style='text-decoration: underline;'>5&lt;/span> Preprocessor1_Model08&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 41 6 rsq standard 0.409 10 0.039&lt;span style='text-decoration: underline;'>4&lt;/span> Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 88 10 rsq standard 0.387 10 0.036&lt;span style='text-decoration: underline;'>5&lt;/span> Preprocessor1_Model06&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 79 17 rsq standard 0.353 10 0.040&lt;span style='text-decoration: underline;'>4&lt;/span> Preprocessor1_Model07&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 27 18 rsq standard 0.346 10 0.039&lt;span style='text-decoration: underline;'>7&lt;/span> Preprocessor1_Model04&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Not so hot. Just to show I&amp;rsquo;m not making a straw man here, I&amp;rsquo;ll evaluate a few more alternative modeling approaches behind the curtain and print out their best performance metrics:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Gradient boosted tree with LightGBM&lt;/strong>. Best RMSE: 2.34. Best R-squared: 0.43.&lt;/li>
&lt;li>&lt;strong>Partial least squares regression&lt;/strong>. Best RMSE: 1.39. Best R-squared: 0.81.&lt;/li>
&lt;li>&lt;strong>Support vector machine&lt;/strong>. Best RMSE: 2.28. Best R-squared: 0.46.&lt;/li>
&lt;/ul>
&lt;p>This is a tricky one.&lt;/p>
&lt;h2 id="introducing-accelerated-oblique-random-forests">Introducing accelerated oblique random forests
&lt;a href="#introducing-accelerated-oblique-random-forests">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The 0.3.0 release of bonsai introduces support for accelerated oblique random forests via the &lt;code>&amp;quot;aorsf&amp;quot;&lt;/code> engine for classification and regression in tidymodels. (Tidy survival modelers might note that
&lt;a href="https://www.tidyverse.org/blog/2023/04/censored-0-2-0/" target="_blank" rel="noopener">we already support &lt;code>&amp;quot;aorsf&amp;quot;&lt;/code> for censored regression&lt;/a> via the
&lt;a href="https://censored.tidymodels.org" target="_blank" rel="noopener">censored&lt;/a> parsnip extension package!)&lt;/p>
&lt;p>Unlike trees in conventional random forests, which create splits using thresholds based on individual predictors (e.g. &lt;code>x_001 &amp;gt; 3&lt;/code>), oblique random forests use linear combinations of predictors to create splits (e.g. &lt;code>x_001 * x_002 &amp;gt; 7.5&lt;/code>) and have been shown to improve predictive performance related to conventional random forests for a variety of applications (Menze et al. 2011). &amp;ldquo;Oblique&amp;rdquo; references the appearance of decision boundaries when a set of splits is plotted; I&amp;rsquo;ve grabbed a visual from the
&lt;a href="https://github.com/ropensci/aorsf?tab=readme-ov-file#what-does-oblique-mean" target="_blank" rel="noopener">aorsf README&lt;/a> that demonstrates:&lt;/p>
&lt;div class="highlight">
&lt;p>&lt;img src="figures/oblique.png" alt="Two plots of decision boundaries for a classification problem. One uses single-variable splitting and the other oblique splitting. Both trees partition the predictor space defined by predictors X1 and X2, but the oblique splits do a better job of separating the two classes thanks to an 'oblique' boundary formed by considering both X1 and X2 at the same time." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>In the above, we&amp;rsquo;d like to separate the purple dots from the orange squares. A tree in a traditional random forest, represented on the left, can only generate splits based on one of X1 or X2 at a time. A tree in an oblique random forest, represented on the right, can consider both X1 and X2 in creating decision boundaries, often resulting in stronger predictive performance.&lt;/p>
&lt;p>Where does the &amp;ldquo;accelerated&amp;rdquo; come from? Generally, finding optimal oblique splits is computationally more intensive than finding single-predictor splits. The aorsf package uses something called &amp;ldquo;Newton Raphson scoring&amp;rdquo;&amp;mdash;the same algorithm under the hood in the survival package&amp;mdash;to identify splits based on linear combinations of predictor variables. This approach speeds up that process greatly, resulting in fit times that are analogous to implementations of traditional random forests in R (and hundreds of times faster than existing oblique random forest implementations, Jaeger et al. 2024).&lt;/p>
&lt;p>The code to tune this model with the &lt;code>&amp;quot;aorsf&amp;quot;&lt;/code> engine is the same as for &lt;code>&amp;quot;ranger&amp;quot;&lt;/code>, except we switch out the &lt;code>engine&lt;/code> argument to
&lt;a href="https://parsnip.tidymodels.org/reference/set_engine.html" target="_blank" rel="noopener">&lt;code>set_engine()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>spec_aorsf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/rand_forest.html'>rand_forest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> mtry &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> min_n &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"aorsf"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>res_aorsf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>tune_grid&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>spec_aorsf&lt;/span>, &lt;span class='nv'>protein&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>meats_folds&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>i&lt;/span> &lt;span style='color: #000000;'>Creating pre-processing data to finalize unknown parameter: mtry&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>show_best&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>res_aorsf&lt;/span>, metric &lt;span class='o'>=&lt;/span> &lt;span class='s'>"rmse"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mtry min_n .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 87 11 rmse standard 0.786 10 0.037&lt;span style='text-decoration: underline;'>0&lt;/span> Preprocessor1_Model02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 98 8 rmse standard 0.789 10 0.036&lt;span style='text-decoration: underline;'>3&lt;/span> Preprocessor1_Model10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 48 5 rmse standard 0.793 10 0.036&lt;span style='text-decoration: underline;'>3&lt;/span> Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 16 17 rmse standard 0.803 10 0.032&lt;span style='text-decoration: underline;'>5&lt;/span> Preprocessor1_Model09&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 31 18 rmse standard 0.813 10 0.035&lt;span style='text-decoration: underline;'>9&lt;/span> Preprocessor1_Model05&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nf'>show_best&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>res_aorsf&lt;/span>, metric &lt;span class='o'>=&lt;/span> &lt;span class='s'>"rsq"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mtry min_n .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 48 5 rsq standard 0.946 10 0.004&lt;span style='text-decoration: underline;'>46&lt;/span> Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 98 8 rsq standard 0.945 10 0.004&lt;span style='text-decoration: underline;'>82&lt;/span> Preprocessor1_Model10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 87 11 rsq standard 0.945 10 0.004&lt;span style='text-decoration: underline;'>84&lt;/span> Preprocessor1_Model02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 16 17 rsq standard 0.941 10 0.003&lt;span style='text-decoration: underline;'>70&lt;/span> Preprocessor1_Model09&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 31 18 rsq standard 0.940 10 0.005&lt;span style='text-decoration: underline;'>47&lt;/span> Preprocessor1_Model05&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Holy smokes. The best RMSE from aorsf is 0.79, much more performant than the previous best RMSE from the elastic net with a value of 1.24, and the best R-squared is 0.95, much stronger than the previous best (also from the elastic net) of 0.85.&lt;/p>
&lt;p>Especially if your modeling problems involve few samples of many, highly correlated predictors, give the &lt;code>&amp;quot;aorsf&amp;quot;&lt;/code> modeling engine a whirl in your workflows and let us know what you think!&lt;/p>
&lt;h2 id="references">References
&lt;a href="#references">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Byron C. Jaeger, Sawyer Welden, Kristin Lenoir, Jaime L. Speiser, Matthew W. Segar, Ambarish Pandey, Nicholas M. Pajewski. 2024. &amp;ldquo;Accelerated and Interpretable Oblique Random Survival Forests.&amp;rdquo; &lt;em>Journal of Computational and Graphical Statistics&lt;/em> 33.1: 192-207.&lt;/p>
&lt;p>Byron C. Jaeger, Sawyer Welden, Kristin Lenoir, and Nicholas M. Pajewski. 2022. &amp;ldquo;aorsf: An R package for Supervised Learning Using the Oblique Random Survival Forest.&amp;rdquo; &lt;em>The Journal of Open Source Software&lt;/em>.&lt;/p>
&lt;p>Bjoern H. Menze, B. Michael Kelm, Daniel N. Splitthoff, Ullrich Koethe, and Fred A. Hamprecht. (2011). &amp;ldquo;On Oblique Random Forests.&amp;rdquo; &lt;em>Joint European Conference on Machine Learning and Knowledge Discovery in Databases&lt;/em> (pp. 453&amp;ndash;469). Springer.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thank you to
&lt;a href="https://github.com/bcjaeger" target="_blank" rel="noopener">@bcjaeger&lt;/a>, the aorsf author, for doing most of the work to implement aorsf support in bonsai. Thank you to
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>,
&lt;a href="https://github.com/p-schaefer" target="_blank" rel="noopener">@p-schaefer&lt;/a>,
&lt;a href="https://github.com/seb-mueller" target="_blank" rel="noopener">@seb-mueller&lt;/a>, and
&lt;a href="https://github.com/tcovert" target="_blank" rel="noopener">@tcovert&lt;/a> for their contributions on the bonsai repository since version 0.2.1.&lt;/p></description></item><item><title>Q1 2024 tidymodels digest</title><link>https://www.tidyverse.org/blog/2024/04/tidymodels-2024-q1/</link><pubDate>Wed, 24 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/04/tidymodels-2024-q1/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;p>Since the beginning of 2021, we have been publishing
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">quarterly updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused, like these posts from the past couple of months:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2024/04/tidymodels-survival-analysis/" target="_blank" rel="noopener">Survival analysis for time-to-event data with tidymodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2024/03/tidymodels-fairness/" target="_blank" rel="noopener">Fair machine learning with tidymodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2024/04/tune-1-2-0/" target="_blank" rel="noopener">tune 1.2.0&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Additionally, we have published several related articles on
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels.org&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-case-study/" target="_blank" rel="noopener">How long until building complaints are dispositioned? A survival analysis case study&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-metrics/" target="_blank" rel="noopener">Dynamic Performance Metrics for Event Time Data&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-metrics-details/" target="_blank" rel="noopener">Accounting for Censoring in Performance Metrics for Event Time Data&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/work/fairness-detectors/" target="_blank" rel="noopener">Are GPT detectors fair? A machine learning fairness case study&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/work/fairness-readmission/" target="_blank" rel="noopener">Fair prediction of hospital readmission: a machine learning fairness case study&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/models/bootstrap-metrics/" target="_blank" rel="noopener">Confidence Intervals for Performance Metrics&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2024/01/tidymodels-2023-q4/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been CRAN releases of 21 tidymodels packages. Here are links to their NEWS files:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>baguette
&lt;a href="https://baguette.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.2)&lt;/a>&lt;/li>
&lt;li>brulee
&lt;a href="https://brulee.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.0)&lt;/a>&lt;/li>
&lt;li>butcher
&lt;a href="https://butcher.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.4)&lt;/a>&lt;/li>
&lt;li>censored
&lt;a href="https://censored.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.0)&lt;/a>&lt;/li>
&lt;li>dials
&lt;a href="https://dials.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.1)&lt;/a>&lt;/li>
&lt;li>embed
&lt;a href="https://embed.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.4)&lt;/a>&lt;/li>
&lt;li>finetune
&lt;a href="https://finetune.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.0)&lt;/a>&lt;/li>
&lt;li>hardhat
&lt;a href="https://hardhat.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.3.1)&lt;/a>&lt;/li>
&lt;li>modeldata
&lt;a href="https://modeldata.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.3.0)&lt;/a>&lt;/li>
&lt;li>parsnip
&lt;a href="https://parsnip.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.1)&lt;/a>&lt;/li>
&lt;li>probably
&lt;a href="https://probably.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.3)&lt;/a>&lt;/li>
&lt;li>recipes
&lt;a href="https://recipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.10)&lt;/a>&lt;/li>
&lt;li>rsample
&lt;a href="https://rsample.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.1)&lt;/a>&lt;/li>
&lt;li>shinymodels
&lt;a href="https://shinymodels.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.1.1)&lt;/a>&lt;/li>
&lt;li>stacks
&lt;a href="https://stacks.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.4)&lt;/a>&lt;/li>
&lt;li>tidyclust
&lt;a href="https://tidyclust.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.2.1)&lt;/a>&lt;/li>
&lt;li>tidymodels
&lt;a href="https://tidymodels.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.0)&lt;/a>&lt;/li>
&lt;li>tune
&lt;a href="https://tune.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.0)&lt;/a>&lt;/li>
&lt;li>workflows
&lt;a href="https://workflows.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.4)&lt;/a>&lt;/li>
&lt;li>workflowsets
&lt;a href="https://workflowsets.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.0)&lt;/a>&lt;/li>
&lt;li>yardstick
&lt;a href="https://yardstick.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.3.1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;ll highlight a few especially notable changes below: new prediction options in censored, consistency in augmenting parsnip models and workflows, as well as a new autoplot type for workflow sets.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/censored'>censored&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="new-prediction-options-in-censored">New prediction options in censored
&lt;a href="#new-prediction-options-in-censored">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As part of the framework-wide integration of survival analysis, the parsnip extension package censored has received some love in the form of new prediction options.&lt;/p>
&lt;p>Random forests with the &lt;code>&amp;quot;aorsf&amp;quot;&lt;/code> engine can now predict survival time, thanks to the new feature in the
&lt;a href="https://docs.ropensci.org/aorsf/" target="_blank" rel="noopener">aorsf&lt;/a> package itself. This means that all engines in censored can now predict survival time.&lt;/p>
&lt;p>Let&amp;rsquo;s predict survival time for the first five rows of the lung cancer dataset, survival analysis&amp;rsquo; &lt;code>mtcars&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>rf_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/rand_forest.html'>rand_forest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"aorsf"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"censored regression"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>rf_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>rf_spec&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>, &lt;span class='nv'>status&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>age&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>sex&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>lung_5&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>lung&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>5&lt;/span>, &lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>rf_fit&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung_5&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"time"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred_time&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 217.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 240.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 236.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 236.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 254.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Some models allow for predictions based on different values for tuning parameter without having to refit the model. In parsnip, we refer to this as
&lt;a href="https://parsnip.tidymodels.org/articles/Submodels.html" target="_blank" rel="noopener">&amp;ldquo;the submodel trick.&amp;quot;&lt;/a> Some of those models are regularized models fitted with the
&lt;a href="https://glmnet.stanford.edu/" target="_blank" rel="noopener">glmnet&lt;/a> engine. In censored, the corresponding
&lt;a href="https://parsnip.tidymodels.org/reference/multi_predict.html" target="_blank" rel="noopener">&lt;code>multi_predict()&lt;/code>&lt;/a> method has now gained the prediction types &lt;code>&amp;quot;time&amp;quot;&lt;/code> and &lt;code>&amp;quot;raw&amp;quot;&lt;/code> in addition to the existing types &lt;code>&amp;quot;survival&amp;quot;&lt;/code> and &lt;code>&amp;quot;linear_pred&amp;quot;&lt;/code>.&lt;/p>
&lt;p>Let&amp;rsquo;s fit a regularized Cox model to illustrate. Note how we set the &lt;code>penalty&lt;/code> to a fixed value of &lt;code>0.1&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>cox_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/proportional_hazards.html'>proportional_hazards&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>penalty &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.1&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"glmnet"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"censored regression"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>, &lt;span class='nv'>status&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Predictions made with
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> use that penalty value of 0.1. With
&lt;a href="https://parsnip.tidymodels.org/reference/multi_predict.html" target="_blank" rel="noopener">&lt;code>multi_predict()&lt;/code>&lt;/a>, we can change that value to something different without having to refit. Conveniently, we can predict for multiple penalty values as well.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cox_fit&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung_5&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"time"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred_time&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 425.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 350.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>mpred&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/multi_predict.html'>multi_predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cox_fit&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung_5&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"time"&lt;/span>, &lt;/span>
&lt;span> penalty &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.01&lt;/span>, &lt;span class='m'>0.1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;/span>
&lt;span>&lt;span class='nv'>mpred&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The resulting tibble is nested by observation to follow the convention of one row per observation. For each observation, the predictions are stored in a tibble containing the penalty value along with the prediction.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>mpred&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; penalty .pred_time&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 0.01 461.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 0.1 425.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can see that the predicted value from
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> matches the predicted value from
&lt;a href="https://parsnip.tidymodels.org/reference/multi_predict.html" target="_blank" rel="noopener">&lt;code>multi_predict()&lt;/code>&lt;/a> with a penalty of 0.1.&lt;/p>
&lt;h2 id="consistent-augment-for-workflows-and-parsnip-models">Consistent &lt;code>augment()&lt;/code> for workflows and parsnip models
&lt;a href="#consistent-augment-for-workflows-and-parsnip-models">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you are interested in exploring predictions in relation to predictors,
&lt;a href="https://generics.r-lib.org/reference/augment.html" target="_blank" rel="noopener">&lt;code>augment()&lt;/code>&lt;/a> is your extended
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> method: it will augment the inputted dataset with its predictions. For classification, it will add hard class predictions as well as class probabilities. For regression, it will add the numeric prediction. If the outcome variable is part of the dataset, it also calculates residuals. This has already been the case for fitted parsnip models, and the
&lt;a href="https://generics.r-lib.org/reference/augment.html" target="_blank" rel="noopener">&lt;code>augment()&lt;/code>&lt;/a> method for workflows will now also calculate residuals.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>spec_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/linear_reg.html'>linear_reg&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>wflow_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/linear_reg.html'>linear_reg&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/augment.html'>augment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>spec_fit&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 32 × 13&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred .resid mpg cyl disp hp drat wt qsec vs am gear&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 22.6 -&lt;span style='color: #BB0000;'>1.60&lt;/span> 21 6 160 110 3.9 2.62 16.5 0 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 22.1 -&lt;span style='color: #BB0000;'>1.11&lt;/span> 21 6 160 110 3.9 2.88 17.0 0 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 26.3 -&lt;span style='color: #BB0000;'>3.45&lt;/span> 22.8 4 108 93 3.85 2.32 18.6 1 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 21.2 0.163 21.4 6 258 110 3.08 3.22 19.4 1 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 17.7 1.01 18.7 8 360 175 3.15 3.44 17.0 0 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 20.4 -&lt;span style='color: #BB0000;'>2.28&lt;/span> 18.1 6 225 105 2.76 3.46 20.2 1 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 14.4 -&lt;span style='color: #BB0000;'>0.086&lt;/span>&lt;span style='color: #BB0000; text-decoration: underline;'>3&lt;/span> 14.3 8 360 245 3.21 3.57 15.8 0 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 22.5 1.90 24.4 4 147. 62 3.69 3.19 20 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 24.4 -&lt;span style='color: #BB0000;'>1.62&lt;/span> 22.8 4 141. 95 3.92 3.15 22.9 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 18.7 0.501 19.2 6 168. 123 3.92 3.44 18.3 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 22 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 1 more variable: carb &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/augment.html'>augment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wflow_fit&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 32 × 13&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred .resid mpg cyl disp hp drat wt qsec vs am gear&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>*&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 22.6 -&lt;span style='color: #BB0000;'>1.60&lt;/span> 21 6 160 110 3.9 2.62 16.5 0 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 22.1 -&lt;span style='color: #BB0000;'>1.11&lt;/span> 21 6 160 110 3.9 2.88 17.0 0 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 26.3 -&lt;span style='color: #BB0000;'>3.45&lt;/span> 22.8 4 108 93 3.85 2.32 18.6 1 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 21.2 0.163 21.4 6 258 110 3.08 3.22 19.4 1 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 17.7 1.01 18.7 8 360 175 3.15 3.44 17.0 0 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 20.4 -&lt;span style='color: #BB0000;'>2.28&lt;/span> 18.1 6 225 105 2.76 3.46 20.2 1 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 14.4 -&lt;span style='color: #BB0000;'>0.086&lt;/span>&lt;span style='color: #BB0000; text-decoration: underline;'>3&lt;/span> 14.3 8 360 245 3.21 3.57 15.8 0 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 22.5 1.90 24.4 4 147. 62 3.69 3.19 20 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 24.4 -&lt;span style='color: #BB0000;'>1.62&lt;/span> 22.8 4 141. 95 3.92 3.15 22.9 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 18.7 0.501 19.2 6 168. 123 3.92 3.44 18.3 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 22 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 1 more variable: carb &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Both methods also append on the left-hand side of the data frame, rather than the right-hand side. This means that prediction columns are always visible when printed, even for data frames with many columns. As you might expect, the order of the columns is the same for both methods as well.&lt;/p>
&lt;h2 id="new-autoplot-type-for-workflow-sets">New autoplot type for workflow sets
&lt;a href="#new-autoplot-type-for-workflow-sets">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many tidymodels objects have
&lt;a href="https://ggplot2.tidyverse.org/reference/autoplot.html" target="_blank" rel="noopener">&lt;code>autoplot()&lt;/code>&lt;/a> methods for quickly getting a sense of the most important aspects of an object. For workflow sets, the method shows the value of the calculated performance metrics, as well as the respective rank of each workflow in the set. Let&amp;rsquo;s put together a workflow set on the actual &lt;code>mtcars&lt;/code> data and take a look at the default autoplot.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>mt_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>mt_rec2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>mt_rec&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>step_normalize&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>mt_rec3&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>mt_rec&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>step_YeoJohnson&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>wflow_set&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow_set&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>plain &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mt_rec&lt;/span>, normalize &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mt_rec2&lt;/span>, yeo_johnson &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mt_rec3&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/linear_reg.html'>linear_reg&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>wflow_set_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow_map&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>wflow_set&lt;/span>, &lt;/span>
&lt;span> &lt;span class='s'>"fit_resamples"&lt;/span>, &lt;/span>
&lt;span> resamples &lt;span class='o'>=&lt;/span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wflow_set_fit&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/workflowsets-autoplot-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This allows you to grasp the metric values and rank of a workflow and let&amp;rsquo;s you distinguish the type of preprocessor and model. In our case, we only have one type of model, and even just one type of preprocessor, a recipe. What we are much more interested in is which recipe corresponds to which rank. The new option of &lt;code>type = &amp;quot;wflow_id&amp;quot;&lt;/code> lets us see which values and ranks correspond with which workflow and thus also with which recipe.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wflow_set_fit&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"wflow_id"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/workflowsets-autoplot-new-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This makes it easy to spot that it&amp;rsquo;s the Yeo-Johnson transformation that makes the difference here!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank those in the community that contributed to tidymodels in the last quarter:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>baguette:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>brulee:
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>butcher:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/li>
&lt;li>censored:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/tripartio" target="_blank" rel="noopener">@tripartio&lt;/a>.&lt;/li>
&lt;li>dials:
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>embed:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>.&lt;/li>
&lt;li>finetune:
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/mfansler" target="_blank" rel="noopener">@mfansler&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>hardhat:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>modeldata:
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>parsnip:
&lt;a href="https://github.com/birbritto" target="_blank" rel="noopener">@birbritto&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jmunyoon" target="_blank" rel="noopener">@jmunyoon&lt;/a>,
&lt;a href="https://github.com/marcelglueck" target="_blank" rel="noopener">@marcelglueck&lt;/a>,
&lt;a href="https://github.com/mattheaphy" target="_blank" rel="noopener">@mattheaphy&lt;/a>,
&lt;a href="https://github.com/mesdi" target="_blank" rel="noopener">@mesdi&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>,
&lt;a href="https://github.com/pgg1309" target="_blank" rel="noopener">@pgg1309&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/wzbillings" target="_blank" rel="noopener">@wzbillings&lt;/a>.&lt;/li>
&lt;li>probably:
&lt;a href="https://github.com/brshallo" target="_blank" rel="noopener">@brshallo&lt;/a>,
&lt;a href="https://github.com/Jeffrothschild" target="_blank" rel="noopener">@Jeffrothschild&lt;/a>,
&lt;a href="https://github.com/jgaeb" target="_blank" rel="noopener">@jgaeb&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>recipes:
&lt;a href="https://github.com/DemetriPananos" target="_blank" rel="noopener">@DemetriPananos&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jdonland" target="_blank" rel="noopener">@jdonland&lt;/a>,
&lt;a href="https://github.com/JiahuaQu" target="_blank" rel="noopener">@JiahuaQu&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/olivroy" target="_blank" rel="noopener">@olivroy&lt;/a>,
&lt;a href="https://github.com/SantiagoD999" target="_blank" rel="noopener">@SantiagoD999&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/stufield" target="_blank" rel="noopener">@stufield&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>rsample:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/paulcbauer" target="_blank" rel="noopener">@paulcbauer&lt;/a>,
&lt;a href="https://github.com/StevenWallaert" target="_blank" rel="noopener">@StevenWallaert&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/ZWael" target="_blank" rel="noopener">@ZWael&lt;/a>.&lt;/li>
&lt;li>shinymodels:
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>stacks:
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>tidyclust:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>, and
&lt;a href="https://github.com/katieburak" target="_blank" rel="noopener">@katieburak&lt;/a>.&lt;/li>
&lt;li>tidymodels:
&lt;a href="https://github.com/jkylearmstrong" target="_blank" rel="noopener">@jkylearmstrong&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/nikosGeography" target="_blank" rel="noopener">@nikosGeography&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>tune:
&lt;a href="https://github.com/AlbertoImg" target="_blank" rel="noopener">@AlbertoImg&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/joshuagi" target="_blank" rel="noopener">@joshuagi&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/marcozanotti" target="_blank" rel="noopener">@marcozanotti&lt;/a>,
&lt;a href="https://github.com/Peter4801" target="_blank" rel="noopener">@Peter4801&lt;/a>,
&lt;a href="https://github.com/rfsaldanha" target="_blank" rel="noopener">@rfsaldanha&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/walkerjameschris" target="_blank" rel="noopener">@walkerjameschris&lt;/a>.&lt;/li>
&lt;li>workflows:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/mesdi" target="_blank" rel="noopener">@mesdi&lt;/a>,
&lt;a href="https://github.com/Milardkh" target="_blank" rel="noopener">@Milardkh&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>workflowsets:
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>yardstick:
&lt;a href="https://github.com/asb2111" target="_blank" rel="noopener">@asb2111&lt;/a>,
&lt;a href="https://github.com/Dpananos" target="_blank" rel="noopener">@Dpananos&lt;/a>,
&lt;a href="https://github.com/EduMinsky" target="_blank" rel="noopener">@EduMinsky&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/tripartio" target="_blank" rel="noopener">@tripartio&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;re grateful for all of the tidymodels community, from observers to users to contributors. Happy modeling!&lt;/p></description></item><item><title>tune 1.2.0</title><link>https://www.tidyverse.org/blog/2024/04/tune-1-2-0/</link><pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/04/tune-1-2-0/</guid><description>&lt;div class="highlight">
&lt;/div>
&lt;p>We&amp;rsquo;re indubitably amped to announce the release of
&lt;a href="https://tune.tidymodels.org/" target="_blank" rel="noopener">tune&lt;/a> 1.2.0, a package for hyperparameter tuning in the
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels framework&lt;/a>.&lt;/p>
&lt;p>You can install it from CRAN, along with the rest of the core packages in tidymodels, using the tidymodels meta-package:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidymodels"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The 1.2.0 release of tune has introduced support for two major features that we&amp;rsquo;ve written about on the tidyverse blog already:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2024/04/tidymodels-survival-analysis/" target="_blank" rel="noopener">Survival analysis for time-to-event data with tidymodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2024/03/tidymodels-fairness/" target="_blank" rel="noopener">Fair machine learning with tidymodels&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>While those features got their own blog posts, there are several more features in this release that we thought were worth calling out. This post will highlight improvements to our support for parallel processing, the introduction of support for percentile confidence intervals for performance metrics, and a few other bits and bobs. You can see a full list of changes in the
&lt;a href="https://github.com/tidymodels/tune/releases/tag/v1.2.0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Throughout this post, I&amp;rsquo;ll refer to the example of tuning an XGBoost model to predict the fuel efficiency of various car models. I hear this is already a well-explored modeling problem, but alas:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2024&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>xgb_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>tune_grid&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>boost_tree&lt;/span>&lt;span class='o'>(&lt;/span>mode &lt;span class='o'>=&lt;/span> &lt;span class='s'>"regression"&lt;/span>, mtry &lt;span class='o'>=&lt;/span> &lt;span class='nf'>tune&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, learn_rate &lt;span class='o'>=&lt;/span> &lt;span class='nf'>tune&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> control &lt;span class='o'>=&lt;/span> &lt;span class='nf'>control_grid&lt;/span>&lt;span class='o'>(&lt;/span>save_pred &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that we&amp;rsquo;ve used the
&lt;a href="https://tune.tidymodels.org/reference/control_grid.html" target="_blank" rel="noopener">control option&lt;/a> &lt;code>save_pred = TRUE&lt;/code> to indicate that we want to save the predictions from our resampled models in the tuning results. Both &lt;code>int_pctl()&lt;/code> and &lt;code>compute_metrics()&lt;/code> below will need those predictions. The metrics for our resampled model look like so:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>collect_metrics&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>xgb_res&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 20 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mtry learn_rate .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 2 0.002&lt;span style='text-decoration: underline;'>04&lt;/span> rmse standard 19.7 25 0.262 Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 0.002&lt;span style='text-decoration: underline;'>04&lt;/span> rsq standard 0.659 25 0.031&lt;span style='text-decoration: underline;'>4&lt;/span> Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 6 0.008&lt;span style='text-decoration: underline;'>59&lt;/span> rmse standard 18.0 25 0.260 Preprocessor1_Model02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 6 0.008&lt;span style='text-decoration: underline;'>59&lt;/span> rsq standard 0.607 25 0.027&lt;span style='text-decoration: underline;'>0&lt;/span> Preprocessor1_Model02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 0.027&lt;span style='text-decoration: underline;'>6&lt;/span> rmse standard 14.0 25 0.267 Preprocessor1_Model03&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 0.027&lt;span style='text-decoration: underline;'>6&lt;/span> rsq standard 0.710 25 0.023&lt;span style='text-decoration: underline;'>7&lt;/span> Preprocessor1_Model03&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 14 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="modernized-support-for-parallel-processing">Modernized support for parallel processing
&lt;a href="#modernized-support-for-parallel-processing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The tidymodels framework has long supported evaluating models in parallel using the
&lt;a href="https://cran.r-project.org/web/packages/foreach/vignettes/foreach.html" target="_blank" rel="noopener">foreach&lt;/a> package. This release of tune has introduced support for parallelism using the
&lt;a href="https://www.futureverse.org/" target="_blank" rel="noopener">futureverse&lt;/a> framework, and we will begin deprecating our support for foreach in a coming release.&lt;/p>
&lt;p>To tune a model in parallel with foreach, a user would load a &lt;em>parallel backend&lt;/em> package (usually with a name like
&lt;a href="https://rdrr.io/r/base/library.html" target="_blank" rel="noopener">&lt;code>library(doBackend)&lt;/code>&lt;/a>) and then &lt;em>register&lt;/em> it with foreach (with a function call like &lt;code>registerDoBackend()&lt;/code>). The tune package would then detect that registered backend and take it from there. For example, the code to distribute the above tuning process across 10 cores with foreach would look like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>doMC&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/doMC/man/registerDoMC.html'>registerDoMC&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>cores &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2024&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>xgb_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>tune_grid&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>boost_tree&lt;/span>&lt;span class='o'>(&lt;/span>mode &lt;span class='o'>=&lt;/span> &lt;span class='s'>"regression"&lt;/span>, mtry &lt;span class='o'>=&lt;/span> &lt;span class='nf'>tune&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, learn_rate &lt;span class='o'>=&lt;/span> &lt;span class='nf'>tune&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> control &lt;span class='o'>=&lt;/span> &lt;span class='nf'>control_grid&lt;/span>&lt;span class='o'>(&lt;/span>save_pred &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The code to do so with future is similarly simple. Users first load the
&lt;a href="https://future.futureverse.org/index.html" target="_blank" rel="noopener">future&lt;/a> package, and then specify a
&lt;a href="https://future.futureverse.org/reference/plan.html" target="_blank" rel="noopener">&lt;code>plan()&lt;/code>&lt;/a> which dictates how computations will be distributed. For example, the code to distribute the above tuning process across 10 cores with future looks like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://future.futureverse.org'>future&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://future.futureverse.org/reference/plan.html'>plan&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>multisession&lt;/span>, workers &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2024&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>xgb_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>tune_grid&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>boost_tree&lt;/span>&lt;span class='o'>(&lt;/span>mode &lt;span class='o'>=&lt;/span> &lt;span class='s'>"regression"&lt;/span>, mtry &lt;span class='o'>=&lt;/span> &lt;span class='nf'>tune&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, learn_rate &lt;span class='o'>=&lt;/span> &lt;span class='nf'>tune&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> control &lt;span class='o'>=&lt;/span> &lt;span class='nf'>control_grid&lt;/span>&lt;span class='o'>(&lt;/span>save_pred &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>For users, the transition to parallelism with future has several benefits:&lt;/p>
&lt;ul>
&lt;li>The futureverse presently supports a greater number of parallelism technologies and has been more likely to receive implementations for new ones.&lt;/li>
&lt;li>Once foreach is fully deprecated, users will be able to use the
&lt;a href="https://www.tidyverse.org/blog/2023/04/tuning-delights/#interactive-issue-logging" target="_blank" rel="noopener">interactive logger&lt;/a> when tuning in parallel.&lt;/li>
&lt;/ul>
&lt;p>From our perspective, transitioning our parallelism support to future makes our packages much more maintainable, reducing complexity in random number generation, error handling, and progress reporting.&lt;/p>
&lt;p>In an upcoming release of the package, you&amp;rsquo;ll see a deprecation warning when a foreach parallel backend is registered but no future plan has been specified, so start transitioning your code sooner than later!&lt;/p>
&lt;h2 id="percentile-confidence-intervals">Percentile confidence intervals
&lt;a href="#percentile-confidence-intervals">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Following up on changes in the
&lt;a href="https://github.com/tidymodels/rsample/releases/tag/v1.2.0" target="_blank" rel="noopener">most recent rsample release&lt;/a>, tune has introduced a
&lt;a href="https://tune.tidymodels.org/reference/int_pctl.tune_results.html" target="_blank" rel="noopener">method for &lt;code>int_pctl()&lt;/code>&lt;/a> that calculates percentile confidence intervals for performance metrics. To calculate a 90% confidence interval for the values of each performance metric returned in &lt;code>collect_metrics()&lt;/code>, we&amp;rsquo;d write:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2024&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>int_pctl&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>xgb_res&lt;/span>, alpha &lt;span class='o'>=&lt;/span> &lt;span class='m'>.1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 20 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .metric .estimator .lower .estimate .upper .config mtry learn_rate&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> rmse bootstrap 18.1 19.9 22.0 Preprocessor1_Mod… 2 0.002&lt;span style='text-decoration: underline;'>04&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> rsq bootstrap 0.570 0.679 0.778 Preprocessor1_Mod… 2 0.002&lt;span style='text-decoration: underline;'>04&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> rmse bootstrap 16.6 18.3 19.9 Preprocessor1_Mod… 6 0.008&lt;span style='text-decoration: underline;'>59&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> rsq bootstrap 0.548 0.665 0.765 Preprocessor1_Mod… 6 0.008&lt;span style='text-decoration: underline;'>59&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> rmse bootstrap 12.5 14.1 15.9 Preprocessor1_Mod… 3 0.027&lt;span style='text-decoration: underline;'>6&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> rsq bootstrap 0.622 0.720 0.818 Preprocessor1_Mod… 3 0.027&lt;span style='text-decoration: underline;'>6&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 14 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that the output has the same number of rows as the &lt;code>collect_metrics()&lt;/code> output: one for each unique pair of metric and workflow.&lt;/p>
&lt;p>This is very helpful for validation sets. Other resampling methods generate replicated performance statistics. We can compute simple interval estimates using the mean and standard error for those. Validation sets produce only one estimate, and these bootstrap methods are probably the best option for obtaining interval estimates.&lt;/p>
&lt;h2 id="breaking-change-relocation-of-ellipses">Breaking change: relocation of ellipses
&lt;a href="#breaking-change-relocation-of-ellipses">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;ve made a &lt;strong>breaking change&lt;/strong> in argument order for several functions in the package (and downstream packages like finetune and workflowsets). Ellipses (&amp;hellip;) are now used consistently in the package to require optional arguments to be named. For functions that previously had unused ellipses at the end of the function signature, they have been moved to follow the last argument without a default value, and several other functions that previously did not have ellipses in their signatures gained them. This applies to methods for &lt;code>augment()&lt;/code>, &lt;code>collect_predictions()&lt;/code>, &lt;code>collect_metrics()&lt;/code>, &lt;code>select_best()&lt;/code>, &lt;code>show_best()&lt;/code>, and &lt;code>conf_mat_resampled()&lt;/code>.&lt;/p>
&lt;h2 id="compute-new-metrics-without-re-fitting">Compute new metrics without re-fitting
&lt;a href="#compute-new-metrics-without-re-fitting">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;ve also added a new function,
&lt;a href="https://tune.tidymodels.org/reference/compute_metrics.html" target="_blank" rel="noopener">&lt;code>compute_metrics()&lt;/code>&lt;/a>, that allows for calculating metrics that were not used when evaluating against resamples. For example, consider our &lt;code>xgb_res&lt;/code> object. Since we didn&amp;rsquo;t supply any metrics to evaluate, and this model is a regression model, tidymodels selected RMSE and R&lt;sup>2&lt;/sup> as defaults:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>collect_metrics&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>xgb_res&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 20 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mtry learn_rate .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 2 0.002&lt;span style='text-decoration: underline;'>04&lt;/span> rmse standard 19.7 25 0.262 Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 0.002&lt;span style='text-decoration: underline;'>04&lt;/span> rsq standard 0.659 25 0.031&lt;span style='text-decoration: underline;'>4&lt;/span> Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 6 0.008&lt;span style='text-decoration: underline;'>59&lt;/span> rmse standard 18.0 25 0.260 Preprocessor1_Model02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 6 0.008&lt;span style='text-decoration: underline;'>59&lt;/span> rsq standard 0.607 25 0.027&lt;span style='text-decoration: underline;'>0&lt;/span> Preprocessor1_Model02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 0.027&lt;span style='text-decoration: underline;'>6&lt;/span> rmse standard 14.0 25 0.267 Preprocessor1_Model03&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 0.027&lt;span style='text-decoration: underline;'>6&lt;/span> rsq standard 0.710 25 0.023&lt;span style='text-decoration: underline;'>7&lt;/span> Preprocessor1_Model03&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 14 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In the past, if you wanted to evaluate that workflow against a performance metric that you hadn&amp;rsquo;t included in your &lt;code>tune_grid()&lt;/code> run, you&amp;rsquo;d need to re-run &lt;code>tune_grid()&lt;/code>, fitting models and predicting new values all over again. Now, using the &lt;code>compute_metrics()&lt;/code> function, you can use the &lt;code>tune_grid()&lt;/code> output you&amp;rsquo;ve already generated and compute any number of new metrics without having to fit any more models as long as you use the control option &lt;code>save_pred = TRUE&lt;/code> when tuning.&lt;/p>
&lt;p>So, say I want to additionally calculate Huber Loss and Mean Absolute Percent Error. I just pass those metrics along with the tuning result to &lt;code>compute_metrics()&lt;/code>, and the result looks just like &lt;code>collect_metrics()&lt;/code> output for the metrics originally calculated:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>compute_metrics&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>xgb_res&lt;/span>, &lt;span class='nf'>metric_set&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>huber_loss&lt;/span>, &lt;span class='nv'>mape&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 20 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mtry learn_rate .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 2 0.002&lt;span style='text-decoration: underline;'>04&lt;/span> huber_loss standard 18.3 25 0.232 Preprocessor1_Mode…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 0.002&lt;span style='text-decoration: underline;'>04&lt;/span> mape standard 94.4 25 0.068&lt;span style='text-decoration: underline;'>5&lt;/span> Preprocessor1_Mode…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 6 0.008&lt;span style='text-decoration: underline;'>59&lt;/span> huber_loss standard 16.7 25 0.229 Preprocessor1_Mode…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 6 0.008&lt;span style='text-decoration: underline;'>59&lt;/span> mape standard 85.7 25 0.178 Preprocessor1_Mode…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 0.027&lt;span style='text-decoration: underline;'>6&lt;/span> huber_loss standard 12.6 25 0.230 Preprocessor1_Mode…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 0.027&lt;span style='text-decoration: underline;'>6&lt;/span> mape standard 64.4 25 0.435 Preprocessor1_Mode…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 14 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="easily-pivot-resampled-metrics">Easily pivot resampled metrics
&lt;a href="#easily-pivot-resampled-metrics">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Finally, the &lt;code>collect_metrics()&lt;/code> method for tune results recently
&lt;a href="https://tune.tidymodels.org/reference/collect_predictions.html#arguments" target="_blank" rel="noopener">gained a new argument&lt;/a>, &lt;code>type&lt;/code>, indicating the shape of the returned metrics. The default, &lt;code>type = &amp;quot;long&amp;quot;&lt;/code>, is the same shape as before. The argument value &lt;code>type = &amp;quot;wide&amp;quot;&lt;/code> will allot each metric its own column, making it easier to compare metrics across different models.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>collect_metrics&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>xgb_res&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"wide"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 10 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mtry learn_rate .config rmse rsq&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 2 0.002&lt;span style='text-decoration: underline;'>04&lt;/span> Preprocessor1_Model01 19.7 0.659&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 6 0.008&lt;span style='text-decoration: underline;'>59&lt;/span> Preprocessor1_Model02 18.0 0.607&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 0.027&lt;span style='text-decoration: underline;'>6&lt;/span> Preprocessor1_Model03 14.0 0.710&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 0.037&lt;span style='text-decoration: underline;'>1&lt;/span> Preprocessor1_Model04 12.3 0.728&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 5 0.005&lt;span style='text-decoration: underline;'>39&lt;/span> Preprocessor1_Model05 18.8 0.595&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 9 0.011&lt;span style='text-decoration: underline;'>0&lt;/span> Preprocessor1_Model06 17.4 0.577&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 4 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Under the hood, this is indeed just a &lt;code>pivot_wider()&lt;/code> call. We&amp;rsquo;ve found that it&amp;rsquo;s time-consuming and error-prone to programmatically determine identifying columns when pivoting resampled metrics, so we&amp;rsquo;ve localized and thoroughly tested the code that we use to do so with this feature.&lt;/p>
&lt;h2 id="more-love-for-the-brier-score">More love for the Brier score
&lt;a href="#more-love-for-the-brier-score">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Tuning and resampling functions use default metrics when the user does not specify a custom metric set. For regression models, these are RMSE and R&lt;sup>2&lt;/sup>. For classification, accuracy and the area under the ROC curve &lt;em>were&lt;/em> the default. We&amp;rsquo;ve also added the
&lt;a href="https://en.wikipedia.org/wiki/Brier_score" target="_blank" rel="noopener">Brier score&lt;/a> to the default classification metric list.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As always, we&amp;rsquo;re appreciative of the community contributors who helped make this release happen:
&lt;a href="https://github.com/AlbertoImg" target="_blank" rel="noopener">@AlbertoImg&lt;/a>,
&lt;a href="https://github.com/dramanica" target="_blank" rel="noopener">@dramanica&lt;/a>,
&lt;a href="https://github.com/epiheather" target="_blank" rel="noopener">@epiheather&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/kbodwin" target="_blank" rel="noopener">@kbodwin&lt;/a>,
&lt;a href="https://github.com/kenraywilliams" target="_blank" rel="noopener">@kenraywilliams&lt;/a>,
&lt;a href="https://github.com/KJT-Habitat" target="_blank" rel="noopener">@KJT-Habitat&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/marcozanotti" target="_blank" rel="noopener">@marcozanotti&lt;/a>,
&lt;a href="https://github.com/MasterLuke84" target="_blank" rel="noopener">@MasterLuke84&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>, and
&lt;a href="https://github.com/Peter4801" target="_blank" rel="noopener">@Peter4801&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;/div></description></item><item><title>Survival analysis for time-to-event data with tidymodels</title><link>https://www.tidyverse.org/blog/2024/04/tidymodels-survival-analysis/</link><pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/04/tidymodels-survival-analysis/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re tickled pink to announce the support of survival analysis for time-to-event data across tidymodels. The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles. This new support makes survival analysis a first-class citizen in tidymodels and gives censored regression modeling the same flexibility and ease as classification or regression.&lt;/p>
&lt;p>The functionality resides in multiple tidymodels packages. The easiest way to install them all is to install the tidymodels meta-package:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidymodels"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will highlight why this is useful, explain which additions we&amp;rsquo;ve made to the framework, and point to several places to learn more.&lt;/p>
&lt;p>You can see a full list of changes in the release notes:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://parsnip.tidymodels.org/news/index.html#parsnip-120" target="_blank" rel="noopener">parsnip&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://censored.tidymodels.org/news/index.html#censored-030" target="_blank" rel="noopener">censored&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://yardstick.tidymodels.org/news/index.html#yardstick-130" target="_blank" rel="noopener">yardstick&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflows.tidymodels.org/news/index.html#workflows-114" target="_blank" rel="noopener">workflows&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tune.tidymodels.org/news/index.html#tune-120" target="_blank" rel="noopener">tune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://finetune.tidymodels.org/news/index.html#finetune-120" target="_blank" rel="noopener">finetune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflowsets.tidymodels.org/news/index.html#workflowsets-110" target="_blank" rel="noopener">workflowsets&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="increasing-usefulness-two-perspectives">Increasing usefulness: Two perspectives
&lt;a href="#increasing-usefulness-two-perspectives">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to situate the changes from two different perspectives: How this is useful for people already familiar with survival analysis as well as for people already familiar with tidymodels.&lt;/p>
&lt;p>If you are already familiar with both: Excellent, this is very much for you! Read on for more details on how these two things come together.&lt;/p>
&lt;h3 id="adding-tidymodels-to-your-tool-kit">Adding tidymodels to your tool kit
&lt;a href="#adding-tidymodels-to-your-tool-kit">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>If you are already familiar with survival analysis but maybe not tidymodels, these changes now unlock a whole framework for predictive modelling for you. It applies tidyverse principles to modeling, meaning it strives to be consistent, composable, and human-centered. The framework covers the modeling process from the initial test/train split of the data all the way to tuning various models. Along the way it offers a rich selection of preprocessing techniques, resampling schemes, and performance metrics along with safe-guards against accidental overfitting. We make the full case for tidymodels at
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels.org&lt;/a>.&lt;/p>
&lt;h3 id="adding-survival-analysis-to-your-tool-kit">Adding survival analysis to your tool kit
&lt;a href="#adding-survival-analysis-to-your-tool-kit">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>If you are already familiar with tidymodels but maybe not survival analysis, these changes let you leverage the familiar framework for an additional type of modeling problem. Survival analysis offers methods for modeling time-to-event data. While it has its roots in medical research, it has broad applications as that event of interest can be so much more than a medical outcome. Take customer churn as an example: We are interested in how long someone is a customer for and when they churn. For customers who churned, we have the complete time for which they were customers. For existing customers, we only know how long they&amp;rsquo;ve been customers for &lt;em>so far&lt;/em>. Such observations are called censored. So what are our modeling choices here?&lt;/p>
&lt;p>We could look at the time and model that as a regression problem. We could look at the event status and model that as a classification problem. Both options might get us somewhere close to an answer to our original modeling question but not quite there. Censored regression models let us model an outcome that includes both aspects, the time and the event status. And with that, it can deal with both censored and uncensored observations appropriately. With this type of model, we can predict the survival time, or in more applied terms, how long someone will stay as a customer. We can also predict the probability of survival at a given time point. This lets us answer questions like &amp;ldquo;How likely is it that this customer will churn after 3 months?&amp;quot;. See which prediction types are available for which models at
&lt;a href="https://censored.tidymodels.org/" target="_blank" rel="noopener">censored.tidymodels.org&lt;/a>.&lt;/p>
&lt;h2 id="ch-ch-changes-whats-new-for-censored-regression">Ch-ch-changes: What&amp;rsquo;s new for censored regression?
&lt;a href="#ch-ch-changes-whats-new-for-censored-regression">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The main components needed for this full-fledged integration of survival analysis into tidymodels were&lt;/p>
&lt;ul>
&lt;li>Survival analysis models that can take censoring into account&lt;/li>
&lt;li>Survival analysis performance metrics that can take censoring into account&lt;/li>
&lt;li>Integrating changes required by these models and metrics into the framework&lt;/li>
&lt;/ul>
&lt;p>For the models, parsnip gained a new mode, &lt;code>&amp;quot;censored regression&amp;quot;&lt;/code>, for existing models as well as new model types such as &lt;code>proportional_hazards()&lt;/code>. Engines for these reside in censored, the parsnip extension package for survival models. The &lt;code>&amp;quot;censored regression&amp;quot;&lt;/code> mode has been around for a while and we&amp;rsquo;ve previously shared posts on
&lt;a href="https://www.tidyverse.org/blog/2021/11/survival-analysis-parsnip-adjacent/" target="_blank" rel="noopener">our initial thoughts&lt;/a> and the
&lt;a href="https://www.tidyverse.org/blog/2022/08/censored-0-1-0/" target="_blank" rel="noopener">release of censored&lt;/a>.&lt;/p>
&lt;p>Now we&amp;rsquo;ve added the metrics:
&lt;a href="https://yardstick.tidymodels.org/news/index.html#yardstick-130" target="_blank" rel="noopener">yardstick v1.3.0&lt;/a> includes new metrics for assessing censored regression models. Somewhat similar to how metrics for classification models can take class predictions or probability predictions as input, these survival metrics can take predicted survival times or predictions of survival probabilities as input.&lt;/p>
&lt;p>The new metrics are&lt;/p>
&lt;ul>
&lt;li>Concordance index on the survival time via &lt;code>concordance_survival()&lt;/code>&lt;/li>
&lt;li>Brier score on the survival probability and its integrated version via &lt;code>brier_survival()&lt;/code> and &lt;code>brier_survival_integrated()&lt;/code>&lt;/li>
&lt;li>ROC curve and the area under the ROC curve on the survival probabilities via &lt;code>roc_curve_survival()&lt;/code> and &lt;code>auc_roc_survival()&lt;/code> respectively&lt;/li>
&lt;/ul>
&lt;p>The probability of survival is always defined &lt;em>at a certain point in time&lt;/em>. We call that time point the &lt;em>evaluation time&lt;/em> because it is then also the time point at which we want to evaluate model performance. Metrics that work on the survival probabilities are also called &lt;em>dynamic metrics&lt;/em> and you can read more about them here:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-metrics/" target="_blank" rel="noopener">Dynamic Performance Metrics for Event Time Data&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-metrics-details/" target="_blank" rel="noopener">Accounting for Censoring in Performance Metrics for Event Time Data&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>The evaluation time is also the best example to illustrate the changes necessary to the framework. Most of them were under the hood but the evaluation time is user-facing. Let&amp;rsquo;s take a look at that.&lt;/p>
&lt;p>While the need for evaluation times is dependent on type of metric, it is not actually specified as an argument to the metric functions. Like yardstick&amp;rsquo;s other metrics, those take pre-made predictions as the input. So where do you specify it then?&lt;/p>
&lt;ul>
&lt;li>You need to specify it to directly predict survival probabilities, via
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> or &lt;code>augment()&lt;/code>. We introduced the corresponding &lt;code>eval_time&lt;/code> argument first for fitted models in
&lt;a href="https://www.tidyverse.org/blog/2023/04/censored-0-2-0/#introducing-eval_time" target="_blank" rel="noopener">parsnip and censored&lt;/a> and have added it now for workflows.&lt;/li>
&lt;li>You also need to specify it for the tuning functions &lt;code>tune_*()&lt;/code> from tune and finetune as they will predict survival probabilities as part of the tuning process.&lt;/li>
&lt;li>Lastly, the &lt;code>eval_time&lt;/code> argument now shows up when working with tuning/resampling results such as in &lt;code>show_best()&lt;/code> or &lt;code>autoplot()&lt;/code>. Those changes span the packages generating and working with resampling results: tune, finetune, and workflowsets.&lt;/li>
&lt;/ul>
&lt;p>As we said, plenty of changes under the hood but you shouldn&amp;rsquo;t need to notice them. Everything else should work &amp;ldquo;as usual,&amp;rdquo; allowing the same ease and flexibility in combining tidymodels functionality for censored regression as for classification and regression.&lt;/p>
&lt;h2 id="the-pieces-come-together-a-case-study">The pieces come together: A case study
&lt;a href="#the-pieces-come-together-a-case-study">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To see it all in action, check out the case study
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-case-study/" target="_blank" rel="noopener">How long until building complaints are dispositioned?&lt;/a> on the tidymodels website!&lt;/p>
&lt;p>The city of New York publishes data on complaints received by the Department of Buildings that include how long it takes for a complaint to be dealt with (&amp;ldquo;dispositioned&amp;rdquo;) as well as several characteristics of the complaint. The case study covers a full analysis. We start with splitting the data into test and training sets, explore different preprocessing strategies and model types via tuning, and predict with a final model. It should give you a good first impression of how to use tidymodels for predictive survival analysis.&lt;/p>
&lt;p>We hope you&amp;rsquo;ll find this new capability of tidymodels useful!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many thanks to the people who contributed to our packages since their last release:&lt;/p>
&lt;p>&lt;strong>parsnip:&lt;/strong>
&lt;a href="https://github.com/AlbanOtt2" target="_blank" rel="noopener">@AlbanOtt2&lt;/a>,
&lt;a href="https://github.com/birbritto" target="_blank" rel="noopener">@birbritto&lt;/a>,
&lt;a href="https://github.com/christophscheuch" target="_blank" rel="noopener">@christophscheuch&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/Freestyleyang" target="_blank" rel="noopener">@Freestyleyang&lt;/a>,
&lt;a href="https://github.com/gmcmacran" target="_blank" rel="noopener">@gmcmacran&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jmunyoon" target="_blank" rel="noopener">@jmunyoon&lt;/a>,
&lt;a href="https://github.com/joscani" target="_blank" rel="noopener">@joscani&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/marcelglueck" target="_blank" rel="noopener">@marcelglueck&lt;/a>,
&lt;a href="https://github.com/mattheaphy" target="_blank" rel="noopener">@mattheaphy&lt;/a>,
&lt;a href="https://github.com/mesdi" target="_blank" rel="noopener">@mesdi&lt;/a>,
&lt;a href="https://github.com/millermc38" target="_blank" rel="noopener">@millermc38&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>,
&lt;a href="https://github.com/pgg1309" target="_blank" rel="noopener">@pgg1309&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/seb-mueller" target="_blank" rel="noopener">@seb-mueller&lt;/a>,
&lt;a href="https://github.com/SHo-JANG" target="_blank" rel="noopener">@SHo-JANG&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/vidarsumo" target="_blank" rel="noopener">@vidarsumo&lt;/a>, and
&lt;a href="https://github.com/wzbillings" target="_blank" rel="noopener">@wzbillings&lt;/a>.&lt;/p>
&lt;p>&lt;strong>censored:&lt;/strong>
&lt;a href="https://github.com/bcjaeger" target="_blank" rel="noopener">@bcjaeger&lt;/a>,
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/noahtsao" target="_blank" rel="noopener">@noahtsao&lt;/a>, and
&lt;a href="https://github.com/tripartio" target="_blank" rel="noopener">@tripartio&lt;/a>.&lt;/p>
&lt;p>&lt;strong>yardstick:&lt;/strong>
&lt;a href="https://github.com/aecoleman" target="_blank" rel="noopener">@aecoleman&lt;/a>,
&lt;a href="https://github.com/asb2111" target="_blank" rel="noopener">@asb2111&lt;/a>,
&lt;a href="https://github.com/atsyplenkov" target="_blank" rel="noopener">@atsyplenkov&lt;/a>,
&lt;a href="https://github.com/bgreenwell" target="_blank" rel="noopener">@bgreenwell&lt;/a>,
&lt;a href="https://github.com/Dpananos" target="_blank" rel="noopener">@Dpananos&lt;/a>,
&lt;a href="https://github.com/EduMinsky" target="_blank" rel="noopener">@EduMinsky&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/heidekrueger" target="_blank" rel="noopener">@heidekrueger&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/iacrowe" target="_blank" rel="noopener">@iacrowe&lt;/a>,
&lt;a href="https://github.com/jarbet" target="_blank" rel="noopener">@jarbet&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/maxwell-geospatial" target="_blank" rel="noopener">@maxwell-geospatial&lt;/a>,
&lt;a href="https://github.com/moloscripts" target="_blank" rel="noopener">@moloscripts&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/ruddnr" target="_blank" rel="noopener">@ruddnr&lt;/a>,
&lt;a href="https://github.com/SimonCoulombe" target="_blank" rel="noopener">@SimonCoulombe&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/tbrittoborges" target="_blank" rel="noopener">@tbrittoborges&lt;/a>,
&lt;a href="https://github.com/tonyelhabr" target="_blank" rel="noopener">@tonyelhabr&lt;/a>,
&lt;a href="https://github.com/tripartio" target="_blank" rel="noopener">@tripartio&lt;/a>,
&lt;a href="https://github.com/TSI-PTG" target="_blank" rel="noopener">@TSI-PTG&lt;/a>,
&lt;a href="https://github.com/vnijs" target="_blank" rel="noopener">@vnijs&lt;/a>,
&lt;a href="https://github.com/wbuchanan" target="_blank" rel="noopener">@wbuchanan&lt;/a>, and
&lt;a href="https://github.com/zkrog" target="_blank" rel="noopener">@zkrog&lt;/a>.&lt;/p>
&lt;p>&lt;strong>workflows:&lt;/strong>
&lt;a href="https://github.com/Milardkh" target="_blank" rel="noopener">@Milardkh&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;p>&lt;strong>tune:&lt;/strong>
&lt;a href="https://github.com/AlbertoImg" target="_blank" rel="noopener">@AlbertoImg&lt;/a>,
&lt;a href="https://github.com/dramanica" target="_blank" rel="noopener">@dramanica&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/epiheather" target="_blank" rel="noopener">@epiheather&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/kbodwin" target="_blank" rel="noopener">@kbodwin&lt;/a>,
&lt;a href="https://github.com/kenraywilliams" target="_blank" rel="noopener">@kenraywilliams&lt;/a>,
&lt;a href="https://github.com/KJT-Habitat" target="_blank" rel="noopener">@KJT-Habitat&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/marcozanotti" target="_blank" rel="noopener">@marcozanotti&lt;/a>,
&lt;a href="https://github.com/MasterLuke84" target="_blank" rel="noopener">@MasterLuke84&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>,
&lt;a href="https://github.com/Peter4801" target="_blank" rel="noopener">@Peter4801&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/walkerjameschris" target="_blank" rel="noopener">@walkerjameschris&lt;/a>.&lt;/p>
&lt;p>&lt;strong>finetune:&lt;/strong>
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jdberson" target="_blank" rel="noopener">@jdberson&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/mfansler" target="_blank" rel="noopener">@mfansler&lt;/a>,
&lt;a href="https://github.com/ruddnr" target="_blank" rel="noopener">@ruddnr&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;p>&lt;strong>workflowsets:&lt;/strong>
&lt;a href="https://github.com/dchiu911" target="_blank" rel="noopener">@dchiu911&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jkylearmstrong" target="_blank" rel="noopener">@jkylearmstrong&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/p></description></item><item><title>Fair machine learning with tidymodels</title><link>https://www.tidyverse.org/blog/2024/03/tidymodels-fairness/</link><pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/03/tidymodels-fairness/</guid><description>&lt;p>We&amp;rsquo;re very, very excited to announce the introduction of tools for assessing model fairness in tidymodels. This effort involved coordination from various groups at Posit over the course of over a year and resulted in a toolkit that we believe is both principled and impactful.&lt;/p>
&lt;p>Fairness assessment features for tidymodels extend across a number of packages; to install each, use the tidymodels meta-package:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidymodels"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="machine-learning-fairness">Machine learning fairness
&lt;a href="#machine-learning-fairness">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In recent years, high-profile analyses have called attention to many contexts where the use of machine learning deepened inequities in our communities. In late 2022, a group of Posit employees across teams, roles, and technical backgrounds formed a reading group to engage with literature on machine learning fairness, a research field that aims to define what it means for a statistical model to act unfairly and take measures to address that unfairness. We then designed new software functionality and learning resources to help data scientists measure and critique the ways in which the machine learning models they&amp;rsquo;ve built might disparately impact people affected by that model.&lt;/p>
&lt;p>Perhaps the core question that fairness as a research field has tried to address is exactly what a machine learning model acting fairly entails. As a recent primer notes, &amp;ldquo;[t]he rapid growth of this new field has led to wildly inconsistent motivations, terminology, and notation, presenting a serious challenge for cataloging and comparing definitions&amp;rdquo; (Mitchell et al. 2021).&lt;/p>
&lt;p>Broadly, approaches to fairness provide tooling&amp;mdash;whether social or algorithmic&amp;mdash;to understand the social implications of utilizing a machine learning model. Different researchers categorize approaches to fairness differently, but work in this area can be loosely summarized as falling into one or more of the following categories: assessment, mitigation, and critique.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;em>Assessment&lt;/em>: Fairness assessment tooling allows practitioners to measure the degree to which a machine learning model acts unfairly given some definition of fairness. The chosen definition of fairness greatly impacts whether a model&amp;rsquo;s predictions are regarded as fair. While there have been many, many definitions of fairness proposed&amp;mdash;a popular tutorial on these approaches compares 21 canonical definitions&amp;mdash;most all of them involve simple inequalities based on a small set of conditional probabilities (Narayanan 2018; Mitchell et al. 2021).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>Mitigation&lt;/em>: Given a fairness assessment, mitigation approaches reduce the degree to which a machine learning model acts unfairly given some definition of fairness. Making a model more fair according to one metric may make that model less fair according to another. Approaches to mitigation are subject to impossibility theorems, which show that &amp;ldquo;definitions are not mathematically or morally compatible in general&amp;rdquo; (Mitchell et al. 2021). That is, there is no way to satisfy many fairness constraints at once unless we live in a world with no inequality to start with. However, more recent studies have shown that near-fairness with respect to several definitions is quite possible (Bell et al. 2023).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>Critique&lt;/em>: While approaches to assessment and mitigation seek to reduce complexity and situate notions of fairness in mathematical formalism, sociotechnical critique provides tooling to better understand how mathematical notions of fairness may fail to account for the real-world complexity of social phenomena. Work in this discipline often reveals that, in the process of measuring or addressing unfairness by some definition, methods for fairness assessment and mitigation may actually ignore, necessitate, or introduce unfairness by some other definition.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>The work of scoping Posit&amp;rsquo;s resources for fair machine learning, in large part, involved striking the right balance between tools in these categories and integrating them thoughtfully among our existing functionality. Rather than supporting as many fairness-oriented tools as possible, our goal is to best enable users of our tools to reason well about the fairness-relevant decisions they make throughout the modeling process.&lt;/p>
&lt;h2 id="additions-to-tidymodels">Additions to tidymodels
&lt;a href="#additions-to-tidymodels">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The most recent set of tidymodels releases include changes that provide support for assessment and critique using the tidymodels framework.&lt;/p>
&lt;!-- TODO: change the tidymodels.org urls to the merged versions -->
&lt;p>The most recent yardstick release introduces
&lt;a href="https://yardstick.tidymodels.org/reference/new_groupwise_metric.html" target="_blank" rel="noopener">a tool to create fairness metrics&lt;/a> with the problem context in mind, as well as
&lt;a href="https://yardstick.tidymodels.org/reference/index.html#fairness-metrics" target="_blank" rel="noopener">some outputs of that tool&lt;/a> implementing common fairness metrics. For a higher-level introduction to the concept of a groupwise metric, we&amp;rsquo;ve also introduced a
&lt;a href="https://yardstick.tidymodels.org/articles/grouping.html" target="_blank" rel="noopener">new package vignette&lt;/a>. To see those fairness metrics in action, see
&lt;a href="https://www.tidymodels.org/learn/work/fairness-detectors/" target="_blank" rel="noopener">this new article on tidymodels.org&lt;/a>, a case study using data about GPT detectors.&lt;/p>
&lt;p>The most recent tune release integrates support for those fairness metrics from yardstick, allowing users to evaluate fairness criteria across resamples. To demonstrate those features in context, we&amp;rsquo;ve added
&lt;a href="https://www.tidymodels.org/learn/work/fairness-readmission/" target="_blank" rel="noopener">another new article on tidymodels.org&lt;/a>, modeling hospital readmission for patients with Type I diabetes.&lt;/p>
&lt;p>Notably, we haven&amp;rsquo;t introduced functionality to support mitigation. While a number of methods have proliferated over the years to finetune models to act more fairly with respect to some fairness criteria, each apply only in relatively niche applications with modest experimental results (Agarwal et al. 2018; Mittelstadt, Wachter, and Russell 2023). For now, we believe that, in practice, the efforts of practitioners&amp;mdash;and thus our efforts to support them&amp;mdash;are better spent engaging with the sociotechnical context of a given modeling problem (Holstein et al. 2019).&lt;/p>
&lt;p>We&amp;rsquo;re excited to support modeling practitioners in fairness-oriented analysis of models and look forward to seeing how these methods are put to work.&lt;/p>
&lt;h2 id="references">References
&lt;a href="#references">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;div id="refs" class="references csl-bib-body hanging-indent" entry-spacing="0">
&lt;div id="ref-agarwal2018" class="csl-entry">
&lt;p>Agarwal, Alekh, Alina Beygelzimer, Miroslav Dudı́k, John Langford, and Hanna Wallach. 2018. &amp;ldquo;A Reductions Approach to Fair Classification.&amp;rdquo; In &lt;em>International Conference on Machine Learning&lt;/em>, 60&amp;ndash;69. PMLR.&lt;/p>
&lt;/div>
&lt;div id="ref-bell2023" class="csl-entry">
&lt;p>Bell, Andrew, Lucius Bynum, Nazarii Drushchak, Tetiana Zakharchenko, Lucas Rosenblatt, and Julia Stoyanovich. 2023. &amp;ldquo;The Possibility of Fairness: Revisiting the Impossibility Theorem in Practice.&amp;rdquo; In &lt;em>Proceedings of the 2023 ACM Conference on Fairness, Accountability, and Transparency&lt;/em>, 400&amp;ndash;422. FAccT &amp;lsquo;23. New York, NY, USA: Association for Computing Machinery. &lt;a href="https://doi.org/10.1145/3593013.3594007">https://doi.org/10.1145/3593013.3594007&lt;/a>.&lt;/p>
&lt;/div>
&lt;div id="ref-holstein2019" class="csl-entry">
&lt;p>Holstein, Kenneth, Jennifer Wortman Vaughan, Hal Daumé III, Miro Dudik, and Hanna Wallach. 2019. &amp;ldquo;Improving Fairness in Machine Learning Systems: What Do Industry Practitioners Need?&amp;rdquo; In &lt;em>Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems&lt;/em>, 1&amp;ndash;16.&lt;/p>
&lt;/div>
&lt;div id="ref-mitchell2021" class="csl-entry">
&lt;p>Mitchell, Shira, Eric Potash, Solon Barocas, Alexander D&amp;rsquo;Amour, and Kristian Lum. 2021. &amp;ldquo;Algorithmic Fairness: Choices, Assumptions, and Definitions.&amp;rdquo; &lt;em>Annual Review of Statistics and Its Application&lt;/em> 8 (1): 141&amp;ndash;63. &lt;a href="https://doi.org/10.1146/annurev-statistics-042720-125902">https://doi.org/10.1146/annurev-statistics-042720-125902&lt;/a>.&lt;/p>
&lt;/div>
&lt;div id="ref-mittelstadt2023" class="csl-entry">
&lt;p>Mittelstadt, Brent, Sandra Wachter, and Chris Russell. 2023. &amp;ldquo;The Unfairness of Fair Machine Learning: Levelling down and Strict Egalitarianism by Default.&amp;rdquo; &lt;em>arXiv Preprint arXiv:2302.02404&lt;/em>.&lt;/p>
&lt;/div>
&lt;div id="ref-narayanan2018" class="csl-entry">
&lt;p>Narayanan, Arvind. 2018. &amp;ldquo;Translation Tutorial: 21 Fairness Definitions and Their Politics.&amp;rdquo; In &lt;em>Proc. Conf. Fairness Accountability Transp., New York, Usa&lt;/em>, 1170:3.&lt;/p>
&lt;/div>
&lt;/div></description></item><item><title>Take the tidymodels survey for 2024 priorities</title><link>https://www.tidyverse.org/blog/2024/02/tidymodels-2024-survey/</link><pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/02/tidymodels-2024-survey/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>At the end of 2021, we created a survey to get community input on how we prioritize our projects.
&lt;a href="https://colorado.posit.co/rsc/tidymodels-priorities-2022/" target="_blank" rel="noopener">The results&lt;/a> gave us a good sense of which items people were most interested in. Since then we have completed a number of projects:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Model fairness metrics&lt;/strong> were included in
&lt;a href="https://yardstick.tidymodels.org/news/index.html#yardstick-130" target="_blank" rel="noopener">yardstick 1.3.0&lt;/a> with
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels.org&lt;/a> posts coming soon.&lt;/li>
&lt;li>&lt;strong>Spatial analysis models and methods&lt;/strong> led to the creation of
&lt;a href="https://spatialsample.tidymodels.org/" target="_blank" rel="noopener">spatialsample&lt;/a>.&lt;/li>
&lt;li>&lt;strong>H2O.ai support&lt;/strong> was achieved with the creation of
&lt;a href="https://agua.tidymodels.org/" target="_blank" rel="noopener">agua&lt;/a>.&lt;/li>
&lt;li>&lt;strong>Better serialization tools&lt;/strong> are now provided in the
&lt;a href="https://github.com/rstudio/bundle" target="_blank" rel="noopener">bundle&lt;/a> package.&lt;/li>
&lt;/ul>
&lt;p>Almost everything that respondents prioritized highly last year has either been completed or is currently in progress. Our main focus right now is to wrap up survival analysis, which is being done right now with a series of CRAN releases for the affected packages. Most immediately following these releases, we will be working on postprocessing and supervised feature selection. Beyond that, we&amp;rsquo;d like to once again ask the community for feedback to help us better prioritize features in the coming year.&lt;/p>
&lt;h2 id="looking-toward-2024">Looking toward 2024
&lt;a href="#looking-toward-2024">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;strong>Take a look at
&lt;a href="https://conjoint.qualtrics.com/jfe/form/SV_aWw8ocGN5aPgeZE" target="_blank" rel="noopener">our survey for next priorities&lt;/a>&lt;/strong> and let us know what you think. There are some items we&amp;rsquo;ve put &amp;ldquo;on the menu&amp;rdquo; but you can write in other items that you are interested in.&lt;/p>
&lt;p>The current slate of our possible priorities include:&lt;/p>
&lt;h3 id="sparse-tibbles">Sparse tibbles
&lt;a href="#sparse-tibbles">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Many models benefit from having sparse data, both in execution time and memory usage. We can&amp;rsquo;t take full advantage of this since recipes use tibbles. This project would involve making it so the tibbles used &lt;em>inside of a recipe&lt;/em> can hold sparse data. This would not be intended as a general substitute for regular tibbles.&lt;/p>
&lt;h3 id="causal-inference-interface">Causal inference interface
&lt;a href="#causal-inference-interface">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>While many common causal inference workflows are already possible with tidymodels, a small set of helper functions could greatly ease the experience of causal modeling in the framework. Specifically, these changes would better accommodate a two-stage modeling approach, using predictions from a propensity model to set case weights for an outcome model.&lt;/p>
&lt;h3 id="improve-chattr">Improve chattr
&lt;a href="#improve-chattr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>
&lt;a href="https://github.com/mlverse/chattr" target="_blank" rel="noopener">chattr&lt;/a> is an interface to large language models (LLMs). It enables interaction with the model directly from the RStudio IDE. This task would involve fine-tuning it to give better results when used for tidymodels tasks.&lt;/p>
&lt;h3 id="cost-sensitive-learning-api">Cost-sensitive learning API
&lt;a href="#cost-sensitive-learning-api">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>This feature is another solution for severe class imbalances. The main part of this task is making our approaches to this uniform across models.&lt;/p>
&lt;h3 id="expand-models-for-stacking-ensembles">Expand models for stacking ensembles
&lt;a href="#expand-models-for-stacking-ensembles">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>As of now, the stacks package only supports combining the predictions of member models using a regularized linear model. We could extend the package to allow for combining predictions using any modeling
&lt;a href="https://workflows.tidymodels.org" target="_blank" rel="noopener">workflow&lt;/a>.&lt;/p>
&lt;h3 id="extend-support-for-spatial-ml">Extend support for spatial ML
&lt;a href="#extend-support-for-spatial-ml">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>
&lt;a href="https://spatialsample.tidymodels.org/" target="_blank" rel="noopener">spatialsample&lt;/a> introduced a number of spatial resampling methods to tidymodels. More comprehensive support for spatial ML would involve better integrating
&lt;a href="https://www.mm218.dev/posts/2022-08-11-waywiser-010-is-now-on-cran/" target="_blank" rel="noopener">spatial metrics&lt;/a> into the framework and introducing support for new spatial model types.&lt;/p>
&lt;h3 id="ordinal-regression-extension-package">Ordinal regression extension package
&lt;a href="#ordinal-regression-extension-package">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Ordinal regression models are specific to classification tasks with a natural ordering to the outcome categories (e.g., low, medium, high, etc.). We could add support for modeling this type of data in a parsnip extension package.&lt;/p>
&lt;p>
&lt;a href="https://conjoint.qualtrics.com/jfe/form/SV_aWw8ocGN5aPgeZE" target="_blank" rel="noopener">Check out our survey&lt;/a> and tell us what your priorities are!&lt;/p></description></item><item><title>Q4 2023 tidymodels digest</title><link>https://www.tidyverse.org/blog/2024/01/tidymodels-2023-q4/</link><pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/01/tidymodels-2023-q4/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;p>Since the beginning of 2021, we have been publishing
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">quarterly updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused, like this post from the past couple of months:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2023/11/tidymodels-errors-q4/" target="_blank" rel="noopener">Three ways errors are about to get better in tidymodels&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2022/12/tidymodels-2022-q4/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been CRAN releases of 7 tidymodels packages. Here are links to their NEWS files:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>embed
&lt;a href="https://embed.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.3)&lt;/a>&lt;/li>
&lt;li>modeldb
&lt;a href="https://modeldb.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.0)&lt;/a>&lt;/li>
&lt;li>recipes
&lt;a href="https://recipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.9)&lt;/a>&lt;/li>
&lt;li>spatialsample
&lt;a href="https://spatialsample.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.5.1)&lt;/a>&lt;/li>
&lt;li>stacks
&lt;a href="https://stacks.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.3)&lt;/a>&lt;/li>
&lt;li>textrecipes
&lt;a href="https://textrecipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.6)&lt;/a>&lt;/li>
&lt;li>tidyposterior
&lt;a href="https://tidyposterior.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;ll highlight a few especially notable changes below: updated warnings when normalizing, and better error messages in recipes.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ames"&lt;/span>, package &lt;span class='o'>=&lt;/span> &lt;span class='s'>"modeldata"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="updated-warnings-when-normalizing">Updated warnings when normalizing
&lt;a href="#updated-warnings-when-normalizing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The latest release of recipes features an overhaul of the warnings and error messages to use the
&lt;a href="https://cli.r-lib.org/" target="_blank" rel="noopener">cli&lt;/a> package. With this, we are starting the project of providing more information signaling when things don&amp;rsquo;t go well.&lt;/p>
&lt;p>The first type of issue we now signal for is when you try to normalize data that contains elements such as &lt;code>NA&lt;/code> or &lt;code>Inf&lt;/code>. These can sneak in for several reasons, and before this release, it happened silently. Below we are creating a recipe using the &lt;code>ames&lt;/code> data set, and before we normalize, we are taking the logarithms of all variables that pertain to square footage.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_log&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>contains&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"SF"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_normalize&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>prep&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning: Columns `BsmtFin_SF_1`, `BsmtFin_SF_2`, `Bsmt_Unf_SF`, `Total_Bsmt_SF`,&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `Second_Flr_SF`, `Wood_Deck_SF`, and `Open_Porch_SF` returned NaN, because&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; variance cannot be calculated and scaling cannot be used. Consider avoiding&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `Inf` or `-Inf` values and/or setting `na_rm = TRUE` before normalizing.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We now get a warning that something happened, telling us that it encountered &lt;code>Inf&lt;/code> or &lt;code>-Inf&lt;/code>. Knowing that, we can go back and investigate what went wrong. If we exclude &lt;code>step_normalize()&lt;/code> and &lt;code>bake()&lt;/code> the recipe, we see that a number of &lt;code>-Inf&lt;/code> values appear.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_log&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>contains&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"SF"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>prep&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>bake&lt;/span>&lt;span class='o'>(&lt;/span>new_data &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NULL&lt;/span>, &lt;span class='nf'>contains&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"SF"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>glimpse&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Rows: 2,930&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Columns: 8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ BsmtFin_SF_1 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.6931472, 1.7917595, 0.0000000, 0.0000000, 1.0986123, 1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ BsmtFin_SF_2 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> -Inf, 4.969813, -Inf, -Inf, -Inf, -Inf, -Inf, -Inf, -Inf…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Bsmt_Unf_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 6.089045, 5.598422, 6.006353, 6.951772, 4.919981, 5.7807…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Total_Bsmt_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 6.984716, 6.782192, 7.192182, 7.654443, 6.833032, 6.8308…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ First_Flr_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 7.412160, 6.797940, 7.192182, 7.654443, 6.833032, 6.8308…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Second_Flr_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> -Inf, -Inf, -Inf, -Inf, 6.552508, 6.519147, -Inf, -Inf, …&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Wood_Deck_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 5.347108, 4.941642, 5.973810, -Inf, 5.356586, 5.886104, …&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Open_Porch_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 4.127134, -Inf, 3.583519, -Inf, 3.526361, 3.583519, -Inf…&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Looking at the bare data set, we notice that the &lt;code>-Inf&lt;/code> all appear where there are &lt;code>0&lt;/code>, which makes sense since &lt;code>log(0)&lt;/code> is undefined.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>ames&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>contains&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"SF"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>glimpse&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Rows: 2,930&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Columns: 8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ BsmtFin_SF_1 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 2, 6, 1, 1, 3, 3, 3, 1, 3, 7, 7, 1, 7, 3, 3, 1, 3, 3, 4,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ BsmtFin_SF_2 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1120, 0, 0, …&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Bsmt_Unf_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 441, 270, 406, 1045, 137, 324, 722, 1017, 415, 994, 763,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Total_Bsmt_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1080, 882, 1329, 2110, 928, 926, 1338, 1280, 1595, 994, …&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ First_Flr_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> 1656, 896, 1329, 2110, 928, 926, 1338, 1280, 1616, 1028,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Second_Flr_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> 0, 0, 0, 0, 701, 678, 0, 0, 0, 776, 892, 0, 676, 0, 0, 1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Wood_Deck_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> 210, 140, 393, 0, 212, 360, 0, 0, 237, 140, 157, 483, 0,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Open_Porch_SF &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> 62, 0, 36, 0, 34, 36, 0, 82, 152, 60, 84, 21, 75, 0, 54,…&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Knowing that it was &lt;code>0&lt;/code> that caused the problem, we can set an &lt;code>offset&lt;/code> to avoid taking &lt;code>log(0)&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_log&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>contains&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"SF"&lt;/span>&lt;span class='o'>)&lt;/span>, offset &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.5&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_normalize&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>prep&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>These warnings appear in &lt;code>step_scale()&lt;/code>, &lt;code>step_normalize()&lt;/code>, &lt;code>step_center()&lt;/code> or &lt;code>step_range()&lt;/code>.&lt;/p>
&lt;h2 id="better-error-messages-in-recipes">Better error messages in recipes
&lt;a href="#better-error-messages-in-recipes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Another problem that happens a lot when using recipes, is accidentally selecting variables that have the wrong types. Previously this caused the following error:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_dummy&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>starts_with&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Lot_"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>prep&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Error in `step_dummy()`:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Caused by error in `prep()`:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ! All columns selected for the step should be string, factor, or ordered.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In the newest release, it will detail the offending variables and what was wrong with them.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_dummy&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>starts_with&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Lot_"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>prep&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>bake&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `step_dummy()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Caused by error in `prep()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> All columns selected for the step should be factor or ordered.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> 1 double variable found: `Lot_Frontage`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> 1 integer variable found: `Lot_Area`&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="coming-attractions">Coming Attractions
&lt;a href="#coming-attractions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In the next month or so we are planning a cascade of CRAN releases. There is a lot of new functionality coming your way, especially in the tune package.&lt;/p>
&lt;p>A number of our packages will (finally) be able to cohesively fit, evaluate, tune, and predict models for event times (a.k.a.,
&lt;a href="https://en.wikipedia.org/wiki/Survival_analysis" target="_blank" rel="noopener">survival analysis&lt;/a>). If you don&amp;rsquo;t do this type of work, you might not notice the new capabilities. However, if you do, tidymodels will be able to do a lot more for you.&lt;/p>
&lt;p>We&amp;rsquo;ve also implemented a number of features related to model fairness. These tools allow tidymodels users to identify when machine learning models behave unfairly towards certain groups of people, and will also be included in the upcoming releases of tidymodels packages in Q1.&lt;/p>
&lt;p>We&amp;rsquo;ll highlight a lot of these new capabilities in blog posts here as well as tutorials on
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">&lt;code>tidymodels.org&lt;/code>&lt;/a>.&lt;/p>
&lt;p>So, there&amp;rsquo;s a lot more coming! We are very excited to have these features officially available and to see what people can do with them.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank those in the community that contributed to tidymodels in the last quarter:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>embed:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>.&lt;/li>
&lt;li>modeldb:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>recipes:
&lt;a href="https://github.com/atusy" target="_blank" rel="noopener">@atusy&lt;/a>,
&lt;a href="https://github.com/bcadenato" target="_blank" rel="noopener">@bcadenato&lt;/a>,
&lt;a href="https://github.com/collinberke" target="_blank" rel="noopener">@collinberke&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/gfronk" target="_blank" rel="noopener">@gfronk&lt;/a>,
&lt;a href="https://github.com/jkennel" target="_blank" rel="noopener">@jkennel&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/mastoffel" target="_blank" rel="noopener">@mastoffel&lt;/a>,
&lt;a href="https://github.com/matthewgson" target="_blank" rel="noopener">@matthewgson&lt;/a>,
&lt;a href="https://github.com/millermc38" target="_blank" rel="noopener">@millermc38&lt;/a>,
&lt;a href="https://github.com/ray-p144" target="_blank" rel="noopener">@ray-p144&lt;/a>,
&lt;a href="https://github.com/sebsfox" target="_blank" rel="noopener">@sebsfox&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>spatialsample:
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>.&lt;/li>
&lt;li>stacks:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>textrecipes:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jd4ds" target="_blank" rel="noopener">@jd4ds&lt;/a>, and
&lt;a href="https://github.com/masurp" target="_blank" rel="noopener">@masurp&lt;/a>.&lt;/li>
&lt;li>tidyposterior:
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;re grateful for all of the tidymodels community, from observers to users to contributors. Happy modeling!&lt;/p></description></item><item><title>Three ways errors are about to get better in tidymodels</title><link>https://www.tidyverse.org/blog/2023/11/tidymodels-errors-q4/</link><pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/11/tidymodels-errors-q4/</guid><description>&lt;p>Twice a year, the tidymodels team comes together for &amp;ldquo;spring cleaning,&amp;rdquo; a week-long project devoted to package maintenance. Ahead of the week, we come up with a list of maintenance tasks that we&amp;rsquo;d like to see consistently implemented across our packages. Many of these tasks can be completed by running one usethis function, while others are much more involved, like issue triage.&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> In tidymodels, triaging issues in our core packages helps us to better understand common ways that users struggle to wrap their heads around an API choice we&amp;rsquo;ve made or find the information they need. So, among other things, refinements to the wording of our error messages is a common output of our spring cleanings. This blog post will call out three kinds of changes to our erroring that came out of this spring cleaning:&lt;/p>
&lt;ul>
&lt;li>Improving existing errors:
&lt;a href="#outcome">The outcome went missing&lt;/a>&lt;/li>
&lt;li>Do something where we once did nothing:
&lt;a href="#predict">Predicting with things that can&amp;rsquo;t predict&lt;/a>&lt;/li>
&lt;li>Make a place and point to it:
&lt;a href="#model">Model formulas&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>To demonstrate, we&amp;rsquo;ll walk through some examples using the tidymodels packages:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching packages&lt;/span> ──────────────────────────── tidymodels 1.1.1 ──&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>broom &lt;/span> 1.0.5 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>recipes &lt;/span> 1.0.8.&lt;span style='color: #BB0000;'>9000&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dials &lt;/span> 1.2.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>rsample &lt;/span> 1.2.0 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dplyr &lt;/span> 1.1.3 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tibble &lt;/span> 3.2.1 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>ggplot2 &lt;/span> 3.4.4 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tidyr &lt;/span> 1.3.0 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>infer &lt;/span> 1.0.5 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tune &lt;/span> 1.1.2.&lt;span style='color: #BB0000;'>9000&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>modeldata &lt;/span> 1.2.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflows &lt;/span> 1.1.3 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>parsnip &lt;/span> 1.1.1.&lt;span style='color: #BB0000;'>9001&lt;/span> &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflowsets&lt;/span> 1.0.1 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>purrr &lt;/span> 1.0.2 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>yardstick &lt;/span> 1.2.0&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ─────────────────────────────── tidymodels_conflicts() ──&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>purrr&lt;/span>::&lt;span style='color: #00BB00;'>discard()&lt;/span> masks &lt;span style='color: #0000BB;'>scales&lt;/span>::discard()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>recipes&lt;/span>::&lt;span style='color: #00BB00;'>step()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::step()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>•&lt;/span> Use suppressPackageStartupMessages() to eliminate package startup messages&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that my installed versions include the current dev version of a few tidymodels packages. You can install those versions with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>pak&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://pak.r-lib.org/reference/pak.html'>pak&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/paste.html'>paste0&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidymodels/"&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tune"&lt;/span>, &lt;span class='s'>"parsnip"&lt;/span>, &lt;span class='s'>"recipes"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="the-outcome-went-missing-">The outcome went missing 👻
&lt;a href="#the-outcome-went-missing-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The tidymodels packages focus on &lt;em>supervised&lt;/em> machine learning problems, predicting the value of an outcome using predictors.&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> For example, in the code:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>linear_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>linear_reg&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>linear_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>linear_spec&lt;/span>, &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>hp&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The &lt;code>mpg&lt;/code> variable is the outcome. There are many ways that an analyst may mistakenly fail to pass an outcome. In the most straightforward case, they might omit the outcome on the LHS of the formula:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">linear_spec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">hp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in lm.fit(x, y, offset = offset, singular.ok = singular.ok, ...) : &lt;/span>
&lt;span class="c1">#&amp;gt; incompatible dimensions&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this case, parsnip used to defer to the modeling engine to raise an error, which may or may not be informative.&lt;/p>
&lt;p>There are many less obvious ways an analyst may mistakenly supply no outcome variable. For example, try spotting the issue in the following code, defining a recipe to perform principal component analysis (PCA) on the numeric variables in the data before fitting the model:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_pca&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_numeric&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">linear_spec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: object &amp;#39;.&amp;#39; not found&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>A head-scratcher! To help diagnose what&amp;rsquo;s happening here, we could first try seeing what data is actually being passed to the model.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>mtcars_rec_trained&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>mtcars_rec&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>prep&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span> &lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>mtcars_rec_trained&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>bake&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>NULL&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 32 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; PC1 PC2 PC3 PC4 PC5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> -&lt;span style='color: #BB0000;'>195.&lt;/span> 12.8 -&lt;span style='color: #BB0000;'>11.4&lt;/span> 0.016&lt;span style='text-decoration: underline;'>4&lt;/span> 2.17 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> -&lt;span style='color: #BB0000;'>195.&lt;/span> 12.9 -&lt;span style='color: #BB0000;'>11.7&lt;/span> -&lt;span style='color: #BB0000;'>0.479&lt;/span> 2.11 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> -&lt;span style='color: #BB0000;'>142.&lt;/span> 25.9 -&lt;span style='color: #BB0000;'>16.0&lt;/span> -&lt;span style='color: #BB0000;'>1.34&lt;/span> -&lt;span style='color: #BB0000;'>1.18&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> -&lt;span style='color: #BB0000;'>279.&lt;/span> -&lt;span style='color: #BB0000;'>38.3&lt;/span> -&lt;span style='color: #BB0000;'>14.0&lt;/span> 0.157 -&lt;span style='color: #BB0000;'>0.817&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> -&lt;span style='color: #BB0000;'>399.&lt;/span> -&lt;span style='color: #BB0000;'>37.3&lt;/span> -&lt;span style='color: #BB0000;'>1.38&lt;/span> 2.56 -&lt;span style='color: #BB0000;'>0.444&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> -&lt;span style='color: #BB0000;'>248.&lt;/span> -&lt;span style='color: #BB0000;'>25.6&lt;/span> -&lt;span style='color: #BB0000;'>12.2&lt;/span> -&lt;span style='color: #BB0000;'>3.01&lt;/span> -&lt;span style='color: #BB0000;'>1.08&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> -&lt;span style='color: #BB0000;'>435.&lt;/span> 20.9 13.9 0.801 -&lt;span style='color: #BB0000;'>0.916&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> -&lt;span style='color: #BB0000;'>160.&lt;/span> -&lt;span style='color: #BB0000;'>20.0&lt;/span> -&lt;span style='color: #BB0000;'>23.3&lt;/span> -&lt;span style='color: #BB0000;'>1.06&lt;/span> 0.787&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> -&lt;span style='color: #BB0000;'>172.&lt;/span> 10.8 -&lt;span style='color: #BB0000;'>18.3&lt;/span> -&lt;span style='color: #BB0000;'>4.40&lt;/span> -&lt;span style='color: #BB0000;'>0.836&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> -&lt;span style='color: #BB0000;'>209.&lt;/span> 19.7 -&lt;span style='color: #BB0000;'>8.94&lt;/span> -&lt;span style='color: #BB0000;'>2.58&lt;/span> 1.33 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 22 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Mmm. What happened to &lt;code>mpg&lt;/code>? We mistakenly told &lt;code>step_pca()&lt;/code> to perform PCA on &lt;em>all&lt;/em> of the numeric variables, not just the numeric &lt;em>predictors&lt;/em>! As a result, it incorporated &lt;code>mpg&lt;/code> into the principal components, removing each of the original numeric variables after the fact. Rewriting using the correct tidyselect specification &lt;code>all_numeric_predictors()&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>mtcars_rec_new&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_pca&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars_rec_new&lt;/span>, &lt;span class='nv'>linear_spec&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ══ Workflow [trained] ════════════════════════════════════════════════&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Preprocessor:&lt;/span> Recipe&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Model:&lt;/span> linear_reg()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── Preprocessor ──────────────────────────────────────────────────────&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 Recipe Step&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • step_pca()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── Model ─────────────────────────────────────────────────────────────&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Call:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; stats::lm(formula = ..y ~ ., data = data)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Coefficients:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; (Intercept) PC1 PC2 PC3 PC4 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 43.39293 0.07609 -0.05266 0.57892 0.94890 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; PC5 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; -1.72569&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Works like a charm. That error we saw previously could be much more helpful, though. With the current developmental version of parsnip, this looks like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>linear_spec&lt;/span>, &lt;span class='o'>~&lt;/span> &lt;span class='nv'>hp&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'>:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> `linear_reg()` was unable to find an outcome.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Ensure that you have specified an outcome column and that it hasn't&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; been removed in pre-processing.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Or, with workflows:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars_rec&lt;/span>, &lt;span class='nv'>linear_spec&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'>:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> `linear_reg()` was unable to find an outcome.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Ensure that you have specified an outcome column and that it hasn't&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; been removed in pre-processing.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Much better.&lt;/p>
&lt;h2 id="predicting-with-things-that-cant-predict">Predicting with things that can&amp;rsquo;t predict
&lt;a href="#predicting-with-things-that-cant-predict">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Earlier this year, Dr. Louise E. Sinks put out a
&lt;a href="https://lsinks.github.io/posts/2023-04-10-tidymodels/tidymodels_tutorial.html" target="_blank" rel="noopener">wonderful blog post&lt;/a> documenting what it felt like to approach the various object types defined in the tidymodels as a newcomer to the collection of packages. They wrote:&lt;/p>
&lt;blockquote>
&lt;p>I found it confusing that &lt;code>fit&lt;/code>, &lt;code>last_fit&lt;/code>, &lt;code>fit_resamples&lt;/code>, etc., did not all produce objects that contained the same information and could be acted on by the same functions.&lt;/p>
&lt;/blockquote>
&lt;p>This makes sense. While we try to forefront the intended mental model for fitting and predicting with tidymodels in our APIs and documentation, we also need to be proactive in anticipating common challenges in constructing that mental model.&lt;/p>
&lt;p>For example, we&amp;rsquo;ve found that it&amp;rsquo;s sometimes not clear to users which outputs they can call
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> on. One such situation, as Louise points out, is with &lt;code>fit_resamples()&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># fit a linear regression model to bootstrap resamples of mtcars&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>mtcars_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>fit_resamples&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>linear_reg&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>mtcars_res&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Resampling results&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Bootstrap sampling &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 25 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; splits id .metrics .notes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap01 &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 4]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/10]&amp;gt;&lt;/span> Bootstrap02 &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 4]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/16]&amp;gt;&lt;/span> Bootstrap03 &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 4]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap04 &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 4]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/10]&amp;gt;&lt;/span> Bootstrap05 &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 4]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/13]&amp;gt;&lt;/span> Bootstrap06 &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 4]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/16]&amp;gt;&lt;/span> Bootstrap07 &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 4]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap08 &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 4]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap09 &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 4]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/10]&amp;gt;&lt;/span> Bootstrap10 &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 4]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 15 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With previous tidymodels versions, mistakenly trying to predict with this object resulted in the following output:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars_res&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in UseMethod(&amp;#34;predict&amp;#34;) : &lt;/span>
&lt;span class="c1">#&amp;gt; no applicable method for &amp;#39;predict&amp;#39; applied to an object of class&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;#34;c(&amp;#39;resample_results&amp;#39;, &amp;#39;tune_results&amp;#39;, &amp;#39;tbl_df&amp;#39;, &amp;#39;tbl&amp;#39;, &amp;#39;data.frame&amp;#39;)&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some R developers may recognize this error as what results when we didn&amp;rsquo;t define any
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> method for &lt;code>tune_results&lt;/code> objects. We didn&amp;rsquo;t do so because prediction isn&amp;rsquo;t well-defined for tuning results. &lt;em>But&lt;/em>, this error message does little to help a user understand why that&amp;rsquo;s the case.&lt;/p>
&lt;p>We&amp;rsquo;ve recently made some changes to error more informatively in this case. We do so by defining a &amp;ldquo;dummy&amp;rdquo;
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> method for tuning results, implemented only for the sake of erroring more informatively. The same code will now give the following output:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars_res&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `predict()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! `predict()` is not well-defined for tuning results.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ To predict with the optimal model configuration from tuning&lt;/span>
&lt;span class="c1">#&amp;gt; results, ensure that the tuning result was generated with the&lt;/span>
&lt;span class="c1">#&amp;gt; control option `save_workflow = TRUE`, run `fit_best()`, and&lt;/span>
&lt;span class="c1">#&amp;gt; then predict using `predict()` on its output.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ To collect predictions from tuning results, ensure that the&lt;/span>
&lt;span class="c1">#&amp;gt; tuning result was generated with the control option `save_pred&lt;/span>
&lt;span class="c1">#&amp;gt; = TRUE` and run `collect_predictions()`.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>References to important concepts or functions, like
&lt;a href="https://tune.tidymodels.org/reference/control_grid.html" target="_blank" rel="noopener">control options&lt;/a>,
&lt;a href="https://tune.tidymodels.org/reference/fit_best.html?q=fit_best" target="_blank" rel="noopener">&lt;code>fit_best()&lt;/code>&lt;/a>, and
&lt;a href="https://tune.tidymodels.org/reference/collect_predictions.html?q=collect" target="_blank" rel="noopener">&lt;code>collect_predictions()&lt;/code>&lt;/a>, link to the help-files for those functions using
&lt;a href="https://cli.r-lib.org/reference/cli_abort.html" target="_blank" rel="noopener">cli&amp;rsquo;s erroring tools&lt;/a>.&lt;/p>
&lt;p>We hope new error messages like this will help to get folks back on track.&lt;/p>
&lt;h2 id="model-formulas">Model formulas
&lt;a href="#model-formulas">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In R, formulas provide a compact, symbolic notation to specify model terms. Many modeling functions in R make use of &amp;ldquo;specials,&amp;rdquo; or nonstandard notations used in formulas. Specials are defined and handled as a special case by a given modeling package. parsnip defers to engine packages to handle specials, so you can work with them as usual. For example, the mgcv package provides support for generalized additive models in R, and defines a special called &lt;code>s()&lt;/code> to indicate smoothing terms. You can interface with it via tidymodels like so:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># define a generalized additive model specification&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>gam_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>gen_additive_mod&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># fit the specification using a formula with specials&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>gam_spec&lt;/span>, &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>cyl&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>s&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>disp&lt;/span>, k &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; parsnip model object&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Family: gaussian &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Link function: identity &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Formula:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mpg ~ cyl + s(disp, k = 5)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Estimated degrees of freedom:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 3.39 total = 5.39 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; GCV score: 6.380152&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>While parsnip can handle specials just fine, the package is often used in conjunction with the greater tidymodels package ecosystem, which defines its own pre-processing infrastructure and functionality via packages like hardhat and recipes. The specials defined in many modeling packages introduce conflicts with that infrastructure. To support specials while also maintaining consistent syntax elsewhere in the ecosystem, &lt;strong>tidymodels delineates between two types of formulas: preprocessing formulas and model formulas&lt;/strong>. Preprocessing formulas determine the input variables, while model formulas determine the model structure.&lt;/p>
&lt;p>This is a tricky abstraction, and one that users have tripped up on in the past. Users could generate all sorts of different errors by 1) mistakenly passing model formulas where preprocessing formulas were expected, or 2) forgetting to pass a model formula where it&amp;rsquo;s needed. For an example of 1), we could pass recipes the same formula we passed to parsnip:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">cyl&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nf">s&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">disp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `inline_check()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! No in-line functions should be used here; use steps to &lt;/span>
&lt;span class="c1">#&amp;gt; define baking actions.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>But we &lt;em>just&lt;/em> used a special with another tidymodels function! Rude!&lt;/p>
&lt;p>Or, to demonstrate 2), we pass the preprocessing formula as we ought to but forget to provide the model formula:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">gam_wflow&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_formula&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gam_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">gam_wflow&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `fit_xy()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! `fit()` must be used with GAM models (due to its use of formulas).&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Uh, but I &lt;em>did&lt;/em> just use &lt;code>fit()&lt;/code>!&lt;/p>
&lt;p>Since the distinction between model formulas and preprocessor formulas comes up in functions across tidymodels, we decide to create a
&lt;a href="https://parsnip.tidymodels.org/dev/reference/model_formula.html" target="_blank" rel="noopener">central page&lt;/a> that documents the concept itself, hopefully making the syntax associated with it come more easily to users. Then, we link to it &lt;em>all over the place&lt;/em>. For example, those errors now look like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>cyl&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>s&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>disp&lt;/span>, k &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `inline_check()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> No in-line functions should be used here.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> The following function was found: `s`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Use steps to do transformations instead.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> If your modeling engine uses special terms in formulas, pass that&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; formula to workflows as a model formula&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; (`?parsnip::model_formula()`).&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Or:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>gam_wflow&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span> &lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'>:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> When working with generalized additive models, please supply&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; the model specification to `workflows::add_model()` along with a&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `formula` argument.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> See `?parsnip::model_formula()` to learn more.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>While I&amp;rsquo;ve only outlined three, there are all sorts of improvements to error messages on their way to the tidymodels packages in upcoming releases. If you happen to stumble across them, we hope they quickly set you back on the right path. 🗺&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Issue triage consists of categorizing, prioritizing, and consolidating issues in a repository&amp;rsquo;s issue tracker. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>See the
&lt;a href="https://tidyclust.tidymodels.org" target="_blank" rel="noopener">tidyclust&lt;/a> package for unsupervised learning with tidymodels! &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Q3 2023 tidymodels digest</title><link>https://www.tidyverse.org/blog/2023/10/tidymodels-2023-q3/</link><pubDate>Thu, 05 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/10/tidymodels-2023-q3/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;p>Since the beginning of 2021, we have been publishing
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">quarterly updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused, like this post from the past couple of months:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2023/08/validation-split-as-3-way-split/" target="_blank" rel="noopener">New interface to validation splits&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2022/12/tidymodels-2022-q4/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been CRAN releases of 11 tidymodels packages. Here are links to their NEWS files:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>butcher
&lt;a href="https://butcher.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.3)&lt;/a>&lt;/li>
&lt;li>embed
&lt;a href="https://embed.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.2)&lt;/a>&lt;/li>
&lt;li>modeldata
&lt;a href="https://modeldata.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.0)&lt;/a>&lt;/li>
&lt;li>parsnip
&lt;a href="https://parsnip.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.1)&lt;/a>&lt;/li>
&lt;li>recipes
&lt;a href="https://recipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.8)&lt;/a>&lt;/li>
&lt;li>rsample
&lt;a href="https://rsample.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.0)&lt;/a>&lt;/li>
&lt;li>textrecipes
&lt;a href="https://textrecipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.4)&lt;/a>&lt;/li>
&lt;li>themis
&lt;a href="https://themis.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.2)&lt;/a>&lt;/li>
&lt;li>tidyclust
&lt;a href="https://tidyclust.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.2.0)&lt;/a>&lt;/li>
&lt;li>tidymodels
&lt;a href="https://tidymodels.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.1)&lt;/a>&lt;/li>
&lt;li>tune
&lt;a href="https://tune.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.2)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;ll highlight a few especially notable changes below: Updated workshop material, new K-means engines and quality of life improvements in rsample. First, loading the collection of packages:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/tidyclust'>tidyclust&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ames"&lt;/span>, package &lt;span class='o'>=&lt;/span> &lt;span class='s'>"modeldata"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="workshops">Workshops
&lt;a href="#workshops">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One of the biggest areas of work for our team this quarter was getting ready for this year&amp;rsquo;s
&lt;a href="https://posit.co/conference/" target="_blank" rel="noopener">posit::conf&lt;/a>. This year, two 1-day workshops were available: &amp;ldquo;Introduction to tidymodels&amp;rdquo; and &amp;ldquo;Advanced tidymodels&amp;rdquo;. All the material can be found on our workshop website
&lt;a href="https://workshops.tidymodels.org/" target="_blank" rel="noopener">workshops.tidymodels.org&lt;/a>, with these workshops being archived as
&lt;a href="https://workshops.tidymodels.org/archive/2023-09-posit-conf/" target="_blank" rel="noopener">posit::conf 2023 workshops&lt;/a>.&lt;/p>
&lt;p>Unless otherwise noted (i.e. not an original creation and reused from another source), these educational materials are licensed under Creative Commons Attribution
&lt;a href="https://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener">CC BY-SA 4.0&lt;/a>.&lt;/p>
&lt;h2 id="tidyclust-update">Tidyclust update
&lt;a href="#tidyclust-update">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The latest release of tidyclust featured a round of bug fixes, documentation improvements and quality-of-life improvements.&lt;/p>
&lt;p>This release adds 2 new engines to the
&lt;a href="https://tidyclust.tidymodels.org/reference/k_means.html" target="_blank" rel="noopener">&lt;code>k_means()&lt;/code>&lt;/a> model.
&lt;a href="https://tidyclust.tidymodels.org/reference/details_k_means_klaR.html" target="_blank" rel="noopener">klaR&lt;/a> to run K-Modes models and
&lt;a href="https://tidyclust.tidymodels.org/reference/details_k_means_clustMixType.html" target="_blank" rel="noopener">clustMixType&lt;/a> to run K-prototypes. K-Modes is the categorical analog to K-means, meaning that it is intended to be used on only categorical data, and K-prototypes is the more general method that works with categorical and numeric data at the same time.&lt;/p>
&lt;p>If we were to fit a K-means model to a mixed-type data set such as &lt;code>ames&lt;/code>, it would work, but under the hood, the model would apply a dummy transformation on the categorical predictors.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>kmeans_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyclust.tidymodels.org/reference/k_means.html'>k_means&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>num_clusters &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"stats"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>kmeans_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>kmeans_spec&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>When extracting the cluster means, we see that the dummy variables were used when calculating the means, which can make it harder to interpret the output.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>kmeans_fit&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyclust.tidymodels.org/reference/extract_centroids.html'>extract_centroids&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>101&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>112&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>glimpse&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Rows: 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Columns: 12&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Overall_CondGood &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.09009009, 0.17594787, 0.01234568&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Overall_CondVery_Good &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.02702703, 0.06694313, 0.01646091&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Overall_CondExcellent &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.01201201, 0.01303318, 0.02880658&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Overall_CondVery_Excellent &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0, 0, 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Year_Built &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1989.645, 1956.471, 1999.572&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Year_Remod_Add &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1996.090, 1974.518, 2003.379&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Roof_StyleGable &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.8238238, 0.8234597, 0.4444444&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Roof_StyleGambrel &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.005005005, 0.010071090, 0.000000000&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Roof_StyleHip &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.1531532, 0.1558057, 0.5555556&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Roof_StyleMansard &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.005005005, 0.003554502, 0.000000000&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Roof_StyleShed &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.003003003, 0.001184834, 0.000000000&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Roof_MatlCompShg &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.9759760, 0.9905213, 0.9876543&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Fitting a K-prototype model is done by setting the engine in
&lt;a href="https://tidyclust.tidymodels.org/reference/k_means.html" target="_blank" rel="noopener">&lt;code>k_means()&lt;/code>&lt;/a> to &lt;code>&amp;quot;clustMixType&amp;quot;&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>kproto_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyclust.tidymodels.org/reference/k_means.html'>k_means&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>num_clusters &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"clustMixType"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>kproto_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>kproto_spec&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The clusters can now be extracted on the original data format as categorical predictors are supported.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>kproto_fit&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyclust.tidymodels.org/reference/extract_centroids.html'>extract_centroids&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>11&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>20&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>glimpse&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Rows: 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Columns: 10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Lot_Config &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> Inside, Inside, Inside&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Land_Slope &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> Gtl, Gtl, Gtl&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Neighborhood &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> College_Creek, North_Ames, Northridge_Heights&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Condition_1 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> Norm, Norm, Norm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Condition_2 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> Norm, Norm, Norm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Bldg_Type &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> OneFam, OneFam, OneFam&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ House_Style &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> Two_Story, One_Story, One_Story&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Overall_Cond &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> Average, Average, Average&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Year_Built &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1989.977, 1953.793, 1998.765&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ Year_Remod_Add &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1995.934, 1972.973, 2003.035&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="stricter-rsample-functions">Stricter rsample functions
&lt;a href="#stricter-rsample-functions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Before version 1.2.0 of rsample, misspelled and wrongly used arguments would be swallowed silently by the functions. This could be a big source of confusion as it is easy to slip between the cracks. We have made changes to all rsample functions such that whenever possible they alert the user when something is wrong.&lt;/p>
&lt;p>Before 1.2.0 when you, for example, misspelled &lt;code>strata&lt;/code> as &lt;code>stata&lt;/code>, everything would go on like normal, with no indication that &lt;code>stata&lt;/code> was ignored.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">initial_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">prop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.75&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">stata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Neighborhood&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;Training/Testing/Total&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;2197/733/2930&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The same code will now error and point to the problematic arguments.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>initial_split&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, prop &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.75&lt;/span>, stata &lt;span class='o'>=&lt;/span> &lt;span class='nv'>Neighborhood&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `initial_split()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> `...` must be empty.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> Problematic argument:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> stata = Neighborhood&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank those in the community that contributed to tidymodels in the last quarter:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>butcher:
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/li>
&lt;li>embed:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>, and
&lt;a href="https://github.com/wbuchanan" target="_blank" rel="noopener">@wbuchanan&lt;/a>.&lt;/li>
&lt;li>modeldata:
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>parsnip:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/gmcmacran" target="_blank" rel="noopener">@gmcmacran&lt;/a>,
&lt;a href="https://github.com/SHo-JANG" target="_blank" rel="noopener">@SHo-JANG&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/vidarsumo" target="_blank" rel="noopener">@vidarsumo&lt;/a>.&lt;/li>
&lt;li>recipes:
&lt;a href="https://github.com/abichat" target="_blank" rel="noopener">@abichat&lt;/a>,
&lt;a href="https://github.com/andreranza" target="_blank" rel="noopener">@andreranza&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jkennel" target="_blank" rel="noopener">@jkennel&lt;/a>,
&lt;a href="https://github.com/millermc38" target="_blank" rel="noopener">@millermc38&lt;/a>,
&lt;a href="https://github.com/nikosGeography" target="_blank" rel="noopener">@nikosGeography&lt;/a>,
&lt;a href="https://github.com/pgg1309" target="_blank" rel="noopener">@pgg1309&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/Sade154" target="_blank" rel="noopener">@Sade154&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/walrossker" target="_blank" rel="noopener">@walrossker&lt;/a>.&lt;/li>
&lt;li>rsample:
&lt;a href="https://github.com/godscloset" target="_blank" rel="noopener">@godscloset&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/MasterLuke84" target="_blank" rel="noopener">@MasterLuke84&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>textrecipes:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>, and
&lt;a href="https://github.com/gaohuachuan" target="_blank" rel="noopener">@gaohuachuan&lt;/a>.&lt;/li>
&lt;li>themis:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>.&lt;/li>
&lt;li>tidyclust:
&lt;a href="https://github.com/coforfe" target="_blank" rel="noopener">@coforfe&lt;/a>,
&lt;a href="https://github.com/cphaarmeyer" target="_blank" rel="noopener">@cphaarmeyer&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/michaelgrund" target="_blank" rel="noopener">@michaelgrund&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>, and
&lt;a href="https://github.com/trevorcampbell" target="_blank" rel="noopener">@trevorcampbell&lt;/a>.&lt;/li>
&lt;li>tidymodels:
&lt;a href="https://github.com/nikosGeography" target="_blank" rel="noopener">@nikosGeography&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>tune:
&lt;a href="https://github.com/dramanica" target="_blank" rel="noopener">@dramanica&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/forecastingEDs" target="_blank" rel="noopener">@forecastingEDs&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/kbodwin" target="_blank" rel="noopener">@kbodwin&lt;/a>,
&lt;a href="https://github.com/KJT-Habitat" target="_blank" rel="noopener">@KJT-Habitat&lt;/a>,
&lt;a href="https://github.com/MasterLuke84" target="_blank" rel="noopener">@MasterLuke84&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;re grateful for all of the tidymodels community, from observers to users to contributors. Happy modeling!&lt;/p></description></item><item><title>New interface to validation splits</title><link>https://www.tidyverse.org/blog/2023/08/validation-split-as-3-way-split/</link><pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/08/validation-split-as-3-way-split/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re chuffed to announce the release of a new interface to validation splits in
&lt;a href="https://rsample.tidymodels.org/" target="_blank" rel="noopener">rsample&lt;/a> 1.2.0 and
&lt;a href="https://tune.tidymodels.org/" target="_blank" rel="noopener">tune&lt;/a> 1.1.2. The rsample package makes it easy to create resamples for assessing model performance. The tune package facilitates hyperparameter tuning for the tidymodels packages.&lt;/p>
&lt;p>You can install the new versions from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"rsample"&lt;/span>, &lt;span class='s'>"tune"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will walk you through how to make a validation split and use it for tuning.&lt;/p>
&lt;p>You can see a full list of changes in the release notes for
&lt;a href="https://github.com/tidymodels/rsample/releases/tag/v1.2.0" target="_blank" rel="noopener">rsample&lt;/a> and
&lt;a href="https://github.com/tidymodels/tune/releases/tag/v1.1.2" target="_blank" rel="noopener">tune&lt;/a>.&lt;/p>
&lt;p>Let&amp;rsquo;s start with loading the tidymodels package which will load, among others, both rsample and tune.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching packages&lt;/span> ────────────────────────────────────── tidymodels 1.1.1 ──&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>broom &lt;/span> 1.0.5 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>recipes &lt;/span> 1.0.7&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dials &lt;/span> 1.2.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>rsample &lt;/span> 1.2.0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dplyr &lt;/span> 1.1.2 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tibble &lt;/span> 3.2.1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>ggplot2 &lt;/span> 3.4.3 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tidyr &lt;/span> 1.3.0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>infer &lt;/span> 1.0.4 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tune &lt;/span> 1.1.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>modeldata &lt;/span> 1.2.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflows &lt;/span> 1.1.3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>parsnip &lt;/span> 1.1.1 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflowsets&lt;/span> 1.0.1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>purrr &lt;/span> 1.0.2 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>yardstick &lt;/span> 1.2.0&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ───────────────────────────────────────── tidymodels_conflicts() ──&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>purrr&lt;/span>::&lt;span style='color: #00BB00;'>discard()&lt;/span> masks &lt;span style='color: #0000BB;'>scales&lt;/span>::discard()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>recipes&lt;/span>::&lt;span style='color: #00BB00;'>step()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::step()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>•&lt;/span> Use suppressPackageStartupMessages() to eliminate package startup messages&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="the-new-functions">The new functions
&lt;a href="#the-new-functions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>You can now make a three-way split of your data instead of doing a sequence of two binary splits.&lt;/p>
&lt;ul>
&lt;li>&lt;code>initial_validation_split()&lt;/code> with variants &lt;code>initial_validation_time_split()&lt;/code> and &lt;code>group_initial_validation_split()&lt;/code> for the initial three-way split&lt;/li>
&lt;li>&lt;code>validation_set()&lt;/code> to create the &lt;code>rset&lt;/code> for tuning containing the analysis (= training) and assessment (= validation) set&lt;/li>
&lt;li>&lt;code>training()&lt;/code>, &lt;code>validation()&lt;/code>, and &lt;code>testing()&lt;/code> for access to the separate subsets&lt;/li>
&lt;li>&lt;code>last_fit()&lt;/code> (and &lt;code>fit_best()&lt;/code>) now also work on the initial three-way split&lt;/li>
&lt;/ul>
&lt;h2 id="the-new-functions-in-action">The new functions in action
&lt;a href="#the-new-functions-in-action">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To illustrate how to use the new functions, we&amp;rsquo;ll replicate an analysis of
&lt;a href="https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-09/readme.md" target="_blank" rel="noopener">childcare cost&lt;/a> from a
&lt;a href="https://github.com/rfordatascience/tidytuesday" target="_blank" rel="noopener">Tidy Tuesday&lt;/a> done by Julia Silge in one of her
&lt;a href="https://juliasilge.com/blog/childcare-costs/" target="_blank" rel="noopener">screencasts&lt;/a>.&lt;/p>
&lt;p>We are modeling the median weekly price for school-aged kids in childcare centers &lt;code>mcsa&lt;/code> and are thus removing the other variables containing different variants of median prices (e.g., for different age groups). We are also removing the FIPS code identifying the county as we are including various characteristics of the counties instead of their ID.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://readr.tidyverse.org'>readr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Attaching package: 'readr'&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; The following object is masked from 'package:yardstick':&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; spec&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; The following object is masked from 'package:scales':&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; col_factor&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>childcare_costs&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://readr.tidyverse.org/reference/read_delim.html'>read_csv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/childcare_costs.csv'&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Rows: &lt;/span>&lt;span style='color: #0000BB;'>34567&lt;/span> &lt;span style='font-weight: bold;'>Columns: &lt;/span>&lt;span style='color: #0000BB;'>61&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>──&lt;/span> &lt;span style='font-weight: bold;'>Column specification&lt;/span> &lt;span style='color: #00BBBB;'>────────────────────────────────────────────────────────&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Delimiter:&lt;/span> ","&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>dbl&lt;/span> (61): county_fips_code, study_year, unr_16, funr_16, munr_16, unr_20to64...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Use `spec()` to retrieve the full column specification for this data.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Specify the column types or set `show_col_types = FALSE` to quiet this message.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>childcare_costs&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>childcare_costs&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='nf'>matches&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"^mc_|^mfc"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='nv'>county_fips_code&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>drop_na&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>glimpse&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>childcare_costs&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Rows: 23,593&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Columns: 53&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ study_year &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 2008, 2009, 2010, 2011, 2012, 2013, 2014, 20…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ unr_16 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 5.42, 5.93, 6.21, 7.55, 8.60, 9.39, 8.50, 7.…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ funr_16 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 4.41, 5.72, 5.57, 8.13, 8.88, 10.31, 9.18, 8…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ munr_16 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 6.32, 6.11, 6.78, 7.03, 8.29, 8.56, 7.95, 6.…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ unr_20to64 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 4.6, 4.8, 5.1, 6.2, 6.7, 7.3, 6.8, 5.9, 4.4,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ funr_20to64 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 3.5, 4.6, 4.6, 6.3, 6.4, 7.6, 6.8, 6.1, 4.6,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ munr_20to64 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 5.6, 5.0, 5.6, 6.1, 7.0, 7.0, 6.8, 5.9, 4.3,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ flfpr_20to64 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 68.9, 70.8, 71.3, 70.2, 70.6, 70.7, 69.9, 68…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ flfpr_20to64_under6 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 66.9, 63.7, 67.0, 66.5, 67.1, 67.5, 65.2, 66…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ flfpr_20to64_6to17 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 79.59, 78.41, 78.15, 77.62, 76.31, 75.91, 75…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ flfpr_20to64_under6_6to17 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 60.81, 59.91, 59.71, 59.31, 58.30, 58.00, 57…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ mlfpr_20to64 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 84.0, 86.2, 85.8, 85.7, 85.7, 85.0, 84.2, 82…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ pr_f &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 8.5, 7.5, 7.5, 7.4, 7.4, 8.3, 9.1, 9.3, 9.4,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ pr_p &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 11.5, 10.3, 10.6, 10.9, 11.6, 12.1, 12.8, 12…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ mhi_2018 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 58462.55, 60211.71, 61775.80, 60366.88, 5915…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ me_2018 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 32710.60, 34688.16, 34740.84, 34564.32, 3432…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ fme_2018 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 25156.25, 26852.67, 27391.08, 26727.68, 2796…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ mme_2018 &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 41436.80, 43865.64, 46155.24, 45333.12, 4427…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ total_pop &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 49744, 49584, 53155, 53944, 54590, 54907, 55…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ one_race &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 98.1, 98.6, 98.5, 98.5, 98.5, 98.6, 98.7, 98…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ one_race_w &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 78.9, 79.1, 79.1, 78.9, 78.9, 78.3, 78.0, 77…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ one_race_b &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 17.7, 17.9, 17.9, 18.1, 18.1, 18.4, 18.6, 18…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ one_race_i &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.4, 0.4, 0.3, 0.2, 0.3, 0.3, 0.4, 0.4, 0.4,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ one_race_a &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.4, 0.6, 0.7, 0.7, 0.8, 1.0, 0.9, 1.0, 0.8,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ one_race_h &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ one_race_other &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.7, 0.7, 0.6, 0.5, 0.4, 0.7, 0.7, 0.9, 1.4,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ two_races &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1.9, 1.4, 1.5, 1.5, 1.5, 1.4, 1.3, 1.6, 2.0,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ hispanic &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1.8, 2.0, 2.3, 2.4, 2.4, 2.5, 2.5, 2.6, 2.6,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ households &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 18373, 18288, 19718, 19998, 19934, 20071, 20…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ h_under6_both_work &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1543, 1475, 1569, 1695, 1714, 1532, 1557, 13…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ h_under6_f_work &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 970, 964, 1009, 1060, 938, 880, 1191, 1258, …&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ h_under6_m_work &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 22, 16, 16, 106, 120, 161, 159, 211, 109, 10…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ h_under6_single_m &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 995, 1099, 1110, 1030, 1095, 1160, 954, 883,…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ h_6to17_both_work &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 4900, 5028, 5472, 5065, 4608, 4238, 4056, 40…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ h_6to17_fwork &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1308, 1519, 1541, 1965, 1963, 1978, 2073, 20…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ h_6to17_mwork &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 114, 92, 113, 246, 284, 354, 373, 551, 322, …&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ h_6to17_single_m &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1966, 2305, 2377, 2299, 2644, 2522, 2269, 21…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ emp_m &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 27.40, 29.54, 29.33, 31.17, 32.13, 31.74, 32…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ memp_m &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 24.41, 26.07, 25.94, 26.97, 28.59, 27.44, 28…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ femp_m &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 30.68, 33.40, 33.06, 35.96, 36.09, 36.61, 37…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ emp_service &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 17.06, 15.81, 16.92, 16.18, 16.09, 16.72, 16…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ memp_service &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 15.53, 14.16, 15.09, 14.21, 14.71, 13.92, 13…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ femp_service &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 18.75, 17.64, 18.93, 18.42, 17.63, 19.89, 20…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ emp_sales &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 29.11, 28.75, 29.07, 27.56, 28.39, 27.22, 25…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ memp_sales &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 15.97, 17.51, 17.82, 17.74, 17.79, 17.38, 15…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ femp_sales &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 43.52, 41.25, 41.43, 38.76, 40.26, 38.36, 36…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ emp_n &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 13.21, 11.89, 11.57, 10.72, 9.02, 9.27, 9.38…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ memp_n &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 22.54, 20.30, 19.86, 18.28, 16.03, 16.79, 17…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ femp_n &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 2.99, 2.52, 2.45, 2.09, 1.19, 0.77, 0.58, 0.…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ emp_p &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 13.22, 14.02, 13.11, 14.38, 14.37, 15.04, 16…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ memp_p &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 21.55, 21.96, 21.28, 22.80, 22.88, 24.48, 24…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ femp_p &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 4.07, 5.19, 4.13, 4.77, 4.84, 4.36, 6.07, 7.…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ mcsa &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 80.92, 83.42, 85.92, 88.43, 90.93, 93.43, 95…&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Even after omitting rows with missing values are we left with 23593 observations. That is plenty to work with! We are likely to get a reliable estimate of the model performance from a validation set without having to fit and evaluate the model multiple times, as with, for example, v-fold cross-validation.&lt;/p>
&lt;p>We are creating a three-way split of the data into a training, a validation, and a test set with the new &lt;code>initial_validation_split()&lt;/code> function. We are stratifying based on our outcome &lt;code>mcsa&lt;/code>. The default of &lt;code>prop = c(0.6, 0.2)&lt;/code> means that 60% of the data gets allocated to the training set and 20% to the validation set - and the remaining 20% go into the test set.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>123&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>childcare_split&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>childcare_costs&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>initial_validation_split&lt;/span>&lt;span class='o'>(&lt;/span>strata &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mcsa&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>childcare_split&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;Training/Validation/Testing/Total&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;14155/4718/4720/23593&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can access the subsets of the data with the familiar &lt;code>training()&lt;/code> and &lt;code>testing()&lt;/code> as well as the new &lt;code>validation()&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>validation&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>childcare_split&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4,718 × 53&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; study_year unr_16 funr_16 munr_16 unr_20to64 funr_20to64 munr_20to64&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='text-decoration: underline;'>2&lt;/span>013 9.39 10.3 8.56 7.3 7.6 7 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='text-decoration: underline;'>2&lt;/span>011 13.0 12.4 13.6 13.2 12.4 13.9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='text-decoration: underline;'>2&lt;/span>008 3.85 4.4 3.43 3.7 3.9 3.6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='text-decoration: underline;'>2&lt;/span>015 8.31 11.8 5.69 7.8 11.7 4.9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='text-decoration: underline;'>2&lt;/span>015 7.67 6.92 8.27 7.6 6.7 8.3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='text-decoration: underline;'>2&lt;/span>016 5.95 6.33 5.66 5.7 5.9 5.5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='text-decoration: underline;'>2&lt;/span>009 10.7 15.9 7.06 8.7 16.8 2.9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='text-decoration: underline;'>2&lt;/span>010 11.2 15.2 7.89 10.9 14.7 7.8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='text-decoration: underline;'>2&lt;/span>013 15.0 17.0 13.4 15.2 18.1 13 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='text-decoration: underline;'>2&lt;/span>014 17.4 16.3 18.2 17.2 17.7 16.9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 4,708 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 46 more variables: flfpr_20to64 &amp;lt;dbl&amp;gt;, flfpr_20to64_under6 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># flfpr_20to64_6to17 &amp;lt;dbl&amp;gt;, flfpr_20to64_under6_6to17 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># mlfpr_20to64 &amp;lt;dbl&amp;gt;, pr_f &amp;lt;dbl&amp;gt;, pr_p &amp;lt;dbl&amp;gt;, mhi_2018 &amp;lt;dbl&amp;gt;, me_2018 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># fme_2018 &amp;lt;dbl&amp;gt;, mme_2018 &amp;lt;dbl&amp;gt;, total_pop &amp;lt;dbl&amp;gt;, one_race &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># one_race_w &amp;lt;dbl&amp;gt;, one_race_b &amp;lt;dbl&amp;gt;, one_race_i &amp;lt;dbl&amp;gt;, one_race_a &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># one_race_h &amp;lt;dbl&amp;gt;, one_race_other &amp;lt;dbl&amp;gt;, two_races &amp;lt;dbl&amp;gt;, hispanic &amp;lt;dbl&amp;gt;, …&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You may want to extract the training data to do some exploratory data analysis but here we are going to rely on xgboost to figure out patterns in the data so we can breeze straight to tuning a model.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>xgb_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>boost_tree&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> trees &lt;span class='o'>=&lt;/span> &lt;span class='m'>500&lt;/span>,&lt;/span>
&lt;span> min_n &lt;span class='o'>=&lt;/span> &lt;span class='nf'>tune&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> mtry &lt;span class='o'>=&lt;/span> &lt;span class='nf'>tune&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> stop_iter &lt;span class='o'>=&lt;/span> &lt;span class='nf'>tune&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> learn_rate &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.01&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"xgboost"&lt;/span>, validation &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.2&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>xgb_wf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mcsa&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>xgb_spec&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>xgb_wf&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ══ Workflow ════════════════════════════════════════════════════════════════════&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Preprocessor:&lt;/span> Formula&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Model:&lt;/span> boost_tree()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── Preprocessor ────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mcsa ~ .&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── Model ───────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Boosted Tree Model Specification (regression)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Main Arguments:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; mtry = tune()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; trees = 500&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; min_n = tune()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; learn_rate = 0.01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; stop_iter = tune()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Engine-Specific Arguments:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; validation = 0.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Computational engine: xgboost&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We give this workflow object with the model specification to &lt;code>tune_grid()&lt;/code> to try multiple combinations of the hyperparameters we tagged for tuning (&lt;code>min_n&lt;/code>, &lt;code>mtry&lt;/code>, and &lt;code>stop_iter&lt;/code>).&lt;/p>
&lt;p>During tuning, the model should not have access to the test data, only to the data used to fit the model (the analysis set) and the data used to assess the model (the assessment set). Each pair of analysis and assessment set forms a resample. For 10-fold cross-validation, we&amp;rsquo;d have 10 resamples. With a validation split, we have just one resample with the training set functioning as the analysis set and the validation set as the assessment set. The tidymodels tuning functions all expect a &lt;em>set&lt;/em> of resamples (which can be of size one) and the corresponding objects are of class &lt;code>rset&lt;/code>.&lt;/p>
&lt;p>To remove the test data from the initial three-way split and create such an &lt;code>rset&lt;/code> object for tuning, use &lt;code>validation_set()&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>234&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>childcare_set&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>validation_set&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>childcare_split&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>childcare_set&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; splits id &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [14155/4718]&amp;gt;&lt;/span> validation&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We are going to try 15 different parameter combinations and pick the one with the smallest RMSE.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>234&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>xgb_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>tune_grid&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>xgb_wf&lt;/span>, &lt;span class='nv'>childcare_set&lt;/span>, grid &lt;span class='o'>=&lt;/span> &lt;span class='m'>15&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>i&lt;/span> &lt;span style='color: #000000;'>Creating pre-processing data to finalize unknown parameter: mtry&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; Warning in `[.tbl_df`(x, is.finite(x &amp;lt;- as.numeric(x))): NAs introduced by coercion&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nv'>best_parameters&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>select_best&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>xgb_res&lt;/span>, &lt;span class='s'>"rmse"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>childcare_wflow&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>finalize_workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>xgb_wf&lt;/span>, &lt;span class='nv'>best_parameters&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>&lt;code>last_fit()&lt;/code> then lets you fit your model on the training data and calculate performance on the test data. If you provide it with a three-way split, you can choose if you want your model to be fitted on the training data only or on the combination of training and validation set. You can specify this with the &lt;code>add_validation_set&lt;/code> argument.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>childcare_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>last_fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>childcare_wflow&lt;/span>, &lt;span class='nv'>childcare_split&lt;/span>, add_validation_set &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>collect_metrics&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>childcare_fit&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .metric .estimator .estimate .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> rmse standard 21.4 Preprocessor1_Model1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> rsq standard 0.610 Preprocessor1_Model1&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This takes you through the important changes for validation sets in the tidymodels framework!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many thanks to the people who contributed since the last releases!&lt;/p>
&lt;p>For rsample:
&lt;a href="https://github.com/afrogri37" target="_blank" rel="noopener">@afrogri37&lt;/a>,
&lt;a href="https://github.com/AngelFelizR" target="_blank" rel="noopener">@AngelFelizR&lt;/a>,
&lt;a href="https://github.com/bschneidr" target="_blank" rel="noopener">@bschneidr&lt;/a>,
&lt;a href="https://github.com/erictleung" target="_blank" rel="noopener">@erictleung&lt;/a>,
&lt;a href="https://github.com/exsell-jc" target="_blank" rel="noopener">@exsell-jc&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/MasterLuke84" target="_blank" rel="noopener">@MasterLuke84&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/sametsoekel" target="_blank" rel="noopener">@sametsoekel&lt;/a>,
&lt;a href="https://github.com/Shafi2016" target="_blank" rel="noopener">@Shafi2016&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/trevorcampbell" target="_blank" rel="noopener">@trevorcampbell&lt;/a>.&lt;/p>
&lt;p>For tune:
&lt;a href="https://github.com/blechturm" target="_blank" rel="noopener">@blechturm&lt;/a>,
&lt;a href="https://github.com/cphaarmeyer" target="_blank" rel="noopener">@cphaarmeyer&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/forecastingEDs" target="_blank" rel="noopener">@forecastingEDs&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/kjbeath" target="_blank" rel="noopener">@kjbeath&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p></description></item><item><title>Q2 2023 tidymodels digest</title><link>https://www.tidyverse.org/blog/2023/07/tidymodels-2023-q2/</link><pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/07/tidymodels-2023-q2/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;p>Since the beginning of 2021, we have been publishing
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">quarterly updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused, like the
&lt;a href="https://www.tidyverse.org/blog/2023/05/desirability2/" target="_blank" rel="noopener">post&lt;/a> on the release of the new desirability2 package.&lt;/p>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2023/04/tidymodels-2023-q1/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been CRAN releases of 7 tidymodels packages. Here are links to their NEWS files:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>agua
&lt;a href="https://agua.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.1.3)&lt;/a>&lt;/li>
&lt;li>broom
&lt;a href="https://broom.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.5)&lt;/a>&lt;/li>
&lt;li>desirability2
&lt;a href="https://desirability2.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.0.1)&lt;/a>&lt;/li>
&lt;li>embed
&lt;a href="https://embed.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.1)&lt;/a>&lt;/li>
&lt;li>probably
&lt;a href="https://probably.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.2)&lt;/a>&lt;/li>
&lt;li>spatialsample
&lt;a href="https://spatialsample.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.4.0)&lt;/a>&lt;/li>
&lt;li>tidymodels
&lt;a href="https://tidymodels.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.0)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;ll highlight a few especially notable changes below: a new package with data for modeling, nearest neighbor distance matching cross-validation for spatial data, and a website refresh.&lt;/p>
&lt;p>First, loading the collection of packages:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="modeldatatoo">modeldatatoo
&lt;a href="#modeldatatoo">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many of the datasets used in tidymodels examples are available in the modeldata package. The new modeldatatoo package now extends the collection by several bigger datasets. To allow for the bigger size, the package does not contain those datasets directly but rather provides functions to access them, prefixed with &lt;code>data_&lt;/code>. For example:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/modeldatatoo'>modeldatatoo&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://tidymodels.github.io/modeldatatoo/reference/data_animals.html'>data_animals&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 610 × 48&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; text colour lifespan weight kingdom class phylum diet conservation_status&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='color: #555555;'>"&lt;/span>Aardv… Brown… 23 years 60kg … Animal… Mamm… Chord… Omni… Least Concern &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='color: #555555;'>"&lt;/span>Abyss… Fawn,… &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='color: #555555;'>"&lt;/span>Adeli… Black… 10 - 20… 3kg -… Animal… Aves Chord… Carn… Least Concern &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='color: #555555;'>"&lt;/span>Affen… Black… &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='color: #555555;'>"&lt;/span>Afgha… Black… &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='color: #555555;'>"&lt;/span>Afric… Grey,… 60 - 70… 3,600… Animal… Mamm… Chord… Herb… Threatened &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='color: #555555;'>"&lt;/span>Afric… Black… 15 - 20… 1.4kg… Animal… Mamm… Chord… Omni… Least Concern &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='color: #555555;'>"&lt;/span>Afric… Brown… 8 - 15 … 25g -… Animal… Amph… Chord… Carn… Least Concern &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='color: #555555;'>"&lt;/span>Afric… Grey,… 60 - 70… 900kg… Animal… Mamm… Chord… Herb… Endangered &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='color: #555555;'>"&lt;/span>Afric… Black… 15 - 20… 1.4kg… Animal… Mamm… Chord… Omni… Least Concern &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 600 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 39 more variables: order &amp;lt;chr&amp;gt;, scientific_name &amp;lt;chr&amp;gt;, skin_type &amp;lt;chr&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># habitat &amp;lt;chr&amp;gt;, predators &amp;lt;chr&amp;gt;, family &amp;lt;chr&amp;gt;, lifestyle &amp;lt;chr&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># average_litter_size &amp;lt;chr&amp;gt;, genus &amp;lt;chr&amp;gt;, top_speed &amp;lt;chr&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># favourite_food &amp;lt;chr&amp;gt;, main_prey &amp;lt;chr&amp;gt;, type &amp;lt;chr&amp;gt;, common_name &amp;lt;chr&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># group &amp;lt;chr&amp;gt;, size &amp;lt;chr&amp;gt;, distinctive_features &amp;lt;chr&amp;gt;, size_l &amp;lt;chr&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># origin &amp;lt;chr&amp;gt;, special_features &amp;lt;chr&amp;gt;, location &amp;lt;chr&amp;gt;, …&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The new datasets are:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://tidymodels.github.io/modeldatatoo/reference/data_animals.html" target="_blank" rel="noopener">&lt;code>data_animals()&lt;/code>&lt;/a> contains a long-form description of the animal (in the &lt;code>text&lt;/code> column) as well as quite a bit of missing data and malformed fields.&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/modeldatatoo/reference/data_chimiometrie_2019.html" target="_blank" rel="noopener">&lt;code>data_chimiometrie_2019()&lt;/code>&lt;/a> contains spectra measured at 550 (unknown) wavelengths, published as the challenge at the Chimiometrie 2019 conference.&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/modeldatatoo/reference/data_elevators.html" target="_blank" rel="noopener">&lt;code>data_elevators()&lt;/code>&lt;/a> contains information on a subset of the elevators in New York City.&lt;/li>
&lt;/ul>
&lt;p>Because those datasets are stored online, accessing them requires an active internet connection. We plan on using those datasets mostly for workshops and websites. The datasets in the modeldata package are part of the package directly, so they can be used everywhere (regardless of an active internet connection). We typically use them for package documentation.&lt;/p>
&lt;h2 id="spatialsample">spatialsample
&lt;a href="#spatialsample">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>spatialsample is a package for spatial resampling, extending the rsample framework to help create spatial extrapolation between your analysis and assessment data sets.&lt;/p>
&lt;p>The latest release of spatialsample includes nearest neighbor distance matching (NNDM) cross-validation via
&lt;a href="https://spatialsample.tidymodels.org/reference/spatial_nndm_cv.html" target="_blank" rel="noopener">&lt;code>spatial_nndm_cv()&lt;/code>&lt;/a>. NNDM is a variant of leave-one-out cross-validation which assigns each observation to a single assessment fold, and then attempts to remove data from each analysis fold until the nearest neighbor distance distribution between assessment and analysis folds matches the nearest neighbor distance distribution between training data and the locations a model will be used to predict.
&lt;a href="https://doi.org/10.1111/2041-210X.13851" target="_blank" rel="noopener">Proposed by Milà et al. (2022)&lt;/a>, this method aims to provide accurate estimates of how well models will perform in the locations they will actually be predicting. This method was originally implemented in the CAST package and can now be used with spatialsample as well.&lt;/p>
&lt;p>Let&amp;rsquo;s use the Ames housing data and turn it from a regular tibble into a &lt;code>sf&lt;/code> object for spatial data.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/spatialsample'>spatialsample&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, package &lt;span class='o'>=&lt;/span> &lt;span class='s'>"modeldata"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>ames_sf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>sf&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://r-spatial.github.io/sf/reference/st_as_sf.html'>st_as_sf&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, coords &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Longitude"&lt;/span>, &lt;span class='s'>"Latitude"&lt;/span>&lt;span class='o'>)&lt;/span>, crs &lt;span class='o'>=&lt;/span> &lt;span class='m'>4326&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Let&amp;rsquo;s assume that we are building a model to predict observations similar to this subset of the data:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>ames_prediction_sites&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>ames_sf&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>2001&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2100&lt;/span>, &lt;span class='o'>]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Let&amp;rsquo;s create NNDM cross-validation folds from a reduced training set as an example, just to keep things light.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>ames_folds&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://spatialsample.tidymodels.org/reference/spatial_nndm_cv.html'>spatial_nndm_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames_sf&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>100&lt;/span>, &lt;span class='o'>]&lt;/span>, &lt;span class='nv'>ames_prediction_sites&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The resulting &lt;code>rset&lt;/code> contains 100 splits of the data, always keeping 1 of the 100 data points in the assessment set.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>ames_folds&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; splits id &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [50/1]&amp;gt;&lt;/span> Fold001&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [83/1]&amp;gt;&lt;/span> Fold002&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [50/1]&amp;gt;&lt;/span> Fold003&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [50/1]&amp;gt;&lt;/span> Fold004&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [50/1]&amp;gt;&lt;/span> Fold005&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [50/1]&amp;gt;&lt;/span> Fold006&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [50/1]&amp;gt;&lt;/span> Fold007&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [76/1]&amp;gt;&lt;/span> Fold008&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [86/1]&amp;gt;&lt;/span> Fold009&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [88/1]&amp;gt;&lt;/span> Fold010&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 90 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Starting with all other 99 points in the analysis set, points are excluded until the distribution of nearest neighbor distances from the analysis set to the assessment set matches that of nearest neighbor distances from the training set to the prediction sites.&lt;/p>
&lt;p>Looking at one of the splits, we can see the single assessment point, the points included in the analysis set, and the points excluded as the buffer.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>get_rsplit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames_folds&lt;/span>, &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-10-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>The &lt;code>ames_fold&lt;/code> object can then be used with functions from the tune package as usual.&lt;/p>
&lt;h2 id="tidymodelsorg">tidymodels.org
&lt;a href="#tidymodelsorg">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The tidymodels website,
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels.org&lt;/a>, has been updated to use
&lt;a href="https://quarto.org/" target="_blank" rel="noopener">Quarto&lt;/a>. Things largely look the same as before but this change simplifies the build system which should make it easier for more people to contribute.&lt;/p>
&lt;p>This change to Quarto has also allowed us to improve the search functionality of the website. The tables for finding parsnip models, recipe steps, and broom tidiers at &lt;a href="https://www.tidymodels.org/find/">https://www.tidymodels.org/find/&lt;/a> now all list objects across all CRAN packages, not just tidymodels packages. This should make it much easier to find the right extension for your task, even if not implemented within tidymodels!&lt;/p>
&lt;p>And if it does not exist yet, open an issue on GitHub or browse the
&lt;a href="https://www.tidymodels.org/learn/#category=developer%20tools" target="_blank" rel="noopener">developer documentation for extending tidymodels&lt;/a>!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to extend our thanks to all of the contributors to tidymodels in the last quarter:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>agua:
&lt;a href="https://github.com/gvelasq" target="_blank" rel="noopener">@gvelasq&lt;/a>.&lt;/li>
&lt;li>broom:
&lt;a href="https://github.com/awcm0n" target="_blank" rel="noopener">@awcm0n&lt;/a>,
&lt;a href="https://github.com/gregmacfarlane" target="_blank" rel="noopener">@gregmacfarlane&lt;/a>,
&lt;a href="https://github.com/jwilliman" target="_blank" rel="noopener">@jwilliman&lt;/a>,
&lt;a href="https://github.com/mccarthy-m-g" target="_blank" rel="noopener">@mccarthy-m-g&lt;/a>,
&lt;a href="https://github.com/RoyalTS" target="_blank" rel="noopener">@RoyalTS&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/ste-tuf" target="_blank" rel="noopener">@ste-tuf&lt;/a>.&lt;/li>
&lt;li>desirability2:
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>embed:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>, and
&lt;a href="https://github.com/naveranoc" target="_blank" rel="noopener">@naveranoc&lt;/a>.&lt;/li>
&lt;li>probably:
&lt;a href="https://github.com/agormp" target="_blank" rel="noopener">@agormp&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>spatialsample:
&lt;a href="https://github.com/jamesgrecian" target="_blank" rel="noopener">@jamesgrecian&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>, and
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>.&lt;/li>
&lt;li>tidymodels:
&lt;a href="https://github.com/forecastingEDs" target="_blank" rel="noopener">@forecastingEDs&lt;/a>,
&lt;a href="https://github.com/JosiahParry" target="_blank" rel="noopener">@JosiahParry&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>desirability2</title><link>https://www.tidyverse.org/blog/2023/05/desirability2/</link><pubDate>Wed, 17 May 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/05/desirability2/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with `hugodown::tidy_show_meta()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnails()`
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] `usethis::use_tidy_thanks()`
-->
&lt;p>We&amp;rsquo;re tickled pink to announce the release of
&lt;a href="http://desirability2.tidymodels.org" target="_blank" rel="noopener">desirability2&lt;/a> (version 0.0.1). You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;desirability2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This blog post will introduce you to the package and desirability functions.&lt;/p>
&lt;p>Let&amp;rsquo;s load some packages!&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">desirability2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ggplot2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;a href="https://scholar.google.com/scholar?hl=en&amp;amp;as_sdt=0%2C7&amp;amp;q=%22desirability&amp;#43;functions%22" target="_blank" rel="noopener">Desirability functions&lt;/a> are tools that can be used to rank or optimize multiple characteristics at once. They are intuitive and easy to use. There are a few R packages that implement them, including
&lt;a href="http://cran.r-project.org/package=desirability" target="_blank" rel="noopener">desirability&lt;/a> and
&lt;a href="http://cran.r-project.org/package=desiR" target="_blank" rel="noopener">desiR&lt;/a>.&lt;/p>
&lt;p>We have a new one,
&lt;a href="http://cran.r-project.org/package=desirability2" target="_blank" rel="noopener">desirability2&lt;/a>, with an interface conducive to being used in-line via dplyr pipelines.&lt;/p>
&lt;p>Let&amp;rsquo;s demonstrate that by looking at an application. Suppose we created a classification model and produced multiple metrics on how well it classifies new data. We measured the area under the ROC curve and the binomial log-loss statistic in this example. There are about 300 different model configurations that we investigated via tuning.&lt;/p>
&lt;p>The results from the tuning process were:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">classification_results&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 298 × 5
## mixture penalty mn_log_loss roc_auc num_features
## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1 0 0.1 0.199 0.869 211
## 2 0 0.0788 0.196 0.870 211
## 3 0 0.0621 0.194 0.871 211
## 4 0 0.0489 0.192 0.872 211
## 5 0 0.0386 0.191 0.873 211
## 6 0 0.0304 0.190 0.873 211
## 7 0 0.0240 0.188 0.874 211
## 8 0 0.0189 0.188 0.874 211
## 9 0 0.0149 0.187 0.874 211
## 10 0 0.0117 0.186 0.874 211
## # ℹ 288 more rows
&lt;/code>&lt;/pre>&lt;p>If we were interested in the best area under the ROC curve:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">classification_results&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span> &lt;span class="nf">slice_max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">roc_auc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 1 × 5
## mixture penalty mn_log_loss roc_auc num_features
## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1 0.222 0.00574 0.185 0.876 86
&lt;/code>&lt;/pre>&lt;p>However, there are different optimal settings when the log-likelihood is considered:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">classification_results&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span> &lt;span class="nf">slice_min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mn_log_loss&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 1 × 5
## mixture penalty mn_log_loss roc_auc num_features
## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1 1 0.000853 0.184 0.876 103
&lt;/code>&lt;/pre>&lt;p>Are the two metrics related? Here&amp;rsquo;s a plot of the data:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">classification_results&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">roc_auc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mn_log_loss&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num_features&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/unnamed-chunk-7-1.svg" alt="plot of chunk unnamed-chunk-7" width="60%" />&lt;/p>
&lt;p>We colored the point using the number of features used in the model. Fewer predictors are better; we&amp;rsquo;d like to factor that into the tuning parameter selection.&lt;/p>
&lt;p>To optimize them all at once, desirability functions map their values to be between zero and one (with the latter being the most desirable). For the ROC scores, a value of 1.0 is best, and we may not consider a model with an AUC of less than 0.80. We can use desirability2&amp;rsquo;s
&lt;a href="http://desirability2.tidymodels.org/reference/inline_desirability.html" target="_blank" rel="noopener">&lt;code>d_max()&lt;/code>&lt;/a> function to translate these values to desirability:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">classification_results&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">roc_d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">d_max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">roc_auc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">high&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">low&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.8&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">roc_auc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">roc_d&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_line&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">lims&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/unnamed-chunk-8-1.svg" alt="plot of chunk unnamed-chunk-8" width="60%" />&lt;/p>
&lt;p>Note that all model configurations with ROC AUC scores below 0.80 have zero desirability.&lt;/p>
&lt;p>Since we want to reduce loss, we can use &lt;code>d_min()&lt;/code> to show a curve where smaller is better. For this specification, we&amp;rsquo;ll use the min and max values as defined by the data, by setting &lt;code>use_data = TRUE&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">classification_results&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">roc_d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">d_max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">roc_auc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">high&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">low&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.8&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">loss_d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">d_min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mn_log_loss&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">use_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mn_log_loss&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">loss_d&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_line&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">lims&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/unnamed-chunk-9-1.svg" alt="plot of chunk unnamed-chunk-9" width="60%" />&lt;/p>
&lt;p>Finally, we can factor in the number of features. Arguably this is more important to use than the other two outcomes; we will make this curve nonlinear so that it becomes more challenging to be desirable as the number of features increases. For this, we&amp;rsquo;ll use the &lt;code>scale&lt;/code> option to &lt;code>d_min()&lt;/code>, where larger values make the criteria more difficult to satisfy:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">classification_results&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">roc_d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">d_max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">roc_auc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">high&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">low&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.8&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">loss_d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">d_min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mn_log_loss&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">use_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">feat_d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">d_min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num_features&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">low&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">high&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">scale&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num_features&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">feat_d&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_line&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">lims&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/unnamed-chunk-10-1.svg" alt="plot of chunk unnamed-chunk-10" width="60%" />&lt;/p>
&lt;p>Combining these components into a single criterion using the geometric mean is common. Using this statistic has the side effect that any criteria with zero desirability make the overall desirability zero (since the geometric mean multiples the values). There is a function called
&lt;a href="http://desirability2.tidymodels.org/reference/d_overall.html" target="_blank" rel="noopener">&lt;code>d_overall()&lt;/code>&lt;/a> that can be used with dplyr&amp;rsquo;s &lt;code>across()&lt;/code> function. Sorting by overall desirability gives us tuning parameter values (&lt;code>mixture&lt;/code> and &lt;code>penalty&lt;/code>) that are best for this combination of criteria.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">classification_results&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">roc_d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">d_max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">roc_auc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">high&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">low&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.8&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">loss_d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">d_min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mn_log_loss&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">use_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">feat_d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">d_min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num_features&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">low&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">high&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">scale&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">overall&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">d_overall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">ends_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;_d&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">slice_max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">overall&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 5 × 9
## mixture penalty mn_log_loss roc_auc num_features roc_d loss_d feat_d overall
## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 1 0.00924 0.200 0.859 15 0.295 0.815 0.722 0.558
## 2 0.667 0.0117 0.199 0.862 18 0.311 0.827 0.672 0.557
## 3 0.667 0.0149 0.201 0.858 14 0.291 0.802 0.740 0.557
## 4 0.889 0.00924 0.199 0.861 18 0.305 0.825 0.672 0.553
## 5 0.889 0.0117 0.201 0.857 14 0.285 0.801 0.740 0.553
&lt;/code>&lt;/pre>&lt;p>That&amp;rsquo;s it! That&amp;rsquo;s the package.&lt;/p></description></item><item><title>Q1 2023 tidymodels digest</title><link>https://www.tidyverse.org/blog/2023/04/tidymodels-2023-q1/</link><pubDate>Fri, 28 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/04/tidymodels-2023-q1/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;p>Since the beginning of 2021, we have been publishing
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">quarterly updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused, like these posts from the past couple of months:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2023/04/tuning-delights/" target="_blank" rel="noopener">Tuning hyperparameters with tidymodels is a delight&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2023/04/censored-0-2-0/" target="_blank" rel="noopener">censored 0.2.0&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.simonpcouch.com/blog/speedups-2023/" target="_blank" rel="noopener">The tidymodels is getting a whole lot faster&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2022/12/tidymodels-2022-q4/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been CRAN releases of 24 tidymodels packages. Here are links to their NEWS files:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>agua
&lt;a href="https://agua.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.1.2)&lt;/a>&lt;/li>
&lt;li>baguette
&lt;a href="https://baguette.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;li>broom
&lt;a href="https://broom.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.4)&lt;/a>&lt;/li>
&lt;li>butcher
&lt;a href="https://butcher.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.2)&lt;/a>&lt;/li>
&lt;li>censored
&lt;a href="https://censored.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.2.0)&lt;/a>&lt;/li>
&lt;li>dials
&lt;a href="https://dials.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.0)&lt;/a>&lt;/li>
&lt;li>discrim
&lt;a href="https://discrim.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;li>embed
&lt;a href="https://embed.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.0)&lt;/a>&lt;/li>
&lt;li>finetune
&lt;a href="https://finetune.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.0)&lt;/a>&lt;/li>
&lt;li>hardhat
&lt;a href="https://hardhat.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.3.0)&lt;/a>&lt;/li>
&lt;li>modeldata
&lt;a href="https://modeldata.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.0)&lt;/a>&lt;/li>
&lt;li>parsnip
&lt;a href="https://parsnip.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.0)&lt;/a>&lt;/li>
&lt;li>recipes
&lt;a href="https://recipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.6)&lt;/a>&lt;/li>
&lt;li>rules
&lt;a href="https://rules.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.2)&lt;/a>&lt;/li>
&lt;li>spatialsample
&lt;a href="https://spatialsample.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.0)&lt;/a>&lt;/li>
&lt;li>stacks
&lt;a href="https://stacks.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.2)&lt;/a>&lt;/li>
&lt;li>textrecipes
&lt;a href="https://textrecipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.3)&lt;/a>&lt;/li>
&lt;li>themis
&lt;a href="https://themis.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;li>tidyclust
&lt;a href="https://tidyclust.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.1.2)&lt;/a>&lt;/li>
&lt;li>tidypredict
&lt;a href="https://tidypredict.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.5)&lt;/a>&lt;/li>
&lt;li>tune
&lt;a href="https://tune.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.1)&lt;/a>&lt;/li>
&lt;li>workflows
&lt;a href="https://workflows.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.3)&lt;/a>&lt;/li>
&lt;li>workflowsets
&lt;a href="https://workflowsets.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;li>yardstick
&lt;a href="https://yardstick.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.0)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;ll highlight a few especially notable changes below: more informative errors and faster code. First, loading the collection of packages:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://embed.tidymodels.org'>embed&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ames"&lt;/span>, package &lt;span class='o'>=&lt;/span> &lt;span class='s'>"modeldata"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="more-informative-errors">More informative errors
&lt;a href="#more-informative-errors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In the last few months we have been focused on refining error messages so that they are easier for the users to pinpoint what went wrong and where. Since the modeling pipeline can be quite complicated, getting uninformative errors is a no-go.&lt;/p>
&lt;p>Across the tidymodels, error messages will now indicate the user-facing function that caused the error rather than the internal function that it came from.&lt;/p>
&lt;p>From dials, an error that looked like&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">degree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">range&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1L&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">5L&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `new_quant_param()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! Since `type = &amp;#39;double&amp;#39;`, please use that data type for the range.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now says that the error came from &lt;code>degree()&lt;/code> rather than &lt;code>new_quant_param()&lt;/code>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>degree&lt;/span>&lt;span class='o'>(&lt;/span>range &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1L&lt;/span>, &lt;span class='m'>5L&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `degree()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Since `type = 'double'`, please use that data type for the range.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The same thing can be seen with the yardstick metrics&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mtcars&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">accuracy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">am&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `dplyr::summarise()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ In argument: `.estimate = metric_fn(truth = vs, estimate = am, na_rm =&lt;/span>
&lt;span class="c1">#&amp;gt; na_rm)`.&lt;/span>
&lt;span class="c1">#&amp;gt; Caused by error in `validate_class()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! `truth` should be a factor but a numeric was supplied.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>which now errors much more informatively&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>mtcars&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>accuracy&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>vs&lt;/span>, &lt;span class='nv'>am&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `accuracy()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> `truth` should be a factor, not a `numeric`.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Lastly, one of the biggest improvements came in recipes, which now shows which step caused the error instead of saying it happened in
&lt;a href="https://recipes.tidymodels.org/reference/prep.html" target="_blank" rel="noopener">&lt;code>prep()&lt;/code>&lt;/a> or
&lt;a href="https://recipes.tidymodels.org/reference/bake.html" target="_blank" rel="noopener">&lt;code>bake()&lt;/code>&lt;/a>. This is a huge improvement since preprocessing pipelines which often string together many preprocessing steps.&lt;/p>
&lt;p>Before&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ames&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">step_novel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Neighborhood&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new_level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Gilbert&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&amp;gt;&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `prep()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! Columns already contain the new level: Neighborhood&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span>&lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_novel.html'>step_novel&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Neighborhood&lt;/span>, new_level &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Gilbert"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `step_novel()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Caused by error in `prep()` at recipes/R/recipe.R:437:8:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Columns already contain the new level: Neighborhood&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Especially when calls to recipes functions are deeply nested inside the call stack, like in &lt;code>fit_resamples()&lt;/code> or &lt;code>tune_grid()&lt;/code>, these changes make a big difference.&lt;/p>
&lt;h2 id="things-are-getting-faster">Things are getting faster
&lt;a href="#things-are-getting-faster">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As we have written about in
&lt;a href="https://www.simonpcouch.com/blog/speedups-2023/" target="_blank" rel="noopener">The tidymodels is getting a whole lot faster&lt;/a> and
&lt;a href="https://www.tidyverse.org/blog/2023/04/performant-packages/" target="_blank" rel="noopener">Writing performant code with tidy tools&lt;/a>, we have been working on tightening up the performance of the tidymodels code. These changes are mostly related to the infrastructure code, meaning that the speedup will bring you to closer underlying implementations.&lt;/p>
&lt;p>A different kind of speedup is found with the addition of the
&lt;a href="https://embed.tidymodels.org/reference/step_pca_truncated.html" target="_blank" rel="noopener">step_pca_truncated()&lt;/a> step added in the embed package.&lt;/p>
&lt;p>
&lt;a href="https://en.wikipedia.org/wiki/Principal_component_analysis" target="_blank" rel="noopener">Principal Component Analysis&lt;/a> is a really powerful and fast method for dimensionality reduction of large data sets. However, for data with many columns, it can be computationally expensive to calculate all the principal components.
&lt;a href="https://embed.tidymodels.org/reference/step_pca_truncated.html" target="_blank" rel="noopener">&lt;code>step_pca_truncated()&lt;/code>&lt;/a> works in much the same way as
&lt;a href="https://recipes.tidymodels.org/reference/step_pca.html" target="_blank" rel="noopener">&lt;code>step_pca()&lt;/code>&lt;/a> but it only calculates the number of components it needs&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>pca_normal&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_dummy.html'>step_dummy&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_nominal_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_pca.html'>step_pca&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_numeric_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, num_comp &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>pca_truncated&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/step_dummy.html'>step_dummy&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_nominal_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://embed.tidymodels.org/reference/step_pca_truncated.html'>step_pca_truncated&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/has_role.html'>all_numeric_predictors&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, num_comp &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>tictoc&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/tictoc/man/tic.html'>tic&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>pca_normal&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2,930 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Sale_Price PC1 PC2 PC3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='text-decoration: underline;'>215&lt;/span>000 -&lt;span style='color: #BB0000; text-decoration: underline;'>31&lt;/span>&lt;span style='color: #BB0000;'>793.&lt;/span> &lt;span style='text-decoration: underline;'>4&lt;/span>151. -&lt;span style='color: #BB0000;'>197.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='text-decoration: underline;'>105&lt;/span>000 -&lt;span style='color: #BB0000; text-decoration: underline;'>12&lt;/span>&lt;span style='color: #BB0000;'>198.&lt;/span> -&lt;span style='color: #BB0000;'>611.&lt;/span> -&lt;span style='color: #BB0000;'>524.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='text-decoration: underline;'>172&lt;/span>000 -&lt;span style='color: #BB0000; text-decoration: underline;'>14&lt;/span>&lt;span style='color: #BB0000;'>911.&lt;/span> -&lt;span style='color: #BB0000;'>265.&lt;/span> &lt;span style='text-decoration: underline;'>7&lt;/span>568.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='text-decoration: underline;'>244&lt;/span>000 -&lt;span style='color: #BB0000; text-decoration: underline;'>12&lt;/span>&lt;span style='color: #BB0000;'>072.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>1&lt;/span>&lt;span style='color: #BB0000;'>813.&lt;/span> 918.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='text-decoration: underline;'>189&lt;/span>900 -&lt;span style='color: #BB0000; text-decoration: underline;'>14&lt;/span>&lt;span style='color: #BB0000;'>418.&lt;/span> -&lt;span style='color: #BB0000;'>345.&lt;/span> -&lt;span style='color: #BB0000;'>302.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='text-decoration: underline;'>195&lt;/span>500 -&lt;span style='color: #BB0000; text-decoration: underline;'>10&lt;/span>&lt;span style='color: #BB0000;'>704.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>1&lt;/span>&lt;span style='color: #BB0000;'>367.&lt;/span> -&lt;span style='color: #BB0000;'>204.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='text-decoration: underline;'>213&lt;/span>500 -&lt;span style='color: #BB0000; text-decoration: underline;'>5&lt;/span>&lt;span style='color: #BB0000;'>858.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>2&lt;/span>&lt;span style='color: #BB0000;'>805.&lt;/span> 114.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='text-decoration: underline;'>191&lt;/span>500 -&lt;span style='color: #BB0000; text-decoration: underline;'>5&lt;/span>&lt;span style='color: #BB0000;'>932.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>2&lt;/span>&lt;span style='color: #BB0000;'>762.&lt;/span> 131.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='text-decoration: underline;'>236&lt;/span>500 -&lt;span style='color: #BB0000; text-decoration: underline;'>6&lt;/span>&lt;span style='color: #BB0000;'>368.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>2&lt;/span>&lt;span style='color: #BB0000;'>862.&lt;/span> 325.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='text-decoration: underline;'>189&lt;/span>000 -&lt;span style='color: #BB0000; text-decoration: underline;'>8&lt;/span>&lt;span style='color: #BB0000;'>368.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>2&lt;/span>&lt;span style='color: #BB0000;'>219.&lt;/span> 126.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 2,920 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nf'>tictoc&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/tictoc/man/tic.html'>toc&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 0.782 sec elapsed&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>tictoc&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/tictoc/man/tic.html'>tic&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>pca_truncated&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2,930 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Sale_Price PC1 PC2 PC3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='text-decoration: underline;'>215&lt;/span>000 -&lt;span style='color: #BB0000; text-decoration: underline;'>31&lt;/span>&lt;span style='color: #BB0000;'>793.&lt;/span> &lt;span style='text-decoration: underline;'>4&lt;/span>151. -&lt;span style='color: #BB0000;'>197.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='text-decoration: underline;'>105&lt;/span>000 -&lt;span style='color: #BB0000; text-decoration: underline;'>12&lt;/span>&lt;span style='color: #BB0000;'>198.&lt;/span> -&lt;span style='color: #BB0000;'>611.&lt;/span> -&lt;span style='color: #BB0000;'>524.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='text-decoration: underline;'>172&lt;/span>000 -&lt;span style='color: #BB0000; text-decoration: underline;'>14&lt;/span>&lt;span style='color: #BB0000;'>911.&lt;/span> -&lt;span style='color: #BB0000;'>265.&lt;/span> &lt;span style='text-decoration: underline;'>7&lt;/span>568.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='text-decoration: underline;'>244&lt;/span>000 -&lt;span style='color: #BB0000; text-decoration: underline;'>12&lt;/span>&lt;span style='color: #BB0000;'>072.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>1&lt;/span>&lt;span style='color: #BB0000;'>813.&lt;/span> 918.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='text-decoration: underline;'>189&lt;/span>900 -&lt;span style='color: #BB0000; text-decoration: underline;'>14&lt;/span>&lt;span style='color: #BB0000;'>418.&lt;/span> -&lt;span style='color: #BB0000;'>345.&lt;/span> -&lt;span style='color: #BB0000;'>302.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='text-decoration: underline;'>195&lt;/span>500 -&lt;span style='color: #BB0000; text-decoration: underline;'>10&lt;/span>&lt;span style='color: #BB0000;'>704.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>1&lt;/span>&lt;span style='color: #BB0000;'>367.&lt;/span> -&lt;span style='color: #BB0000;'>204.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='text-decoration: underline;'>213&lt;/span>500 -&lt;span style='color: #BB0000; text-decoration: underline;'>5&lt;/span>&lt;span style='color: #BB0000;'>858.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>2&lt;/span>&lt;span style='color: #BB0000;'>805.&lt;/span> 114.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='text-decoration: underline;'>191&lt;/span>500 -&lt;span style='color: #BB0000; text-decoration: underline;'>5&lt;/span>&lt;span style='color: #BB0000;'>932.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>2&lt;/span>&lt;span style='color: #BB0000;'>762.&lt;/span> 131.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='text-decoration: underline;'>236&lt;/span>500 -&lt;span style='color: #BB0000; text-decoration: underline;'>6&lt;/span>&lt;span style='color: #BB0000;'>368.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>2&lt;/span>&lt;span style='color: #BB0000;'>862.&lt;/span> 325.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='text-decoration: underline;'>189&lt;/span>000 -&lt;span style='color: #BB0000; text-decoration: underline;'>8&lt;/span>&lt;span style='color: #BB0000;'>368.&lt;/span> -&lt;span style='color: #BB0000; text-decoration: underline;'>2&lt;/span>&lt;span style='color: #BB0000;'>219.&lt;/span> 126.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 2,920 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nf'>tictoc&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/tictoc/man/tic.html'>toc&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 0.162 sec elapsed&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The speedup will be orders of magnitude larger for very wide data.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank those in the community that contributed to tidymodels in the last quarter:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>agua:
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>baguette:
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>broom:
&lt;a href="https://github.com/benwhalley" target="_blank" rel="noopener">@benwhalley&lt;/a>,
&lt;a href="https://github.com/dgrtwo" target="_blank" rel="noopener">@dgrtwo&lt;/a>,
&lt;a href="https://github.com/egosv" target="_blank" rel="noopener">@egosv&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/JorisChau" target="_blank" rel="noopener">@JorisChau&lt;/a>,
&lt;a href="https://github.com/mccarthy-m-g" target="_blank" rel="noopener">@mccarthy-m-g&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/paige-cho" target="_blank" rel="noopener">@paige-cho&lt;/a>,
&lt;a href="https://github.com/PoGibas" target="_blank" rel="noopener">@PoGibas&lt;/a>,
&lt;a href="https://github.com/rsbivand" target="_blank" rel="noopener">@rsbivand&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/ste-tuf" target="_blank" rel="noopener">@ste-tuf&lt;/a>, and
&lt;a href="https://github.com/victor-vscn" target="_blank" rel="noopener">@victor-vscn&lt;/a>.&lt;/li>
&lt;li>butcher:
&lt;a href="https://github.com/ashbythorpe" target="_blank" rel="noopener">@ashbythorpe&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/rkb965" target="_blank" rel="noopener">@rkb965&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>censored:
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>, and
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>.&lt;/li>
&lt;li>dials:
&lt;a href="https://github.com/amin0511ss" target="_blank" rel="noopener">@amin0511ss&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>discrim:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>, and
&lt;a href="https://github.com/tomwagstaff-opml" target="_blank" rel="noopener">@tomwagstaff-opml&lt;/a>.&lt;/li>
&lt;li>embed:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jackobenco016" target="_blank" rel="noopener">@jackobenco016&lt;/a>, and
&lt;a href="https://github.com/skasowitz" target="_blank" rel="noopener">@skasowitz&lt;/a>.&lt;/li>
&lt;li>finetune:
&lt;a href="https://github.com/Freestyleyang" target="_blank" rel="noopener">@Freestyleyang&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>hardhat:
&lt;a href="https://github.com/cregouby" target="_blank" rel="noopener">@cregouby&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/frank113" target="_blank" rel="noopener">@frank113&lt;/a>, and
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>.&lt;/li>
&lt;li>modeldata:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>parsnip:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/emmafeuer" target="_blank" rel="noopener">@emmafeuer&lt;/a>,
&lt;a href="https://github.com/exsell-jc" target="_blank" rel="noopener">@exsell-jc&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/mariamaseng" target="_blank" rel="noopener">@mariamaseng&lt;/a>,
&lt;a href="https://github.com/SHo-JANG" target="_blank" rel="noopener">@SHo-JANG&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/Tripartio" target="_blank" rel="noopener">@Tripartio&lt;/a>.&lt;/li>
&lt;li>recipes:
&lt;a href="https://github.com/AshesITR" target="_blank" rel="noopener">@AshesITR&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jjcurtin" target="_blank" rel="noopener">@jjcurtin&lt;/a>,
&lt;a href="https://github.com/lang-benjamin" target="_blank" rel="noopener">@lang-benjamin&lt;/a>,
&lt;a href="https://github.com/lbui30" target="_blank" rel="noopener">@lbui30&lt;/a>,
&lt;a href="https://github.com/PeterKoffeldt" target="_blank" rel="noopener">@PeterKoffeldt&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/StevenWallaert" target="_blank" rel="noopener">@StevenWallaert&lt;/a>,
&lt;a href="https://github.com/tellyshia" target="_blank" rel="noopener">@tellyshia&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/ttrodrigz" target="_blank" rel="noopener">@ttrodrigz&lt;/a>, and
&lt;a href="https://github.com/zecojls" target="_blank" rel="noopener">@zecojls&lt;/a>.&lt;/li>
&lt;li>rules:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>spatialsample:
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>, and
&lt;a href="https://github.com/RaymondBalise" target="_blank" rel="noopener">@RaymondBalise&lt;/a>.&lt;/li>
&lt;li>stacks:
&lt;a href="https://github.com/amin0511ss" target="_blank" rel="noopener">@amin0511ss&lt;/a>,
&lt;a href="https://github.com/gundalav" target="_blank" rel="noopener">@gundalav&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/pbulsink" target="_blank" rel="noopener">@pbulsink&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>textrecipes:
&lt;a href="https://github.com/apsteinmetz" target="_blank" rel="noopener">@apsteinmetz&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/gary-mu" target="_blank" rel="noopener">@gary-mu&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>.&lt;/li>
&lt;li>themis:
&lt;a href="https://github.com/carlganz" target="_blank" rel="noopener">@carlganz&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>,
&lt;a href="https://github.com/rmurphy49" target="_blank" rel="noopener">@rmurphy49&lt;/a>, and
&lt;a href="https://github.com/rowanjh" target="_blank" rel="noopener">@rowanjh&lt;/a>.&lt;/li>
&lt;li>tidyclust:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/hsbadr" target="_blank" rel="noopener">@hsbadr&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>tidypredict:
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>, and
&lt;a href="https://github.com/sdcharle" target="_blank" rel="noopener">@sdcharle&lt;/a>.&lt;/li>
&lt;li>tune:
&lt;a href="https://github.com/BenoitLondon" target="_blank" rel="noopener">@BenoitLondon&lt;/a>,
&lt;a href="https://github.com/cphaarmeyer" target="_blank" rel="noopener">@cphaarmeyer&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jthomasmock" target="_blank" rel="noopener">@jthomasmock&lt;/a>,
&lt;a href="https://github.com/mrjujas" target="_blank" rel="noopener">@mrjujas&lt;/a>,
&lt;a href="https://github.com/MxNl" target="_blank" rel="noopener">@MxNl&lt;/a>,
&lt;a href="https://github.com/nabsiddiqui" target="_blank" rel="noopener">@nabsiddiqui&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/SHo-JANG" target="_blank" rel="noopener">@SHo-JANG&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/walrossker" target="_blank" rel="noopener">@walrossker&lt;/a>, and
&lt;a href="https://github.com/yusuftengriverdi" target="_blank" rel="noopener">@yusuftengriverdi&lt;/a>.&lt;/li>
&lt;li>workflows:
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>workflowsets:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/gsimchoni" target="_blank" rel="noopener">@gsimchoni&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>yardstick:
&lt;a href="https://github.com/77makr" target="_blank" rel="noopener">@77makr&lt;/a>,
&lt;a href="https://github.com/burch-cm" target="_blank" rel="noopener">@burch-cm&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/idavydov" target="_blank" rel="noopener">@idavydov&lt;/a>,
&lt;a href="https://github.com/kadyb" target="_blank" rel="noopener">@kadyb&lt;/a>,
&lt;a href="https://github.com/mawardivaz" target="_blank" rel="noopener">@mawardivaz&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/moloscripts" target="_blank" rel="noopener">@moloscripts&lt;/a>,
&lt;a href="https://github.com/nyambea" target="_blank" rel="noopener">@nyambea&lt;/a>,
&lt;a href="https://github.com/SHo-JANG" target="_blank" rel="noopener">@SHo-JANG&lt;/a>,
&lt;a href="https://github.com/simdadim" target="_blank" rel="noopener">@simdadim&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;re grateful for all of the tidymodels community, from observers to users to contributors. Happy modeling!&lt;/p></description></item><item><title>Tuning hyperparameters with tidymodels is a delight</title><link>https://www.tidyverse.org/blog/2023/04/tuning-delights/</link><pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/04/tuning-delights/</guid><description>&lt;p>The tidymodels team recently released new versions of the tune, finetune, and workflowsets packages, and we&amp;rsquo;re super stoked about it! Each of these three packages facilitates tuning hyperparameters in tidymodels, and their new releases work to make the experience of hyperparameter tuning more joyful.&lt;/p>
&lt;p>You can install these releases from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tune"&lt;/span>, &lt;span class='s'>"workflowsets"&lt;/span>, &lt;span class='s'>"finetune"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will highlight some of new changes in these packages that we&amp;rsquo;re most excited about.&lt;/p>
&lt;p>You can see the full lists of changes in the release notes for each package:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://github.com/tidymodels/tune/releases/tag/v1.1.0" target="_blank" rel="noopener">tune v1.1.0&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/workflowsets/releases/tag/v1.0.1" target="_blank" rel="noopener">workflowsets v1.0.1&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/finetune/releases/tag/v1.1.0" target="_blank" rel="noopener">finetune v1.1.0&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/finetune'>finetune&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="a-shorthand-for-fitting-the-optimal-model">A shorthand for fitting the optimal model
&lt;a href="#a-shorthand-for-fitting-the-optimal-model">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In tidymodels, the result of tuning a set of hyperparameters is a data structure describing the candidate models, their predictions, and the performance metrics associated with those predictions. For example, tuning the number of &lt;code>neighbors&lt;/code> in a &lt;code>nearest_neighbors()&lt;/code> model over a regular grid:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># tune the `neighbors` hyperparameter&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>knn_model_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>nearest_neighbor&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>, neighbors &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>tuning_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/tune_grid.html'>tune_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>knn_model_spec&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>, &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> control &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/control_grid.html'>control_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>save_workflow &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># check out the resulting object&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>tuning_res&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Tuning results&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Bootstrap sampling &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; splits id .metrics .notes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap1 &lt;span style='color: #555555;'>&amp;lt;tibble [20 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/12]&amp;gt;&lt;/span> Bootstrap2 &lt;span style='color: #555555;'>&amp;lt;tibble [20 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap3 &lt;span style='color: #555555;'>&amp;lt;tibble [20 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/10]&amp;gt;&lt;/span> Bootstrap4 &lt;span style='color: #555555;'>&amp;lt;tibble [20 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/12]&amp;gt;&lt;/span> Bootstrap5 &lt;span style='color: #555555;'>&amp;lt;tibble [20 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># examine proposed hyperparameters and associated metrics&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/collect_predictions.html'>collect_metrics&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tuning_res&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 20 × 7&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; neighbors .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 2 rmse standard 3.19 5 0.208 Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 2 rsq standard 0.664 5 0.086&lt;span style='text-decoration: underline;'>1&lt;/span> Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 3 rmse standard 3.13 5 0.266 Preprocessor1_Model02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 3 rsq standard 0.678 5 0.086&lt;span style='text-decoration: underline;'>8&lt;/span> Preprocessor1_Model02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 4 rmse standard 3.11 5 0.292 Preprocessor1_Model03&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 4 rsq standard 0.684 5 0.085&lt;span style='text-decoration: underline;'>1&lt;/span> Preprocessor1_Model03&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 5 rmse standard 3.10 5 0.287 Preprocessor1_Model04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 5 rsq standard 0.686 5 0.083&lt;span style='text-decoration: underline;'>9&lt;/span> Preprocessor1_Model04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 8 rmse standard 3.08 5 0.263 Preprocessor1_Model05&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 8 rsq standard 0.689 5 0.084&lt;span style='text-decoration: underline;'>3&lt;/span> Preprocessor1_Model05&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 9 rmse standard 3.07 5 0.256 Preprocessor1_Model06&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 9 rsq standard 0.691 5 0.084&lt;span style='text-decoration: underline;'>5&lt;/span> Preprocessor1_Model06&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>13&lt;/span> 10 rmse standard 3.06 5 0.247 Preprocessor1_Model07&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>14&lt;/span> 10 rsq standard 0.693 5 0.083&lt;span style='text-decoration: underline;'>7&lt;/span> Preprocessor1_Model07&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>15&lt;/span> 11 rmse standard 3.05 5 0.241 Preprocessor1_Model08&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>16&lt;/span> 11 rsq standard 0.696 5 0.083&lt;span style='text-decoration: underline;'>3&lt;/span> Preprocessor1_Model08&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>17&lt;/span> 13 rmse standard 3.03 5 0.236 Preprocessor1_Model09&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>18&lt;/span> 13 rsq standard 0.701 5 0.082&lt;span style='text-decoration: underline;'>0&lt;/span> Preprocessor1_Model09&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>19&lt;/span> 14 rmse standard 3.02 5 0.235 Preprocessor1_Model10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>20&lt;/span> 14 rsq standard 0.704 5 0.080&lt;span style='text-decoration: underline;'>8&lt;/span> Preprocessor1_Model10&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Given these tuning results, the next steps are to choose the &amp;ldquo;best&amp;rdquo; hyperparameters, assign those hyperparameters to the model, and fit the finalized model on the training set. Previously in tidymodels, this has felt like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># choose a method to define "best" and extract the resulting parameters&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>best_param&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/show_best.html'>select_best&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tuning_res&lt;/span>, &lt;span class='s'>"rmse"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># assign those parameters to model&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>knn_model_final&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/finalize_model.html'>finalize_model&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>knn_model_spec&lt;/span>, &lt;span class='nv'>best_param&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># fit the finalized model to the training set&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>knn_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>knn_model_final&lt;/span>, &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Voilà! &lt;code>knn_fit&lt;/code> is a properly resampled model that is ready to
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> on new data:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>knn_fit&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='o'>]&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 22.0&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The newest release of tune introduced a shorthand interface for going from tuning results to final fit called
&lt;a href="https://tune.tidymodels.org/reference/fit_best.html" target="_blank" rel="noopener">&lt;code>fit_best()&lt;/code>&lt;/a>. The function wraps each of those three functions with sensible defaults to abbreviate the process described above.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>knn_fit_2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/fit_best.html'>fit_best&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tuning_res&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>knn_fit_2&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='o'>]&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 22.0&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This function is closely related to the
&lt;a href="https://tune.tidymodels.org/reference/last_fit.html" target="_blank" rel="noopener">&lt;code>last_fit()&lt;/code>&lt;/a> function. They both give you access to a workflow fitted on the training data but are situated somewhat differently in the modeling workflow.
&lt;a href="https://tune.tidymodels.org/reference/fit_best.html" target="_blank" rel="noopener">&lt;code>fit_best()&lt;/code>&lt;/a> picks up after a tuning function like
&lt;a href="https://tune.tidymodels.org/reference/tune_grid.html" target="_blank" rel="noopener">&lt;code>tune_grid()&lt;/code>&lt;/a> to take you from tuning results to fitted workflow, ready for you to predict and assess further.
&lt;a href="https://tune.tidymodels.org/reference/last_fit.html" target="_blank" rel="noopener">&lt;code>last_fit()&lt;/code>&lt;/a> assumes you have made your choice of hyperparameters and finalized your workflow to then take you from finalized workflow to fitted workflow and further to performance assessment on the test data. While
&lt;a href="https://tune.tidymodels.org/reference/fit_best.html" target="_blank" rel="noopener">&lt;code>fit_best()&lt;/code>&lt;/a> gives a fitted workflow,
&lt;a href="https://tune.tidymodels.org/reference/last_fit.html" target="_blank" rel="noopener">&lt;code>last_fit()&lt;/code>&lt;/a> gives you the performance results. If you want the fitted workflow, you can extract it from the result of
&lt;a href="https://tune.tidymodels.org/reference/last_fit.html" target="_blank" rel="noopener">&lt;code>last_fit()&lt;/code>&lt;/a> via
&lt;a href="https://hardhat.tidymodels.org/reference/hardhat-extract.html" target="_blank" rel="noopener">&lt;code>extract_workflow()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>The newest release of the workflowsets package also includes a
&lt;a href="https://tune.tidymodels.org/reference/fit_best.html" target="_blank" rel="noopener">&lt;code>fit_best()&lt;/code>&lt;/a> method for workflow set objects. Given a set of tuning results, that method will sift through all of the possible models to find and fit the optimal model configuration.&lt;/p>
&lt;h2 id="interactive-issue-logging">Interactive issue logging
&lt;a href="#interactive-issue-logging">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Imagine, in the previous example, we made some subtle error in specifying the tuning process. For example, passing a function to &lt;code>extract&lt;/code> elements of the proposed workflows that injects some warnings and errors into the tuning process:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>raise_concerns&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/warning.html'>warning&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Ummm, wait. :o"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/stop.html'>stop&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Eep! Nooo!"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>tuning_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/tune_grid.html'>tune_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>knn_model_spec&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>, &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> control &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/control_grid.html'>control_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>extract &lt;span class='o'>=&lt;/span> &lt;span class='nv'>raise_concerns&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Warnings and errors can come up in all sorts of places while tuning hyperparameters. Often, with obvious issues, we can raise errors early on and halt the tuning process, but with more subtle concerns, we don&amp;rsquo;t want to be too restrictive; it&amp;rsquo;s sometimes better to defer to the underlying modeling packages to decide what&amp;rsquo;s a dire issue versus something that can be worked around.&lt;/p>
&lt;p>In the past, we&amp;rsquo;ve raised warnings and issues as they occur, printing context on the issue to the console before logging the issue in the tuning result. In the above example, this would look like:&lt;/p>
&lt;pre>&lt;code>! Bootstrap1: preprocessor 1/1, model 1/1 (extracts): Ummm, wait. :o
x Bootstrap1: preprocessor 1/1, model 1/1 (extracts): Error in extractor(object): Eep! Nooo!
! Bootstrap2: preprocessor 1/1, model 1/1 (extracts): Ummm, wait. :o
x Bootstrap2: preprocessor 1/1, model 1/1 (extracts): Error in extractor(object): Eep! Nooo!
! Bootstrap3: preprocessor 1/1, model 1/1 (extracts): Ummm, wait. :o
x Bootstrap3: preprocessor 1/1, model 1/1 (extracts): Error in extractor(object): Eep! Nooo!
! Bootstrap4: preprocessor 1/1, model 1/1 (extracts): Ummm, wait. :o
x Bootstrap4: preprocessor 1/1, model 1/1 (extracts): Error in extractor(object): Eep! Nooo!
! Bootstrap5: preprocessor 1/1, model 1/1 (extracts): Ummm, wait. :o
x Bootstrap5: preprocessor 1/1, model 1/1 (extracts): Error in extractor(object): Eep! Nooo!
&lt;/code>&lt;/pre>
&lt;p>The above messages are super descriptive about where issues occur&amp;mdash;they note in which resample, from which proposed modeling workflow, and in which part of the fitting process the issues occurred in. At the same time, they are quite repetitive; if there&amp;rsquo;s an issue during hyperparameter tuning, it probably occurs in every resample, always in the same place. If, instead, we were evaluating this model against 1,000 resamples, or there were more than just two issues, this output could get very overwhelming very quickly.&lt;/p>
&lt;p>The new releases of our tuning packages include tools to determine which tuning issues are unique, and for each unique issue, only print out the message once while maintaining a dynamic count of how many times the issue occurred. With the new tune release, the same output would look like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;span>&lt;span class='c'>#&amp;gt; → &lt;span style='color: #BBBB00; font-weight: bold;'>A&lt;/span> | &lt;span style='color: #BBBB00;'>warning&lt;/span>: Ummm, wait. :o&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; → &lt;span style='color: #BB0000; font-weight: bold;'>B&lt;/span> | &lt;span style='color: #BB0000;'>error&lt;/span>: Eep! Nooo!&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; There were issues with some computations &lt;span style='color: #BBBB00; font-weight: bold;'>A&lt;/span>: x5 &lt;span style='color: #BB0000; font-weight: bold;'>B&lt;/span>: x5&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This interface is hopefully less overwhelming for users. When the messages attached to these issues aren&amp;rsquo;t enough to debug the issue, the complete set of information about the issues lives inside of the tuning result object, and can be retrieved with &lt;code>collect_notes(tuning_res)&lt;/code>. To turn off the interactive logging, set the &lt;code>verbose&lt;/code> control option to &lt;code>TRUE&lt;/code>.&lt;/p>
&lt;h2 id="speedups">Speedups
&lt;a href="#speedups">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Each of these three releases, as well as releases of core tidymodels packages they depend on like parsnip, recipes, and hardhat, include a plethora of changes meant to optimize computational performance. Especially for modeling practitioners who work with many resamples and/or small data sets, our modeling workflows will feel a whole lot snappier:&lt;/p>
&lt;p>&lt;img src="https://simonpcouch.com/blog/speedups-2023/index_files/figure-html/unnamed-chunk-10-1.png" alt="A ggplot2 line graph plotting relative change in time to evaluate model fits with the tidymodels packages. Fits on datasets with 100 training rows are 2 to 3 times faster, while fits on datasets with 100,000 or more rows take about the same amount of time as they used to.">&lt;/p>
&lt;p>With 100-row training data sets, the time to resample models with tune and friends has been at least halved. These releases are the first iteration of a set of changes to reduce the evaluation time of tidymodels code, and users can expect further optimizations in coming releases! See
&lt;a href="https://www.simonpcouch.com/blog/speedups-2023/" target="_blank" rel="noopener">this post on my blog&lt;/a> for more information about those speedups.&lt;/p>
&lt;h2 id="bonus-points">Bonus points
&lt;a href="#bonus-points">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Although they&amp;rsquo;re smaller in scope, we wanted to highlight two additional developments in tuning hyperparameters with tidymodels.&lt;/p>
&lt;h3 id="workflow-set-support-for-tidyclust">Workflow set support for tidyclust
&lt;a href="#workflow-set-support-for-tidyclust">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The recent tidymodels package
&lt;a href="github.com/tidymodels/tidyclust">tidyclust&lt;/a> introduced support for fitting and tuning clustering models in tidymodels. That package&amp;rsquo;s function
&lt;a href="https://tidyclust.tidymodels.org/reference/tune_cluster.html" target="_blank" rel="noopener">&lt;code>tune_cluster()&lt;/code>&lt;/a> is now an option for tuning in
&lt;a href="https://workflowsets.tidymodels.org/reference/workflow_map.html" target="_blank" rel="noopener">&lt;code>workflow_map()&lt;/code>&lt;/a>, meaning that users can fit sets of clustering models and preprocessors using workflow sets. These changes further integrate the tidyclust package into tidymodels framework.&lt;/p>
&lt;h3 id="refined-retrieval-of-intermediate-results">Refined retrieval of intermediate results
&lt;a href="#refined-retrieval-of-intermediate-results">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The &lt;code>.Last.tune.result&lt;/code> helper stores the most recent tuning result in the object &lt;code>.Last.tune.result&lt;/code> as a fail-safe in cases of interrupted tuning, uncaught tuning errors, and simply forgetting to assign tuning results to an object.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># be a silly goose and forget to assign results&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/tune_grid.html'>tune_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>knn_model_spec&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>, &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> control &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/control_grid.html'>control_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>save_workflow &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Tuning results&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Bootstrap sampling &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; splits id .metrics .notes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap1 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/14]&amp;gt;&lt;/span> Bootstrap2 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/13]&amp;gt;&lt;/span> Bootstrap3 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/12]&amp;gt;&lt;/span> Bootstrap4 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap5 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># all is not lost!&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>.Last.tune.result&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Tuning results&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Bootstrap sampling &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; splits id .metrics .notes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap1 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/14]&amp;gt;&lt;/span> Bootstrap2 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/13]&amp;gt;&lt;/span> Bootstrap3 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/12]&amp;gt;&lt;/span> Bootstrap4 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap5 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># assign to object after the fact&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>.Last.tune.result&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>These three releases introduce support for the &lt;code>.Last.tune.result&lt;/code> object in more settings and refine support in existing implementations.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to
&lt;a href="https://github.com/walrossker" target="_blank" rel="noopener">@walrossker&lt;/a>,
&lt;a href="https://github.com/Freestyleyang" target="_blank" rel="noopener">@Freestyleyang&lt;/a>, and
&lt;a href="https://github.com/Jeffrothschild" target="_blank" rel="noopener">@Jeffrothschild&lt;/a> for their contributions to these packages since their last releases.&lt;/p>
&lt;p>Happy modeling, y&amp;rsquo;all!&lt;/p></description></item><item><title>censored 0.2.0</title><link>https://www.tidyverse.org/blog/2023/04/censored-0-2-0/</link><pubDate>Wed, 19 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/04/censored-0-2-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re thrilled to announce the release of
&lt;a href="https://censored.tidymodels.org/" target="_blank" rel="noopener">censored&lt;/a> 0.2.0. censored is a parsnip extension package for survival models.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"censored"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will introduce you to a new argument name, &lt;code>eval_time&lt;/code>, and two new engines for fitting random forests and parametric survival models.&lt;/p>
&lt;p>You can see a full list of changes in the
&lt;a href="https://github.com/tidymodels/censored/releases/tag/v0.2.0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="introducing-eval_time">Introducing &lt;code>eval_time&lt;/code>
&lt;a href="#introducing-eval_time">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As we continue to add support for survival analysis across tidymodels, we have seen a need to be more explicit about which time we mean when we say &amp;ldquo;time&amp;rdquo;: event time, observed time, censoring time, time at which to predict survival probability at? The last one is a particular mouthful. We now refer to this time as &amp;ldquo;evaluation time.&amp;rdquo; In preparation for dynamic survival performance metrics which can be calculated at different evaluation time points, the argument to set these evaluation time points for
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> is now called &lt;code>eval_time&lt;/code> instead of just &lt;code>time&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>cox&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/proportional_hazards.html'>proportional_hazards&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"survival"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"censored regression"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>, &lt;span class='nv'>status&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>pred&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cox&lt;/span>, &lt;span class='nv'>lung&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>, &lt;span class='o'>]&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"survival"&lt;/span>, eval_time &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>100&lt;/span>, &lt;span class='m'>500&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>pred&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The predictions follow the tidymodels principle of one row per observation, and the nested tibble contains the predicted survival probability, &lt;code>.pred_survival&lt;/code>, as well as the corresponding evaluation time. The column for the evaluation time is now called &lt;code>.eval_time&lt;/code> instead of &lt;code>.time&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>pred&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .eval_time .pred_survival&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 100 0.910&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 500 0.422&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="new-engines">New engines
&lt;a href="#new-engines">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>censored contains engines for parametric, semi-parametric, and tree-based models. This release adds two new engines:&lt;/p>
&lt;ul>
&lt;li>the &lt;code>&amp;quot;aorsf&amp;quot;&lt;/code> engine for random forests via
&lt;a href="https://parsnip.tidymodels.org/reference/rand_forest.html" target="_blank" rel="noopener">&lt;code>rand_forest()&lt;/code>&lt;/a>&lt;/li>
&lt;li>the &lt;code>&amp;quot;flexsurvspline&amp;quot;&lt;/code> engine for parametric models via
&lt;a href="https://parsnip.tidymodels.org/reference/survival_reg.html" target="_blank" rel="noopener">&lt;code>survival_reg()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="new-aorsf-engine-for-rand_forest">New &lt;code>&amp;quot;aorsf&amp;quot;&lt;/code> engine for &lt;code>rand_forest()&lt;/code>
&lt;a href="#new-aorsf-engine-for-rand_forest">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>This engine has been contributed by
&lt;a href="https://github.com/bcjaeger" target="_blank" rel="noopener">Byron Jaeger&lt;/a> and enables users to fit oblique random survival forests with the aorsf package. What&amp;rsquo;s with the &lt;em>oblique&lt;/em> you ask?&lt;/p>
&lt;p>Oblique describes how the decision trees that form the random forest make their splits at each node. If the split is based on a single predictor, the resulting tree is called &lt;em>axis-based&lt;/em> because the split is perpendicular to the axis of the predictor. If the split is based on a linear combination of predictors, there is a lot more flexibility in how the data is split: the split does not need to be perpendicular to any of the predictor axes. Such trees are called &lt;em>oblique&lt;/em>.&lt;/p>
&lt;p>The documentation for the
&lt;a href="https://docs.ropensci.org/aorsf" target="_blank" rel="noopener">aorsf&lt;/a> package includes a nice illustration of this with the splits for an axis-based tree on the left and an oblique tree on the right:&lt;/p>
&lt;p>&lt;img src="https://docs.ropensci.org/aorsf/reference/figures/tree_axis_v_oblique.png" alt="Two scatter plots of data with two predictors, X1 and X2, and two classes, coded as pink dots and orange squares. The lefthand plot shows the splits of an axis-based decision tree which are at a right angle to the axis. The resulting partition generally separates the classes well but not perfectly. The righthand plot shows the splits of an oblique tree which achieves perfect separation on this example because it can cut across the predictor space diagnonally.">&lt;/p>
&lt;p>To fit such a model, set the engine for a random forest to &lt;code>&amp;quot;aorsf&amp;quot;&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>lung&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/na.fail.html'>na.omit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lung&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>forest&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/rand_forest.html'>rand_forest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"aorsf"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"censored regression"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>, &lt;span class='nv'>status&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>pred&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>forest&lt;/span>, &lt;span class='nv'>lung&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>, &lt;span class='o'>]&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"survival"&lt;/span>, eval_time &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>100&lt;/span>, &lt;span class='m'>500&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>pred&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .eval_time .pred_survival&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 100 0.928&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 500 0.368&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="new-flexsurvspline-engine-for-survival_reg">New &lt;code>&amp;quot;flexsurvspline&amp;quot;&lt;/code> engine for &lt;code>survival_reg()&lt;/code>
&lt;a href="#new-flexsurvspline-engine-for-survival_reg">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>This engine has been contributed by
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">Matt Warkentin&lt;/a> and enables users to fit a parametric survival model with splines via
&lt;a href="https://rdrr.io/pkg/flexsurv/man/flexsurvspline.html" target="_blank" rel="noopener">&lt;code>flexsurv::flexsurvspline()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>This model uses natural cubic splines to model a transformation of the survival function, e.g., the log cumulative hazard. This gives a lot more flexibility to a parametric model allowing us, for example, to represent more irregular hazard curves. Let&amp;rsquo;s illustrate that with a data set of survival times of breast cancer patients, based on the example from
&lt;a href="https://www.jstatsoft.org/article/view/v070i08" target="_blank" rel="noopener">Jackson (2016)&lt;/a>.&lt;/p>
&lt;p>The flexibility of the model is governed by &lt;code>k&lt;/code>, the number of knots in the spline. We set &lt;code>scale = &amp;quot;odds&amp;quot;&lt;/code> for a proportional hazards model.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>bc&lt;/span>, package &lt;span class='o'>=&lt;/span> &lt;span class='s'>"flexsurv"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>fit_splines&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/survival_reg.html'>survival_reg&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"flexsurvspline"&lt;/span>, k &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>, scale &lt;span class='o'>=&lt;/span> &lt;span class='s'>"odds"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>recyrs&lt;/span>, &lt;span class='nv'>censrec&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>group&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>bc&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>For comparison, we also fit a parametric model without splines.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>fit_gengamma&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/survival_reg.html'>survival_reg&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>dist &lt;span class='o'>=&lt;/span> &lt;span class='s'>"gengamma"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"flexsurv"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>recyrs&lt;/span>, &lt;span class='nv'>censrec&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>group&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>bc&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can predict the hazard for the three levels of the prognostic &lt;code>group&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>bc_groups&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>tibble&lt;/span>&lt;span class='o'>(&lt;/span>group &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Poor"&lt;/span>,&lt;span class='s'>"Medium"&lt;/span>,&lt;span class='s'>"Good"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>pred_splines&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>fit_splines&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>bc_groups&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"hazard"&lt;/span>, &lt;/span>
&lt;span> eval_time &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/seq.html'>seq&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.1&lt;/span>, &lt;span class='m'>8&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>model &lt;span class='o'>=&lt;/span> &lt;span class='s'>"splines"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>bind_cols&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>bc_groups&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>pred_gengamma&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>fit_gengamma&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>bc_groups&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"hazard"&lt;/span>, &lt;/span>
&lt;span> eval_time &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/seq.html'>seq&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.1&lt;/span>, &lt;span class='m'>8&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>model &lt;span class='o'>=&lt;/span> &lt;span class='s'>"gengamma"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>bind_cols&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>bc_groups&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Plotting the predictions of both models shows a lot more flexibility in the splines model.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>bind_rows&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>pred_splines&lt;/span>, &lt;span class='nv'>pred_gengamma&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>group &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/factor.html'>factor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>group&lt;/span>, levels &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Poor"&lt;/span>,&lt;span class='s'>"Medium"&lt;/span>,&lt;span class='s'>"Good"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>tidyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/unnest.html'>unnest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>cols &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>ggplot&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>geom_line&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>aes&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.eval_time&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.pred_hazard&lt;/span>, group &lt;span class='o'>=&lt;/span> &lt;span class='nv'>group&lt;/span>, col &lt;span class='o'>=&lt;/span> &lt;span class='nv'>group&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>facet_wrap&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span> &lt;span class='nv'>model&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-8-1.png" alt="Two panels side by side, showing the predicted hazard curves for the three prognostic groups from the parametric model on the left and the spline model on the right. The curves for the spline model show more wiggliness, having more flexibility to adapt to the data than the curves from the parametric model which have to follow a generalized gamma distribution." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Special thanks to Matt Warkentin and Byron Jaeger for the new engines! A big thank you to all the people who have contributed to censored since the release of v0.1.0:&lt;/p>
&lt;p>
&lt;a href="https://github.com/bcjaeger" target="_blank" rel="noopener">@bcjaeger&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/therneau" target="_blank" rel="noopener">@therneau&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p></description></item><item><title>Q4 2022 tidymodels digest</title><link>https://www.tidyverse.org/blog/2022/12/tidymodels-2022-q4/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/12/tidymodels-2022-q4/</guid><description>&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;p>Since the beginning of 2021, we have been publishing
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">quarterly updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused, like these posts from the past couple months:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/12/tidyclust-0-1-0/" target="_blank" rel="noopener">tidyclust is on CRAN&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/11/model-calibration/" target="_blank" rel="noopener">Model calibration&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/10/parsnip-checking-1-0-2/" target="_blank" rel="noopener">Improvements to model specification checking in tidymodels&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2022/10/tidymodels-2022-q3/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been CRAN releases of 9 tidymodels packages. Here are links to their NEWS files:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>bonsai
&lt;a href="https://bonsai.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.2.1)&lt;/a>&lt;/li>
&lt;li>broom
&lt;a href="https://broom.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.2)&lt;/a>&lt;/li>
&lt;li>butcher
&lt;a href="https://butcher.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.1)&lt;/a>&lt;/li>
&lt;li>dials
&lt;a href="https://dials.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.0)&lt;/a>&lt;/li>
&lt;li>parsnip
&lt;a href="https://parsnip.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.3)&lt;/a>&lt;/li>
&lt;li>recipes
&lt;a href="https://recipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.3)&lt;/a>&lt;/li>
&lt;li>rsample
&lt;a href="https://rsample.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.1)&lt;/a>&lt;/li>
&lt;li>stacks
&lt;a href="https://stacks.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;li>workflows
&lt;a href="https://workflows.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.2)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;ll highlight a few especially notable changes below: more specialized role selectors in recipes, extended support for grouped resampling in rsample, and a big speedup in parsnip. First, loading the collection of packages:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="specialized-role-selectors">Specialized role selectors
&lt;a href="#specialized-role-selectors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://recipes.tidymodels.org/" target="_blank" rel="noopener">recipes package for preprocessing&lt;/a> supports tidyselect-style variable selection, and includes some of its own selectors to support common modeling workflows.&lt;/p>
&lt;p>To illustrate, we&amp;rsquo;ll make use of a dataset &lt;code>goofy_data&lt;/code> with a number of different variable types:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/str.html'>str&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>goofy_data&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; tibble [100 × 10] (S3: tbl_df/tbl/data.frame)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ class: Factor w/ 2 levels "class_1","class_2": 1 1 2 1 2 1 1 2 2 2 ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ a : Factor w/ 7 levels "-3","-2","-1",..: 4 4 3 2 4 5 2 2 3 5 ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ b : Factor w/ 9 levels "-4","-3","-2",..: 9 5 4 3 4 7 4 2 3 6 ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ c : int [1:100] 0 0 0 0 0 0 0 -1 0 1 ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ d : int [1:100] 0 1 1 1 0 1 1 0 0 1 ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ e : int [1:100] 1 0 1 0 0 1 1 0 1 1 ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ f : num [1:100] 1.01 -1.99 2.18 2.3 -3.01 ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ g : num [1:100] -0.845 1.456 1.948 1.354 1.085 ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ h : num [1:100] -0.285 0.59 -0.938 1.447 0.424 ...&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; $ i : chr [1:100] "white" "maroon" "maroon" "maroon" ...&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Imagine a classification problem on the &lt;code>goofy_data&lt;/code> where we&amp;rsquo;d like to predict &lt;code>class&lt;/code> using the remaining variables as predictors. The selector functions allow us to perform operations on only the predictors with a certain class. For instance, centering and scaling all numeric predictors:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>class&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>goofy_data&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_normalize&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>prep&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Recipe&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Inputs:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; role #variables&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; outcome 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; predictor 9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Training data contained 100 data points and no missing data.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Operations:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Centering and scaling for c, d, e, f, g, h [trained]&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Or making dummy variables out of each of the nominal predictors:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>class&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>goofy_data&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_dummy&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_nominal_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>prep&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Recipe&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Inputs:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; role #variables&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; outcome 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; predictor 9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Training data contained 100 data points and no missing data.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Operations:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Dummy variables from a, b, i [trained]&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Operations like those above have been long-standing functionality in recipes, and are powerful tools for effective modeling. The most recent release of recipes introduced
&lt;a href="https://fosstodon.org/@emilhvitfeldt/109315135944110742" target="_blank" rel="noopener">finer-grain selectors&lt;/a> for variable types. For instance, we may want to only center and scale the &lt;em>double&lt;/em> (i.e. real-valued) predictors, excluding the integers. With the new release of recipes, we can easily do so:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>class&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>goofy_data&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_normalize&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_double_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>prep&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Recipe&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Inputs:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; role #variables&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; outcome 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; predictor 9&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Training data contained 100 data points and no missing data.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Operations:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Centering and scaling for f, g, h [trained]&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This is one of a number of new selectors:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The &lt;code>all_nominal()&lt;/code> selector now has finer-grained versions &lt;code>all_string()&lt;/code>, &lt;code>all_factor()&lt;/code>, &lt;code>all_unordered()&lt;/code>, and &lt;code>all_ordered()&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The &lt;code>all_numeric()&lt;/code> selector now has finer-grained versions &lt;code>all_double()&lt;/code>, and &lt;code>all_integer()&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New &lt;code>all_logical()&lt;/code>, &lt;code>all_date()&lt;/code>, and &lt;code>all_datetime()&lt;/code> selectors.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>All new selectors have &lt;code>*_predictors()&lt;/code> variants. You can read more about recipes 1.0.3 in the
&lt;a href="https://recipes.tidymodels.org/news/index.html#recipes-103" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="grouped-resampling">Grouped resampling
&lt;a href="#grouped-resampling">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The most recent release of rsample introduced support for stratification with grouped resampling. Consider the following toy data set on the number of melons in a household:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>melons&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4,928 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; household n_melons chops&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 114 Yes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 1 179 Yes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 1 163 Yes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 1 35 Yes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 1 93 Yes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 1 55 Yes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 1 165 Yes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 1 30 Yes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 1 140 Yes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 1 7 Yes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 4,918 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>There are 100 different households in this dataset. Each member of the household has some number of melons &lt;code>n_melons&lt;/code> in their fridge. A household, i.e., all its members, either &lt;code>chops&lt;/code> their melons or keeps them whole.&lt;/p>
&lt;p>Each of the resampling functions in rsample have a &lt;code>group_*&lt;/code>ed analogue. From rsample&amp;rsquo;s
&lt;a href="https://rsample.tidymodels.org/articles/Common_Patterns.html#grouped-resampling" target="_blank" rel="noopener">&amp;ldquo;Common Patterns&amp;rdquo; article&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Often, some observations in your data will be &amp;ldquo;more related&amp;rdquo; to each other than would be probable under random chance, for instance because they represent repeated measurements of the same subject or were all collected at a single location. In these situations, you often want to assign all related observations to either the analysis or assessment fold as a group, to avoid having assessment data that's closely related to the data used to fit a model.&lt;/p>
&lt;/blockquote>
&lt;p>For example, the grouped &lt;code>initial_split()&lt;/code> variant will allot the training and testing set mutually exclusive levels of the &lt;code>group&lt;/code> variable:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>resample&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>group_initial_split&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>melons&lt;/span>, group &lt;span class='o'>=&lt;/span> &lt;span class='nv'>household&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/unique.html'>unique&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>training&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>resample&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>household&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://rdrr.io/r/base/match.html'>%in%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/unique.html'>unique&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>testing&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>resample&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>household&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 0&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>However, note that there are only a few households that don&amp;rsquo;t chop their melons, and those households tend to have many more melons to chop!&lt;/p>
&lt;div class="highlight">
&lt;p>&lt;img src="figs/melon-plot-1.png" alt="A ggplot histogram displaying the mean number of melons per household, filled by whether the household chops their melons or not. The plot shows that there are relatively few households that don't chop their melons, but those households have many more melons to chop. Households that chop their melons have around 80 to chop, while those that don't have around 200." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>If we&amp;rsquo;re ultimately interested in modeling whether a household chops their melons, we ought to ensure that both values of &lt;code>chops&lt;/code> are well-represented in both the training and testing set. The argument &lt;code>strata = chops&lt;/code> indicates that sampling by &lt;code>household&lt;/code> will occur within values of &lt;code>chops&lt;/code>. Note that the strata must be constant in each group, so here, all members of a household need to either chop or not.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>resample_stratified&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>group_initial_split&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>melons&lt;/span>, group &lt;span class='o'>=&lt;/span> &lt;span class='nv'>household&lt;/span>, strata &lt;span class='o'>=&lt;/span> &lt;span class='nv'>chops&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that this resampling scheme still resulted in different &lt;code>household&lt;/code>s being allotted to training and testing:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sum.html'>sum&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/unique.html'>unique&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>training&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>resample_stratified&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>household&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://rdrr.io/r/base/match.html'>%in%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/unique.html'>unique&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>testing&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>resample_stratified&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>household&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 0&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Also, though, it ensured that similar proportions of &lt;code>chops&lt;/code> values are allotted to the training and testing set:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/diff.html'>diff&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>training&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>resample_stratified&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>chops&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Yes"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>testing&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>resample_stratified&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>chops&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Yes"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 0.01000042&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can read more about rsample 1.1.1 in the
&lt;a href="https://rsample.tidymodels.org/news/index.html#rsample-111" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="performance-speedup">Performance speedup
&lt;a href="#performance-speedup">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We recently made a performance tweak, released as part of parsnip 1.0.3, that resulted in a substantial speedup in fit time. Fitting models via parsnip is a fundamental operation in the tidymodels, so the speedup can be observed across many modeling workflows.&lt;/p>
&lt;p>The figure below demonstrates this speedup in
&lt;a href="https://gist.github.com/simonpcouch/651d0ea4d968b455ded8194578dabf52" target="_blank" rel="noopener">an experiment&lt;/a> involving fitting a simple linear regression model on resamples of simulated data. Simulated datasets with between one hundred and one million rows were partitioned into five, ten, or twenty folds and fitted with the new version of parsnip as well as the version preceding it. With smaller datasets, the speedup is negligible, but fit times decrease by a factor of three to five once training data reaches one million rows.&lt;/p>
&lt;div class="highlight">
&lt;p>&lt;img src="figs/speedup-1.png" alt="A ggplot line plot displaying the relative speedup between parsnip 1.0.2 and 1.0.3. The number of rows in training data is on the x axis, ranging from one hundred to one million, and the factor of speedup (1.0.2 over 1.0.3) is on the y axis, ranging from 1 to 5. Three lines, colored by 'number of folds,' noting 5, 10, or 20 resamples, stretch from the bottom left to top right of the plot. This shows that, as training data gets larger, the magnitude of speedup with the new parsnip version gets larger and larger." width="100%" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>You can read more about parsnip 1.0.3 in the
&lt;a href="https://parsnip.tidymodels.org/news/index.html#parsnip-103" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank those in the community that contributed to tidymodels in the last quarter:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>bonsai:
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">@HenrikBengtsson&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>broom:
&lt;a href="https://github.com/amorris28" target="_blank" rel="noopener">@amorris28&lt;/a>,
&lt;a href="https://github.com/capnrefsmmat" target="_blank" rel="noopener">@capnrefsmmat&lt;/a>,
&lt;a href="https://github.com/larmarange" target="_blank" rel="noopener">@larmarange&lt;/a>,
&lt;a href="https://github.com/lukepilling" target="_blank" rel="noopener">@lukepilling&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>butcher:
&lt;a href="https://github.com/galen-ft" target="_blank" rel="noopener">@galen-ft&lt;/a>, and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/li>
&lt;li>dials:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/Tadge-Analytics" target="_blank" rel="noopener">@Tadge-Analytics&lt;/a>.&lt;/li>
&lt;li>parsnip:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/exsell-jc" target="_blank" rel="noopener">@exsell-jc&lt;/a>,
&lt;a href="https://github.com/fkohrt" target="_blank" rel="noopener">@fkohrt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/Marwolaeth" target="_blank" rel="noopener">@Marwolaeth&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/schoonees" target="_blank" rel="noopener">@schoonees&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/sweiner123" target="_blank" rel="noopener">@sweiner123&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>recipes:
&lt;a href="https://github.com/andeek" target="_blank" rel="noopener">@andeek&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>, and
&lt;a href="https://github.com/mobius-eng" target="_blank" rel="noopener">@mobius-eng&lt;/a>.&lt;/li>
&lt;li>rsample:
&lt;a href="https://github.com/bschneidr" target="_blank" rel="noopener">@bschneidr&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/pgg1309" target="_blank" rel="noopener">@pgg1309&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>stacks:
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>workflows:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/talegari" target="_blank" rel="noopener">@talegari&lt;/a>, and
&lt;a href="https://github.com/xiaochi-liu" target="_blank" rel="noopener">@xiaochi-liu&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;re grateful for all of the tidymodels community, from observers to users to contributors, and wish you all a happy new year!&lt;/p></description></item><item><title>tidyclust is on CRAN</title><link>https://www.tidyverse.org/blog/2022/12/tidyclust-0-1-0/</link><pubDate>Tue, 06 Dec 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/12/tidyclust-0-1-0/</guid><description>&lt;!--
TODO:
* [X] Look over / edit the post's title in the yaml
* [X] Edit (or delete) the description; note this appears in the Twitter card
* [X] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [X] Find photo &amp; update yaml metadata
* [X] Create `thumbnail-sq.jpg`; height and width should be equal
* [X] Create `thumbnail-wd.jpg`; width should be >5x height
* [X] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [X] Add intro sentence, e.g. the standard tagline for the package
* [X] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re very pleased to announce the release of
&lt;a href="https://tidyclust.tidymodels.org/" target="_blank" rel="noopener">tidyclust&lt;/a> 0.1.0. tidyclust is the tidymodels extension for working with clustering models. This package wouldn&amp;rsquo;t have been possible without the great work of
&lt;a href="https://twitter.com/KellyBodwin" target="_blank" rel="noopener">Kelly Bodwin&lt;/a>.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidyclust"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will introduce tidyclust, how to use it with the rest of tidymodels, and how we can interact and evaluate the fitted clustering models.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span> &lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching packages&lt;/span> ────────────────────────────────────── tidymodels 1.0.0 ──&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>broom &lt;/span> 1.0.1 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>recipes &lt;/span> 1.0.3 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dials &lt;/span> 1.1.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>rsample &lt;/span> 1.1.0 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dplyr &lt;/span> 1.0.10 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tibble &lt;/span> 3.1.8 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>ggplot2 &lt;/span> 3.4.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tidyr &lt;/span> 1.2.1 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>infer &lt;/span> 1.0.4 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tune &lt;/span> 1.0.1 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>modeldata &lt;/span> 1.0.1 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflows &lt;/span> 1.1.2 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>parsnip &lt;/span> 1.0.3 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflowsets&lt;/span> 1.0.0 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>purrr &lt;/span> 0.3.5 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>yardstick &lt;/span> 1.1.0&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ───────────────────────────────────────── tidymodels_conflicts() ──&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>purrr&lt;/span>::&lt;span style='color: #00BB00;'>discard()&lt;/span> masks &lt;span style='color: #0000BB;'>scales&lt;/span>::discard()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>recipes&lt;/span>::&lt;span style='color: #00BB00;'>step()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::step()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>•&lt;/span> Use suppressPackageStartupMessages() to eliminate package startup messages&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/tidyclust'>tidyclust&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="specifying-clustering-models">Specifying clustering models
&lt;a href="#specifying-clustering-models">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The first thing we need to do is decide on the type of clustering model we want to fit. The pkgdown site provides a
&lt;a href="https://tidyclust.tidymodels.org/reference/index.html#specifications" target="_blank" rel="noopener">list of all clustering specifications&lt;/a> provided by tidyclust. We are slowly adding more types of models&amp;mdash;
&lt;a href="https://github.com/tidymodels/tidyclust/issues" target="_blank" rel="noopener">suggestions in issues&lt;/a> are highly welcome!&lt;/p>
&lt;p>We will use a K-Means model for these examples using
&lt;a href="https://rdrr.io/pkg/tidyclust/man/k_means.html" target="_blank" rel="noopener">&lt;code>k_means()&lt;/code>&lt;/a> to create a specification. As with other packages in the tidymodels, tidyclust tries to make use of informative names for functions and arguments; as such, the argument denoting the number of clusters is &lt;code>num_clusters&lt;/code> rather than &lt;code>k&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>kmeans_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/tidyclust/man/k_means.html'>k_means&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>num_clusters &lt;span class='o'>=&lt;/span> &lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ClusterR"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>kmeans_spec&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; K Means Cluster Specification (partition)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Main Arguments:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; num_clusters = 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Computational engine: ClusterR&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can use the
&lt;a href="https://parsnip.tidymodels.org/reference/set_engine.html" target="_blank" rel="noopener">&lt;code>set_engine()&lt;/code>&lt;/a>,
&lt;a href="https://parsnip.tidymodels.org/reference/set_args.html" target="_blank" rel="noopener">&lt;code>set_mode()&lt;/code>&lt;/a>, and
&lt;a href="https://parsnip.tidymodels.org/reference/set_args.html" target="_blank" rel="noopener">&lt;code>set_args()&lt;/code>&lt;/a> functions we are familiar with from parsnip. The specification itself isn&amp;rsquo;t worth much if we don&amp;rsquo;t apply it to some data. We will use the ames data set from the modeldata package.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ames"&lt;/span>, package &lt;span class='o'>=&lt;/span> &lt;span class='s'>"modeldata"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This data set contains a number of categorical variables that unaltered can&amp;rsquo;t be used with a K-Means model. Some light preprocessing can be done using the recipes package.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>rec_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_dummy&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_nominal_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_zv&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_normalize&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>step_pca&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, threshold &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.8&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This recipe normalizes all of the numeric variables before applying PCA to create a more minimal set of uncorrelated features. Notice how we didn&amp;rsquo;t specify an outcome as clustering models are unsupervised, meaning that we don&amp;rsquo;t have outcomes.&lt;/p>
&lt;p>These two specifications can be combined in a &lt;code>workflow()&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>kmeans_wf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>rec_spec&lt;/span>, &lt;span class='nv'>kmeans_spec&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This workflow can then be fit to the &lt;code>ames&lt;/code> data set.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>kmeans_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>kmeans_wf&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>kmeans_fit&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ══ Workflow [trained] ══════════════════════════════════════════════════════════&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Preprocessor:&lt;/span> Recipe&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Model:&lt;/span> k_means()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── Preprocessor ────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 4 Recipe Steps&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • step_dummy()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • step_zv()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • step_normalize()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • step_pca()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── Model ───────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; KMeans Cluster&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Call: ClusterR::KMeans_rcpp(data = data, clusters = clusters) &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Data cols: 121 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Centroids: 4 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; BSS/SS: 0.1003306 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; SS: 646321.6 = 581475.8 (WSS) + 64845.81 (BSS)&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We have arbitrarily set the number of clusters to 4 above. If we wanted to figure out what values would be &amp;ldquo;optimal,&amp;rdquo; we would have to fit multiple models. We can do this with
&lt;a href="https://rdrr.io/pkg/tidyclust/man/tune_cluster.html" target="_blank" rel="noopener">&lt;code>tune_cluster()&lt;/code>&lt;/a>; to make use of this function, though, we first need to use
&lt;a href="https://hardhat.tidymodels.org/reference/tune.html" target="_blank" rel="noopener">&lt;code>tune()&lt;/code>&lt;/a> to specify that &lt;code>num_clusters&lt;/code> is the argument we want to try with multiple values.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>kmeans_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>kmeans_spec&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_args&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>num_clusters &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>kmeans_wf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>rec_spec&lt;/span>, &lt;span class='nv'>kmeans_spec&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>kmeans_wf&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ══ Workflow ════════════════════════════════════════════════════════════════════&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Preprocessor:&lt;/span> Recipe&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Model:&lt;/span> k_means()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── Preprocessor ────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 4 Recipe Steps&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • step_dummy()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • step_zv()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • step_normalize()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; • step_pca()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── Model ───────────────────────────────────────────────────────────────────────&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; K Means Cluster Specification (partition)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Main Arguments:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; num_clusters = tune()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Computational engine: ClusterR&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can use
&lt;a href="https://rdrr.io/pkg/tidyclust/man/tune_cluster.html" target="_blank" rel="noopener">&lt;code>tune_cluster()&lt;/code>&lt;/a> in the same way we use &lt;code>tune_grid()&lt;/code>, using bootstraps to fit multiple models for each value of &lt;code>num_clusters&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1234&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>boots&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, times &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>tune_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/tidyclust/man/tune_cluster.html'>tune_cluster&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>kmeans_wf&lt;/span>,&lt;/span>
&lt;span> resamples &lt;span class='o'>=&lt;/span> &lt;span class='nv'>boots&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The different
&lt;a href="https://tune.tidymodels.org/reference/collect_predictions.html" target="_blank" rel="noopener">collect functions&lt;/a> such as &lt;code>collect_metrics()&lt;/code> works as they would do with tune output.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>collect_metrics&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tune_res&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 18 × 7&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; num_clusters .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 6 sse_total standard &lt;span style='text-decoration: underline;'>624&lt;/span>435. 10 &lt;span style='text-decoration: underline;'>1&lt;/span>675. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 6 sse_within_total standard &lt;span style='text-decoration: underline;'>557&lt;/span>147. 10 &lt;span style='text-decoration: underline;'>2&lt;/span>579. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 1 sse_total standard &lt;span style='text-decoration: underline;'>624&lt;/span>435. 10 &lt;span style='text-decoration: underline;'>1&lt;/span>675. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 1 sse_within_total standard &lt;span style='text-decoration: underline;'>624&lt;/span>435. 10 &lt;span style='text-decoration: underline;'>1&lt;/span>675. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 3 sse_total standard &lt;span style='text-decoration: underline;'>624&lt;/span>435. 10 &lt;span style='text-decoration: underline;'>1&lt;/span>675. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 3 sse_within_total standard &lt;span style='text-decoration: underline;'>588&lt;/span>001. 10 &lt;span style='text-decoration: underline;'>5&lt;/span>703. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 5 sse_total standard &lt;span style='text-decoration: underline;'>624&lt;/span>435. 10 &lt;span style='text-decoration: underline;'>1&lt;/span>675. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 5 sse_within_total standard &lt;span style='text-decoration: underline;'>568&lt;/span>085. 10 &lt;span style='text-decoration: underline;'>3&lt;/span>821. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 9 sse_total standard &lt;span style='text-decoration: underline;'>624&lt;/span>435. 10 &lt;span style='text-decoration: underline;'>1&lt;/span>675. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 9 sse_within_total standard &lt;span style='text-decoration: underline;'>535&lt;/span>120. 10 &lt;span style='text-decoration: underline;'>2&lt;/span>262. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 2 sse_total standard &lt;span style='text-decoration: underline;'>624&lt;/span>435. 10 &lt;span style='text-decoration: underline;'>1&lt;/span>675. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 2 sse_within_total standard &lt;span style='text-decoration: underline;'>599&lt;/span>762. 10 &lt;span style='text-decoration: underline;'>4&lt;/span>306. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>13&lt;/span> 8 sse_total standard &lt;span style='text-decoration: underline;'>624&lt;/span>435. 10 &lt;span style='text-decoration: underline;'>1&lt;/span>675. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>14&lt;/span> 8 sse_within_total standard &lt;span style='text-decoration: underline;'>541&lt;/span>813. 10 &lt;span style='text-decoration: underline;'>2&lt;/span>506. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>15&lt;/span> 4 sse_total standard &lt;span style='text-decoration: underline;'>624&lt;/span>435. 10 &lt;span style='text-decoration: underline;'>1&lt;/span>675. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>16&lt;/span> 4 sse_within_total standard &lt;span style='text-decoration: underline;'>583&lt;/span>604. 10 &lt;span style='text-decoration: underline;'>5&lt;/span>523. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>17&lt;/span> 7 sse_total standard &lt;span style='text-decoration: underline;'>624&lt;/span>435. 10 &lt;span style='text-decoration: underline;'>1&lt;/span>675. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>18&lt;/span> 7 sse_within_total standard &lt;span style='text-decoration: underline;'>548&lt;/span>299. 10 &lt;span style='text-decoration: underline;'>2&lt;/span>907. Preprocessor1…&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="extraction">Extraction
&lt;a href="#extraction">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Going back to the first model we fit, tidyclust provides three main tools for interfacing with a fitted cluster model:&lt;/p>
&lt;ul>
&lt;li>extract cluster assignments&lt;/li>
&lt;li>extract centroid locations&lt;/li>
&lt;li>prediction with new data&lt;/li>
&lt;/ul>
&lt;p>Each of these tasks has a function associated with them. First, we have
&lt;a href="https://rdrr.io/pkg/tidyclust/man/extract_cluster_assignment.html" target="_blank" rel="noopener">&lt;code>extract_cluster_assignment()&lt;/code>&lt;/a>, which can be used on fitted tidyclust objects, alone or as a part of a workflow, and it returns the cluster assignment as a factor named &lt;code>.cluster&lt;/code> in a tibble.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/tidyclust/man/extract_cluster_assignment.html'>extract_cluster_assignment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>kmeans_fit&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2,930 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .cluster &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Cluster_1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Cluster_1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Cluster_1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Cluster_1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Cluster_2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Cluster_2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Cluster_2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Cluster_2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Cluster_2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Cluster_2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 2,920 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The location of the clusters can be found using
&lt;a href="https://rdrr.io/pkg/tidyclust/man/extract_centroids.html" target="_blank" rel="noopener">&lt;code>extract_centroids()&lt;/code>&lt;/a> which again returns a tibble, with &lt;code>.cluster&lt;/code> being a factor with the same levels as what we got from
&lt;a href="https://rdrr.io/pkg/tidyclust/man/extract_cluster_assignment.html" target="_blank" rel="noopener">&lt;code>extract_cluster_assignment()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/tidyclust/man/extract_centroids.html'>extract_centroids&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>kmeans_fit&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 122&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .cluster PC001 PC002 PC003 PC004 PC005 PC006 PC007 PC008 PC009&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Cluster_1 -&lt;span style='color: #BB0000;'>5.76&lt;/span> 0.713 11.9 2.80 4.09 3.44 1.26 -&lt;span style='color: #BB0000;'>0.280&lt;/span> -&lt;span style='color: #BB0000;'>0.486&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Cluster_2 3.98 -&lt;span style='color: #BB0000;'>1.18&lt;/span> 0.126 0.718 0.150 0.055&lt;span style='text-decoration: underline;'>4&lt;/span> -&lt;span style='color: #BB0000;'>0.046&lt;/span>&lt;span style='color: #BB0000; text-decoration: underline;'>0&lt;/span> -&lt;span style='color: #BB0000;'>0.346&lt;/span> 0.059&lt;span style='text-decoration: underline;'>9&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Cluster_3 -&lt;span style='color: #BB0000;'>0.970&lt;/span> 2.45 -&lt;span style='color: #BB0000;'>0.604&lt;/span> -&lt;span style='color: #BB0000;'>0.523&lt;/span> 0.302 -&lt;span style='color: #BB0000;'>0.298&lt;/span> -&lt;span style='color: #BB0000;'>0.174&lt;/span> 0.507 -&lt;span style='color: #BB0000;'>0.153&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Cluster_4 -&lt;span style='color: #BB0000;'>4.40&lt;/span> -&lt;span style='color: #BB0000;'>2.30&lt;/span> -&lt;span style='color: #BB0000;'>0.658&lt;/span> -&lt;span style='color: #BB0000;'>0.671&lt;/span> -&lt;span style='color: #BB0000;'>1.29&lt;/span> -&lt;span style='color: #BB0000;'>0.007&lt;/span>&lt;span style='color: #BB0000; text-decoration: underline;'>51&lt;/span> 0.222 -&lt;span style='color: #BB0000;'>0.250&lt;/span> 0.223 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 112 more variables: PC010 &amp;lt;dbl&amp;gt;, PC011 &amp;lt;dbl&amp;gt;, PC012 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># PC013 &amp;lt;dbl&amp;gt;, PC014 &amp;lt;dbl&amp;gt;, PC015 &amp;lt;dbl&amp;gt;, PC016 &amp;lt;dbl&amp;gt;, PC017 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># PC018 &amp;lt;dbl&amp;gt;, PC019 &amp;lt;dbl&amp;gt;, PC020 &amp;lt;dbl&amp;gt;, PC021 &amp;lt;dbl&amp;gt;, PC022 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># PC023 &amp;lt;dbl&amp;gt;, PC024 &amp;lt;dbl&amp;gt;, PC025 &amp;lt;dbl&amp;gt;, PC026 &amp;lt;dbl&amp;gt;, PC027 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># PC028 &amp;lt;dbl&amp;gt;, PC029 &amp;lt;dbl&amp;gt;, PC030 &amp;lt;dbl&amp;gt;, PC031 &amp;lt;dbl&amp;gt;, PC032 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># PC033 &amp;lt;dbl&amp;gt;, PC034 &amp;lt;dbl&amp;gt;, PC035 &amp;lt;dbl&amp;gt;, PC036 &amp;lt;dbl&amp;gt;, PC037 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># PC038 &amp;lt;dbl&amp;gt;, PC039 &amp;lt;dbl&amp;gt;, PC040 &amp;lt;dbl&amp;gt;, PC041 &amp;lt;dbl&amp;gt;, PC042 &amp;lt;dbl&amp;gt;, …&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Lastly, if the model has a notion that translates to &amp;ldquo;prediction,&amp;rdquo; then
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> will give you those results as well. In the case of K-Means, this is being interpreted as &amp;ldquo;which centroid is this observation closest to.&amp;rdquo;&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>kmeans_fit&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nf'>slice_sample&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, n &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 10 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred_cluster&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Cluster_4 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Cluster_2 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Cluster_4 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Cluster_3 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Cluster_1 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Cluster_4 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Cluster_2 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Cluster_2 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Cluster_1 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Cluster_4&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Please check the
&lt;a href="https://tidyclust.tidymodels.org/" target="_blank" rel="noopener">pkgdown site&lt;/a> for more in-depth articles. We couldn&amp;rsquo;t be happier to have this package on CRAN and we encouraging you to check it out.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all the contributors:
&lt;a href="https://github.com/aephidayatuloh" target="_blank" rel="noopener">@aephidayatuloh&lt;/a>,
&lt;a href="https://github.com/avishaitsur" target="_blank" rel="noopener">@avishaitsur&lt;/a>,
&lt;a href="https://github.com/bryanosborne" target="_blank" rel="noopener">@bryanosborne&lt;/a>,
&lt;a href="https://github.com/cgoo4" target="_blank" rel="noopener">@cgoo4&lt;/a>,
&lt;a href="https://github.com/coforfe" target="_blank" rel="noopener">@coforfe&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/JauntyJJS" target="_blank" rel="noopener">@JauntyJJS&lt;/a>,
&lt;a href="https://github.com/kbodwin" target="_blank" rel="noopener">@kbodwin&lt;/a>,
&lt;a href="https://github.com/malcolmbarrett" target="_blank" rel="noopener">@malcolmbarrett&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/ninohardt" target="_blank" rel="noopener">@ninohardt&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>, and
&lt;a href="https://github.com/tomazweiss" target="_blank" rel="noopener">@tomazweiss&lt;/a>.&lt;/p></description></item><item><title>Q3 2022 tidymodels digest</title><link>https://www.tidyverse.org/blog/2022/10/tidymodels-2022-q3/</link><pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/10/tidymodels-2022-q3/</guid><description>&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;p>Since the beginning of 2021, we have been publishing
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">quarterly updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused, like these from the past month or so:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/10/parsnip-checking-1-0-2/" target="_blank" rel="noopener">Improvements to model specification checking in tidymodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/09/brulee-0-2-0/" target="_blank" rel="noopener">brulee 0.2.0&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/09/bundle-0-1-0/" target="_blank" rel="noopener">Announcing bundle&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/08/censored-0-1-0/" target="_blank" rel="noopener">censored 0.1.0&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/08/rsample-1-1-0/" target="_blank" rel="noopener">rsample 1.1.0&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2022/07/tidymodels-2022-q2/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been CRAN releases of 22 tidymodels packages. Here are links to their NEWS files:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>agua
&lt;a href="https://agua.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.1.0)&lt;/a>&lt;/li>
&lt;li>applicable
&lt;a href="https://github.com/tidymodels/applicable/blob/develop/NEWS.md" target="_blank" rel="noopener">(0.1.0)&lt;/a>&lt;/li>
&lt;li>bonsai
&lt;a href="https://bonsai.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.2.0)&lt;/a>&lt;/li>
&lt;li>broom
&lt;a href="https://broom.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;li>brulee
&lt;a href="https://brulee.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.2.0)&lt;/a>&lt;/li>
&lt;li>butcher
&lt;a href="https://butcher.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.0)&lt;/a>&lt;/li>
&lt;li>censored
&lt;a href="https://censored.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.1.1)&lt;/a>&lt;/li>
&lt;li>corrr
&lt;a href="https://corrr.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.4.4)&lt;/a>&lt;/li>
&lt;li>finetune
&lt;a href="https://finetune.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;li>modeldata
&lt;a href="https://modeldata.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;li>modeldb
&lt;a href="https://modeldb.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.2.3)&lt;/a>&lt;/li>
&lt;li>parsnip
&lt;a href="https://parsnip.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.2)&lt;/a>&lt;/li>
&lt;li>plsmod
&lt;a href="https://plsmod.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.0)&lt;/a>&lt;/li>
&lt;li>poissonreg
&lt;a href="https://poissonreg.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;li>probably
&lt;a href="https://probably.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.1.0)&lt;/a>&lt;/li>
&lt;li>recipes
&lt;a href="https://recipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.2)&lt;/a>&lt;/li>
&lt;li>rsample
&lt;a href="https://rsample.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.0)&lt;/a>&lt;/li>
&lt;li>spatialsample
&lt;a href="https://spatialsample.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.2.1)&lt;/a>&lt;/li>
&lt;li>textrecipes
&lt;a href="https://textrecipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;li>tune
&lt;a href="https://tune.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.1)&lt;/a>&lt;/li>
&lt;li>workflows
&lt;a href="https://workflows.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.0)&lt;/a>&lt;/li>
&lt;li>yardstick
&lt;a href="https://yardstick.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.0)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;ll highlight two specific upgrades: one for agua and another for recipes.&lt;/p>
&lt;h2 id="a-big-upgrade-for-agua">A big upgrade for agua
&lt;a href="#a-big-upgrade-for-agua">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>With version 3.38.0.1 of the
&lt;a href="https://cran.r-project.org/package=h2o" target="_blank" rel="noopener">h2o&lt;/a> package, agua can now tune h2o models as if they were any other type of model engine.&lt;/p>
&lt;p>
&lt;a href="https://h2o.ai" target="_blank" rel="noopener">h2o&lt;/a> has an excellent server-based computational engine for fitting a variety of different machine learning and statistical models. The h2o server can run locally or on some external high performance computing server. The downside is that it is light on tools for feature engineering and interactive data analysis.&lt;/p>
&lt;p>Using h2o with tidymodels enables users to leverage the benefits of packages like recipes along with fast, server-based parallel processing.&lt;/p>
&lt;p>While the syntax for model fitting and tuning are the same as any other non-h2o model, there are different ways to parallelize the work:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The h2o server has the ability to internally parallelize individual model computations. For example, when fitting trees, the search for the best split can be done using multiple threads. The number of threads that each model should be used is set with
&lt;a href="https://docs.h2o.ai/h2o/latest-stable/h2o-r/docs/reference/h2o.init.html" target="_blank" rel="noopener">h2o.init(nthreads)&lt;/a>. The default (&lt;code>-1&lt;/code>) is to use all CPUs on the host.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When using grid search,
&lt;a href="https://docs.h2o.ai/h2o/latest-stable/h2o-r/docs/reference/h2o.grid.html" target="_blank" rel="noopener">h2o.grid(parallelism)&lt;/a> determines how many models the h2o server should process at the same time. The default (&lt;code>1&lt;/code>) constrains the server to run the models sequentially.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>R has external parallelization tools (such as the foreach and future packages) that can start new R processes to simultaneously do work. This would run many models in parallel. For h2o, this determines how many models the agua package could send to the server at once. This does not appear to be constrained by the &lt;code>parallelism&lt;/code> argument to &lt;code>h2o.grid()&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>With h2o and tidymodels, you should probably &lt;strong>use h2o&amp;rsquo;s parallelization&lt;/strong>. Using multiple approaches &lt;em>can&lt;/em> work but only for some technologies. It&amp;rsquo;s still
&lt;a href="https://github.com/topepo/agua-h2o-benchmark" target="_blank" rel="noopener">pretty complicated&lt;/a> but we are working on un-complicating it.&lt;/p>
&lt;p>To set up h2o parallelization, there is a new control argument called &lt;code>backend_options&lt;/code>. If you were doing a grid search, you first define how many threads the h2o server should use:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">agua&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">finetune&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">h2o_thread_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">agua_backend_options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parallelism&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then, pass the output to any of the existing control functions:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">grid_ctrl&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">control_grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">backend_options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">h2o_thread_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now h2o can parallel process 10 models at once.&lt;/p>
&lt;p>Here is an example using a simulated data set with a numeric outcome:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://agua.tidymodels.org/'>agua&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/finetune'>finetune&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Simulate the data&lt;/span>
&lt;span class='nv'>n_train&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='m'>200&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>6147&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>sim_dat&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>sim_regression&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>n_train&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Resample using 10-fold cross-validation&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>91&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>sim_rs&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>vfold_cv&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sim_dat&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We&amp;rsquo;ll use grid search to tune a boosted tree:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>boost_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/boost_tree.html'>boost_tree&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
trees &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,
min_n &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,
tree_depth &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,
learn_rate &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,
loss_reduction &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"h2o"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now, let&amp;rsquo;s parallel process our computations.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># Start the h2o server&lt;/span>
&lt;span class='nf'>h2o&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/h2o/man/h2o.init.html'>h2o.init&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Multi-thread the model fits&lt;/span>
&lt;span class='nv'>h2o_thread_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://agua.tidymodels.org/reference/h2o_tune.html'>agua_backend_options&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>parallelism &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>grid_ctrl&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/control_grid.html'>control_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>backend_options &lt;span class='o'>=&lt;/span> &lt;span class='nv'>h2o_thread_spec&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We&amp;rsquo;ll evaluate a very small grid at first:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>7616&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>grid_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nv'>boost_spec&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/tune_grid.html'>tune_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>outcome&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, resamples &lt;span class='o'>=&lt;/span> &lt;span class='nv'>sim_rs&lt;/span>, grid &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>, control &lt;span class='o'>=&lt;/span> &lt;span class='nv'>grid_ctrl&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/show_best.html'>show_best&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>grid_res&lt;/span>, metric &lt;span class='o'>=&lt;/span> &lt;span class='s'>"rmse"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='nv'>.config&lt;/span>, &lt;span class='o'>-&lt;/span>&lt;span class='nv'>.metric&lt;/span>, &lt;span class='o'>-&lt;/span>&lt;span class='nv'>.estimator&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 8&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; trees min_n tree_depth learn_rate loss_reduction mean n std_err&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='text-decoration: underline;'>1&lt;/span>954 17 13 0.031&lt;span style='text-decoration: underline;'>8&lt;/span> 6.08&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>-8&lt;/span> 13.1 10 0.828&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 184 25 4 0.000&lt;span style='text-decoration: underline;'>000&lt;/span>001&lt;span style='text-decoration: underline;'>64&lt;/span> 6.56&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>-1&lt;/span> 15.7 10 1.03 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='text-decoration: underline;'>1&lt;/span>068 10 8 0.000&lt;span style='text-decoration: underline;'>040&lt;/span>9 1.19&lt;span style='color: #555555;'>e&lt;/span>+1 17.4 10 1.08 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='text-decoration: underline;'>1&lt;/span>500 37 10 0.000&lt;span style='text-decoration: underline;'>010&lt;/span>8 9.97&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>-9&lt;/span> 18.3 10 1.03 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 985 18 7 0.000&lt;span style='text-decoration: underline;'>000&lt;/span>045&lt;span style='text-decoration: underline;'>4&lt;/span> 1.84&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>-3&lt;/span> 18.4 10 1.04&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>grid_res&lt;/span>, metric &lt;span class='o'>=&lt;/span> &lt;span class='s'>"rmse"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/grid-plot-1.svg" width="90%" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>It was a small grid and most of the configurations were not especially good. We can further optimize the results by applying simulated annealing search to the best grid results.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>sa_ctrl&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://finetune.tidymodels.org/reference/control_sim_anneal.html'>control_sim_anneal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>backend_options &lt;span class='o'>=&lt;/span> &lt;span class='nv'>h2o_thread_spec&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>sa_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nv'>boost_spec&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://finetune.tidymodels.org/reference/tune_sim_anneal.html'>tune_sim_anneal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>outcome&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>,
resamples &lt;span class='o'>=&lt;/span> &lt;span class='nv'>sim_rs&lt;/span>,
initial &lt;span class='o'>=&lt;/span> &lt;span class='nv'>grid_res&lt;/span>,
iter &lt;span class='o'>=&lt;/span> &lt;span class='m'>25&lt;/span>,
control &lt;span class='o'>=&lt;/span> &lt;span class='nv'>sa_ctrl&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>Optimizing rmse&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>Initial best: 13.06400&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'> 1 &lt;/span>&lt;span style='color: #00BB00;'>♥ new best &lt;/span>&lt;span style='color: #000000;'> rmse=12.688 (+/-0.7899)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'> 2 &lt;/span>&lt;span style='color: #BBBB00;'>◯ accept suboptimal &lt;/span>&lt;span style='color: #000000;'> rmse=12.849 (+/-0.8304)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'> 3 &lt;/span>&lt;span style='color: #BBBB00;'>◯ accept suboptimal &lt;/span>&lt;span style='color: #000000;'> rmse=13.129 (+/-0.8266)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'> 4 &lt;/span>&lt;span style='color: #BBBB00;'>◯ accept suboptimal &lt;/span>&lt;span style='color: #000000;'> rmse=13.678 (+/-0.9544)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'> 5 &lt;/span>&lt;span style='color: #00BB00;'>+ better suboptimal &lt;/span>&lt;span style='color: #000000;'> rmse=13.433 (+/-0.792)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'> 6 &lt;/span>&lt;span style='color: #00BB00;'>+ better suboptimal &lt;/span>&lt;span style='color: #000000;'> rmse=12.99 (+/-0.9031)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'> 7 &lt;/span>&lt;span style='color: #BB0000;'>─ discard suboptimal&lt;/span>&lt;span style='color: #000000;'> rmse=16.531 (+/-1.027)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'> 8 &lt;/span>&lt;span style='color: #BB0000;'>─ discard suboptimal&lt;/span>&lt;span style='color: #000000;'> rmse=13.522 (+/-0.9802)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'> 9 &lt;/span>&lt;span style='color: #BB0000;'>✖ restart from best &lt;/span>&lt;span style='color: #000000;'> rmse=13.097 (+/-0.8109)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>10 &lt;/span>&lt;span style='color: #00BB00;'>♥ new best &lt;/span>&lt;span style='color: #000000;'> rmse=12.66 (+/-0.8028)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>11 &lt;/span>&lt;span style='color: #BBBB00;'>◯ accept suboptimal &lt;/span>&lt;span style='color: #000000;'> rmse=13.116 (+/-0.8135)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>12 &lt;/span>&lt;span style='color: #00BB00;'>+ better suboptimal &lt;/span>&lt;span style='color: #000000;'> rmse=12.714 (+/-0.7747)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>13 &lt;/span>&lt;span style='color: #BB0000;'>─ discard suboptimal&lt;/span>&lt;span style='color: #000000;'> rmse=13.074 (+/-0.6598)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>14 &lt;/span>&lt;span style='color: #BB0000;'>─ discard suboptimal&lt;/span>&lt;span style='color: #000000;'> rmse=14.489 (+/-1.028)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>15 &lt;/span>&lt;span style='color: #BBBB00;'>◯ accept suboptimal &lt;/span>&lt;span style='color: #000000;'> rmse=12.715 (+/-0.8043)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>16 &lt;/span>&lt;span style='color: #BB0000;'>─ discard suboptimal&lt;/span>&lt;span style='color: #000000;'> rmse=13.788 (+/-1.027)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>17 &lt;/span>&lt;span style='color: #BB0000;'>─ discard suboptimal&lt;/span>&lt;span style='color: #000000;'> rmse=13.057 (+/-0.7716)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>18 &lt;/span>&lt;span style='color: #BB0000;'>✖ restart from best &lt;/span>&lt;span style='color: #000000;'> rmse=13.064 (+/-0.7095)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>19 &lt;/span>&lt;span style='color: #00BB00;'>♥ new best &lt;/span>&lt;span style='color: #000000;'> rmse=12.645 (+/-0.7706)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>20 &lt;/span>&lt;span style='color: #BBBB00;'>◯ accept suboptimal &lt;/span>&lt;span style='color: #000000;'> rmse=12.7 (+/-0.821)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>21 &lt;/span>&lt;span style='color: #BB0000;'>─ discard suboptimal&lt;/span>&lt;span style='color: #000000;'> rmse=13.018 (+/-0.8047)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>22 &lt;/span>&lt;span style='color: #BB0000;'>─ discard suboptimal&lt;/span>&lt;span style='color: #000000;'> rmse=14.812 (+/-1.017)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>23 &lt;/span>&lt;span style='color: #BB0000;'>─ discard suboptimal&lt;/span>&lt;span style='color: #000000;'> rmse=13.098 (+/-0.921)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>24 &lt;/span>&lt;span style='color: #BBBB00;'>◯ accept suboptimal &lt;/span>&lt;span style='color: #000000;'> rmse=12.708 (+/-0.7538)&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #000000;'>25 &lt;/span>&lt;span style='color: #BBBB00;'>◯ accept suboptimal &lt;/span>&lt;span style='color: #000000;'> rmse=13.054 (+/-0.9046)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Again, h2o is doing all of the computational work for fitting models and tidymodels is proposing new parameter configurations.&lt;/p>
&lt;p>One other nice feature of the new agua release is the h2o engine for the
&lt;a href="https://parsnip.tidymodels.org/reference/auto_ml.html" target="_blank" rel="noopener">&lt;code>auto_ml()&lt;/code>&lt;/a> model. This builds a stacked ensemble on a set of different models (not unlike our
&lt;a href="https://stacks.tidymodels.org" target="_blank" rel="noopener">stacks&lt;/a> package but with far less code).&lt;/p>
&lt;p>There is a great worked example
&lt;a href="https://agua.tidymodels.org/articles/auto_ml.html" target="_blank" rel="noopener">on the agua website&lt;/a> so make sure to check this out!&lt;/p>
&lt;h2 id="more-spline-recipe-steps">More spline recipe steps
&lt;a href="#more-spline-recipe-steps">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Spline techniques allow linear models to produce nonlinear model curves. These are called
&lt;a href="https://bookdown.org/max/FES/numeric-one-to-many.html#numeric-basis-functions" target="_blank" rel="noopener">basis expansion methods&lt;/a> since they take a single numeric predictor and make additional nonlinear feature columns.&lt;/p>
&lt;p>If you have ever used &lt;code>geom:smooth()&lt;/code>, you have probably used a spline function.&lt;/p>
&lt;p>The recipes package now has an expanded set of spline functions (with a common naming convention):&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/dev/reference/step_spline_b.html" target="_blank" rel="noopener">&lt;code>step_spline_b()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/dev/reference/step_spline_convex.html" target="_blank" rel="noopener">&lt;code>step_spline_convex()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/dev/reference/step_spline_monotone.html" target="_blank" rel="noopener">&lt;code>step_spline_monotone()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/dev/reference/step_spline_natural.html" target="_blank" rel="noopener">&lt;code>step_spline_natural()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/dev/reference/step_spline_nonnegative.html" target="_blank" rel="noopener">&lt;code>step_spline_nonnegative()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>There is also another step to make polynomial functions:
&lt;a href="https://recipes.tidymodels.org/dev/reference/step_poly_bernstein.html" target="_blank" rel="noopener">&lt;code>step_poly_bernstein()&lt;/code>&lt;/a>&lt;/p>
&lt;p>These functions take different approaches to creating the new set of features. Take a look at the references to see the technical details.&lt;/p>
&lt;p>Here is a simple example using the
&lt;a href="https://www.tmwr.org/ames.html" target="_blank" rel="noopener">Ames data&lt;/a> where we model the sale price as a nonlinear function of the longitude using a convex basis function:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>ames&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Log.html'>log10&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>spline_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Sale_Price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>Longitude&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>step_spline_convex&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Longitude&lt;/span>, deg_free &lt;span class='o'>=&lt;/span> &lt;span class='m'>25&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>spline_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nv'>spline_rec&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/linear_reg.html'>linear_reg&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>spline_fit&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/augment.html'>augment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>ggplot&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>aes&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Longitude&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>geom_point&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>aes&lt;/span>&lt;span class='o'>(&lt;/span>y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>Sale_Price&lt;/span>&lt;span class='o'>)&lt;/span>, alpha &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span> &lt;span class='o'>/&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>geom_line&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>aes&lt;/span>&lt;span class='o'>(&lt;/span>y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>)&lt;/span>, col &lt;span class='o'>=&lt;/span> &lt;span class='s'>"red"&lt;/span>, lwd &lt;span class='o'>=&lt;/span> &lt;span class='m'>1.5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/Longitude-1.svg" width="70%" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Not too bad but the model clearly over-fits on the extreme right tail of the predictor distribution.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>It&amp;rsquo;s important that we thank everyone in the community that contributed to tidymodels:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>agua:
&lt;a href="https://github.com/coforfe" target="_blank" rel="noopener">@coforfe&lt;/a>,
&lt;a href="https://github.com/gouthaman87" target="_blank" rel="noopener">@gouthaman87&lt;/a>,
&lt;a href="https://github.com/jeliason" target="_blank" rel="noopener">@jeliason&lt;/a>,
&lt;a href="https://github.com/qiushiyan" target="_blank" rel="noopener">@qiushiyan&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>applicable:
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>bonsai:
&lt;a href="https://github.com/barrettlayman" target="_blank" rel="noopener">@barrettlayman&lt;/a>,
&lt;a href="https://github.com/DesmondChoy" target="_blank" rel="noopener">@DesmondChoy&lt;/a>,
&lt;a href="https://github.com/dfsnow" target="_blank" rel="noopener">@dfsnow&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/jameslamb" target="_blank" rel="noopener">@jameslamb&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>broom:
&lt;a href="https://github.com/AaronRendahl" target="_blank" rel="noopener">@AaronRendahl&lt;/a>,
&lt;a href="https://github.com/AmeliaMN" target="_blank" rel="noopener">@AmeliaMN&lt;/a>,
&lt;a href="https://github.com/bbolker" target="_blank" rel="noopener">@bbolker&lt;/a>,
&lt;a href="https://github.com/capnrefsmmat" target="_blank" rel="noopener">@capnrefsmmat&lt;/a>,
&lt;a href="https://github.com/corybrunson" target="_blank" rel="noopener">@corybrunson&lt;/a>,
&lt;a href="https://github.com/ddsjoberg" target="_blank" rel="noopener">@ddsjoberg&lt;/a>,
&lt;a href="https://github.com/friendly" target="_blank" rel="noopener">@friendly&lt;/a>,
&lt;a href="https://github.com/johanneskoch94" target="_blank" rel="noopener">@johanneskoch94&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>brulee:
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>butcher:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>censored:
&lt;a href="https://github.com/bcjaeger" target="_blank" rel="noopener">@bcjaeger&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/therneau" target="_blank" rel="noopener">@therneau&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>corrr:
&lt;a href="https://github.com/jagodap" target="_blank" rel="noopener">@jagodap&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>finetune:
&lt;a href="https://github.com/DMozzanica" target="_blank" rel="noopener">@DMozzanica&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/qiushiyan" target="_blank" rel="noopener">@qiushiyan&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>modeldata:
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>modeldb:
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>parsnip:
&lt;a href="https://github.com/barnabywalker" target="_blank" rel="noopener">@barnabywalker&lt;/a>,
&lt;a href="https://github.com/bcjaeger" target="_blank" rel="noopener">@bcjaeger&lt;/a>,
&lt;a href="https://github.com/ben-e" target="_blank" rel="noopener">@ben-e&lt;/a>,
&lt;a href="https://github.com/CarmenCiardiello" target="_blank" rel="noopener">@CarmenCiardiello&lt;/a>,
&lt;a href="https://github.com/daniel-althoff" target="_blank" rel="noopener">@daniel-althoff&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/gustavomodelli" target="_blank" rel="noopener">@gustavomodelli&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/john-b-edwards" target="_blank" rel="noopener">@john-b-edwards&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mdneuzerling" target="_blank" rel="noopener">@mdneuzerling&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/mrkaye97" target="_blank" rel="noopener">@mrkaye97&lt;/a>,
&lt;a href="https://github.com/qiushiyan" target="_blank" rel="noopener">@qiushiyan&lt;/a>,
&lt;a href="https://github.com/siegfried" target="_blank" rel="noopener">@siegfried&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/TylerGrantSmith" target="_blank" rel="noopener">@TylerGrantSmith&lt;/a>, and
&lt;a href="https://github.com/zhaoliang0302" target="_blank" rel="noopener">@zhaoliang0302&lt;/a>.&lt;/li>
&lt;li>plsmod:
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>poissonreg:
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>probably:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>.&lt;/li>
&lt;li>recipes:
&lt;a href="https://github.com/abichat" target="_blank" rel="noopener">@abichat&lt;/a>,
&lt;a href="https://github.com/adisarid" target="_blank" rel="noopener">@adisarid&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/JamesHWade" target="_blank" rel="noopener">@JamesHWade&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/luisDVA" target="_blank" rel="noopener">@luisDVA&lt;/a>,
&lt;a href="https://github.com/naveranoc" target="_blank" rel="noopener">@naveranoc&lt;/a>,
&lt;a href="https://github.com/nhward" target="_blank" rel="noopener">@nhward&lt;/a>,
&lt;a href="https://github.com/RMHogervorst" target="_blank" rel="noopener">@RMHogervorst&lt;/a>,
&lt;a href="https://github.com/ruddnr" target="_blank" rel="noopener">@ruddnr&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/zhaoliang0302" target="_blank" rel="noopener">@zhaoliang0302&lt;/a>.&lt;/li>
&lt;li>rsample:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>, and
&lt;a href="https://github.com/tjmahr" target="_blank" rel="noopener">@tjmahr&lt;/a>.&lt;/li>
&lt;li>spatialsample:
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>.&lt;/li>
&lt;li>textrecipes:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>, and
&lt;a href="https://github.com/PursuitOfDataScience" target="_blank" rel="noopener">@PursuitOfDataScience&lt;/a>.&lt;/li>
&lt;li>tune:
&lt;a href="https://github.com/Athospd" target="_blank" rel="noopener">@Athospd&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/frankhezemans" target="_blank" rel="noopener">@frankhezemans&lt;/a>,
&lt;a href="https://github.com/kevin199011" target="_blank" rel="noopener">@kevin199011&lt;/a>,
&lt;a href="https://github.com/misken" target="_blank" rel="noopener">@misken&lt;/a>,
&lt;a href="https://github.com/PursuitOfDataScience" target="_blank" rel="noopener">@PursuitOfDataScience&lt;/a>,
&lt;a href="https://github.com/qiushiyan" target="_blank" rel="noopener">@qiushiyan&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>workflows:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/JosiahParry" target="_blank" rel="noopener">@JosiahParry&lt;/a>,
&lt;a href="https://github.com/lrossouw" target="_blank" rel="noopener">@lrossouw&lt;/a>,
&lt;a href="https://github.com/msberends" target="_blank" rel="noopener">@msberends&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>yardstick:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/deschen1" target="_blank" rel="noopener">@deschen1&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/leonhGeis" target="_blank" rel="noopener">@leonhGeis&lt;/a>,
&lt;a href="https://github.com/PriitPaluoja" target="_blank" rel="noopener">@PriitPaluoja&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Improvements to model specification checking in tidymodels</title><link>https://www.tidyverse.org/blog/2022/10/parsnip-checking-1-0-2/</link><pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/10/parsnip-checking-1-0-2/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re stoked to announce the new release of
&lt;a href="https://parsnip.tidymodels.org/" target="_blank" rel="noopener">parsnip&lt;/a> v1.0.2 on CRAN! parsnip provides a tidy, unified interface to various statistical and machine learning models. This release includes improvements to errors and warnings that proliferate throughout the tidymodels ecosystem. These changes are meant to better anticipate common mistakes and nudge users informatively when defining model specifications. parsnip v1.0.2 includes a number of other changes that you can read about in the
&lt;a href="https://parsnip.tidymodels.org/news/index.html#parsnip-102" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="parsnip-and-its-extension-packages">parsnip and its extension packages
&lt;a href="#parsnip-and-its-extension-packages">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;ll load parsnip, along with other core packages in tidymodels, using the tidymodels meta-package:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>parsnip provides a unified interface to machine learning models, supporting a wide array of modeling approaches implemented across numerous R packages. For instance, the code to specify a linear regression model using the &lt;code>glmnet&lt;/code> package:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;glmnet&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Linear Regression Model Specification (regression)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: glmnet&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;is quite similar to that needed to specify a boosted tree regression model using &lt;code>xgboost&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">boost_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;xgboost&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Boosted Tree Model Specification (regression)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: xgboost&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We refer to these objects as &lt;em>model specifications&lt;/em>. They have three main components:&lt;/p>
&lt;ul>
&lt;li>The &lt;strong>model type&lt;/strong>: In this case, a linear regression or boosted tree.&lt;/li>
&lt;li>The &lt;strong>mode&lt;/strong>: The learning task, such as regression or classification.&lt;/li>
&lt;li>The &lt;strong>engine&lt;/strong>: The implementation for the given model type and mode, usually an R package.&lt;/li>
&lt;/ul>
&lt;p>This conceptual split of the model specification allows for parsnip&amp;rsquo;s consistent syntax - and it makes it extensible. Anyone (including you!) can write a parsnip &lt;em>extension package&lt;/em> that tightly integrates with other tidymodels packages out-of-the-box. We maintain a few of these packages ourselves, such as:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://github.com/tidymodels/agua" target="_blank" rel="noopener">agua&lt;/a>: models from the H2O modeling ecosystem&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/baguette" target="_blank" rel="noopener">baguette&lt;/a>: bootstrap aggregating ensemble models&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/censored" target="_blank" rel="noopener">censored&lt;/a>: censored regression and survival analysis&lt;/li>
&lt;/ul>
&lt;p>Similarly, community members outside of the tidymodels team have written parsnip extension packages, such as:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://github.com/business-science/modeltime" target="_blank" rel="noopener">modeltime&lt;/a>: time series forecasting&lt;/li>
&lt;li>
&lt;a href="https://github.com/hsbadr/additive" target="_blank" rel="noopener">additive&lt;/a>: generalized additive models&lt;/li>
&lt;/ul>
&lt;p>Much of our work on improving errors and warnings in this release has focused on parsnip&amp;rsquo;s integration with its extensions.&lt;/p>
&lt;h2 id="improvements-to-errors-and-warnings">Improvements to errors and warnings
&lt;a href="#improvements-to-errors-and-warnings">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Two &amp;ldquo;big ideas&amp;rdquo; have helped us focus our efforts related to improving errors and messages in the ecosystem.&lt;/p>
&lt;ul>
&lt;li>The same kind of mistake should raise the same prompt.&lt;/li>
&lt;li>Don&amp;rsquo;t tell the user they did something they didn&amp;rsquo;t do.&lt;/li>
&lt;/ul>
&lt;p>We&amp;rsquo;ll address both in the sections below!&lt;/p>
&lt;h3 id="the-same-kind-of-mistake-should-raise-the-same-prompt">The same kind of mistake should raise the same prompt
&lt;a href="#the-same-kind-of-mistake-should-raise-the-same-prompt">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The first problem we sought to address with these changes is that, in some cases, the same conceptual mistake could lead to different kinds of errors from parsnip and the packages that depend on it.&lt;/p>
&lt;p>A common mistake that users (and we, as developers) make when defining model specifications is forgetting to load the needed extension package for a given model specification.&lt;/p>
&lt;p>For example, parsnip supports bagged decision tree models via the &lt;code>bag_tree()&lt;/code> model type, though requires extension packages for actual implementations of the model. The censored package implements the &lt;code>censored regression&lt;/code> mode for bagged decision trees via &lt;code>rpart&lt;/code>, and the baguette package implements a few additional engines for &lt;code>regression&lt;/code> and &lt;code>classification&lt;/code> with this model type.&lt;/p>
&lt;p>In parsnip v1.0.1, if we specified a &lt;code>bag_tree()&lt;/code> model without loading any extension packages, we&amp;rsquo;d see:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">bt&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rpart&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">bt&lt;/span>
&lt;span class="c1">#&amp;gt; parsnip could not locate an implementation for `bag_tree` model specifications&lt;/span>
&lt;span class="c1">#&amp;gt; using the `rpart` engine.&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Bagged Decision Tree Model Specification (unknown)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Main Arguments:&lt;/span>
&lt;span class="c1">#&amp;gt; cost_complexity = 0&lt;/span>
&lt;span class="c1">#&amp;gt; min_n = 2&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: rpart&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After seeing this prompt, we may not remember which extension package was the one that implemented this specification. A reasonable guess might be the censored package:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">censored&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Loading required package: survival&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then, trying again:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rpart&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `stop_incompatible_mode()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! Available modes for engine rpart are: &amp;#39;unknown&amp;#39;, &amp;#39;censored regression&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The censored package clearly wasn&amp;rsquo;t the right one to load. Strangely, though, a side effect of loading it was that the prompt then became more cryptic, and it was converted from a message to an error. Perhaps even more strangely, if we instead supply an engine that only has an implementation in baguette and not censored, we see a different error:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;C5.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `check_spec_mode_engine_val()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! Engine &amp;#39;C5.0&amp;#39; is not supported for `bag_tree()`. See `show_engines(&amp;#39;bag_tree&amp;#39;)`.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Not only is this error different from the one above, but it seems to suggest that there is literally no &lt;code>C5.0&lt;/code> implementation anywhere.&lt;/p>
&lt;p>Returning to our &lt;code>bt&lt;/code> object, suppose we moved forward with defining tuning parameters, and want to define the grid to optimize over:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">bt&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">bt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cost_complexity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nf">extract_parameter_set_dials&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bt&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">grid_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `grid_random()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! At least one parameter object is required.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>So far in this section, we&amp;rsquo;ve made the same mistake&amp;mdash;failing to load the needed parsnip extension package&amp;mdash;four times, and received four different prompts.&lt;/p>
&lt;p>The good news is that, in each of the above cases, the newest version of parsnip always supplies a message, &lt;em>and&lt;/em> it&amp;rsquo;s the same kind of message, &lt;em>and&lt;/em> it&amp;rsquo;s much more helpful.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parsnip&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rpart&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ! parsnip could not locate an implementation for `bag_tree` model&lt;/span>
&lt;span class="c1">#&amp;gt; specifications using the `rpart` engine.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ The parsnip extension packages censored and baguette implement support for&lt;/span>
&lt;span class="c1">#&amp;gt; this specification.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ Please install (if needed) and load to continue.&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Bagged Decision Tree Model Specification (unknown mode)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Main Arguments:&lt;/span>
&lt;span class="c1">#&amp;gt; cost_complexity = 0&lt;/span>
&lt;span class="c1">#&amp;gt; min_n = 2&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: rpart&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note how the above message now suggests the two possible parsnip extensions that could provide support for this model specification.&lt;/p>
&lt;p>We could load censored, and then this specification is possible; censored implements a &lt;code>censored regression&lt;/code> mode for bagged trees:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">censored&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Loading required package: survival&lt;/span>
&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rpart&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Bagged Decision Tree Model Specification (unknown mode)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Main Arguments:&lt;/span>
&lt;span class="c1">#&amp;gt; cost_complexity = 0&lt;/span>
&lt;span class="c1">#&amp;gt; min_n = 2&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: rpart&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The censored package, however, doesn&amp;rsquo;t implement a &lt;code>regression&lt;/code> mode for bagged trees. Thus, if we set the mode to &lt;code>regression&lt;/code> but fail to load the package that provides support for that mode, parsnip will again prompt us to load the correct package:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rpart&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ! parsnip could not locate an implementation for `bag_tree` regression model&lt;/span>
&lt;span class="c1">#&amp;gt; specifications using the `rpart` engine.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ The parsnip extension package baguette implements support for this&lt;/span>
&lt;span class="c1">#&amp;gt; specification.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ Please install (if needed) and load to continue.&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Bagged Decision Tree Model Specification (regression)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Main Arguments:&lt;/span>
&lt;span class="c1">#&amp;gt; cost_complexity = 0&lt;/span>
&lt;span class="c1">#&amp;gt; min_n = 2&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: rpart&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That side-effect of loading censored is no longer the case for the &lt;code>C5.0&lt;/code> engine, as well:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;C5.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ! parsnip could not locate an implementation for `bag_tree` model&lt;/span>
&lt;span class="c1">#&amp;gt; specifications using the `C5.0` engine.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ The parsnip extension package baguette implements support for this&lt;/span>
&lt;span class="c1">#&amp;gt; specification.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ Please install (if needed) and load to continue.&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Bagged Decision Tree Model Specification (unknown mode)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Main Arguments:&lt;/span>
&lt;span class="c1">#&amp;gt; cost_complexity = 0&lt;/span>
&lt;span class="c1">#&amp;gt; min_n = 2&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: C5.0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, if we try to extract information about tuning parameters for a model that&amp;rsquo;s not well-specified with parsnip v1.0.2, the message about missing extensions is elevated to an error:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">bt&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">bt&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cost_complexity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nf">extract_parameter_set_dials&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bt&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">grid_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error:&lt;/span>
&lt;span class="c1">#&amp;gt; ! parsnip could not locate an implementation for `bag_tree` regression&lt;/span>
&lt;span class="c1">#&amp;gt; model specifications using the `rpart` engine.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ The parsnip extension package baguette implements support for this&lt;/span>
&lt;span class="c1">#&amp;gt; specification.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ Please install (if needed) and load to continue.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Given parsnip&amp;rsquo;s infrastructure, the technical conditions that raise these four prompts are quite different, but &lt;em>the technical reasons don&amp;rsquo;t matter&lt;/em>; the mistake being made is the same, and that&amp;rsquo;s what ought to determine the prompt raised.&lt;/p>
&lt;h3 id="dont-tell-the-user-they-did-something-they-didnt-do">Don&amp;rsquo;t tell the user they did something they didn&amp;rsquo;t do
&lt;a href="#dont-tell-the-user-they-did-something-they-didnt-do">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Another consideration that helped us frame these changes is that we feel error messages shouldn&amp;rsquo;t reference operations that users don&amp;rsquo;t need to know about. We&amp;rsquo;ll return to the example of forgetting to load extension packages to elaborate on what we mean here.&lt;/p>
&lt;p>With parsnip v1.0.1, if we just load the package and initialize a &lt;code>bag_tree()&lt;/code> model, we see:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parsnip&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; parsnip could not locate an implementation for `bag_tree` model specifications&lt;/span>
&lt;span class="c1">#&amp;gt; using the `rpart` engine.&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Bagged Decision Tree Model Specification (unknown)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Main Arguments:&lt;/span>
&lt;span class="c1">#&amp;gt; cost_complexity = 0&lt;/span>
&lt;span class="c1">#&amp;gt; min_n = 2&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: rpart&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note the ending of the message: &amp;ldquo;&amp;hellip;using the &lt;code>rpart&lt;/code> engine.&amp;rdquo; We didn&amp;rsquo;t specify that we wanted to use &lt;code>rpart&lt;/code> as an engine, yet that seems to be what went wrong!&lt;/p>
&lt;p>Readers who have fitted bagged decision tree models with parsnip before may realize that &lt;code>rpart&lt;/code> is the default engine for these models. This shouldn&amp;rsquo;t be requisite knowledge to interpret this message, though, and is not helpful in addressing the issue. With v1.0.2, we only mention the information that users give to us when constructing that message, and tell them exactly which packages they might need to install/load:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parsnip&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; ! parsnip could not locate an implementation for `bag_tree` model&lt;/span>
&lt;span class="c1">#&amp;gt; specifications.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ The parsnip extension packages censored and baguette implement support for&lt;/span>
&lt;span class="c1">#&amp;gt; this specification.&lt;/span>
&lt;span class="c1">#&amp;gt; ℹ Please install (if needed) and load to continue.&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Bagged Decision Tree Model Specification (unknown mode)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Main Arguments:&lt;/span>
&lt;span class="c1">#&amp;gt; cost_complexity = 0&lt;/span>
&lt;span class="c1">#&amp;gt; min_n = 2&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: rpart&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We hinted at another example of this guideline in the previous section; parsnip shouldn&amp;rsquo;t refer to internal functions when it raises error messages. Above, with parsnip v1.0.1, we saw:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">censored&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Loading required package: survival&lt;/span>
&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rpart&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `stop_incompatible_mode()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! Available modes for engine rpart are: &amp;#39;unknown&amp;#39;, &amp;#39;censored regression&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The error points out a function called &lt;code>stop_incompatible_mode()&lt;/code>, which is a function used internally by parsnip to check modes. There&amp;rsquo;s a different function, &lt;code>check_spec_mode_engine_val()&lt;/code>, that will flag super silly modes:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parsnip&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rpart&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;beep bop boop&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `check_spec_mode_engine_val()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! &amp;#39;beep bop boop&amp;#39; is not a known mode for model `bag_tree()`.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The important part, though, is that &lt;em>the technical reasons don&amp;rsquo;t matter&lt;/em>. Users don&amp;rsquo;t know&amp;mdash;and don&amp;rsquo;t need to know&amp;mdash;what &lt;code>stop_incompatible_mode()&lt;/code> or &lt;code>check_spec_mode_engine_val()&lt;/code> do.&lt;/p>
&lt;p>In parsnip v1.0.2, we now point users to the function they actually called that eventually gave rise to the error:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rpart&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;beep bop boop&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in `set_mode()`:&lt;/span>
&lt;span class="c1">#&amp;gt; ! &amp;#39;beep bop boop&amp;#39; is not a known mode for model `bag_tree()`.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We hope these changes improve folks&amp;rsquo; experience when modeling with parsnip in the future!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;!-- This post has highlighted upcoming improvements to model specification checking in parsnip. For those who'd like to learn more, I've written a [companion article](https://simonpcouch.com/blog) on my blog that delves further into the tooling we use to check model specifications. -->
&lt;p>Thanks to the folks who have contributed to this release of parsnip via GitHub:
&lt;a href="https://github.com/gustavomodelli" target="_blank" rel="noopener">@gustavomodelli&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/mrkaye97" target="_blank" rel="noopener">@mrkaye97&lt;/a>,
&lt;a href="https://github.com/siegfried" target="_blank" rel="noopener">@siegfried&lt;/a>.&lt;/p>
&lt;p>Contributions from many others, in the form of StackOverflow and RStudio Community posts, have been greatly helpful in our work on these improvements.&lt;/p></description></item><item><title>brulee 0.2.0</title><link>https://www.tidyverse.org/blog/2022/09/brulee-0-2-0/</link><pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/09/brulee-0-2-0/</guid><description>&lt;p>We&amp;rsquo;re thrilled to announce the release of
&lt;a href="https://tidymodels.github.io/brulee/" target="_blank" rel="noopener">brulee&lt;/a> 0.2.0. brulee contains several basic modeling functions that use the torch package infrastructure, such as: neural networks, linear regression, logistic regression, and multinomial regression.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;brulee&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This blog post will describe the changes to the package. You can see a full list of changes in the
&lt;a href="https://tidymodels.github.io/brulee/news/index.html" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;p>There were two main additions to brulee.&lt;/p>
&lt;p>First, since brulee is focused on fitting models to &lt;em>tabular data&lt;/em>, we have moved away from optimizing via stochastic gradient descent (SGD) as the default. For &lt;code>brulee_mlp()&lt;/code>, we switched the default optimizer from SGD to more traditional quasi-newton methods, specifically to Broyden–Fletcher–Goldfarb–Shanno algorithm (BFGS) method. You can still use SGD via the &lt;code>optimizer&lt;/code> option.&lt;/p>
&lt;p>Second, we&amp;rsquo;ve added
&lt;a href="https://www.google.com/search?rls=en&amp;amp;q=%22learning&amp;#43;rate&amp;#43;schedule%22" target="_blank" rel="noopener">learning rate schedulers&lt;/a> to &lt;code>brulee_mlp()&lt;/code>. The learning rate is one of the most important parameters to tune. There is an existing option to have a constant learning rate (via the &lt;code>learn_rate&lt;/code> argument). However, there is some intuition that the rate should probably decrease once the optimizer is closer to the best solution (to avoid overshooting the target). A scheduler is a function that adjusts the rate over time. Apart from a constant learning rate (the default), the options are cyclic, exponential decay, time-based decay, and step functions:&lt;/p>
&lt;p>&lt;img src="rates.png" title="plot of chunk unnamed-chunk-2" alt="plot of chunk unnamed-chunk-2" style="display: block; margin: auto;" />&lt;/p>
&lt;p>The corresponding
&lt;a href="https://tidymodels.github.io/brulee/reference/schedule_decay_time.html" target="_blank" rel="noopener">set of functions&lt;/a> share the prefix &lt;code>schedule_*()&lt;/code>.&lt;/p>
&lt;p>To use these with &lt;code>brulee_mlp()&lt;/code>, there is a &lt;code>rate_schedule&lt;/code> argument with possible values: &lt;code>&amp;quot;none&amp;quot;&lt;/code> (the default), &lt;code>&amp;quot;decay_time&amp;quot;&lt;/code>, &lt;code>&amp;quot;decay_expo&amp;quot;&lt;/code>, &lt;code>&amp;quot;cyclic&amp;quot;&lt;/code> and &lt;code>&amp;quot;step&amp;quot;&lt;/code>. Each function has arguments and these can be passed directly to &lt;code>brulee_mlp()&lt;/code>. The &lt;code>rate_schedule&lt;/code> argument can also be tuned as any other engine-specific parameter.&lt;/p>
&lt;h2 id="an-example">An example
&lt;a href="#an-example">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Let&amp;rsquo;s look at an example using the Ames housing data. We&amp;rsquo;ll use tidymodels to split the data and also preprocess the data a bit.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">brulee&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># ------------------------------------------------------------------------------&lt;/span>
&lt;span class="nf">tidymodels_prefer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">theme_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">theme_bw&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1"># ------------------------------------------------------------------------------&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ames&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Sale_Price&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">log10&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Sale_Price&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># ------------------------------------------------------------------------------&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5685&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">initial_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ames_train&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">training&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ames_test&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># ------------------------------------------------------------------------------&lt;/span>
&lt;span class="c1"># Let&amp;#39;s make a recipe to preprocess the data&lt;/span>
&lt;span class="n">ames_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sale_Price&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Bldg_Type&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Neighborhood&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Year_Built&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Gr_Liv_Area&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="n">Full_Bath&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Year_Sold&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Lot_Area&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Central_Air&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Longitude&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Latitude&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ames_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># Transform some highly skewed predictors&lt;/span>
&lt;span class="nf">step_BoxCox&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Lot_Area&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Gr_Liv_Area&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># Lump some rarely occurring categories into &amp;#34;other&amp;#34;&lt;/span>
&lt;span class="nf">step_other&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Neighborhood&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">threshold&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.05&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># Encode categorical predictors as binary.&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_nominal_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">one_hot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># Add an interaction effect:&lt;/span>
&lt;span class="nf">step_interact&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Central_Air&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">Year_Built&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_zv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_numeric_predictors&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can fit the model by passing the data, the recipe, and other options to &lt;code>brulee_mlp()&lt;/code>. We&amp;rsquo;ll use a cyclic scheduler with a half-cycle size of 5 epochs:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">827&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">brulee_mlp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ames_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hidden_units&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">epochs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">151&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">penalty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.05&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rate_schedule&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;cyclic&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">step_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Show the validation loss and alter the x-axis tick marks to correspond to cycles. &lt;/span>
&lt;span class="n">cycles&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">seq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">151&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nf">scale_x_continuous&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">breaks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cycles&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">minor_breaks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/val-loss-1.svg" title="plot of chunk val-loss" alt="plot of chunk val-loss" width="90%" />&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/sametsoekel" target="_blank" rel="noopener">@sametsoekel&lt;/a>, and
&lt;a href="https://github.com/dfalbel" target="_blank" rel="noopener">@dfalbel&lt;/a> for their help since the previous release.&lt;/p></description></item><item><title>censored 0.1.0</title><link>https://www.tidyverse.org/blog/2022/08/censored-0-1-0/</link><pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/08/censored-0-1-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re extremely pleased to announce the first release of
&lt;a href="https://censored.tidymodels.org" target="_blank" rel="noopener">censored&lt;/a> on CRAN. The censored package is a parsnip extension package for survival models.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"censored"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will introduce a new model type, a new mode, and new prediction types for survival analysis in the tidymodels framework. We have
&lt;a href="https://www.tidyverse.org/blog/2021/11/survival-analysis-parsnip-adjacent/" target="_blank" rel="noopener">previously&lt;/a> blogged about these changes while they were in development, now they have been released!&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/censored'>censored&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Loading required package: parsnip&lt;/span>
&lt;span class='c'>#&amp;gt; Loading required package: survival&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="model-types-modes-and-engines">Model types, modes, and engines
&lt;a href="#model-types-modes-and-engines">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A parsnip model specification consists of three elements:&lt;/p>
&lt;ul>
&lt;li>a &lt;strong>model type&lt;/strong> such as linear model, random forest, support vector machine, etc&lt;/li>
&lt;li>a computational &lt;strong>engine&lt;/strong> such as a specific R package or tools outside of R like Keras or Stan&lt;/li>
&lt;li>a &lt;strong>mode&lt;/strong> such as regression or classification&lt;/li>
&lt;/ul>
&lt;p>parsnip 1.0.0 introduces a new mode &lt;code>&amp;quot;censored regression&amp;quot;&lt;/code> and the censored package provides engines to fit various models in this new mode. With the addition of the new
&lt;a href="https://parsnip.tidymodels.org/reference/proportional_hazards.html" target="_blank" rel="noopener">&lt;code>proportional_hazards()&lt;/code>&lt;/a> model type, the available models cover parametric, semi-parametric, and tree-based models:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">model&lt;/th>
&lt;th align="left">engine&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">
&lt;a href="https://parsnip.tidymodels.org/reference/bag_tree.html" target="_blank" rel="noopener">&lt;code>bag_tree()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">rpart&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">
&lt;a href="https://parsnip.tidymodels.org/reference/boost_tree.html" target="_blank" rel="noopener">&lt;code>boost_tree()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">mboost&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">
&lt;a href="https://parsnip.tidymodels.org/reference/decision_tree.html" target="_blank" rel="noopener">&lt;code>decision_tree()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">rpart&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">
&lt;a href="https://parsnip.tidymodels.org/reference/decision_tree.html" target="_blank" rel="noopener">&lt;code>decision_tree()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">partykit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">
&lt;a href="https://parsnip.tidymodels.org/reference/proportional_hazards.html" target="_blank" rel="noopener">&lt;code>proportional_hazards()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">survival&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">
&lt;a href="https://parsnip.tidymodels.org/reference/proportional_hazards.html" target="_blank" rel="noopener">&lt;code>proportional_hazards()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">glmnet&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">
&lt;a href="https://parsnip.tidymodels.org/reference/rand_forest.html" target="_blank" rel="noopener">&lt;code>rand_forest()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">partykit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">
&lt;a href="https://parsnip.tidymodels.org/reference/survival_reg.html" target="_blank" rel="noopener">&lt;code>survival_reg()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">survival&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">
&lt;a href="https://parsnip.tidymodels.org/reference/survival_reg.html" target="_blank" rel="noopener">&lt;code>survival_reg()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">flexsurv&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>All models can be fitted through a formula interface. For example, when the engine allows for stratification variables, these can be specified by using a
&lt;a href="https://rdrr.io/pkg/survival/man/strata.html" target="_blank" rel="noopener">&lt;code>strata()&lt;/code>&lt;/a> term in the formula, as in the survival package.&lt;/p>
&lt;p>The &lt;code>cetaceans&lt;/code> data set contains information about dolphins and whales living in captivity in the USA. It is derived from a
&lt;a href="https://github.com/rfordatascience/tidytuesday/tree/master/data/2018/2018-12-18" target="_blank" rel="noopener">Tidy Tuesday data set&lt;/a> and you can install the corresponding data package with &lt;code>pak::pak(&amp;quot;hfrick/cetaceans&amp;quot;)&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cetaceans&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/str.html'>str&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cetaceans&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; tibble [1,358 × 10] (S3: tbl_df/tbl/data.frame)&lt;/span>
&lt;span class='c'>#&amp;gt; $ age : num [1:1358] 28 44 39 38 38 37 36 36 35 34 ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ event : num [1:1358] 0 0 0 0 0 0 0 0 0 0 ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ species : chr [1:1358] "Bottlenose" "Bottlenose" "Bottlenose" "Bottlenose" ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ sex : chr [1:1358] "F" "F" "M" "F" ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ birth_decade : num [1:1358] 1980 1970 1970 1970 1970 1980 1980 1980 1980 1980 ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ born_in_captivity: logi [1:1358] TRUE TRUE TRUE TRUE TRUE TRUE ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ time_in_captivity: num [1:1358] 1 1 1 1 1 1 1 1 1 1 ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ origin_location : chr [1:1358] "Marineland Florida" "Dolphin Research Center" "SeaWorld" "SeaWorld" ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ transfers : int [1:1358] 0 0 13 1 2 2 2 2 3 4 ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ current_location : chr [1:1358] "Marineland Florida" "Dolphin Research Center" "SeaWorld" "SeaWorld" ...&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To illustrate the new modelling function
&lt;a href="https://parsnip.tidymodels.org/reference/proportional_hazards.html" target="_blank" rel="noopener">&lt;code>proportional_hazards()&lt;/code>&lt;/a> and the formula interface for glmnet, let&amp;rsquo;s fit a penalized Cox model.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>cox_penalized&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/proportional_hazards.html'>proportional_hazards&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>penalty &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.1&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"glmnet"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"censored regression"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>age&lt;/span>, &lt;span class='nv'>event&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>sex&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>transfers&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/strata.html'>strata&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>born_in_captivity&lt;/span>&lt;span class='o'>)&lt;/span>,
data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>cetaceans&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="prediction-types">Prediction types
&lt;a href="#prediction-types">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>For censored regression, parsnip now also includes new prediction types:&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;quot;time&amp;quot;&lt;/code> for the survival time&lt;/li>
&lt;li>&lt;code>&amp;quot;survival&amp;quot;&lt;/code> for the survival probability&lt;/li>
&lt;li>&lt;code>&amp;quot;hazard&amp;quot;&lt;/code> for the hazard&lt;/li>
&lt;li>&lt;code>&amp;quot;quantile&amp;quot;&lt;/code> for quantiles of the event time distribution&lt;/li>
&lt;li>&lt;code>&amp;quot;linear_pred&amp;quot;&lt;/code> for the linear predictor&lt;/li>
&lt;/ul>
&lt;p>Predictions made with censored respect the tidymodels principles of:&lt;/p>
&lt;ul>
&lt;li>The predictions are always inside a tibble.&lt;/li>
&lt;li>The column names and types are unsurprising and predictable.&lt;/li>
&lt;li>The number of rows in &lt;code>new_data&lt;/code> and the output are the same.&lt;/li>
&lt;/ul>
&lt;p>Let&amp;rsquo;s demonstrate that with a small data set to predict on: just three observations, and the first one includes a missing value for one of the predictors.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>cetaceans_3&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>cetaceans&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>,&lt;span class='o'>]&lt;/span>
&lt;span class='nv'>cetaceans_3&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>sex&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>]&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kc'>NA&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Predictions of types &lt;code>&amp;quot;time&amp;quot;&lt;/code> and &lt;code>&amp;quot;survival&amp;quot;&lt;/code> are available for all model/engine combinations in censored.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cox_penalized&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>cetaceans_3&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"time"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; .pred_time&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 31.8&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 52.6&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Survival probability can be predicted at multiple time points, specified through the &lt;code>time&lt;/code> argument to
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a>. Here we are predicting survival probability at age 10, 20, 30, and 40 years.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>pred&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cox_penalized&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>cetaceans_3&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"survival"&lt;/span>, time &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>10&lt;/span>, &lt;span class='m'>20&lt;/span>, &lt;span class='m'>30&lt;/span>, &lt;span class='m'>40&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>pred&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; .pred &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [4 × 2]&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [4 × 2]&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [4 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The &lt;code>.pred&lt;/code> column is a list-column, containing nested tibbles:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># for the observation with NA&lt;/span>
&lt;span class='nv'>pred&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; .time .pred_survival&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 10 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 20 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 30 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 40 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>
&lt;span class='c'># without NA&lt;/span>
&lt;span class='nv'>pred&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; .time .pred_survival&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 10 0.729&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 20 0.567&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 30 0.386&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 40 0.386&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This can be used to visualize an approximation of the underlying survival curve.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://ggplot2.tidyverse.org'>ggplot2&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cox_penalized&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>cetaceans&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>,&lt;span class='o'>]&lt;/span>,
type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"survival"&lt;/span>, time &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/seq.html'>seq&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>80&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>dplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/factor.html'>factor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>tidyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/nest.html'>unnest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>cols &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.time&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.pred_survival&lt;/span>, col &lt;span class='o'>=&lt;/span> &lt;span class='nv'>id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_path.html'>geom_step&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggtheme.html'>theme_bw&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/survival-curve-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>More examples of available models, engines, and prediction types can be found in the article
&lt;a href="https://censored.tidymodels.org/articles/examples.html" target="_blank" rel="noopener">Fitting and Predicting with censored&lt;/a>.&lt;/p>
&lt;h2 id="whats-next">What&amp;rsquo;s next?
&lt;a href="#whats-next">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Our aim is to broadly integrate survival analysis in the tidymodels framework. Next, we&amp;rsquo;ll be working on adding appropriate metrics to the yardstick package and enabling model tuning via the tune package.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all the contributors:
&lt;a href="https://github.com/bcjaeger" target="_blank" rel="noopener">@bcjaeger&lt;/a>,
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/caimiao0714" target="_blank" rel="noopener">@caimiao0714&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dvdsb" target="_blank" rel="noopener">@dvdsb&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/erikvona" target="_blank" rel="noopener">@erikvona&lt;/a>,
&lt;a href="https://github.com/gvelasq" target="_blank" rel="noopener">@gvelasq&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/schelhorn" target="_blank" rel="noopener">@schelhorn&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p></description></item><item><title>rsample 1.1.0</title><link>https://www.tidyverse.org/blog/2022/08/rsample-1-1-0/</link><pubDate>Mon, 08 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/08/rsample-1-1-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re downright exhilarated to announce the release of
&lt;a href="https://rsample.tidymodels.org/" target="_blank" rel="noopener">rsample&lt;/a> 1.1.0. The rsample package makes it easy to create resamples for estimating distributions and assessing model performance.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"rsample"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will walk through some of the highlights from this newest release. You can see a full list of changes in the
&lt;a href="https://rsample.tidymodels.org/news/index.html#rsample-110" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="grouped-resampling">Grouped resampling
&lt;a href="#grouped-resampling">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>By far and away the biggest addition in this version of rsample is the set of new functions for grouped resampling. Grouped resampling is a form of resampling where observations need to be assigned to the analysis or assessment sets as a &amp;ldquo;group&amp;rdquo;, not split between the two. This is a common need when some of your data is more closely related than would be expected under random chance: for instance, when taking multiple measurements of a single patient over time, or when your data is geographically clustered into distinct &amp;ldquo;locations&amp;rdquo; like different neighborhoods.&lt;/p>
&lt;p>The rsample package has supported grouped v-fold cross-validation for a few years, through the
&lt;a href="https://rsample.tidymodels.org/reference/group_vfold_cv.html" target="_blank" rel="noopener">&lt;code>group_vfold_cv()&lt;/code>&lt;/a> function:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='http://purrr.tidyverse.org'>purrr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://rsample.tidymodels.org'>rsample&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, package &lt;span class='o'>=&lt;/span> &lt;span class='s'>"modeldata"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>resample&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/group_vfold_cv.html'>group_vfold_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, group &lt;span class='o'>=&lt;/span> &lt;span class='nv'>Neighborhood&lt;/span>, v &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>resample&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>splits&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map.html'>map_lgl&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/any.html'>any&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/as.data.frame.rsplit.html'>assessment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>Neighborhood&lt;/span> &lt;span class='o'>%in%&lt;/span> &lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/as.data.frame.rsplit.html'>analysis&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>Neighborhood&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] FALSE FALSE&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>rsample 1.1.0 extends this support by adding four new functions for grouped resampling. The new functions
&lt;a href="https://rsample.tidymodels.org/reference/group_bootstraps.html" target="_blank" rel="noopener">&lt;code>group_bootstraps()&lt;/code>&lt;/a>,
&lt;a href="https://rsample.tidymodels.org/reference/group_mc_cv.html" target="_blank" rel="noopener">&lt;code>group_mc_cv()&lt;/code>&lt;/a>,
&lt;a href="https://rsample.tidymodels.org/reference/validation_split.html" target="_blank" rel="noopener">&lt;code>group_validation_split()&lt;/code>&lt;/a>, and
&lt;a href="https://rsample.tidymodels.org/reference/initial_split.html" target="_blank" rel="noopener">&lt;code>group_initial_split()&lt;/code>&lt;/a> all work like their ungrouped versions, but let you specify a grouping column to make sure related observations are all assigned to the same sets:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># Bootstrap resampling with replacement:&lt;/span>
&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/group_bootstraps.html'>group_bootstraps&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, &lt;span class='nv'>Neighborhood&lt;/span>, times &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; # Group bootstrap sampling &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; splits id &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [3050/1225]&amp;gt;&lt;/span> Bootstrap1&lt;/span>
&lt;span class='c'># Random resampling without replacement:&lt;/span>
&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/group_mc_cv.html'>group_mc_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, &lt;span class='nv'>Neighborhood&lt;/span>, times &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; # Group Monte Carlo cross-validation (0.75/0.25) with 1 resamples &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; splits id &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2198/732]&amp;gt;&lt;/span> Resample1&lt;/span>
&lt;span class='c'># Data splitting to create a validation set:&lt;/span>
&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/validation_split.html'>group_validation_split&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, &lt;span class='nv'>Neighborhood&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; # Group Validation Set Split (0.75/0.25) &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; splits id &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2201/729]&amp;gt;&lt;/span> validation&lt;/span>
&lt;span class='c'># Data splitting to create an initial training/testing split:&lt;/span>
&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/initial_split.html'>group_initial_split&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, &lt;span class='nv'>Neighborhood&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;Training/Testing/Total&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;2162/768/2930&amp;gt;&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>These functions all target assigning a certain proportion of your data to the assessment fold. Hitting that target can be tricky when your groups aren&amp;rsquo;t all the same size, however. To work around this, these new functions create a list of all the groups in your data, randomly reshuffle it, and then select the first &lt;em>n&lt;/em> groups in the list that results in splitting the data as close to that proportion as possible. The net effect of this on users is that your analysis and assessment folds won&amp;rsquo;t always be precisely the size you&amp;rsquo;re targeting (particularly if you have a few large groups), but all data in a single group will always be entirely assigned to the same set and the splits will be entirely randomly created.&lt;/p>
&lt;p>The other big change to grouped resampling comes as a new argument to
&lt;a href="https://rsample.tidymodels.org/reference/group_vfold_cv.html" target="_blank" rel="noopener">&lt;code>group_vfold_cv()&lt;/code>&lt;/a>. By default,
&lt;a href="https://rsample.tidymodels.org/reference/group_vfold_cv.html" target="_blank" rel="noopener">&lt;code>group_vfold_cv()&lt;/code>&lt;/a> assigns roughly the same number of groups to each of your folds, so you wind up with the same number of patients, or neighborhoods, or whatever else you&amp;rsquo;re grouping by in each assessment set. The new &lt;code>balance&lt;/code> argument lets you instead assign roughly the same number of rows to each fold instead, if you set &lt;code>balance = observations&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/group_vfold_cv.html'>group_vfold_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, &lt;span class='nv'>Neighborhood&lt;/span>, balance &lt;span class='o'>=&lt;/span> &lt;span class='s'>"observations"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; # Group 28-fold cross-validation &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 28 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; splits id &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2928/2]&amp;gt;&lt;/span> Resample01&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2922/8]&amp;gt;&lt;/span> Resample02&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2907/23]&amp;gt;&lt;/span> Resample03&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2736/194]&amp;gt;&lt;/span> Resample04&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2886/44]&amp;gt;&lt;/span> Resample05&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2893/37]&amp;gt;&lt;/span> Resample06&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2929/1]&amp;gt;&lt;/span> Resample07&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2663/267]&amp;gt;&lt;/span> Resample08&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2805/125]&amp;gt;&lt;/span> Resample09&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [2837/93]&amp;gt;&lt;/span> Resample10&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 18 more rows&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ Use `print(n = ...)` to see more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This approach works in a similar way to the new grouped resampling functions, attempting to assign roughly &lt;code>1 / v&lt;/code> of your data to each fold. When working with unbalanced groups, this can result in much more even assignments of data to each fold:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://ggplot2.tidyverse.org'>ggplot2&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>analysis_sd&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>v&lt;/span>, &lt;span class='nv'>balance&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/group_vfold_cv.html'>group_vfold_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>ames&lt;/span>,
&lt;span class='nv'>Neighborhood&lt;/span>,
&lt;span class='nv'>v&lt;/span>,
balance &lt;span class='o'>=&lt;/span> &lt;span class='nv'>balance&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>splits&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>purrr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map.html'>map_dbl&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/nrow.html'>nrow&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/as.data.frame.rsplit.html'>analysis&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>.x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/sd.html'>sd&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>
&lt;span class='nv'>resample&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>tidyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/expand.html'>crossing&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
idx &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/seq.html'>seq_len&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>100&lt;/span>&lt;span class='o'>)&lt;/span>,
v &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2&lt;/span>, &lt;span class='m'>5&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>15&lt;/span>&lt;span class='o'>)&lt;/span>,
balance &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"groups"&lt;/span>, &lt;span class='s'>"observations"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>resample&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>sd &lt;span class='o'>=&lt;/span> &lt;span class='nf'>purrr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map2.html'>pmap_dbl&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>v&lt;/span>, &lt;span class='nv'>balance&lt;/span>&lt;span class='o'>)&lt;/span>,
&lt;span class='nv'>analysis_sd&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sd&lt;/span>, fill &lt;span class='o'>=&lt;/span> &lt;span class='nv'>balance&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_histogram.html'>geom_histogram&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>alpha &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.6&lt;/span>, color &lt;span class='o'>=&lt;/span> &lt;span class='s'>"black"&lt;/span>, size &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.3&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/facet_wrap.html'>facet_wrap&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span> &lt;span class='nv'>v&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggtheme.html'>theme_minimal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>title &lt;span class='o'>=&lt;/span> &lt;span class='s'>"sd() of nrow(analysis) by balance method"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-4-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Right now, these grouping functions don&amp;rsquo;t support stratification. If you have thoughts on how you&amp;rsquo;d expect stratification to work with grouping, or have an example of how another implementation has handled it,
&lt;a href="https://github.com/tidymodels/rsample/issues/317" target="_blank" rel="noopener">let us know on GitHub&lt;/a>!&lt;/p>
&lt;h2 id="other-improvements">Other improvements
&lt;a href="#other-improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This release also adds a few new utility functions to make it easier to work with the rsets produced by rsample functions.&lt;/p>
&lt;p>For instance, the new
&lt;a href="https://rsample.tidymodels.org/reference/reshuffle_rset.html" target="_blank" rel="noopener">&lt;code>reshuffle_rset()&lt;/code>&lt;/a> will re-generate an rset, using the same arguments as were used to originally create it, but with the current random seed:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>123&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>resample&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/vfold_cv.html'>vfold_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>resample&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>splits&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/as.data.frame.rsplit.html'>analysis&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/head.html'>head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; mpg cyl disp hp drat wt qsec vs am gear carb&lt;/span>
&lt;span class='c'>#&amp;gt; Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4&lt;/span>
&lt;span class='c'>#&amp;gt; Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1&lt;/span>
&lt;span class='c'>#&amp;gt; Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1&lt;/span>
&lt;span class='c'>#&amp;gt; Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2&lt;/span>
&lt;span class='c'>#&amp;gt; Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1&lt;/span>
&lt;span class='c'>#&amp;gt; Duster 360 14.3 8 360 245 3.21 3.570 15.84 0 0 3 4&lt;/span>
&lt;span class='nv'>resample&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/reshuffle_rset.html'>reshuffle_rset&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>resample&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>resample&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>splits&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/as.data.frame.rsplit.html'>analysis&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/head.html'>head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; mpg cyl disp hp drat wt qsec vs am gear carb&lt;/span>
&lt;span class='c'>#&amp;gt; Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4&lt;/span>
&lt;span class='c'>#&amp;gt; Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4&lt;/span>
&lt;span class='c'>#&amp;gt; Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1&lt;/span>
&lt;span class='c'>#&amp;gt; Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1&lt;/span>
&lt;span class='c'>#&amp;gt; Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2&lt;/span>
&lt;span class='c'>#&amp;gt; Duster 360 14.3 8 360 245 3.21 3.570 15.84 0 0 3 4&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This works with repeated cross-validation, stratification, grouping &amp;ndash; anything you did originally should be preserved when reshuffling the rset.&lt;/p>
&lt;p>Additionally, the new
&lt;a href="https://rsample.tidymodels.org/reference/reverse_splits.html" target="_blank" rel="noopener">&lt;code>reverse_splits()&lt;/code>&lt;/a> function will &amp;ldquo;swap&amp;rdquo; the assessment and analysis folds of any rsplit or rset object:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>resample&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/initial_split.html'>initial_split&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>resample&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;Training/Testing/Total&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;24/8/32&amp;gt;&lt;/span>
&lt;span class='nf'>&lt;a href='https://rsample.tidymodels.org/reference/reverse_splits.html'>reverse_splits&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>resample&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;Training/Testing/Total&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;8/24/32&amp;gt;&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This is just scratching the surface of the new features and improvements in this release of rsample! You can see a full list of changes in the the
&lt;a href="https://rsample.tidymodels.org/news/index.html#rsample-110" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank everyone that has contributed since the last release:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>, and
&lt;a href="https://github.com/sametsoekel" target="_blank" rel="noopener">@sametsoekel&lt;/a>.&lt;/p></description></item><item><title>Q2 2022 tidymodels digest</title><link>https://www.tidyverse.org/blog/2022/07/tidymodels-2022-q2/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/07/tidymodels-2022-q2/</guid><description>&lt;!--
TODO:
* [X] Look over / edit the post's title in the yaml
* [X] Edit (or delete) the description; note this appears in the Twitter card
* [X] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [X] Find photo &amp; update yaml metadata
* [X] Create `thumbnail-sq.jpg`; height and width should be equal
* [X] Create `thumbnail-wd.jpg`; width should be >5x height
* [X] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [X] Add intro sentence, e.g. the standard tagline for the package
* [X] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching packages&lt;/span> ────────────────────────────────────── tidymodels 1.0.0 ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>broom &lt;/span> 1.0.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>recipes &lt;/span> 1.0.1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dials &lt;/span> 1.0.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>rsample &lt;/span> 1.0.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dplyr &lt;/span> 1.0.9 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tibble &lt;/span> 3.1.7&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>ggplot2 &lt;/span> 3.3.6 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tidyr &lt;/span> 1.2.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>infer &lt;/span> 1.0.2 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tune &lt;/span> 1.0.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>modeldata &lt;/span> 1.0.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflows &lt;/span> 1.0.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>parsnip &lt;/span> 1.0.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflowsets&lt;/span> 1.0.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>purrr &lt;/span> 0.3.4 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>yardstick &lt;/span> 1.0.0&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ───────────────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>purrr&lt;/span>::&lt;span style='color: #00BB00;'>discard()&lt;/span> masks &lt;span style='color: #0000BB;'>scales&lt;/span>::discard()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>recipes&lt;/span>::&lt;span style='color: #00BB00;'>step()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::step()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>•&lt;/span> Search for functions across packages at &lt;span style='color: #00BB00;'>https://www.tidymodels.org/find/&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Since the beginning of last year, we have been publishing
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">quarterly updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused, like these from the past month or so:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/06/spatialsample-0-2-0/" target="_blank" rel="noopener">spatialsample&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/05/recipes-update-05-20222/" target="_blank" rel="noopener">recipes and its extension packages&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/06/bonsai-0-1-0/" target="_blank" rel="noopener">bonsai&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2022/04/tidymodels-2022-q1/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been CRAN releases of 25 tidymodels packages. You can install these updates from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='s'>"rsample"&lt;/span>, &lt;span class='s'>"spatialsample"&lt;/span>, &lt;span class='s'>"parsnip"&lt;/span>, &lt;span class='s'>"baguette"&lt;/span>, &lt;span class='s'>"multilevelmod"&lt;/span>, &lt;span class='s'>"discrim"&lt;/span>,
&lt;span class='s'>"plsmod"&lt;/span>, &lt;span class='s'>"poissonreg"&lt;/span>, &lt;span class='s'>"rules"&lt;/span>, &lt;span class='s'>"recipes"&lt;/span>, &lt;span class='s'>"embed"&lt;/span>, &lt;span class='s'>"themis"&lt;/span>, &lt;span class='s'>"textrecipes"&lt;/span>,
&lt;span class='s'>"workflows"&lt;/span>, &lt;span class='s'>"workflowsets"&lt;/span>, &lt;span class='s'>"tune"&lt;/span>, &lt;span class='s'>"yardstick"&lt;/span>, &lt;span class='s'>"broom"&lt;/span>, &lt;span class='s'>"dials"&lt;/span>, &lt;span class='s'>"butcher"&lt;/span>,
&lt;span class='s'>"hardhat"&lt;/span>, &lt;span class='s'>"infer"&lt;/span>, &lt;span class='s'>"stacks"&lt;/span>, &lt;span class='s'>"tidyposterior"&lt;/span>, &lt;span class='s'>"tidypredict"&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;ul>
&lt;li>
&lt;a href="https://baguette.tidymodels.org/news/index.html#baguette-100" target="_blank" rel="noopener">baguette&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://broom.tidymodels.org/news/index.html#broom-080" target="_blank" rel="noopener">broom&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://butcher.tidymodels.org/news/index.html#butcher-020" target="_blank" rel="noopener">butcher&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dials.tidymodels.org/news/index.html#dials-100" target="_blank" rel="noopener">dials&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://discrim.tidymodels.org/news/index.html#discrim-100" target="_blank" rel="noopener">discrim&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://embed.tidymodels.org/news/index.html#embed-100" target="_blank" rel="noopener">embed&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://hardhat.tidymodels.org/news/index.html#hardhat-120" target="_blank" rel="noopener">hardhat&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://infer.tidymodels.org/news/index.html#infer-v102" target="_blank" rel="noopener">infer&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://modeldata.tidymodels.org/news/index.html#modeldata-100" target="_blank" rel="noopener">modeldata&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://multilevelmod.tidymodels.org/news/index.html#multilevelmod-100" target="_blank" rel="noopener">multilevelmod&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://parsnip.tidymodels.org/news/index.html#parsnip-100" target="_blank" rel="noopener">parsnip&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://poissonreg.tidymodels.org/news/index.html#poissonreg-100" target="_blank" rel="noopener">poissonreg&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/news/index.html#recipes-101" target="_blank" rel="noopener">recipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://rsample.tidymodels.org/news/index.html#rsample-100" target="_blank" rel="noopener">rsample&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://rules.tidymodels.org/news/index.html#rules-100" target="_blank" rel="noopener">rules&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://spatialsample.tidymodels.org/news/index.html#spatialsample-020" target="_blank" rel="noopener">spatialsample&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://stacks.tidymodels.org/news/index.html#stacks-023" target="_blank" rel="noopener">stacks&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://textrecipes.tidymodels.org/news/index.html#textrecipes-100" target="_blank" rel="noopener">textrecipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://themis.tidymodels.org/news/index.html#themis-100" target="_blank" rel="noopener">themis&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.tidymodels.org/news/index.html#tidymodels-100" target="_blank" rel="noopener">tidymodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tidyposterior.tidymodels.org/news/index.html#tidyposterior-100" target="_blank" rel="noopener">tidyposterior&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tidypredict.tidymodels.org/news/index.html#tidypredict-049" target="_blank" rel="noopener">tidypredict&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tune.tidymodels.org/news/index.html#tune-100" target="_blank" rel="noopener">tune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflows.tidymodels.org/news/index.html#workflows-100" target="_blank" rel="noopener">workflows&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflowsets.tidymodels.org/news/index.html#workflowsets-100" target="_blank" rel="noopener">workflowsets&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://yardstick.tidymodels.org/news/index.html#yardstick-100" target="_blank" rel="noopener">yardstick&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>NEWS&lt;/code> files are linked here for each package; you&amp;rsquo;ll notice that there are a lot! We know it may be bothersome to keep up with all these changes, so we want to draw your attention to our recent blog posts above and also highlight a few more useful updates in today&amp;rsquo;s blog post.&lt;/p>
&lt;p>We are confident that we have created a good foundation with our implementation across many of our packages and we are using this as an opportunity to bump the packages versions to 1.0.0.&lt;/p>
&lt;h2 id="case-weights">Case weights
&lt;a href="#case-weights">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Much of the work we have been doing so far this year has been related to case weights. For a more detailed account of the deliberations see this earlier post about the
&lt;a href="https://www.tidyverse.org/blog/2022/05/case-weights/" target="_blank" rel="noopener">use of case weights with tidymodels&lt;/a>.&lt;/p>
&lt;p>A full worked example can be found in the
&lt;a href="tidyverse.org/blog/2022/05/case-weights/#tidymodels-syntax">previous blog post&lt;/a> and on
&lt;a href="https://www.tidymodels.org/learn/work/case-weights/" target="_blank" rel="noopener">the tidymodels site&lt;/a>.&lt;/p>
&lt;p>As an example let&amp;rsquo;s go over how case weights are used within tidymodels. We start by simulating a data set using &lt;code>sim_classification()&lt;/code>, this data set is going to be unbalanced and we will be using importance weights to give more weight to the minority class. In tidymodels you can use &lt;code>importance_weights()&lt;/code> or &lt;code>frequency_weights()&lt;/code> to denote what type of weight you are working with. Setting the type of weight should be the first thing you do.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>training_sim&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>sim_classification&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5000&lt;/span>, intercept &lt;span class='o'>=&lt;/span> &lt;span class='o'>-&lt;/span>&lt;span class='m'>25&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>
case_wts &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/ifelse.html'>ifelse&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>class&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"class_1"&lt;/span>, &lt;span class='m'>60&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>,
case_wts &lt;span class='o'>=&lt;/span> &lt;span class='nf'>importance_weights&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>case_wts&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>training_sim&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>relocate&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>case_wts&lt;/span>, .after &lt;span class='o'>=&lt;/span> &lt;span class='nv'>class&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5,000 × 17&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; class case_wts two_factor_1 two_factor_2 non_linear_1 non_linear_2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;imp_wts&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> class_2 1 0.092&lt;span style='text-decoration: underline;'>4&lt;/span> -&lt;span style='color: #BB0000;'>1.70&lt;/span> -&lt;span style='color: #BB0000;'>0.579&lt;/span> 0.201&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> class_2 1 -&lt;span style='color: #BB0000;'>0.136&lt;/span> 0.608 -&lt;span style='color: #BB0000;'>0.770&lt;/span> 0.114&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> class_2 1 -&lt;span style='color: #BB0000;'>0.080&lt;/span>&lt;span style='color: #BB0000; text-decoration: underline;'>6&lt;/span> -&lt;span style='color: #BB0000;'>2.07&lt;/span> -&lt;span style='color: #BB0000;'>0.709&lt;/span> 0.272&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> class_2 1 1.35 2.75 -&lt;span style='color: #BB0000;'>0.380&lt;/span> 0.785&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> class_2 1 -&lt;span style='color: #BB0000;'>0.238&lt;/span> 1.08 -&lt;span style='color: #BB0000;'>0.700&lt;/span> 0.638&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> class_2 1 -&lt;span style='color: #BB0000;'>0.322&lt;/span> -&lt;span style='color: #BB0000;'>1.79&lt;/span> 0.053&lt;span style='text-decoration: underline;'>4&lt;/span> 0.470&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> class_2 1 1.35 -&lt;span style='color: #BB0000;'>0.102&lt;/span> -&lt;span style='color: #BB0000;'>0.764&lt;/span> 0.827&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> class_2 1 0.595 1.30 -&lt;span style='color: #BB0000;'>0.045&lt;/span>&lt;span style='color: #BB0000; text-decoration: underline;'>4&lt;/span> 0.493&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> class_2 1 0.563 0.916 -&lt;span style='color: #BB0000;'>0.383&lt;/span> 0.775&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> class_2 1 -&lt;span style='color: #BB0000;'>0.327&lt;/span> -&lt;span style='color: #BB0000;'>0.457&lt;/span> -&lt;span style='color: #BB0000;'>0.390&lt;/span> 0.704&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 4,990 more rows, and 11 more variables: non_linear_3 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># linear_01 &amp;lt;dbl&amp;gt;, linear_02 &amp;lt;dbl&amp;gt;, linear_03 &amp;lt;dbl&amp;gt;, linear_04 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># linear_05 &amp;lt;dbl&amp;gt;, linear_06 &amp;lt;dbl&amp;gt;, linear_07 &amp;lt;dbl&amp;gt;, linear_08 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># linear_09 &amp;lt;dbl&amp;gt;, linear_10 &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now that we have the data we can the resamples we want. We assigned weights before creating the resamples so that information is being carried into the resamples. The weights are not used in the creation of the resamples.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>sim_folds&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>vfold_cv&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>training_sim&lt;/span>, strata &lt;span class='o'>=&lt;/span> &lt;span class='nv'>class&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>When creating the model specification we don&amp;rsquo;t need to do anything special, as parsnip will apply case weights when there is support for it. If you are unsure if a model supports case weights you can consult the documentation or the &lt;code>show_model_info()&lt;/code> function, like so: &lt;code>show_model_info(&amp;quot;logistic_reg&amp;quot;)&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lr_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>logistic_reg&lt;/span>&lt;span class='o'>(&lt;/span>penalty &lt;span class='o'>=&lt;/span> &lt;span class='nf'>tune&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, mixture &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"glmnet"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Next, we will set up a recipe for preprocessing&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>sim_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>class&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>training_sim&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>step_ns&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>starts_with&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"non_linear"&lt;/span>&lt;span class='o'>)&lt;/span>, deg_free &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>step_normalize&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>sim_rec&lt;/span>
&lt;span class='c'>#&amp;gt; Recipe&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Inputs:&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; role #variables&lt;/span>
&lt;span class='c'>#&amp;gt; case_weights 1&lt;/span>
&lt;span class='c'>#&amp;gt; outcome 1&lt;/span>
&lt;span class='c'>#&amp;gt; predictor 15&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Operations:&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Natural splines on starts_with("non_linear")&lt;/span>
&lt;span class='c'>#&amp;gt; Centering and scaling for all_numeric_predictors()&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The recipe automatically detects the case weights even though they are captured by the dot on the right-hand side of the formula. The recipe automatically sets its role and will error if that column is changed in any way.&lt;/p>
&lt;p>As mentioned above, any unsupervised steps are unaffected by importance weights so neither &lt;code>step_ns()&lt;/code> or &lt;code>step_normalize()&lt;/code> use the weights in their calculations.&lt;/p>
&lt;p>When using case weights, we would like to encourage users to keep their model and preprocessing tool within a workflow. The workflows package now has an add_case_weights() function to help here:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>lr_wflow&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>add_model&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lr_spec&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>add_recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sim_rec&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>add_case_weights&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>case_wts&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lr_wflow&lt;/span>
&lt;span class='c'>#&amp;gt; ══ Workflow ════════════════════════════════════════════════════════════════════&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Preprocessor:&lt;/span> Recipe&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Model:&lt;/span> logistic_reg()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; ── Preprocessor ────────────────────────────────────────────────────────────────&lt;/span>
&lt;span class='c'>#&amp;gt; 2 Recipe Steps&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; • step_ns()&lt;/span>
&lt;span class='c'>#&amp;gt; • step_normalize()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; ── Case Weights ────────────────────────────────────────────────────────────────&lt;/span>
&lt;span class='c'>#&amp;gt; case_wts&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; ── Model ───────────────────────────────────────────────────────────────────────&lt;/span>
&lt;span class='c'>#&amp;gt; Logistic Regression Model Specification (classification)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Main Arguments:&lt;/span>
&lt;span class='c'>#&amp;gt; penalty = tune()&lt;/span>
&lt;span class='c'>#&amp;gt; mixture = 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Computational engine: glmnet&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And that is all you need to use case weights, the remaining functions from the tune and yardstick package know how to deal with case weights depending on the type of weight.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>cls_metrics&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>metric_set&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sensitivity&lt;/span>, &lt;span class='nv'>specificity&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>grid&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>tibble&lt;/span>&lt;span class='o'>(&lt;/span>penalty &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>&lt;span class='o'>^&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/seq.html'>seq&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='m'>3&lt;/span>, &lt;span class='m'>0&lt;/span>, length.out &lt;span class='o'>=&lt;/span> &lt;span class='m'>20&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>lr_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nv'>lr_wflow&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>tune_grid&lt;/span>&lt;span class='o'>(&lt;/span>resamples &lt;span class='o'>=&lt;/span> &lt;span class='nv'>sim_folds&lt;/span>, grid &lt;span class='o'>=&lt;/span> &lt;span class='nv'>grid&lt;/span>, metrics &lt;span class='o'>=&lt;/span> &lt;span class='nv'>cls_metrics&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>autoplot&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>lr_res&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-8-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;h2 id="non-standard-roles-in-recipes">Non-standard roles in recipes
&lt;a href="#non-standard-roles-in-recipes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The recipes package use the idea of roles to determine how and when the different variables are used. The main roles are &lt;code>&amp;quot;outcome&amp;quot;&lt;/code>, &lt;code>&amp;quot;predictor&amp;quot;&lt;/code>, and now &lt;code>&amp;quot;case_weights&amp;quot;&lt;/code>. You are also able to change the roles of these variables using &lt;code>add_role()&lt;/code> and &lt;code>update_role()&lt;/code>.&lt;/p>
&lt;p>With a recent addition of case weights as another type of standard role, we have made recipes more robust. It now checks that all columns in the &lt;code>data&lt;/code> supplied to &lt;code>recipe()&lt;/code> are also present in the &lt;code>new_data&lt;/code> supplied to &lt;code>bake()&lt;/code>. An exception is made for columns with roles of either &lt;code>&amp;quot;outcome&amp;quot;&lt;/code> or &lt;code>&amp;quot;case_weights&amp;quot;&lt;/code> because these are typically not required at &lt;code>bake()&lt;/code> time.&lt;/p>
&lt;p>This change for stricter checking of roles will mean that you might need to make some small changes to your code if you are using non-standard roles.&lt;/p>
&lt;p>Let&amp;rsquo;s look at the &lt;code>tate_text&lt;/code> data set as an example:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tate_text"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>glimpse&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tate_text&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Rows: 4,284&lt;/span>
&lt;span class='c'>#&amp;gt; Columns: 5&lt;/span>
&lt;span class='c'>#&amp;gt; $ id &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 21926, 20472, 20474, 20473, 20513, 21389, 121187, 19455, 20938,…&lt;/span>
&lt;span class='c'>#&amp;gt; $ artist &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> "Absalon", "Auerbach, Frank", "Auerbach, Frank", "Auerbach, Fra…&lt;/span>
&lt;span class='c'>#&amp;gt; $ title &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> "Proposals for a Habitat", "Michael", "Geoffrey", "Jake", "To t…&lt;/span>
&lt;span class='c'>#&amp;gt; $ medium &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> "Video, monitor or projection, colour and sound (stereo)", "Etc…&lt;/span>
&lt;span class='c'>#&amp;gt; $ year &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 199…&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This data set includes an &lt;code>id&lt;/code> variable that shouldn&amp;rsquo;t have any predictive power and a &lt;code>title&lt;/code> variable that we want to ignore for now. We can let the recipe know that we don&amp;rsquo;t want it to treat &lt;code>id&lt;/code> and &lt;code>title&lt;/code> as predictors by giving them a different role which we will call &lt;code>&amp;quot;id&amp;quot;&lt;/code> here:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>tate_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>year&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>tate_text&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>update_role&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>id&lt;/span>, &lt;span class='nv'>title&lt;/span>, new_role &lt;span class='o'>=&lt;/span> &lt;span class='s'>"id"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>step_dummy_extract&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>artist&lt;/span>, &lt;span class='nv'>medium&lt;/span>, sep &lt;span class='o'>=&lt;/span> &lt;span class='s'>", "&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>tate_rec_prepped&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>prep&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tate_rec&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This will now error when we try to apply the recipe to new data that contains only our predictors:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>new_painting&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>tibble&lt;/span>&lt;span class='o'>(&lt;/span>
artist &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Hamilton, Richard"&lt;/span>,
medium &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Letterpress on paper"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>bake&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tate_rec_prepped&lt;/span>, &lt;span class='nv'>new_painting&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `bake()`:&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> The following required columns are missing from `new_data`: "id", "title".&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span> These columns have one of the following roles, which are required at `bake()` time: "id".&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span> If these roles are not required at `bake()` time, use `update_role_requirements(role = "your_role", bake = FALSE)`.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>It complains because the recipe is expecting the &lt;code>id&lt;/code> and &lt;code>title&lt;/code> variables to be in the data set passed to &lt;code>bake()&lt;/code>. We can use
&lt;a href="https://recipes.tidymodels.org/reference/update_role_requirements.html" target="_blank" rel="noopener">update_role_requirements()&lt;/a> to tell the recipe that variables of role &lt;code>&amp;quot;id&amp;quot;&lt;/code> are not required when baking and we are good to go!&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>tate_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>year&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>tate_text&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>update_role&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>id&lt;/span>, &lt;span class='nv'>title&lt;/span>, new_role &lt;span class='o'>=&lt;/span> &lt;span class='s'>"id"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>update_role_requirements&lt;/span>&lt;span class='o'>(&lt;/span>role &lt;span class='o'>=&lt;/span> &lt;span class='s'>"id"&lt;/span>, bake &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>step_dummy_extract&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>artist&lt;/span>, &lt;span class='nv'>medium&lt;/span>, sep &lt;span class='o'>=&lt;/span> &lt;span class='s'>", "&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>tate_rec_prepped&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>prep&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tate_rec&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>bake&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tate_rec_prepped&lt;/span>, &lt;span class='nv'>new_painting&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 2,675&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; artist_Abigail artist_Abraham artist_Absalon artist_Abts artist_Achill&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 2,670 more variables: artist_Ackroyd &amp;lt;dbl&amp;gt;, artist_Adam &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># artist_Agnes &amp;lt;dbl&amp;gt;, artist_Ahtila &amp;lt;dbl&amp;gt;, artist_Ai &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># artist_Akram &amp;lt;dbl&amp;gt;, artist_Aksel &amp;lt;dbl&amp;gt;, artist_Al &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># artist_Al.Ani &amp;lt;dbl&amp;gt;, artist_Alan &amp;lt;dbl&amp;gt;, artist_Albert &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># artist_Aleksandra &amp;lt;dbl&amp;gt;, artist_Alex &amp;lt;dbl&amp;gt;, artist_Alexander &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># artist_Alexandre.da &amp;lt;dbl&amp;gt;, artist_Alfredo &amp;lt;dbl&amp;gt;, artist_Alice &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># artist_Alimpiev &amp;lt;dbl&amp;gt;, artist_Alison &amp;lt;dbl&amp;gt;, artist_Allen &amp;lt;dbl&amp;gt;, …&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>applicable
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/marlycormar" target="_blank" rel="noopener">@marlycormar&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>baguette:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bonsai:
&lt;a href="https://github.com/bwilkowski" target="_blank" rel="noopener">@bwilkowski&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/pinogl" target="_blank" rel="noopener">@pinogl&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>broom:
&lt;a href="https://github.com/behrman" target="_blank" rel="noopener">@behrman&lt;/a>,
&lt;a href="https://github.com/corybrunson" target="_blank" rel="noopener">@corybrunson&lt;/a>,
&lt;a href="https://github.com/fschaffner" target="_blank" rel="noopener">@fschaffner&lt;/a>,
&lt;a href="https://github.com/gjones1219" target="_blank" rel="noopener">@gjones1219&lt;/a>,
&lt;a href="https://github.com/grantmcdermott" target="_blank" rel="noopener">@grantmcdermott&lt;/a>,
&lt;a href="https://github.com/mfansler" target="_blank" rel="noopener">@mfansler&lt;/a>,
&lt;a href="https://github.com/michaeltopper1" target="_blank" rel="noopener">@michaeltopper1&lt;/a>,
&lt;a href="https://github.com/ray-p144" target="_blank" rel="noopener">@ray-p144&lt;/a>,
&lt;a href="https://github.com/RichardJActon" target="_blank" rel="noopener">@RichardJActon&lt;/a>,
&lt;a href="https://github.com/russHyde" target="_blank" rel="noopener">@russHyde&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/tappek" target="_blank" rel="noopener">@tappek&lt;/a>,
&lt;a href="https://github.com/Timelessprod" target="_blank" rel="noopener">@Timelessprod&lt;/a>, and
&lt;a href="https://github.com/vincentarelbundock" target="_blank" rel="noopener">@vincentarelbundock&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>butcher:
&lt;a href="https://github.com/cregouby" target="_blank" rel="noopener">@cregouby&lt;/a>,
&lt;a href="https://github.com/davidkane9" target="_blank" rel="noopener">@davidkane9&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>censored:
&lt;a href="https://github.com/bcjaeger" target="_blank" rel="noopener">@bcjaeger&lt;/a>,
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/erikvona" target="_blank" rel="noopener">@erikvona&lt;/a>,
&lt;a href="https://github.com/gvelasq" target="_blank" rel="noopener">@gvelasq&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>corrr:
&lt;a href="https://github.com/astamm" target="_blank" rel="noopener">@astamm&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/john-s-f" target="_blank" rel="noopener">@john-s-f&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/thisisdaryn" target="_blank" rel="noopener">@thisisdaryn&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>dials:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/franzbischoff" target="_blank" rel="noopener">@franzbischoff&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/py9mrg" target="_blank" rel="noopener">@py9mrg&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>discrim:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jmarshallnz" target="_blank" rel="noopener">@jmarshallnz&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>embed:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/exsell-jc" target="_blank" rel="noopener">@exsell-jc&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mkhansa" target="_blank" rel="noopener">@mkhansa&lt;/a>,
&lt;a href="https://github.com/talegari" target="_blank" rel="noopener">@talegari&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>hardhat:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>infer:
&lt;a href="https://github.com/gdbassett" target="_blank" rel="noopener">@gdbassett&lt;/a>,
&lt;a href="https://github.com/liubao210" target="_blank" rel="noopener">@liubao210&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>modeldata:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jbkunst" target="_blank" rel="noopener">@jbkunst&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>multilevelmod:
&lt;a href="https://github.com/a-difabio" target="_blank" rel="noopener">@a-difabio&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/sitendug" target="_blank" rel="noopener">@sitendug&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/YiweiZhu" target="_blank" rel="noopener">@YiweiZhu&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>parsnip:
&lt;a href="https://github.com/bappa10085" target="_blank" rel="noopener">@bappa10085&lt;/a>,
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/cb12991" target="_blank" rel="noopener">@cb12991&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/deschen1" target="_blank" rel="noopener">@deschen1&lt;/a>,
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/emmamendelsohn" target="_blank" rel="noopener">@emmamendelsohn&lt;/a>,
&lt;a href="https://github.com/exsell-jc" target="_blank" rel="noopener">@exsell-jc&lt;/a>,
&lt;a href="https://github.com/fdeoliveirag" target="_blank" rel="noopener">@fdeoliveirag&lt;/a>,
&lt;a href="https://github.com/gundalav" target="_blank" rel="noopener">@gundalav&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jmarshallnz" target="_blank" rel="noopener">@jmarshallnz&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/Npaffen" target="_blank" rel="noopener">@Npaffen&lt;/a>,
&lt;a href="https://github.com/oj713" target="_blank" rel="noopener">@oj713&lt;/a>,
&lt;a href="https://github.com/pmags" target="_blank" rel="noopener">@pmags&lt;/a>,
&lt;a href="https://github.com/PursuitOfDataScience" target="_blank" rel="noopener">@PursuitOfDataScience&lt;/a>,
&lt;a href="https://github.com/qiushiyan" target="_blank" rel="noopener">@qiushiyan&lt;/a>,
&lt;a href="https://github.com/salim-b" target="_blank" rel="noopener">@salim-b&lt;/a>,
&lt;a href="https://github.com/shosaco" target="_blank" rel="noopener">@shosaco&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/tolliam" target="_blank" rel="noopener">@tolliam&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>plsmod:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>poissonreg:
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>recipes:
&lt;a href="https://github.com/abichat" target="_blank" rel="noopener">@abichat&lt;/a>,
&lt;a href="https://github.com/albertiniufu" target="_blank" rel="noopener">@albertiniufu&lt;/a>,
&lt;a href="https://github.com/AndrewKostandy" target="_blank" rel="noopener">@AndrewKostandy&lt;/a>,
&lt;a href="https://github.com/aridf" target="_blank" rel="noopener">@aridf&lt;/a>,
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/cb12991" target="_blank" rel="noopener">@cb12991&lt;/a>,
&lt;a href="https://github.com/conorjudge" target="_blank" rel="noopener">@conorjudge&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/duccioa" target="_blank" rel="noopener">@duccioa&lt;/a>,
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/exsell-jc" target="_blank" rel="noopener">@exsell-jc&lt;/a>,
&lt;a href="https://github.com/gundalav" target="_blank" rel="noopener">@gundalav&lt;/a>,
&lt;a href="https://github.com/hsbadr" target="_blank" rel="noopener">@hsbadr&lt;/a>,
&lt;a href="https://github.com/jkennel" target="_blank" rel="noopener">@jkennel&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/kendonB" target="_blank" rel="noopener">@kendonB&lt;/a>,
&lt;a href="https://github.com/krzjoa" target="_blank" rel="noopener">@krzjoa&lt;/a>,
&lt;a href="https://github.com/madprogramer" target="_blank" rel="noopener">@madprogramer&lt;/a>,
&lt;a href="https://github.com/mdporter" target="_blank" rel="noopener">@mdporter&lt;/a>,
&lt;a href="https://github.com/mdsteiner" target="_blank" rel="noopener">@mdsteiner&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>,
&lt;a href="https://github.com/PursuitOfDataScience" target="_blank" rel="noopener">@PursuitOfDataScience&lt;/a>,
&lt;a href="https://github.com/r2evans" target="_blank" rel="noopener">@r2evans&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/szymonkusak" target="_blank" rel="noopener">@szymonkusak&lt;/a>,
&lt;a href="https://github.com/themichjam" target="_blank" rel="noopener">@themichjam&lt;/a>,
&lt;a href="https://github.com/tmastny" target="_blank" rel="noopener">@tmastny&lt;/a>,
&lt;a href="https://github.com/tomazweiss" target="_blank" rel="noopener">@tomazweiss&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/TylerGrantSmith" target="_blank" rel="noopener">@TylerGrantSmith&lt;/a>, and
&lt;a href="https://github.com/zenggyu" target="_blank" rel="noopener">@zenggyu&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rsample:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dfalbel" target="_blank" rel="noopener">@dfalbel&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mdporter" target="_blank" rel="noopener">@mdporter&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/pgoodling-usgs" target="_blank" rel="noopener">@pgoodling-usgs&lt;/a>,
&lt;a href="https://github.com/sametsoekel" target="_blank" rel="noopener">@sametsoekel&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/wkdavis" target="_blank" rel="noopener">@wkdavis&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rules:
&lt;a href="https://github.com/DesmondChoy" target="_blank" rel="noopener">@DesmondChoy&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/wdkeyzer" target="_blank" rel="noopener">@wdkeyzer&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>shinymodels:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>spatialsample:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/MxNl" target="_blank" rel="noopener">@MxNl&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>, and
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>stacks:
&lt;a href="https://github.com/amcmahon17" target="_blank" rel="noopener">@amcmahon17&lt;/a>,
&lt;a href="https://github.com/domijan" target="_blank" rel="noopener">@domijan&lt;/a>,
&lt;a href="https://github.com/Jeffrothschild" target="_blank" rel="noopener">@Jeffrothschild&lt;/a>,
&lt;a href="https://github.com/mcavs" target="_blank" rel="noopener">@mcavs&lt;/a>,
&lt;a href="https://github.com/mvt-oviedo" target="_blank" rel="noopener">@mvt-oviedo&lt;/a>,
&lt;a href="https://github.com/osorensen" target="_blank" rel="noopener">@osorensen&lt;/a>,
&lt;a href="https://github.com/py9mrg" target="_blank" rel="noopener">@py9mrg&lt;/a>,
&lt;a href="https://github.com/rcannood" target="_blank" rel="noopener">@rcannood&lt;/a>,
&lt;a href="https://github.com/Saarialho" target="_blank" rel="noopener">@Saarialho&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/williamshell" target="_blank" rel="noopener">@williamshell&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>textrecipes:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/NLDataScientist" target="_blank" rel="noopener">@NLDataScientist&lt;/a>,
&lt;a href="https://github.com/PursuitOfDataScience" target="_blank" rel="noopener">@PursuitOfDataScience&lt;/a>, and
&lt;a href="https://github.com/raj-hubber" target="_blank" rel="noopener">@raj-hubber&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>themis:
&lt;a href="https://github.com/coforfe" target="_blank" rel="noopener">@coforfe&lt;/a>, and
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tidymodels:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EngrStudent" target="_blank" rel="noopener">@EngrStudent&lt;/a>,
&lt;a href="https://github.com/exsell-jc" target="_blank" rel="noopener">@exsell-jc&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/kcarnold" target="_blank" rel="noopener">@kcarnold&lt;/a>,
&lt;a href="https://github.com/scottlyden" target="_blank" rel="noopener">@scottlyden&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tidyposterior:
&lt;a href="https://github.com/jmgirard" target="_blank" rel="noopener">@jmgirard&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/mone27" target="_blank" rel="noopener">@mone27&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tidypredict:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tune:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dax44" target="_blank" rel="noopener">@dax44&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/felxcon" target="_blank" rel="noopener">@felxcon&lt;/a>,
&lt;a href="https://github.com/franzbischoff" target="_blank" rel="noopener">@franzbischoff&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/munoztd0" target="_blank" rel="noopener">@munoztd0&lt;/a>,
&lt;a href="https://github.com/nikhilpathiyil" target="_blank" rel="noopener">@nikhilpathiyil&lt;/a>,
&lt;a href="https://github.com/pgoodling-usgs" target="_blank" rel="noopener">@pgoodling-usgs&lt;/a>,
&lt;a href="https://github.com/py9mrg" target="_blank" rel="noopener">@py9mrg&lt;/a>,
&lt;a href="https://github.com/qiushiyan" target="_blank" rel="noopener">@qiushiyan&lt;/a>,
&lt;a href="https://github.com/siegfried" target="_blank" rel="noopener">@siegfried&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/thegargiulian" target="_blank" rel="noopener">@thegargiulian&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/williamshell" target="_blank" rel="noopener">@williamshell&lt;/a>, and
&lt;a href="https://github.com/wtbxsjy" target="_blank" rel="noopener">@wtbxsjy&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>usemodels:
&lt;a href="https://github.com/aloes2512" target="_blank" rel="noopener">@aloes2512&lt;/a>,
&lt;a href="https://github.com/amcmahon17" target="_blank" rel="noopener">@amcmahon17&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/larry77" target="_blank" rel="noopener">@larry77&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>workflows:
&lt;a href="https://github.com/CarstenLange" target="_blank" rel="noopener">@CarstenLange&lt;/a>,
&lt;a href="https://github.com/dajmcdon" target="_blank" rel="noopener">@dajmcdon&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/themichjam" target="_blank" rel="noopener">@themichjam&lt;/a>, and
&lt;a href="https://github.com/TylerGrantSmith" target="_blank" rel="noopener">@TylerGrantSmith&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>workflowsets:
&lt;a href="https://github.com/a-difabio" target="_blank" rel="noopener">@a-difabio&lt;/a>,
&lt;a href="https://github.com/BorisDelange" target="_blank" rel="noopener">@BorisDelange&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/wdefreitas" target="_blank" rel="noopener">@wdefreitas&lt;/a>, and
&lt;a href="https://github.com/yonicd" target="_blank" rel="noopener">@yonicd&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>yardstick:
&lt;a href="https://github.com/1lliter8" target="_blank" rel="noopener">@1lliter8&lt;/a>,
&lt;a href="https://github.com/amcmahon17" target="_blank" rel="noopener">@amcmahon17&lt;/a>,
&lt;a href="https://github.com/brshallo" target="_blank" rel="noopener">@brshallo&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/gsverhoeven" target="_blank" rel="noopener">@gsverhoeven&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/parsifal9" target="_blank" rel="noopener">@parsifal9&lt;/a>, and
&lt;a href="https://github.com/sametsoekel" target="_blank" rel="noopener">@sametsoekel&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>bonsai 0.1.0</title><link>https://www.tidyverse.org/blog/2022/06/bonsai-0-1-0/</link><pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/06/bonsai-0-1-0/</guid><description>&lt;p>We&amp;rsquo;re super stoked to announce the first release of the
&lt;a href="https://bonsai.tidymodels.org/" target="_blank" rel="noopener">bonsai&lt;/a> package on CRAN! bonsai is a
&lt;a href="https://parsnip.tidymodels.org/" target="_blank" rel="noopener">parsnip&lt;/a> extension package for tree-based models.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"bonsai"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Without extension packages, the parsnip package already supports fitting decision trees, random forests, and boosted trees. The bonsai package introduces support for two additional engines that implement variants of these algorithms:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://CRAN.R-project.org/package=partykit" target="_blank" rel="noopener">partykit&lt;/a>: conditional inference trees via
&lt;a href="https://parsnip.tidymodels.org/reference/decision_tree.html" target="_blank" rel="noopener">&lt;code>decision_tree()&lt;/code>&lt;/a> and conditional random forests via
&lt;a href="https://parsnip.tidymodels.org/reference/rand_forest.html" target="_blank" rel="noopener">&lt;code>rand_forest()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://CRAN.R-project.org/package=lightgbm" target="_blank" rel="noopener">LightGBM&lt;/a>: optimized gradient boosted trees via
&lt;a href="https://parsnip.tidymodels.org/reference/boost_tree.html" target="_blank" rel="noopener">&lt;code>boost_tree()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>As we introduce further support for tree-based model engines in the tidymodels, new implementations will reside in this package (rather than parsnip).&lt;/p>
&lt;p>To demonstrate how to use the package, we&amp;rsquo;ll fit a few tree-based models and explore their output. First, loading bonsai as well as the rest of the tidymodels core packages:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://bonsai.tidymodels.org/'>bonsai&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Loading required package: parsnip&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching packages&lt;/span> ────────────────────────────────────── tidymodels 0.2.0 ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>broom &lt;/span> 0.8.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>rsample &lt;/span> 0.1.1 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dials &lt;/span> 1.0.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tibble &lt;/span> 3.1.7 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dplyr &lt;/span> 1.0.9 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tidyr &lt;/span> 1.2.0 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>ggplot2 &lt;/span> 3.3.6 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tune &lt;/span> 0.2.0 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>infer &lt;/span> 1.0.2 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflows &lt;/span> 0.2.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>modeldata &lt;/span> 0.1.1.&lt;span style='color: #BB0000;'>9000&lt;/span> &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflowsets&lt;/span> 0.2.1 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>purrr &lt;/span> 0.3.4 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>yardstick &lt;/span> 1.0.0 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>recipes &lt;/span> 0.2.0&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ───────────────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>purrr&lt;/span>::&lt;span style='color: #00BB00;'>discard()&lt;/span> masks &lt;span style='color: #0000BB;'>scales&lt;/span>::discard()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>recipes&lt;/span>::&lt;span style='color: #00BB00;'>step()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::step()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>•&lt;/span> Dig deeper into tidy modeling with R at &lt;span style='color: #00BB00;'>https://www.tmwr.org&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that we use a development version of the
&lt;a href="https://modeldata.tidymodels.org/" target="_blank" rel="noopener">modeldata&lt;/a> package to generate example data later on in this post using the new &lt;code>sim_regression()&lt;/code> function&amp;mdash;you can install this version of the package using &lt;code>pak::pak(tidymodels/modeldata)&lt;/code>.&lt;/p>
&lt;p>We&amp;rsquo;ll use a
&lt;a href="https://allisonhorst.github.io/palmerpenguins/" target="_blank" rel="noopener">dataset&lt;/a> containing measurements on 3 different species of penguins as an example. Loading that data in and checking it out:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>penguins&lt;/span>, package &lt;span class='o'>=&lt;/span> &lt;span class='s'>"modeldata"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/str.html'>str&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; tibble [344 × 7] (S3: tbl_df/tbl/data.frame)&lt;/span>
&lt;span class='c'>#&amp;gt; $ species : Factor w/ 3 levels "Adelie","Chinstrap",..: 1 1 1 1 1 1 1 1 1 1 ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ island : Factor w/ 3 levels "Biscoe","Dream",..: 3 3 3 3 3 3 3 3 3 3 ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ bill_length_mm : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ bill_depth_mm : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ body_mass_g : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...&lt;/span>
&lt;span class='c'>#&amp;gt; $ sex : Factor w/ 2 levels "female","male": 2 1 1 NA 1 2 1 2 NA NA ...&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Specifically, we&amp;rsquo;ll make use of flipper length and home island to model a penguin&amp;rsquo;s species:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>ggplot&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>penguins&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>aes&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>island&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>flipper_length_mm&lt;/span>, col &lt;span class='o'>=&lt;/span> &lt;span class='nv'>species&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>geom_jitter&lt;/span>&lt;span class='o'>(&lt;/span>width &lt;span class='o'>=&lt;/span> &lt;span class='m'>.2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/penguin-plot-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Looking at this plot, you might begin to imagine your own simple set of binary splits for guessing which species a penguin might be given its home island and flipper length. Given that this small set of predictors almost completely separates our outcome with only a few splits, a relatively simple tree should serve our purposes just fine.&lt;/p>
&lt;h2 id="decision-trees">Decision Trees
&lt;a href="#decision-trees">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>bonsai introduces support for fitting decision trees with partykit, which implements a variety of decision trees called conditional inference trees (CITs).&lt;/p>
&lt;p>CITs differ from implementations of decision trees available elsewhere in the tidymodels in the criteria used to generate splits. The details of how these criteria differ are outside of the scope of this post.&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> Practically, though, CITs offer a few notable advantages over CART- and C5.0-based decision trees:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Overfitting&lt;/strong>: Common implementations of decision trees are notoriously prone to overfitting, and require several well-chosen penalization (i.e. cost-complexity) and early stopping (e.g. pruning, max depth) hyperparameters to fit a model that will perform well when predicting on new observations. &amp;ldquo;Out-of-the-box,&amp;rdquo; CITs are not as prone to these same issues and do not accept a penalization parameter at all.&lt;/li>
&lt;li>&lt;strong>Selection bias&lt;/strong>: Common implementations of decision trees are biased towards selecting variables with many possible split points or missing values. CITs are natively not prone to the first issue, and many popular implementations address the second vulnerability.&lt;/li>
&lt;/ul>
&lt;p>To define a conditional inference tree model specification, just set the modeling engine to &lt;code>&amp;quot;partykit&amp;quot;&lt;/code> when creating a decision tree. Fitting to the penguins data, then:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dt_mod&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/decision_tree.html'>decision_tree&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>engine &lt;span class='o'>=&lt;/span> &lt;span class='s'>"partykit"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mode &lt;span class='o'>=&lt;/span> &lt;span class='s'>"classification"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
formula &lt;span class='o'>=&lt;/span> &lt;span class='nv'>species&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>flipper_length_mm&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>island&lt;/span>,
data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>penguins&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>dt_mod&lt;/span>
&lt;span class='c'>#&amp;gt; parsnip model object&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Model formula:&lt;/span>
&lt;span class='c'>#&amp;gt; species ~ flipper_length_mm + island&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Fitted party:&lt;/span>
&lt;span class='c'>#&amp;gt; [1] root&lt;/span>
&lt;span class='c'>#&amp;gt; | [2] island in Biscoe&lt;/span>
&lt;span class='c'>#&amp;gt; | | [3] flipper_length_mm &amp;lt;= 203&lt;/span>
&lt;span class='c'>#&amp;gt; | | | [4] flipper_length_mm &amp;lt;= 196: Adelie (n = 38, err = 0.0%)&lt;/span>
&lt;span class='c'>#&amp;gt; | | | [5] flipper_length_mm &amp;gt; 196: Adelie (n = 8, err = 25.0%)&lt;/span>
&lt;span class='c'>#&amp;gt; | | [6] flipper_length_mm &amp;gt; 203: Gentoo (n = 122, err = 0.0%)&lt;/span>
&lt;span class='c'>#&amp;gt; | [7] island in Dream, Torgersen&lt;/span>
&lt;span class='c'>#&amp;gt; | | [8] island in Dream&lt;/span>
&lt;span class='c'>#&amp;gt; | | | [9] flipper_length_mm &amp;lt;= 192: Adelie (n = 59, err = 33.9%)&lt;/span>
&lt;span class='c'>#&amp;gt; | | | [10] flipper_length_mm &amp;gt; 192: Chinstrap (n = 65, err = 26.2%)&lt;/span>
&lt;span class='c'>#&amp;gt; | | [11] island in Torgersen: Adelie (n = 52, err = 0.0%)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Number of inner nodes: 5&lt;/span>
&lt;span class='c'>#&amp;gt; Number of terminal nodes: 6&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Do any of these splits line up with your intuition? This tree results in only 6 terminal nodes and describes the structure shown in the above plot quite well.&lt;/p>
&lt;p>Read more about this implementation of decision trees in
&lt;a href="https://parsnip.tidymodels.org/reference/details_decision_tree_partykit.html" target="_blank" rel="noopener">&lt;code>?details_decision_tree_partykit&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="random-forests">Random Forests
&lt;a href="#random-forests">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One generalization of a decision tree is a &lt;em>random forest&lt;/em>, which fits a large number of decision trees, each independently of the others. The fitted random forest model combines predictions from the individual decision trees to generate its predictions.&lt;/p>
&lt;p>bonsai introduces support for random forests using the &lt;code>partykit&lt;/code> engine, which implements an algorithm called a &lt;em>conditional random forest&lt;/em>. Conditional random forests are a type of random forest that uses conditional inference trees (like the one we fit above!) for its constituent decision trees.&lt;/p>
&lt;p>To fit a conditional random forest with partykit, our code looks pretty similar to that which we we needed to fit a conditional inference tree. Just switch out
&lt;a href="https://parsnip.tidymodels.org/reference/decision_tree.html" target="_blank" rel="noopener">&lt;code>decision_tree()&lt;/code>&lt;/a> with
&lt;a href="https://parsnip.tidymodels.org/reference/rand_forest.html" target="_blank" rel="noopener">&lt;code>rand_forest()&lt;/code>&lt;/a> and remember to keep the engine set as &lt;code>&amp;quot;partykit&amp;quot;&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>rf_mod&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/rand_forest.html'>rand_forest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>engine &lt;span class='o'>=&lt;/span> &lt;span class='s'>"partykit"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mode &lt;span class='o'>=&lt;/span> &lt;span class='s'>"classification"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
formula &lt;span class='o'>=&lt;/span> &lt;span class='nv'>species&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>flipper_length_mm&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>island&lt;/span>,
data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>penguins&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Read more about this implementation of random forests in
&lt;a href="https://parsnip.tidymodels.org/reference/details_rand_forest_partykit.html" target="_blank" rel="noopener">&lt;code>?details_rand_forest_partykit&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="boosted-trees">Boosted Trees
&lt;a href="#boosted-trees">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Another generalization of a decision tree is a series of decision trees where &lt;em>each tree depends on the results of previous trees&lt;/em>&amp;mdash;this is called a &lt;em>boosted tree&lt;/em>. bonsai implements an additional parsnip engine for this model type called &lt;code>&amp;quot;lightgbm&amp;quot;&lt;/code>. While fitting boosted trees is quite computationally intensive, especially with high-dimensional data, LightGBM provides an implementation of a highly efficient variant of the algorithm.&lt;/p>
&lt;p>To make use of it, start out with a &lt;code>boost_tree&lt;/code> model spec and set &lt;code>engine = &amp;quot;lightgbm&amp;quot;&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>bt_mod&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/boost_tree.html'>boost_tree&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>engine &lt;span class='o'>=&lt;/span> &lt;span class='s'>"lightgbm"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mode &lt;span class='o'>=&lt;/span> &lt;span class='s'>"classification"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
formula &lt;span class='o'>=&lt;/span> &lt;span class='nv'>species&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>flipper_length_mm&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>island&lt;/span>,
data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>penguins&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The main benefit of using LightGBM is its computational efficiency: as the number of observations in training data increases, we can observe an increasingly substantial decrease in time-to-fit when using the LightGBM engine as compared to other implementations of boosted trees, like XGBoost.&lt;/p>
&lt;p>To show this, we&amp;rsquo;ll use the &lt;code>sim_regression()&lt;/code> function from modeldata to simulate increasingly large datasets that we can fit models to. For example, generating a dataset with 10 observations and 20 numeric predictors:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>sim_regression&lt;/span>&lt;span class='o'>(&lt;/span>num_samples &lt;span class='o'>=&lt;/span> &lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 10 × 21&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; outcome predictor_01 predictor_02 predictor_03 predictor_04 predictor_05&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 41.9 -&lt;span style='color: #BB0000;'>3.15&lt;/span> 3.72 -&lt;span style='color: #BB0000;'>0.800&lt;/span> -&lt;span style='color: #BB0000;'>5.87&lt;/span> 0.265&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 49.4 4.93 6.15 5.09 0.501 -&lt;span style='color: #BB0000;'>2.45&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> -&lt;span style='color: #BB0000;'>9.20&lt;/span> 0.020&lt;span style='text-decoration: underline;'>0&lt;/span> -&lt;span style='color: #BB0000;'>2.31&lt;/span> 4.64 0.422 3.14 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> -&lt;span style='color: #BB0000;'>0.385&lt;/span> -&lt;span style='color: #BB0000;'>1.97&lt;/span> -&lt;span style='color: #BB0000;'>2.56&lt;/span> -&lt;span style='color: #BB0000;'>0.018&lt;/span>&lt;span style='color: #BB0000; text-decoration: underline;'>2&lt;/span> 1.83 -&lt;span style='color: #BB0000;'>4.23&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 8.08 -&lt;span style='color: #BB0000;'>0.266&lt;/span> -&lt;span style='color: #BB0000;'>0.574&lt;/span> -&lt;span style='color: #BB0000;'>1.08&lt;/span> -&lt;span style='color: #BB0000;'>1.75&lt;/span> 1.57 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 3.79 0.145 3.86 3.91 3.32 -&lt;span style='color: #BB0000;'>4.27&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 1.12 -&lt;span style='color: #BB0000;'>6.35&lt;/span> -&lt;span style='color: #BB0000;'>2.39&lt;/span> 0.119 0.848 1.74 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 3.21 4.56 3.20 -&lt;span style='color: #BB0000;'>2.68&lt;/span> -&lt;span style='color: #BB0000;'>1.11&lt;/span> 0.729&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> -&lt;span style='color: #BB0000;'>4.56&lt;/span> 2.97 -&lt;span style='color: #BB0000;'>1.36&lt;/span> -&lt;span style='color: #BB0000;'>1.90&lt;/span> -&lt;span style='color: #BB0000;'>1.01&lt;/span> 0.557&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 0.140 -&lt;span style='color: #BB0000;'>0.234&lt;/span> -&lt;span style='color: #BB0000;'>1.05&lt;/span> 0.551 0.861 -&lt;span style='color: #BB0000;'>0.937&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 15 more variables: predictor_06 &amp;lt;dbl&amp;gt;, predictor_07 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># predictor_08 &amp;lt;dbl&amp;gt;, predictor_09 &amp;lt;dbl&amp;gt;, predictor_10 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># predictor_11 &amp;lt;dbl&amp;gt;, predictor_12 &amp;lt;dbl&amp;gt;, predictor_13 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># predictor_14 &amp;lt;dbl&amp;gt;, predictor_15 &amp;lt;dbl&amp;gt;, predictor_16 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># predictor_17 &amp;lt;dbl&amp;gt;, predictor_18 &amp;lt;dbl&amp;gt;, predictor_19 &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># predictor_20 &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now, fitting boosted trees on increasingly large datasets with XGBoost and LightGBM and observing time-to-fit:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># given an engine and nrow(training_data), return the time to fit&lt;/span>
&lt;span class='nv'>time_boost_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>engine&lt;/span>, &lt;span class='nv'>n&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nv'>time&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/system.time.html'>system.time&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/boost_tree.html'>boost_tree&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>engine &lt;span class='o'>=&lt;/span> &lt;span class='nv'>engine&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mode &lt;span class='o'>=&lt;/span> &lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
formula &lt;span class='o'>=&lt;/span> &lt;span class='nv'>outcome&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>,
data &lt;span class='o'>=&lt;/span> &lt;span class='nf'>sim_regression&lt;/span>&lt;span class='o'>(&lt;/span>num_samples &lt;span class='o'>=&lt;/span> &lt;span class='nv'>n&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>tibble&lt;/span>&lt;span class='o'>(&lt;/span>
engine &lt;span class='o'>=&lt;/span> &lt;span class='nv'>engine&lt;/span>,
n &lt;span class='o'>=&lt;/span> &lt;span class='nv'>n&lt;/span>,
time_to_fit &lt;span class='o'>=&lt;/span> &lt;span class='nv'>time&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='s'>"elapsed"&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>
&lt;span class='c'># setup engine and n_samples combinations&lt;/span>
&lt;span class='nv'>engines&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/rep.html'>rep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>XGBoost &lt;span class='o'>=&lt;/span> &lt;span class='s'>"xgboost"&lt;/span>, LightGBM &lt;span class='o'>=&lt;/span> &lt;span class='s'>"lightgbm"&lt;/span>&lt;span class='o'>)&lt;/span>, each &lt;span class='o'>=&lt;/span> &lt;span class='m'>11&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>n_samples&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Round.html'>round&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/rep.html'>rep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>10&lt;/span> &lt;span class='o'>*&lt;/span> &lt;span class='m'>10&lt;/span>&lt;span class='o'>^&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/seq.html'>seq&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2&lt;/span>, &lt;span class='m'>4.5&lt;/span>, &lt;span class='m'>.25&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, times &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># apply the function over each combination&lt;/span>
&lt;span class='nv'>fit_times&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>map2_dfr&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>engines&lt;/span>,
&lt;span class='nv'>n_samples&lt;/span>,
&lt;span class='nv'>time_boost_fit&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>
engine &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/factor.html'>factor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>engine&lt;/span>, levels &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"xgboost"&lt;/span>, &lt;span class='s'>"lightgbm"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'># visualize results&lt;/span>
&lt;span class='nf'>ggplot&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>fit_times&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>aes&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>n&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>time_to_fit&lt;/span>, col &lt;span class='o'>=&lt;/span> &lt;span class='nv'>engine&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>geom_line&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>scale_x_log10&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/boost-comparison-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>As we can see, the decrease in time-to-fit when using LightGBM as opposed to XGBoost becomes more notable as the number of rows in the training data increases.&lt;/p>
&lt;p>Read more about this implementation of boosted trees in
&lt;a href="https://parsnip.tidymodels.org/reference/details_boost_tree_lightgbm.html" target="_blank" rel="noopener">&lt;code>?details_boost_tree_lightgbm&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="other-notes">Other Notes
&lt;a href="#other-notes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This package is based off of
&lt;a href="https://github.com/curso-r/treesnip" target="_blank" rel="noopener">the treesnip package&lt;/a> by Daniel Falbel, Athos Damiani, and Roel M. Hogervorst. Users of that package will note that we have not included support for
&lt;a href="https://github.com/catboost/catboost" target="_blank" rel="noopener">the catboost package&lt;/a>. Unfortunately, the catboost R package is not on CRAN, so we&amp;rsquo;re not able to add support for the package for now. We&amp;rsquo;ll be keeping an eye on discussions in that development community and plan to support the package upon its release to CRAN!&lt;/p>
&lt;p>Each of these model specs and engines have several arguments and tuning parameters that affect user experience and results greatly. We recommend reading about each of these parameters and tuning them when you find them relevant for your modeling use case.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to Daniel Falbel, Athos Damiani, and Roel M. Hogervorst for their work on
&lt;a href="https://github.com/curso-r/treesnip" target="_blank" rel="noopener">the treesnip package&lt;/a>, on which this package is based. We&amp;rsquo;ve listed the treesnip authors as co-authors of bonsai in recognition of their help in laying the foundations for this project.&lt;/p>
&lt;p>We&amp;rsquo;re also grateful for the wonderful package hex sticker by Amanda Petri!&lt;/p>
&lt;p>Finally, thank you to those who have tested and provided feedback on the developmental versions of the package over the last couple months.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>For those interested, the
&lt;a href="https://doi.org/10.1198/106186006X133933" target="_blank" rel="noopener">original paper&lt;/a> introducing conditional inference trees describes and motivates these differences well. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>spatialsample 0.2.0</title><link>https://www.tidyverse.org/blog/2022/06/spatialsample-0-2-0/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/06/spatialsample-0-2-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re positively electrified to announce the release of
&lt;a href="https://spatialsample.tidymodels.org/" target="_blank" rel="noopener">spatialsample&lt;/a> 0.2.0. spatialsample is a package for spatial resampling, extending the
&lt;a href="https://rsample.tidymodels.org/" target="_blank" rel="noopener">rsample&lt;/a> framework to help create spatial extrapolation between your analysis and assessment data sets.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"spatialsample"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will describe the highlights of what&amp;rsquo;s new. You can see a full list of changes in the
&lt;a href="https://spatialsample.tidymodels.org/news/index.html#spatialsample-020" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="new-features">New Features
&lt;a href="#new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This version of spatialsample includes a new data set, made up of 682 hexagons containing data about tree canopy cover change in Boston, Massachusetts:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/spatialsample'>spatialsample&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://ggplot2.tidyverse.org'>ggplot2&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>boston_canopy&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggsf.html'>geom_sf&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-2-1.png" title="A map showing the spatial arrangement of hexagons making up the boston_canopy data set." alt="A map showing the spatial arrangement of hexagons making up the boston_canopy data set." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This data is stored as an sf object, and as such contains information about the proper coordinate reference system and units of measurement associated with the data.&lt;/p>
&lt;p>This brings us to the first new feature in this release of spatialsample:
&lt;a href="https://spatialsample.tidymodels.org/reference/spatial_clustering_cv.html" target="_blank" rel="noopener">&lt;code>spatial_clustering_cv()&lt;/code>&lt;/a> now supports sf objects, and will calculate distances in a way that respects coordinate reference systems (including using the s2 geometry library for geographic coordinate reference systems):&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>123&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>kmeans_clustering&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://spatialsample.tidymodels.org/reference/spatial_clustering_cv.html'>spatial_clustering_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>boston_canopy&lt;/span>, v &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>kmeans_clustering&lt;/span>
&lt;span class='c'>#&amp;gt; # 5-fold spatial cross-validation &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; splits id &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [524/158]&amp;gt;&lt;/span> Fold1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [493/189]&amp;gt;&lt;/span> Fold2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [517/165]&amp;gt;&lt;/span> Fold3&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [605/77]&amp;gt;&lt;/span> Fold4&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [589/93]&amp;gt;&lt;/span> Fold5&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This release also provides
&lt;a href="https://ggplot2.tidyverse.org/reference/autoplot.html" target="_blank" rel="noopener">&lt;code>autoplot()&lt;/code>&lt;/a> methods to visualize resamples via ggplot2, making it easy to see how exactly your data is being divided. Just call
&lt;a href="https://ggplot2.tidyverse.org/reference/autoplot.html" target="_blank" rel="noopener">&lt;code>autoplot()&lt;/code>&lt;/a> on the outputs from any spatial clustering function:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>kmeans_clustering&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>title &lt;span class='o'>=&lt;/span> &lt;span class='s'>"kmeans()"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-4-1.png" title="A map showing the boston_canopy data set broken into five folds through spatial_clustering_cv. The five folds are visibly different sizes, and are grouped by spatial proximity." alt="A map showing the boston_canopy data set broken into five folds through spatial_clustering_cv. The five folds are visibly different sizes, and are grouped by spatial proximity." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>In addition to supporting more types of data,
&lt;a href="https://spatialsample.tidymodels.org/reference/spatial_clustering_cv.html" target="_blank" rel="noopener">&lt;code>spatial_clustering_cv()&lt;/code>&lt;/a> has also been extended to support more types of clustering. Set the &lt;code>cluster_function&lt;/code> argument to use &lt;code>&amp;quot;hclust&amp;quot;&lt;/code> for hierarchical clustering via
&lt;a href="https://rdrr.io/r/stats/hclust.html" target="_blank" rel="noopener">&lt;code>hclust()&lt;/code>&lt;/a> instead of the default
&lt;a href="https://rdrr.io/r/stats/kmeans.html" target="_blank" rel="noopener">&lt;code>kmeans()&lt;/code>&lt;/a>-based clusters:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>123&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://spatialsample.tidymodels.org/reference/spatial_clustering_cv.html'>spatial_clustering_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>boston_canopy&lt;/span>,
v &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>,
cluster_function &lt;span class='o'>=&lt;/span> &lt;span class='s'>"hclust"&lt;/span>
&lt;span class='o'>)&lt;/span> |&amp;gt;
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>title &lt;span class='o'>=&lt;/span> &lt;span class='s'>"hclust()"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-5-1.png" title="A map showing the boston_canopy data set broken into five folds through spatial_clustering_cv, using the hclust clustering method. The five folds are still visibly different sizes, and are grouped by spatial proximity, but the clusters are notably different from those produced by the default kmeans method." alt="A map showing the boston_canopy data set broken into five folds through spatial_clustering_cv, using the hclust clustering method. The five folds are still visibly different sizes, and are grouped by spatial proximity, but the clusters are notably different from those produced by the default kmeans method." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This argument can also accept functions, letting you plug in clustering methodologies from other packages or that you&amp;rsquo;ve written yourself:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>123&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>custom_clusters&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dists&lt;/span>, &lt;span class='nv'>v&lt;/span>, &lt;span class='nv'>...&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/rep.html'>rep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>letters&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='nv'>v&lt;/span>&lt;span class='o'>]&lt;/span>, length.out &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/nrow.html'>nrow&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>boston_canopy&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>
&lt;span class='nf'>&lt;a href='https://spatialsample.tidymodels.org/reference/spatial_clustering_cv.html'>spatial_clustering_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>boston_canopy&lt;/span>,
v &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>,
cluster_function &lt;span class='o'>=&lt;/span> &lt;span class='nv'>custom_clusters&lt;/span>
&lt;span class='o'>)&lt;/span> |&amp;gt;
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>title &lt;span class='o'>=&lt;/span> &lt;span class='s'>"custom_clusters()"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-6-1.png" title="A map showing the outputs of spatial_clustering_cv when using a custom clustering function. The custom clustering function assigned folds systematically, moving sequentially through rows in the data frame, and as such the output does not look very clustered. However, the functions in spatialsample performed exactly the same with the custom clustering function as they did with the built-in options." alt="A map showing the outputs of spatial_clustering_cv when using a custom clustering function. The custom clustering function assigned folds systematically, moving sequentially through rows in the data frame, and as such the output does not look very clustered. However, the functions in spatialsample performed exactly the same with the custom clustering function as they did with the built-in options." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>In addition to the clustering extensions, this version of spatialsample introduces new functions for other popular spatial resampling methods. For instance,
&lt;a href="https://spatialsample.tidymodels.org/reference/spatial_block_cv.html" target="_blank" rel="noopener">&lt;code>spatial_block_cv()&lt;/code>&lt;/a> helps you perform
&lt;a href="https://doi.org/10.1111/ecog.02881" target="_blank" rel="noopener">block cross-validation&lt;/a>, splitting your data into folds based on a grid of regular polygons. You can assign these polygons to folds at random:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>123&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://spatialsample.tidymodels.org/reference/spatial_block_cv.html'>spatial_block_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>boston_canopy&lt;/span>, v &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span> |&amp;gt;
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-7-1.png" title="A map showing the outputs of block cross-validation performed using spatial_block_cv. A regular grid of squares has been drawn over the boston_canopy data set, and all data falling into a single block is assigned to the same fold. Blocks are assigned to folds at random, resulting in a patchy distribution of folds across the data set." alt="A map showing the outputs of block cross-validation performed using spatial_block_cv. A regular grid of squares has been drawn over the boston_canopy data set, and all data falling into a single block is assigned to the same fold. Blocks are assigned to folds at random, resulting in a patchy distribution of folds across the data set." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Or systematically, either by assigning folds in order from the bottom-left and proceeding from left to right along each row by setting &lt;code>method = &amp;quot;continuous&amp;quot;&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://spatialsample.tidymodels.org/reference/spatial_block_cv.html'>spatial_block_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>boston_canopy&lt;/span>, v &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>, method &lt;span class='o'>=&lt;/span> &lt;span class='s'>"continuous"&lt;/span>&lt;span class='o'>)&lt;/span> |&amp;gt;
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-8-1.png" title="A map showing the outputs of block cross-validation performed using spatial_block_cv with continuous systematic assignment. Rather than the patchy random assignment before, blocks are now assigned from left to right for each row of the regular grid, resulting in the same folds always being adjacent to one another." alt="A map showing the outputs of block cross-validation performed using spatial_block_cv with continuous systematic assignment. Rather than the patchy random assignment before, blocks are now assigned from left to right for each row of the regular grid, resulting in the same folds always being adjacent to one another." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Or by &amp;ldquo;snaking&amp;rdquo; back and forth up the grid by setting &lt;code>method = &amp;quot;snake&amp;quot;&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://spatialsample.tidymodels.org/reference/spatial_block_cv.html'>spatial_block_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>boston_canopy&lt;/span>, v &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>, method &lt;span class='o'>=&lt;/span> &lt;span class='s'>"snake"&lt;/span>&lt;span class='o'>)&lt;/span> |&amp;gt;
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-9-1.png" title="A map showing the outputs of block cross-validation performed using spatial_block_cv with snaking systematic assignment. Blocks are now assigned alternatively from left to right and right to left, resulting in a similar alignment of folds to the continuous method." alt="A map showing the outputs of block cross-validation performed using spatial_block_cv with snaking systematic assignment. Blocks are now assigned alternatively from left to right and right to left, resulting in a similar alignment of folds to the continuous method." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This release of spatialsample also adds support for
&lt;a href="https://doi.org/10.1111/geb.12161" target="_blank" rel="noopener">leave-location-out cross-validation&lt;/a> through the new function
&lt;a href="https://spatialsample.tidymodels.org/reference/spatial_vfold.html" target="_blank" rel="noopener">&lt;code>spatial_leave_location_out_cv()&lt;/code>&lt;/a>. You can use this to create resamples when you already have a good idea of what data might be spatially correlated together &amp;ndash; for instance, we can use it to split the Ames housing data from modeldata by neighborhood:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, package &lt;span class='o'>=&lt;/span> &lt;span class='s'>"modeldata"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>ames_sf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>sf&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://r-spatial.github.io/sf/reference/st_as_sf.html'>st_as_sf&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames&lt;/span>, coords &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Longitude"&lt;/span>, &lt;span class='s'>"Latitude"&lt;/span>&lt;span class='o'>)&lt;/span>, crs &lt;span class='o'>=&lt;/span> &lt;span class='m'>4326&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>123&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://spatialsample.tidymodels.org/reference/spatial_vfold.html'>spatial_leave_location_out_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ames_sf&lt;/span>, &lt;span class='nv'>Neighborhood&lt;/span>&lt;span class='o'>)&lt;/span> |&amp;gt;
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-10-1.png" title="A map showing the outputs of leave-location-out cross-validation performed using spatial_leave_location_out_cv on the Ames housing data. Folds are assigned based on what neighborhood each house falls into. Some neighborhoods are entirely contained within another neighborhood, and neighborhoods contain very different numbers of houses." alt="A map showing the outputs of leave-location-out cross-validation performed using spatial_leave_location_out_cv on the Ames housing data. Folds are assigned based on what neighborhood each house falls into. Some neighborhoods are entirely contained within another neighborhood, and neighborhoods contain very different numbers of houses." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;h2 id="buffering">Buffering
&lt;a href="#buffering">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The last major feature in this release is the introduction of spatial buffering. Spatial buffering enforces a certain minimum distance between your analysis and assessment sets, making sure that you&amp;rsquo;re spatially extrapolating when making predictions with a model.&lt;/p>
&lt;p>While all spatial resampling functions in spatialsample can use spatial buffers, particularly interesting is the new
&lt;a href="https://spatialsample.tidymodels.org/reference/spatial_vfold.html" target="_blank" rel="noopener">&lt;code>spatial_buffer_vfold_cv()&lt;/code>&lt;/a> function. This function makes it easy to add spatial buffers around a standard V-fold cross-validation procedure. When we plot the object returned by this function, it just looks like a standard V-fold cross-validation setup:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>123&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>blocks&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://spatialsample.tidymodels.org/reference/spatial_vfold.html'>spatial_buffer_vfold_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>boston_canopy&lt;/span>,
v &lt;span class='o'>=&lt;/span> &lt;span class='m'>15&lt;/span>,
buffer &lt;span class='o'>=&lt;/span> &lt;span class='m'>100&lt;/span>,
radius &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NULL&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>blocks&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-11-1.png" title="A map showing the outputs of spatially buffered cross-validation performed using spatial_buffer_vfold_cv, once again using the boston_canopy data set. When visualizing all folds at once, there does not seem to be any spatial structure to the resamples; folds are distributed randomly throughout the data set, and folds abut one another without any spatial separation." alt="A map showing the outputs of spatially buffered cross-validation performed using spatial_buffer_vfold_cv, once again using the boston_canopy data set. When visualizing all folds at once, there does not seem to be any spatial structure to the resamples; folds are distributed randomly throughout the data set, and folds abut one another without any spatial separation." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>However, if we use
&lt;a href="https://ggplot2.tidyverse.org/reference/autoplot.html" target="_blank" rel="noopener">&lt;code>autoplot()&lt;/code>&lt;/a> to visualize the splits themselves, we can see that we&amp;rsquo;ve created an exclusion buffer around each of our assessment sets. Data inside this buffer is assigned to neither the assessment or analysis set, so you can be sure your data is spatially separated:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>blocks&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>splits&lt;/span> |&amp;gt;
&lt;span class='nf'>purrr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map.html'>walk&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-12-.gif" title="An animation showing maps of each individual fold produced using spatial_buffer_vfold_cv. Now it is evident that any data adjacent to the assessment data has been added to a 'buffer' zone, and is part of neither the analysis or the assessment set." alt="An animation showing maps of each individual fold produced using spatial_buffer_vfold_cv. Now it is evident that any data adjacent to the assessment data has been added to a 'buffer' zone, and is part of neither the analysis or the assessment set." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>In addition to exclusion buffers, spatialsample now lets you add inclusion radii to any spatial resampling. This will add any points within a certain distance of the original assessment set to the assessment set, letting you create clumped &amp;ldquo;discs&amp;rdquo; of data to assess your models against:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>123&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>blocks&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://spatialsample.tidymodels.org/reference/spatial_vfold.html'>spatial_buffer_vfold_cv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>boston_canopy&lt;/span>,
v &lt;span class='o'>=&lt;/span> &lt;span class='m'>20&lt;/span>,
buffer &lt;span class='o'>=&lt;/span> &lt;span class='m'>100&lt;/span>,
radius &lt;span class='o'>=&lt;/span> &lt;span class='m'>100&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>blocks&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>splits&lt;/span> |&amp;gt;
&lt;span class='nf'>purrr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map.html'>walk&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-13-.gif" title="Another animation showing maps of each individual fold produced using spatial_buffer_vfold_cv. When using the argument radius, points adjacent to the assessment set are themselves added to the assessment set. The buffer is then applied to each data point in the enlarged assessment set." alt="Another animation showing maps of each individual fold produced using spatial_buffer_vfold_cv. When using the argument radius, points adjacent to the assessment set are themselves added to the assessment set. The buffer is then applied to each data point in the enlarged assessment set." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;h2 id="and-more">&amp;hellip;and more!
&lt;a href="#and-more">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This is just scratching the surface of the new features and improvements in this release of spatialsample. You can see a full list of changes in the the
&lt;a href="https://spatialsample.tidymodels.org/news/index.html#spatialsample-020" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="acknowledgments">Acknowledgments
&lt;a href="#acknowledgments">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank everyone that has contributed since the last release:
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/MxNl" target="_blank" rel="noopener">@MxNl&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>, and
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>.&lt;/p></description></item><item><title>Announcing vetiver for MLOps in R and Python</title><link>https://www.tidyverse.org/blog/2022/06/announce-vetiver/</link><pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/06/announce-vetiver/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with `hugodown::tidy_show_meta()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnails()`
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] `usethis::use_tidy_thanks()`
-->
&lt;p>We are thrilled to announce the release of
&lt;a href="https://vetiver.rstudio.com/" target="_blank" rel="noopener">vetiver&lt;/a>, a framework for MLOps tasks in R and Python! The goal of vetiver is to provide fluent tooling to &lt;strong>version&lt;/strong>, &lt;strong>share&lt;/strong>, &lt;strong>deploy&lt;/strong>, and &lt;strong>monitor&lt;/strong> a trained model. If you like perfume or candles, you may recognize this name; vetiver, also known as the &amp;ldquo;oil of tranquility&amp;rdquo;, is used as a stabilizing ingredient in perfumery to preserve more volatile fragrances.&lt;/p>
&lt;p>You can install the released version of vetiver for R from
&lt;a href="https://cran.r-project.org/package=vetiver" target="_blank" rel="noopener">CRAN&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;vetiver&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can install the released version of vetiver for Python from
&lt;a href="https://pypi.org/project/vetiver/" target="_blank" rel="noopener">PyPI&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">pip&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">vetiver&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We are sharing more about what vetiver is and how it works over
&lt;a href="https://www.rstudio.com/blog/announce-vetiver/" target="_blank" rel="noopener">on the RStudio blog&lt;/a> so check that out, but we want to share here as well!&lt;/p>
&lt;h2 id="train-a-model">Train a model
&lt;a href="#train-a-model">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>For this example, let’s work with data on everyone&amp;rsquo;s favorite dataset on fuel efficiency for cars to predict miles per gallon. In R, we can train a decision tree model to predict miles per gallon using a
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> workflow:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">car_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="nf">decision_tree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In Python, we can train the same kind of model using
&lt;a href="https://scikit-learn.org/" target="_blank" rel="noopener">scikit-learn&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">vetiver.data&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">mtcars&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">sklearn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">tree&lt;/span>
&lt;span class="n">car_mod&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tree&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DecisionTreeRegressor&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;mpg&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For both R and Python, the &lt;code>car_mod&lt;/code> object is a fitted model, with parameters estimated using our training data &lt;code>mtcars&lt;/code>.&lt;/p>
&lt;h2 id="create-a-vetiver-model">Create a vetiver model
&lt;a href="#create-a-vetiver-model">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We can create a &lt;code>vetiver_model()&lt;/code> in R or &lt;code>VetiverModel()&lt;/code> in Python from the trained model; a vetiver model object collects the information needed to store, version, and deploy a trained model.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vetiver&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">v&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vetiver_model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_mod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;cars_mpg&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">v&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; ── cars_mpg ─ &amp;lt;butchered_workflow&amp;gt; model for deployment &lt;/span>
&lt;span class="c1">#&amp;gt; A rpart regression modeling workflow using 10 features&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">vetiver&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">VetiverModel&lt;/span>
&lt;span class="n">v&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">VetiverModel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_mod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">model_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;cars_mpg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">save_ptype&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ptype_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">v&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">description&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;#34;Scikit-learn &amp;lt;class &amp;#39;sklearn.tree._classes.DecisionTreeRegressor&amp;#39;&amp;gt; model&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>See our documentation for how to use these deployable model objects and:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://vetiver.rstudio.com/get-started/version.html" target="_blank" rel="noopener">publish and version your model&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://vetiver.rstudio.com/get-started/deploy.html" target="_blank" rel="noopener">deploy your model as a REST API&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Be sure to also read more
&lt;a href="https://www.rstudio.com/blog/announce-vetiver/" target="_blank" rel="noopener">on the RStudio blog&lt;/a>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to extend our thanks to all of the contributors who helped make these initial releases of vetiver for R and Python possible!&lt;/p>
&lt;ul>
&lt;li>
&lt;p>R package:
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/ggpinto" target="_blank" rel="noopener">@ggpinto&lt;/a>,
&lt;a href="https://github.com/isabelizimm" target="_blank" rel="noopener">@isabelizimm&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/mfansler" target="_blank" rel="noopener">@mfansler&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Python package:
&lt;a href="https://github.com/has2k1" target="_blank" rel="noopener">@has2k1&lt;/a>, and
&lt;a href="https://github.com/isabelizimm" target="_blank" rel="noopener">@isabelizimm&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Using case weights with tidymodels</title><link>https://www.tidyverse.org/blog/2022/05/case-weights/</link><pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/05/case-weights/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with `hugodown::tidy_show_meta()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnails()`
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] `usethis::use_tidy_thanks()`
-->
&lt;p>We are pleased to announce that tidymodels packages now support the use of case weights. There has been a ton of work and multiple technical hurdles to overcome. The diversity of the types of weights and how they should be used is very complex, but I think that we&amp;rsquo;ve come up with a solution that is fairly straightforward for users.&lt;/p>
&lt;p>Several packages are affected by these changes and we&amp;rsquo;re keeping them on GitHub until everything is finalized. See the last section for instructions for installing the development versions.&lt;/p>
&lt;h2 id="what-are-case-weights">What are case weights?
&lt;a href="#what-are-case-weights">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Case weights are non-negative numbers used to specify how much each observation influences the estimation of a model.&lt;/p>
&lt;p>If you are new to this term, it is worth reading Thomas Lumley’s excellent post
&lt;a href="https://notstatschat.rbind.io/2020/08/04/weights-in-statistics/" target="_blank" rel="noopener">&lt;em>Weights in statistics&lt;/em>&lt;/a> as well as
&lt;a href="https://projecteuclid.org/journals/statistical-science/volume-22/issue-2/Struggles-with-Survey-Weighting-and-Regression-Modeling/10.1214/088342306000000691.full" target="_blank" rel="noopener">&amp;ldquo;Struggles with Survey Weighting and Regression Modeling&amp;rdquo;&lt;/a>. Although &amp;ldquo;case weights&amp;rdquo; isn&amp;rsquo;t a universally used term, we&amp;rsquo;ll use it to distinguish it from other types of weights, such as class weights in cost-sensitive learning and others.&lt;/p>
&lt;p>There are different types of case weights whose terminology can be very different across problem domains. Here are some examples:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Frequency weights&lt;/strong> are integers that denote how many times a particular row of data has been observed. They help compress redundant rows into a single entry.&lt;/li>
&lt;li>&lt;strong>Importance weights&lt;/strong> focus on how much each row of the data set should influence model estimation. These can be based on data or arbitrarily set to achieve some goal.&lt;/li>
&lt;li>When survey respondents have different probabilities of selection, (inverse) &lt;strong>probability weights&lt;/strong> can help reduce bias in the results of a data analysis.&lt;/li>
&lt;li>If a data point has an associated precision, &lt;strong>analytic weighting&lt;/strong> helps a model focus on the data points with less uncertainty (such as in meta-analysis).&lt;/li>
&lt;/ul>
&lt;p>There are undoubtedly more types of weights in other domains. Quoting
&lt;a href="https://projecteuclid.org/journals/statistical-science/volume-22/issue-2/Struggles-with-Survey-Weighting-and-Regression-Modeling/10.1214/088342306000000691.full" target="_blank" rel="noopener">Andrew Gelman&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Weighting causes no end of confusion both in applied and theoretical statistics. People just assume because something has one name (&amp;ldquo;weights&amp;rdquo;), it is one thing. So then we get questions like, &amp;ldquo;How do you do weighted regression in Stan,&amp;rdquo; and we have to reply, &amp;ldquo;What is it that you actually want to do?&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;h2 id="how-are-they-used-in-traditional-modeling">How are they used in traditional modeling?
&lt;a href="#how-are-they-used-in-traditional-modeling">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A traditional example is categorical data where a small number of possible categories are observed many times. For example, &lt;code>UCBAdmissions&lt;/code> contains &amp;ldquo;Aggregate data on applicants to graduate school at Berkeley for the six largest departments in 1973 classified by admission and sex.&amp;rdquo;&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;UCBAdmissions&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">UCBAdmissions&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## , , Dept = A
##
## Gender
## Admit Male Female
## Admitted 512 89
## Rejected 313 19
##
## , , Dept = B
##
## Gender
## Admit Male Female
## Admitted 353 17
## Rejected 207 8
##
## , , Dept = C
##
## Gender
## Admit Male Female
## Admitted 120 202
## Rejected 205 391
##
## , , Dept = D
##
## Gender
## Admit Male Female
## Admitted 138 131
## Rejected 279 244
##
## , , Dept = E
##
## Gender
## Admit Male Female
## Admitted 53 94
## Rejected 138 299
##
## , , Dept = F
##
## Gender
## Admit Male Female
## Admitted 22 24
## Rejected 351 317
&lt;/code>&lt;/pre>&lt;p>This is a 3D array, so let&amp;rsquo;s convert it to a rectangular data format:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ucb&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UCBAdmissions&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">across&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is.character&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="nf">as.factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.)&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">ucb&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 24 × 4
## Admit Gender Dept n
## &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;
## 1 Admitted Male A 512
## 2 Rejected Male A 313
## 3 Admitted Female A 89
## 4 Rejected Female A 19
## 5 Admitted Male B 353
## 6 Rejected Male B 207
## 7 Admitted Female B 17
## 8 Rejected Female B 8
## 9 Admitted Male C 120
## 10 Rejected Male C 205
## # … with 14 more rows
&lt;/code>&lt;/pre>&lt;p>There are 24 possible configurations of the variables but a total of 4526 observations. If we want to model the data in this format, we could use a logistic regression:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">glm_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">glm&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">Admit&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Gender&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Dept&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ucb&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">weights&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;binomial&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">glm_fit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>##
## Call: glm(formula = Admit ~ Gender + Dept, family = &amp;quot;binomial&amp;quot;, data = ucb,
## weights = n)
##
## Coefficients:
## (Intercept) GenderMale DeptB DeptC DeptD DeptE
## -0.68192 0.09987 0.04340 1.26260 1.29461 1.73931
## DeptF
## 3.30648
##
## Degrees of Freedom: 23 Total (i.e. Null); 17 Residual
## Null Deviance: 6044
## Residual Deviance: 5187 AIC: 5201
&lt;/code>&lt;/pre>&lt;p>&lt;em>This is not quite right though&lt;/em>. There are 12 combinations of &lt;code>Gender&lt;/code> and &lt;code>Dept&lt;/code>. How can the model have 23 total degrees of freedom?&lt;/p>
&lt;p>If we are treating our data as binomial, the traditional method for fitting this model is to convert the data to a format with columns for the number of events and non-events (per covariate pattern). Let&amp;rsquo;s convert our data into that format:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">ucb_grouped_data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">ucb&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pivot_wider&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">id_cols&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Gender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Dept&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">names_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Admit&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">values_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">values_fill&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0L&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">ucb_grouped_data&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 12 × 4
## Gender Dept Admitted Rejected
## &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 Male A 512 313
## 2 Female A 89 19
## 3 Male B 353 207
## 4 Female B 17 8
## 5 Male C 120 205
## 6 Female C 202 391
## 7 Male D 138 279
## 8 Female D 131 244
## 9 Male E 53 138
## 10 Female E 94 299
## 11 Male F 22 351
## 12 Female F 24 317
&lt;/code>&lt;/pre>&lt;p>Now, since there are really only 12 covariate combinations, the appropriate model can be created.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">glm&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="nf">cbind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Rejected&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Admitted&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Gender&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Dept&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ucb_grouped_data&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">binomial&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>##
## Call: glm(formula = cbind(Rejected, Admitted) ~ Gender + Dept, family = binomial,
## data = ucb_grouped_data)
##
## Coefficients:
## (Intercept) GenderMale DeptB DeptC DeptD DeptE
## -0.68192 0.09987 0.04340 1.26260 1.29461 1.73931
## DeptF
## 3.30648
##
## Degrees of Freedom: 11 Total (i.e. Null); 5 Residual
## Null Deviance: 877.1
## Residual Deviance: 20.2 AIC: 103.1
&lt;/code>&lt;/pre>&lt;p>In both cases the model coefficients are the same but the standard errors and degrees of freedom are only correct for the model with grouped data.&lt;/p>
&lt;h2 id="why-is-this-so-complicated">Why is this so complicated?
&lt;a href="#why-is-this-so-complicated">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Traditionally, weights in base R functions are used to fit the model and to report a few measures of model efficacy. Here, &lt;code>glm()&lt;/code> reports the deviance while &lt;code>lm()&lt;/code> shows estimates of the RMSE and adjusted-R&lt;sup>2&lt;/sup>.&lt;/p>
&lt;p>Believe it or not, the logistic regression code shown above, which is a typical example of using weights in a classical statistical setting, is much simpler than what we have to contend with in modern data analysis. There are a few things that we do in modern data analysis where correctly using weights is not so straightforward. These include:&lt;/p>
&lt;ul>
&lt;li>Resampling (e.g. bootstrap or cross-validation).&lt;/li>
&lt;li>Preprocessing methods such as centering and scaling.&lt;/li>
&lt;li>Additional measures of performance (e.g. area under the ROC curve, mean absolute deviations, Kohen&amp;rsquo;s Kappa, and so on).&lt;/li>
&lt;/ul>
&lt;p>A framework like tidymodels should enable users to utilize case weights across all phases of their data analysis.&lt;/p>
&lt;p>Additionally, the type of case weights &lt;strong>and their intent&lt;/strong> affect which of these operations should be affected.&lt;/p>
&lt;p>For example, frequency weights should affect the estimation of the model, the preprocessing steps, and performance estimation. If the predictors require centering, a weighted mean should be used to appropriately ensure that the mean of that column is truly zero. Let&amp;rsquo;s say that sensitivity and specificity estimates are required. The 2x2 table of observed and predicted results should have cell counts that reflect the case weights. If they did not, infrequently occurring data points have as much weight as the rows that have a high prevalence.&lt;/p>
&lt;p>As a counter example, importance weights reflect the idea that they should only influence &lt;em>the model fitting procedure&lt;/em>. It wouldn&amp;rsquo;t make sense to use a weighted mean to center a predictor; the weight shouldn&amp;rsquo;t influence an unsupervised operation in the same way as model estimation. More critically, any holdout data set used to quantify model efficacy should reflect the data as seen in the wild (without the impact of the weights).&lt;/p>
&lt;h2 id="how-does-tidymodels-handle-weights">How does tidymodels handle weights?
&lt;a href="#how-does-tidymodels-handle-weights">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;ve decided to add some additional vector data types that allow users to describe the type of weights. These data types also help tidymodels functions know what the intent of the analysis should be.&lt;/p>
&lt;p>In parsnip, the functions &lt;code>frequency_weights()&lt;/code> and &lt;code>importance_weights()&lt;/code> can be used to set the weights:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># For the UC admissions data&lt;/span>
&lt;span class="n">ucb&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">ucb&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">frequency_weights&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">ucb&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">n&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## &amp;lt;frequency_weights[24]&amp;gt;
## [1] 512 313 89 19 353 207 17 8 120 205 202 391 138 279 131 244 53 138 94
## [20] 299 22 351 24 317
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># For a general vector of importance weights: &lt;/span>
&lt;span class="nf">importance_weights&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">round&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">runif&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## &amp;lt;importance_weights[10]&amp;gt;
## [1] 0.91 0.53 0.72 0.81 0.33 0.11 0.61 0.61 0.20 0.49
&lt;/code>&lt;/pre>&lt;p>The class of these objects tells packages like recipes and yardstick if their values should be used for preprocessing and performance metrics, respectively:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Importance weights only affect the model estimation and &lt;em>supervised&lt;/em> recipes steps. They are not used with yardstick functions for calculating measures of model performance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Frequency weights are used for all parts of the preprocessing, model fitting, and performance estimation operations.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Currently, these are the only classes implemented. We are doing a lot of reading on how the analysis of survey data should use case weights and how we can enable this and other data analysis use cases.
&lt;a href="https://community.rstudio.com/t/case-weight-blog-post-discussion/136281" target="_blank" rel="noopener">We&amp;rsquo;d love to hear from you&lt;/a> if you have expertise in this area.&lt;/p>
&lt;h2 id="about-resampling">About resampling
&lt;a href="#about-resampling">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This is a topic that we are still unsure about. We definitively think that importance weights should not affect how the data are split or resampled.&lt;/p>
&lt;p>Frequency weights are more complex. Suppose we are using 10-fold cross-validation with the logistic regression on the UCB admission data, should we:&lt;/p>
&lt;ul>
&lt;li>Have all the case weights be placed into either the modeling or holdout set?&lt;/li>
&lt;li>Fractionally, split the case weights into both the modeling and holdout data?&lt;/li>
&lt;/ul>
&lt;p>For the latter case, suppose a row of data has a case weight of 100 and we use 10-fold cross-validation. We would always put 90 of those 100 into the modeling data set and the other 10 into the holdout. This seems to be consistent with the sampling of the data and is what would happen if there were actually 100 rows in the data (instead of one row with a case weight of 100). However, it does raise questions regarding data leakage by just re-predicting the same data that went into the model.&lt;/p>
&lt;p>This is also an area where we&amp;rsquo;d like
&lt;a href="https://community.rstudio.com/t/case-weight-blog-post-discussion/136281" target="_blank" rel="noopener">community feedback&lt;/a>.&lt;/p>
&lt;h2 id="tidymodels-syntax">Tidymodels syntax
&lt;a href="#tidymodels-syntax">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Let&amp;rsquo;s work through an example. We&amp;rsquo;ll use some data simulated with a severe class imbalance. These functions are in the
&lt;a href="https://modeldata.tidymodels.org/dev/reference/sim_classification.html" target="_blank" rel="noopener">development version of the modeldata package&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">training_sim&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">sim_classification&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">intercept&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">-25&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">training_sim&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">class&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 2 × 2
## class n
## &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt;
## 1 class_1 80
## 2 class_2 4920
&lt;/code>&lt;/pre>&lt;p>If we would like to encourage models to more accurately predict the minority class, we can give these samples a much larger weight in the analysis&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">training_sim&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">training_sim&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">case_wts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">ifelse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">class&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;class_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">60&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">case_wts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">importance_weights&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">case_wts&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We strongly advise that users set the case weight column before any other tidymodels functions are used. This ensures that they are handled correctly in the analyses that follow. In some cases, such as recipes, we prohibit changing the case weight column. Since the intent of the weights is needed, errors could occur if that intent was changed during the analysis.&lt;/p>
&lt;p>Let&amp;rsquo;s use 10-fold cross-validation to resample the data. This case is unaffected by the presence of weights:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sim_folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vfold_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">training_sim&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">strata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">class&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We&amp;rsquo;ll fit a regularized logistic regression model to the data using glmnet:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lr_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">logistic_reg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">penalty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">mixture&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;glmnet&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For this model, we need to ensure that the predictors are in the same units. We&amp;rsquo;ll use a recipe to center and scale the data and also add some spline terms for predictors that appear to have a nonlinear relationship with the outcome:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">sim_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">training_sim&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_ns&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;non_linear&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">deg_free&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_numeric_predictors&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">sim_rec&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Recipe
##
## Inputs:
##
## role #variables
## case_weights 1
## outcome 1
## predictor 15
##
## Operations:
##
## Natural splines on starts_with(&amp;quot;non_linear&amp;quot;)
## Centering and scaling for all_numeric_predictors()
&lt;/code>&lt;/pre>&lt;p>There are a few things to point out here. The recipe automatically detects the case weights even though they are captured by the dot in the right-hand side of the formula. The recipe automatically sets their role and will error if that column is changed in any way.&lt;/p>
&lt;p>As mentioned above, any unsupervised steps are unaffected by importance weights so neither &lt;code>step_ns()&lt;/code> or &lt;code>step_normalize()&lt;/code> use the weights in their calculations.&lt;/p>
&lt;p>When using case weights, we would like to encourage users to keep their model and preprocessing tool within a workflow. The workflows package now has an &lt;code>add_case_weights()&lt;/code> function to help here:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lr_wflow&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lr_spec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sim_rec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_case_weights&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">case_wts&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">lr_wflow&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## ══ Workflow ═════════════════════════════════════════════════════════════════════════
## Preprocessor: Recipe
## Model: logistic_reg()
##
## ── Preprocessor ─────────────────────────────────────────────────────────────────────
## 2 Recipe Steps
##
## • step_ns()
## • step_normalize()
##
## ── Case Weights ─────────────────────────────────────────────────────────────────────
## case_wts
##
## ── Model ────────────────────────────────────────────────────────────────────────────
## Logistic Regression Model Specification (classification)
##
## Main Arguments:
## penalty = tune()
## mixture = 1
##
## Computational engine: glmnet
&lt;/code>&lt;/pre>&lt;p>Existing &lt;code>add_*()&lt;/code> functions in workflows add objects (instead of data). Rather than specifying case weights in each preprocessor function (e.g. &lt;code>add_formula()&lt;/code> and so on), this syntax is more simple and works with any type of preprocessor.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">cls_metrics&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">metric_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sensitivity&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">specificity&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">grid&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">penalty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="nf">^seq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">-3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length.out&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">lr_res&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">lr_wflow&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">tune_grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sim_folds&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cls_metrics&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lr_res&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/sim-tune-1.svg" title="plot of chunk sim-tune" alt="plot of chunk sim-tune" width="100%" />&lt;/p>
&lt;p>In tidymodels, the default is that the first level of the outcome factor is the event of interest. Since the first level of the outcome has the fewest values, we would expect the sensitivity of the model to suffer. These results suggest that the weights are making the model focus on the majority class.&lt;/p>
&lt;p>For comparison, let&amp;rsquo;s remove the weights and then tune the same parameter values.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lr_unwt_wflow&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">lr_wflow&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">remove_case_weights&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">lr_unwt_res&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">lr_unwt_wflow&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">tune_grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sim_folds&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cls_metrics&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>How do the results compare?&lt;/p>
&lt;p>&lt;img src="figure/plot-results-1.svg" title="plot of chunk plot-results" alt="plot of chunk plot-results" width="100%" />&lt;/p>
&lt;p>The importance weights certainly did their job since the weighted analysis has a better balance of sensitivity and specificity.&lt;/p>
&lt;h2 id="getting-feedback">Getting feedback
&lt;a href="#getting-feedback">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;ve laid the groundwork for using case weights holistically in tidymodels. For those of you who use case weights, we&amp;rsquo;d like to know what you think of our approach and answer any questions that you have. We have an
&lt;a href="https://community.rstudio.com/t/case-weight-blog-post-discussion/136281" target="_blank" rel="noopener">RStudio Community post&lt;/a> queued up to discuss this topic.&lt;/p>
&lt;p>We&amp;rsquo;ve waited to release packages with case weight support until the main pieces were in place. If you would like to play around with what we&amp;rsquo;ve done, you can load the development versions of the packages using:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">rlang&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">is_installed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;pak&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;pak&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">pkgs&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hardhat&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;parsnip&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;recipes&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;tune&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;workflows&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;yardstick&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">pkgs&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">paste0&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tidymodels/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pkgs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">pak&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">pak&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pkgs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you use any of the parsnip extension packages (e.g. discrim, rules, etc), make sure to install the development versions of these too.&lt;/p></description></item><item><title>Updates for recipes extension packages</title><link>https://www.tidyverse.org/blog/2022/05/recipes-update-05-20222/</link><pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/05/recipes-update-05-20222/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re tickled pink to announce the releases of extension packages that followed the recent release of
&lt;a href="https://recipes.tidymodels.org/" target="_blank" rel="noopener">recipes&lt;/a> 0.2.0. recipes is a package for preprocessing data before using it in models or visualizations. You can think of it as a mash-up of
&lt;a href="https://rdrr.io/r/stats/model.matrix.html" target="_blank" rel="noopener">&lt;code>model.matrix()&lt;/code>&lt;/a> and dplyr.&lt;/p>
&lt;p>You can install the these updates from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"embed"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"themis"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"textrecipes"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The &lt;code>NEWS&lt;/code> files are linked here for each package; We will go over some of the bigger changes within and between these packages in this post. A lot of the smaller changes were done to make sure that these extension packages are up to the same standard as recipes itself.&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://themis.tidymodels.org/news/index.html#themis-020" target="_blank" rel="noopener">themis&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://textrecipes.tidymodels.org/news/index.html#textrecipes-051" target="_blank" rel="noopener">textrecipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://embed.tidymodels.org/news/index.html#embed-020" target="_blank" rel="noopener">embed&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/recipes'>recipes&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/themis'>themis&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/textrecipes'>textrecipes&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://embed.tidymodels.org'>embed&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://modeldata.tidymodels.org'>modeldata&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1234&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="themis">themis
&lt;a href="#themis">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A new step
&lt;a href="https://themis.tidymodels.org/reference/step_smotenc.html" target="_blank" rel="noopener">&lt;code>step_smotenc()&lt;/code>&lt;/a> was added thanks to
&lt;a href="https://github.com/RobertGregg" target="_blank" rel="noopener">Robert Gregg&lt;/a>. This step applies the
&lt;a href="https://scholar.google.com/scholar?hl=en&amp;amp;as_sdt=0%2C7&amp;amp;q=SMOTENC&amp;#43;&amp;amp;btnG=" target="_blank" rel="noopener">SMOTENC algorithm&lt;/a> to synthetically generate observations from minority classes. The SMOTENC method can handle a mix of categorical and numerical predictors, which was not possible using the existing SMOTE method which could only operate on numeric predictors.&lt;/p>
&lt;p>The &lt;code>hpc_data&lt;/code> illustrates this use case neatly. The data set contains characteristics of HPC Unix jobs and how long they took to run (the outcome column is &lt;code>class&lt;/code>). The outcome is not that balanced, with some classes having almost 10 times fewer observations than others. One way to deal with an imbalance like this is to over-sample the minority observations to mitigate the imbalance.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hpc_data&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>hpc_data&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/count.html'>count&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>class&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; class n&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> VF &lt;span style='text-decoration: underline;'>2&lt;/span>211&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> F &lt;span style='text-decoration: underline;'>1&lt;/span>347&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> M 514&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> L 259&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Using
&lt;a href="https://themis.tidymodels.org/reference/step_smotenc.html" target="_blank" rel="noopener">&lt;code>step_smotenc()&lt;/code>&lt;/a>, with the &lt;code>over_ratio&lt;/code> argument, we can make sure that all classes are over-sampled to have no less than half of the observations of the largest class.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>up_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>class&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hpc_data&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://themis.tidymodels.org/reference/step_smotenc.html'>step_smotenc&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>class&lt;/span>, over_ratio &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.5&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/prep.html'>prep&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>up_rec&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/bake.html'>bake&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>new_data &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NULL&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/count.html'>count&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>class&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; class n&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> VF &lt;span style='text-decoration: underline;'>2&lt;/span>211&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> F &lt;span style='text-decoration: underline;'>1&lt;/span>347&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> M &lt;span style='text-decoration: underline;'>1&lt;/span>105&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> L &lt;span style='text-decoration: underline;'>1&lt;/span>105&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The method that was implemented in embed now has
&lt;a href="https://themis.tidymodels.org/reference/index.html#methods" target="_blank" rel="noopener">standalone functions&lt;/a> to apply these algorithms without having to create a recipe.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://themis.tidymodels.org/reference/smotenc.html'>smotenc&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hpc_data&lt;/span>, &lt;span class='s'>"class"&lt;/span>, over_ratio &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5,768 × 8&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; protocol compounds input_fields iterations num_pending hour day class&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> E 997 137 20 0 14 Tue F &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> E 97 103 20 0 13.8 Tue VF &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> E 101 75 10 0 13.8 Thu VF &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> E 93 76 20 0 10.1 Fri VF &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> E 100 82 20 0 10.4 Fri VF &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> E 100 82 20 0 16.5 Wed VF &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> E 105 88 20 0 16.4 Fri VF &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> E 98 95 20 0 16.7 Fri VF &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> E 101 91 20 0 16.2 Fri VF &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> E 95 92 20 0 10.8 Wed VF &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 5,758 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="textrecipes">textrecipes
&lt;a href="#textrecipes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We added the functions
&lt;a href="https://textrecipes.tidymodels.org/reference/all_tokenized.html" target="_blank" rel="noopener">&lt;code>all_tokenized()&lt;/code>&lt;/a> and
&lt;a href="https://textrecipes.tidymodels.org/reference/all_tokenized.html" target="_blank" rel="noopener">&lt;code>all_tokenized_predictors()&lt;/code>&lt;/a> to more easily select tokenized columns, similar to the
&lt;a href="https://recipes.tidymodels.org/reference/has_role.html" target="_blank" rel="noopener">existing &lt;code>all_numeric()&lt;/code> and &lt;code>all_numeric_predictors()&lt;/code> selectors in recipes&lt;/a>.&lt;/p>
&lt;p>The most important step in textrecipes is
&lt;a href="https://textrecipes.tidymodels.org/reference/step_tokenize.html" target="_blank" rel="noopener">&lt;code>step_tokenize()&lt;/code>&lt;/a>, as you need it to generate tokens that can be modified by other steps. We have found that this function has gotten overloaded with functionality as more and more support for different types of tokenization was added. To address this, we have created new specialized tokenization steps;
&lt;a href="https://textrecipes.tidymodels.org/reference/step_tokenize.html" target="_blank" rel="noopener">&lt;code>step_tokenize()&lt;/code>&lt;/a> has gotten cousin steps
&lt;a href="https://textrecipes.tidymodels.org/reference/step_tokenize_bpe.html" target="_blank" rel="noopener">&lt;code>step_tokenize_bpe()&lt;/code>&lt;/a>,
&lt;a href="https://textrecipes.tidymodels.org/reference/step_tokenize_sentencepiece.html" target="_blank" rel="noopener">&lt;code>step_tokenize_sentencepiece()&lt;/code>&lt;/a>, and
&lt;a href="https://textrecipes.tidymodels.org/reference/step_tokenize_wordpiece.html" target="_blank" rel="noopener">&lt;code>step_tokenize_wordpiece()&lt;/code>&lt;/a> which wrap
&lt;a href="https://CRAN.R-project.org/package=tokenizers.bpe" target="_blank" rel="noopener">tokenizers.bpe&lt;/a>,
&lt;a href="https://CRAN.R-project.org/package=sentencepiece" target="_blank" rel="noopener">sentencepiece&lt;/a>, and
&lt;a href="https://CRAN.R-project.org/package=wordpiece" target="_blank" rel="noopener">wordpiece&lt;/a> respectively.&lt;/p>
&lt;p>In addition to being easier to manage code-wise, these new functions also allow for more compact, more readable code with better tab completion.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tate_text&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Old&lt;/span>
&lt;span class='nv'>tate_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span>&lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>tate_text&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://textrecipes.tidymodels.org/reference/step_tokenize.html'>step_tokenize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>text&lt;/span>,
engine &lt;span class='o'>=&lt;/span> &lt;span class='s'>"tokenizers.bpe"&lt;/span>,
training_options &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>vocab_size &lt;span class='o'>=&lt;/span> &lt;span class='m'>1000&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'># New&lt;/span>
&lt;span class='nv'>tate_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>~&lt;/span>&lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>tate_text&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://textrecipes.tidymodels.org/reference/step_tokenize_bpe.html'>step_tokenize_bpe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>medium&lt;/span>, vocabulary_size &lt;span class='o'>=&lt;/span> &lt;span class='m'>1000&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="embed">embed
&lt;a href="#embed">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://embed.tidymodels.org/reference/step_feature_hash.html" target="_blank" rel="noopener">&lt;code>step_feature_hash()&lt;/code>&lt;/a> is now soft deprecated in embed in favor of
&lt;a href="https://textrecipes.tidymodels.org/reference/step_dummy_hash.html" target="_blank" rel="noopener">&lt;code>step_dummy_hash()&lt;/code>&lt;/a> in textrecipes. The embed version uses TensorFlow, which for some use cases is quite a dependency. One thing to keep an eye out for when moving over is that the textrecipes version uses &lt;code>num_terms&lt;/code> instead of &lt;code>num_hash&lt;/code> to denote the number of columns to output.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Sacramento&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Old recipe&lt;/span>
&lt;span class='nv'>embed_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>zip&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>Sacramento&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://embed.tidymodels.org/reference/step_feature_hash.html'>step_feature_hash&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>zip&lt;/span>, num_hash &lt;span class='o'>=&lt;/span> &lt;span class='m'>64&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Loaded Tensorflow version 2.8.0&lt;/span>
&lt;span class='c'># New recipe&lt;/span>
&lt;span class='nv'>textrecipes_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://recipes.tidymodels.org/reference/recipe.html'>recipe&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>price&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>zip&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>Sacramento&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://textrecipes.tidymodels.org/reference/step_dummy_hash.html'>step_dummy_hash&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>zip&lt;/span>, num_terms &lt;span class='o'>=&lt;/span> &lt;span class='m'>64&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to extend our thanks to all of the contributors who helped make these releases possible!&lt;/p>
&lt;ul>
&lt;li>
&lt;p>themis:
&lt;a href="https://github.com/coforfe" target="_blank" rel="noopener">@coforfe&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/emilyriederer" target="_blank" rel="noopener">@emilyriederer&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/OGuggenbuehl" target="_blank" rel="noopener">@OGuggenbuehl&lt;/a>, and
&lt;a href="https://github.com/RobertGregg" target="_blank" rel="noopener">@RobertGregg&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>textrecipes:
&lt;a href="https://github.com/dgrtwo" target="_blank" rel="noopener">@dgrtwo&lt;/a>,
&lt;a href="https://github.com/DiabbZegpi" target="_blank" rel="noopener">@DiabbZegpi&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jcragy" target="_blank" rel="noopener">@jcragy&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/NLDataScientist" target="_blank" rel="noopener">@NLDataScientist&lt;/a>,
&lt;a href="https://github.com/raj-hubber" target="_blank" rel="noopener">@raj-hubber&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>embed:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/naveranoc" target="_blank" rel="noopener">@naveranoc&lt;/a>,
&lt;a href="https://github.com/talegari" target="_blank" rel="noopener">@talegari&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Q1 2022 tidymodels digest</title><link>https://www.tidyverse.org/blog/2022/04/tidymodels-2022-q1/</link><pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/04/tidymodels-2022-q1/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with `hugodown::tidy_show_meta()`)
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] `hugodown::use_tidy_thumbnails()`
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] `usethis::use_tidy_thanks()`
-->
&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ──────────────────────────── tidymodels 0.2.0 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ broom 0.7.12 ✓ rsample 0.1.1 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dials 0.1.0 ✓ tibble 3.1.6 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dplyr 1.0.8 ✓ tidyr 1.2.0 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ infer 1.0.0 ✓ tune 0.2.0 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ modeldata 0.1.1 ✓ workflows 0.2.6 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ parsnip 0.2.1 ✓ workflowsets 0.2.1 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ purrr 0.3.4 ✓ yardstick 0.0.9 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ recipes 0.2.0&lt;/span>
&lt;span class="c1">#&amp;gt; ── Conflicts ─────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class="c1">#&amp;gt; x purrr::discard() masks scales::discard()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::filter() masks stats::filter()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::lag() masks stats::lag()&lt;/span>
&lt;span class="c1">#&amp;gt; x recipes::step() masks stats::step()&lt;/span>
&lt;span class="c1">#&amp;gt; • Dig deeper into tidy modeling with R at https://www.tmwr.org&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the beginning of last year, we have been publishing
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">quarterly updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused, like these from the past month or so:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/02/recipes-0-2-0/" target="_blank" rel="noopener">recipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/03/usemodels-0-2-0/" target="_blank" rel="noopener">usemodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/03/parsnip-roundup-2022/" target="_blank" rel="noopener">parsnip and its extension packages&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2021/12/tidymodels-2021-q4/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been 21 CRAN releases of tidymodels packages. You can install these updates from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;baguette&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;broom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;brulee&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;dials&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;discrim&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;finetune&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;hardhat&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;multilevelmod&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;parsnip&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;plsmod&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;poissonreg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;recipes&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;rules&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;stacks&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;textrecipes&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;tune&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;tidymodels&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;usemodels&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;vetiver&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;workflows&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;workflowsets&amp;#34;&lt;/span>
&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>NEWS&lt;/code> files are linked here for each package; you&amp;rsquo;ll notice that there are a lot! We know it may be bothersome to keep up with all these changes, so we want to draw your attention to our recent blog posts above and also highlight a few more useful updates in today&amp;rsquo;s blog post.&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://baguette.tidymodels.org/news/index.html#baguette-020" target="_blank" rel="noopener">baguette&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://broom.tidymodels.org/news/index.html#broom-0711" target="_blank" rel="noopener">broom&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/brulee/news/index.html#brulee-010" target="_blank" rel="noopener">brulee&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dials.tidymodels.org/news/index.html#dials-010" target="_blank" rel="noopener">dials&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://finetune.tidymodels.org/news/index.html#finetune-020" target="_blank" rel="noopener">finetune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://hardhat.tidymodels.org/news/index.html#hardhat-020" target="_blank" rel="noopener">hardhat&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://hardhat.tidymodels.org/news/index.html#hardhat-020" target="_blank" rel="noopener">hardhat&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/multilevelmod/blob/main/NEWS.md" target="_blank" rel="noopener">multilevelmod&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://parsnip.tidymodels.org/news/index.html#parsnip-021" target="_blank" rel="noopener">parsnip&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://plsmod.tidymodels.org/news/index.html#plsmod-012" target="_blank" rel="noopener">plsmod&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://poissonreg.tidymodels.org/news/index.html#poissonreg-020" target="_blank" rel="noopener">poissonreg&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/recipes/blob/HEAD/NEWS.md#recipes-020" target="_blank" rel="noopener">recipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://rules.tidymodels.org/news/index.html#rules-020" target="_blank" rel="noopener">rules&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://stacks.tidymodels.org/news/index.html#stacks-022" target="_blank" rel="noopener">stacks&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://textrecipes.tidymodels.org/news/index.html#textrecipes-050" target="_blank" rel="noopener">textrecipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tune.tidymodels.org/news/index.html#tune-020" target="_blank" rel="noopener">tune&lt;/a>&lt;/li>
&lt;li>the
&lt;a href="https://tidymodels.tidymodels.org/news/index.html#tidymodels-020" target="_blank" rel="noopener">tidymodels&lt;/a> metapackage itself&lt;/li>
&lt;li>
&lt;a href="https://usemodels.tidymodels.org/news/index.html#usemodels-020" target="_blank" rel="noopener">usemodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://vetiver.tidymodels.org/news/index.html#vetiver-012" target="_blank" rel="noopener">vetiver&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflows.tidymodels.org/news/index.html#workflows-025" target="_blank" rel="noopener">workflows&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflowsets.tidymodels.org/news/index.html#workflowsets-021" target="_blank" rel="noopener">workflowsets&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>We&amp;rsquo;re really excited about
&lt;a href="https://tidymodels.github.io/brulee/" target="_blank" rel="noopener">brulee&lt;/a> and
&lt;a href="https://vetiver.tidymodels.org/" target="_blank" rel="noopener">vetiver&lt;/a> but will share more in upcoming blog posts.&lt;/p>
&lt;h2 id="feature-hashing">Feature hashing
&lt;a href="#feature-hashing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The newest
&lt;a href="https://textrecipes.tidymodels.org/" target="_blank" rel="noopener">textrecipes&lt;/a> release provides support for feature hashing, a feature engineering approach that can be helpful when working with high cardinality categorical data or text. A hashing function takes an input of variable size and maps it to an output of fixed size. Hashing functions are commonly used in cryptography and databases, and we can create a hash in R using &lt;code>rlang::hash()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">textrecipes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sacramento&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sac_split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">initial_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sacramento&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">strata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sac_train&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">training&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sac_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sac_test&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sac_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sac_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zip_hash&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">map_chr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rlang&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">zip_hash&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 698 × 2&lt;/span>
&lt;span class="c1">#&amp;gt; zip zip_hash &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;chr&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 z95838 32cbb7d319c97f062be64075c2ae6c07&lt;/span>
&lt;span class="c1">#&amp;gt; 2 z95815 55d08d816f0d2e9ec16af15239826e91&lt;/span>
&lt;span class="c1">#&amp;gt; 3 z95824 235b72b9a37a6154552498eb3f90e9e3&lt;/span>
&lt;span class="c1">#&amp;gt; 4 z95841 d973597ab5cc48a0dfe54b84a91249e1&lt;/span>
&lt;span class="c1">#&amp;gt; 5 z95842 c44537f2eecd51707b19e69027228a85&lt;/span>
&lt;span class="c1">#&amp;gt; 6 z95820 e1b86cbed49c029f9fa25bba94ede11e&lt;/span>
&lt;span class="c1">#&amp;gt; 7 z95670 60ee71387789bb8c58748e4632089cc4&lt;/span>
&lt;span class="c1">#&amp;gt; 8 z95838 32cbb7d319c97f062be64075c2ae6c07&lt;/span>
&lt;span class="c1">#&amp;gt; 9 z95815 55d08d816f0d2e9ec16af15239826e91&lt;/span>
&lt;span class="c1">#&amp;gt; 10 z95822 8e212bdf9650ef39a1634e6e18529834&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 688 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The variable &lt;code>zip&lt;/code> in this data on home sales in Sacramento, CA is of
&lt;a href="https://en.wikipedia.org/wiki/Cardinality_%28SQL_statements%29" target="_blank" rel="noopener">&amp;ldquo;high cardinality&amp;rdquo;&lt;/a> (as ZIP codes often are) with 67 unique values. When we &lt;code>hash()&lt;/code> the ZIP code, we get out, well, a hash value, and we will always get the same hash value for the same input (as you can see for ZIP code 95838 here). We can choose the fixed size of our hashed output to reduce the number of possible values to whatever we want; it turns out this works well in a lot of situations.&lt;/p>
&lt;p>Let&amp;rsquo;s use a hashing algorithm like this one (with an output size of 16) to create binary indicator variables for this high cardinality &lt;code>zip&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">hash_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">price&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">zip&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">beds&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">baths&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sac_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy_hash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">signed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num_terms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">16L&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hash_rec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">bake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 698 × 19&lt;/span>
&lt;span class="c1">#&amp;gt; dummyhash_zip_01 dummyhash_zip_02 dummyhash_zip_03 dummyhash_zip_04&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 0 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 2 0 1 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 3 0 0 1 0&lt;/span>
&lt;span class="c1">#&amp;gt; 4 1 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 5 0 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 6 0 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 7 0 1 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 8 0 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 9 0 1 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 10 0 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 688 more rows, and 15 more variables:&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_05 &amp;lt;dbl&amp;gt;, dummyhash_zip_06 &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_07 &amp;lt;dbl&amp;gt;, dummyhash_zip_08 &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_09 &amp;lt;dbl&amp;gt;, dummyhash_zip_10 &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_11 &amp;lt;dbl&amp;gt;, dummyhash_zip_12 &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_13 &amp;lt;dbl&amp;gt;, dummyhash_zip_14 &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_15 &amp;lt;dbl&amp;gt;, dummyhash_zip_16 &amp;lt;dbl&amp;gt;, beds &amp;lt;int&amp;gt;, …&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We now have 16 columns for &lt;code>zip&lt;/code> (along with the other predictors and the outcome), instead of the over 60 we would have had by making regular dummy variables.&lt;/p>
&lt;p>For more on feature hashing including its benefits (fast and low memory!) and downsides (not directly interpretable!), check out
&lt;a href="https://smltar.com/mlregression.html#case-study-feature-hashing" target="_blank" rel="noopener">Section 6.7 of &lt;em>Supervised Machine Learning for Text Analysis with R&lt;/em>&lt;/a> and/or
&lt;a href="https://www.tmwr.org/categorical.html#feature-hashing" target="_blank" rel="noopener">Section 17.4 of &lt;em>Tidy Modeling with R&lt;/em>&lt;/a>.&lt;/p>
&lt;h2 id="more-customization-for-workflow-sets">More customization for workflow sets
&lt;a href="#more-customization-for-workflow-sets">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Last year about this time, we introduced
&lt;a href="https://www.tidyverse.org/blog/2021/03/workflowsets-0-0-1/" target="_blank" rel="noopener">workflowsets&lt;/a>, a new package for creating, handling, and tuning multiple workflows at once. See
&lt;a href="https://www.tmwr.org/workflows.html#workflow-sets-intro" target="_blank" rel="noopener">Section 7.5&lt;/a> and especially
&lt;a href="https://www.tmwr.org/workflow-sets.html" target="_blank" rel="noopener">Chapter 15&lt;/a> of &lt;em>Tidy Modeling with R&lt;/em> for more on workflow sets. In the latest release of
&lt;a href="https://workflowsets.tidymodels.org/" target="_blank" rel="noopener">workflowsets&lt;/a>, we provide finer control of customization for the workflows you create with workflowsets. First you can create a standard workflow set by crossing a set of models with a set of preprocessors (let&amp;rsquo;s just use the feature hashing recipe we already created):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">glmnet_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">penalty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">mixture&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;glmnet&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">mars_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">mars&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prod_degree&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;earth&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">old_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow_set&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">preproc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hash&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">hash_rec&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">models&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MARS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mars_spec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">glmnet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glmnet_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">old_set&lt;/span>
&lt;span class="c1">#&amp;gt; # A workflow set/tibble: 2 × 4&lt;/span>
&lt;span class="c1">#&amp;gt; wflow_id info option result &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 hash_MARS &amp;lt;tibble [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 hash_glmnet &amp;lt;tibble [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>option&lt;/code> column is a placeholder for any arguments to use when we &lt;em>evaluate&lt;/em> the workflow; the possibilities here are any argument to functions like
&lt;a href="https://tune.tidymodels.org/reference/tune_grid.html" target="_blank" rel="noopener">&lt;code>tune_grid()&lt;/code>&lt;/a> or
&lt;a href="https://tune.tidymodels.org/reference/fit_resamples.html" target="_blank" rel="noopener">&lt;code>fit_resamples()&lt;/code>&lt;/a>. But what about arguments that belong not to the workflow as a whole, but to a recipe or a parsnip model? In the new release, we added support for customizing those kinds of arguments via &lt;code>update_workflow_model()&lt;/code> and &lt;code>update_workflow_recipe()&lt;/code>. This lets you, for example, say that you want to use a
&lt;a href="https://www.tidyverse.org/blog/2020/11/tidymodels-sparse-support/" target="_blank" rel="noopener">sparse blueprint&lt;/a> for fitting:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">sparse_bp&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">hardhat&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">default_recipe_blueprint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">composition&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;dgCMatrix&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">new_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">old_set&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">update_workflow_recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hash_glmnet&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hash_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">blueprint&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sparse_bp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can tune this workflow set, with the sparse blueprint for the glmnet model, over a set of resampling folds.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vfold_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sac_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">strata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">new_set&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">workflow_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">folds&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">verbose&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; i 1 of 2 tuning: hash_MARS&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ 1 of 2 tuning: hash_MARS (2.2s)&lt;/span>
&lt;span class="c1">#&amp;gt; i 2 of 2 tuning: hash_glmnet&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ 2 of 2 tuning: hash_glmnet (3.9s)&lt;/span>
&lt;span class="c1">#&amp;gt; # A workflow set/tibble: 2 × 4&lt;/span>
&lt;span class="c1">#&amp;gt; wflow_id info option result &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 hash_MARS &amp;lt;tibble [1 × 4]&amp;gt; &amp;lt;opts[2]&amp;gt; &amp;lt;tune[+]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 hash_glmnet &amp;lt;tibble [1 × 4]&amp;gt; &amp;lt;opts[2]&amp;gt; &amp;lt;tune[+]&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="new-parameter-objects-and-parameter-handling">New parameter objects and parameter handling
&lt;a href="#new-parameter-objects-and-parameter-handling">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Even if you are a regular tidymodels user, you may not have thought much about
&lt;a href="https://dials.tidymodels.org/" target="_blank" rel="noopener">dials&lt;/a>. This is an infrastructure package that is used to create and manage model hyperparameters. In the latest release of dials, we provide a handful of new parameters for various models and feature engineering approaches. There are a handful of parameters
&lt;a href="https://parsnip.tidymodels.org/reference/bart.html" target="_blank" rel="noopener">for the new &lt;code>parsnip::bart()&lt;/code>&lt;/a>, i.e. Bayesian additive regression trees model:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">prior_outcome_range&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Prior for Outcome Range (quantitative)&lt;/span>
&lt;span class="c1">#&amp;gt; Range: (0, 5]&lt;/span>
&lt;span class="nf">prior_terminal_node_coef&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Terminal Node Prior Coefficient (quantitative)&lt;/span>
&lt;span class="c1">#&amp;gt; Range: (0, 1]&lt;/span>
&lt;span class="nf">prior_terminal_node_expo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Terminal Node Prior Exponent (quantitative)&lt;/span>
&lt;span class="c1">#&amp;gt; Range: [0, 3]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This version of dials, along with the new hardhat release, also provides new functions for extracting single parameters and parameter sets from modeling objects.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">price&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">zip&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">beds&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">baths&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sac_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy_hash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">signed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num_terms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">extract_parameter_set_dials&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Collection of 1 parameters for tuning&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; identifier type object&lt;/span>
&lt;span class="c1">#&amp;gt; num_terms num_terms nparam[+]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also extract a single parameter by name:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mars_spec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">extract_parameter_dials&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;prod_degree&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Degree of Interaction (quantitative)&lt;/span>
&lt;span class="c1">#&amp;gt; Range: [1, 2]&lt;/span>
&lt;span class="n">glmnet_spec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">extract_parameter_dials&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;penalty&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Amount of Regularization (quantitative)&lt;/span>
&lt;span class="c1">#&amp;gt; Transformer: log-10 &lt;/span>
&lt;span class="c1">#&amp;gt; Range (transformed scale): [-10, 0]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We’d like to extend our thanks to all of the contributors who helped make these releases during Q1 possible!&lt;/p>
&lt;ul>
&lt;li>
&lt;p>baguette:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a> and
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>broom:
&lt;a href="https://github.com/cgoo4" target="_blank" rel="noopener">@cgoo4&lt;/a>,
&lt;a href="https://github.com/colinbrislawn" target="_blank" rel="noopener">@colinbrislawn&lt;/a>,
&lt;a href="https://github.com/DanChaltiel" target="_blank" rel="noopener">@DanChaltiel&lt;/a>,
&lt;a href="https://github.com/ddsjoberg" target="_blank" rel="noopener">@ddsjoberg&lt;/a>,
&lt;a href="https://github.com/fschaffner" target="_blank" rel="noopener">@fschaffner&lt;/a>,
&lt;a href="https://github.com/grantmcdermott" target="_blank" rel="noopener">@grantmcdermott&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/Marc-Girondot" target="_blank" rel="noopener">@Marc-Girondot&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/mlaviolet" target="_blank" rel="noopener">@mlaviolet&lt;/a>,
&lt;a href="https://github.com/oliverbothe" target="_blank" rel="noopener">@oliverbothe&lt;/a>,
&lt;a href="https://github.com/PursuitOfDataScience" target="_blank" rel="noopener">@PursuitOfDataScience&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/vincentarelbundock" target="_blank" rel="noopener">@vincentarelbundock&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>brulee:
&lt;a href="https://github.com/dfalbel" target="_blank" rel="noopener">@dfalbel&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>dials:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/py9mrg" target="_blank" rel="noopener">@py9mrg&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>discrim:
&lt;a href="https://github.com/deschen1" target="_blank" rel="noopener">@deschen1&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jmarshallnz" target="_blank" rel="noopener">@jmarshallnz&lt;/a>, and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>finetune:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/Steviey" target="_blank" rel="noopener">@Steviey&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>hardhat:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/ddsjoberg" target="_blank" rel="noopener">@ddsjoberg&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/MasterLuke84" target="_blank" rel="noopener">@MasterLuke84&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>multilevelmod:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a> and
&lt;a href="https://github.com/sitendug" target="_blank" rel="noopener">@sitendug&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>parsnip:
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/dietrichson" target="_blank" rel="noopener">@dietrichson&lt;/a>,
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jmarshallnz" target="_blank" rel="noopener">@jmarshallnz&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/nikhilpathiyil" target="_blank" rel="noopener">@nikhilpathiyil&lt;/a>,
&lt;a href="https://github.com/nvelden" target="_blank" rel="noopener">@nvelden&lt;/a>,
&lt;a href="https://github.com/t-kalinowski" target="_blank" rel="noopener">@t-kalinowski&lt;/a>,
&lt;a href="https://github.com/tiagomaie" target="_blank" rel="noopener">@tiagomaie&lt;/a>,
&lt;a href="https://github.com/tolliam" target="_blank" rel="noopener">@tolliam&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>plsmod:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a> and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>poissonreg:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a> and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>recipes:
&lt;a href="https://github.com/agwalker82" target="_blank" rel="noopener">@agwalker82&lt;/a>,
&lt;a href="https://github.com/AndrewKostandy" target="_blank" rel="noopener">@AndrewKostandy&lt;/a>,
&lt;a href="https://github.com/aridf" target="_blank" rel="noopener">@aridf&lt;/a>,
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/DoktorMike" target="_blank" rel="noopener">@DoktorMike&lt;/a>,
&lt;a href="https://github.com/duccioa" target="_blank" rel="noopener">@duccioa&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/FieteO" target="_blank" rel="noopener">@FieteO&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mdsteiner" target="_blank" rel="noopener">@mdsteiner&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/spsanderson" target="_blank" rel="noopener">@spsanderson&lt;/a>,
&lt;a href="https://github.com/themichjam" target="_blank" rel="noopener">@themichjam&lt;/a>,
&lt;a href="https://github.com/tmastny" target="_blank" rel="noopener">@tmastny&lt;/a>,
&lt;a href="https://github.com/tomazweiss" target="_blank" rel="noopener">@tomazweiss&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/walrossker" target="_blank" rel="noopener">@walrossker&lt;/a>, and
&lt;a href="https://github.com/zenggyu" target="_blank" rel="noopener">@zenggyu&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rules:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/wdkeyzer" target="_blank" rel="noopener">@wdkeyzer&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>stacks:
&lt;a href="https://github.com/amcmahon17" target="_blank" rel="noopener">@amcmahon17&lt;/a>,
&lt;a href="https://github.com/py9mrg" target="_blank" rel="noopener">@py9mrg&lt;/a>,
&lt;a href="https://github.com/Saarialho" target="_blank" rel="noopener">@Saarialho&lt;/a>,
&lt;a href="https://github.com/siegfried" target="_blank" rel="noopener">@siegfried&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/StuieT85" target="_blank" rel="noopener">@StuieT85&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/williamshell" target="_blank" rel="noopener">@williamshell&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>textrecipes:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>, and
&lt;a href="https://github.com/NLDataScientist" target="_blank" rel="noopener">@NLDataScientist&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tune:
&lt;a href="https://github.com/abichat" target="_blank" rel="noopener">@abichat&lt;/a>,
&lt;a href="https://github.com/AndrewKostandy" target="_blank" rel="noopener">@AndrewKostandy&lt;/a>,
&lt;a href="https://github.com/dax44" target="_blank" rel="noopener">@dax44&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/felxcon" target="_blank" rel="noopener">@felxcon&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juanydlh" target="_blank" rel="noopener">@juanydlh&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>,
&lt;a href="https://github.com/py9mrg" target="_blank" rel="noopener">@py9mrg&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/walrossker" target="_blank" rel="noopener">@walrossker&lt;/a>,
&lt;a href="https://github.com/williamshell" target="_blank" rel="noopener">@williamshell&lt;/a>, and
&lt;a href="https://github.com/wtbxsjy" target="_blank" rel="noopener">@wtbxsjy&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tidymodels:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/exsell-jc" target="_blank" rel="noopener">@exsell-jc&lt;/a>,
&lt;a href="https://github.com/hardin47" target="_blank" rel="noopener">@hardin47&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/PursuitOfDataScience" target="_blank" rel="noopener">@PursuitOfDataScience&lt;/a>,
&lt;a href="https://github.com/RaymondBalise" target="_blank" rel="noopener">@RaymondBalise&lt;/a>,
&lt;a href="https://github.com/scottlyden" target="_blank" rel="noopener">@scottlyden&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>usemodels:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a> and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>vetiver:
&lt;a href="https://github.com/atheriel" target="_blank" rel="noopener">@atheriel&lt;/a> and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>workflows:
&lt;a href="https://github.com/CarstenLange" target="_blank" rel="noopener">@CarstenLange&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>workflowsets:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dvanic" target="_blank" rel="noopener">@dvanic&lt;/a>,
&lt;a href="https://github.com/gdmcdonald" target="_blank" rel="noopener">@gdmcdonald&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/wdefreitas" target="_blank" rel="noopener">@wdefreitas&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>usemodels 0.2.0</title><link>https://www.tidyverse.org/blog/2022/03/usemodels-0-2-0/</link><pubDate>Wed, 23 Mar 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/03/usemodels-0-2-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with `hugodown::tidy_show_meta()`)
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] `hugodown::use_tidy_thumbnails()`
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] `usethis::use_tidy_thanks()`
-->
&lt;p>We&amp;rsquo;re chuffed to announce the release of
&lt;a href="https://usemodels.tidymodels.org/" target="_blank" rel="noopener">usemodels&lt;/a> 0.2.0. The usemodels package enables users to generate tidymodels code for fitting and tuning models. Given a) a formula and b) a data set, the &lt;code>use_*()&lt;/code> functions (such as &lt;code>use_glmnet()&lt;/code> and &lt;code>use_xgboost()&lt;/code>) create code to fit that specific model to that data, including appropriate preprocessing.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;usemodels&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This blog post describes some new features. You can see a full list of changes in the
&lt;a href="https://usemodels.tidymodels.org/news/index.html" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">usemodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="clipboard-access">Clipboard access
&lt;a href="#clipboard-access">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Each of the &lt;code>use_*()&lt;/code> functions now has a &lt;code>clipboard&lt;/code> feature that will send the new code to the clipboard, instead of writing to the console window.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">use_cubist&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">clipboard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## ✓ code is on the clipboard.
&lt;/code>&lt;/pre>
&lt;h2 id="new-models">New models
&lt;a href="#new-models">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As requested in GitHub issues, support for
&lt;a href="https://www.rulequest.com/see5-unix.html" target="_blank" rel="noopener">C5.0&lt;/a> and
&lt;a href="https://en.wikipedia.org/wiki/Support-vector_machine" target="_blank" rel="noopener">SVM&lt;/a> models was added. SVM models require centering and scaling of the predictors, so the usemodel function provides this automatically:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">two_class_dat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">use_kernlab_svm_rbf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">two_class_dat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## kernlab_recipe &amp;lt;-
## recipe(formula = Class ~ ., data = two_class_dat) %&amp;gt;%
## step_zv(all_predictors()) %&amp;gt;%
## step_normalize(all_numeric_predictors())
##
## kernlab_spec &amp;lt;-
## svm_rbf(cost = tune(), rbf_sigma = tune()) %&amp;gt;%
## set_mode(&amp;quot;classification&amp;quot;)
##
## kernlab_workflow &amp;lt;-
## workflow() %&amp;gt;%
## add_recipe(kernlab_recipe) %&amp;gt;%
## add_model(kernlab_spec)
##
## set.seed(81161)
## kernlab_tune &amp;lt;-
## tune_grid(kernlab_workflow, resamples = stop(&amp;quot;add your rsample object&amp;quot;), grid = stop(&amp;quot;add number of candidate points&amp;quot;))
&lt;/code>&lt;/pre>&lt;p>Let us know if there are other features that would be interesting for the package on its GitHub
&lt;a href="https://github.com/tidymodels/usemodels/issues" target="_blank" rel="noopener">issues page&lt;/a>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to all the people who contributed to usemodels since
&lt;a href="https://www.tidyverse.org/blog/2020/09/usemodels-0-0-1/" target="_blank" rel="noopener">our last blog post&lt;/a>:
&lt;a href="https://github.com/amazongodman" target="_blank" rel="noopener">@amazongodman&lt;/a>,
&lt;a href="https://github.com/brshallo" target="_blank" rel="noopener">@brshallo&lt;/a>,
&lt;a href="https://github.com/bryceroney" target="_blank" rel="noopener">@bryceroney&lt;/a>,
&lt;a href="https://github.com/czeildi" target="_blank" rel="noopener">@czeildi&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/larry77" target="_blank" rel="noopener">@larry77&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p></description></item><item><title>recipes 0.2.0</title><link>https://www.tidyverse.org/blog/2022/02/recipes-0-2-0/</link><pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/02/recipes-0-2-0/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with `hugodown::tidy_show_meta()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnails()`
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] `usethis::use_tidy_thanks()`
-->
&lt;p>We&amp;rsquo;re very excited to announce the release of
&lt;a href="https://recipes.tidymodels.org/" target="_blank" rel="noopener">recipes&lt;/a> 0.2.0. recipes is a package for preprocessing data before using it in models or visualizations. You can think of it as a mash-up of &lt;code>model.matrix()&lt;/code> and dplyr.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;recipes&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This blog post will describe the highlights of what&amp;rsquo;s new. You can see a full list of changes in the
&lt;a href="https://github.com/tidymodels/recipes/blob/main/NEWS.md" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="new-steps">New Steps
&lt;a href="#new-steps">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>step_nnmf_sparse()&lt;/code> was added to produce features using non-negative matrix factorization (via the
&lt;a href="https://github.com/zdebruine/RcppML" target="_blank" rel="noopener">RcppML&lt;/a> package). This will supersede the existing &lt;code>step_nnmf()&lt;/code> since that step was difficult to support and use. The new step allows for a sparse representation via regularization and, from our initial testing, is &lt;strong>much faster&lt;/strong> than the original NNMF step.&lt;/p>
&lt;p>The new step &lt;code>step_dummy_extract()&lt;/code> helps create indicator variables from text data, especially those with multiple choice values. For example, if a row of a variable had a value of &lt;code>&amp;quot;red,black,brown&amp;quot;&lt;/code>, the step can separate these values and make all of the required binary dummy variables.&lt;/p>
&lt;p>Here&amp;rsquo;s a real example from
&lt;a href="https://www.kaggle.com/c/sliced-s01e08-KJSEks" target="_blank" rel="noopener">Episode 8 of &lt;em>Sliced&lt;/em>&lt;/a> where a column of data from Spotify had the artist(s) of a song:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">recipes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">spotify&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">tibble&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">tribble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="o">~&lt;/span> &lt;span class="n">artists&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;[&amp;#39;Genesis&amp;#39;]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;[&amp;#39;Billie Holiday&amp;#39;, &amp;#39;Teddy Wilson&amp;#39;]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;[&amp;#39;Jimmy Barnes&amp;#39;, &amp;#39;INXS&amp;#39;]&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="n">artists&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">spotify&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy_extract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">artists&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pattern&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;(?&amp;lt;=&amp;#39;)[^&amp;#39;,]+(?=&amp;#39;)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">bake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">glimpse&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Rows: 3
## Columns: 6
## $ artists_Billie.Holiday &amp;lt;dbl&amp;gt; 0, 1, 0
## $ artists_Genesis &amp;lt;dbl&amp;gt; 1, 0, 0
## $ artists_INXS &amp;lt;dbl&amp;gt; 0, 0, 1
## $ artists_Jimmy.Barnes &amp;lt;dbl&amp;gt; 0, 0, 1
## $ artists_Teddy.Wilson &amp;lt;dbl&amp;gt; 0, 1, 0
## $ artists_other &amp;lt;dbl&amp;gt; 0, 0, 0
&lt;/code>&lt;/pre>&lt;p>Note that this step produces an &amp;ldquo;other&amp;rdquo; column and has arguments similar to &lt;code>step_other()&lt;/code> and &lt;code>step_dummy_multi_choice()&lt;/code>.&lt;/p>
&lt;p>&lt;code>step_percentile()&lt;/code> is a new step function after it had previously only been an example in the developer documentation. It can determine the empirical distribution of a variable using the training set, then convert any value to the percentile of this distribution.&lt;/p>
&lt;p>Finally, a new filtering function (&lt;code>step_filter_missing()&lt;/code>) can filter out columns that have too many missing values (for some definition of &amp;ldquo;too many&amp;rdquo;).&lt;/p>
&lt;h2 id="other-notable-new-features">Other notable new features
&lt;a href="#other-notable-new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>step_zv()&lt;/code> now has a &lt;code>group&lt;/code> argument. This can be helpful for models such as naive Bayes or quadratic discriminant analysis where the predictors must have at least two unique values &lt;em>within each class&lt;/em>.&lt;/p>
&lt;p>All recipe steps now officially support empty selections to be more aligned with dplyr and other packages that use tidyselect. For example, if a previous step removed all of the columns needed for a later step, the recipe does not fail when it is estimated (with the exception of &lt;code>step_mutate()&lt;/code>). The documentation in &lt;code>?selections&lt;/code> has been updated with advice for writing selectors when filtering steps are used.&lt;/p>
&lt;p>There are new &lt;code>extract_parameter_set_dials()&lt;/code> and &lt;code>extract_parameter_dials()&lt;/code> methods to extract parameter sets and single parameters from a recipe. Since this is related to tuning parameters, the tune package should be loaded before they are used.&lt;/p>
&lt;h2 id="breaking-changes">Breaking changes
&lt;a href="#breaking-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Changes in &lt;code>step_ica()&lt;/code> and &lt;code>step_kpca*()&lt;/code> will now cause recipe objects from previous versions to error when applied to new data. You will need to update these recipes with the current version to be able to use them.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank everyone that has contributed since the last release:
&lt;a href="https://github.com/agwalker82" target="_blank" rel="noopener">@agwalker82&lt;/a>,
&lt;a href="https://github.com/albert-ying" target="_blank" rel="noopener">@albert-ying&lt;/a>,
&lt;a href="https://github.com/AshesITR" target="_blank" rel="noopener">@AshesITR&lt;/a>,
&lt;a href="https://github.com/ddsjoberg" target="_blank" rel="noopener">@ddsjoberg&lt;/a>,
&lt;a href="https://github.com/DoktorMike" target="_blank" rel="noopener">@DoktorMike&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/emmansh" target="_blank" rel="noopener">@emmansh&lt;/a>,
&lt;a href="https://github.com/hermandr" target="_blank" rel="noopener">@hermandr&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jacekkotowski" target="_blank" rel="noopener">@jacekkotowski&lt;/a>,
&lt;a href="https://github.com/JensPMB" target="_blank" rel="noopener">@JensPMB&lt;/a>,
&lt;a href="https://github.com/jkennel" target="_blank" rel="noopener">@jkennel&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/lg1000" target="_blank" rel="noopener">@lg1000&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/markjrieke" target="_blank" rel="noopener">@markjrieke&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/ninohardt" target="_blank" rel="noopener">@ninohardt&lt;/a>,
&lt;a href="https://github.com/SewerynGrodny" target="_blank" rel="noopener">@SewerynGrodny&lt;/a>,
&lt;a href="https://github.com/SimonCoulombe" target="_blank" rel="noopener">@SimonCoulombe&lt;/a>,
&lt;a href="https://github.com/spsanderson" target="_blank" rel="noopener">@spsanderson&lt;/a>,
&lt;a href="https://github.com/tedmoorman" target="_blank" rel="noopener">@tedmoorman&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/tsengj" target="_blank" rel="noopener">@tsengj&lt;/a>,
&lt;a href="https://github.com/walrossker" target="_blank" rel="noopener">@walrossker&lt;/a>,
&lt;a href="https://github.com/williamshell" target="_blank" rel="noopener">@williamshell&lt;/a>, and
&lt;a href="https://github.com/xiaoxi-david" target="_blank" rel="noopener">@xiaoxi-david&lt;/a>.&lt;/p></description></item><item><title>Closing out our year with a Q4 2021 tidymodels update</title><link>https://www.tidyverse.org/blog/2021/12/tidymodels-2021-q4/</link><pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/12/tidymodels-2021-q4/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with `hugodown::tidy_show_meta()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnails()`
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] `usethis::use_tidy_thanks()`
-->
&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ──────────────────────────── tidymodels 0.1.4 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ broom 0.7.10 ✓ rsample 0.1.1 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dials 0.0.10 ✓ tibble 3.1.6 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dplyr 1.0.7 ✓ tidyr 1.1.4 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ infer 1.0.0 ✓ tune 0.1.6 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ modeldata 0.1.1 ✓ workflows 0.2.4 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ parsnip 0.1.7 ✓ workflowsets 0.1.0 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ purrr 0.3.4 ✓ yardstick 0.0.9 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ recipes 0.1.17&lt;/span>
&lt;span class="c1">#&amp;gt; ── Conflicts ─────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class="c1">#&amp;gt; x purrr::discard() masks scales::discard()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::filter() masks stats::filter()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::lag() masks stats::lag()&lt;/span>
&lt;span class="c1">#&amp;gt; x recipes::step() masks stats::step()&lt;/span>
&lt;span class="c1">#&amp;gt; • Dig deeper into tidy modeling with R at https://www.tmwr.org&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Starting at the beginning of this year, we now publish
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">regular updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused. The purpose of these quarterly posts is to share useful new features and any updates you may have missed.&lt;/p>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2021/09/tidymodels-2021-q3/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been seven CRAN releases of tidymodels packages. You can install these updates from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;broom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;embed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;rsample&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;shinymodels&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;tidymodels&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;workflows&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;yardstick&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>NEWS&lt;/code> files are linked here for each package; you&amp;rsquo;ll notice that some of these releases involve small bug fixes or internal changes that are not user-facing. We write code in these smaller, modular packages that we can release frequently both to make models easier to deploy and to keep our software easier to maintain. We know it may feel like a lot of moving parts to keep up with if you are a tidymodels user, so we want to highlight a couple of the more useful updates in these releases.&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://broom.tidymodels.org/news/index.html#broom-0-7-10-2021-10-31" target="_blank" rel="noopener">broom&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://embed.tidymodels.org/news/index.html#embed-015" target="_blank" rel="noopener">embed&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://rsample.tidymodels.org/news/index.html#rsample-011" target="_blank" rel="noopener">rsample&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://shinymodels.tidymodels.org/news/index.html#shinymodels-010" target="_blank" rel="noopener">shinymodels&lt;/a>&lt;/li>
&lt;li>the
&lt;a href="https://tidymodels.tidymodels.org/news/index.html#tidymodels-0-1-4-2021-10-01" target="_blank" rel="noopener">tidymodels&lt;/a> metapackage itself&lt;/li>
&lt;li>
&lt;a href="https://workflows.tidymodels.org/news/index.html#workflows-0-2-4-2021-10-12" target="_blank" rel="noopener">workflows&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://yardstick.tidymodels.org/news/index.html#yardstick-0-0-9-2021-11-22" target="_blank" rel="noopener">yardstick&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="tools-for-tidymodels-analyses">Tools for tidymodels analyses
&lt;a href="#tools-for-tidymodels-analyses">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Several of these releases incorporate tools to reduce the overhead for getting started with your tidymodels analysis or for understanding your results more deeply. The new release of the tidymodels metapackage itself provides an R Markdown template. To use the tidymodels analysis template from RStudio, access through &lt;code>File -&amp;gt; New File -&amp;gt; R Markdown&lt;/code>. This will open the dialog box where you can select from one of the available templates:&lt;/p>
&lt;p>&lt;img src="figure/tidymodels-template.png" title="R Markdown template dialog box with three choices, including the tidymodels Model Analysis template" alt="R Markdown template dialog box with three choices, including the tidymodels Model Analysis template" width="70%" />&lt;/p>
&lt;p>If you are not using RStudio, you&amp;rsquo;ll also need to install
&lt;a href="https://pandoc.org" target="_blank" rel="noopener">Pandoc&lt;/a>. Then, use the &lt;code>rmarkdown::draft()&lt;/code> function to create the model card:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rmarkdown&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">draft&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;my_model_analysis.Rmd&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">template&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;model-analysis&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;tidymodels&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This template offers an opinionated guide on how to structure a basic modeling analysis from exploratory data analysis through evaluating your models. Your individual modeling analysis may require you to add to, subtract from, or otherwise change this structure, but you can consider this a general framework to start from.&lt;/p>
&lt;p>This quarter, the package
&lt;a href="https://shinymodels.tidymodels.org/" target="_blank" rel="noopener">shinymodels&lt;/a> had its first CRAN release. This package was the focus of our tidymodels summer intern
&lt;a href="https://www.shishamad.com/posts/how-i-got-my-rstudio-internship/" target="_blank" rel="noopener">Shisham Adhikari&lt;/a> in 2021, and it provides support for launching a Shiny app to interactively explore tuning or resampling results.&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/tidymodels/shinymodels/main/man/figures/example.png" alt="Screenshot of shinymodels app exploring a regression model">&lt;/p>
&lt;h2 id="make-your-own-rsample-split-objects">Make your own rsample split objects
&lt;a href="#make-your-own-rsample-split-objects">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The data resampling infrastructure provided by the
&lt;a href="https://rsample.tidymodels.org/" target="_blank" rel="noopener">rsample&lt;/a> package has always worked well when you start off with a dataset to split into training and testing. However, we heard from users that in some situations they have training and testing sets determined by other processes, or need to create their data split using more complex conditions. The latest release of rsample provides more fluent and flexible support for custom &lt;code>rsplit&lt;/code> creation that sets you up for the rest of your tidymodels analysis. For example, you can create a split object from two dataframes.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gapminder&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">year_split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">make_splits&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">gapminder&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="m">2000&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">gapminder&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="m">2000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">year_split&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;Analysis/Assess/Total&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;1420/284/1704&amp;gt;&lt;/span>
&lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 284 × 6&lt;/span>
&lt;span class="c1">#&amp;gt; country continent year lifeExp pop gdpPercap&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Afghanistan Asia 2002 42.1 25268405 727.&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Afghanistan Asia 2007 43.8 31889923 975.&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Albania Europe 2002 75.7 3508512 4604.&lt;/span>
&lt;span class="c1">#&amp;gt; 4 Albania Europe 2007 76.4 3600523 5937.&lt;/span>
&lt;span class="c1">#&amp;gt; 5 Algeria Africa 2002 71.0 31287142 5288.&lt;/span>
&lt;span class="c1">#&amp;gt; 6 Algeria Africa 2007 72.3 33333216 6223.&lt;/span>
&lt;span class="c1">#&amp;gt; 7 Angola Africa 2002 41.0 10866106 2773.&lt;/span>
&lt;span class="c1">#&amp;gt; 8 Angola Africa 2007 42.7 12420476 4797.&lt;/span>
&lt;span class="c1">#&amp;gt; 9 Argentina Americas 2002 74.3 38331121 8798.&lt;/span>
&lt;span class="c1">#&amp;gt; 10 Argentina Americas 2007 75.3 40301927 12779.&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 274 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can alternatively
&lt;a href="https://rsample.tidymodels.org/reference/make_splits.html" target="_blank" rel="noopener">create a split using a list of indices&lt;/a>; this &lt;code>make_splits()&lt;/code> flexibility is good for when the defaults in &lt;code>initial_split()&lt;/code> and &lt;code>initial_time_split()&lt;/code> are not appropriate. We also added a
&lt;a href="https://rsample.tidymodels.org/reference/validation_split.html" target="_blank" rel="noopener">new function &lt;code>validation_time_split()&lt;/code>&lt;/a> to create a single validation resample, much like &lt;code>validation_split()&lt;/code>, but taking the first &lt;code>prop&lt;/code> samples for training.&lt;/p>
&lt;h2 id="survey-says">Survey says&amp;hellip;
&lt;a href="#survey-says">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This fall, we
&lt;a href="https://www.tidyverse.org/blog/2021/10/tidymodels-2022-survey/" target="_blank" rel="noopener">launched our second tidymodels survey&lt;/a> to gather community input on our priorities for 2022. Thank you so much to everyone who shared their opinion! Over 600 people completed the survey, a significant increase from last year, and the top three requested features overall are:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Supervised feature selection:&lt;/strong> This includes basic supervised filtering methods as well as techniques such as recursive feature elimination.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Model fairness analysis and metrics:&lt;/strong> Techniques to measure if there are biases in model predictions that treat groups or individuals unfairly.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Post modeling probability calibration:&lt;/strong> Methods to characterize (and correct) probability predictions to make sure that probability estimates reflect the observed event rate(s).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>You can also
&lt;a href="https://colorado.rstudio.com/rsc/tidymodels-priorities-2022/" target="_blank" rel="noopener">check out our full analysis of the survey results&lt;/a>.&lt;/p>
&lt;p>&lt;img src="figure/survey-results.png" alt="Bar chart broken out by role showing that all groups (students, academics, industry, hobbyists) rate supervised feature selection highest">&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We’d like to extend our thanks to all of the contributors who helped make these releases during Q4 possible!&lt;/p>
&lt;ul>
&lt;li>
&lt;p>broom:
&lt;a href="https://github.com/gjones1219" target="_blank" rel="noopener">@gjones1219&lt;/a>,
&lt;a href="https://github.com/gravesti" target="_blank" rel="noopener">@gravesti&lt;/a>,
&lt;a href="https://github.com/gregmacfarlane" target="_blank" rel="noopener">@gregmacfarlane&lt;/a>,
&lt;a href="https://github.com/ilapros" target="_blank" rel="noopener">@ilapros&lt;/a>,
&lt;a href="https://github.com/jamesrrae" target="_blank" rel="noopener">@jamesrrae&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/lcgodoy" target="_blank" rel="noopener">@lcgodoy&lt;/a>,
&lt;a href="https://github.com/RobBinS83" target="_blank" rel="noopener">@RobBinS83&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/statzhero" target="_blank" rel="noopener">@statzhero&lt;/a>,
&lt;a href="https://github.com/vincentarelbundock" target="_blank" rel="noopener">@vincentarelbundock&lt;/a>, and
&lt;a href="https://github.com/wviechtb" target="_blank" rel="noopener">@wviechtb&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>embed:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jlmelville" target="_blank" rel="noopener">@jlmelville&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rsample:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jmgirard" target="_blank" rel="noopener">@jmgirard&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mmp3" target="_blank" rel="noopener">@mmp3&lt;/a>, and
&lt;a href="https://github.com/Shafi2016" target="_blank" rel="noopener">@Shafi2016&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>shinymodels:
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tidymodels:
&lt;a href="https://github.com/agronomofiorentini" target="_blank" rel="noopener">@agronomofiorentini&lt;/a>,
&lt;a href="https://github.com/AshleyHenry15" target="_blank" rel="noopener">@AshleyHenry15&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>workflows:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dkgaraujo" target="_blank" rel="noopener">@dkgaraujo&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>yardstick:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Survival Analysis in tidymodels</title><link>https://www.tidyverse.org/blog/2021/11/survival-analysis-parsnip-adjacent/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/11/survival-analysis-parsnip-adjacent/</guid><description>&lt;p>Survival analysis is an important field in modeling and there are many R packages available which implement various models, from &amp;ldquo;classic&amp;rdquo; parametric models to boosted trees. While they cover a great variety of model types, they also come with considerable amounts of heterogeneity in syntax and levels of documentation. The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles. It provides a consistent interface to a variety of modelling functions along with tools for resampling, assessing performance, and hyperparameter tuning.&lt;/p>
&lt;p>In terms of survival analysis, however, tidymodels so far hasn&amp;rsquo;t been as feature-rich as we&amp;rsquo;d like it to be, e.g., the available models only covered parametric survival models. With this post we&amp;rsquo;d like to provide an update on recent work to extend the tooling for survival analysis in tidymodels and gather feedback on future plans.&lt;/p>
&lt;p>Making survival analysis a first-class citizen in tidymodels requires touching several aspects across the collection of packages:&lt;/p>
&lt;ul>
&lt;li>Pre-processing to accommodate the data structure of censored data.&lt;/li>
&lt;li>A bigger selection of models which can be specified, fitted, and used for prediction.&lt;/li>
&lt;li>Additional performance metrics tailored to survival data.&lt;/li>
&lt;/ul>
&lt;p>The new
&lt;a href="https://censored.tidymodels.org/" target="_blank" rel="noopener">censored&lt;/a> package along with
&lt;a href="https://parsnip.tidymodels.org/" target="_blank" rel="noopener">parsnip&lt;/a> offers several new models, engines, and prediction types. The censored package is not on CRAN yet but we are looking for early adopters to try it out and give us feedback! You can install it via&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>devtools&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://devtools.r-lib.org//reference/remote-reexports.html'>install_github&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidymodels/censored"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="a-new-mode-for-parsnip">A new mode for parsnip
&lt;a href="#a-new-mode-for-parsnip">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Some model types can be used for multiple purposes with the same computation engine, e.g. a
&lt;a href="https://parsnip.tidymodels.org/reference/decision_tree.html" target="_blank" rel="noopener">&lt;code>decision_tree()&lt;/code>&lt;/a> model can be used for either classification or regression with the &lt;code>rpart&lt;/code> engine. This distinction is made in parsnip by
&lt;a href="https://parsnip.tidymodels.org/articles/parsnip_Intro.html#motivation" target="_blank" rel="noopener">specifying the mode of a model&lt;/a>. We have now introduced a new &lt;code>&amp;quot;censored regression&amp;quot;&lt;/code> mode in parsnip for models which can be used for survival analysis. The aforementioned
&lt;a href="https://parsnip.tidymodels.org/reference/decision_tree.html" target="_blank" rel="noopener">&lt;code>decision_tree()&lt;/code>&lt;/a> with the &lt;code>rpart&lt;/code> engine can also be used to fit a survival decision tree:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/censored'>censored&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/decision_tree.html'>decision_tree&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"rpart"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"censored regression"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Decision Tree Model Specification (censored regression)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Computational engine: rpart&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="model-fitting">Model fitting
&lt;a href="#model-fitting">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>For fitting a model, parsnip typically supports a formula and a matrix interface, regardless of the interface of the engine. For censored regression models, we are currently only supporting a formula interface. Most engines already support this type of interface, and a formula allows us to specify the outcome via the standard
&lt;a href="https://rdrr.io/pkg/survival/man/Surv.html" target="_blank" rel="noopener">&lt;code>survival::Surv()&lt;/code>&lt;/a> function, tying together event time and status.&lt;/p>
&lt;p>A formula also let&amp;rsquo;s us specify stratification for a proportional hazards model. For the
&lt;a href="https://rdrr.io/pkg/survival/man/coxph.html" target="_blank" rel="noopener">&lt;code>survival::coxph()&lt;/code>&lt;/a> function, which powers the &lt;code>survival&lt;/code> engine for
&lt;a href="https://parsnip.tidymodels.org/reference/proportional_hazards.html" target="_blank" rel="noopener">&lt;code>proportional_hazards()&lt;/code>&lt;/a>, this may look like&lt;/p>
&lt;div align="center">
&lt;p>&lt;code>Surv(time, event) ~ x + z + strata(s)&lt;/code>&lt;/p>
&lt;/div>
&lt;p>Some other packages can fit this model, let&amp;rsquo;s use the glmnet package. However,
&lt;a href="https://glmnet.stanford.edu/reference/glmnet.html" target="_blank" rel="noopener">&lt;code>glmnet::glmnet()&lt;/code>&lt;/a>, does not have a formula interface and it requires us to specify the strata by stratifying the response via &lt;code>stratifySurv(y, s)&lt;/code>. The response is typically a &lt;code>Surv&lt;/code> object, so you could end up with a formula like this:&lt;/p>
&lt;div align="center">
&lt;p>&lt;code>stratifySurv(Surv(time, event), strata) ~ x + z&lt;/code>&lt;/p>
&lt;/div>
&lt;p>This works for fitting the model but the syntax is rather convoluted on the left-hand side of the formula. The specification of the stratification is inconsistent with the approach taken by the survival package. Additionally, without further modification, prediction fails because variables on the left-hand side of the formula are treated as response variables by parsnip and are not available at prediction time.&lt;/p>
&lt;p>We already need to translate from formula interface to matrix interface for this engine, and we like interfaces to be as consistent as possible here in tidymodels so we decided to go with the specification of stratification through a
&lt;a href="https://rdrr.io/pkg/survival/man/strata.html" target="_blank" rel="noopener">&lt;code>strata()&lt;/code>&lt;/a> term on the right-hand side of the formula for proportional hazards models, regardless of the engine.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/therneau/survival'>survival&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>bladder_train&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>bladder&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;span class='o'>]&lt;/span>
&lt;span class='nv'>bladder_test&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>bladder&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>,&lt;span class='o'>]&lt;/span>
&lt;span class='nv'>cox_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/proportional_hazards.html'>proportional_hazards&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>penalty &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.123&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"glmnet"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>f_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cox_spec&lt;/span>,
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>stop&lt;/span>, &lt;span class='nv'>event&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>rx&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>size&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>number&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/strata.html'>strata&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>enum&lt;/span>&lt;span class='o'>)&lt;/span>,
data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>bladder_train&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="prediction">Prediction
&lt;a href="#prediction">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>We have introduced several new prediction types: time to event (&lt;code>time&lt;/code>), linear predictor (&lt;code>linear_pred&lt;/code>), survival probability (&lt;code>survival&lt;/code>), and hazard (&lt;code>hazard&lt;/code>). Some of these types are time-dependent, e.g., the survival probability is the probability to survive beyond a certain time point. In keeping with the tidymodels design principle that each row of the data set you&amp;rsquo;re predicting on should give you exactly one row in the dataset of predictions, &lt;code>predict(type = &amp;quot;survival&amp;quot;, time)&lt;/code> returns a nested tibble if &lt;code>time&lt;/code> contains multiple time points. This can be used to approximate survival curves.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>f_pred&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>f_fit&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>bladder_test&lt;/span>,
type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"survival"&lt;/span>, time &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/seq.html'>seq&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>20&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>f_pred&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>f_pred&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>id &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/factor.html'>factor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>unnest&lt;/span>&lt;span class='o'>(&lt;/span>cols &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>f_pred&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>ggplot&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>aes&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.time&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.pred_survival&lt;/span>, col &lt;span class='o'>=&lt;/span> &lt;span class='nv'>id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>geom_step&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/predict-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Usually, the linear predictor is the linear combination of the predictors, weighted with the coefficients, often denoted as $x^{T} \beta$. This is what is being returned by the &lt;code>glmnet&lt;/code> engine for
&lt;a href="https://parsnip.tidymodels.org/reference/proportional_hazards.html" target="_blank" rel="noopener">&lt;code>proportional_hazards()&lt;/code>&lt;/a> models and by the &lt;code>mboost&lt;/code> engine for
&lt;a href="https://parsnip.tidymodels.org/reference/boost_tree.html" target="_blank" rel="noopener">&lt;code>boost_tree()&lt;/code>&lt;/a> models (e.g., with mode &lt;code>&amp;quot;censored regression&amp;quot;&lt;/code>). For proportional hazards models, the linear predictor describes &lt;em>relative&lt;/em> risk, i.e., it refers to a pair of observations: the observation $x$ and a reference observation of predictors with value 0.&lt;/p>
&lt;p>The survival package implements different choices for the reference observation. As a default it uses the mean predictor, i.e., the observation $x$ is centered with the mean predictor before the usual weighted linear combination is calculated. What makes a useful reference observation is context-dependent and can be more complex than just 0 or the average. In a medical setting with predictors age and drug concentration, one might be interested in the effect relative to mean age but a drug concentration of 0 (the control group). While we think through a more general approach to specifying such a reference observation or baseline hazard, we ensure that all engines in censored use the same approach: a reference observation of 0.&lt;/p>
&lt;p>Let&amp;rsquo;s illustrate the difference in (default) predictions derived from the survival and censored packages and their relationship with the linear predictor. The prodlim package lets us simulate survival data with two predictors &lt;code>X1&lt;/code> (binary) and &lt;code>X2&lt;/code> (numeric) which both have an effect of $exp(1)$ on the hazard of the unobserved event time.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://ggplot2.tidyverse.org'>ggplot2&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>prodlim&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>43500&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># add 0.5 to X2 (with mean 0) to demonstrate the effect of centering&lt;/span>
&lt;span class='nv'>train_dat&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/prodlim/man/SimSurv.html'>SimSurv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2000&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>X2 &lt;span class='o'>=&lt;/span> &lt;span class='nv'>X2&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>0.5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>test_dat&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/prodlim/man/SimSurv.html'>SimSurv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>20&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>X2 &lt;span class='o'>=&lt;/span> &lt;span class='nv'>X2&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>0.5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>test_pred&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>test_dat&lt;/span>&lt;span class='o'>[&lt;/span>, &lt;span class='m'>5&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>6&lt;/span>&lt;span class='o'>]&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can compare the value of the linear predictor using the true coefficients of 1 with the predictions from the survival package. Plotting them against each other shows the offset of the mean of &lt;code>X2&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>fit_survival&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/coxph.html'>coxph&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>, &lt;span class='nv'>status&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>X1&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>X2&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>train_dat&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>pred_survival&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>fit_survival&lt;/span>, newdata &lt;span class='o'>=&lt;/span> &lt;span class='nv'>test_pred&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>pred&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>bind_cols&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>test_pred&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>linear_pred &lt;span class='o'>=&lt;/span> &lt;span class='nv'>X1&lt;/span> &lt;span class='o'>*&lt;/span> &lt;span class='m'>1&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>X2&lt;/span> &lt;span class='o'>*&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>,
&lt;span class='nf'>tibble&lt;/span>&lt;span class='o'>(&lt;/span>pred_survival &lt;span class='o'>=&lt;/span> &lt;span class='nv'>pred_survival&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>train_dat&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>X2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] 0.4683339&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>pred&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>linear_pred&lt;/span>, &lt;span class='nv'>pred_survival&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_point.html'>geom_point&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_abline.html'>geom_abline&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>slope &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, intercept &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/lp-center-plot-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Measuring performance is a key element of predictive modelling. Our design philosophy in tidymodels is that the calculation of performance metrics should be agnostic to ancillary information such as the model type or the training set. Essentially all you need are the observations and the predictions. For proportional hazards models, the observation and the prediction actually describe different aspects of survival: the observation is the survival time while the prediction describes the risk; the two have an inverse relationship. To help us standardize the assessment modules, we change the sign of the linear predictor. This may be opposite to the sign of predictions obtained using the underlying engine directly. You can opt out of this by setting the &lt;code>increasing&lt;/code> argument of
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> to &lt;code>FALSE&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>fit_censored&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/proportional_hazards.html'>proportional_hazards&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"survival"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>, &lt;span class='nv'>status&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>X1&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>X2&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>train_dat&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>pred_censored&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>fit_censored&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"linear_pred"&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>test_pred&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>pred&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>bind_cols&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>pred&lt;/span>,
&lt;span class='nv'>pred_censored&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>rename&lt;/span>&lt;span class='o'>(&lt;/span>pred_censored &lt;span class='o'>=&lt;/span> &lt;span class='nv'>.pred_linear_pred&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>pred&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>linear_pred&lt;/span>, &lt;span class='nv'>pred_censored&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_point.html'>geom_point&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_abline.html'>geom_abline&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>slope &lt;span class='o'>=&lt;/span> &lt;span class='o'>-&lt;/span>&lt;span class='m'>1&lt;/span>, intercept &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/lp-sign-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;h3 id="model-and-prediction-types-available-in-censored">Model and prediction types available in censored
&lt;a href="#model-and-prediction-types-available-in-censored">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Currently, censored contains the following models, engine, and prediction types with ✔ indicating &amp;ldquo;available&amp;rdquo;, ✖ indicating &amp;ldquo;unavailable&amp;rdquo;, and ◯ indicating &amp;ldquo;to do&amp;rdquo;.&lt;/p>
&lt;div class="highlight">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">model&lt;/th>
&lt;th align="left">engine&lt;/th>
&lt;th align="left">time&lt;/th>
&lt;th align="left">survival&lt;/th>
&lt;th align="left">linear_pred&lt;/th>
&lt;th align="left">raw&lt;/th>
&lt;th align="left">quantile&lt;/th>
&lt;th align="left">hazard&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">bag_tree&lt;/td>
&lt;td align="left">rpart&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">boost_tree&lt;/td>
&lt;td align="left">mboost&lt;/td>
&lt;td align="left">◯&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">decision_tree&lt;/td>
&lt;td align="left">party&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">decision_tree&lt;/td>
&lt;td align="left">rpart&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">proportional_hazards&lt;/td>
&lt;td align="left">glmnet&lt;/td>
&lt;td align="left">◯&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">proportional_hazards&lt;/td>
&lt;td align="left">survival&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">rand_forest&lt;/td>
&lt;td align="left">party&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">rand_forest&lt;/td>
&lt;td align="left">randomForestSRC&lt;/td>
&lt;td align="left">◯&lt;/td>
&lt;td align="left">◯&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">rand_forest&lt;/td>
&lt;td align="left">ranger&lt;/td>
&lt;td align="left">◯&lt;/td>
&lt;td align="left">◯&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">survival_reg&lt;/td>
&lt;td align="left">flexsurv&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">◯&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">survival_reg&lt;/td>
&lt;td align="left">survival&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">◯&lt;/td>
&lt;td align="left">✖&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;td align="left">✔&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;h3 id="whats-next">What&amp;rsquo;s next?
&lt;a href="#whats-next">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>We want survival analysis to be a first-class citizen in tidymodels which means having access to preprocessing, resampling, models, metrics, and tuning. The next steps on that path are:&lt;/p>
&lt;ul>
&lt;li>A role for censoring indicator columns and a step &lt;code>step_surv()&lt;/code> in recipes.&lt;/li>
&lt;li>A new ROC metric for survival models in yardstick.&lt;/li>
&lt;li>An adaption of workflows and tune is to follow after that.&lt;/li>
&lt;/ul>
&lt;p>Additionally, we are in the process of figuring out how different types of censoring and time-dependent effects fit into our API.&lt;/p>
&lt;p>We&amp;rsquo;d love to hear from you! Some questions we have include: Would you find this useful? Are there particular models/methods you&amp;rsquo;d like to see? Do you use time-dependent effects? Do you use interactions? Which types of censoring do you use?&lt;/p>
&lt;p>We&amp;rsquo;d greatly appreciate feedback, ideally in the replies to the
&lt;a href="https://community.rstudio.com/t/feedback-on-the-censored-package-for-survival-analysis-with-tidymodels/119674" target="_blank" rel="noopener">corresponding post on RStudio Community&lt;/a>!&lt;/p></description></item><item><title>Take the tidymodels survey for 2022 priorities</title><link>https://www.tidyverse.org/blog/2021/10/tidymodels-2022-survey/</link><pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/10/tidymodels-2022-survey/</guid><description>&lt;p>In 2020, we created a survey to get community input on how we prioritize our projects.
&lt;a href="https://connect.rstudioservices.com/tidymodels-priorities-survey/README.html" target="_blank" rel="noopener">The results&lt;/a> gave us a good sense of which items people were most interested in. The top three requests were:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Model stacking!&lt;/strong> This ended up resulting in the
&lt;a href="https://twitter.com/simonpcouch/status/1347288263472553984" target="_blank" rel="noopener">award&lt;/a>-winning
&lt;a href="https://stacks.tidymodels.org/" target="_blank" rel="noopener">stacks package&lt;/a> by our intern Simon Couch.&lt;/li>
&lt;li>&lt;strong>Model ops (deploying and monitoring models).&lt;/strong> We are currently working on this from
&lt;a href="https://twitter.com/juliasilge/status/1440784933576851456?s=20" target="_blank" rel="noopener">multiple fronts&lt;/a>.&lt;/li>
&lt;li>&lt;strong>Adaptive resampling and better parallel processing.&lt;/strong> The
&lt;a href="https://finetune.tidymodels.org/" target="_blank" rel="noopener">finetune package&lt;/a> solved the first part and some work
&lt;a href="https://github.com/tidymodels/tune/pull/305" target="_blank" rel="noopener">on the tune package&lt;/a> resolved the second.&lt;/li>
&lt;/ul>
&lt;p>Almost everything that respondents prioritized highly last year has either been completed or is currently in progress. Most of our time right now is spent on model ops, survival analysis, and case weights. That work will take us through the end of the year (at least). Since this survey seemed to work well last year, we&amp;rsquo;ve decided to use it again to prioritize features for next year.&lt;/p>
&lt;h2 id="looking-toward-2022">Looking toward 2022
&lt;a href="#looking-toward-2022">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;strong>Take a look at
&lt;a href="https://conjoint.qualtrics.com/jfe/form/SV_3gtKaK8G1Z1JC50?Q_CHL=social&amp;amp;Q_SocialSource=tidyverseblog" target="_blank" rel="noopener">our survey for next year&amp;rsquo;s priorities&lt;/a>&lt;/strong> and let us know what you think. There are some items we&amp;rsquo;ve put &amp;ldquo;on the menu&amp;rdquo; but you can write in other items that you are interested in.&lt;/p>
&lt;p>The current slate of our possibile priorities include:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Model fairness analysis and metrics&lt;/strong>: Techniques to measure if there are biases in model predictions that treat groups or individuals unfairly.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Supervised feature selection&lt;/strong>: This includes basic supervised filtering methods as well as techniques such as recursive feature elimination.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>H2O integration&lt;/strong>: We&amp;rsquo;d like for users to be able to have fully featured access to the excellent
&lt;a href="https://www.h2o.ai/products/h2o/" target="_blank" rel="noopener">H2O&lt;/a> platform via a tidymodels interface.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Post modeling probability calibration&lt;/strong>: Methods to characterize (and correct) probability predictions to make sure that probability estimates reflect the observed event rate(s).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Probability cut point optimization&lt;/strong> (for two class models): Maybe a 50% probability threshold is not optimal for your application. We&amp;rsquo;d like to be able to optimize this in the same way as the tuning parameters associated with models and recipes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Spatial analysis models and methods&lt;/strong>: We have started to work on
&lt;a href="https://spatialsample.tidymodels.org/" target="_blank" rel="noopener">spatial resampling&lt;/a> but want to include more comprehensive support for spatial modeling.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Better serialization tools&lt;/strong>: Some frameworks (e.g. keras, xgboost, and others) store their models in memory. If you save the associated R object, you lose the model results. This project would create better tools for saving and reloading model objects.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>
&lt;a href="https://conjoint.qualtrics.com/jfe/form/SV_3gtKaK8G1Z1JC50?Q_CHL=social&amp;amp;Q_SocialSource=tidyverseblog" target="_blank" rel="noopener">Check out our survey&lt;/a> and tell us what your priorities are!&lt;/p></description></item><item><title>Q3 2021 tidymodels roundup</title><link>https://www.tidyverse.org/blog/2021/09/tidymodels-2021-q3/</link><pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/09/tidymodels-2021-q3/</guid><description>&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles. We now publish
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">regular updates&lt;/a> here on the tidyverse blog summarizing recent developments in the tidymodels ecosystem. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including those that focus on a single package or more major releases. The purpose of these roundup posts is to keep you informed about any releases you may have missed and useful new functionality as we maintain these packages.&lt;/p>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2021/07/tidymodels-july-2021/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been 9 CRAN releases of tidymodels packages. You can install these updates from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;baguette&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;broom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;dials&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;poissonreg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;recipes&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;rules&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;stacks&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;textrecipes&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>NEWS&lt;/code> files are linked here for each package; you&amp;rsquo;ll notice that many of these releases involve small updates for CRAN policy or changes that are not user-facing. We write code in these smaller, modular packages that we can release frequently to make models easier to deploy and our software easier to maintain, but it can be a lot to keep up with as a user! We want to take the opportunity here to highlight a couple of more important changes in these releases.&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://baguette.tidymodels.org/news/index.html#baguette-0-1-1-2021-07-14" target="_blank" rel="noopener">baguette&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://broom.tidymodels.org/news/index.html#broom-0-7-9-2021-07-27" target="_blank" rel="noopener">broom&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dials.tidymodels.org/news/index.html#dials-0-0-10-2021-09-10" target="_blank" rel="noopener">dials&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/modeldata/blob/master/NEWS.md#modeldata-011" target="_blank" rel="noopener">modeldata&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://poissonreg.tidymodels.org/news/index.html#poissonreg-0-1-1-2021-08-07" target="_blank" rel="noopener">poissonreg&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/news/index.html#recipes-0-1-17-2021-09-27" target="_blank" rel="noopener">recipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://rules.tidymodels.org/news/index.html#rules-0-1-2-2021-08-07" target="_blank" rel="noopener">rules&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/stacks/blob/main/NEWS.md#v021" target="_blank" rel="noopener">stacks&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://textrecipes.tidymodels.org/news/index.html#textrecipes-0-4-1-2021-07-11" target="_blank" rel="noopener">textrecipes&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="new-parameter-objects">New parameter objects
&lt;a href="#new-parameter-objects">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://dials.tidymodels.org/" target="_blank" rel="noopener">dials&lt;/a> package is one that you might not have thought much about yet, even if you are a regular tidymodels user. It is an infrastructure package for creating and managing
&lt;a href="https://www.tmwr.org/tuning.html#tuning-params-tidymodels" target="_blank" rel="noopener">hyperparameters&lt;/a> as well as grids (both
&lt;a href="https://www.tmwr.org/grid-search.html#grids" target="_blank" rel="noopener">regular and non-regular&lt;/a>) of hyperparameters. The most recent release of dials includes several new parameters, and
&lt;a href="https://www.frick.ws/" target="_blank" rel="noopener">Hannah Frick&lt;/a> is now the package maintainer.&lt;/p>
&lt;p>One of the new parameters in this release is
&lt;a href="https://dials.tidymodels.org/reference/stop_iter.html" target="_blank" rel="noopener">&lt;code>stop_iter()&lt;/code>&lt;/a>, the number of iterations without improvement before
&lt;a href="https://en.wikipedia.org/wiki/Early_stopping" target="_blank" rel="noopener">&amp;ldquo;early stopping&amp;rdquo;&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ──────────────────────────── tidymodels 0.1.3 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ broom 0.7.9 ✓ rsample 0.1.0 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dials 0.0.10 ✓ tibble 3.1.4 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dplyr 1.0.7 ✓ tidyr 1.1.3 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ infer 1.0.0 ✓ tune 0.1.6 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ modeldata 0.1.1 ✓ workflows 0.2.3 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ parsnip 0.1.7 ✓ workflowsets 0.1.0 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ purrr 0.3.4 ✓ yardstick 0.0.8 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ recipes 0.1.17&lt;/span>
&lt;span class="c1">#&amp;gt; ── Conflicts ─────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class="c1">#&amp;gt; x purrr::discard() masks scales::discard()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::filter() masks stats::filter()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::lag() masks stats::lag()&lt;/span>
&lt;span class="c1">#&amp;gt; x recipes::step() masks stats::step()&lt;/span>
&lt;span class="c1">#&amp;gt; • Use tidymodels_prefer() to resolve common conflicts.&lt;/span>
&lt;span class="nf">stop_iter&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; # Iterations Before Stopping (quantitative)&lt;/span>
&lt;span class="c1">#&amp;gt; Range: [3, 20]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You don&amp;rsquo;t typically use parameters from dials like this, though. Instead, the infrastructure these parameters provide is what allows us to fluently tune our hyperparameters. For example, we can use data on high-performance computing jobs to predict the class of those jobs with xgboost, choosing to try out different values for early stopping (along with another hyperparameter &lt;code>mtry&lt;/code>).&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hpc_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">hpc_folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vfold_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hpc_data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">strata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">class&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">hpc_formula&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">compounds&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">input_fields&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">iterations&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">num_pending&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">hour&lt;/span>
&lt;span class="n">stopping_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">boost_tree&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">trees&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">500&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">learn_rate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.02&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">mtry&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">stop_iter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;xgboost&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">validation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;classification&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">early_stop_wf&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">workflow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hpc_formula&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">stopping_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can now tune this &lt;code>workflow()&lt;/code> over the resamples &lt;code>hpc_folds&lt;/code> and find out which values for the hyperparameters turned out best.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">doParallel&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">registerDoParallel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">early_stop_rs&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tune_grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">early_stop_wf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hpc_folds&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; i Creating pre-processing data to finalize unknown parameter: mtry&lt;/span>
&lt;span class="nf">show_best&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">early_stop_rs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;roc_auc&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 × 8&lt;/span>
&lt;span class="c1">#&amp;gt; mtry stop_iter .metric .estimator mean n std_err .config &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 3 13 roc_auc hand_till 0.887 10 0.00337 Preprocessor…&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 11 roc_auc hand_till 0.887 10 0.00414 Preprocessor…&lt;/span>
&lt;span class="c1">#&amp;gt; 3 2 15 roc_auc hand_till 0.886 10 0.00342 Preprocessor…&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 7 roc_auc hand_till 0.885 10 0.00365 Preprocessor…&lt;/span>
&lt;span class="c1">#&amp;gt; 5 4 9 roc_auc hand_till 0.884 10 0.00353 Preprocessor…&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this case, the best value for the early stopping parameter is 13.&lt;/p>
&lt;p>
&lt;a href="https://youtu.be/aXAafzOFyjk" target="_blank" rel="noopener">This recent screencast demonstrates&lt;/a> how to tune early stopping for xgboost as well.&lt;/p>
&lt;p>Several of the new parameter objects in this version of dials are prep work for supporting more options in tidymodels, such as tuning yet more hyperparameters of xgboost (like L1 and L2 penalties and whether to balance classes), generalized additive models, discriminant analysis models, recursively partitioned models, and a recipe step for sparse PCA. Stay tuned for more on these new options!&lt;/p>
&lt;h2 id="improvements-to-recipes">Improvements to recipes
&lt;a href="#improvements-to-recipes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The most recent release of recipes is a robust one, including new recipe steps, bug fixes, documentation improvements, and better performance. You can dig into the
&lt;a href="https://recipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">NEWS file&lt;/a> for more details, but check out a few of the most important changes.&lt;/p>
&lt;p>We added a new recipe step for creating sine and cosine features,
&lt;a href="https://recipes.tidymodels.org/reference/step_harmonic.html" target="_blank" rel="noopener">&lt;code>step_harmonic()&lt;/code>&lt;/a>. We can use this to analyze data with periodic features, like
&lt;a href="https://en.wikipedia.org/wiki/Solar_cycle" target="_blank" rel="noopener">the annual number of sunspots&lt;/a>. The &lt;code>sunspot.year&lt;/code> dataset has an observation every year, and the solar cycle is about 11 years long.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sunspot.year&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sunspots&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1700&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1988&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">n_sunspot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sunspot.year&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sun_split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">initial_time_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sunspots&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sun_train&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">training&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sun_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sun_test&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sun_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sunspots_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n_sunspot&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">year&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sun_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_harmonic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">frequency&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="m">11&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cycle_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">role&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;predictor&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">keep_original_cols&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">lm_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">sunspots_wf&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">workflow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sunspots_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lm_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sunspots_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sunspots_wf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sun_train&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sunspots_fit&lt;/span>
&lt;span class="c1">#&amp;gt; ══ Workflow [trained] ════════════════════════════════════════════════&lt;/span>
&lt;span class="c1">#&amp;gt; Preprocessor: Recipe&lt;/span>
&lt;span class="c1">#&amp;gt; Model: linear_reg()&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; ── Preprocessor ──────────────────────────────────────────────────────&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Recipe Step&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; • step_harmonic()&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; ── Model ─────────────────────────────────────────────────────────────&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call:&lt;/span>
&lt;span class="c1">#&amp;gt; stats::lm(formula = ..y ~ ., data = data)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Coefficients:&lt;/span>
&lt;span class="c1">#&amp;gt; (Intercept) year_sin_1 year_cos_1 &lt;/span>
&lt;span class="c1">#&amp;gt; 42.904 9.691 20.504&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can now predict with this fitted linear model on the most recent years.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">sunspots_fit&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">augment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sun_test&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n_sunspot&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.pred&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pivot_longer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_line&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1.2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">theme_minimal&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">labs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Number of sunspots&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/unnamed-chunk-7-1.png" alt="plot of chunk unnamed-chunk-7">&lt;/p>
&lt;p>Looks like there have been
&lt;a href="https://en.wikipedia.org/wiki/Solar_cycle#Cycle_history" target="_blank" rel="noopener">more sunspots in recent decades&lt;/a> compared to the past!&lt;/p>
&lt;p>Another new recipe step is
&lt;a href="https://recipes.tidymodels.org/reference/step_dummy_multi_choice.html" target="_blank" rel="noopener">&lt;code>step_dummy_multi_choice()&lt;/code>&lt;/a>, while
&lt;a href="https://recipes.tidymodels.org/reference/step_kpca.html" target="_blank" rel="noopener">&lt;code>step_kpca()&lt;/code>&lt;/a> was &amp;ldquo;un-deprecated&amp;rdquo; and
&lt;a href="https://recipes.tidymodels.org/reference/step_spatialsign.html" target="_blank" rel="noopener">&lt;code>step_spatialsign()&lt;/code>&lt;/a> and
&lt;a href="https://recipes.tidymodels.org/reference/step_geodist.html" target="_blank" rel="noopener">&lt;code>step_geodist()&lt;/code>&lt;/a> were improved.&lt;/p>
&lt;p>If you
&lt;a href="https://www.tidymodels.org/learn/develop/recipes/" target="_blank" rel="noopener">build your own recipe steps&lt;/a>, the new
&lt;a href="https://recipes.tidymodels.org/reference/recipes_eval_select.html" target="_blank" rel="noopener">&lt;code>recipes_eval_select()&lt;/code>&lt;/a> function is now available, powering the tidyselect semantics specific to recipes. The older &lt;code>terms_select()&lt;/code> function is now deprecated in favor of this new helper.&lt;/p>
&lt;p>The recipes package is fairly extensive, and we have recently invested time and energy in refining
&lt;a href="https://recipes.tidymodels.org/reference/" target="_blank" rel="noopener">the documentation&lt;/a> to make it more navigable and clear, as well as easier to maintain and contribute to. Specific documentation pages with recent updates you may find helpful include:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/reference/recipe.html" target="_blank" rel="noopener">how to create a &lt;code>recipe()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/reference/selections.html" target="_blank" rel="noopener">selecting variables for recipe steps&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/reference/tidy.recipe.html" target="_blank" rel="noopener">tidying recipes and recipe steps&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="reexamining-example-datasets">Reexamining example datasets
&lt;a href="#reexamining-example-datasets">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One of the tidymodels packages is
&lt;a href="https://modeldata.tidymodels.org/" target="_blank" rel="noopener">modeldata&lt;/a>, where we keep example datasets for vignettes, examples, and other similar uses. We have included two datasets, &lt;code>okc&lt;/code> and &lt;code>okc_text&lt;/code>, in modeldata based on real user data from the dating website OkCupid.&lt;/p>
&lt;p>This dataset was sourced from
&lt;a href="https://doi.org/10.1080/26939169.2021.1924516" target="_blank" rel="noopener">Kim and Escobedo-Land (2015)&lt;/a>. Permission to use this dataset was explicitly granted by OkCupid, but since that time, concerns have been raised about the ethics of using this or similar data sets, for example to identify individuals.
&lt;a href="https://doi.org/10.1080/26939169.2021.1930812" target="_blank" rel="noopener">Xiao and Ma (2021)&lt;/a> specifically address the possible misuse of this particular dataset, and we now agree that it isn&amp;rsquo;t a good option to use for examples or teaching. In the most recent release of modeldata, we have marked these datasets as deprecated. We have removed them from the
&lt;a href="https://github.com/tidymodels/modeldata/" target="_blank" rel="noopener">development version of the package on GitHub&lt;/a>, and they will be removed entirely in the &lt;em>next&lt;/em> CRAN release. We especially want to thank Albert Kim, one of the authors of the original paper, for his
&lt;a href="https://github.com/tidymodels/modeldata/issues/10" target="_blank" rel="noopener">thoughtful and helpful discussion&lt;/a>.&lt;/p>
&lt;p>One of the reasons we found the OkCupid dataset useful was that it included multiple text columns per observation, so removing these two datasets motivated us to look for a new option to include instead. We landed on
&lt;a href="https://modeldata.tidymodels.org/reference/tate_text.html" target="_blank" rel="noopener">metadata for modern artwork from the Tate Gallery&lt;/a>; if you used &lt;code>okc_text&lt;/code> in the past, we recommend switching to &lt;code>tate_text&lt;/code>. For example, we can count how many of these examples of artwork involve paper or canvas.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tate_text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">textrecipes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">paper_or_canvas&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;paper&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;canvas&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tate_text&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tokenize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">medium&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_stopwords&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">medium&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">custom_stopword_source&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">paper_or_canvas&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">keep&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">medium&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">bake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">artist&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">year&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tf&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4,284 × 4&lt;/span>
&lt;span class="c1">#&amp;gt; artist year tf_medium_canvas tf_medium_paper&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Absalon 1990 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Auerbach, Frank 1990 0 1&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Auerbach, Frank 1990 0 1&lt;/span>
&lt;span class="c1">#&amp;gt; 4 Auerbach, Frank 1990 0 1&lt;/span>
&lt;span class="c1">#&amp;gt; 5 Auerbach, Frank 1990 1 0&lt;/span>
&lt;span class="c1">#&amp;gt; 6 Ayres, OBE Gillian 1990 1 0&lt;/span>
&lt;span class="c1">#&amp;gt; 7 Barlow, Phyllida 1990 0 1&lt;/span>
&lt;span class="c1">#&amp;gt; 8 Baselitz, Georg 1990 0 1&lt;/span>
&lt;span class="c1">#&amp;gt; 9 Beattie, Basil 1990 1 0&lt;/span>
&lt;span class="c1">#&amp;gt; 10 Beuys, Joseph 1990 0 1&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 4,274 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This artwork metadata was a
&lt;a href="https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-01-12/readme.md" target="_blank" rel="noopener">Tidy Tuesday dataset&lt;/a> earlier this year.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We’d like to extend our thanks to all of the contributors who helped make these releases during Q3 possible!&lt;/p>
&lt;ul>
&lt;li>
&lt;p>baguette:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>broom:
&lt;a href="https://github.com/bcallaway11" target="_blank" rel="noopener">@bcallaway11&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/brshallo" target="_blank" rel="noopener">@brshallo&lt;/a>,
&lt;a href="https://github.com/corybrunson" target="_blank" rel="noopener">@corybrunson&lt;/a>,
&lt;a href="https://github.com/crsh" target="_blank" rel="noopener">@crsh&lt;/a>,
&lt;a href="https://github.com/gregmacfarlane" target="_blank" rel="noopener">@gregmacfarlane&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/ilapros" target="_blank" rel="noopener">@ilapros&lt;/a>,
&lt;a href="https://github.com/jamesrrae" target="_blank" rel="noopener">@jamesrrae&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jthomasmock" target="_blank" rel="noopener">@jthomasmock&lt;/a>,
&lt;a href="https://github.com/kaseyzapatka" target="_blank" rel="noopener">@kaseyzapatka&lt;/a>,
&lt;a href="https://github.com/krivit" target="_blank" rel="noopener">@krivit&lt;/a>,
&lt;a href="https://github.com/LukasWallrich" target="_blank" rel="noopener">@LukasWallrich&lt;/a>,
&lt;a href="https://github.com/oskasf" target="_blank" rel="noopener">@oskasf&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/tarensanders" target="_blank" rel="noopener">@tarensanders&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>dials:
&lt;a href="https://github.com/camroberts" target="_blank" rel="noopener">@camroberts&lt;/a>,
&lt;a href="https://github.com/driapitek" target="_blank" rel="noopener">@driapitek&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/Steviey" target="_blank" rel="noopener">@Steviey&lt;/a>,
&lt;a href="https://github.com/tonyk7440" target="_blank" rel="noopener">@tonyk7440&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>modeldata:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>poissonreg:
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>recipes:
&lt;a href="https://github.com/AndrewKostandy" target="_blank" rel="noopener">@AndrewKostandy&lt;/a>,
&lt;a href="https://github.com/asiripanich" target="_blank" rel="noopener">@asiripanich&lt;/a>,
&lt;a href="https://github.com/atusy" target="_blank" rel="noopener">@atusy&lt;/a>,
&lt;a href="https://github.com/avrenli2" target="_blank" rel="noopener">@avrenli2&lt;/a>,
&lt;a href="https://github.com/czopluoglu" target="_blank" rel="noopener">@czopluoglu&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/DesmondChoy" target="_blank" rel="noopener">@DesmondChoy&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/felipeangelimvieira" target="_blank" rel="noopener">@felipeangelimvieira&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/kadyb" target="_blank" rel="noopener">@kadyb&lt;/a>,
&lt;a href="https://github.com/mmp3" target="_blank" rel="noopener">@mmp3&lt;/a>,
&lt;a href="https://github.com/MrFlick" target="_blank" rel="noopener">@MrFlick&lt;/a>,
&lt;a href="https://github.com/NikKrieger" target="_blank" rel="noopener">@NikKrieger&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>,
&lt;a href="https://github.com/simonschoe" target="_blank" rel="noopener">@simonschoe&lt;/a>,
&lt;a href="https://github.com/SlowMo24" target="_blank" rel="noopener">@SlowMo24&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/vspinu" target="_blank" rel="noopener">@vspinu&lt;/a>, and
&lt;a href="https://github.com/yyhyun64" target="_blank" rel="noopener">@yyhyun64&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rules:
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>stacks:
&lt;a href="https://github.com/bensoltoff" target="_blank" rel="noopener">@bensoltoff&lt;/a>,
&lt;a href="https://github.com/dgrtwo" target="_blank" rel="noopener">@dgrtwo&lt;/a>,
&lt;a href="https://github.com/JoeSydlowski" target="_blank" rel="noopener">@JoeSydlowski&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>textrecipes:
&lt;a href="https://github.com/dgrtwo" target="_blank" rel="noopener">@dgrtwo&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jcragy" target="_blank" rel="noopener">@jcragy&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>infer 1.0.0</title><link>https://www.tidyverse.org/blog/2021/08/infer-1-0-0/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/08/infer-1-0-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re super excited announce the release of
&lt;a href="https://infer.tidymodels.org/" target="_blank" rel="noopener">infer&lt;/a> 1.0.0! infer is a package for statistical inference that implements an expressive statistical grammar that adheres to the tidyverse design framework. Rather than providing methods for specific statistical tests, this package consolidates the principles that are shared among common hypothesis tests and confidence intervals into a set of four main verbs (functions), supplemented with many utilities to visualize and extract value from their outputs. The expressive grammar is specifically designed to allow users to make explicit connections between the computational procedures and the theory of statistical inference, making this package particularly well suited for teaching this topic.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"infer"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This release includes a number of major changes and new features. Namely:&lt;/p>
&lt;ul>
&lt;li>Support for multiple regression&lt;/li>
&lt;li>Alignment of theory-based methods with their simulation-based counterparts&lt;/li>
&lt;li>Improvements to behavorial consistency of
&lt;a href="https://infer.tidymodels.org/reference/calculate.html" target="_blank" rel="noopener">&lt;code>calculate()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>The infer package has been on CRAN since 2017. However, we haven&amp;rsquo;t written about the package on the tidyverse blog before. Thus, I&amp;rsquo;ll start out by demonstrating the basics of the package. After, I&amp;rsquo;ll highlight some of the more neat features introduced in this version of the package. You can find a full list of changes in version 1.0.0 of the package in the
&lt;a href="https://github.com/tidymodels/infer/releases/tag/v1.0.0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/infer'>infer&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We also load the tidyverse collection of packages to help with data exploration and manipulation.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching packages&lt;/span> ─────────────────────────────────────── tidyverse 1.3.1 ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>ggplot2&lt;/span> 3.3.5 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>purrr &lt;/span> 0.3.4&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tibble &lt;/span> 3.1.3 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dplyr &lt;/span> 1.0.7&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tidyr &lt;/span> 1.1.3 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>stringr&lt;/span> 1.4.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>readr &lt;/span> 2.0.1 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>forcats&lt;/span> 0.5.1&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ────────────────────────────────────────── tidyverse_conflicts() ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="getting-to-know-infer">Getting to know infer
&lt;a href="#getting-to-know-infer">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Regardless of the hypothesis test in question, an analyst asks the same kind of question when conducting statistical inference: is the effect/difference in the observed data real, or due to random chance? To answer this question, the analyst begins by assuming that the effect in the observed data was simply due to random chance, and calls this assumption the &lt;em>null hypothesis&lt;/em>. (In reality, they might not believe in the null hypothesis at all&amp;mdash;the null hypothesis is in opposition to the &lt;em>alternate hypothesis&lt;/em>, which supposes that the effect present in the observed data is actually due to the fact that &amp;ldquo;something is going on.&amp;quot;) The analyst then calculates a &lt;em>test statistic&lt;/em> from the data that describes the observed effect. They can use this test statistic to calculate a &lt;em>p-value&lt;/em> via juxtaposition with a &lt;em>null distribution&lt;/em>, giving the probability that the observed data could come about if the null hypothesis were true. If this probability is below some pre-defined &lt;em>significance level&lt;/em> $\alpha$, then the analyst can reject the null hypothesis.&lt;/p>
&lt;p>The workflow of this package is designed around this idea. Starting out with some dataset,&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://infer.tidymodels.org/reference/specify.html" target="_blank" rel="noopener">&lt;code>specify()&lt;/code>&lt;/a> allows the analyst to specify the variable, or relationship between variables, that they are interested in.&lt;/li>
&lt;li>
&lt;a href="https://infer.tidymodels.org/reference/hypothesize.html" target="_blank" rel="noopener">&lt;code>hypothesize()&lt;/code>&lt;/a> allows the analyst to declare the null hypothesis.&lt;/li>
&lt;li>
&lt;a href="https://infer.tidymodels.org/reference/generate.html" target="_blank" rel="noopener">&lt;code>generate()&lt;/code>&lt;/a> allows the analyst to generate data reflecting the null hypothesis or using the bootstrap.&lt;/li>
&lt;li>
&lt;a href="https://infer.tidymodels.org/reference/calculate.html" target="_blank" rel="noopener">&lt;code>calculate()&lt;/code>&lt;/a> allows the analyst to calculate summary statistics, either from
&lt;ul>
&lt;li>the observed data, to form the observed statistic.&lt;/li>
&lt;li>data
&lt;a href="https://infer.tidymodels.org/reference/generate.html" target="_blank" rel="noopener">&lt;code>generate()&lt;/code>&lt;/a>d to reflect the null hypothesis, to form a randomization-based null distribution of statistics.&lt;/li>
&lt;li>data
&lt;a href="https://infer.tidymodels.org/reference/generate.html" target="_blank" rel="noopener">&lt;code>generate()&lt;/code>&lt;/a>d to form a bootstrap distribution of statistics&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>As such, the ultimate output of an infer pipeline using these four functions is generally an &lt;em>observed statistic&lt;/em> or &lt;em>null distribution&lt;/em> of test statistics. These four functions are thus supplemented with several utilities to visualize and extract value from their outputs.&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://infer.tidymodels.org/reference/visualize.html" target="_blank" rel="noopener">&lt;code>visualize()&lt;/code>&lt;/a> plots the null distribution of test statistics.
&lt;ul>
&lt;li>
&lt;a href="https://infer.tidymodels.org/reference/shade_p_value.html" target="_blank" rel="noopener">&lt;code>shade_p_value()&lt;/code>&lt;/a> situates the observed statistic in the null distribution, shading the region as or more extreme.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;a href="https://infer.tidymodels.org/reference/get_p_value.html" target="_blank" rel="noopener">&lt;code>get_p_value()&lt;/code>&lt;/a> calculates a p-value via the juxtaposition of the test statistic and null distribution.&lt;/li>
&lt;/ul>
&lt;p>The workflow outlined above can also be used for constructing confidence intervals via bootstrapping with the omission of the
&lt;a href="https://infer.tidymodels.org/reference/hypothesize.html" target="_blank" rel="noopener">&lt;code>hypothesize()&lt;/code>&lt;/a> step in the pipeline. The resulting bootstrap distribution can then be visualized with
&lt;a href="https://infer.tidymodels.org/reference/visualize.html" target="_blank" rel="noopener">&lt;code>visualize()&lt;/code>&lt;/a>, the confidence interval region can be situated in the bootstrap distribution with
&lt;a href="https://infer.tidymodels.org/reference/shade_confidence_interval.html" target="_blank" rel="noopener">&lt;code>shade_confidence_interval()&lt;/code>&lt;/a>, and the bounds of the confidence interval can be calculated with
&lt;a href="https://infer.tidymodels.org/reference/get_confidence_interval.html" target="_blank" rel="noopener">&lt;code>get_confidence_interval()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>To demonstrate, we&amp;rsquo;ll walk through a typical infer pipeline step-by-step. Throughout this post, we make use of &lt;code>gss&lt;/code>, a dataset supplied by infer containing a sample of 500 observations of 11 variables from the &lt;em>General Social Survey&lt;/em>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># take a look at its structure&lt;/span>
&lt;span class='nf'>&lt;a href='https://pillar.r-lib.org/reference/glimpse.html'>glimpse&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>gss&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Rows: 500&lt;/span>
&lt;span class='c'>#&amp;gt; Columns: 11&lt;/span>
&lt;span class='c'>#&amp;gt; $ year &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 2014, 1994, 1998, 1996, 1994, 1996, 1990, 2016, 2000, 1998, 20…&lt;/span>
&lt;span class='c'>#&amp;gt; $ age &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 36, 34, 24, 42, 31, 32, 48, 36, 30, 33, 21, 30, 38, 49, 25, 56…&lt;/span>
&lt;span class='c'>#&amp;gt; $ sex &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> male, female, male, male, male, female, female, female, female…&lt;/span>
&lt;span class='c'>#&amp;gt; $ college &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> degree, no degree, degree, no degree, degree, no degree, no de…&lt;/span>
&lt;span class='c'>#&amp;gt; $ partyid &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> ind, rep, ind, ind, rep, rep, dem, ind, rep, dem, dem, ind, de…&lt;/span>
&lt;span class='c'>#&amp;gt; $ hompop &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 3, 4, 1, 4, 2, 4, 2, 1, 5, 2, 4, 3, 4, 4, 2, 2, 3, 2, 1, 2, 5,…&lt;/span>
&lt;span class='c'>#&amp;gt; $ hours &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 50, 31, 40, 40, 40, 53, 32, 20, 40, 40, 23, 52, 38, 72, 48, 40…&lt;/span>
&lt;span class='c'>#&amp;gt; $ income &lt;span style='color: #555555; font-style: italic;'>&amp;lt;ord&amp;gt;&lt;/span> $25000 or more, $20000 - 24999, $25000 or more, $25000 or more…&lt;/span>
&lt;span class='c'>#&amp;gt; $ class &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> middle class, working class, working class, working class, mid…&lt;/span>
&lt;span class='c'>#&amp;gt; $ finrela &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> below average, below average, below average, above average, ab…&lt;/span>
&lt;span class='c'>#&amp;gt; $ weight &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> 0.8960034, 1.0825000, 0.5501000, 1.0864000, 1.0825000, 1.08640…&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Each row is an individual survey response, containing some basic demographic information on the respondent as well as some additional variables. See
&lt;a href="https://infer.tidymodels.org/reference/gss.html" target="_blank" rel="noopener">&lt;code>?gss&lt;/code>&lt;/a> for more information on the variables included and their source.&lt;/p>
&lt;h3 id="specify-specifying-response-and-explanatory-variables">specify(): Specifying response (and explanatory) variables
&lt;a href="#specify-specifying-response-and-explanatory-variables">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The
&lt;a href="https://infer.tidymodels.org/reference/specify.html" target="_blank" rel="noopener">&lt;code>specify()&lt;/code>&lt;/a> function can be used to specify which of the variables in the dataset you&amp;rsquo;re interested in. If you&amp;rsquo;re only interested in, say, the &lt;code>age&lt;/code> of the respondents, you might write:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>age&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Response: age (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 500 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; age&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 36&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 34&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 24&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 42&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 31&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 32&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 48&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 36&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 30&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 33&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 490 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>On the front end, the output of
&lt;a href="https://infer.tidymodels.org/reference/specify.html" target="_blank" rel="noopener">&lt;code>specify()&lt;/code>&lt;/a> just looks like it selects off the columns in the dataframe that you&amp;rsquo;ve specified. Checking the class of this object, though:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>age&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/class.html'>class&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "infer" "tbl_df" "tbl" "data.frame"&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can see that the &lt;code>infer&lt;/code> class has been appended on top of the dataframe classes&amp;ndash;this new class stores some extra metadata.&lt;/p>
&lt;p>If you&amp;rsquo;re interested in two variables&amp;ndash;&lt;code>age&lt;/code> and &lt;code>partyid&lt;/code>, for example&amp;ndash;you can
&lt;a href="https://infer.tidymodels.org/reference/specify.html" target="_blank" rel="noopener">&lt;code>specify()&lt;/code>&lt;/a> their relationship in one of two (equivalent) ways:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># as a formula&lt;/span>
&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>age&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>partyid&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Response: age (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; Explanatory: partyid (factor)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 500 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; age partyid&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 36 ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 34 rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 24 ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 42 ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 31 rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 32 rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 48 dem &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 36 ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 30 rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 33 dem &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 490 more rows&lt;/span>&lt;/span>
&lt;span class='c'># with the named arguments&lt;/span>
&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>age&lt;/span>, explanatory &lt;span class='o'>=&lt;/span> &lt;span class='nv'>partyid&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Response: age (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; Explanatory: partyid (factor)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 500 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; age partyid&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 36 ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 34 rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 24 ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 42 ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 31 rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 32 rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 48 dem &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 36 ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 30 rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 33 dem &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 490 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="hypothesize-declaring-the-null-hypothesis">hypothesize(): Declaring the null hypothesis
&lt;a href="#hypothesize-declaring-the-null-hypothesis">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The next step in an infer pipeline is often to declare a null hypothesis using
&lt;a href="https://infer.tidymodels.org/reference/hypothesize.html" target="_blank" rel="noopener">&lt;code>hypothesize()&lt;/code>&lt;/a>. The first step is to supply one of &amp;ldquo;independence&amp;rdquo; or &amp;ldquo;point&amp;rdquo; to the &lt;code>null&lt;/code> argument. If your null hypothesis assumes independence between two variables, then this is all you need to supply to
&lt;a href="https://infer.tidymodels.org/reference/hypothesize.html" target="_blank" rel="noopener">&lt;code>hypothesize()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>college&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>partyid&lt;/span>, success &lt;span class='o'>=&lt;/span> &lt;span class='s'>"degree"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/hypothesize.html'>hypothesize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>null &lt;span class='o'>=&lt;/span> &lt;span class='s'>"independence"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Response: college (factor)&lt;/span>
&lt;span class='c'>#&amp;gt; Explanatory: partyid (factor)&lt;/span>
&lt;span class='c'>#&amp;gt; Null Hypothesis: independence&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 500 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; college partyid&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> degree ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> no degree rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> degree ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> no degree ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> degree rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> no degree rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> no degree dem &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> degree ind &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> degree rep &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> no degree dem &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 490 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you&amp;rsquo;re doing inference on a point estimate, you will also need to provide one of &lt;code>p&lt;/code> (the true proportion of successes, between 0 and 1), &lt;code>mu&lt;/code> (the true mean), &lt;code>med&lt;/code> (the true median), or &lt;code>sigma&lt;/code> (the true standard deviation). For instance, if the null hypothesis is that the mean number of hours worked per week in our population is 40, we would write:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/hypothesize.html'>hypothesize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>null &lt;span class='o'>=&lt;/span> &lt;span class='s'>"point"&lt;/span>, mu &lt;span class='o'>=&lt;/span> &lt;span class='m'>40&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Response: hours (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; Null Hypothesis: point&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 500 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; hours&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 50&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 31&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 40&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 40&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 40&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 53&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 32&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 20&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 40&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 40&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 490 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Again, on the front end, the dataframe outputted from
&lt;a href="https://infer.tidymodels.org/reference/hypothesize.html" target="_blank" rel="noopener">&lt;code>hypothesize()&lt;/code>&lt;/a> looks almost exactly the same as it did when it came out of
&lt;a href="https://infer.tidymodels.org/reference/specify.html" target="_blank" rel="noopener">&lt;code>specify()&lt;/code>&lt;/a>, but infer now &amp;ldquo;knows&amp;rdquo; your null hypothesis.&lt;/p>
&lt;h3 id="generate-generating-the-simulated-distribution">generate(): Generating the simulated distribution
&lt;a href="#generate-generating-the-simulated-distribution">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Once we&amp;rsquo;ve asserted our null hypothesis using
&lt;a href="https://infer.tidymodels.org/reference/hypothesize.html" target="_blank" rel="noopener">&lt;code>hypothesize()&lt;/code>&lt;/a>, we can construct a null distribution based on this hypothesis. We can do this using one of several methods, supplied in the &lt;code>type&lt;/code> argument:&lt;/p>
&lt;ul>
&lt;li>&lt;code>permute&lt;/code>: For each replicate, each input value will be randomly reassigned (without replacement) to a new output value in the sample.&lt;/li>
&lt;li>&lt;code>draw&lt;/code>: A value will be sampled from a theoretical distribution with parameters specified in
&lt;a href="https://infer.tidymodels.org/reference/hypothesize.html" target="_blank" rel="noopener">&lt;code>hypothesize()&lt;/code>&lt;/a> for each replicate. (This option is currently only applicable for testing point estimates.)&lt;/li>
&lt;li>&lt;code>bootstrap&lt;/code>: A bootstrap sample will be drawn for each replicate, where a sample of size equal to the input sample size is drawn (with replacement) from the input sample data. The bootstrap is most commonly used in the context of constructing a confidence interval, omitting infer&amp;rsquo;s
&lt;a href="https://infer.tidymodels.org/reference/hypothesize.html" target="_blank" rel="noopener">&lt;code>hypothesize()&lt;/code>&lt;/a> step.&lt;/li>
&lt;/ul>
&lt;p>Continuing on with our example above, about the average number of hours worked a week, we might write:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/hypothesize.html'>hypothesize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>null &lt;span class='o'>=&lt;/span> &lt;span class='s'>"point"&lt;/span>, mu &lt;span class='o'>=&lt;/span> &lt;span class='m'>40&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/generate.html'>generate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>reps &lt;span class='o'>=&lt;/span> &lt;span class='m'>1000&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"bootstrap"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Response: hours (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; Null Hypothesis: point&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 500,000 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Groups: replicate [1,000]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; replicate hours&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 46.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 1 37.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 1 58.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 1 38.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 1 28.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 1 35.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 1 43.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 1 6.62&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 1 48.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 1 53.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 499,990 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In the above example, we take 1000 bootstrap samples to form our null distribution.&lt;/p>
&lt;p>To generate a null distribution for the independence of two variables, we could randomly reshuffle the pairings of explanatory and response variables to break any existing association. For instance, to generate 1000 replicates that can be used to create a null distribution under the assumption that political party affiliation is not affected by age:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>partyid&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>age&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/hypothesize.html'>hypothesize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>null &lt;span class='o'>=&lt;/span> &lt;span class='s'>"independence"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/generate.html'>generate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>reps &lt;span class='o'>=&lt;/span> &lt;span class='m'>1000&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"permute"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Response: partyid (factor)&lt;/span>
&lt;span class='c'>#&amp;gt; Explanatory: age (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; Null Hypothesis: independence&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 500,000 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Groups: replicate [1,000]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; partyid age replicate&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> rep 36 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> dem 34 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> dem 24 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> dem 42 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> ind 31 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> ind 32 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> ind 48 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> dem 36 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> ind 30 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> ind 33 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 499,990 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="calculate-calculating-summary-statistics">calculate(): Calculating summary statistics
&lt;a href="#calculate-calculating-summary-statistics">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>
&lt;a href="https://infer.tidymodels.org/reference/calculate.html" target="_blank" rel="noopener">&lt;code>calculate()&lt;/code>&lt;/a> calculates summary statistics from the output of infer core functions. The function, for one, takes in a &lt;code>stat&lt;/code> argument, which is currently one of &lt;code>&amp;quot;mean&amp;quot;&lt;/code>, &lt;code>&amp;quot;median&amp;quot;&lt;/code>, &lt;code>&amp;quot;sum&amp;quot;&lt;/code>, &lt;code>&amp;quot;sd&amp;quot;&lt;/code>, &lt;code>&amp;quot;prop&amp;quot;&lt;/code>, &lt;code>&amp;quot;count&amp;quot;&lt;/code>, &lt;code>&amp;quot;diff in means&amp;quot;&lt;/code>, &lt;code>&amp;quot;diff in medians&amp;quot;&lt;/code>, &lt;code>&amp;quot;diff in props&amp;quot;&lt;/code>, &lt;code>&amp;quot;Chisq&amp;quot;&lt;/code>, &lt;code>&amp;quot;F&amp;quot;&lt;/code>, &lt;code>&amp;quot;t&amp;quot;&lt;/code>, &lt;code>&amp;quot;z&amp;quot;&lt;/code>, &lt;code>&amp;quot;slope&amp;quot;&lt;/code>, or &lt;code>&amp;quot;correlation&amp;quot;&lt;/code>. For example, continuing our example above to calculate the null distribution of mean hours worked per week:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/hypothesize.html'>hypothesize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>null &lt;span class='o'>=&lt;/span> &lt;span class='s'>"point"&lt;/span>, mu &lt;span class='o'>=&lt;/span> &lt;span class='m'>40&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/generate.html'>generate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>reps &lt;span class='o'>=&lt;/span> &lt;span class='m'>1000&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"bootstrap"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/calculate.html'>calculate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"mean"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Response: hours (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; Null Hypothesis: point&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1,000 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; replicate stat&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 38.6&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 2 40.4&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 3 38.9&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 4 40.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 5 39.7&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 6 40.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 7 40.9&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 8 40.4&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 9 41.7&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 10 39.8&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 990 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The output of
&lt;a href="https://infer.tidymodels.org/reference/calculate.html" target="_blank" rel="noopener">&lt;code>calculate()&lt;/code>&lt;/a> here shows us the sample statistic (in this case, the mean) for each of our 1000 replicates. To calculate the mean from the observed data, just omit the
&lt;a href="https://infer.tidymodels.org/reference/hypothesize.html" target="_blank" rel="noopener">&lt;code>hypothesize()&lt;/code>&lt;/a> and
&lt;a href="https://infer.tidymodels.org/reference/generate.html" target="_blank" rel="noopener">&lt;code>generate()&lt;/code>&lt;/a> steps.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/calculate.html'>calculate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"mean"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Response: hours (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; stat&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 41.4&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="other-utilities">Other utilities
&lt;a href="#other-utilities">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>infer offers several utilities to extract meaning from summary statistics and distributions&amp;mdash;the package provides functions to visualize where a statistic is relative to a distribution (with
&lt;a href="https://infer.tidymodels.org/reference/visualize.html" target="_blank" rel="noopener">&lt;code>visualize()&lt;/code>&lt;/a>), calculate p-values (with
&lt;a href="https://infer.tidymodels.org/reference/get_p_value.html" target="_blank" rel="noopener">&lt;code>get_p_value()&lt;/code>&lt;/a>), and calculate confidence intervals (with
&lt;a href="https://infer.tidymodels.org/reference/get_confidence_interval.html" target="_blank" rel="noopener">&lt;code>get_confidence_interval()&lt;/code>&lt;/a>).&lt;/p>
&lt;p>To illustrate, we&amp;rsquo;ll go back to the example of determining whether the mean number of hours worked per week is 40 hours.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># find the point estimate&lt;/span>
&lt;span class='nv'>point_estimate&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/calculate.html'>calculate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"mean"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># generate a distribution of means&lt;/span>
&lt;span class='nv'>dist&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/hypothesize.html'>hypothesize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>null &lt;span class='o'>=&lt;/span> &lt;span class='s'>"point"&lt;/span>, mu &lt;span class='o'>=&lt;/span> &lt;span class='m'>40&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/generate.html'>generate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>reps &lt;span class='o'>=&lt;/span> &lt;span class='m'>1000&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"bootstrap"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/calculate.html'>calculate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"mean"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Our point estimate 41.382 seems &lt;em>pretty&lt;/em> close to 40, but a little bit different. We might wonder if this difference is just due to random chance, or if the mean number of hours worked per week in the population really isn&amp;rsquo;t 40.&lt;/p>
&lt;p>We could initially just visualize the distribution.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dist&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/visualize.html'>visualize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/visualize-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Where does our sample&amp;rsquo;s observed statistic lie on this distribution? We can use the &lt;code>obs_stat&lt;/code> argument to specify this.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dist&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/visualize.html'>visualize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/shade_p_value.html'>shade_p_value&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>obs_stat &lt;span class='o'>=&lt;/span> &lt;span class='nv'>point_estimate&lt;/span>, direction &lt;span class='o'>=&lt;/span> &lt;span class='s'>"two-sided"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/visualize2-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Notice that infer has also shaded the regions of the null distribution that are as (or more) extreme than our observed statistic. The red bar looks like it&amp;rsquo;s slightly far out on the right tail of the null distribution, so observing a sample mean of 41.382 hours would be somewhat unlikely if the mean was actually 40 hours. How unlikely, though?&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>p_value&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>dist&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/get_p_value.html'>get_p_value&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>obs_stat &lt;span class='o'>=&lt;/span> &lt;span class='nv'>point_estimate&lt;/span>, direction &lt;span class='o'>=&lt;/span> &lt;span class='s'>"two-sided"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>p_value&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; p_value&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 0.038&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>It looks like the p-value is 0.038, which is pretty small&amp;mdash;if the true mean number of hours worked per week was actually 40, the probability of our sample mean being this far (1.382 hours) from 40 would be 0.038. This may or may not be statistically significantly different, depending on the significance level $\alpha$ you decided on &lt;em>before&lt;/em> you ran this analysis. If you had set $\alpha = 0.05$, then this difference would be statistically significant, but if you had set $\alpha = 0.01$, then it would not be.&lt;/p>
&lt;p>To get a confidence interval around our estimate, we can write:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dist&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/get_confidence_interval.html'>get_confidence_interval&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
point_estimate &lt;span class='o'>=&lt;/span> &lt;span class='nv'>point_estimate&lt;/span>,
level &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.95&lt;/span>,
type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"se"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; lower_ci upper_ci&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 40.1 42.6&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>As you can see, 40 hours per week is not contained in this interval, which aligns with our previous conclusion that this finding is significant at the confidence level $\alpha = 0.05$.&lt;/p>
&lt;h2 id="whats-new">What&amp;rsquo;s new?
&lt;a href="#whats-new">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are a number of improvements and new features in this release that resolve longstanding gaps in the package&amp;rsquo;s functionality. We&amp;rsquo;ll highlight three:&lt;/p>
&lt;ul>
&lt;li>Support for multiple regression&lt;/li>
&lt;li>Alignment of theory-based methods&lt;/li>
&lt;li>Behavioral consistency of
&lt;a href="https://infer.tidymodels.org/reference/calculate.html" target="_blank" rel="noopener">&lt;code>calculate()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="support-for-multiple-regression">Support for multiple regression
&lt;a href="#support-for-multiple-regression">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The 2016 &amp;ldquo;Guidelines for Assessment and Instruction in Statistics Education&amp;rdquo; [1] state that, in introductory statistics courses, &amp;ldquo;[s]tudents should gain experience with how statistical models, including multivariable models, are used.&amp;rdquo; In line with this recommendation, we introduce support for randomization-based inference with multiple explanatory variables via a new &lt;code>fit.infer&lt;/code> core verb.&lt;/p>
&lt;p>If passed an &lt;code>infer&lt;/code> object, the method will parse a formula out of the &lt;code>formula&lt;/code> or &lt;code>response&lt;/code> and &lt;code>explanatory&lt;/code> arguments, and pass both it and &lt;code>data&lt;/code> to a
&lt;a href="https://rdrr.io/r/stats/glm.html" target="_blank" rel="noopener">&lt;code>stats::glm&lt;/code>&lt;/a> call.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hours&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>age&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>college&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; term estimate&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> intercept 40.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> age 0.005&lt;span style='text-decoration: underline;'>96&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> collegedegree 1.53&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that the function returns the model coefficients as &lt;code>estimate&lt;/code> rather than their associated $t$-statistics as &lt;code>stat&lt;/code>.&lt;/p>
&lt;p>If passed a
&lt;a href="https://infer.tidymodels.org/reference/generate.html" target="_blank" rel="noopener">&lt;code>generate()&lt;/code>&lt;/a>d object, the model will be fitted to each replicate.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hours&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>age&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>college&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/hypothesize.html'>hypothesize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>null &lt;span class='o'>=&lt;/span> &lt;span class='s'>"independence"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/generate.html'>generate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>reps &lt;span class='o'>=&lt;/span> &lt;span class='m'>100&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"permute"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 300 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Groups: replicate [100]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; replicate term estimate&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 intercept 41.5 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 1 age 0.013&lt;span style='text-decoration: underline;'>9&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 1 collegedegree -&lt;span style='color: #BB0000;'>1.88&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 2 intercept 40.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 2 age -&lt;span style='color: #BB0000;'>0.002&lt;/span>&lt;span style='color: #BB0000; text-decoration: underline;'>21&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 2 collegedegree 2.64 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 3 intercept 40.5 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 3 age 0.019&lt;span style='text-decoration: underline;'>6&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 3 collegedegree 0.251 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 4 intercept 39.3 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 290 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If &lt;code>type = &amp;quot;permute&amp;quot;&lt;/code>, a set of unquoted column names in the data to permute (independently of each other) can be passed via the &lt;code>variables&lt;/code> argument to &lt;code>generate&lt;/code>. It defaults to only the response variable.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hours&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>age&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>college&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/hypothesize.html'>hypothesize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>null &lt;span class='o'>=&lt;/span> &lt;span class='s'>"independence"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/generate.html'>generate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>reps &lt;span class='o'>=&lt;/span> &lt;span class='m'>100&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"permute"&lt;/span>, variables &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>age&lt;/span>, &lt;span class='nv'>college&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 300 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Groups: replicate [100]&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; replicate term estimate&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 intercept 44.4 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 1 age -&lt;span style='color: #BB0000;'>0.077&lt;/span>&lt;span style='color: #BB0000; text-decoration: underline;'>4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 1 collegedegree 0.366 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 2 intercept 40.7 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 2 age 0.012&lt;span style='text-decoration: underline;'>4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 2 collegedegree 0.613 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 3 intercept 40.0 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 3 age 0.030&lt;span style='text-decoration: underline;'>6&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 3 collegedegree 0.496 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 4 intercept 40.9 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 290 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This feature allows for more detailed exploration of the effect of disrupting the correlation structure among explanatory variables on outputted model coefficients.&lt;/p>
&lt;p>Each of the auxillary functions
&lt;a href="https://infer.tidymodels.org/reference/get_p_value.html" target="_blank" rel="noopener">&lt;code>get_p_value()&lt;/code>&lt;/a>,
&lt;a href="https://infer.tidymodels.org/reference/get_confidence_interval.html" target="_blank" rel="noopener">&lt;code>get_confidence_interval()&lt;/code>&lt;/a>,
&lt;a href="https://infer.tidymodels.org/reference/visualize.html" target="_blank" rel="noopener">&lt;code>visualize()&lt;/code>&lt;/a>,
&lt;a href="https://infer.tidymodels.org/reference/shade_p_value.html" target="_blank" rel="noopener">&lt;code>shade_p_value()&lt;/code>&lt;/a>, and
&lt;a href="https://infer.tidymodels.org/reference/shade_confidence_interval.html" target="_blank" rel="noopener">&lt;code>shade_confidence_interval()&lt;/code>&lt;/a> have methods to handle
&lt;a href="https://generics.r-lib.org/reference/fit.html" target="_blank" rel="noopener">&lt;code>fit()&lt;/code>&lt;/a> output! See their help-files for example usage.&lt;/p>
&lt;h3 id="alignment-of-theory-based-methods">Alignment of theory-based methods
&lt;a href="#alignment-of-theory-based-methods">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>While infer is primarily a package for randomization-based statistical inference, the package has partially supported theory-based methods in a number of ways over the years. This release introduces a principled, opinionated, and consistent interface for theory-based methods for statistical inference. The new interface is based on a new verb,
&lt;a href="https://infer.tidymodels.org/reference/assume.html" target="_blank" rel="noopener">&lt;code>assume()&lt;/code>&lt;/a>, that returns a distribution that, once created, interfaces in the same way that simulation-based distributions do.&lt;/p>
&lt;p>To demonstrate, we&amp;rsquo;ll return to the example of inference on a mean using infer&amp;rsquo;s &lt;code>gss&lt;/code> dataset. Supposed that we believe the true mean number of hours worked by Americans in the past week is 40.&lt;/p>
&lt;p>First, calculating the observed $t$-statistic:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>obs_stat&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/hypothesize.html'>hypothesize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>null &lt;span class='o'>=&lt;/span> &lt;span class='s'>"point"&lt;/span>, mu &lt;span class='o'>=&lt;/span> &lt;span class='m'>40&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/calculate.html'>calculate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"t"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>obs_stat&lt;/span>
&lt;span class='c'>#&amp;gt; Response: hours (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; Null Hypothesis: point&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; stat&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 2.09&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The code to define the null distribution is very similar to that required to calculate a theorized observed statistic, switching out
&lt;a href="https://infer.tidymodels.org/reference/calculate.html" target="_blank" rel="noopener">&lt;code>calculate()&lt;/code>&lt;/a> for
&lt;a href="https://infer.tidymodels.org/reference/assume.html" target="_blank" rel="noopener">&lt;code>assume()&lt;/code>&lt;/a> and adjusting arguments as needed.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dist&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/hypothesize.html'>hypothesize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>null &lt;span class='o'>=&lt;/span> &lt;span class='s'>"point"&lt;/span>, mu &lt;span class='o'>=&lt;/span> &lt;span class='m'>40&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/assume.html'>assume&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>distribution &lt;span class='o'>=&lt;/span> &lt;span class='s'>"t"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>dist&lt;/span>
&lt;span class='c'>#&amp;gt; A T distribution with 499 degrees of freedom.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This null distribution can now be interfaced with in the same way as a simulation-based null distribution elsewhere in the package. For example, calculating a p-value by juxtaposing the observed statistic and null distribution:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/get_p_value.html'>get_p_value&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dist&lt;/span>, &lt;span class='nv'>obs_stat&lt;/span>, direction &lt;span class='o'>=&lt;/span> &lt;span class='s'>"both"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; p_value&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 0.037&lt;span style='text-decoration: underline;'>6&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>&amp;hellip;or juxtaposing the two visually:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/visualize.html'>visualize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dist&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/shade_p_value.html'>shade_p_value&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>obs_stat&lt;/span>, direction &lt;span class='o'>=&lt;/span> &lt;span class='s'>"both"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-8-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Confidence intervals lie on the scale of the observed data rather than the standardized scale of the theoretical distributions. Calculating a mean rather than the standardized $t$-statistic:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>obs_mean&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/calculate.html'>calculate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"mean"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>obs_mean&lt;/span>
&lt;span class='c'>#&amp;gt; Response: hours (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; stat&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 41.4&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The distribution here just defines the spread for the standard error calculation.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>ci&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/get_confidence_interval.html'>get_confidence_interval&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>dist&lt;/span>,
level &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.95&lt;/span>,
point_estimate &lt;span class='o'>=&lt;/span> &lt;span class='nv'>obs_mean&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>ci&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; lower_ci upper_ci&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 40.1 42.7&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Visualizing the confidence interval results in the theoretical distribution being recentered and rescaled to align with the scale of the observed data:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/visualize.html'>visualize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dist&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/shade_confidence_interval.html'>shade_confidence_interval&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ci&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-11-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Previous methods for interfacing with theoretical distributions are superseded&amp;mdash;they will continue to be supported, though documentation will forefront the
&lt;a href="https://infer.tidymodels.org/reference/assume.html" target="_blank" rel="noopener">&lt;code>assume()&lt;/code>&lt;/a> interface.&lt;/p>
&lt;h3 id="behavioral-consistency">Behavioral consistency
&lt;a href="#behavioral-consistency">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Another major change to the package in this release is a set of standards for behavorial consistency of
&lt;a href="https://infer.tidymodels.org/reference/calculate.html" target="_blank" rel="noopener">&lt;code>calculate()&lt;/code>&lt;/a>. Namely, the package will now&lt;/p>
&lt;ul>
&lt;li>
&lt;p>supply a consistent error when the supplied &lt;code>stat&lt;/code> argument isn&amp;rsquo;t well-defined for the variables
&lt;a href="https://infer.tidymodels.org/reference/specify.html" target="_blank" rel="noopener">&lt;code>specify()&lt;/code>&lt;/a>d&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/calculate.html'>calculate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"diff in means"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Error: A difference in means is not well-defined for a numeric response variable (hours) and no explanatory variable.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>or&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>college&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>partyid&lt;/span>, success &lt;span class='o'>=&lt;/span> &lt;span class='s'>"degree"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/calculate.html'>calculate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"diff in props"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Dropping unused factor levels DK from the supplied explanatory variable 'partyid'.&lt;/span>
&lt;span class='c'>#&amp;gt; Error: A difference in proportions is not well-defined for a dichotomous categorical response variable (college) and a multinomial categorical explanatory variable (partyid).&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>supply a consistent message when the user supplies unneeded information via
&lt;a href="https://infer.tidymodels.org/reference/hypothesize.html" target="_blank" rel="noopener">&lt;code>hypothesize()&lt;/code>&lt;/a> to
&lt;a href="https://infer.tidymodels.org/reference/calculate.html" target="_blank" rel="noopener">&lt;code>calculate()&lt;/code>&lt;/a> an observed statistic&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># supply mu = 40 when it's not needed&lt;/span>
&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/hypothesize.html'>hypothesize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>null &lt;span class='o'>=&lt;/span> &lt;span class='s'>"point"&lt;/span>, mu &lt;span class='o'>=&lt;/span> &lt;span class='m'>40&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/calculate.html'>calculate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"mean"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Message: The point null hypothesis `mu = 40` does not inform calculation of the observed statistic (a mean) and will be ignored.&lt;/span>
&lt;span class='c'>#&amp;gt; Response: hours (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; Null Hypothesis: point&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; stat&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 41.4&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;p>and&lt;/p>
&lt;ul>
&lt;li>
&lt;p>supply a consistent warning and assume a reasonable null value when the user does not supply sufficient information to calculate an observed statistic&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># don't hypothesize `p` when it's needed&lt;/span>
&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>sex&lt;/span>, success &lt;span class='o'>=&lt;/span> &lt;span class='s'>"female"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/calculate.html'>calculate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"z"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Warning: A z statistic requires a null hypothesis to calculate the observed statistic. &lt;/span>
&lt;span class='c'>#&amp;gt; Output assumes the following null value: `p = .5`.&lt;/span>
&lt;span class='c'>#&amp;gt; Response: sex (factor)&lt;/span>
&lt;span class='c'>#&amp;gt; Null Hypothesis: point&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; stat&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> -&lt;span style='color: #BB0000;'>1.16&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>or&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># don't hypothesize `p` when it's needed&lt;/span>
&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/specify.html'>specify&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>partyid&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://infer.tidymodels.org/reference/calculate.html'>calculate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Chisq"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Dropping unused factor levels DK from the supplied response variable 'partyid'.&lt;/span>
&lt;span class='c'>#&amp;gt; Warning: A chi-square statistic requires a null hypothesis to calculate the observed statistic. &lt;/span>
&lt;span class='c'>#&amp;gt; Output assumes the following null values: `p = c(dem = 0.2, ind = 0.2, rep = 0.2, other = 0.2, DK = 0.2)`.&lt;/span>
&lt;span class='c'>#&amp;gt; Response: partyid (factor)&lt;/span>
&lt;span class='c'>#&amp;gt; Null Hypothesis: point&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; stat&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 334.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;p>We don&amp;rsquo;t anticipate that any of these changes are &amp;ldquo;breaking&amp;rdquo; in the sense that code that previously worked will continue to, though it may now message or warn in a way that it did not used to or error with a different (and hopefully more informative) message.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This release was made possible with financial support from RStudio and the Reed College Mathematics Department. Thanks to
&lt;a href="https://github.com/aarora79" target="_blank" rel="noopener">@aarora79&lt;/a>,
&lt;a href="https://github.com/acpguedes" target="_blank" rel="noopener">@acpguedes&lt;/a>,
&lt;a href="https://github.com/AlbertRapp" target="_blank" rel="noopener">@AlbertRapp&lt;/a>,
&lt;a href="https://github.com/alexpghayes" target="_blank" rel="noopener">@alexpghayes&lt;/a>,
&lt;a href="https://github.com/aloy" target="_blank" rel="noopener">@aloy&lt;/a>,
&lt;a href="https://github.com/AmeliaMN" target="_blank" rel="noopener">@AmeliaMN&lt;/a>,
&lt;a href="https://github.com/andrewpbray" target="_blank" rel="noopener">@andrewpbray&lt;/a>,
&lt;a href="https://github.com/apreshill" target="_blank" rel="noopener">@apreshill&lt;/a>,
&lt;a href="https://github.com/atheobold" target="_blank" rel="noopener">@atheobold&lt;/a>,
&lt;a href="https://github.com/beanumber" target="_blank" rel="noopener">@beanumber&lt;/a>,
&lt;a href="https://github.com/bigdataman2015" target="_blank" rel="noopener">@bigdataman2015&lt;/a>,
&lt;a href="https://github.com/bragks" target="_blank" rel="noopener">@bragks&lt;/a>,
&lt;a href="https://github.com/brendanhcullen" target="_blank" rel="noopener">@brendanhcullen&lt;/a>,
&lt;a href="https://github.com/CarlssonLeo" target="_blank" rel="noopener">@CarlssonLeo&lt;/a>,
&lt;a href="https://github.com/ChalkboardSonata" target="_blank" rel="noopener">@ChalkboardSonata&lt;/a>,
&lt;a href="https://github.com/chriscardillo" target="_blank" rel="noopener">@chriscardillo&lt;/a>,
&lt;a href="https://github.com/clauswilke" target="_blank" rel="noopener">@clauswilke&lt;/a>,
&lt;a href="https://github.com/congdanh8391" target="_blank" rel="noopener">@congdanh8391&lt;/a>,
&lt;a href="https://github.com/corinne-riddell" target="_blank" rel="noopener">@corinne-riddell&lt;/a>,
&lt;a href="https://github.com/cristianvaldez" target="_blank" rel="noopener">@cristianvaldez&lt;/a>,
&lt;a href="https://github.com/daranzolin" target="_blank" rel="noopener">@daranzolin&lt;/a>,
&lt;a href="https://github.com/davidbaniadam" target="_blank" rel="noopener">@davidbaniadam&lt;/a>,
&lt;a href="https://github.com/davidhodge931" target="_blank" rel="noopener">@davidhodge931&lt;/a>,
&lt;a href="https://github.com/doug-friedman" target="_blank" rel="noopener">@doug-friedman&lt;/a>,
&lt;a href="https://github.com/dshelldhillon" target="_blank" rel="noopener">@dshelldhillon&lt;/a>,
&lt;a href="https://github.com/dsolito" target="_blank" rel="noopener">@dsolito&lt;/a>,
&lt;a href="https://github.com/echasnovski" target="_blank" rel="noopener">@echasnovski&lt;/a>,
&lt;a href="https://github.com/EllaKaye" target="_blank" rel="noopener">@EllaKaye&lt;/a>,
&lt;a href="https://github.com/enricochavez" target="_blank" rel="noopener">@enricochavez&lt;/a>,
&lt;a href="https://github.com/gdbassett" target="_blank" rel="noopener">@gdbassett&lt;/a>,
&lt;a href="https://github.com/ghost" target="_blank" rel="noopener">@ghost&lt;/a>,
&lt;a href="https://github.com/GitHunter0" target="_blank" rel="noopener">@GitHunter0&lt;/a>,
&lt;a href="https://github.com/hardin47" target="_blank" rel="noopener">@hardin47&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/higgi13425" target="_blank" rel="noopener">@higgi13425&lt;/a>,
&lt;a href="https://github.com/instantkaffee" target="_blank" rel="noopener">@instantkaffee&lt;/a>,
&lt;a href="https://github.com/ismayc" target="_blank" rel="noopener">@ismayc&lt;/a>,
&lt;a href="https://github.com/jbourak" target="_blank" rel="noopener">@jbourak&lt;/a>,
&lt;a href="https://github.com/jcvall" target="_blank" rel="noopener">@jcvall&lt;/a>,
&lt;a href="https://github.com/jimrothstein" target="_blank" rel="noopener">@jimrothstein&lt;/a>,
&lt;a href="https://github.com/kennethban" target="_blank" rel="noopener">@kennethban&lt;/a>,
&lt;a href="https://github.com/m-berkes" target="_blank" rel="noopener">@m-berkes&lt;/a>,
&lt;a href="https://github.com/mikelove" target="_blank" rel="noopener">@mikelove&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/Minhasshazu" target="_blank" rel="noopener">@Minhasshazu&lt;/a>,
&lt;a href="https://github.com/msberends" target="_blank" rel="noopener">@msberends&lt;/a>,
&lt;a href="https://github.com/mt-edwards" target="_blank" rel="noopener">@mt-edwards&lt;/a>,
&lt;a href="https://github.com/muschellij2" target="_blank" rel="noopener">@muschellij2&lt;/a>,
&lt;a href="https://github.com/nfultz" target="_blank" rel="noopener">@nfultz&lt;/a>,
&lt;a href="https://github.com/nicholasjhorton" target="_blank" rel="noopener">@nicholasjhorton&lt;/a>,
&lt;a href="https://github.com/PirateGrunt" target="_blank" rel="noopener">@PirateGrunt&lt;/a>,
&lt;a href="https://github.com/PsychlytxTD" target="_blank" rel="noopener">@PsychlytxTD&lt;/a>,
&lt;a href="https://github.com/richierocks" target="_blank" rel="noopener">@richierocks&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/rpruim" target="_blank" rel="noopener">@rpruim&lt;/a>,
&lt;a href="https://github.com/rudeboybert" target="_blank" rel="noopener">@rudeboybert&lt;/a>,
&lt;a href="https://github.com/rundel" target="_blank" rel="noopener">@rundel&lt;/a>,
&lt;a href="https://github.com/sastoudt" target="_blank" rel="noopener">@sastoudt&lt;/a>,
&lt;a href="https://github.com/sbibauw" target="_blank" rel="noopener">@sbibauw&lt;/a>,
&lt;a href="https://github.com/sckott" target="_blank" rel="noopener">@sckott&lt;/a>,
&lt;a href="https://github.com/THargreaves" target="_blank" rel="noopener">@THargreaves&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/torockel" target="_blank" rel="noopener">@torockel&lt;/a>,
&lt;a href="https://github.com/ttimbers" target="_blank" rel="noopener">@ttimbers&lt;/a>,
&lt;a href="https://github.com/vikram-rawat" target="_blank" rel="noopener">@vikram-rawat&lt;/a>,
&lt;a href="https://github.com/vladimirvrabely" target="_blank" rel="noopener">@vladimirvrabely&lt;/a>, and
&lt;a href="https://github.com/xiaochi-liu" target="_blank" rel="noopener">@xiaochi-liu&lt;/a> for their contributions to the package.&lt;/p>
&lt;p>[1]: GAISE College Report ASA Revision Committee, &amp;ldquo;Guidelines for Assessment and Instruction in Statistics Education College Report 2016,&amp;rdquo; &lt;a href="http://www.amstat.org/education/gaise">http://www.amstat.org/education/gaise&lt;/a>.&lt;/p></description></item><item><title>Q2 2021 tidymodels digest</title><link>https://www.tidyverse.org/blog/2021/07/tidymodels-2021-q2/</link><pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/07/tidymodels-2021-q2/</guid><description>&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles. Earlier this year, we
&lt;a href="https://www.tidyverse.org/blog/2021/03/tidymodels-2021-q1/" target="_blank" rel="noopener">started regular updates&lt;/a> here on the tidyverse blog summarizing recent developments in the tidymodels ecosystem. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including those that focus on a single package or more major releases. The purpose of these roundup posts is to keep you informed about any releases you may have missed and useful new functionality as we maintain these packages.&lt;/p>
&lt;p>Since our last roundup post, there have been 19 CRAN releases of 15 different packages. That might sound like a lot of change to absorb as a tidymodels user! However, we purposefully write code in small, modular packages that we can release frequently to make models easier to deploy and our software easier to maintain. You can install these updates from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;broom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;butcher&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;discrim&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;hardhat&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;parsnip&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;probably&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;recipes&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;rsample&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;stacks&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;themis&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;tidymodels&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;tidyposterior&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;tune&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;workflowsets&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;yardstick&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>NEWS&lt;/code> files are linked here for each package; you&amp;rsquo;ll notice that many of these releases involve small bug fixes or internal changes that are not user-facing. It&amp;rsquo;s a lot to keep up with and there are some super useful updates in the mix, so read on for several highlights!&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://broom.tidymodels.org/news/index.html#broom-0-7-8-2021-06-24" target="_blank" rel="noopener">broom&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://butcher.tidymodels.org/news/index.html#butcher-0-1-4-2021-03-19" target="_blank" rel="noopener">butcher&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://discrim.tidymodels.org/news/index.html#discrim-0-1-2-2021-05-28" target="_blank" rel="noopener">discrim&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://hardhat.tidymodels.org/news/index.html#hardhat-0-1-4-2020-07-02" target="_blank" rel="noopener">hardhat&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://parsnip.tidymodels.org/news/index.html#parsnip-0-1-6-2021-05-27" target="_blank" rel="noopener">parsnip&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://probably.tidymodels.org/news/index.html#probably-0-0-6-2020-06-05" target="_blank" rel="noopener">probably&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://recipes.tidymodels.org/news/index.html#recipes-0-1-16-2021-04-16" target="_blank" rel="noopener">recipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://rsample.tidymodels.org/news/index.html#rsample-0-1-0-2021-05-08" target="_blank" rel="noopener">rsample&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/stacks/blob/main/NEWS.md#v020" target="_blank" rel="noopener">stacks&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://themis.tidymodels.org/dev/news/index.html#themis-0-1-4-2021-06-12" target="_blank" rel="noopener">themis&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.tidymodels.org/news/index.html#tidymodels-0-1-3-2021-04-19" target="_blank" rel="noopener">tidymodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/tidyposterior/blob/master/NEWS.md#tidyposterior-010" target="_blank" rel="noopener">tidyposterior&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tune.tidymodels.org/news/index.html#tune-0-1-5-2021-04-23" target="_blank" rel="noopener">tune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflowsets.tidymodels.org/news/index.html#workflowsets-0-0-2-2021-04-16" target="_blank" rel="noopener">workflowsets&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://yardstick.tidymodels.org/news/index.html#yardstick-0-0-8-2021-03-28" target="_blank" rel="noopener">yardstick&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="reduce-the-memory-footprint-of-your-recipes">Reduce the memory footprint of your recipes
&lt;a href="#reduce-the-memory-footprint-of-your-recipes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://butcher.tidymodels.org/" target="_blank" rel="noopener">butcher&lt;/a> package provides methods to remove (or &amp;ldquo;axe&amp;rdquo;) components from model objects that are not needed for prediction. The most recent release updated how butcher handles &lt;em>recipes&lt;/em> (the tidymodels approach for preprocessing and feature engineering) for more complete and robust coverage. Let&amp;rsquo;s consider a simulated churn-classification dataset for phone company customers:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">butcher&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;mlc_churn&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">churn_split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">initial_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mlc_churn&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">churn_train&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">training&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">churn_test&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">voice_mail_plan&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fill&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">churn&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_bar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;fill&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">scale_x_continuous&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">labels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scales&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">percent_format&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">labs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/unnamed-chunk-3-1.png" alt="plot of chunk unnamed-chunk-3">&lt;/p>
&lt;p>For some kinds of models, we would want to create dummy or indicator variables from nominal predictors, and preprocess features to be on the same scale. We can use recipes for this task:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">churn_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">voice_mail_plan&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">total_intl_minutes&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="n">total_day_minutes&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">total_eve_minutes&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">churn_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_nominal_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can &lt;code>prep(churn_rec)&lt;/code> to estimate the quantities needed to create categorical features and to scale all the predictors:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">churn_prep&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">prep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn_rec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">churn_prep&lt;/span>
&lt;span class="c1">#&amp;gt; Data Recipe&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Inputs:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; role #variables&lt;/span>
&lt;span class="c1">#&amp;gt; outcome 1&lt;/span>
&lt;span class="c1">#&amp;gt; predictor 5&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Training data contained 3750 data points and no missing data.&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Operations:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Dummy variables from voice_mail_plan, state [trained]&lt;/span>
&lt;span class="c1">#&amp;gt; Centering and scaling for total_intl_minutes, total_day_minutes, ... [trained]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To remove everything from this prepped recipe not needed for applying to new data (e.g.
&lt;a href="https://recipes.tidymodels.org/reference/bake.html" target="_blank" rel="noopener">bake()&lt;/a> it), we can call &lt;code>butcher(churn_prep)&lt;/code>. In some applications, modeling practitioners need to make custom functions with a feature-engineering recipe. Sometimes those functions have&amp;hellip; a lot of extra STUFF in them, stuff that is not needed for prediction.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">butchered_plus&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">some_stuff_in_the_environment&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">runif&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1e6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">churn_prep&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">voice_mail_plan&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">total_intl_minutes&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="n">total_day_minutes&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">total_eve_minutes&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">churn_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_nominal_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">butcher&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn_prep&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the old version of butcher, we did not successfully remove all that extra stuff, and recipes were bigger than they needed to be:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># old version of butcher&lt;/span>
&lt;span class="n">lobstr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">obj_size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">butcher&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn_prep&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; 1,835,512 B&lt;/span>
&lt;span class="n">lobstr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">obj_size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">butchered_plus&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; 9,836,480 B&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the new version of butcher, we now successfully remove unneeded components from the recipe, so it is smaller:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># new version of butcher&lt;/span>
&lt;span class="n">lobstr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">obj_size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">butcher&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn_prep&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; 1,695,352 B&lt;/span>
&lt;span class="n">lobstr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">obj_size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">butchered_plus&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; 1,695,352 B&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>There are also &lt;code>butcher()&lt;/code> methods for &lt;code>workflow()&lt;/code> objects, so when you &lt;code>butcher()&lt;/code> a modeling workflow, you remove everything not needed for prediction from both its estimated recipe &lt;em>and&lt;/em> its trained model, making it as lightweight as possible for deployment.&lt;/p>
&lt;h2 id="svms-and-fast-logistic-regression-with-liblinear">SVMs and fast logistic regression with LiblineaR
&lt;a href="#svms-and-fast-logistic-regression-with-liblinear">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Unfortunately, the &lt;code>&amp;quot;liquidSVM&amp;quot;&lt;/code> engine for support vector machine models that parsnip supported was deprecated in the latest release, because that package was removed from CRAN. We added a new engine in the same release that allows users to fit linear SVMs with the
&lt;a href="https://parsnip.tidymodels.org/reference/svm_linear.html" target="_blank" rel="noopener">parsnip model &lt;code>svm_linear()&lt;/code>&lt;/a>, as well as having another option for logistic regression. This new &lt;code>&amp;quot;LiblineaR&amp;quot;&lt;/code> engine is based on the same C++ library that is shipped with
&lt;a href="https://scikit-learn.org/" target="_blank" rel="noopener">scikit-learn&lt;/a>. We&amp;rsquo;d like to thank the
&lt;a href="https://www.dnalytics.com/software/liblinear/" target="_blank" rel="noopener">maintainers of the LiblineaR R package&lt;/a> for all their help as we set up this integration.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">234&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">churn_folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vfold_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">strata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">churn&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">liblinear_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">logistic_reg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">penalty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mixture&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;classification&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;LiblineaR&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">liblinear_wf&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn_rec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">liblinear_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">fit_resamples&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">liblinear_wf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">churn_folds&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # Resampling results&lt;/span>
&lt;span class="c1">#&amp;gt; # 5-fold cross-validation using stratification &lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; splits id .metrics .notes &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;list&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 &amp;lt;split [2999/751]&amp;gt; Fold1 &amp;lt;tibble [2 × 4]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 &amp;lt;split [2999/751]&amp;gt; Fold2 &amp;lt;tibble [2 × 4]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 3 &amp;lt;split [3000/750]&amp;gt; Fold3 &amp;lt;tibble [2 × 4]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 4 &amp;lt;split [3001/749]&amp;gt; Fold4 &amp;lt;tibble [2 × 4]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 5 &amp;lt;split [3001/749]&amp;gt; Fold5 &amp;lt;tibble [2 × 4]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>&amp;quot;LiblineaR&amp;quot;&lt;/code> engine for regularized logistic regression
&lt;a href="https://twitter.com/juliasilge/status/1374029310764359681" target="_blank" rel="noopener">can be very fast compared to the &lt;code>&amp;quot;glmnet&amp;quot;&lt;/code> engine&lt;/a>, even when we use a
&lt;a href="https://www.tidyverse.org/blog/2020/11/tidymodels-sparse-support/" target="_blank" rel="noopener">sparse representation&lt;/a>. Check out
&lt;a href="https://gist.github.com/juliasilge/26a43e5e68cf12842354e6652dfed688" target="_blank" rel="noopener">benchmarking code here&lt;/a>.&lt;/p>
&lt;h2 id="post-processing-your-model-predictions-with-probably-and-yardstick">Post-processing your model predictions with probably and yardstick
&lt;a href="#post-processing-your-model-predictions-with-probably-and-yardstick">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We recently had releases of both the
&lt;a href="https://yardstick.tidymodels.org/" target="_blank" rel="noopener">yardstick&lt;/a> and
&lt;a href="https://probably.tidymodels.org/" target="_blank" rel="noopener">probably&lt;/a> packages, which now work together even better. The probably package can, among other things, help you post-process your model predictions. This data on churn is imbalanced, with many more customers who did not churn than those who did; we may need to use a threshold other than 0.5 for most appropriate results, or an organization may want to set a specific threshold for some action to prevent churn. You can set a threshold using the
&lt;a href="https://probably.tidymodels.org/reference/make_class_pred.html" target="_blank" rel="noopener">probably function &lt;code>make_two_class_pred()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">probably&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">churn_preds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">liblinear_wf&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">augment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn_test&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">churn_post&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">churn_preds&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.pred&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">make_two_class_pred&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.pred_yes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">churn&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">threshold&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.7&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The class predictions created with probably integrate well with functions from yardstick, including custom sets of metrics created with
&lt;a href="https://yardstick.tidymodels.org/reference/metric_set.html" target="_blank" rel="noopener">&lt;code>metric_set()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">churn_metrics&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">metric_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">accuracy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sens&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">churn_post&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">churn_metrics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">truth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">churn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">estimate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">.pred_class&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; .metric .estimator .estimate&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 accuracy binary 0.854 &lt;/span>
&lt;span class="c1">#&amp;gt; 2 sens binary 0.0619&lt;/span>
&lt;span class="c1">#&amp;gt; 3 spec binary 0.999&lt;/span>
&lt;span class="n">churn_post&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">churn_metrics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">truth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">churn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">estimate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">.pred&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; .metric .estimator .estimate&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 accuracy binary 0.746&lt;/span>
&lt;span class="c1">#&amp;gt; 2 sens binary 0.149&lt;/span>
&lt;span class="c1">#&amp;gt; 3 spec binary 0.856&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notice that with the default threshold of 0.5, basically no customers were classified as at risk for churn! Adjusting the threshold with &lt;code>make_two_class_pred()&lt;/code> helps to address this issue.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to extend our thanks to all of the contributors who helped make these releases during Q2 possible!&lt;/p>
&lt;ul>
&lt;li>
&lt;p>broom:
&lt;a href="https://github.com/alexpghayes" target="_blank" rel="noopener">@alexpghayes&lt;/a>,
&lt;a href="https://github.com/andrewsris" target="_blank" rel="noopener">@andrewsris&lt;/a>,
&lt;a href="https://github.com/arcruz0" target="_blank" rel="noopener">@arcruz0&lt;/a>,
&lt;a href="https://github.com/bbolker" target="_blank" rel="noopener">@bbolker&lt;/a>,
&lt;a href="https://github.com/bgall" target="_blank" rel="noopener">@bgall&lt;/a>,
&lt;a href="https://github.com/cccneto" target="_blank" rel="noopener">@cccneto&lt;/a>,
&lt;a href="https://github.com/ddsjoberg" target="_blank" rel="noopener">@ddsjoberg&lt;/a>,
&lt;a href="https://github.com/DerForscher107" target="_blank" rel="noopener">@DerForscher107&lt;/a>,
&lt;a href="https://github.com/dikiprawisuda" target="_blank" rel="noopener">@dikiprawisuda&lt;/a>,
&lt;a href="https://github.com/dmenne" target="_blank" rel="noopener">@dmenne&lt;/a>,
&lt;a href="https://github.com/grantmcdermott" target="_blank" rel="noopener">@grantmcdermott&lt;/a>,
&lt;a href="https://github.com/japhir" target="_blank" rel="noopener">@japhir&lt;/a>,
&lt;a href="https://github.com/karldw" target="_blank" rel="noopener">@karldw&lt;/a>,
&lt;a href="https://github.com/kelseygonzalez" target="_blank" rel="noopener">@kelseygonzalez&lt;/a>,
&lt;a href="https://github.com/leejasme" target="_blank" rel="noopener">@leejasme&lt;/a>,
&lt;a href="https://github.com/LukasWallrich" target="_blank" rel="noopener">@LukasWallrich&lt;/a>,
&lt;a href="https://github.com/MatthieuStigler" target="_blank" rel="noopener">@MatthieuStigler&lt;/a>,
&lt;a href="https://github.com/mbac" target="_blank" rel="noopener">@mbac&lt;/a>,
&lt;a href="https://github.com/nt-williams" target="_blank" rel="noopener">@nt-williams&lt;/a>,
&lt;a href="https://github.com/pachadotdev" target="_blank" rel="noopener">@pachadotdev&lt;/a>,
&lt;a href="https://github.com/rpruim" target="_blank" rel="noopener">@rpruim&lt;/a>,
&lt;a href="https://github.com/rsbivand" target="_blank" rel="noopener">@rsbivand&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/vincentarelbundock" target="_blank" rel="noopener">@vincentarelbundock&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>butcher:
&lt;a href="https://github.com/bshor" target="_blank" rel="noopener">@bshor&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/lbenz-mdsol" target="_blank" rel="noopener">@lbenz-mdsol&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>discrim:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>hardhat:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>parsnip:
&lt;a href="https://github.com/brshallo" target="_blank" rel="noopener">@brshallo&lt;/a>,
&lt;a href="https://github.com/cgoo4" target="_blank" rel="noopener">@cgoo4&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dgrtwo" target="_blank" rel="noopener">@dgrtwo&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/graysonwhite" target="_blank" rel="noopener">@graysonwhite&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/hsbadr" target="_blank" rel="noopener">@hsbadr&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/jtlandis" target="_blank" rel="noopener">@jtlandis&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/klin333" target="_blank" rel="noopener">@klin333&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>,
&lt;a href="https://github.com/paulponcet" target="_blank" rel="noopener">@paulponcet&lt;/a>,
&lt;a href="https://github.com/pfc5098" target="_blank" rel="noopener">@pfc5098&lt;/a>,
&lt;a href="https://github.com/RaymondBalise" target="_blank" rel="noopener">@RaymondBalise&lt;/a>,
&lt;a href="https://github.com/smingerson" target="_blank" rel="noopener">@smingerson&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/UnclAlDeveloper" target="_blank" rel="noopener">@UnclAlDeveloper&lt;/a>, and
&lt;a href="https://github.com/vadimus202" target="_blank" rel="noopener">@vadimus202&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>probably:
&lt;a href="https://github.com/hsbadr" target="_blank" rel="noopener">@hsbadr&lt;/a>, and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>recipes:
&lt;a href="https://github.com/AlbertRapp" target="_blank" rel="noopener">@AlbertRapp&lt;/a>,
&lt;a href="https://github.com/asmae-toumi" target="_blank" rel="noopener">@asmae-toumi&lt;/a>,
&lt;a href="https://github.com/atusy" target="_blank" rel="noopener">@atusy&lt;/a>,
&lt;a href="https://github.com/christiantillich" target="_blank" rel="noopener">@christiantillich&lt;/a>,
&lt;a href="https://github.com/EdwinTh" target="_blank" rel="noopener">@EdwinTh&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jake-mason" target="_blank" rel="noopener">@jake-mason&lt;/a>,
&lt;a href="https://github.com/jkennel" target="_blank" rel="noopener">@jkennel&lt;/a>,
&lt;a href="https://github.com/jtlandis" target="_blank" rel="noopener">@jtlandis&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/LiamBlake" target="_blank" rel="noopener">@LiamBlake&lt;/a>,
&lt;a href="https://github.com/lindeloev" target="_blank" rel="noopener">@lindeloev&lt;/a>,
&lt;a href="https://github.com/mikemc" target="_blank" rel="noopener">@mikemc&lt;/a>,
&lt;a href="https://github.com/mrkaye97" target="_blank" rel="noopener">@mrkaye97&lt;/a>,
&lt;a href="https://github.com/renanxcortes" target="_blank" rel="noopener">@renanxcortes&lt;/a>,
&lt;a href="https://github.com/schoonees" target="_blank" rel="noopener">@schoonees&lt;/a>,
&lt;a href="https://github.com/SlowMo24" target="_blank" rel="noopener">@SlowMo24&lt;/a>,
&lt;a href="https://github.com/smingerson" target="_blank" rel="noopener">@smingerson&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rsample:
&lt;a href="https://github.com/brian-j-smith" target="_blank" rel="noopener">@brian-j-smith&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/LiamBlake" target="_blank" rel="noopener">@LiamBlake&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>,
&lt;a href="https://github.com/rkb965" target="_blank" rel="noopener">@rkb965&lt;/a>, and
&lt;a href="https://github.com/supermdat" target="_blank" rel="noopener">@supermdat&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>stacks:
&lt;a href="https://github.com/asmae-toumi" target="_blank" rel="noopener">@asmae-toumi&lt;/a>,
&lt;a href="https://github.com/Crisel12" target="_blank" rel="noopener">@Crisel12&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>themis:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/kylegilde" target="_blank" rel="noopener">@kylegilde&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tidymodels:
&lt;a href="https://github.com/dmenne" target="_blank" rel="noopener">@dmenne&lt;/a>,
&lt;a href="https://github.com/Edward-Egros" target="_blank" rel="noopener">@Edward-Egros&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/verajosemanuel" target="_blank" rel="noopener">@verajosemanuel&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tidyposterior:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tune:
&lt;a href="https://github.com/albert-ying" target="_blank" rel="noopener">@albert-ying&lt;/a>,
&lt;a href="https://github.com/amazongodman" target="_blank" rel="noopener">@amazongodman&lt;/a>,
&lt;a href="https://github.com/brshallo" target="_blank" rel="noopener">@brshallo&lt;/a>,
&lt;a href="https://github.com/dpanyard" target="_blank" rel="noopener">@dpanyard&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/klin333" target="_blank" rel="noopener">@klin333&lt;/a>,
&lt;a href="https://github.com/mbac" target="_blank" rel="noopener">@mbac&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>,
&lt;a href="https://github.com/silvanhi" target="_blank" rel="noopener">@silvanhi&lt;/a>,
&lt;a href="https://github.com/smingerson" target="_blank" rel="noopener">@smingerson&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/yogat3ch" target="_blank" rel="noopener">@yogat3ch&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>workflowsets:
&lt;a href="https://github.com/amazongodman" target="_blank" rel="noopener">@amazongodman&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/gunnergalactico" target="_blank" rel="noopener">@gunnergalactico&lt;/a>,
&lt;a href="https://github.com/hnagaty" target="_blank" rel="noopener">@hnagaty&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>,
&lt;a href="https://github.com/oskasf" target="_blank" rel="noopener">@oskasf&lt;/a>,
&lt;a href="https://github.com/rafzamb" target="_blank" rel="noopener">@rafzamb&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/yogat3ch" target="_blank" rel="noopener">@yogat3ch&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>yardstick:
&lt;a href="https://github.com/brshallo" target="_blank" rel="noopener">@brshallo&lt;/a>,
&lt;a href="https://github.com/coletl" target="_blank" rel="noopener">@coletl&lt;/a>,
&lt;a href="https://github.com/datenzauberai" target="_blank" rel="noopener">@datenzauberai&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/klin333" target="_blank" rel="noopener">@klin333&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Choose your own tidymodels adventure</title><link>https://www.tidyverse.org/blog/2021/05/choose-tidymodels-adventure/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/05/choose-tidymodels-adventure/</guid><description>&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles. You can install the tidymodels suite of packages from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tidymodels&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The packages in tidymodels are designed to work together in a unified ecosystem, but they are flexible and modular; you can use tidymodels packages for certain parts of a modeling analysis without committing to the entire ecosystem, when preferred. We purposefully write code in these small, modular packages both to make them easier to maintain and easier to use in production systems. This does mean that it can be challenging for a newcomer to know where their specific problem fits in this ecosystem.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ────────────────────────────────── tidymodels 0.1.3 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ broom 0.7.6 ✓ recipes 0.1.16&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dials 0.0.9 ✓ rsample 0.1.0 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dplyr 1.0.6 ✓ tibble 3.1.2 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ ggplot2 3.3.3 ✓ tidyr 1.1.3 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ infer 0.5.4 ✓ tune 0.1.5 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ modeldata 0.1.0 ✓ workflows 0.2.2 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ parsnip 0.1.5 ✓ workflowsets 0.0.2 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ purrr 0.3.4 ✓ yardstick 0.0.8&lt;/span>
&lt;span class="c1">#&amp;gt; ── Conflicts ───────────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class="c1">#&amp;gt; x purrr::discard() masks scales::discard()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::filter() masks stats::filter()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::lag() masks stats::lag()&lt;/span>
&lt;span class="c1">#&amp;gt; x recipes::step() masks stats::step()&lt;/span>
&lt;span class="c1">#&amp;gt; • Use tidymodels_prefer() to resolve common conflicts.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In general, we recommend a couple of resources for folks learning about tidymodels: the
&lt;a href="https://www.tidymodels.org/start/" target="_blank" rel="noopener">&lt;strong>Get Started&lt;/strong> section of tidymodels.org&lt;/a> to get going quickly and our book
&lt;a href="https://www.tmwr.org/" target="_blank" rel="noopener">&lt;em>Tidy Modeling with R&lt;/em>&lt;/a> to dig deeper. This post takes on a more specific task for a newcomer to tidymodels. We consider several categories of real-world modeling analyses and recommend ways to
&lt;a href="https://en.wikipedia.org/wiki/Choose_Your_Own_Adventure" target="_blank" rel="noopener">choose your own adventure&lt;/a> in the tidymodels ecosystem. In tidymodels, you can train:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>a single model,&lt;/p>
&lt;/li>
&lt;li>
&lt;p>a workflow, or&lt;/p>
&lt;/li>
&lt;li>
&lt;p>a set of workflows.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Each of these choices is best in difference circumstances, and we&amp;rsquo;ll consider each in the following sections.&lt;/p>
&lt;h2 id="starting-with-the-basics-a-parsnip-model">Starting with the basics: a &lt;strong>parsnip&lt;/strong> model
&lt;a href="#starting-with-the-basics-a-parsnip-model">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A fully featured ecosystem for modeling and machine learning requires interfaces to, well, models, and the tidymodels package that provides those functions and interfaces is
&lt;a href="https://parsnip.tidymodels.org/" target="_blank" rel="noopener">parsnip&lt;/a>. If your modeling adventure involves smaller data and straightforward data preprocessing (like that provided by
&lt;a href="https://www.tmwr.org/base-r.html#formula" target="_blank" rel="noopener">R&amp;rsquo;s model formula&lt;/a>), you may be well-served by focusing on parsnip. The parsnip package is a good choice for fitting a straightforward model to a smaller data set like this one:&lt;/p>
&lt;p>&lt;img src="https://juliasilge.com/blog/student-debt/index_files/figure-html/unnamed-chunk-3-1.png" title="Plot showing student loan debt by race across time" alt="Plot showing student loan debt by race across time" width="70%" />&lt;/p>
&lt;p>To learn more about how to fit and evaluate parsnip models, check out
&lt;a href="https://www.tidymodels.org/start/models/" target="_blank" rel="noopener">this article at tidymodel.org&amp;rsquo;s &lt;strong>Get Started&lt;/strong> section&lt;/a> and
&lt;a href="https://juliasilge.com/blog/student-debt/" target="_blank" rel="noopener">this blog post (complete with screencast) by me&lt;/a>. You can use
&lt;a href="https://www.tidyverse.org/blog/2021/03/tidymodels-2021-q1/#choose-parsnip-models-with-an-rstudio-addin" target="_blank" rel="noopener">parsnip&amp;rsquo;s RStudio addin&lt;/a> to generate code for one or more models!&lt;/p>
&lt;p>We don&amp;rsquo;t believe most people using tidymodels fall into this first category, but we think that the tools we&amp;rsquo;ve built for these kinds of straightforward analyses are well-designed and will set you up for statistical and practical success in the short and long term. Instead of fitting a model with, say, &lt;code>lm()&lt;/code>, in parsnip we specify a model with code such as:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;lm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Linear Regression Model Specification (regression)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: lm&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We then &lt;code>fit()&lt;/code> that model to data. More code is required to fit a simple model than you may be used to, but learning and using parsnip opens up the door for all the other things you can do with the same pipeline.&lt;/p>
&lt;h2 id="holistic-model-workflows">Holistic model &lt;strong>workflows&lt;/strong>
&lt;a href="#holistic-model-workflows">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When you are setting off on a modeling adventure, it might be worth asking what we even mean by the word &amp;ldquo;model&amp;rdquo;; it is a word that gets overloaded really quickly! In the tidymodels ecosystem, we carefully incorporate &lt;em>both&lt;/em> feature engineering (also called data preprocessing) that must be learned from training data &lt;em>and&lt;/em> a model fit into a modeling workflow that is estimated together. For example, if you trained a least squares regression model with features learned from principal component analysis, the PCA preprocessing step should be considered part of the model workflow:&lt;/p>
&lt;p>&lt;img src="https://www.tmwr.org/premade/proper-workflow.svg" title="Diagram showing that PCA preprocessing is part of the modeling process, together with least squares estimation" alt="Diagram showing that PCA preprocessing is part of the modeling process, together with least squares estimation" />&lt;/p>
&lt;p>In the tidymodels ecosystem, we use the
&lt;a href="https://workflows.tidymodels.org/" target="_blank" rel="noopener">workflows&lt;/a> package to bundle together model components and promote more fluent modeling processes. You can fit, tune, and resample workflows, and using workflows has benefits from making it easier to keep track of model components in your code to avoiding data leakage in feature engineering.&lt;/p>
&lt;p>We generally expect that most people using tidymodels fall into this middle category, and most of our ecosystem is designed to optimize for these users&amp;rsquo; experience. Choose a &lt;code>workflow()&lt;/code> if you want to try several model and/or feature engineering options with your data, if you prefer a simpler and more unified interface for fitting and tuning, or if you like composable and pipeable code for analyses. The
&lt;a href="https://usemodels.tidymodels.org/" target="_blank" rel="noopener">usemodels&lt;/a> package can even automate the creation of a workflow, using &lt;em>your&lt;/em> data to determine a good recipe along with the model of your choice.&lt;/p>
&lt;p>To learn more about using workflows, see them
&lt;a href="https://www.tidymodels.org/start/case-study/" target="_blank" rel="noopener">used in action in this &lt;strong>Get Started&lt;/strong> article&lt;/a>. Also, I have quite a number of blog posts and screencasts that walk through how to use workflows, such as
&lt;a href="https://juliasilge.com/blog/palmer-penguins/" target="_blank" rel="noopener">this one&lt;/a> that compares two approaches for the same modeling problem and
&lt;a href="https://juliasilge.com/blog/water-sources/" target="_blank" rel="noopener">this one&lt;/a> that trains and evaluates a single workflow (one preprocessor + model).&lt;/p>
&lt;h2 id="screening-many-models-workflowsets">Screening many models: &lt;strong>workflowsets&lt;/strong>
&lt;a href="#screening-many-models-workflowsets">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Sometimes a modeling practitioner is in a situation where they don&amp;rsquo;t want to try out just a few approaches on a given data set, but &lt;em>many&lt;/em>: not just two or three or four, but A LOT. This is most common when a practitioner starts a new modeling project with a data set that is not well understood and there is little (or maybe no) &lt;em>a priori&lt;/em> knowledge about what kind of approach will work well.&lt;/p>
&lt;p>For this kind of tidymodels adventure, we encourage users to try the
&lt;a href="https://workflowsets.tidymodels.org/" target="_blank" rel="noopener">workflowsets&lt;/a> package, which supports the creation, fitting, and comparison of sets of multiple workflows. Combinations of preprocessors and models can be created, and the resulting workflow set can be tuned or resampled, then evaluated (perhaps using Bayesian analysis):&lt;/p>
&lt;p>&lt;img src="https://www.tidyverse.org/blog/2021/03/workflowsets-0-0-1/figure/plot-bayes-1.svg" title="Plot showing RMSE by workflow rank for many models" alt="Plot showing RMSE by workflow rank for many models" />&lt;/p>
&lt;p>We don&amp;rsquo;t expect that most people using tidymodels will use workflowsets, as it is a specialized tool only useful in some contexts. If you are familiar with AutoML tools, you may notice some similarities between them and what this package does; it has many of the same pros and cons. To learn more about workflowsets (including why our group was hesitant to support and build this functionality!) watch
&lt;a href="https://youtu.be/2OfTEakSFXQ" target="_blank" rel="noopener">Max&amp;rsquo;s recent talk for the LA RUG&lt;/a>, and also
&lt;a href="https://www.tmwr.org/workflow-sets.html" target="_blank" rel="noopener">read this chapter of our book&lt;/a>.&lt;/p>
&lt;h2 id="your-own-tidymodels-adventure">Your own tidymodels adventure
&lt;a href="#your-own-tidymodels-adventure">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We believe these three general categories cover most of the modeling adventures you as a practitioner might want to embark on, and our guidance here outlines the best choices given the current status of the tidymodels ecosystem here in the middle of 2021. The ecosystem is growing ever more mature, and packages like parsnip and workflows are more stable, while workflowsets is quite new and may be considered more experimental for now.&lt;/p>
&lt;p>For questions and discussions about tidymodels packages, modeling, and machine learning, join us
&lt;a href="https://rstd.io/tidymodels-community" target="_blank" rel="noopener">in discussion on RStudio Community&lt;/a>.&lt;/p></description></item><item><title>recipes 0.1.16</title><link>https://www.tidyverse.org/blog/2021/04/recipes-0-1-16/</link><pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/04/recipes-0-1-16/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with `hugodown::tidy_show_meta()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnails()`
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] `usethis::use_tidy_thanks()`
-->
&lt;p>We&amp;rsquo;re tickled pink to announce the release of
&lt;a href="https://recipes.tidymodels.org/" target="_blank" rel="noopener">recipes&lt;/a> 0.1.16. recipes is a package for preprocessing data for modeling and data analysis.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;recipes&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This blog post will discuss the several improvements to the package. Before discussing new features, please note that the package license was changed from GPL-2 to MIT.&lt;/p>
&lt;p>You can see a full list of changes in the
&lt;a href="https://recipes.tidymodels.org/news/index.html#recipes-0-1-16-unreleased" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="new-column-selectors">New column selectors
&lt;a href="#new-column-selectors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We do our best to keep track of persistent issues that show up in our teaching,
&lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=r-recipes&amp;#43;r&amp;amp;sort=newest" target="_blank" rel="noopener">Stack Overflow&lt;/a> posts,
&lt;a href="https://community.rstudio.com/tag/tidymodels" target="_blank" rel="noopener">RStudio Community&lt;/a> posts, the
&lt;a href="https://www.google.com/search?q=r4ds&amp;#43;tidymodels&amp;#43;book&amp;#43;club&amp;amp;oq=r4ds&amp;#43;tidymodels&amp;#43;book&amp;#43;club" target="_blank" rel="noopener">R4DS Tidy Modeling Book Club&lt;/a>, and other venues. If there are persistent issues, we do our best to help make the programming interface better.&lt;/p>
&lt;p>
&lt;a href="https://twitter.com/minebocek" target="_blank" rel="noopener">Mine Çetinkaya-Rundel&lt;/a> had a good idea for one such persistent issue related to creating dummy variables. For classification data where one or more predictors are categorical, the users might accidentally capture the &lt;em>outcome&lt;/em> and the predictors when creating dummy variables. For example:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">scat_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Location&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Age&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Mass&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Diameter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scat&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_nominal&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">one_hot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">scat_rec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">bake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">names&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## [1] &amp;quot;Age&amp;quot; &amp;quot;Mass&amp;quot; &amp;quot;Diameter&amp;quot;
## [4] &amp;quot;Location_edge&amp;quot; &amp;quot;Location_middle&amp;quot; &amp;quot;Location_off_edge&amp;quot;
## [7] &amp;quot;Species_bobcat&amp;quot; &amp;quot;Species_coyote&amp;quot; &amp;quot;Species_gray_fox&amp;quot;
&lt;/code>&lt;/pre>&lt;p>Note that the outcome column (&lt;code>Species&lt;/code>) was made into binary indicators. Most classification models prefer a factor vector and this would cause errors. The fix would be to remember to remove &lt;code>Species&lt;/code> from the step selector.&lt;/p>
&lt;p>Most selectors in recipes are used to capture &lt;em>predictor&lt;/em> columns. The new version of recipes contains new selectors that combine the role and the data type: &lt;code>all_nominal_predictors()&lt;/code> and &lt;code>all_numeric_predictors()&lt;/code>. Using these:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">scat_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Location&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Age&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Mass&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Diameter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scat&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_nominal_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">one_hot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">scat_rec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">bake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">names&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## [1] &amp;quot;Age&amp;quot; &amp;quot;Mass&amp;quot; &amp;quot;Diameter&amp;quot;
## [4] &amp;quot;Species&amp;quot; &amp;quot;Location_edge&amp;quot; &amp;quot;Location_middle&amp;quot;
## [7] &amp;quot;Location_off_edge&amp;quot;
&lt;/code>&lt;/pre>&lt;p>The existing selectors will remain. We&amp;rsquo;ll be converting our documentation, books, and training to use these new selectors when we select predictors of a specific type.&lt;/p>
&lt;h2 id="new-steps">New steps
&lt;a href="#new-steps">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A new selector was added to compliment &lt;code>step_rm()&lt;/code> (which removes columns). The new &lt;code>step_select()&lt;/code> declares which columns to retain and emulates &lt;code>dplyr::select()&lt;/code>.&lt;/p>
&lt;p>In cases where there are missing data, some data analysis methods compliment the existing predictors with missing value indicators for the covariates that have incomplete values. Thanks to
&lt;a href="https://konradsemsch.netlify.com/" target="_blank" rel="noopener">Konrad Semsch&lt;/a>, &lt;code>step_indicate_na()&lt;/code> can be used to create these. Using the previous example:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">scat_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Location&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Age&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Mass&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Diameter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scat&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_nominal_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">one_hot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_indicate_na&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Mass&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Diameter&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">scat_rec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">bake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scat[&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nf">complete.cases&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scat&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nf">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Mass&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Diameter&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 19 x 4
## Mass na_ind_Mass Diameter na_ind_Diameter
## &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1 2.51 0 NA 1
## 2 18.1 0 NA 1
## 3 8.17 0 NA 1
## 4 3.43 0 NA 1
## 5 5.53 0 NA 1
## 6 26.9 0 24.1 0
## 7 5.38 0 17.8 0
## 8 14.9 0 19.3 0
## 9 9.51 0 17.9 0
## 10 18.3 0 18.1 0
## 11 8.73 0 25.8 0
## 12 25.9 0 22.2 0
## 13 14.5 0 20.1 0
## 14 10.3 0 17.8 0
## 15 14.6 0 19.3 0
## 16 5.66 0 24.8 0
## 17 NA 1 14.9 0
## 18 6.77 0 17.3 0
## 19 20.3 0 NA 1
&lt;/code>&lt;/pre>&lt;p>Speaking of missing data, we&amp;rsquo;ve decided to rename the current eight imputation steps:&lt;/p>
&lt;ul>
&lt;li>&lt;code>step_impute_knn()&lt;/code> is favored over &lt;code>step_knnimpute()&lt;/code>&lt;/li>
&lt;li>&lt;code>step_impute_median()&lt;/code> is favored over &lt;code>step_medianimpute()&lt;/code>&lt;/li>
&lt;li>and so on&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>These are a lot better since they work well with tab-completion. The old steps will go through a gradual deprecation process before being removed at some point in the future.&lt;/p>
&lt;h2 id="keeping-columns-used-in-other-features">Keeping columns used in other features
&lt;a href="#keeping-columns-used-in-other-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A fair number of steps take one or more columns of the data and convert them to artificial features. For example, principal component regression represents a set of columns as artificial features that are amalgamations of the original data. In some cases, users desired to be able to keep the original columns.&lt;/p>
&lt;p>The following steps now have an option called &lt;code>keep_original_cols&lt;/code>: &lt;code>step_date()&lt;/code>, &lt;code>step_dummy()&lt;/code>, &lt;code>step_holiday()&lt;/code>, &lt;code>step_ica()&lt;/code>, &lt;code>step_isomap()&lt;/code>, &lt;code>step_kpca_poly()&lt;/code>, &lt;code>step_kpca_rbf()&lt;/code>, &lt;code>step_nnmf()&lt;/code>, &lt;code>step_pca()&lt;/code>, &lt;code>step_pls()&lt;/code>, and &lt;code>step_ratio()&lt;/code>.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">scat_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Location&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">d13C&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">d15N&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">CN&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scat&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_impute_mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d13C&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d15N&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CN&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_nominal_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">one_hot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_pca&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d13C&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d15N&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CN&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">keep_original_cols&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">scat_rec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">bake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scat&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">names&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## [1] &amp;quot;d13C&amp;quot; &amp;quot;d15N&amp;quot; &amp;quot;CN&amp;quot;
## [4] &amp;quot;Species&amp;quot; &amp;quot;Location_edge&amp;quot; &amp;quot;Location_middle&amp;quot;
## [7] &amp;quot;Location_off_edge&amp;quot; &amp;quot;PC1&amp;quot; &amp;quot;PC2&amp;quot;
## [10] &amp;quot;PC3&amp;quot;
&lt;/code>&lt;/pre>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to everyone who contributed since the previous version:
&lt;a href="https://github.com/AshesITR" target="_blank" rel="noopener">@AshesITR&lt;/a>,
&lt;a href="https://github.com/BenoitLondon" target="_blank" rel="noopener">@BenoitLondon&lt;/a>,
&lt;a href="https://github.com/CelloJuan" target="_blank" rel="noopener">@CelloJuan&lt;/a>,
&lt;a href="https://github.com/dfalbel" target="_blank" rel="noopener">@dfalbel&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/gregdenay" target="_blank" rel="noopener">@gregdenay&lt;/a>,
&lt;a href="https://github.com/gustavomodelli" target="_blank" rel="noopener">@gustavomodelli&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/hsbadr" target="_blank" rel="noopener">@hsbadr&lt;/a>,
&lt;a href="https://github.com/jake-mason" target="_blank" rel="noopener">@jake-mason&lt;/a>,
&lt;a href="https://github.com/jjcurtin" target="_blank" rel="noopener">@jjcurtin&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/konradsemsch" target="_blank" rel="noopener">@konradsemsch&lt;/a>,
&lt;a href="https://github.com/kylegilde" target="_blank" rel="noopener">@kylegilde&lt;/a>,
&lt;a href="https://github.com/LePeti" target="_blank" rel="noopener">@LePeti&lt;/a>,
&lt;a href="https://github.com/LordRudolf" target="_blank" rel="noopener">@LordRudolf&lt;/a>,
&lt;a href="https://github.com/lukasal" target="_blank" rel="noopener">@lukasal&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mikemc" target="_blank" rel="noopener">@mikemc&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/paudel-arjun" target="_blank" rel="noopener">@paudel-arjun&lt;/a>,
&lt;a href="https://github.com/renanxcortes" target="_blank" rel="noopener">@renanxcortes&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/saadaslam" target="_blank" rel="noopener">@saadaslam&lt;/a>,
&lt;a href="https://github.com/schoonees" target="_blank" rel="noopener">@schoonees&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/uriahf" target="_blank" rel="noopener">@uriahf&lt;/a>,
&lt;a href="https://github.com/vadimus202" target="_blank" rel="noopener">@vadimus202&lt;/a>, and
&lt;a href="https://github.com/zenggyu" target="_blank" rel="noopener">@zenggyu&lt;/a>.&lt;/p></description></item><item><title>workflowsets 0.0.1</title><link>https://www.tidyverse.org/blog/2021/03/workflowsets-0-0-1/</link><pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/03/workflowsets-0-0-1/</guid><description>&lt;p>We&amp;rsquo;re well pleased to announce the first release of
&lt;a href="https://workflowsets.tidymodels.org" target="_blank" rel="noopener">workflowsets&lt;/a>. workflowsets creates a collection of model/preprocessor combinations at once. This enables users to quickly screen a wide variety of methodologies for their data sets.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;workflowsets&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this blog post, we&amp;rsquo;ll demonstrate the utility of the package using a dimensionality reduction example. A new version of the tidyposterior package is paired with workflowsets so we&amp;rsquo;ll show how they can work together.&lt;/p>
&lt;p>The examples below will use a few of the tidymodels packages. If these are unfamiliar, take a look at
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">&lt;code>tidymodels.org&lt;/code>&lt;/a> or the &lt;em>Tidy Models with R&lt;/em>
&lt;a href="https://www.tmwr.org" target="_blank" rel="noopener">website&lt;/a>. The latest version of &lt;em>Tidy Models with R&lt;/em> now contains an additional chapter about
&lt;a href="https://www.tmwr.org/workflow-sets.html" target="_blank" rel="noopener">workflow sets&lt;/a>.&lt;/p>
&lt;h2 id="a-dimensionality-reduction-example">A Dimensionality Reduction Example
&lt;a href="#a-dimensionality-reduction-example">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When a data set is very wide (i.e., many columns), a dimensionality reduction procedure may be able to represent the data with a smaller number of new, artificial variables. The most common method for dimensionality reduction is principal component analysis (PCA) but there are many others.
&lt;a href="https://bookdown.org/max/FES/numeric-many-to-many.html#linear-projection-methods" target="_blank" rel="noopener">Kuhn and Johnson (2018)&lt;/a> give an overview of several other techniques that will be used below.&lt;/p>
&lt;p>There are at least two practical uses of dimensionality reduction:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>When assessing the quality of the data, it can be difficult to visualize high-dimensional data. Reducing the number of columns to a more manageable set helps the user explore and understand the data, and perhaps identify problematic data points.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Some models are less effective with a large number of predictors (relative to the number of data points). This is especially true when the predictors have a high degree of correlation with one another (e.g., multicolinearity).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>As an example, the
&lt;a href="https://modeldata.tidymodels.org/reference/meats.html" target="_blank" rel="noopener">Tecator data&lt;/a> set uses spectrography to predict the percentage of fat, protein, and water in meat samples. They measured 100 channels of the spectum for 215 samples. The &lt;em>average&lt;/em> correlation between predictors is 98.6%. These data might greatly benefit from dimension reduction. We&amp;rsquo;ll evaluate a few different approaches to find a smaller representation of the predictors when the &lt;em>percentage of water&lt;/em> is being predicted.&lt;/p>
&lt;p>We&amp;rsquo;ll load the packages and data, then define a resampling scheme that is used to evaluate the models.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">workflowsets&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidyposterior&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meats&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Keep only the water outcome&lt;/span>
&lt;span class="n">meats&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meats&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">fat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">protein&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">initial_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meats&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_train&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">training&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_test&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vfold_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">repeats&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Workflow sets take a set of &lt;strong>preprocessors&lt;/strong> and &lt;strong>models&lt;/strong> and combinatorially combine them into a series of workflow objects. The package has some nice convenience functions to tune and/or evaluate each workflow.&lt;/p>
&lt;p>What is a &amp;ldquo;preprocessor&amp;rdquo;? That can be one of three things:&lt;/p>
&lt;ol>
&lt;li>A traditional R model formula.&lt;/li>
&lt;li>A recipe.&lt;/li>
&lt;li>A specification of column names (using
&lt;a href="https://workflows.tidymodels.org//reference/add_variables.html" target="_blank" rel="noopener">&lt;code>workflows::workflow_variables()&lt;/code>&lt;/a>).&lt;/li>
&lt;/ol>
&lt;p>As an example, we&amp;rsquo;ll create a set of recipes for dimension reduction for preprocessing the data along with a simple formula.&lt;/p>
&lt;p>The dimension reduction methods that we&amp;rsquo;ll try are a few different flavors of PCA, partial least squares (PLS), independent component analysis (ICA), and multi-dimensional scaling (MDS). With the exception of PLS, these are unsupervised procedures since they do not take into account the outcome data.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">water&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">meat_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_zv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_YeoJohnson&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">pca_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_pca&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">num_comp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">pca_kernel_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_kpca_rbf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">num_comp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">sigma&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">pls_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_pls&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">outcome&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">vars&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">water&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">num_comp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">ica_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_ica&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">num_comp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">mds_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_isomap&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">num_terms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">neighbors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that several methods have tuning parameters that need to be optimized. For our application, we&amp;rsquo;ll feed the new features into a model and use the root mean squared error (RMSE) as the metric to determine good values of these parameters.&lt;/p>
&lt;p>The input into a workflow set is a named list of preprocessors and parsnip model specifications. We&amp;rsquo;ll could the
&lt;a href="https://parsnip.tidymodels.org/reference/parsnip_addin.html" target="_blank" rel="noopener">parsnip RStudio add-in&lt;/a> to write out the model code. Linear regression and multivariate adaptive regression spline (MARS) models will be combined with the different preprocessors.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lm_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;lm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">mars_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">mars&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;earth&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, to make the workflow set, named lists are created and given as inputs into
&lt;a href="https://workflowsets.tidymodels.org/reference/workflow_set.html" target="_blank" rel="noopener">&lt;code>workflow_set()&lt;/code>&lt;/a>. Note that we added the original data as-is using a &amp;ldquo;plain&amp;rdquo; R formula.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">preprocessors&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">plain&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">water&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span>
&lt;span class="n">pca&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pca_recipe&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">pca_rbf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pca_kernel_recipe&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">pls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pls_recipe&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">ica&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ica_recipe&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">mds&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mds_recipe&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">models&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lm_spec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mars&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mars_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">workflow_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">preprocessors&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">models&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cross&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A workflow set/tibble: 12 x 4
## wflow_id info option result
## &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt;
## 1 plain_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 2 plain_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 3 pca_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 4 pca_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 5 pca_rbf_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 6 pca_rbf_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 7 pls_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 8 pls_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 9 ica_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 10 ica_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 11 mds_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 12 mds_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
&lt;/code>&lt;/pre>&lt;p>The 12 rows are the different combinations of preprocessors and models. As will be shown below, we can evaluate them via resampling using the
&lt;a href="https://workflowsets.tidymodels.org/reference/workflow_map.html" target="_blank" rel="noopener">&lt;code>workflow_map()&lt;/code>&lt;/a> function.&lt;/p>
&lt;p>However, a few of these recipes have tuning parameters that are somewhat difficult to optimize. We might want to have specific tuning parameter ranges for the kernel PCA and MDS recipes. We can accomplish that in the usual way (via &lt;code>parameters()&lt;/code> and &lt;code>update()&lt;/code>) then update the workflow set with these options so that they are used later.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mds_param&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">mds_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">parameters&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># Look at a larger neighbor size than the default range. &lt;/span>
&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">neighbors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">neighbors&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">70&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="n">rbf_param&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">pca_kernel_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">parameters&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># A smaller range than the default.&lt;/span>
&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sigma&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rbf_sigma&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">-5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The
&lt;a href="https://workflowsets.tidymodels.org/reference/option_add.html" target="_blank" rel="noopener">&lt;code>option_add()&lt;/code>&lt;/a> function can add these to the &lt;code>option&lt;/code> column in the workflow set for the appropriate workflows:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">meat_wflow_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">option_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rbf_param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;pca_rbf_lm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">option_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rbf_param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;pca_rbf_mars&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">option_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mds_param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;mds_lm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">option_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mds_param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;mds_mars&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A workflow set/tibble: 12 x 4
## wflow_id info option result
## &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt;
## 1 plain_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 2 plain_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 3 pca_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 4 pca_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 5 pca_rbf_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[1]&amp;gt; &amp;lt;list [0]&amp;gt;
## 6 pca_rbf_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[1]&amp;gt; &amp;lt;list [0]&amp;gt;
## 7 pls_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 8 pls_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 9 ica_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 10 ica_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 11 mds_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[1]&amp;gt; &amp;lt;list [0]&amp;gt;
## 12 mds_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[1]&amp;gt; &amp;lt;list [0]&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Note that some of the entries in the &lt;code>option&lt;/code> column have changed to &lt;code>&amp;lt;opts[1]&amp;gt;&lt;/code>.&lt;/p>
&lt;p>We can finally tune these models using &lt;code>workflow_map()&lt;/code>. By default, it uses a basic grid search but any evaluation function from the &lt;code>tune&lt;/code> and &lt;code>finetune&lt;/code> packages can be used. We&amp;rsquo;ll also pass more global options here for the resamples, grid points, and performance metric. The &lt;code>seed&lt;/code> option resets the random number seed for each pass through the workflow set so that the results are reproducible.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">meat_wflow_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">workflow_map&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="c1"># Options to `tune_grid()`&lt;/span>
&lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">meat_folds&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">metric_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rmse&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="c1"># Options to `workflow_map()`&lt;/span>
&lt;span class="n">seed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">verbose&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>i No tuning parameters. `fit_resamples()` will be attempted
i 1 of 12 resampling: plain_lm
✓ 1 of 12 resampling: plain_lm (2.3s)
i No tuning parameters. `fit_resamples()` will be attempted
i 2 of 12 resampling: plain_mars
✓ 2 of 12 resampling: plain_mars (2.6s)
i 3 of 12 tuning: pca_lm
✓ 3 of 12 tuning: pca_lm (8.1s)
i 4 of 12 tuning: pca_mars
✓ 4 of 12 tuning: pca_mars (8.4s)
i 5 of 12 tuning: pca_rbf_lm
✓ 5 of 12 tuning: pca_rbf_lm (36.9s)
i 6 of 12 tuning: pca_rbf_mars
✓ 6 of 12 tuning: pca_rbf_mars (34.1s)
i 7 of 12 tuning: pls_lm
✓ 7 of 12 tuning: pls_lm (8.6s)
i 8 of 12 tuning: pls_mars
✓ 8 of 12 tuning: pls_mars (8.6s)
i 9 of 12 tuning: ica_lm
✓ 9 of 12 tuning: ica_lm (8.4s)
i 10 of 12 tuning: ica_mars
✓ 10 of 12 tuning: ica_mars (8.4s)
i 11 of 12 tuning: mds_lm
✓ 11 of 12 tuning: mds_lm (39.3s)
i 12 of 12 tuning: mds_mars
✓ 12 of 12 tuning: mds_mars (40s)
&lt;/code>&lt;/pre>&lt;p>The &lt;code>result&lt;/code> column contains the results of &lt;code>tune_grid()&lt;/code> (or &lt;code>fit_resamples()&lt;/code> for the &amp;ldquo;plain&amp;rdquo; models).&lt;/p>
&lt;p>There are a few convenience functions for ranking the results. To get the rankings of the models (and their tuning parameter sub-models) as a data frame:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">rank_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_wflow_set&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># To fit on the page:&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">-.&lt;/span>&lt;span class="n">metric&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">std_err&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">relocate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rank&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 102 x 6
## rank mean wflow_id .config preprocessor model
## &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
## 1 1 2.48 plain_mars Preprocessor1_Model1 formula mars
## 2 2 2.68 pls_mars Preprocessor3_Model1 recipe mars
## 3 3 3.00 plain_lm Preprocessor1_Model1 formula linear_reg
## 4 4 3.07 ica_mars Preprocessor3_Model1 recipe mars
## 5 5 3.19 pca_mars Preprocessor3_Model1 recipe mars
## 6 6 3.31 pls_lm Preprocessor3_Model1 recipe linear_reg
## 7 7 3.49 ica_lm Preprocessor3_Model1 recipe linear_reg
## 8 8 3.49 pca_lm Preprocessor3_Model1 recipe linear_reg
## 9 9 3.72 pls_mars Preprocessor1_Model1 recipe mars
## 10 10 3.89 pls_lm Preprocessor1_Model1 recipe linear_reg
## # … with 92 more rows
&lt;/code>&lt;/pre>&lt;p>or as a plot:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_wflow_set&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/plot-rank-1.svg" title="plot of chunk plot-rank" alt="plot of chunk plot-rank" width="100%" />&lt;/p>
&lt;p>This shows the results for all tuning parameter combinations for each model. To get the best results &lt;em>per model&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_wflow_set&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">select_best&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/plot-best-rank-1.svg" title="plot of chunk plot-best-rank" alt="plot of chunk plot-best-rank" width="100%" />&lt;/p>
&lt;p>It seems like the MARS model is doing slightly better than ordinary linear regression. The original predictors do well in terms of the mean RMSE. However, the correlation between predictors can cause instability in the results and this is reflected in the larger error bars for those models; reducing the dimensions may still be a good idea.&lt;/p>
&lt;p>Once you decide on a model to keep, you can pull the workflow (or the tuning results) using
&lt;a href="https://workflowsets.tidymodels.org/reference/pull_workflow_set_result.html" target="_blank" rel="noopener">&lt;code>pull_workflow()&lt;/code>&lt;/a> (or &lt;code>pull_workflow_set_result()&lt;/code>). This can be
&lt;a href="https://www.tmwr.org/grid-search.html#finalizing-the-model" target="_blank" rel="noopener">finalized and fit on the training set as one normally would&lt;/a>.&lt;/p>
&lt;h2 id="contrasting-models-using-bayesian-analysis">Contrasting Models Using Bayesian Analysis
&lt;a href="#contrasting-models-using-bayesian-analysis">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Is there really a difference between the &lt;code>plain_mars&lt;/code> and &lt;code>pls_mars&lt;/code> models? The
&lt;a href="https://www.tmwr.org/compare.html" target="_blank" rel="noopener">tidyposterior package can help answer this question&lt;/a>. We can fit a meta-model for the RMSE results for the best configuration within each model using the &lt;code>perf_mod()&lt;/code> function:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rmse_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">perf_mod&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1"># Model different variability per workflow:&lt;/span>
&lt;span class="n">hetero_var&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1"># Options to `rstanarm::stan_glm()`&lt;/span>
&lt;span class="n">seed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">iter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">refresh&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>autoplot()&lt;/code> method for these results displays a &lt;strong>model-based&lt;/strong> version of the previous &lt;code>autoplot()&lt;/code> results for the workflow set:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rmse_mod&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/plot-bayes-1.svg" title="plot of chunk plot-bayes" alt="plot of chunk plot-bayes" width="100%" />&lt;/p>
&lt;p>The tidyposterior package uses the concept of &lt;em>practical significance&lt;/em>, incorporating an effect size that is important to the user. We usually set this value prior to the analysis (based on domain knowledge or subjective concerns), and it reflects the size of an RMSE change between models that is a realistic important difference. We can compute the probability that each model is &lt;em>practically significant&lt;/em> when compared to the numerically best model. Recalling that the outcome is in units of percent water, let&amp;rsquo;s use a 0.5% difference as an effect size:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rmse_mod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;ROPE&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/plot-rope-1.svg" title="plot of chunk plot-rope" alt="plot of chunk plot-rope" width="100%" />&lt;/p>
&lt;p>The top two models are pretty close to practically equivalent, while the others are less likely to be the same.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to the contributors to workflowsets:&lt;/p>
&lt;p>
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/hnagaty" target="_blank" rel="noopener">@hnagaty&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;p>as well as the latest release of tidyposterior:&lt;/p>
&lt;p>
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/robyjos" target="_blank" rel="noopener">@robyjos&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p></description></item><item><title>Catch up with tidymodels</title><link>https://www.tidyverse.org/blog/2021/03/tidymodels-2021-q1/</link><pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/03/tidymodels-2021-q1/</guid><description>&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles. There have been quite a number of updates and new developments in the tidymodels ecosystem since our
&lt;a href="https://www.tidyverse.org/blog/2020/12/finetune-0-0-1/" target="_blank" rel="noopener">last blog post in December&lt;/a>! Since that post, tidymodels maintainers have published eight CRAN releases of existing packages. You can install these updates from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;broom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;butcher&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;embed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;parsnip&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;rsample&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;rules&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;tune&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;workflows&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We purposefully write code in small, modular packages to make them easier to maintain (for us!) and use in production systems (for you!) but this does mean that sometimes any given package release can feel a bit minor. Some of the changes in these releases are small bug fixes or updates for changes in CRAN standards. However, there are also some substantively helpful new functions for modeling and resampling, and we want to make sure that folks can stay up-to-date with the changes and new features available.&lt;/p>
&lt;p>We plan to begin &lt;strong>regular updates&lt;/strong> every three or four months here on the tidyverse blog summarizing what&amp;rsquo;s happening lately in the tidymodels ecosystem overall. We&amp;rsquo;ll still continue the focused blog posts on more major new features that we&amp;rsquo;ve always written; look for one soon on a new package for creating and handling a collection of multiple modeling workflows all together. The &lt;code>NEWS&lt;/code> files are linked here for each package, but read below for more details on some highlights that may interest you!&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://broom.tidymodels.org/news/#broom-0-7-5-2021-02-19" target="_blank" rel="noopener">broom&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://butcher.tidymodels.org/news/#butcher-0-1-3-2021-03-04" target="_blank" rel="noopener">butcher&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://embed.tidymodels.org/news/#embed-0-1-4-2021-01-16" target="_blank" rel="noopener">embed&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://parsnip.tidymodels.org/news/#parsnip-0-1-5-2021-01-19" target="_blank" rel="noopener">parsnip&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://rsample.tidymodels.org/news/index.html#rsample-0-0-9-2021-02-17" target="_blank" rel="noopener">rsample&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://rules.tidymodels.org/news/#rules-0-1-1-2021-01-16" target="_blank" rel="noopener">rules&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tune.tidymodels.org/news/index.html#tune-0-1-3-2021-02-28" target="_blank" rel="noopener">tune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflows.tidymodels.org/news/index.html#workflows-0-2-2-2021-03-10" target="_blank" rel="noopener">workflows&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="choose-parsnip-models-with-an-rstudio-addin">Choose parsnip models with an RStudio addin
&lt;a href="#choose-parsnip-models-with-an-rstudio-addin">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The parsnip package provides support for a plethora of models. You can explore these models online at
&lt;a href="https://www.tidymodels.org/find/parsnip/" target="_blank" rel="noopener">tidymodels.org&lt;/a>, but the recent release of parsnip also contains an RStudio addin for choosing parsnip models and generating code to specify them.&lt;/p>
&lt;p>&lt;img src="parsnip_addin.gif" alt="addin gif">&lt;/p>
&lt;p>You can choose by classification or regression models, and even match by a regular expression.&lt;/p>
&lt;p>There is now also
&lt;a href="https://parsnip.tidymodels.org/reference/augment.html" target="_blank" rel="noopener">an &lt;code>augment()&lt;/code> function for parsnip models&lt;/a>, in addition to the &lt;code>augment()&lt;/code> functions
&lt;a href="https://tune.tidymodels.org/reference/augment.html" target="_blank" rel="noopener">for tuning results&lt;/a> and
&lt;a href="https://workflows.tidymodels.org/reference/augment.workflow.html" target="_blank" rel="noopener">for workflows&lt;/a>.
&lt;a href="https://juliasilge.com/blog/student-debt/" target="_blank" rel="noopener">This recent screencast demonstrates&lt;/a> how to use parsnip&amp;rsquo;s &lt;code>augment()&lt;/code> function.&lt;/p>
&lt;h2 id="new-functions-in-rsample">New functions in rsample
&lt;a href="#new-functions-in-rsample">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Most of the changes in the recent release for
&lt;a href="https://rsample.tidymodels.org/" target="_blank" rel="noopener">rsample&lt;/a> are internal and developer-facing, made to support rsample-adjacent packages like our new package for resampling spatial data (see below! 👀) but the new &lt;code>reg_intervals()&lt;/code> function allows you to find bootstrap confidence intervals for simple models fluently. You have always been able to use rsample functions for
&lt;a href="https://www.tidymodels.org/learn/statistics/bootstrap/" target="_blank" rel="noopener">flexible bootstrap resampling&lt;/a> but this new convenience function reduces the steps to get confidence intervals for models like &lt;code>lm()&lt;/code> and &lt;code>glm()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rsample&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ad_data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">reg_intervals&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">Class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">tau&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">VEGF&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">model_fn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;glm&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ad_data&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;binomial&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 2 x 6
## term .lower .estimate .upper .alpha .method
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;
## 1 tau -4.92 -4.11 -3.08 0.05 student-t
## 2 VEGF 0.651 0.959 1.22 0.05 student-t
&lt;/code>&lt;/pre>&lt;p>Check out
&lt;a href="https://juliasilge.com/blog/superbowl-conf-int/" target="_blank" rel="noopener">my recent screencast&lt;/a> for more details on using &lt;code>reg_intervals()&lt;/code>.&lt;/p>
&lt;p>Also take a look at the
&lt;a href="https://rsample.tidymodels.org/reference/permutations.html" target="_blank" rel="noopener">new &lt;code>permutations()&lt;/code> function&lt;/a> for permuting variables!&lt;/p>
&lt;h2 id="resampling-for-spatial-data">Resampling for spatial data
&lt;a href="#resampling-for-spatial-data">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We are pleased to announce the first release of the
&lt;a href="https://spatialsample.tidymodels.org/" target="_blank" rel="noopener">spatialsample&lt;/a> package.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;spatialsample&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The goal of spatialsample is to provide functions and classes for spatial resampling to use with
&lt;a href="https://rsample.tidymodels.org/" target="_blank" rel="noopener">rsample&lt;/a>. We intend to grow the number of spatial resampling approaches included in the package; the initial release includes &lt;code>spatial_clustering_cv()&lt;/code>, a straightforward spatial resampling strategy with light dependencies based on k-means clustering.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">spatialsample&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ames&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">234&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">spatial_clustering_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">coords&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Latitude&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Longitude&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">v&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">folds&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # 5-fold spatial cross-validation
## # A tibble: 5 x 2
## splits id
## &amp;lt;list&amp;gt; &amp;lt;chr&amp;gt;
## 1 &amp;lt;split [2277/653]&amp;gt; Fold1
## 2 &amp;lt;split [2767/163]&amp;gt; Fold2
## 3 &amp;lt;split [2040/890]&amp;gt; Fold3
## 4 &amp;lt;split [2567/363]&amp;gt; Fold4
## 5 &amp;lt;split [2069/861]&amp;gt; Fold5
&lt;/code>&lt;/pre>&lt;p>In this example, the &lt;code>ames&lt;/code> data on houses in Ames, IA is resampled with &lt;code>v = 5&lt;/code>; notice that the resulting partitions do not contain an equal number of observations.&lt;/p>
&lt;p>We can create a helper plotting function to visualize the five folds.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ggplot2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">purrr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">plot_splits&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">p&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">analysis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">analysis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Analysis&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">bind_rows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">assessment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">analysis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Assessment&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Longitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Latitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">analysis&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">labs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nf">walk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">folds&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">splits&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">plot_splits&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/unnamed-chunk-5-.gif" alt="plot of chunk unnamed-chunk-5">&lt;/p>
&lt;p>Check out the
&lt;a href="https://spatialsample.tidymodels.org/articles/spatialsample.html" target="_blank" rel="noopener">main vignette&lt;/a> to see how this resampling strategy can be used for modeling, and
&lt;a href="https://github.com/tidymodels/spatialsample/issues" target="_blank" rel="noopener">submit an issue&lt;/a> if there is a particular spatial resampling approach that you are interested in us prioritizing for future releases.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all of the contributors who helped make these releases possible! For some of these packages (like rsample, butcher, and embed), we have never said thank you before so we&amp;rsquo;ll take this opportunity to express our appreciation.&lt;/p>
&lt;ul>
&lt;li>broom:
&lt;a href="https://github.com/AdroMine" target="_blank" rel="noopener">@AdroMine&lt;/a>,
&lt;a href="https://github.com/alexpghayes" target="_blank" rel="noopener">@alexpghayes&lt;/a>,
&lt;a href="https://github.com/Amogh-Joshi" target="_blank" rel="noopener">@Amogh-Joshi&lt;/a>,
&lt;a href="https://github.com/anddis" target="_blank" rel="noopener">@anddis&lt;/a>,
&lt;a href="https://github.com/andrjohns" target="_blank" rel="noopener">@andrjohns&lt;/a>,
&lt;a href="https://github.com/AntoniosBarotsis" target="_blank" rel="noopener">@AntoniosBarotsis&lt;/a>,
&lt;a href="https://github.com/arthur-e" target="_blank" rel="noopener">@arthur-e&lt;/a>,
&lt;a href="https://github.com/asreece" target="_blank" rel="noopener">@asreece&lt;/a>,
&lt;a href="https://github.com/asshah4" target="_blank" rel="noopener">@asshah4&lt;/a>,
&lt;a href="https://github.com/briatte" target="_blank" rel="noopener">@briatte&lt;/a>,
&lt;a href="https://github.com/bwiernik" target="_blank" rel="noopener">@bwiernik&lt;/a>,
&lt;a href="https://github.com/cbhurley" target="_blank" rel="noopener">@cbhurley&lt;/a>,
&lt;a href="https://github.com/clausherther" target="_blank" rel="noopener">@clausherther&lt;/a>,
&lt;a href="https://github.com/clauswilke" target="_blank" rel="noopener">@clauswilke&lt;/a>,
&lt;a href="https://github.com/crsh" target="_blank" rel="noopener">@crsh&lt;/a>,
&lt;a href="https://github.com/DarwinAwardWinner" target="_blank" rel="noopener">@DarwinAwardWinner&lt;/a>,
&lt;a href="https://github.com/deblnia" target="_blank" rel="noopener">@deblnia&lt;/a>,
&lt;a href="https://github.com/deschen1" target="_blank" rel="noopener">@deschen1&lt;/a>,
&lt;a href="https://github.com/eheinzen" target="_blank" rel="noopener">@eheinzen&lt;/a>,
&lt;a href="https://github.com/friendly" target="_blank" rel="noopener">@friendly&lt;/a>,
&lt;a href="https://github.com/grantmcdermott" target="_blank" rel="noopener">@grantmcdermott&lt;/a>,
&lt;a href="https://github.com/hasandiwan" target="_blank" rel="noopener">@hasandiwan&lt;/a>,
&lt;a href="https://github.com/hd-barros" target="_blank" rel="noopener">@hd-barros&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/irkaal" target="_blank" rel="noopener">@irkaal&lt;/a>,
&lt;a href="https://github.com/jiho" target="_blank" rel="noopener">@jiho&lt;/a>,
&lt;a href="https://github.com/jmbarbone" target="_blank" rel="noopener">@jmbarbone&lt;/a>,
&lt;a href="https://github.com/joshyam-k" target="_blank" rel="noopener">@joshyam-k&lt;/a>,
&lt;a href="https://github.com/JReising09" target="_blank" rel="noopener">@JReising09&lt;/a>,
&lt;a href="https://github.com/julian-urbano" target="_blank" rel="noopener">@julian-urbano&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/kjfarley" target="_blank" rel="noopener">@kjfarley&lt;/a>,
&lt;a href="https://github.com/kristyrobledo" target="_blank" rel="noopener">@kristyrobledo&lt;/a>,
&lt;a href="https://github.com/leeweizhe1993" target="_blank" rel="noopener">@leeweizhe1993&lt;/a>,
&lt;a href="https://github.com/leungi" target="_blank" rel="noopener">@leungi&lt;/a>,
&lt;a href="https://github.com/LukasWallrich" target="_blank" rel="noopener">@LukasWallrich&lt;/a>,
&lt;a href="https://github.com/matthieu-faron" target="_blank" rel="noopener">@matthieu-faron&lt;/a>,
&lt;a href="https://github.com/MatthieuStigler" target="_blank" rel="noopener">@MatthieuStigler&lt;/a>,
&lt;a href="https://github.com/milanwiedemann" target="_blank" rel="noopener">@milanwiedemann&lt;/a>,
&lt;a href="https://github.com/mk9y" target="_blank" rel="noopener">@mk9y&lt;/a>,
&lt;a href="https://github.com/mlatif71" target="_blank" rel="noopener">@mlatif71&lt;/a>,
&lt;a href="https://github.com/mlaviolet" target="_blank" rel="noopener">@mlaviolet&lt;/a>,
&lt;a href="https://github.com/Nateme16" target="_blank" rel="noopener">@Nateme16&lt;/a>,
&lt;a href="https://github.com/nlubock" target="_blank" rel="noopener">@nlubock&lt;/a>,
&lt;a href="https://github.com/pachamaltese" target="_blank" rel="noopener">@pachamaltese&lt;/a>,
&lt;a href="https://github.com/rudeboybert" target="_blank" rel="noopener">@rudeboybert&lt;/a>,
&lt;a href="https://github.com/saadaslam" target="_blank" rel="noopener">@saadaslam&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/tavareshugo" target="_blank" rel="noopener">@tavareshugo&lt;/a>,
&lt;a href="https://github.com/uqzwang" target="_blank" rel="noopener">@uqzwang&lt;/a>,
&lt;a href="https://github.com/vincentarelbundock" target="_blank" rel="noopener">@vincentarelbundock&lt;/a>,
&lt;a href="https://github.com/WillemVervoort" target="_blank" rel="noopener">@WillemVervoort&lt;/a>, and
&lt;a href="https://github.com/zief0002" target="_blank" rel="noopener">@zief0002&lt;/a>&lt;/li>
&lt;li>butcher:
&lt;a href="https://github.com/abichat" target="_blank" rel="noopener">@abichat&lt;/a>,
&lt;a href="https://github.com/adtserapio" target="_blank" rel="noopener">@adtserapio&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/edwinschut" target="_blank" rel="noopener">@edwinschut&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/irkaal" target="_blank" rel="noopener">@irkaal&lt;/a>,
&lt;a href="https://github.com/jarauh" target="_blank" rel="noopener">@jarauh&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/jyuu" target="_blank" rel="noopener">@jyuu&lt;/a>,
&lt;a href="https://github.com/kevinykuo" target="_blank" rel="noopener">@kevinykuo&lt;/a>,
&lt;a href="https://github.com/klin333" target="_blank" rel="noopener">@klin333&lt;/a>,
&lt;a href="https://github.com/mkearney" target="_blank" rel="noopener">@mkearney&lt;/a>,
&lt;a href="https://github.com/natejessee" target="_blank" rel="noopener">@natejessee&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/UnclAlDeveloper" target="_blank" rel="noopener">@UnclAlDeveloper&lt;/a>&lt;/li>
&lt;li>embed:
&lt;a href="https://github.com/agilebean" target="_blank" rel="noopener">@agilebean&lt;/a>,
&lt;a href="https://github.com/ajing" target="_blank" rel="noopener">@ajing&lt;/a>,
&lt;a href="https://github.com/Athospd" target="_blank" rel="noopener">@Athospd&lt;/a>,
&lt;a href="https://github.com/Cardosaum" target="_blank" rel="noopener">@Cardosaum&lt;/a>,
&lt;a href="https://github.com/ciberger" target="_blank" rel="noopener">@ciberger&lt;/a>,
&lt;a href="https://github.com/data-datum" target="_blank" rel="noopener">@data-datum&lt;/a>,
&lt;a href="https://github.com/dfalbel" target="_blank" rel="noopener">@dfalbel&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/goleng" target="_blank" rel="noopener">@goleng&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/ismailmuller" target="_blank" rel="noopener">@ismailmuller&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/konradsemsch" target="_blank" rel="noopener">@konradsemsch&lt;/a>,
&lt;a href="https://github.com/kylegilde" target="_blank" rel="noopener">@kylegilde&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/mlduarte" target="_blank" rel="noopener">@mlduarte&lt;/a>,
&lt;a href="https://github.com/nhward" target="_blank" rel="noopener">@nhward&lt;/a>,
&lt;a href="https://github.com/niszet" target="_blank" rel="noopener">@niszet&lt;/a>,
&lt;a href="https://github.com/quantumlinguist" target="_blank" rel="noopener">@quantumlinguist&lt;/a>,
&lt;a href="https://github.com/smingerson" target="_blank" rel="noopener">@smingerson&lt;/a>,
&lt;a href="https://github.com/tmastny" target="_blank" rel="noopener">@tmastny&lt;/a>,
&lt;a href="https://github.com/tonigril" target="_blank" rel="noopener">@tonigril&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/li>
&lt;li>parsnip:
&lt;a href="https://github.com/awunderground" target="_blank" rel="noopener">@awunderground&lt;/a>,
&lt;a href="https://github.com/Bijaelo" target="_blank" rel="noopener">@Bijaelo&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/derek-corcoran-barrios" target="_blank" rel="noopener">@derek-corcoran-barrios&lt;/a>,
&lt;a href="https://github.com/eamoncaddigan" target="_blank" rel="noopener">@eamoncaddigan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/ericpgreen" target="_blank" rel="noopener">@ericpgreen&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/irkaal" target="_blank" rel="noopener">@irkaal&lt;/a>,
&lt;a href="https://github.com/jjcurtin" target="_blank" rel="noopener">@jjcurtin&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/kwiscion" target="_blank" rel="noopener">@kwiscion&lt;/a>,
&lt;a href="https://github.com/kylegilde" target="_blank" rel="noopener">@kylegilde&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/markfairbanks" target="_blank" rel="noopener">@markfairbanks&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>,
&lt;a href="https://github.com/mlane3" target="_blank" rel="noopener">@mlane3&lt;/a>,
&lt;a href="https://github.com/mrepetto94" target="_blank" rel="noopener">@mrepetto94&lt;/a>,
&lt;a href="https://github.com/ndiquattro" target="_blank" rel="noopener">@ndiquattro&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/shosaco" target="_blank" rel="noopener">@shosaco&lt;/a>,
&lt;a href="https://github.com/smingerson" target="_blank" rel="noopener">@smingerson&lt;/a>,
&lt;a href="https://github.com/tanho63" target="_blank" rel="noopener">@tanho63&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/li>
&lt;li>rsample:
&lt;a href="https://github.com/alexpghayes" target="_blank" rel="noopener">@alexpghayes&lt;/a>,
&lt;a href="https://github.com/apreshill" target="_blank" rel="noopener">@apreshill&lt;/a>,
&lt;a href="https://github.com/Athospd" target="_blank" rel="noopener">@Athospd&lt;/a>,
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/ColinConwell" target="_blank" rel="noopener">@ColinConwell&lt;/a>,
&lt;a href="https://github.com/cportner" target="_blank" rel="noopener">@cportner&lt;/a>,
&lt;a href="https://github.com/danilinares" target="_blank" rel="noopener">@danilinares&lt;/a>,
&lt;a href="https://github.com/DanOvando" target="_blank" rel="noopener">@DanOvando&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dchiu911" target="_blank" rel="noopener">@dchiu911&lt;/a>,
&lt;a href="https://github.com/Dpananos" target="_blank" rel="noopener">@Dpananos&lt;/a>,
&lt;a href="https://github.com/dpastling" target="_blank" rel="noopener">@dpastling&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/fbchow" target="_blank" rel="noopener">@fbchow&lt;/a>,
&lt;a href="https://github.com/fusaroli" target="_blank" rel="noopener">@fusaroli&lt;/a>,
&lt;a href="https://github.com/gcameron89777" target="_blank" rel="noopener">@gcameron89777&lt;/a>,
&lt;a href="https://github.com/gregrs-uk" target="_blank" rel="noopener">@gregrs-uk&lt;/a>,
&lt;a href="https://github.com/gtalckmin" target="_blank" rel="noopener">@gtalckmin&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/hlynurhallgrims" target="_blank" rel="noopener">@hlynurhallgrims&lt;/a>,
&lt;a href="https://github.com/irkaal" target="_blank" rel="noopener">@irkaal&lt;/a>,
&lt;a href="https://github.com/issactoast" target="_blank" rel="noopener">@issactoast&lt;/a>,
&lt;a href="https://github.com/JamesM131" target="_blank" rel="noopener">@JamesM131&lt;/a>,
&lt;a href="https://github.com/johnaeanderson" target="_blank" rel="noopener">@johnaeanderson&lt;/a>,
&lt;a href="https://github.com/jonkeane" target="_blank" rel="noopener">@jonkeane&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/jyuu" target="_blank" rel="noopener">@jyuu&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/kylegilde" target="_blank" rel="noopener">@kylegilde&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>,
&lt;a href="https://github.com/msmith01" target="_blank" rel="noopener">@msmith01&lt;/a>,
&lt;a href="https://github.com/MxNl" target="_blank" rel="noopener">@MxNl&lt;/a>,
&lt;a href="https://github.com/NikolaiVogl" target="_blank" rel="noopener">@NikolaiVogl&lt;/a>,
&lt;a href="https://github.com/oude-gao" target="_blank" rel="noopener">@oude-gao&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>,
&lt;a href="https://github.com/RMHogervorst" target="_blank" rel="noopener">@RMHogervorst&lt;/a>,
&lt;a href="https://github.com/sccmckenzie" target="_blank" rel="noopener">@sccmckenzie&lt;/a>,
&lt;a href="https://github.com/Shu-Wan" target="_blank" rel="noopener">@Shu-Wan&lt;/a>,
&lt;a href="https://github.com/skeller88" target="_blank" rel="noopener">@skeller88&lt;/a>,
&lt;a href="https://github.com/skinnider" target="_blank" rel="noopener">@skinnider&lt;/a>,
&lt;a href="https://github.com/sschooler" target="_blank" rel="noopener">@sschooler&lt;/a>,
&lt;a href="https://github.com/swt30" target="_blank" rel="noopener">@swt30&lt;/a>,
&lt;a href="https://github.com/tjmahr" target="_blank" rel="noopener">@tjmahr&lt;/a>,
&lt;a href="https://github.com/tmastny" target="_blank" rel="noopener">@tmastny&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/UnclAlDeveloper" target="_blank" rel="noopener">@UnclAlDeveloper&lt;/a>&lt;/li>
&lt;li>rules:
&lt;a href="https://github.com/frequena" target="_blank" rel="noopener">@frequena&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/irkaal" target="_blank" rel="noopener">@irkaal&lt;/a>,
&lt;a href="https://github.com/jaredlander" target="_blank" rel="noopener">@jaredlander&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/vidarsumo" target="_blank" rel="noopener">@vidarsumo&lt;/a>&lt;/li>
&lt;li>tune:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">@HenrikBengtsson&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/kevin-m-kent" target="_blank" rel="noopener">@kevin-m-kent&lt;/a>,
&lt;a href="https://github.com/kylegilde" target="_blank" rel="noopener">@kylegilde&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/siegfried" target="_blank" rel="noopener">@siegfried&lt;/a>,
&lt;a href="https://github.com/stevenpawley" target="_blank" rel="noopener">@stevenpawley&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>corrr 0.4.3</title><link>https://www.tidyverse.org/blog/2020/12/corrr-0-4-3/</link><pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/12/corrr-0-4-3/</guid><description>&lt;!--
TODO:
* [ ] Pick category and tags (see existing with `post_tags()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnail()`
* [ ] Add intro sentence
* [ ] `use_tidy_thanks()`
-->
&lt;p>We&amp;rsquo;re thrilled to announce the release of
&lt;a href="https://corrr.tidymodels.org/" target="_blank" rel="noopener">corrr&lt;/a> 0.4.3. corrr is for exploring correlations in R. It focuses on creating and working with data frames of correlations (instead of matrices) that can be easily explored via corrr functions or by leveraging tools like those in the tidyverse.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;corrr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This blog post will describe changes in the new version. You can see a full list of changes in the
&lt;a href="https://corrr.tidymodels.org/news/index.html" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">corrr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">warn.conflicts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="changes">Changes
&lt;a href="#changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This version of corrr has a few changes in the behavior of user-facing functions as well as the introduction of a new user-facing function.&lt;/p>
&lt;p>There are also some internal changes that make package functions more robust. These changes don&amp;rsquo;t affect how you use the package but address some edge cases where previous versions were failing inappropriately.&lt;/p>
&lt;p>New features of note are:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>The first column of a &lt;code>cor_df&lt;/code> object is now named &amp;ldquo;term&amp;rdquo;. Previously it was named &amp;ldquo;rowname&amp;rdquo;. The name &amp;ldquo;term&amp;rdquo; is consistent with the output of &lt;code>broom::tidy()&lt;/code>. &lt;strong>This is a breaking change&lt;/strong>: code written to make use of the column name &amp;ldquo;rowname&amp;rdquo; will have to be amended.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>An &lt;code>.order&lt;/code> argument has been added to &lt;code>rplot()&lt;/code> to allow users to choose the ordering of variables along the axes in the output plot. The default is that the output plots retain the variable ordering in the input &lt;code>cor_df&lt;/code> object. Setting &lt;code>.order&lt;/code> to &amp;ldquo;alphabet&amp;rdquo; orders the variables in alphabetical order in the plots.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A new function, &lt;code>colpair_map()&lt;/code>, allows for column comparisons using the values returned by an arbitrary function. &lt;code>colpair_map()&lt;/code> is discussed in detail below.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="new-column-name-in-cor_df-objects">New column name in &lt;code>cor_df&lt;/code> objects
&lt;a href="#new-column-name-in-cor_df-objects">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>We can create a &lt;code>cor_df&lt;/code> object containing the pairwise correlations between a few numerical columns of the &lt;code>palmerpenguins::penguins&lt;/code> data set to see that the first column is now named &amp;ldquo;term&amp;rdquo;:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">palmerpenguins&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">penguins_cor&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">penguins&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bill_length_mm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bill_depth_mm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">flipper_length_mm&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">correlate&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">penguins_cor&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 3 x 4
## term bill_length_mm bill_depth_mm flipper_length_mm
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 bill_length_mm NA -0.235 0.656
## 2 bill_depth_mm -0.235 NA -0.584
## 3 flipper_length_mm 0.656 -0.584 NA
&lt;/code>&lt;/pre>
&lt;h3 id="ordering-variables-in-rplot-output">Ordering variables in &lt;code>rplot()&lt;/code> output
&lt;a href="#ordering-variables-in-rplot-output">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Previously, the default behavior of &lt;code>rplot()&lt;/code> was that the variables were displayed in alphabetical order in the output. This was an artifact of using &lt;code>ggplot2&lt;/code> and inheriting its behavior. The new default is to retain the ordering of variables in the input data:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">rplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">penguins_cor&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/unnamed-chunk-3-1.png" alt="plot of chunk unnamed-chunk-3">&lt;/p>
&lt;p>If alphabetical ordering is desired, set &lt;code>.order&lt;/code> to &amp;ldquo;alphabet&amp;rdquo;:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">rplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">penguins_cor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.order&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;alphabet&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/unnamed-chunk-4-1.png" alt="plot of chunk unnamed-chunk-4">&lt;/p>
&lt;h2 id="colpair_map">&lt;code>colpair_map()&lt;/code>
&lt;a href="#colpair_map">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Doing analysis with corrr has always been about correlations, usually starting with a call to &lt;code>correlate()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mini_mtcars&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">mtcars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cyl&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">disp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">correlate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mini_mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>##
## Correlation method: 'pearson'
## Missing treated using: 'pairwise.complete.obs'
&lt;/code>&lt;/pre>&lt;pre>&lt;code>## # A tibble: 3 x 4
## term mpg cyl disp
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 mpg NA -0.852 -0.848
## 2 cyl -0.852 NA 0.902
## 3 disp -0.848 0.902 NA
&lt;/code>&lt;/pre>&lt;p>The result is a data frame where each of the columns in the original data are compared on the basis of their correlation coefficients. But the correlation coefficient is just one possible statistic that can be used for comparing columns with one another. Correlations are also limited in their usefulness as they are only applicable to pairs of numeric columns.&lt;/p>
&lt;p>This version of corrr introduces &lt;code>colpair_map()&lt;/code>, which allows you to apply your own choice of function across the columns of your data. Just like with &lt;code>correlate()&lt;/code>, &lt;code>colpair_map()&lt;/code> takes a data frame as its first argument, while the second argument is for the function you wish to apply.&lt;/p>
&lt;p>Let&amp;rsquo;s demonstrate using the &lt;code>mini_mtcars&lt;/code> data frame we just created. Lets say we are interested in covariance values rather than correlations. These can be found by passing in &lt;code>cov()&lt;/code> from the stats package:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">cov_df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">colpair_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mini_mtcars&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">stats&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cov&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">cov_df&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 3 x 4
## term mpg cyl disp
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 mpg NA -9.17 -633.
## 2 cyl -9.17 NA 200.
## 3 disp -633. 200. NA
&lt;/code>&lt;/pre>&lt;p>The resulting data frame behaves just like one returned by &lt;code>correlate()&lt;/code>, except that it is populated with covariance values rather than correlations. This means we still have access to all corrr&amp;rsquo;s other tooling when working with it. We can still use &lt;code>shave()&lt;/code> for example to remove duplication, which will set the upper triangle of values to &lt;code>NA&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">cov_df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">shave&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 3 x 4
## term mpg cyl disp
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 mpg NA NA NA
## 2 cyl -9.17 NA NA
## 3 disp -633. 200. NA
&lt;/code>&lt;/pre>&lt;p>Similarly, we can still use &lt;code>stretch()&lt;/code> to get the resulting data frame into a longer format:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">cov_df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">stretch&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 9 x 3
## x y r
## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
## 1 mpg mpg NA
## 2 mpg cyl -9.17
## 3 mpg disp -633.
## 4 cyl mpg -9.17
## 5 cyl cyl NA
## 6 cyl disp 200.
## 7 disp mpg -633.
## 8 disp cyl 200.
## 9 disp disp NA
&lt;/code>&lt;/pre>&lt;p>The first part of the name (&amp;ldquo;colpair_&amp;quot;) comes from the fact that we are comparing pairs of columns. The second part of the name (&amp;quot;_map&amp;rdquo;) is designed to evoke the same ideas as in purrr&amp;rsquo;s family of &lt;code>map_*&lt;/code> functions. These iterate over a set of elements and apply a function to each of them. In this case, &lt;code>colpair_map()&lt;/code> is iterating over each possible pair of columns and applying a function to each pairing.&lt;/p>
&lt;p>As such, any function passed to &lt;code>colpair_map()&lt;/code> must accept a vector for both its first and second arguments. To illustrate, let&amp;rsquo;s say we wanted to run a series t-tests to see which of our variables are significantly related to one another. We can write a function to do so as follows:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">calc_ttest_p_value&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vec_a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vec_b&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="nf">t.test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vec_a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vec_b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">p.value&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The function returns the t-test&amp;rsquo;s p-value. The two arguments to the function are the two vectors being compared. Let&amp;rsquo;s first run the function on each pair of columns individually.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">calc_ttest_p_value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mini_mtcars[&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;mpg&amp;#34;&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mini_mtcars[&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;cyl&amp;#34;&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## [1] 9.507708e-15
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">calc_ttest_p_value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mini_mtcars[&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;mpg&amp;#34;&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mini_mtcars[&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;disp&amp;#34;&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## [1] 7.978234e-11
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">calc_ttest_p_value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mini_mtcars[&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;cyl&amp;#34;&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mini_mtcars[&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;disp&amp;#34;&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## [1] 1.774454e-11
&lt;/code>&lt;/pre>&lt;p>As you can see, this is tedious and involves a lot of repeated code. But &lt;code>colpair_map()&lt;/code> lets us do this for all column pairings at once and the output makes the results easy to read.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">colpair_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mini_mtcars&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">calc_ttest_p_value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 3 x 4
## term mpg cyl disp
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 mpg NA 9.51e-15 7.98e-11
## 2 cyl 9.51e-15 NA 1.77e-11
## 3 disp 7.98e-11 1.77e-11 NA
&lt;/code>&lt;/pre>&lt;p>Having the ability to use arbitrary functions like this opens up intriguing possibilities for analyzing data. One limitation of using only correlations is they will only work for continuous variables. With &lt;code>colpair_map()&lt;/code>, we have a way of comparing categorical columns with one another. Let&amp;rsquo;s try this with a few categorical columns from dplyr&amp;rsquo;s dataset of Star Wars characters.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mini_star_wars&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hair_color&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">eye_color&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">skin_color&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">head&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mini_star_wars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 6 x 3
## hair_color eye_color skin_color
## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
## 1 blond blue fair
## 2 &amp;lt;NA&amp;gt; yellow gold
## 3 &amp;lt;NA&amp;gt; red white, blue
## 4 none yellow white
## 5 brown brown light
## 6 brown, grey blue light
&lt;/code>&lt;/pre>&lt;p>There are a few different ways of finding the strength of the relationship
between two categorical variables. One useful measure is called Cramer&amp;rsquo;s V,
which takes on values between 0 and 1 depending on how closely associated the
variables are. The rcompanion package provides an implementation of Cramer&amp;rsquo;s V
which we can make use of.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rcompanion&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">colpair_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mini_star_wars&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cramerV&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 3 x 4
## term hair_color eye_color skin_color
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 hair_color NA 0.449 0.510
## 2 eye_color 0.449 NA 0.691
## 3 skin_color 0.510 0.691 NA
&lt;/code>&lt;/pre>&lt;p>&lt;code>colpair_map()&lt;/code> will allow you pass additional arguments to the called function via the dots (&lt;code>...&lt;/code>). For example, the &lt;code>cramerV()&lt;/code> function will allow you to specify the number of decimal places to round the results using &lt;code>digits&lt;/code>. Let&amp;rsquo;s instead pass in this option via the dots:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">colpair_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mini_star_wars&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cramerV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 3 x 4
## term hair_color eye_color skin_color
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 hair_color NA 0.4 0.5
## 2 eye_color 0.4 NA 0.7
## 3 skin_color 0.5 0.7 NA
&lt;/code>&lt;/pre>&lt;p>We are excited to see the different ways &lt;code>colpair_map()&lt;/code> gets used by the R community. We are hopeful that it will open up new and exciting ways of conducting data analysis.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank everyone who contributed to the package or filed an issue since the last release:
&lt;a href="https://github.com/Aariq" target="_blank" rel="noopener">@Aariq&lt;/a>,
&lt;a href="https://github.com/antoine-sachet" target="_blank" rel="noopener">@antoine-sachet&lt;/a>,
&lt;a href="https://github.com/bjornerstedt" target="_blank" rel="noopener">@bjornerstedt&lt;/a>,
&lt;a href="https://github.com/jameslairdsmith" target="_blank" rel="noopener">@jameslairdsmith&lt;/a>,
&lt;a href="https://github.com/jamesMo84" target="_blank" rel="noopener">@jamesMo84&lt;/a>,
&lt;a href="https://github.com/juliangkr" target="_blank" rel="noopener">@juliangkr&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mwilson19" target="_blank" rel="noopener">@mwilson19&lt;/a>,
&lt;a href="https://github.com/norhther" target="_blank" rel="noopener">@norhther&lt;/a>,
&lt;a href="https://github.com/thisisdaryn" target="_blank" rel="noopener">@thisisdaryn&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p></description></item><item><title>finetune 0.0.1</title><link>https://www.tidyverse.org/blog/2020/12/finetune-0-0-1/</link><pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/12/finetune-0-0-1/</guid><description>&lt;!--
TODO:
* [ ] Pick category and tags (see existing with `post_tags()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnail()`
* [ ] Add intro sentence
* [ ] `use_tidy_thanks()`
-->
&lt;p>We&amp;rsquo;re thrilled to announce the first release of the
&lt;a href="https://finetune.tidymodels.org/" target="_blank" rel="noopener">finetune&lt;/a> package. finetune adds two additional approaches for model tuning.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;finetune&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This blog post will describe the two new tools in the package.&lt;/p>
&lt;h2 id="racing">Racing
&lt;a href="#racing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Tuning parameters are unknown quantities of a model that cannot be directly estimated from the data. The number of neighbors in a K nearest neighbor model is a good example.&lt;/p>
&lt;p>Grid search is a common method to find good values for model tuning parameters. A pre-defined set of parameters are created and often resampled so that good estimates of model performance are available. The user then choses a tuning parameter value that has acceptable results.&lt;/p>
&lt;p>The problem with this approach is that it requires all of the results to be able to make a decision. For example, if we evaluate 50 tuning parameter values on 10 resamples, 500 model fits are evaluated before any analysis of the results takes place.&lt;/p>
&lt;p>Racing methods, devised by
&lt;a href="https://scholar.google.com/scholar?hl=en&amp;amp;as_sdt=0%2C7&amp;amp;q=Hoeffding&amp;#43;races%3A&amp;#43;Accelerating&amp;#43;model&amp;#43;selection&amp;#43;search&amp;#43;for&amp;#43;classification&amp;#43;and&amp;#43;function&amp;#43;approximation&amp;amp;btnG=" target="_blank" rel="noopener">Maron and Moore (1994)&lt;/a>, enables a sequential type of grid search. All model parameters are evaluated on a few resamples. Racing methods analyze the initial results to determine if any of the tuning parameters are unacceptable enough to discard. If the analysis discards any parameters, they are not resampled further. This process can considerably reduce the total number of model evaluations. finetune has functions &lt;code>tune_race_anova()&lt;/code> and &lt;code>tune_race_win_loss()&lt;/code> for this purpose (with syntax similar to &lt;code>tune_grid()&lt;/code>). Their analysis details are described in
&lt;a href="https://arxiv.org/abs/1405.6974" target="_blank" rel="noopener">Kuhn (2014)&lt;/a>.&lt;/p>
&lt;p>As an example, we&amp;rsquo;ll tune a K nearest neighbor (KNN) model on the sonar data. The grid will consist of 20 tuning parameters values in conjunction with 25 bootstrap resamples.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">finetune&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mlbench&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sonar&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># create resamples&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">resamp&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">bootstraps&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sonar&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># create a model specification&lt;/span>
&lt;span class="n">model&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">nearest_neighbor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">neighbors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">weight_func&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">dist_power&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;kknn&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;classification&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># center and scale the data using a recipe&lt;/span>
&lt;span class="n">norm_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Sonar&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">ctrl&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">control_race&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">verbose_elim&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">101&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sonar_race&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">tune_race_anova&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">norm_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">resamp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">control&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctrl&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## ℹ Racing will maximize the roc_auc metric.
## ℹ Resamples are analyzed in a random order.
## ℹ Bootstrap23: 9 eliminated; 11 candidates remain.
## ℹ Bootstrap18: 4 eliminated; 7 candidates remain.
## ℹ Bootstrap05: 1 eliminated; 6 candidates remain.
## ℹ Bootstrap06: 0 eliminated; 6 candidates remain.
## ℹ Bootstrap08: 1 eliminated; 5 candidates remain.
## ℹ Bootstrap01: 0 eliminated; 5 candidates remain.
## ℹ Bootstrap19: 0 eliminated; 5 candidates remain.
## ℹ Bootstrap15: 0 eliminated; 5 candidates remain.
## ℹ Bootstrap10: 0 eliminated; 5 candidates remain.
## ℹ Bootstrap07: 0 eliminated; 5 candidates remain.
## ℹ Bootstrap16: 2 eliminated; 3 candidates remain.
## ℹ Bootstrap09: 0 eliminated; 3 candidates remain.
## ℹ Bootstrap04: 0 eliminated; 3 candidates remain.
## ℹ Bootstrap24: 0 eliminated; 3 candidates remain.
## ℹ Bootstrap21: 0 eliminated; 3 candidates remain.
## ℹ Bootstrap12: 0 eliminated; 3 candidates remain.
## ℹ Bootstrap03: 0 eliminated; 3 candidates remain.
## ℹ Bootstrap13: 0 eliminated; 3 candidates remain.
## ℹ Bootstrap17: 0 eliminated; 3 candidates remain.
## ℹ Bootstrap11: 0 eliminated; 3 candidates remain.
## ℹ Bootstrap25: 0 eliminated; 3 candidates remain.
## ℹ Bootstrap14: 0 eliminated; 3 candidates remain.
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">show_best&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sonar_race&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;roc_auc&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 3 x 9
## neighbors weight_func dist_power .metric .estimator mean n std_err
## &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1 14 triweight 0.902 roc_auc binary 0.938 25 0.00647
## 2 11 biweight 1.62 roc_auc binary 0.937 25 0.00627
## 3 10 biweight 0.501 roc_auc binary 0.934 25 0.00563
## # … with 1 more variable: .config &amp;lt;chr&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Using this approach, we evaluated 156 models (less than half of the full set of 500). The
&lt;a href="https://finetune.tidymodels.org/reference/tune_race_anova.html#details" target="_blank" rel="noopener">help file&lt;/a> describes how parallel processing can also be used to further speed up the racing process.&lt;/p>
&lt;p>There is also a handy plotting function that demonstrates how models are eliminated in the racing process:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">plot_race&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sonar_race&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nf">theme_bw&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/race-1.svg" alt="plot of chunk race">&lt;/p>
&lt;p>Each line corresponds to a tuning parameter combination. Models with suboptimal ROC scores are eliminated quickly.&lt;/p>
&lt;h2 id="simulated-annealing">Simulated Annealing
&lt;a href="#simulated-annealing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Simulated annealing is an old global search method that does a controlled random walk. In our application, the walk is through the tuning parameter space. finetune uses it as an iterative search method where new tuning parameter values are created during the process (as opposed to a pre-defined grid). The &lt;code>tune_sim_anneal()&lt;/code> function has syntax that is very similar to the &lt;code>tune_bayes()&lt;/code> function.&lt;/p>
&lt;p>For our KNN model:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">ctrl&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">control_sim_anneal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">verbose&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">102&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sonar_sa&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">tune_sim_anneal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">norm_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">resamp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">iter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">control&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctrl&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## &amp;gt; Generating a set of 1 initial parameter results
## ✓ Initialization complete
##
## Optimizing roc_auc
## Initial best: 0.91295
## 1 ◯ accept suboptimal roc_auc=0.86702 (+/-0.009415)
## 2 + better suboptimal roc_auc=0.89481 (+/-0.007461)
## 3 ♥ new best roc_auc=0.91818 (+/-0.006982)
## 4 ♥ new best roc_auc=0.93033 (+/-0.006978)
## 5 ♥ new best roc_auc=0.93181 (+/-0.006744)
## 6 ◯ accept suboptimal roc_auc=0.87504 (+/-0.009216)
## 7 + better suboptimal roc_auc=0.8849 (+/-0.00875)
## 8 ♥ new best roc_auc=0.93647 (+/-0.00611)
## 9 ◯ accept suboptimal roc_auc=0.92365 (+/-0.006366)
## 10 ─ discard suboptimal roc_auc=0.88774 (+/-0.007586)
## 11 + better suboptimal roc_auc=0.92405 (+/-0.006807)
## 12 ◯ accept suboptimal roc_auc=0.92211 (+/-0.006764)
## 13 + better suboptimal roc_auc=0.9297 (+/-0.006814)
## 14 ─ discard suboptimal roc_auc=0.86171 (+/-0.008326)
## 15 ─ discard suboptimal roc_auc=0.88501 (+/-0.007397)
## 16 x restart from best roc_auc=0.92734 (+/-0.006484)
## 17 ◯ accept suboptimal roc_auc=0.93554 (+/-0.006326)
## 18 ◯ accept suboptimal roc_auc=0.92682 (+/-0.006275)
## 19 + better suboptimal roc_auc=0.93057 (+/-0.006371)
## 20 ♥ new best roc_auc=0.94017 (+/-0.006516)
## 21 ◯ accept suboptimal roc_auc=0.92589 (+/-0.006573)
## 22 + better suboptimal roc_auc=0.92809 (+/-0.006609)
## 23 + better suboptimal roc_auc=0.93439 (+/-0.006754)
## 24 ◯ accept suboptimal roc_auc=0.9314 (+/-0.00656)
## 25 ◯ accept suboptimal roc_auc=0.93076 (+/-0.007003)
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">show_best&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sonar_sa&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;roc_auc&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 5 x 10
## neighbors weight_func dist_power .metric .estimator mean n std_err
## &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1 10 triweight 1.50 roc_auc binary 0.940 25 0.00652
## 2 11 biweight 1.78 roc_auc binary 0.936 25 0.00611
## 3 10 biweight 1.92 roc_auc binary 0.936 25 0.00633
## 4 8 triweight 1.32 roc_auc binary 0.934 25 0.00675
## 5 7 cos 1.59 roc_auc binary 0.932 25 0.00674
## # … with 2 more variables: .config &amp;lt;chr&amp;gt;, .iter &amp;lt;int&amp;gt;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sonar_sa&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;performance&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;roc_auc&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nf">theme_bw&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/sa-best-1.svg" alt="plot of chunk sa-best">&lt;/p>
&lt;p>We&amp;rsquo;ll have more information on both these methods in a next release of chapters for
&lt;a href="https://www.tmwr.org/" target="_blank" rel="noopener">&lt;em>Tidy Modeling with R&lt;/em>&lt;/a>.&lt;/p></description></item><item><title>stacks 0.1.0</title><link>https://www.tidyverse.org/blog/2020/11/stacks-0-1-0/</link><pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/11/stacks-0-1-0/</guid><description>&lt;p>A few months ago, the tidymodels team coordinated a
&lt;a href="https://connect.rstudioservices.com/tidymodels-priorities-survey/README.html" target="_blank" rel="noopener">community survey&lt;/a> to get a sense for what users most wanted to see next in the
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> package ecosystem. One resounding theme from responses was that tidymodels users wanted a framework for tidymodels-aligned model stacking.&lt;/p>
&lt;p>&lt;img src="https://education.rstudio.com/blog/2020/06/tidymodels-internship/priorities.png" alt="">&lt;/p>
&lt;p>We&amp;rsquo;re excited to announce the release of
&lt;a href="https://stacks.tidymodels.org" target="_blank" rel="noopener">stacks&lt;/a> 0.1.0, a package for model stacking that aligns with existing functionality in the tidymodels package ecosystem! Model stacking is an ensembling technique that combines the outputs of many models to generate a new model&amp;mdash;referred to as an &lt;em>ensemble&lt;/em> in this package&amp;mdash;that generates predictions informed by each of its &lt;em>members&lt;/em>.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>(&lt;span class='s'>"stacks"&lt;/span>)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To load the package:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>(&lt;span class='k'>stacks&lt;/span>)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="a-brief-overview">A Brief Overview
&lt;a href="#a-brief-overview">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The process of a building a model stack goes something like this:&lt;/p>
&lt;div style="float:right;position: relative; top: -35px; width: 200px; padding-left: 30px; padding-bottom: 10px;">
&lt;p>&lt;img src="https://github.com/tidymodels/stacks/raw/main/man/figures/logo.png" alt="">&lt;/p>
&lt;/div>
&lt;ol>
&lt;li>Define candidate ensemble members using functionality from
&lt;a href="https://rsample.tidymodels.org/" target="_blank" rel="noopener">rsample&lt;/a>,
&lt;a href="https://parsnip.tidymodels.org/" target="_blank" rel="noopener">parsnip&lt;/a>,
&lt;a href="https://workflows.tidymodels.org/" target="_blank" rel="noopener">workflows&lt;/a>,
&lt;a href="https://recipes.tidymodels.org/" target="_blank" rel="noopener">recipes&lt;/a>, and
&lt;a href="http://tune.tidymodels.org/" target="_blank" rel="noopener">tune&lt;/a>&lt;/li>
&lt;li>Initialize a &lt;code>data_stack&lt;/code> object with
&lt;a href="https://stacks.tidymodels.org/reference/stacks.html" target="_blank" rel="noopener">&lt;code>stacks()&lt;/code>&lt;/a>&lt;/li>
&lt;li>Iteratively add candidate ensemble members to the &lt;code>data_stack&lt;/code> with
&lt;a href="https://stacks.tidymodels.org/reference/add_candidates.html" target="_blank" rel="noopener">&lt;code>add_candidates()&lt;/code>&lt;/a>&lt;/li>
&lt;li>Evaluate how to combine their predictions with
&lt;a href="https://stacks.tidymodels.org/reference/blend_predictions.html" target="_blank" rel="noopener">&lt;code>blend_predictions()&lt;/code>&lt;/a>&lt;/li>
&lt;li>Fit candidate ensemble members with non-zero stacking coefficients with
&lt;a href="https://stacks.tidymodels.org/reference/fit_members.html" target="_blank" rel="noopener">&lt;code>fit_members()&lt;/code>&lt;/a>&lt;/li>
&lt;li>Predict on new data with
&lt;a href="https://stacks.tidymodels.org/reference/predict.model_stack.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>For an example of using stacks to build a stacked ensemble model, see the
&lt;a href="https://stacks.tidymodels.org/articles/basics.html" target="_blank" rel="noopener">package vignette&lt;/a>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thank you to
&lt;a href="https://www.jungjulie.com/" target="_blank" rel="noopener">Julie Jung&lt;/a> for contributing the package&amp;rsquo;s hex sticker as well as research data used in examples throughout the package. Read more about the example data
&lt;a href="https://stacks.tidymodels.org/reference/tree_frogs.html" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;p>This release was made possible in part by the RStudio internship program, which allowed me (
&lt;a href="https://twitter.com/simonpcouch" target="_blank" rel="noopener">Simon Couch&lt;/a>) to work on developing stacks full-time throughout July. I&amp;rsquo;m also grateful for support from Dr. Kelly McConville as well as the
&lt;a href="https://www.reed.edu/math/" target="_blank" rel="noopener">Reed College Mathematics Department&lt;/a>, where this package will partially fulfill my undergraduate senior thesis requirement.&lt;/p>
&lt;p>Also, we thank those who have tested and provided feedback on the developmental versions of the package over the last few months.&lt;/p></description></item><item><title>Parallel processing with tune</title><link>https://www.tidyverse.org/blog/2020/11/tune-parallel/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/11/tune-parallel/</guid><description>&lt;!--
TODO:
* [ ] Pick category and tags (see existing with `post_tags()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnail()`
* [ ] Add intro sentence
* [ ] `use_tidy_thanks()`
-->
&lt;p>This is the third post related to version 0.1.2 of the tune package. The
&lt;a href="https://www.tidyverse.org/blog/2020/11/tune-0-1-2/" target="_blank" rel="noopener">first post&lt;/a> discussed various new features while the
&lt;a href="https://www.tidyverse.org/blog/2020/11/tidymodels-sparse-support/" target="_blank" rel="noopener">second post&lt;/a> describes sparse matrix support. This post is an excerpt from an upcoming chapter in
&lt;a href="https://www.tmwr.org/" target="_blank" rel="noopener">&lt;em>Tidy Modeling with R&lt;/em>&lt;/a> and is focused on parallel processing.&lt;/p>
&lt;p>Previously, the tune package allowed for parallel processing of calculations in a few different places:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Simple model resampling via &lt;code>resample_fit()&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Model tuning via &lt;code>tune_grid()&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>During Bayesian optimization (&lt;code>tune_bayes()&lt;/code>)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>In the new version of tune, there are more options related to how parallelism occurs. It&amp;rsquo;s a little complicated and we&amp;rsquo;ll start by describing the most basic method.&lt;/p>
&lt;h2 id="parallelizing-the-resampling-loop">Parallelizing the resampling loop
&lt;a href="#parallelizing-the-resampling-loop">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>For illustration, let&amp;rsquo;s suppose that we are tuning a set of model parameters (e.g. not recipe parameters). In tidymodels, we always use
&lt;a href="https://www.tmwr.org/resampling.html" target="_blank" rel="noopener">out-of-sample predictions to measure performance&lt;/a>. With grid search, pseudo-code that illustrates the computations are:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">for &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resample&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="n">resamples&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1"># Create analysis and assessment sets&lt;/span>
&lt;span class="c1"># Preprocess data (e.g. formula or recipe)&lt;/span>
&lt;span class="nf">for &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">model&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="n">configurations&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1"># Fit {model} to the {resample} analysis set&lt;/span>
&lt;span class="c1"># Predict the {resample} assessment set&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Prior to the new version of tune, the only option was to run the outer resampling loop in parallel. The inner modeling loop is run sequentially. The rationale for this was this: if you are doing any significant preprocessing of the data (e.g., a complex recipe), you only have to do that as many times as you have resamples. Since the model tuning is conditional on the preprocessed data, this is pretty computationally efficient.&lt;/p>
&lt;p>There were two downsides to this approach:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Suppose you have 10 resamples but access to 20 cores. The maximum core utilization would be 10 and using 10 cores might not maximize the computational efficiency.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Since tidymodels treats validation sets as a single resample, you can&amp;rsquo;t parallel process at all.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Parallel processing is somewhat unpredictable. While you might have a lot of cores (or machines) to throw at the problem, adding more might not help. This really depends on the model, the size of the data, and the parallel strategy used (i.e. forking vs socket).&lt;/p>
&lt;p>To illustrate how this approach utilizes parallel workers, we&amp;rsquo;ll use a case where there are 7 model tuning parameter values along with 5-fold cross-validation. This visualization shows how the tasks are allocated to the worker processes:&lt;/p>
&lt;p>&lt;img src="figure/grid-logging-rs-1.svg" title="plot of chunk grid-logging-rs" alt="plot of chunk grid-logging-rs" width="70%" />&lt;/p>
&lt;p>The code assigns each of the five resamples to their own worker process which, in this case, is a core on a single desktop machine. That worker conducts the preprocessing then loops over the models. The preprocessing happens once per resample.&lt;/p>
&lt;p>In the new version of tune, there is a control option called &lt;code>parallel_over&lt;/code>. Setting this to a value of &lt;code>&amp;quot;resamples&amp;quot;&lt;/code> will select this scheme to parallelize the computations.&lt;/p>
&lt;h2 id="parallelizing-everything">Parallelizing everything
&lt;a href="#parallelizing-everything">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Another option that we can pursue is to take the two loops shown above and merge them into a single loop.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">all_tasks&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">crossing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resamples&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">configurations&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">for &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">iter&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="n">all_tasks&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1"># Create analysis and assessment sets for {iter}&lt;/span>
&lt;span class="c1"># Preprocess data (e.g. formula or recipe)&lt;/span>
&lt;span class="c1"># Fit model {iter} to the {iter} analysis set&lt;/span>
&lt;span class="c1"># Predict the {iter} assessment set&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>With seven models and five resamples there are a total of 35 separate tasks that can be given to the worker processes. For this example, that would allow up to 35 cores/machines to run simultaneously. If we use a validation set, this would also enable the model loop to run in parallel.&lt;/p>
&lt;p>The downside to this approach is that the preprocessing is unnecessarily repeated multiple times (depending on how tasks are allocated to the worker processes).&lt;/p>
&lt;p>Taking our previous example, here is what the allocations look like if the 35 tasks are run across 10 cores:&lt;/p>
&lt;p>&lt;img src="figure/grid-logging-all-1.svg" alt="plot of chunk grid-logging-all">&lt;/p>
&lt;p>For each resample, the preprocessing is needlessly run six additional times. If the preprocessing is fast, this might be the best approach.&lt;/p>
&lt;p>To enable this approach, the control option is set to &lt;code>parallel_over = &amp;quot;everything&amp;quot;&lt;/code>.&lt;/p>
&lt;h2 id="automatic-strategy-detection">Automatic strategy detection
&lt;a href="#automatic-strategy-detection">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The default for &lt;code>parallel_over&lt;/code> is &lt;code>NULL&lt;/code>. This allows us to check and see if there are multiple resamples. If that is the case, it uses a value of &lt;code>&amp;quot;resamples&amp;quot;&lt;/code>; otherwise, &lt;code>&amp;quot;everything&amp;quot;&lt;/code> is used.&lt;/p>
&lt;h2 id="how-much-faster-are-the-computations">How much faster are the computations?
&lt;a href="#how-much-faster-are-the-computations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As an example, we tuned a boosted tree with the &lt;code>xgboost&lt;/code> engine on a data set of 4,000 samples. Five-fold cross-validation was used with 10 candidate models. These data required some baseline preprocessing that did not require any estimation. The preprocessing was handled three different ways:&lt;/p>
&lt;ol>
&lt;li>Preprocess the data prior to modeling using a &lt;code>dplyr&lt;/code> pipeline (labeled as &amp;ldquo;none&amp;rdquo; in the plots below).&lt;/li>
&lt;li>Conduct the same preprocessing using a recipe (shown as &amp;ldquo;light&amp;rdquo; preprocessing).&lt;/li>
&lt;li>With a recipe, add an additional step that has a high computational cost (labeled as &amp;ldquo;expensive&amp;rdquo;).&lt;/li>
&lt;/ol>
&lt;p>The first and second preprocessing options are designed to measure the computational cost of the recipe. The third option measures the cost of performing redundant computations with &lt;code>parallel_over = &amp;quot;everything&amp;quot;&lt;/code>.&lt;/p>
&lt;p>We evaluated this process using variable number of worker processes and using the two &lt;code>parallel_over&lt;/code> options. The computer has 10 physical cores and 20 virtual cores (via hyper threading).&lt;/p>
&lt;p>Let&amp;rsquo;s consider the raw execution times:&lt;/p>
&lt;p>&lt;img src="figure/grid-par-times-1.svg" alt="plot of chunk grid-par-times">&lt;/p>
&lt;p>Since there were only five resamples, the number of cores used when &lt;code>parallel_over = &amp;quot;resamples&amp;quot;&lt;/code> is limited to five.&lt;/p>
&lt;p>Comparing the curves in the first two panels for &amp;ldquo;none&amp;rdquo; and &amp;ldquo;light&amp;rdquo;:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>There is little difference in the execution times between the panels. This indicates, for these data, there is no real computational penalty for doing the preprocessing steps in a recipe.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>There is some benefit for using &lt;code>parallel_over = &amp;quot;everything&amp;quot;&lt;/code> with many cores. However, as shown below, the majority of the benefit of parallel processing occurs in the first five workers.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>With the expensive preprocessing step, there is a considerable difference in execution times. Using &lt;code>parallel_over = &amp;quot;everything&amp;quot;&lt;/code> is problematic since, even using all cores, it never achieves the execution time that &lt;code>parallel_over = &amp;quot;resamples&amp;quot;&lt;/code> attains with five cores. This is because the costly preprocessing step is unnecessarily repeated in the computational scheme.&lt;/p>
&lt;h2 id="psock-clusters">PSOCK clusters
&lt;a href="#psock-clusters">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The primary method for parallel processing on Windows computers uses a PSOCK cluster. From
&lt;a href="https://www.oreilly.com/library/view/parallel-r/9781449317850/" target="_blank" rel="noopener">&lt;em>Parallel R&lt;/em>&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;The parallel package comes with two transports: &amp;lsquo;PSOCK&amp;rsquo; and &amp;lsquo;FORK&amp;rsquo;. The &amp;lsquo;PSOCK&amp;rsquo; transport is a streamlined version of
&lt;a href="https://biostats.bepress.com/uwbiostat/paper193/" target="_blank" rel="noopener">snow&lt;/a>&amp;lsquo;s &amp;lsquo;SOCK&amp;rsquo; transport. It starts workers using the Rscript command, and communicates between the master and workers using socket connections.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>This method works on all major operating systems.&lt;/p>
&lt;p>Different parallel processing technologies work in different ways. About mid-year we started to receive a number of issue reports where PSOCK clusters were failing on Windows. This was due to how parallel workers are initialized; they really don&amp;rsquo;t know anything about the main R process (e.g., what packages are loaded, what data objects should have access, etc). Those problems are now solved with the most recent versions of the parsnip, recipes, and tune packages.&lt;/p></description></item><item><title>Sparse data structures in tidymodels</title><link>https://www.tidyverse.org/blog/2020/11/tidymodels-sparse-support/</link><pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/11/tidymodels-sparse-support/</guid><description>&lt;p>The new release of
&lt;a href="https://www.tidyverse.org/blog/2020/11/tune-0-1-2/" target="_blank" rel="noopener">tune&lt;/a> is chock full of improvements and new features. This blog post is the second of three posts exploring the updates available in tune 0.1.2. When combined with the latest releases of
&lt;a href="http://hardhat.tidymodels.org/" target="_blank" rel="noopener">hardhat&lt;/a> and
&lt;a href="https://parsnip.tidymodels.org/" target="_blank" rel="noopener">parsnip&lt;/a>, one upgrade that tidymodels users can now use in their day-to-day modeling work is some &lt;strong>support for sparse data structures&lt;/strong> during fitting and tuning.&lt;/p>
&lt;h2 id="why-sparse-data">Why sparse data?
&lt;a href="#why-sparse-data">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In some subject matter domains, it is common to have lots and lots of zeroes after transforming data to a representation appropriate for analysis or modeling. Text data is one such example. The &lt;code>small_fine_foods&lt;/code> dataset of Amazon reviews of fine foods contains a column &lt;code>review&lt;/code> that we as humans can read and understand.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidyverse&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;small_fine_foods&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">training_data&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 4,000 x 3
## product review score
## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;fct&amp;gt;
## 1 B000J0LSBG &amp;quot;this stuff is not stuffing its not good at all save your… other
## 2 B000EYLDYE &amp;quot;I absolutely LOVE this dried fruit. LOVE IT. Whenever I ha… great
## 3 B0026LIO9A &amp;quot;GREAT DEAL, CONVENIENT TOO. Much cheaper than WalMart and I… great
## 4 B00473P8SK &amp;quot;Great flavor, we go through a ton of this sauce! I discovere… great
## 5 B001SAWTNM &amp;quot;This is excellent salsa/hot sauce, but you can get it for $2… great
## 6 B000FAG90U &amp;quot;Again, this is the best dogfood out there. One suggestion: … great
## 7 B006BXTCEK &amp;quot;The box I received was filled with teas, hot chocolates, and… other
## 8 B002GWH5OY &amp;quot;This is delicious coffee which compares favorably with much … great
## 9 B003R0MFYY &amp;quot;Don't let these little tiny cans fool you. They pack a lot … great
## 10 B001EO5ZXI &amp;quot;One of the nicest, smoothest cup of chai I've made. Nice mix… great
## # … with 3,990 more rows
&lt;/code>&lt;/pre>&lt;p>Computers, on the other hand, need that &lt;code>review&lt;/code> variable to be heavily preprocessed and transformed in order for it to be ready for most modeling. We typically need to
&lt;a href="https://smltar.com/tokenization.html" target="_blank" rel="noopener">tokenize&lt;/a> the text, find word frequencies, and perhaps
&lt;a href="https://www.tidytextmining.com/tfidf.html" target="_blank" rel="noopener">compute tf-idf&lt;/a>. There are quite a number of different structures we can use to store the results of this preprocessing. We can keep the results in a long, tidy tibble, which is excellent for exploratory data analysis.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidytext&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">tidy_reviews&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">training_data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">unnest_tokens&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">review&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">bind_tf_idf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">product&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">tidy_reviews&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 208,306 x 6
## product word n tf idf tf_idf
## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 B0000691JF and 1 0.1 0.234 0.0234
## 2 B0000691JF i 1 0.1 0.262 0.0262
## 3 B0000691JF in 1 0.1 0.654 0.0654
## 4 B0000691JF just 1 0.1 1.54 0.154
## 5 B0000691JF manner 1 0.1 5.52 0.552
## 6 B0000691JF ordered 1 0.1 2.76 0.276
## 7 B0000691JF prompt 1 0.1 5.81 0.581
## 8 B0000691JF the 1 0.1 0.206 0.0206
## 9 B0000691JF usual 1 0.1 5.04 0.504
## 10 B0000691JF what 1 0.1 2.27 0.227
## # … with 208,296 more rows
&lt;/code>&lt;/pre>&lt;p>We can also transform these results to a wide format, often a good fit when the next step is a modeling or machine learning algorithm.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">wide_reviews&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">tidy_reviews&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tf_idf&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pivot_wider&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">names_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">names_prefix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;word_&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">values_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tf_idf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">values_fill&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">wide_reviews&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 4,000 x 13,797
## product word_and word_i word_in word_just word_manner word_ordered word_prompt
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 B00006… 0.0234 0.0262 0.0654 0.154 0.552 0.276 0.581
## 2 B00008… 0.00780 0 0 0 0 0 0
## 3 B00008… 0.00177 0.00397 0.0198 0.0117 0 0 0
## 4 B00008… 0.00582 0.00489 0.00813 0 0 0 0
## 5 B00008… 0.00246 0.0166 0.0207 0.0162 0 0 0
## 6 B00008… 0.00334 0.00750 0.00935 0 0 0 0
## 7 B00008… 0.0114 0.00729 0.00909 0 0 0 0
## 8 B00008… 0.00768 0.0129 0 0 0 0 0
## 9 B00008… 0.00976 0 0 0 0 0 0
## 10 B00008… 0.0156 0 0 0 0 0 0
## 11 B00008… 0.00404 0.0181 0 0 0 0 0
## 12 B00008… 0.0142 0.00397 0 0 0 0 0
## 13 B00008… 0.0160 0.00596 0.0149 0.0351 0 0 0
## 14 B00009… 0.00439 0.00656 0.00818 0 0 0 0
## 15 B0000A… 0.00679 0.00380 0.0379 0 0 0.0401 0
## # … with 3,985 more rows, and 13,789 more variables: word_the &amp;lt;dbl&amp;gt;,
## # word_usual &amp;lt;dbl&amp;gt;, word_what &amp;lt;dbl&amp;gt;, word_a &amp;lt;dbl&amp;gt;, word_anymore &amp;lt;dbl&amp;gt;,
## # word_chocolate &amp;lt;dbl&amp;gt;, word_coat &amp;lt;dbl&amp;gt;, word_dogfood &amp;lt;dbl&amp;gt;, word_ears &amp;lt;dbl&amp;gt;,
## # word_fine &amp;lt;dbl&amp;gt;, word_for &amp;lt;dbl&amp;gt;, word_great &amp;lt;dbl&amp;gt;, word_hardly &amp;lt;dbl&amp;gt;,
## # word_he &amp;lt;dbl&amp;gt;, word_health &amp;lt;dbl&amp;gt;, word_his &amp;lt;dbl&amp;gt;, word_hot &amp;lt;dbl&amp;gt;,
## # word_is &amp;lt;dbl&amp;gt;, word_itching &amp;lt;dbl&amp;gt;, word_lab &amp;lt;dbl&amp;gt;, …
&lt;/code>&lt;/pre>&lt;p>Lots of zeroes! Instead of using a tibble, we can transform these results to a &lt;strong>sparse matrix&lt;/strong>, a specialized data structure that keeps track of only the non-zero elements instead of every element.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">sparse_reviews&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">tidy_reviews&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">cast_dfm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tf_idf&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sparse_reviews&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Document-feature matrix of: 4,000 documents, 13,796 features (99.6% sparse).
&lt;/code>&lt;/pre>&lt;p>As is typical for text data, this document-feature matrix is extremely sparse, with many zeroes. Most documents do not contain most words. By using this kind of specialized structure instead of anything like a vanilla &lt;code>matrix&lt;/code> or &lt;code>data.frame&lt;/code>, we secure two benefits:&lt;/p>
&lt;ul>
&lt;li>We can taken advantage of the &lt;strong>speed&lt;/strong> gained from any specialized model algorithms built for sparse data.&lt;/li>
&lt;li>The amount of &lt;strong>memory&lt;/strong> this object requires decreases dramatically.&lt;/li>
&lt;/ul>
&lt;p>How big of a change in memory are we talking about?&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lobstr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">obj_sizes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wide_reviews&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sparse_reviews&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## * 443,539,792 B
## * 3,581,200 B
&lt;/code>&lt;/pre>
&lt;h2 id="a-blueprint-for-sparse-models">A blueprint for sparse models
&lt;a href="#a-blueprint-for-sparse-models">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Before the most recent releases of hardhat, parsnip, and tune, there was no support for sparse data structures within tidymodels. Now, you can specify a hardhat &lt;strong>blueprint&lt;/strong> for sparse data.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hardhat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sparse_bp&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">default_recipe_blueprint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">composition&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;dgCMatrix&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>dgCMatrix&lt;/code> composition is from the
&lt;a href="https://cran.r-project.org/package=Matrix" target="_blank" rel="noopener">Matrix&lt;/a> package, and is the most standard class for sparse numeric matrices in modeling in R. (You can also specify a dense matrix composition with &lt;code>composition = &amp;quot;matrix&amp;quot;&lt;/code>.)&lt;/p>
&lt;h2 id="workflows-and-sparsity">Workflows and sparsity
&lt;a href="#workflows-and-sparsity">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The blueprint is used under the hood by the hardhat functions to process data. To get ready to fit our model using the sparse blueprint, we can set up our preprocessing recipe:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">textrecipes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">text_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">score&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">review&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">training_data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tokenize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">review&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_stopwords&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">review&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tokenfilter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">review&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_tokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1e3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tfidf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">review&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we set up our model as we would normally:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lasso_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">logistic_reg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">penalty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.02&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mixture&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;glmnet&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The regularized modeling of the glmnet package is an example of an algorithm that has specialized approaches for sparse data. If we pass in dense data with &lt;code>set_engine(&amp;quot;glmnet&amp;quot;)&lt;/code>, the underlying model will take one approach, but it will use a different, faster approach especially built for sparse data if we pass in a sparse matrix. Typically, we would recommend centering and scaling predictors using &lt;code>step_normalize()&lt;/code> before fitting a regularized model like glmnet. However, if we do this, we would no longer have all our zeroes and sparse data. Instead, we can &amp;ldquo;normalize&amp;rdquo; these text predictors using tf-idf so that they are all on the same scale.&lt;/p>
&lt;p>Let&amp;rsquo;s put together two workflows, one using the sparse blueprint and one using the default behavior.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">wf_sparse&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">blueprint&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sparse_bp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lasso_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">wf_default&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text_rec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lasso_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="comparing-model-results">Comparing model results
&lt;a href="#comparing-model-results">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Now let&amp;rsquo;s use &lt;code>fit_resamples()&lt;/code> to estimate how well this model fits with both options and measure performance for both.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">food_folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vfold_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">training_data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">results&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">bench&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">mark&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">iterations&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">check&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">sparse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fit_resamples&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wf_sparse&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">food_folds&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">default&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fit_resamples&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wf_default&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">food_folds&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">results&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 2 x 6
## expression min median `itr/sec` mem_alloc `gc/sec`
## &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt; &amp;lt;dbl&amp;gt;
## 1 sparse 7.78s 7.87s 0.127 788MB 0.127
## 2 default 1.19m 1.2m 0.0139 870MB 0.0139
&lt;/code>&lt;/pre>&lt;p>We see on the order of a 10x speed gain by using the sparse blueprint!&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;ridge&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/unnamed-chunk-11-1.png" alt="plot of chunk unnamed-chunk-11">&lt;/p>
&lt;p>The model performance metrics are the same:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">fit_resamples&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wf_sparse&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">food_folds&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">collect_metrics&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 2 x 5
## .metric .estimator mean n std_err
## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1 accuracy binary 0.715 3 0.00399
## 2 roc_auc binary 0.797 3 0.00598
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">fit_resamples&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wf_default&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">food_folds&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">collect_metrics&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 2 x 5
## .metric .estimator mean n std_err
## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1 accuracy binary 0.715 3 0.00399
## 2 roc_auc binary 0.797 3 0.00598
&lt;/code>&lt;/pre>&lt;p>To see a detailed text modeling example using this dataset of food reviews, &lt;em>without&lt;/em> sparse encodings but complete with tuning hyperparameters, check out
&lt;a href="https://www.tidymodels.org/learn/work/tune-text/" target="_blank" rel="noopener">our article on &lt;code>tidymodels.org&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="current-limits">Current limits
&lt;a href="#current-limits">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In tidymodels, the support for sparse data structures begins coming &lt;em>out&lt;/em> of a
&lt;a href="https://www.tmwr.org/recipes.html" target="_blank" rel="noopener">preprocessing recipe&lt;/a> and continues throughout the fitting and tuning process. We typically still expect the input &lt;em>into&lt;/em> a recipe to be a data frame, as shown in this text analysis example, and there is very limited support within tidymodels for starting with a sparse matrix, for example by using &lt;code>parsnip::fit_xy()&lt;/code>.&lt;/p>
&lt;p>There are currently three models in parsnip that support a sparse data encoding:&lt;/p>
&lt;ul>
&lt;li>the glmnet engine for linear and logistic regression (including multinomial regression),&lt;/li>
&lt;li>the XGBoost engine for boosted trees, and&lt;/li>
&lt;li>the ranger engine for random forests.&lt;/li>
&lt;/ul>
&lt;p>There is heterogeneity in how recipes themselves handle data internally; this is why we didn&amp;rsquo;t see a huge decrease in memory use when comparing &lt;code>wf_sparse&lt;/code> to &lt;code>wf_default&lt;/code>. The
&lt;a href="https://textrecipes.tidymodels.org/" target="_blank" rel="noopener">textrecipes&lt;/a> package internally adopts the idea of a
&lt;a href="https://textrecipes.tidymodels.org/reference/tokenlist.html" target="_blank" rel="noopener">tokenlist&lt;/a>, which is memory efficient for sparse data, but other recipe steps may handle data in a dense tibble structure. Keep these current limits in mind as you consider the memory requirements of your modeling projects!&lt;/p></description></item><item><title>tune 0.1.2</title><link>https://www.tidyverse.org/blog/2020/11/tune-0-1-2/</link><pubDate>Mon, 23 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/11/tune-0-1-2/</guid><description>&lt;!--
TODO:
* [ ] Pick category and tags (see existing with `post_tags()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnail()`
* [ ] Add intro sentence
* [ ] `use_tidy_thanks()`
-->
&lt;p>We&amp;rsquo;re pleased to announce the release of version 0.1.2 of the
&lt;a href="https://tune.tidymodels.org/" target="_blank" rel="noopener">tune&lt;/a> package. tune is a tidy interface for optimizing model tuning parameters.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tune&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>There is a lot to discuss! So much that this is the first of three blog posts. Here, we&amp;rsquo;ll show off most of the new features. The two other blog posts will talk about how to benefit from sparse matrices with tidymodels and improvements to parallel processing.&lt;/p>
&lt;h2 id="pick-a-class-level">Pick a class level
&lt;a href="#pick-a-class-level">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Deciding how to define the event of interest for two-class classification models is a major pain. Sometimes the second level of the factor is assumed to be the event of interest, but this is a vestigial notion almost entirely driven by how things were in The Old Days when outcome classes were encoded as zero and one. Thankfully, we&amp;rsquo;ve evolved significantly since those days. tidymodels assumes that the first factor level is the event as a default.&lt;/p>
&lt;p>However, we want to accommodate multiple preferences. Previously, there was a global option that you could set to decide whether the first or second factor level is the event. We have come to realize that this was not the best idea from a technical standpoint. The new approach uses control arguments to the tune functions to make this specification. For example, &lt;code>control_grid(event_level = &amp;quot;second&amp;quot;)&lt;/code> would change the default when using &lt;code>tune_grid()&lt;/code>.&lt;/p>
&lt;h2 id="adding-variables">Adding variables
&lt;a href="#adding-variables">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There is a
&lt;a href="https://workflows.tidymodels.org/reference/add_variables.html" target="_blank" rel="noopener">new variable specification interface&lt;/a> in the workflows package called &lt;code>add_variables()&lt;/code>. This can be a good approach to use if you are not interested in using a recipe or formula to declare which columns are outcomes or predictors. You can now use this interface with the tune package.&lt;/p>
&lt;h2 id="gaussian-process-options">Gaussian process options
&lt;a href="#gaussian-process-options">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>For Bayesian optimization, you can now pass options to &lt;code>GPfit::GP_fit()&lt;/code> through &lt;code>tune_bayes()&lt;/code>. If you are a &amp;ldquo;Go Matérn covariance function or go home&amp;rdquo; person, this is a nice addition.&lt;/p>
&lt;h2 id="augmenting-tune-objects">Augmenting &lt;code>tune&lt;/code> objects
&lt;a href="#augmenting-tune-objects">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There is now an
&lt;a href="https://broom.tidymodels.org/articles/broom.html" target="_blank" rel="noopener">&lt;code>augment()&lt;/code>&lt;/a> method for &lt;code>tune_*&lt;/code> objects. This method does not have a data argument and returns the &lt;em>out-of-sample&lt;/em> predictions for the object, different from other &lt;code>augment()&lt;/code> methods you may have used. For objects produced by &lt;code>last_fit()&lt;/code>, the function returns the test set results.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to everyone who contributed code or filed issues since the last version:
&lt;a href="https://github.com/AndrewKostandy" target="_blank" rel="noopener">@AndrewKostandy&lt;/a>,
&lt;a href="https://github.com/bloomingfield" target="_blank" rel="noopener">@bloomingfield&lt;/a>,
&lt;a href="https://github.com/cespeleta" target="_blank" rel="noopener">@cespeleta&lt;/a>,
&lt;a href="https://github.com/cimentadaj" target="_blank" rel="noopener">@cimentadaj&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dmalkr" target="_blank" rel="noopener">@dmalkr&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hnagaty" target="_blank" rel="noopener">@hnagaty&lt;/a>,
&lt;a href="https://github.com/jcpsantiago" target="_blank" rel="noopener">@jcpsantiago&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/kbzsl" target="_blank" rel="noopener">@kbzsl&lt;/a>,
&lt;a href="https://github.com/kelseygonzalez" target="_blank" rel="noopener">@kelseygonzalez&lt;/a>,
&lt;a href="https://github.com/matthewrspiegel" target="_blank" rel="noopener">@matthewrspiegel&lt;/a>,
&lt;a href="https://github.com/mdneuzerling" target="_blank" rel="noopener">@mdneuzerling&lt;/a>,
&lt;a href="https://github.com/MxNl" target="_blank" rel="noopener">@MxNl&lt;/a>,
&lt;a href="https://github.com/SeeNewt" target="_blank" rel="noopener">@SeeNewt&lt;/a>,
&lt;a href="https://github.com/simonschoe" target="_blank" rel="noopener">@simonschoe&lt;/a>,
&lt;a href="https://github.com/Steviey" target="_blank" rel="noopener">@Steviey&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/trevorcampbell" target="_blank" rel="noopener">@trevorcampbell&lt;/a>, and
&lt;a href="https://github.com/UnclAlDeveloper" target="_blank" rel="noopener">@UnclAlDeveloper&lt;/a>&lt;/p></description></item><item><title>recipes 0.1.14</title><link>https://www.tidyverse.org/blog/2020/10/recipes-0-1-14/</link><pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/10/recipes-0-1-14/</guid><description>&lt;p>We&amp;rsquo;re stoked to announce the release of
&lt;a href="https://recipes.tidymodels.org" target="_blank" rel="noopener">recipes&lt;/a> 0.1.14. recipes is an alternative method for creating and preprocessing design matrices that can be used for modeling or visualization.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;recipes&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can see a full list of changes in the
&lt;a href="https://recipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">release notes&lt;/a>. There are some improvements and changes to talk about.&lt;/p>
&lt;h2 id="an-alternative-to-juice">An alternative to &lt;code>juice()&lt;/code>
&lt;a href="#an-alternative-to-juice">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Now that we have taught with recipes for a few years, we&amp;rsquo;ve realized that there is a lot of confusion about the differences between &lt;code>juice()&lt;/code> and &lt;code>bake()&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>juice(recipe)&lt;/code> returns the preprocessed training set (at very low computational costs).&lt;/li>
&lt;li>&lt;code>bake(recipe, new_data)&lt;/code> applies the recipe to any data (e.g. training, testing, unknowns, etc.)&lt;/li>
&lt;/ul>
&lt;p>We were not able to find ways to make this distinction clear for many users.&lt;/p>
&lt;p>How could we solve this issue? We decided to come up with a better alternative to &lt;code>juice()&lt;/code> that would be more intuitive. As a result, &lt;em>all&lt;/em> applications of the recipe can now use &lt;code>bake()&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>bake(recipe, new_data = some_data_set)&lt;/code> works as before.&lt;/li>
&lt;li>&lt;code>bake(recipe, new_data = NULL)&lt;/code> now returns the preprocessed training set.&lt;/li>
&lt;/ul>
&lt;p>This is precedented in base R since many &lt;code>predict()&lt;/code> methods re-predict the training set when the &lt;code>newdata&lt;/code> argument is &lt;code>NULL&lt;/code> or missing. Note that there is no default for &lt;code>new_data&lt;/code>; you have to set it to &lt;code>NULL&lt;/code> to get the training set.&lt;/p>
&lt;p>We felt that this was the best API change that we could make. An external poll showed some agreement:&lt;/p>
&lt;p>&lt;img src="juice-poll.png" title="plot of chunk poll" alt="plot of chunk poll" width="80%" style="display: block; margin: auto;" />&lt;/p>
&lt;p>&lt;code>juice()&lt;/code>, which is still my favorite R function name of all time, will not be removed; you can still use it. However, we will not use it in training materials or most documentation.&lt;/p>
&lt;h2 id="imputation-with-linear-models">Imputation with linear models
&lt;a href="#imputation-with-linear-models">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Tim Zhou contributed a step to use linear models for imputation. This is a nice, compact method for adding an imputation equation for numeric predictors into the recipe. The syntax is similar to the existing imputation steps. Here&amp;rsquo;s an example from the Ames data:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ames&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Sale_Price&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">log10&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Sale_Price&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Set some of the latitude values to be missing: &lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">393&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ames_missing&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">ames&lt;/span>
&lt;span class="n">ames_missing&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Latitude&lt;/span>&lt;span class="nf">[sample&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nf">nrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="m">200&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">]&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="kc">NA&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We might be able to reasonably approximate the missing values based on the other geographic predictors (&lt;code>Longitude&lt;/code> and &lt;code>Neighborhood&lt;/code>) as well as a few aspects of the houses (e.g., &lt;code>MS_Zoning&lt;/code> and &lt;code>Alley&lt;/code>). A linear model is create with these predictors in order to estimate the missing &lt;code>Latitude&lt;/code> data:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">imputed_ames&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sale_Price&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ames_missing&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_impute_linear&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">Latitude&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">impute_with&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">imp_vars&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Longitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Neighborhood&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">MS_Zoning&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Alley&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;lm-imp&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames_missing&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This plot shows the missing data&amp;rsquo;s true values on the x-axis and their imputed values on the y-axis:&lt;/p>
&lt;p>&lt;img src="figure/plot-values-1.svg" title="plot of chunk plot-values" alt="plot of chunk plot-values" width="70%" />&lt;/p>
&lt;p>In future versions, we will standardize on the naming convention &lt;code>step_impute_*()&lt;/code>. The existing functions will be soft-deprecated for a reasonable time period to ensure backward compatibility.&lt;/p>
&lt;h2 id="other-changes">Other changes
&lt;a href="#other-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This version of the package has an extra logging option for &lt;code>prep()&lt;/code> that will print some information on the differences in the data before and after the step was prepared:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">ames_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sale_Price&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ames&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_BoxCox&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Lot_Area&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Gr_Liv_Area&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_other&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Neighborhood&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">threshold&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.05&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_nominal&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_interact&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Central_Air&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">Year_Built&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_ns&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Longitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Latitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">deg_free&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">log_changes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## step_BoxCox (BoxCox_KMeZW): same number of columns
##
## step_other (other_b4CM3): same number of columns
##
## step_dummy (dummy_q3sI4):
## new (223): MS_SubClass_One_Story_1945_and_Older, ...
## removed (40): MS_SubClass, MS_Zoning, Street, Alley, Lot_Shape, ...
##
## step_interact (interact_xjtSG):
## new (1): Central_Air_Y_x_Year_Built
##
## step_ns (ns_pfpld):
## new (10): Longitude_ns_1, Longitude_ns_2, Longitude_ns_3, ...
## removed (2): Longitude, Latitude
&lt;/code>&lt;/pre>&lt;p>Another important change was behind the scenes. Before, there were problems with using PSOCK clusters on Windows because the worker processes were not aware of all the packages that should be loaded. Now, recipes ensures that all of the packages required by each step will be accessible in parallel. A similar change is coming soon to the parsnip package.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to those users who filed issues or contributed a pull request since the previous release:
&lt;a href="https://github.com/AndrewKostandy" target="_blank" rel="noopener">@AndrewKostandy&lt;/a>,
&lt;a href="https://github.com/anks7190" target="_blank" rel="noopener">@anks7190&lt;/a>,
&lt;a href="https://github.com/AshesITR" target="_blank" rel="noopener">@AshesITR&lt;/a>,
&lt;a href="https://github.com/Bijaelo" target="_blank" rel="noopener">@Bijaelo&lt;/a>,
&lt;a href="https://github.com/brodz" target="_blank" rel="noopener">@brodz&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dgkf" target="_blank" rel="noopener">@dgkf&lt;/a>,
&lt;a href="https://github.com/EllaKaye" target="_blank" rel="noopener">@EllaKaye&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hamedbh" target="_blank" rel="noopener">@hamedbh&lt;/a>,
&lt;a href="https://github.com/hnagaty" target="_blank" rel="noopener">@hnagaty&lt;/a>,
&lt;a href="https://github.com/irkaal" target="_blank" rel="noopener">@irkaal&lt;/a>,
&lt;a href="https://github.com/jerome-laurent-pro" target="_blank" rel="noopener">@jerome-laurent-pro&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/karaesmen" target="_blank" rel="noopener">@karaesmen&lt;/a>,
&lt;a href="https://github.com/kylegilde" target="_blank" rel="noopener">@kylegilde&lt;/a>,
&lt;a href="https://github.com/LordRudolf" target="_blank" rel="noopener">@LordRudolf&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mpettis" target="_blank" rel="noopener">@mpettis&lt;/a>,
&lt;a href="https://github.com/mt-edwards" target="_blank" rel="noopener">@mt-edwards&lt;/a>,
&lt;a href="https://github.com/nhward" target="_blank" rel="noopener">@nhward&lt;/a>,
&lt;a href="https://github.com/Nilafhiosagam" target="_blank" rel="noopener">@Nilafhiosagam&lt;/a>,
&lt;a href="https://github.com/NRaillard" target="_blank" rel="noopener">@NRaillard&lt;/a>,
&lt;a href="https://github.com/Paul-Yuchao-Dong" target="_blank" rel="noopener">@Paul-Yuchao-Dong&lt;/a>,
&lt;a href="https://github.com/perluna" target="_blank" rel="noopener">@perluna&lt;/a>,
&lt;a href="https://github.com/RaminZi" target="_blank" rel="noopener">@RaminZi&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/Steviey" target="_blank" rel="noopener">@Steviey&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/ttzhou" target="_blank" rel="noopener">@ttzhou&lt;/a>.&lt;/p></description></item><item><title>usemodels 0.0.1</title><link>https://www.tidyverse.org/blog/2020/09/usemodels-0-0-1/</link><pubDate>Tue, 29 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/09/usemodels-0-0-1/</guid><description>&lt;p>We&amp;rsquo;re very excited to announce the first release of the
&lt;a href="https://usemodels.tidymodels.org/" target="_blank" rel="noopener">usemodels&lt;/a> package. The tidymodels packages are designed to provide modeling functions that are highly flexible and modular. This is powerful, but sometimes a template or skeleton showing how to start is helpful. The usemodels package creates templates for tidymodels analyses so you don&amp;rsquo;t have to write as much new code.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;usemodels&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This blog post will show how to use the package.&lt;/p>
&lt;p>Let&amp;rsquo;s start by creating a glmnet linear regression model for the &lt;code>mtcars&lt;/code> data using tidymodels. This model is usually tuned over the amount and type of regularization. In tidymodels, there are a few intermediate steps for a glmnet model:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Create a
&lt;a href="https://www.tmwr.org/models.html" target="_blank" rel="noopener">parsnip model object&lt;/a> and define the tuning parameters that we want to optimize.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.tmwr.org/recipes.html" target="_blank" rel="noopener">Create a recipe&lt;/a> that, at minimum, centers and scales the predictors. For some data sets, we also need to create dummy variables from any factor-encoded predictor columns.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Define a
&lt;a href="https://www.tmwr.org/resampling.html" target="_blank" rel="noopener">resampling scheme&lt;/a> for our data.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Choose a function from the
&lt;a href="https://tune.tidymodels.org/" target="_blank" rel="noopener">tune package&lt;/a>, such as &lt;code>tune_grid()&lt;/code>, to optimize the parameters. For grid search, we&amp;rsquo;ll also need a grid of candidate parameter values (or let the function choose one for us).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>We recognize that this might be more code than you would have had to write compared to a package like caret. However, the tidymodels ecosystem enables a wider variety of modeling techniques and is more versatile.&lt;/p>
&lt;p>The new usemodels package can automatically generate much of this code infrastructure. For example:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">usemodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">use_glmnet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>which produces the terminal output:&lt;/p>
&lt;pre>&lt;code>glmnet_recipe &amp;lt;-
recipe(formula = mpg ~ ., data = mtcars) %&amp;gt;%
step_zv(all_predictors()) %&amp;gt;%
step_normalize(all_predictors(), -all_nominal())
glmnet_spec &amp;lt;-
linear_reg(penalty = tune(), mixture = tune()) %&amp;gt;%
set_mode(&amp;quot;regression&amp;quot;) %&amp;gt;%
set_engine(&amp;quot;glmnet&amp;quot;)
glmnet_workflow &amp;lt;-
workflow() %&amp;gt;%
add_recipe(glmnet_recipe) %&amp;gt;%
add_model(glmnet_spec)
glmnet_grid &amp;lt;- tidyr::crossing(penalty = 10^seq(-6, -1, length.out = 20), mixture = c(0.05,
0.2, 0.4, 0.6, 0.8, 1))
glmnet_tune &amp;lt;-
tune_grid(glmnet_workflow, resamples = stop(&amp;quot;add your rsample object&amp;quot;), grid = glmnet_grid)
&lt;/code>&lt;/pre>&lt;p>This can be copied to the source window and edited. Some notes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>For this model, it is possible to prescribe a default grid of candidate tuning parameter values that work well about 90% of the time. For other models, the grid might be data-driven. In these cases, the tune package functions can estimate an appropriate grid.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The extra recipes steps are the
&lt;a href="https://www.tmwr.org/pre-proc-table.html" target="_blank" rel="noopener">recommend preprocessing&lt;/a> for this model. Since this varies from model-to-model, the recipe template will contain the minimal required steps. Your data might require additional operations.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>One thing that &lt;em>should not be automated&lt;/em> is the choice of resampling method. The code templates require the user to choose the rsample function that is appropriate.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>In case you are unfamiliar with the model and its preprocessing needs, a &lt;code>verbose&lt;/code> option prints comments that explain &lt;em>why&lt;/em> some steps are included. For the glmnet model, the comments added to the recipe state:&lt;/p>
&lt;blockquote>
&lt;p>Regularization methods sum up functions of the model slope coefficients. Because of this, the predictor variables should be on the same scale. Before centering and scaling the numeric predictors, any predictors with a single unique value are filtered out.&lt;/p>
&lt;/blockquote>
&lt;p>Let&amp;rsquo;s look at another example. The &lt;code>ad_data&lt;/code> data set in the modeldata package has rows for 333 patients with a factor outcome for their level of cognitive impairment (e.g., Alzheimer&amp;rsquo;s disease). There is also a categorical predictor in the data, the Apolipoprotein E genotype, which has six levels. Let&amp;rsquo;s suppose the &lt;code>Genotype&lt;/code> column was encoded as character (instead of being a factor). This might be a problem if the resampling method samples out a level from the data used to fit the model.&lt;/p>
&lt;p>Let&amp;rsquo;s use a boosted tree model with the xgboost package and change the default prefix for the objects:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ad_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">ad_data&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Genotype&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.character&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ad_data&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Genotype&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">use_xgboost&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ad_data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">prefix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;impairment&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>impairment_recipe &amp;lt;-
recipe(formula = Class ~ ., data = ad_data) %&amp;gt;%
step_string2factor(one_of(Genotype)) %&amp;gt;%
step_novel(all_nominal(), -all_outcomes()) %&amp;gt;%
step_dummy(all_nominal(), -all_outcomes(), one_hot = TRUE) %&amp;gt;%
step_zv(all_predictors())
impairment_spec &amp;lt;-
boost_tree(trees = tune(), min_n = tune(), tree_depth = tune(), learn_rate = tune(),
loss_reduction = tune(), sample_size = tune()) %&amp;gt;%
set_mode(&amp;quot;classification&amp;quot;) %&amp;gt;%
set_engine(&amp;quot;xgboost&amp;quot;)
impairment_workflow &amp;lt;-
workflow() %&amp;gt;%
add_recipe(impairment_recipe) %&amp;gt;%
add_model(impairment_spec)
set.seed(64393)
impairment_tune &amp;lt;-
tune_grid(impairment_workflow, resamples = stop(&amp;quot;add your rsample object&amp;quot;),
grid = stop(&amp;quot;add number of candidate points&amp;quot;))
&lt;/code>&lt;/pre>&lt;p>Notice that the line&lt;/p>
&lt;pre>&lt;code>step_string2factor(one_of(Genotype))
&lt;/code>&lt;/pre>&lt;p>is included in the recipe along with a step to generate one-hot encoded dummy variables. xgboost is one of the few tree ensemble implementations that requires the user to create dummy variables. This step is only added to the template when it is required for that model.&lt;/p>
&lt;p>Also, for this particular model, we recommend using a
&lt;a href="https://scholar.google.com/scholar?hl=en&amp;amp;as_sdt=0%2C7&amp;amp;q=space&amp;#43;filling&amp;#43;design&amp;#43;of&amp;#43;experiments" target="_blank" rel="noopener">space-filling design&lt;/a> for the grid, but the user must choose the number of grid points.&lt;/p>
&lt;p>The current set of templates included in the inaugural version of the package are:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">ls&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;package:usemodels&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pattern&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;^use_&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## [1] &amp;quot;use_earth&amp;quot; &amp;quot;use_glmnet&amp;quot; &amp;quot;use_kknn&amp;quot; &amp;quot;use_ranger&amp;quot; &amp;quot;use_xgboost&amp;quot;
&lt;/code>&lt;/pre>&lt;p>We&amp;rsquo;ll likely add more but please file
&lt;a href="https://github.com/tidymodels/usemodels/issues" target="_blank" rel="noopener">an issue&lt;/a> if there are any that you see as a priority.&lt;/p></description></item><item><title>workflows 0.2.0</title><link>https://www.tidyverse.org/blog/2020/09/workflows-0-2-0/</link><pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/09/workflows-0-2-0/</guid><description>&lt;p>We&amp;rsquo;re excited to announce the release of
&lt;a href="https://workflows.tidymodels.org/" target="_blank" rel="noopener">workflows&lt;/a> 0.2.0. workflows is a
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> package for bundling a model specification from
&lt;a href="https://parsnip.tidymodels.org/" target="_blank" rel="noopener">parsnip&lt;/a> with a preprocessor, such as a formula or
&lt;a href="https://recipes.tidymodels.org/" target="_blank" rel="noopener">recipe&lt;/a>. Doing this can streamline the model fitting workflow and combines nicely with
&lt;a href="https://tune.tidymodels.org/" target="_blank" rel="noopener">tune&lt;/a> for performing hyperparameter tuning.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>(&lt;span class='s'>"workflows"&lt;/span>)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>(&lt;span class='k'>&lt;a href='https://github.com/tidymodels/workflows'>workflows&lt;/a>&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>(&lt;span class='k'>&lt;a href='https://parsnip.tidymodels.org'>parsnip&lt;/a>&lt;/span>)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="adding-variables-to-a-workflow">Adding variables to a workflow
&lt;a href="#adding-variables-to-a-workflow">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The main change in this release of workflows is the introduction of a new preprocessor method:
&lt;a href="https://workflows.tidymodels.org//reference/add_variables.html" target="_blank" rel="noopener">&lt;code>add_variables()&lt;/code>&lt;/a>. This adds a third method to specify model terms, in addition to
&lt;a href="https://workflows.tidymodels.org//reference/add_formula.html" target="_blank" rel="noopener">&lt;code>add_formula()&lt;/code>&lt;/a> and
&lt;a href="https://workflows.tidymodels.org//reference/add_recipe.html" target="_blank" rel="noopener">&lt;code>add_recipe()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>
&lt;a href="https://workflows.tidymodels.org//reference/add_variables.html" target="_blank" rel="noopener">&lt;code>add_variables()&lt;/code>&lt;/a> has a tidyselect interface, where &lt;code>outcomes&lt;/code> are specified using bare column names, followed by &lt;code>predictors&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>linear_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/linear_reg.html'>linear_reg&lt;/a>&lt;/span>() &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>(&lt;span class='s'>"lm"&lt;/span>)
&lt;span class='k'>wf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://workflows.tidymodels.org//reference/workflow.html'>workflow&lt;/a>&lt;/span>() &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://workflows.tidymodels.org//reference/add_model.html'>add_model&lt;/a>&lt;/span>(&lt;span class='k'>linear_spec&lt;/span>) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://workflows.tidymodels.org//reference/add_variables.html'>add_variables&lt;/a>&lt;/span>(outcomes = &lt;span class='k'>mpg&lt;/span>, predictors = &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>(&lt;span class='k'>cyl&lt;/span>, &lt;span class='k'>disp&lt;/span>))
&lt;span class='k'>wf&lt;/span>
&lt;span class='c'>#&amp;gt; ══ Workflow ════════════════════════════════════════════════════════════════════&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Preprocessor:&lt;/span>&lt;span> Variables&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Model:&lt;/span>&lt;span> linear_reg()&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; ── Preprocessor ────────────────────────────────────────────────────────────────&lt;/span>
&lt;span class='c'>#&amp;gt; Outcomes: mpg&lt;/span>
&lt;span class='c'>#&amp;gt; Predictors: c(cyl, disp)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; ── Model ───────────────────────────────────────────────────────────────────────&lt;/span>
&lt;span class='c'>#&amp;gt; Linear Regression Model Specification (regression)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Computational engine: lm&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>model&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/generics/man/fit.html'>fit&lt;/a>&lt;/span>(&lt;span class='k'>wf&lt;/span>, &lt;span class='k'>mtcars&lt;/span>)
&lt;span class='k'>mold&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://workflows.tidymodels.org//reference/workflow-extractors.html'>pull_workflow_mold&lt;/a>&lt;/span>(&lt;span class='k'>model&lt;/span>)
&lt;span class='k'>mold&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='k'>predictors&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># A tibble: 32 x 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; cyl disp&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 1&lt;/span>&lt;span> 6 160 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 2&lt;/span>&lt;span> 6 160 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 3&lt;/span>&lt;span> 4 108 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 4&lt;/span>&lt;span> 6 258 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 5&lt;/span>&lt;span> 8 360 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 6&lt;/span>&lt;span> 6 225 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 7&lt;/span>&lt;span> 8 360 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 8&lt;/span>&lt;span> 4 147.&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 9&lt;/span>&lt;span> 4 141.&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>10&lt;/span>&lt;span> 6 168.&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># … with 22 more rows&lt;/span>&lt;/span>
&lt;span class='k'>mold&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='k'>outcomes&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># A tibble: 32 x 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; mpg&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 1&lt;/span>&lt;span> 21 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 2&lt;/span>&lt;span> 21 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 3&lt;/span>&lt;span> 22.8&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 4&lt;/span>&lt;span> 21.4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 5&lt;/span>&lt;span> 18.7&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 6&lt;/span>&lt;span> 18.1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 7&lt;/span>&lt;span> 14.3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 8&lt;/span>&lt;span> 24.4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'> 9&lt;/span>&lt;span> 22.8&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>10&lt;/span>&lt;span> 19.2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># … with 22 more rows&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>&lt;code>outcomes&lt;/code> are removed before &lt;code>predictors&lt;/code> is evaluated, which means that formula specifications like &lt;code>y ~ .&lt;/code> can be easily reproduced as:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://workflows.tidymodels.org//reference/workflow.html'>workflow&lt;/a>&lt;/span>() &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://workflows.tidymodels.org//reference/add_variables.html'>add_variables&lt;/a>&lt;/span>(&lt;span class='k'>mpg&lt;/span>, &lt;span class='nf'>everything&lt;/span>())
&lt;span class='c'>#&amp;gt; ══ Workflow ════════════════════════════════════════════════════════════════════&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Preprocessor:&lt;/span>&lt;span> Variables&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Model:&lt;/span>&lt;span> None&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; ── Preprocessor ────────────────────────────────────────────────────────────────&lt;/span>
&lt;span class='c'>#&amp;gt; Outcomes: mpg&lt;/span>
&lt;span class='c'>#&amp;gt; Predictors: everything()&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>&lt;strong>Importantly,
&lt;a href="https://workflows.tidymodels.org//reference/add_variables.html" target="_blank" rel="noopener">&lt;code>add_variables()&lt;/code>&lt;/a> doesn&amp;rsquo;t do any preprocessing to your columns whatsoever.&lt;/strong> This is in contrast to
&lt;a href="https://workflows.tidymodels.org//reference/add_formula.html" target="_blank" rel="noopener">&lt;code>add_formula()&lt;/code>&lt;/a>, which uses the standard
&lt;a href="https://rdrr.io/r/stats/model.matrix.html" target="_blank" rel="noopener">&lt;code>model.matrix()&lt;/code>&lt;/a> machinery from R, and
&lt;a href="https://workflows.tidymodels.org//reference/add_recipe.html" target="_blank" rel="noopener">&lt;code>add_recipe()&lt;/code>&lt;/a>, which will
&lt;a href="https://recipes.tidymodels.org/reference/prep.html" target="_blank" rel="noopener">&lt;code>recipes::prep()&lt;/code>&lt;/a> the recipe for you. It is especially useful when you aren&amp;rsquo;t using a recipe, but you do have S3 columns that you don&amp;rsquo;t want run through
&lt;a href="https://rdrr.io/r/stats/model.matrix.html" target="_blank" rel="noopener">&lt;code>model.matrix()&lt;/code>&lt;/a> for fear of losing the S3 class, like with Date columns.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>(&lt;span class='k'>&lt;a href='https://github.com/business-science/modeltime'>modeltime&lt;/a>&lt;/span>)
&lt;span class='k'>arima_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/modeltime/man/arima_reg.html'>arima_reg&lt;/a>&lt;/span>() &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>(&lt;span class='s'>"arima"&lt;/span>)
&lt;span class='k'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/data.frame.html'>data.frame&lt;/a>&lt;/span>(
y = &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/sample.html'>sample&lt;/a>&lt;/span>(&lt;span class='m'>5&lt;/span>),
date = &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.Date.html'>as.Date&lt;/a>&lt;/span>(&lt;span class='s'>"2019-01-01"&lt;/span>) &lt;span class='o'>+&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>4&lt;/span>
)
&lt;span class='k'>wf&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://workflows.tidymodels.org//reference/workflow.html'>workflow&lt;/a>&lt;/span>() &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://workflows.tidymodels.org//reference/add_variables.html'>add_variables&lt;/a>&lt;/span>(&lt;span class='k'>y&lt;/span>, &lt;span class='k'>date&lt;/span>) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://workflows.tidymodels.org//reference/add_model.html'>add_model&lt;/a>&lt;/span>(&lt;span class='k'>arima_spec&lt;/span>)
&lt;span class='k'>arima_model&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/generics/man/fit.html'>fit&lt;/a>&lt;/span>(&lt;span class='k'>wf&lt;/span>, &lt;span class='k'>df&lt;/span>)
&lt;span class='c'>#&amp;gt; frequency = 1 observations per 1 day&lt;/span>
&lt;span class='k'>arima_model&lt;/span>
&lt;span class='c'>#&amp;gt; ══ Workflow [trained] ══════════════════════════════════════════════════════════&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Preprocessor:&lt;/span>&lt;span> Variables&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='font-style: italic;'>Model:&lt;/span>&lt;span> arima_reg()&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; ── Preprocessor ────────────────────────────────────────────────────────────────&lt;/span>
&lt;span class='c'>#&amp;gt; Outcomes: y&lt;/span>
&lt;span class='c'>#&amp;gt; Predictors: date&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; ── Model ───────────────────────────────────────────────────────────────────────&lt;/span>
&lt;span class='c'>#&amp;gt; Series: outcome &lt;/span>
&lt;span class='c'>#&amp;gt; ARIMA(0,0,0) with non-zero mean &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Coefficients:&lt;/span>
&lt;span class='c'>#&amp;gt; mean&lt;/span>
&lt;span class='c'>#&amp;gt; 3.0000&lt;/span>
&lt;span class='c'>#&amp;gt; s.e. 0.6325&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; sigma^2 estimated as 2.5: log likelihood=-8.83&lt;/span>
&lt;span class='c'>#&amp;gt; AIC=21.66 AICc=27.66 BIC=20.87&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>mold&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://workflows.tidymodels.org//reference/workflow-extractors.html'>pull_workflow_mold&lt;/a>&lt;/span>(&lt;span class='k'>arima_model&lt;/span>)
&lt;span class='k'>mold&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='k'>predictors&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;'># A tibble: 5 x 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #949494;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>1&lt;/span>&lt;span> 2019-01-01&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>2&lt;/span>&lt;span> 2019-01-02&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>3&lt;/span>&lt;span> 2019-01-03&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>4&lt;/span>&lt;span> 2019-01-04&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BCBCBC;'>5&lt;/span>&lt;span> 2019-01-05&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="tune">Tune
&lt;a href="#tune">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>workflows created with
&lt;a href="https://workflows.tidymodels.org//reference/add_variables.html" target="_blank" rel="noopener">&lt;code>add_variables()&lt;/code>&lt;/a> do not work with the current CRAN version of tune (0.1.1). However, the development version of tune does have support for this, which you can install in the meantime until a new version of tune hits CRAN.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>devtools&lt;/span>::&lt;span class='nf'>&lt;a href='https://devtools.r-lib.org//reference/remote-reexports.html'>install_github&lt;/a>&lt;/span>(&lt;span class='s'>"tidymodels/tune"&lt;/span>)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to the three contributors that helped with this version of workflows
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>, and
&lt;a href="https://github.com/RaviHela" target="_blank" rel="noopener">@RaviHela&lt;/a>!&lt;/p></description></item><item><title>broom 0.7.0</title><link>https://www.tidyverse.org/blog/2020/07/broom-0-7-0/</link><pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/07/broom-0-7-0/</guid><description>&lt;p>We&amp;rsquo;re excited to announce the release of broom 0.7.0 on CRAN!&lt;/p>
&lt;p>broom is a package for summarizing statistical model objects in tidy tibbles. While several compatibility updates have been released in recent months, this is the first major update to broom in almost two years. This update includes many new tidier methods, bug fixes, improvements to existing tidier methods and their documentation, and improvements to maintainability and internal consistency. The full list of changes is available in the package
&lt;a href="https://broom.tidymodels.org/news/index.html" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;p>This release was made possible in part by the RStudio internship program, which has allowed one of us (
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">Simon Couch&lt;/a>) to work on broom full-time for the last month.&lt;/p>
&lt;p>You can install the most recent broom update with the following code:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>install.packages&lt;/span>(&lt;span class='s'>"broom"&lt;/span>)&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Then attach it for use with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>library&lt;/span>(&lt;span class='k'>&lt;a href='https://broom.tidymodels.org/reference'>broom&lt;/a>&lt;/span>)&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We&amp;rsquo;ll outline some of the more notable changes below!&lt;/p>
&lt;h2 id="new-tidier-methods">New Tidier Methods
&lt;a href="#new-tidier-methods">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>For one, this release includes support for several new model objects&amp;mdash;many of these additions came from first-time contributors to broom!&lt;/p>
&lt;ul>
&lt;li>&lt;code>anova&lt;/code> objects from the &lt;code>car&lt;/code> package&lt;/li>
&lt;li>&lt;code>pam&lt;/code> objects from the &lt;code>cluster&lt;/code> package&lt;/li>
&lt;li>&lt;code>drm&lt;/code> objects from the &lt;code>drc&lt;/code> package&lt;/li>
&lt;li>&lt;code>summary_emm&lt;/code> objects from the &lt;code>emmeans&lt;/code> package&lt;/li>
&lt;li>&lt;code>epi.2by2&lt;/code> objects from the &lt;code>epiR&lt;/code> package&lt;/li>
&lt;li>&lt;code>fixest&lt;/code> objects from the &lt;code>fixest&lt;/code> package&lt;/li>
&lt;li>&lt;code>regsubsets&lt;/code> objects from the &lt;code>leaps&lt;/code> package&lt;/li>
&lt;li>&lt;code>lm.beta&lt;/code> objects from the &lt;code>lm.beta&lt;/code> package&lt;/li>
&lt;li>&lt;code>rma&lt;/code> objects from the &lt;code>metafor&lt;/code> package&lt;/li>
&lt;li>&lt;code>mfx&lt;/code>, &lt;code>logitmfx&lt;/code>, &lt;code>negbinmfx&lt;/code>, &lt;code>poissonmfx&lt;/code>, &lt;code>probitmfx&lt;/code>, and &lt;code>betamfx&lt;/code> objects from the&lt;code>mfx&lt;/code> package&lt;/li>
&lt;li>&lt;code>lmrob&lt;/code> and &lt;code>glmrob&lt;/code> objects from the &lt;code>robustbase&lt;/code> package&lt;/li>
&lt;li>&lt;code>sarlm&lt;/code> objects from the &lt;code>spatialreg&lt;/code> package&lt;/li>
&lt;li>&lt;code>speedglm&lt;/code> objects from the &lt;code>speedglm&lt;/code> package&lt;/li>
&lt;li>&lt;code>svyglm&lt;/code> objects from the &lt;code>survey&lt;/code> package&lt;/li>
&lt;li>We have restored a simplified version of
&lt;a href="https://broom.tidymodels.org/reference/glance.aov.html" target="_blank" rel="noopener">&lt;code>glance.aov()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="improvements-and-bug-fixes-for-existing-tidiers">Improvements and Bug Fixes for Existing Tidiers
&lt;a href="#improvements-and-bug-fixes-for-existing-tidiers">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This update also features many bug fixes improvements to existing tidiers. Some of the more notable ones:&lt;/p>
&lt;ul>
&lt;li>Many improvements to the consistency of &lt;code>augment.*()&lt;/code> methods:
&lt;ul>
&lt;li>If you pass a dataset to
&lt;a href="https://rdrr.io/pkg/generics/man/augment.html" target="_blank" rel="noopener">&lt;code>augment()&lt;/code>&lt;/a> via the &lt;code>data&lt;/code> or &lt;code>newdata&lt;/code> arguments, you are now guaranteed that the augmented dataset will have exactly the same number of rows as the original dataset. This differs from previous behavior primarily when there are missing values. Previously
&lt;a href="https://rdrr.io/pkg/generics/man/augment.html" target="_blank" rel="noopener">&lt;code>augment()&lt;/code>&lt;/a> would drop rows containing &lt;code>NA&lt;/code>. This should no longer be the case. As a result, &lt;code>augment.*()&lt;/code> methods no longer accept an &lt;code>na.action&lt;/code> argument.&lt;/li>
&lt;li>In previous versions, several &lt;code>augment.*()&lt;/code> methods inherited the
&lt;a href="https://broom.tidymodels.org/reference/augment.lm.html" target="_blank" rel="noopener">&lt;code>augment.lm()&lt;/code>&lt;/a> method, but required additions to the
&lt;a href="https://broom.tidymodels.org/reference/augment.lm.html" target="_blank" rel="noopener">&lt;code>augment.lm()&lt;/code>&lt;/a> method itself. We have shifted away from this approach in favor of re-implementing many &lt;code>augment.*()&lt;/code> methods as standalone methods making use of internal helper functions. As a result,
&lt;a href="https://broom.tidymodels.org/reference/augment.lm.html" target="_blank" rel="noopener">&lt;code>augment.lm()&lt;/code>&lt;/a> and some related methods have deprecated (previously unused) arguments.&lt;/li>
&lt;li>The &lt;code>.resid&lt;/code> column in the output of &lt;code>augment().*&lt;/code> methods is now consistently defined as &lt;code>y - y_hat&lt;/code>.&lt;/li>
&lt;li>
&lt;a href="https://rdrr.io/pkg/generics/man/augment.html" target="_blank" rel="noopener">&lt;code>augment()&lt;/code>&lt;/a> tries to give an informative error when &lt;code>data&lt;/code> isn&amp;rsquo;t the original training data.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Several &lt;code>glance.*()&lt;/code> methods have been refactored in order to return a one-row tibble even when the model matrix is rank-deficient.&lt;/li>
&lt;li>Many
&lt;a href="https://rdrr.io/pkg/generics/man/glance.html" target="_blank" rel="noopener">&lt;code>glance()&lt;/code>&lt;/a> methods now return a &lt;code>nobs&lt;/code> column, which contains the number of data points used to fit the model!&lt;/li>
&lt;li>Various warnings resulting from changes to the tidyr API in v1.0.0 have been fixed.&lt;/li>
&lt;li>Added options to provide additional columns in the outputs of
&lt;a href="https://broom.tidymodels.org/reference/glance.biglm.html" target="_blank" rel="noopener">&lt;code>glance.biglm()&lt;/code>&lt;/a>,
&lt;a href="https://broom.tidymodels.org/reference/tidy.felm.html" target="_blank" rel="noopener">&lt;code>tidy.felm()&lt;/code>&lt;/a>, &lt;code>tidy.lmsobj()&lt;/code>,
&lt;a href="https://broom.tidymodels.org/reference/tidy.lmodel2.html" target="_blank" rel="noopener">&lt;code>tidy.lmodel2()&lt;/code>&lt;/a>,
&lt;a href="https://broom.tidymodels.org/reference/tidy.polr.html" target="_blank" rel="noopener">&lt;code>tidy.polr()&lt;/code>&lt;/a>,
&lt;a href="https://broom.tidymodels.org/reference/tidy.prcomp.html" target="_blank" rel="noopener">&lt;code>tidy.prcomp()&lt;/code>&lt;/a>,
&lt;a href="https://broom.tidymodels.org/reference/tidy.zoo.html" target="_blank" rel="noopener">&lt;code>tidy.zoo()&lt;/code>&lt;/a>,
&lt;a href="https://broom.tidymodels.org/reference/tidy_optim.html" target="_blank" rel="noopener">&lt;code>tidy_optim()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="breaking-changes-and-deprecations">Breaking Changes and Deprecations
&lt;a href="#breaking-changes-and-deprecations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This release also contains a number of breaking changes and deprecations meant to improve maintainability and internal consistency.&lt;/p>
&lt;ul>
&lt;li>We have changed how we report degrees of freedom for &lt;code>lm&lt;/code> objects. This is especially important for instructors in statistics courses. Previously the &lt;code>df&lt;/code> column in
&lt;a href="https://broom.tidymodels.org/reference/glance.lm.html" target="_blank" rel="noopener">&lt;code>glance.lm()&lt;/code>&lt;/a> reported the rank of the design matrix. Now it reports degrees of freedom of the numerator for the overall F-statistic. This is equal to the rank of the model matrix minus one (unless you omit an intercept column), so the new &lt;code>df&lt;/code> should be the old &lt;code>df&lt;/code> minus one.&lt;/li>
&lt;li>We are moving away from supporting &lt;code>summary.*()&lt;/code> objects. In particular, we have removed &lt;code>tidy.summary.lm()&lt;/code> as part of a major overhaul of internals. Instead of calling
&lt;a href="https://rdrr.io/pkg/generics/man/tidy.html" target="_blank" rel="noopener">&lt;code>tidy()&lt;/code>&lt;/a> on &lt;code>summary&lt;/code>-like objects, please call
&lt;a href="https://rdrr.io/pkg/generics/man/tidy.html" target="_blank" rel="noopener">&lt;code>tidy()&lt;/code>&lt;/a> directly on model objects moving forward.&lt;/li>
&lt;li>We have removed all support for the &lt;code>quick&lt;/code> argument in
&lt;a href="https://rdrr.io/pkg/generics/man/tidy.html" target="_blank" rel="noopener">&lt;code>tidy()&lt;/code>&lt;/a> methods. This is to simplify internals and is for maintainability purposes. We anticipate this will not influence many users as few people seemed to use it. If this majorly cramps your style, let us know, as we are considering a new verb to return only model parameters. In the meantime,
&lt;a href="https://rdrr.io/r/stats/coef.html" target="_blank" rel="noopener">&lt;code>stats::coef()&lt;/code>&lt;/a> together with
&lt;a href="https://tibble.tidyverse.org/reference/enframe.html" target="_blank" rel="noopener">&lt;code>tibble::enframe()&lt;/code>&lt;/a> provides most of the functionality of
&lt;a href="https://rdrr.io/pkg/generics/man/tidy.html" target="_blank" rel="noopener">&lt;code>tidy(..., quick = TRUE)&lt;/code>&lt;/a>.&lt;/li>
&lt;li>All &lt;code>conf.int&lt;/code> arguments now default to &lt;code>FALSE&lt;/code>, and all &lt;code>conf.level&lt;/code> arguments now default to &lt;code>0.95&lt;/code>. This should primarily affect
&lt;a href="https://broom.tidymodels.org/reference/tidy.survreg.html" target="_blank" rel="noopener">&lt;code>tidy.survreg()&lt;/code>&lt;/a>, which previously always returned confidence intervals, although there are some others.&lt;/li>
&lt;li>Tidiers for &lt;code>emmeans&lt;/code>-objects use the arguments &lt;code>conf.int&lt;/code> and &lt;code>conf.level&lt;/code> instead of relying on the argument names native to the &lt;code>emmeans::summary()&lt;/code>-methods (i.e., &lt;code>infer&lt;/code> and &lt;code>level&lt;/code>). Similarly, &lt;code>multcomp&lt;/code>-tidiers now include a call to &lt;code>summary()&lt;/code> as previous behavior was akin to setting the now removed argument &lt;code>quick = TRUE&lt;/code>. Both families of tidiers now use the &lt;code>adj.p.value&lt;/code> column name when appropriate. Finally, &lt;code>emmeans&lt;/code>-, &lt;code>multcomp&lt;/code>-, and &lt;code>TukeyHSD&lt;/code>-tidiers now consistently use the column names &lt;code>contrast&lt;/code> and &lt;code>null.value&lt;/code> instead of &lt;code>comparison&lt;/code>, &lt;code>level1&lt;/code> and &lt;code>level2&lt;/code>, or &lt;code>lhs&lt;/code> and &lt;code>rhs&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>This release of broom also deprecates several helper functions as well as tidier methods for a number of non-model objects, each in favor of more principled approaches from other packages (outlined in the NEWS file). Notably, though, tidiers have been deprecated for data frames, rowwise data frames, vectors, and matrices. Further, we have moved forward with the planned transfer of tidiers for mixed models to &lt;code>broom.mixed&lt;/code>.&lt;/p>
&lt;h2 id="other-changes">Other Changes
&lt;a href="#other-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Most all unit testing for the package is now supported by the
&lt;a href="https://github.com/alexpghayes/modeltests" target="_blank" rel="noopener">modeltests&lt;/a> package!&lt;/p>
&lt;p>Also, we have revised several vignettes and moved them to the tidymodels website. For backward compatibility, the existing vignettes will now simply link to the revised versions.&lt;/p>
&lt;p>Finally, the package&amp;rsquo;s website has moved from its previous tidyverse domain to
&lt;a href="https://broom.tidymodels.org/" target="_blank" rel="noopener">broom.tidymodels.org&lt;/a>.&lt;/p>
&lt;h2 id="looking-forward">Looking Forward
&lt;a href="#looking-forward">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Most notably, &lt;strong>the broom dev team is changing the process to add new tidying methods to the package.&lt;/strong> Instead, we ask that issues/PRs requesting support for new model objects be directed to the model-owning package (i.e. the package that the model is exported from) rather than to broom. If the maintainers of those packages are unable or unwilling to provide tidying methods in the model-owning package, it might be possible to add the new tidier to broom. broom is near its limit of tidiers; adding more may make the package unsustainable.&lt;/p>
&lt;p>For developers exporting tidying methods directly from model-owning packages, we are actively working to provide resources to both ease the process of writing new tidiers methods and reduce the dependency burden of taking on broom generics and helpers. As for the first point, we recently posted an
&lt;a href="https://www.tidymodels.org/learn/develop/broom/" target="_blank" rel="noopener">article&lt;/a> on the tidymodels website providing notes on best practices for writing tidiers. This article will be kept up to date as we develop new resources for easing the process of writing new tidier methods. As for the latter, the
&lt;a href="https://github.com/r-lib/generics" target="_blank" rel="noopener">&lt;code>r-lib/generics&lt;/code>&lt;/a> package provides lightweight dependencies for the main broom generics. We hope to soon provide a coherent suite of helper functions for use in external broom methods.&lt;/p>
&lt;p>We anticipate that the most active development on the broom package, looking forward, will center on improving
&lt;a href="https://rdrr.io/pkg/generics/man/augment.html" target="_blank" rel="noopener">&lt;code>augment()&lt;/code>&lt;/a> methods. We are also hoping to change our CRAN release cycle and to provide incremental updates every several months rather than major changes every couple years.&lt;/p>
&lt;h2 id="contributors">Contributors
&lt;a href="#contributors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This release features work and input from over 140 contributors (over 50 of them for their first time) since the last major release. See the package
&lt;a href="https://broom.tidymodels.org/news/index.html" target="_blank" rel="noopener">release notes&lt;/a> to see more specific notes on contributions. Thank you all for your thoughtful comments, patience, and hard work!&lt;/p>
&lt;p>
&lt;a href="https://github.com/abbylsmith" target="_blank" rel="noopener">@abbylsmith&lt;/a>,
&lt;a href="https://github.com/acoppock" target="_blank" rel="noopener">@acoppock&lt;/a>,
&lt;a href="https://github.com/ajb5d" target="_blank" rel="noopener">@ajb5d&lt;/a>,
&lt;a href="https://github.com/aloy" target="_blank" rel="noopener">@aloy&lt;/a>,
&lt;a href="https://github.com/AndrewKostandy" target="_blank" rel="noopener">@AndrewKostandy&lt;/a>,
&lt;a href="https://github.com/angusmoore" target="_blank" rel="noopener">@angusmoore&lt;/a>,
&lt;a href="https://github.com/anniew" target="_blank" rel="noopener">@anniew&lt;/a>,
&lt;a href="https://github.com/aperaltasantos" target="_blank" rel="noopener">@aperaltasantos&lt;/a>,
&lt;a href="https://github.com/asbates" target="_blank" rel="noopener">@asbates&lt;/a>,
&lt;a href="https://github.com/asondhi" target="_blank" rel="noopener">@asondhi&lt;/a>,
&lt;a href="https://github.com/asreece" target="_blank" rel="noopener">@asreece&lt;/a>,
&lt;a href="https://github.com/atyre2" target="_blank" rel="noopener">@atyre2&lt;/a>,
&lt;a href="https://github.com/bachmeil" target="_blank" rel="noopener">@bachmeil&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/bbolker" target="_blank" rel="noopener">@bbolker&lt;/a>,
&lt;a href="https://github.com/benjbuch" target="_blank" rel="noopener">@benjbuch&lt;/a>,
&lt;a href="https://github.com/bfgray3" target="_blank" rel="noopener">@bfgray3&lt;/a>,
&lt;a href="https://github.com/BibeFiu" target="_blank" rel="noopener">@BibeFiu&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/BrianOB" target="_blank" rel="noopener">@BrianOB&lt;/a>,
&lt;a href="https://github.com/briatte" target="_blank" rel="noopener">@briatte&lt;/a>,
&lt;a href="https://github.com/bruc" target="_blank" rel="noopener">@bruc&lt;/a>,
&lt;a href="https://github.com/brunaw" target="_blank" rel="noopener">@brunaw&lt;/a>,
&lt;a href="https://github.com/brunolucian" target="_blank" rel="noopener">@brunolucian&lt;/a>,
&lt;a href="https://github.com/bschneidr" target="_blank" rel="noopener">@bschneidr&lt;/a>,
&lt;a href="https://github.com/carlislerainey" target="_blank" rel="noopener">@carlislerainey&lt;/a>,
&lt;a href="https://github.com/CGMossa" target="_blank" rel="noopener">@CGMossa&lt;/a>,
&lt;a href="https://github.com/CharlesNaylor" target="_blank" rel="noopener">@CharlesNaylor&lt;/a>,
&lt;a href="https://github.com/ChuliangXiao" target="_blank" rel="noopener">@ChuliangXiao&lt;/a>,
&lt;a href="https://github.com/cimentadaj" target="_blank" rel="noopener">@cimentadaj&lt;/a>,
&lt;a href="https://github.com/crsh" target="_blank" rel="noopener">@crsh&lt;/a>,
&lt;a href="https://github.com/cwang23" target="_blank" rel="noopener">@cwang23&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dchiu911" target="_blank" rel="noopener">@dchiu911&lt;/a>,
&lt;a href="https://github.com/ddsjoberg" target="_blank" rel="noopener">@ddsjoberg&lt;/a>,
&lt;a href="https://github.com/dgrtwo" target="_blank" rel="noopener">@dgrtwo&lt;/a>,
&lt;a href="https://github.com/dmenne" target="_blank" rel="noopener">@dmenne&lt;/a>,
&lt;a href="https://github.com/dylanjm" target="_blank" rel="noopener">@dylanjm&lt;/a>,
&lt;a href="https://github.com/ecohen13" target="_blank" rel="noopener">@ecohen13&lt;/a>,
&lt;a href="https://github.com/economer" target="_blank" rel="noopener">@economer&lt;/a>,
&lt;a href="https://github.com/EDiLD" target="_blank" rel="noopener">@EDiLD&lt;/a>,
&lt;a href="https://github.com/ekatko1" target="_blank" rel="noopener">@ekatko1&lt;/a>,
&lt;a href="https://github.com/ellessenne" target="_blank" rel="noopener">@ellessenne&lt;/a>,
&lt;a href="https://github.com/ethchr" target="_blank" rel="noopener">@ethchr&lt;/a>,
&lt;a href="https://github.com/florencevdubois" target="_blank" rel="noopener">@florencevdubois&lt;/a>,
&lt;a href="https://github.com/GegznaV" target="_blank" rel="noopener">@GegznaV&lt;/a>,
&lt;a href="https://github.com/gershomtripp" target="_blank" rel="noopener">@gershomtripp&lt;/a>,
&lt;a href="https://github.com/grantmcdermott" target="_blank" rel="noopener">@grantmcdermott&lt;/a>,
&lt;a href="https://github.com/gregmacfarlane" target="_blank" rel="noopener">@gregmacfarlane&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/haozhu233" target="_blank" rel="noopener">@haozhu233&lt;/a>,
&lt;a href="https://github.com/hasenbratan" target="_blank" rel="noopener">@hasenbratan&lt;/a>,
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">@HenrikBengtsson&lt;/a>,
&lt;a href="https://github.com/hermandr" target="_blank" rel="noopener">@hermandr&lt;/a>,
&lt;a href="https://github.com/hideaki" target="_blank" rel="noopener">@hideaki&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/iago-pssjd" target="_blank" rel="noopener">@iago-pssjd&lt;/a>,
&lt;a href="https://github.com/ifellows" target="_blank" rel="noopener">@ifellows&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/Inferrator" target="_blank" rel="noopener">@Inferrator&lt;/a>,
&lt;a href="https://github.com/istvan60" target="_blank" rel="noopener">@istvan60&lt;/a>,
&lt;a href="https://github.com/jamesmartherus" target="_blank" rel="noopener">@jamesmartherus&lt;/a>,
&lt;a href="https://github.com/JanLauGe" target="_blank" rel="noopener">@JanLauGe&lt;/a>,
&lt;a href="https://github.com/jasonyang5" target="_blank" rel="noopener">@jasonyang5&lt;/a>,
&lt;a href="https://github.com/jaspercooper" target="_blank" rel="noopener">@jaspercooper&lt;/a>,
&lt;a href="https://github.com/jcfisher" target="_blank" rel="noopener">@jcfisher&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jessecambon" target="_blank" rel="noopener">@jessecambon&lt;/a>,
&lt;a href="https://github.com/jkylearmstrongibx" target="_blank" rel="noopener">@jkylearmstrongibx&lt;/a>,
&lt;a href="https://github.com/jmuhlenkamp" target="_blank" rel="noopener">@jmuhlenkamp&lt;/a>,
&lt;a href="https://github.com/JulianMutz" target="_blank" rel="noopener">@JulianMutz&lt;/a>,
&lt;a href="https://github.com/Jungpin" target="_blank" rel="noopener">@Jungpin&lt;/a>,
&lt;a href="https://github.com/jwilber" target="_blank" rel="noopener">@jwilber&lt;/a>,
&lt;a href="https://github.com/jyuu" target="_blank" rel="noopener">@jyuu&lt;/a>,
&lt;a href="https://github.com/karissawhiting" target="_blank" rel="noopener">@karissawhiting&lt;/a>,
&lt;a href="https://github.com/karldw" target="_blank" rel="noopener">@karldw&lt;/a>,
&lt;a href="https://github.com/khailper" target="_blank" rel="noopener">@khailper&lt;/a>,
&lt;a href="https://github.com/krauskae" target="_blank" rel="noopener">@krauskae&lt;/a>,
&lt;a href="https://github.com/kuriwaki" target="_blank" rel="noopener">@kuriwaki&lt;/a>,
&lt;a href="https://github.com/kyusque" target="_blank" rel="noopener">@kyusque&lt;/a>,
&lt;a href="https://github.com/KZARCA" target="_blank" rel="noopener">@KZARCA&lt;/a>,
&lt;a href="https://github.com/Laura-O" target="_blank" rel="noopener">@Laura-O&lt;/a>,
&lt;a href="https://github.com/ldlpdx" target="_blank" rel="noopener">@ldlpdx&lt;/a>,
&lt;a href="https://github.com/ldmahoney" target="_blank" rel="noopener">@ldmahoney&lt;/a>,
&lt;a href="https://github.com/lilymedina" target="_blank" rel="noopener">@lilymedina&lt;/a>,
&lt;a href="https://github.com/llendway" target="_blank" rel="noopener">@llendway&lt;/a>,
&lt;a href="https://github.com/lrose1" target="_blank" rel="noopener">@lrose1&lt;/a>,
&lt;a href="https://github.com/ltobalina" target="_blank" rel="noopener">@ltobalina&lt;/a>,
&lt;a href="https://github.com/LukasWallrich" target="_blank" rel="noopener">@LukasWallrich&lt;/a>,
&lt;a href="https://github.com/lukesonnet" target="_blank" rel="noopener">@lukesonnet&lt;/a>,
&lt;a href="https://github.com/lwjohnst86" target="_blank" rel="noopener">@lwjohnst86&lt;/a>,
&lt;a href="https://github.com/malcolmbarrett" target="_blank" rel="noopener">@malcolmbarrett&lt;/a>,
&lt;a href="https://github.com/margarethannum" target="_blank" rel="noopener">@margarethannum&lt;/a>,
&lt;a href="https://github.com/mariusbarth" target="_blank" rel="noopener">@mariusbarth&lt;/a>,
&lt;a href="https://github.com/MatthieuStigler" target="_blank" rel="noopener">@MatthieuStigler&lt;/a>,
&lt;a href="https://github.com/mattle24" target="_blank" rel="noopener">@mattle24&lt;/a>,
&lt;a href="https://github.com/mattpollock" target="_blank" rel="noopener">@mattpollock&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/mkirzon" target="_blank" rel="noopener">@mkirzon&lt;/a>,
&lt;a href="https://github.com/mlaviolet" target="_blank" rel="noopener">@mlaviolet&lt;/a>,
&lt;a href="https://github.com/Move87" target="_blank" rel="noopener">@Move87&lt;/a>,
&lt;a href="https://github.com/namarkus" target="_blank" rel="noopener">@namarkus&lt;/a>,
&lt;a href="https://github.com/nlubock" target="_blank" rel="noopener">@nlubock&lt;/a>,
&lt;a href="https://github.com/nmjakobsen" target="_blank" rel="noopener">@nmjakobsen&lt;/a>,
&lt;a href="https://github.com/ns-1m" target="_blank" rel="noopener">@ns-1m&lt;/a>,
&lt;a href="https://github.com/nt-williams" target="_blank" rel="noopener">@nt-williams&lt;/a>,
&lt;a href="https://github.com/oij11" target="_blank" rel="noopener">@oij11&lt;/a>,
&lt;a href="https://github.com/petrhrobar" target="_blank" rel="noopener">@petrhrobar&lt;/a>,
&lt;a href="https://github.com/PirateGrunt" target="_blank" rel="noopener">@PirateGrunt&lt;/a>,
&lt;a href="https://github.com/pjpaulpj" target="_blank" rel="noopener">@pjpaulpj&lt;/a>,
&lt;a href="https://github.com/pkq" target="_blank" rel="noopener">@pkq&lt;/a>,
&lt;a href="https://github.com/poppymiller" target="_blank" rel="noopener">@poppymiller&lt;/a>,
&lt;a href="https://github.com/QuLogic" target="_blank" rel="noopener">@QuLogic&lt;/a>,
&lt;a href="https://github.com/randomgambit" target="_blank" rel="noopener">@randomgambit&lt;/a>,
&lt;a href="https://github.com/riinuots" target="_blank" rel="noopener">@riinuots&lt;/a>,
&lt;a href="https://github.com/RobertoMuriel" target="_blank" rel="noopener">@RobertoMuriel&lt;/a>,
&lt;a href="https://github.com/Roisin-White" target="_blank" rel="noopener">@Roisin-White&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/rsbivand" target="_blank" rel="noopener">@rsbivand&lt;/a>,
&lt;a href="https://github.com/serina-robinson" target="_blank" rel="noopener">@serina-robinson&lt;/a>,
&lt;a href="https://github.com/shabbybanks" target="_blank" rel="noopener">@shabbybanks&lt;/a>,
&lt;a href="https://github.com/Silver-Fang" target="_blank" rel="noopener">@Silver-Fang&lt;/a>,
&lt;a href="https://github.com/Sim19" target="_blank" rel="noopener">@Sim19&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/sjackson1236" target="_blank" rel="noopener">@sjackson1236&lt;/a>,
&lt;a href="https://github.com/softloud" target="_blank" rel="noopener">@softloud&lt;/a>,
&lt;a href="https://github.com/stefvanbuuren" target="_blank" rel="noopener">@stefvanbuuren&lt;/a>,
&lt;a href="https://github.com/strengejacke" target="_blank" rel="noopener">@strengejacke&lt;/a>,
&lt;a href="https://github.com/sushmitavgopalan16" target="_blank" rel="noopener">@sushmitavgopalan16&lt;/a>,
&lt;a href="https://github.com/tcuongd" target="_blank" rel="noopener">@tcuongd&lt;/a>,
&lt;a href="https://github.com/thisisnic" target="_blank" rel="noopener">@thisisnic&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/tyluRp" target="_blank" rel="noopener">@tyluRp&lt;/a>,
&lt;a href="https://github.com/vincentarelbundock" target="_blank" rel="noopener">@vincentarelbundock&lt;/a>,
&lt;a href="https://github.com/vjcitn" target="_blank" rel="noopener">@vjcitn&lt;/a>,
&lt;a href="https://github.com/vnijs" target="_blank" rel="noopener">@vnijs&lt;/a>,
&lt;a href="https://github.com/weiyangtham" target="_blank" rel="noopener">@weiyangtham&lt;/a>,
&lt;a href="https://github.com/william3031" target="_blank" rel="noopener">@william3031&lt;/a>,
&lt;a href="https://github.com/x249wang" target="_blank" rel="noopener">@x249wang&lt;/a>,
&lt;a href="https://github.com/xieguagua" target="_blank" rel="noopener">@xieguagua&lt;/a>,
&lt;a href="https://github.com/yrosseel" target="_blank" rel="noopener">@yrosseel&lt;/a>, and
&lt;a href="https://github.com/zoews" target="_blank" rel="noopener">@zoews&lt;/a>&lt;/p></description></item><item><title>tune 0.1.1</title><link>https://www.tidyverse.org/blog/2020/07/tune-0-1-1/</link><pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/07/tune-0-1-1/</guid><description>&lt;p>We&amp;rsquo;re pleased to announce the release of
&lt;a href="https://tune.tidymodels.org/" target="_blank" rel="noopener">tune&lt;/a> 0.1.1. tune is a tidy interface for optimizing model tuning parameters.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tune&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can see a full list of changes in the
&lt;a href="https://tune.tidymodels.org/news/index.html" target="_blank" rel="noopener">release notes&lt;/a>. The release was originally motivated by
&lt;a href="https://www.tidyverse.org/tags/dplyr-1-0-0" target="_blank" rel="noopener">dplyr 1.0.0 changes&lt;/a> although there are a lot of nice, new features to talk about.&lt;/p>
&lt;h2 id="better-autoplot">Better &lt;code>autoplot()&lt;/code>
&lt;a href="#better-autoplot">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The previous plot method produces what we refer to as a &lt;em>marginal plot&lt;/em>; each predictor was plotted against performance. That is probably the best that we can do for non-regular grids (which tends to be the default in tune). Here&amp;rsquo;s an example using the
&lt;a href="https://bookdown.org/max/FES/chicago-intro.html" target="_blank" rel="noopener">Chicago train data&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Chicago&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Time-series resampling&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">7898&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">data_folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">rolling_origin&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">Chicago&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">initial&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">364&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">15&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">assess&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">7&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">skip&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">7&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">cumulative&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">svm_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">svm_rbf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cost&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">rbf_sigma&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;kernel parameter&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;kernlab&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ctrl&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">control_grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">save_pred&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">2893&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">non_regular_grid&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">svm_mod&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">tune_grid&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">ridership&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Harlem&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Archer_35th&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data_folds&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">36&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">control&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctrl&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">non_regular_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;rmse&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">ggtitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;old method, irregular grid&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/irreg-plot-old-1.svg" title="plot of chunk irreg-plot-old" alt="plot of chunk irreg-plot-old" style="display: block; margin: auto;" />&lt;/p>
&lt;p>Not bad but it could be improved in a few ways:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Both tuning parameters are generated on log scales. The data are shown above in the natural units and the data at the low end of the scale gets smashed together.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We could show its parameter label (e.g. &amp;ldquo;Radial Basis Function sigma&amp;rdquo;) when no parameter ID is given.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>What happens when a regular (i.e. factorial) grid is used?&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">grid&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">svm_mod&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">parameters&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">grid_regular&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">levels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">12&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">grid&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 36 x 2
## cost `kernel parameter`
## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 0.000977 0.0000000001
## 2 0.177 0.0000000001
## 3 32 0.0000000001
## 4 0.000977 0.000000000811
## 5 0.177 0.000000000811
## 6 32 0.000000000811
## 7 0.000977 0.00000000658
## 8 0.177 0.00000000658
## 9 32 0.00000000658
## 10 0.000977 0.0000000534
## # … with 26 more rows
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">2893&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">regular_grid&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">svm_mod&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">tune_grid&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">ridership&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Harlem&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Archer_35th&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data_folds&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">grid&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">control&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctrl&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">regular_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;rmse&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">ggtitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;old method, regular grid&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/reg-plot-old-1.svg" title="plot of chunk reg-plot-old" alt="plot of chunk reg-plot-old" style="display: block; margin: auto;" />&lt;/p>
&lt;p>This visualization also could be improved, since there might be a pattern in one parameter for each value of the other.&lt;/p>
&lt;p>The new version of tune creates improved versions of both of these plots:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">non_regular_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;rmse&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">ggtitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;new method, irregular grid&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/ap-irr-new-1.svg" title="plot of chunk ap-irr-new" alt="plot of chunk ap-irr-new" style="display: block; margin: auto;" />&lt;/p>
&lt;p>This tells a completely different story than the previous version where the parameters were in their natural units.&lt;/p>
&lt;p>The regular grid results are also much better and tell a cleaner story:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">regular_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;rmse&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">ggtitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;new method, regular grid&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/ap-reg-new-1.svg" title="plot of chunk ap-reg-new" alt="plot of chunk ap-reg-new" style="display: block; margin: auto;" />&lt;/p>
&lt;p>Extra arguments can be passed when a numeric grouping column is used;l these are given to &lt;code>format()&lt;/code>. To avoid scientific notation:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">regular_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;rmse&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">scientific&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">ggtitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Formatting for coloring column&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/ap-reg-new-new-1.svg" title="plot of chunk ap-reg-new-new" alt="plot of chunk ap-reg-new-new" style="display: block; margin: auto;" />&lt;/p>
&lt;h2 id="a-ggplot2-coord-for-plotting-observed-and-predicted-values">A ggplot2 &lt;code>coord&lt;/code> for plotting observed and predicted values
&lt;a href="#a-ggplot2-coord-for-plotting-observed-and-predicted-values">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One helpful visualization of the fit of a regression model is to plot the true outcome value against the predictions. These &lt;em>should&lt;/em> be on the same scale. Let&amp;rsquo;s look at such a plot:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">best_values&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">select_best&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">regular_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;rmse&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">best_values&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 1 x 3
## cost `kernel parameter` .config
## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;
## 1 32 0.0152 Model30
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">holdout_predictions&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">regular_grid&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">collect_predictions&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parameters&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">best_values&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">holdout_predictions&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 224 x 7
## id .pred .row cost `kernel parameter` ridership .config
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;
## 1 Slice1 17.8 5461 32 0.0152 19.6 Model30
## 2 Slice1 18.9 5462 32 0.0152 20.0 Model30
## 3 Slice1 17.5 5463 32 0.0152 20.4 Model30
## 4 Slice1 8.88 5464 32 0.0152 20.4 Model30
## 5 Slice1 3.03 5465 32 0.0152 20.1 Model30
## 6 Slice1 6.07 5466 32 0.0152 4.78 Model30
## 7 Slice1 4.48 5467 32 0.0152 3.26 Model30
## 8 Slice1 12.6 5468 32 0.0152 19.3 Model30
## 9 Slice1 15.6 5469 32 0.0152 19.3 Model30
## 10 Slice1 15.4 5470 32 0.0152 19.9 Model30
## # … with 214 more rows
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">holdout_predictions&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ridership&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">.pred&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_abline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/obs-pred-old-1.svg" title="plot of chunk obs-pred-old" alt="plot of chunk obs-pred-old" style="display: block; margin: auto;" />&lt;/p>
&lt;p>This is very helpful but there are a few possible improvements. The new version of tune has &lt;code>coord_obs_pred()&lt;/code> that produces a square plot with the same axes:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">holdout_predictions&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ridership&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">.pred&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_abline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">coord_obs_pred&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/obs-pred-new-1.svg" title="plot of chunk obs-pred-new" alt="plot of chunk obs-pred-new" style="display: block; margin: auto;" />&lt;/p>
&lt;h2 id="tuning-engine-parameters">Tuning engine parameters
&lt;a href="#tuning-engine-parameters">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://github.com/brunaw" target="_blank" rel="noopener">Bruna Wundervald&lt;/a> (from Maynooth University) gave a
&lt;a href="https://brunaw.com/slides/rladies-helsinki/talk.html#1" target="_blank" rel="noopener">great presentation&lt;/a> that used tidymodels packages. She ran into the problem that, if you wanted to tune parameters that were specific to the engine, you&amp;rsquo;d have to go through a lot of trouble to do so. This used to work well in a previous version of tune. Unfortunately, we accidentally broke it, but now you can once again tune engine specific parameters. One feature in this version of tune, along with the new 0.0.8 version of the dials package, is that we have added dials &lt;code>parameter&lt;/code> objects for every parameter that users might tuned with the existing engines that we support (this was not as difficult as it sounds).&lt;/p>
&lt;p>To demonstrate, we&amp;rsquo;ll use the time series data above, but this time we&amp;rsquo;ll optimize the ranger parameters that Bruna was interested in.&lt;/p>
&lt;p>Since parsnip has a pre-defined list of models and engines, we&amp;rsquo;ve gone ahead and set up the infrastructure for tuning most engine-specific values. For example, in the above example we could tune two regularization parameters specific to ranger.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rf_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">rand_forest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">min_n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ranger&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">regularization.factor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">regularization.usedepth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1"># Are there dials objects to work with these? &lt;/span>
&lt;span class="n">rf_param&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">parameters&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rf_mod&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rf_param&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Collection of 3 parameters for tuning
##
## id parameter type object class
## min_n min_n nparam[+]
## regularization.factor regularization.factor nparam[+]
## regularization.usedepth regularization.usedepth dparam[+]
&lt;/code>&lt;/pre>&lt;p>There are parameter objects for these (and they keep their original names). You can adjust the ranges and values for these parameters using the &lt;code>update()&lt;/code> function as you would for others. To see their underlying functions:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rf_param&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">object[[2]]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Gain Penalization (quantitative)
## Range: [0, 1]
&lt;/code>&lt;/pre>&lt;p>From here, the standard tools in the tune package can be used. You can use one of the &lt;code>grid_*()&lt;/code> functions to create a grid of values, let &lt;code>tune_grid()&lt;/code> create a set for you, or use Bayesian optimization to find appropriate values sequentially.&lt;/p>
&lt;p>The new &lt;code>autoplot()&lt;/code> method can also be used to produce nice visualizations of the relationship between performance and the parameters.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">4976&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ranger_params&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">rf_mod&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">tune_grid&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">ridership&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Harlem&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Archer_35th&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data_folds&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">control&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctrl&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ranger_params&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;rmse&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">legend.position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;top&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/rf-tune-1.svg" title="plot of chunk rf-tune" alt="plot of chunk rf-tune" style="display: block; margin: auto;" />&lt;/p>
&lt;p>Note that the tuning parameter labels (i.e. &amp;ldquo;Gain Penalization&amp;rdquo; instead of &amp;ldquo;&lt;code>regularization.factor&lt;/code>&amp;rdquo;) are used.&lt;/p>
&lt;p>I&amp;rsquo;m sure that we missed someone&amp;rsquo;s favorite engine-specific parameter so please put in a
&lt;a href="https://github.com/tidymodels/dials/issues" target="_blank" rel="noopener">GitHub issue for dials&lt;/a> to let us know.&lt;/p>
&lt;h2 id="config-columns">&lt;code>.config&lt;/code> columns
&lt;a href="#config-columns">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When model tuning is conducted, the tune package now saves a new column in the output called &lt;code>.config&lt;/code>. This column is a qualitative identification column for unique tuning parameter combinations. It often reflects what is being tuned. A value of &lt;code>.config = &amp;quot;Recipe1_Model3&amp;quot;&lt;/code> indicates that the first recipe tuning parameter set is being evaluated in conjunction with the third set of model parameters. Here&amp;rsquo;s an example from the random forest model that we just fit:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">ranger_params&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">collect_metrics&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># get the unique tuning parameter combinations:&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">min_n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">regularization.factor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">regularization.usedepth&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.config&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">distinct&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 10 x 4
## min_n regularization.factor regularization.usedepth .config
## &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;chr&amp;gt;
## 1 7 0.288 TRUE Model01
## 2 20 0.322 FALSE Model02
## 3 25 0.703 FALSE Model03
## 4 14 0.0781 FALSE Model04
## 5 36 0.882 TRUE Model05
## 6 29 0.192 FALSE Model06
## 7 35 0.404 TRUE Model07
## 8 24 0.687 TRUE Model08
## 9 3 0.580 FALSE Model09
## 10 10 0.968 TRUE Model10
&lt;/code>&lt;/pre>
&lt;h2 id="other-changes">Other changes
&lt;a href="#other-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;code>conf_mat_resampled()&lt;/code> is a new function that computes the average confusion matrix across resampling statistics for a single model.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>show_best()&lt;/code> and the &lt;code>select_*()&lt;/code> functions will now use the first metric in the metric set if no metric is supplied.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>filter_parameters()&lt;/code> can trim the &lt;code>.metrics&lt;/code> column of unwanted results (as well as columns &lt;code>.predictions&lt;/code> and &lt;code>.extracts&lt;/code>) from &lt;code>tune_*&lt;/code> objects.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If a grid is given, parameters do not need to be finalized to be used in the &lt;code>tune_*()&lt;/code> functions.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to everyone who contributed code or filed issues since the last version:
&lt;a href="https://github.com/cimentadaj" target="_blank" rel="noopener">@cimentadaj&lt;/a>,
&lt;a href="https://github.com/connor-french" target="_blank" rel="noopener">@connor-french&lt;/a>,
&lt;a href="https://github.com/cwchang-nelson" target="_blank" rel="noopener">@cwchang-nelson&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dcossyleon" target="_blank" rel="noopener">@dcossyleon&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jg43b" target="_blank" rel="noopener">@jg43b&lt;/a>,
&lt;a href="https://github.com/JHucker" target="_blank" rel="noopener">@JHucker&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/karaesmen" target="_blank" rel="noopener">@karaesmen&lt;/a>,
&lt;a href="https://github.com/kbzsl" target="_blank" rel="noopener">@kbzsl&lt;/a>,
&lt;a href="https://github.com/kylegilde" target="_blank" rel="noopener">@kylegilde&lt;/a>,
&lt;a href="https://github.com/LucyMcGowan" target="_blank" rel="noopener">@LucyMcGowan&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>,
&lt;a href="https://github.com/py9mrg" target="_blank" rel="noopener">@py9mrg&lt;/a>,
&lt;a href="https://github.com/realauggieheschmeyer" target="_blank" rel="noopener">@realauggieheschmeyer&lt;/a>,
&lt;a href="https://github.com/robyjos" target="_blank" rel="noopener">@robyjos&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/ThomasWolf0701" target="_blank" rel="noopener">@ThomasWolf0701&lt;/a>, and
&lt;a href="https://github.com/UnclAlDeveloper" target="_blank" rel="noopener">@UnclAlDeveloper&lt;/a>.&lt;/p></description></item><item><title>parsnip 0.1.2</title><link>https://www.tidyverse.org/blog/2020/07/parsnip-0-1-2/</link><pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/07/parsnip-0-1-2/</guid><description>&lt;p>We&amp;rsquo;re happy to announce the release of
&lt;a href="https://parsnip.tidymodels.org/" target="_blank" rel="noopener">parsnip&lt;/a> 0.1.2. parsnip is a unified tidy interface to many modeling techniques.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;parsnip&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can see a full list of changes in the
&lt;a href="https://parsnip.tidymodels.org/news/index.html" target="_blank" rel="noopener">release notes&lt;/a>. I&amp;rsquo;ll highlight the big changes here. The primary improvement is related to the brand new versions of the
&lt;a href="https://hardhat.tidymodels.org/news/index.html" target="_blank" rel="noopener">hardhat&lt;/a> and
&lt;a href="https://workflows.tidymodels.org/news/index.html" target="_blank" rel="noopener">workflows&lt;/a> packages.&lt;/p>
&lt;h2 id="predictor-encoding-consistency">Predictor encoding consistency
&lt;a href="#predictor-encoding-consistency">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Normally, when you give a formula to an R modeling function, the standard &lt;code>model.matrix()&lt;/code> machinery converts factor predictors to a set of binary indicator columns. However, there are a few notable exceptions:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Tree-based models, such as CART, C5.0, and random forests, don&amp;rsquo;t require binary indicator variables since their splitting methods can create groups of categories. When using a tree-based model function like &lt;code>ranger::ranger()&lt;/code>, the formula does &lt;em>not&lt;/em> create indicators; the factor predictors are left as factors.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Naive Bayes models would rather have the predictors in their native format as well, so that the predictors&amp;rsquo; conditional distributions are estimated using discrete probability distributions.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Multi-level models, such as mixed models or Bayesian hierarchical models, would prefer that the columns that are associated with random effects (e.g. subject) remain factors.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>When &lt;code>parsnip::fit()&lt;/code> is used with a modeling function that takes a formula, the formula is directly passed to the underlying model function (without processing the data). The resulting model is the same as what the underlying model would have produced. For example:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># Using older versions of: &lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parsnip&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ranger&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">modeldata&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">penguins&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">penguins&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">na.omit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">penguins&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rf_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">rand_forest&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ranger&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">seed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1221&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rf_spec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">body_mass_g&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">species&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">island&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">penguins&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## parsnip model object
##
## Fit time: 24ms
## Ranger result
##
## Call:
## ranger::ranger(formula = formula, data = data, seed = ~1221, num.threads = 1, verbose = FALSE)
##
## Type: Regression
## Number of trees: 500
## Sample size: 333
## Number of independent variables: 2
## Mtry: 1
## Target node size: 5
## Variable importance mode: none
## Splitrule: variance
## OOB prediction error (MSE): 224771.2
## R squared (OOB): 0.6533301
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">ranger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">body_mass_g&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">species&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">island&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">penguins&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">seed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1221&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Ranger result
##
## Call:
## ranger(body_mass_g ~ species + island, data = penguins, seed = 1221)
##
## Type: Regression
## Number of trees: 500
## Sample size: 333
## Number of independent variables: 2
## Mtry: 1
## Target node size: 5
## Variable importance mode: none
## Splitrule: variance
## OOB prediction error (MSE): 224771.2
## R squared (OOB): 0.6533301
&lt;/code>&lt;/pre>&lt;p>(Note the &lt;code>Number of independent variables: 2&lt;/code>).&lt;/p>
&lt;p>However, the workflows package &lt;em>does&lt;/em> process the data before giving it to the modeling function. In this case using the previous version of these packages, indicators were produced when a formula was used. As a result, instead of two predictor columns, the &lt;code>species&lt;/code> variable was expanded and five predictor columns are given to the model:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">workflows&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hardhat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rf_wflow&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rf_spec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_formula&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">body_mass_g&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">species&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">island&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rf_wflow&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">penguins&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## ══ Workflow [trained] ══════════════════════════════════════════════════════════════════════
## Preprocessor: Formula
## Model: rand_forest()
##
## ── Preprocessor ────────────────────────────────────────────────────────────────────────────
## body_mass_g ~ species + island
##
## ── Model ───────────────────────────────────────────────────────────────────────────────────
## Ranger result
##
## Call:
## ranger::ranger(formula = formula, data = data, seed = ~1221, num.threads = 1, verbose = FALSE)
##
## Type: Regression
## Number of trees: 500
## Sample size: 333
## Number of independent variables: 5
## Mtry: 2
## Target node size: 5
## Variable importance mode: none
## Splitrule: variance
## OOB prediction error (MSE): 215619.5
## R squared (OOB): 0.6674451
&lt;/code>&lt;/pre>&lt;p>Not only was the inconsistency of these two interfaces (parsnip vs. workflows) a problem, but ranger is very persnickety about column names and some indicator columns would result in errors (see, for example,
&lt;a href="https://github.com/tidymodels/tune/issues/151" target="_blank" rel="noopener">this issue&lt;/a>).&lt;/p>
&lt;p>The new set of hardhat/workflows/parsnip versions now fixes this behavior. In parsnip, each model/engine combination has a recommended set of predictor encoding methods attached to them (including a &amp;ldquo;leave my data alone&amp;rdquo; option). These are designed to be consistent with what the underlying model function expects so that there are no inconsistencies.&lt;/p>
&lt;p>You can override these new default encoding methods by using a recipe (instead of a formula) or by using a hardhat &lt;code>blueprint&lt;/code>.&lt;/p>
&lt;h2 id="one-hot-encodings">One-hot encodings
&lt;a href="#one-hot-encodings">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A full one-hot-encoding method is now available via parsnip using a contrast function. This would generate the full set of indicators for &lt;em>each factor predictor&lt;/em>. Using &lt;code>model.matrix(~ 0 + factor, data)&lt;/code> &lt;em>kind of&lt;/em> does this, but only for the first factor:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">unique_levels&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">penguins&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">species&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">island&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">distinct&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unique_levels&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">species&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## [1] &amp;quot;Adelie&amp;quot; &amp;quot;Chinstrap&amp;quot; &amp;quot;Gentoo&amp;quot;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">levels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unique_levels&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">island&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## [1] &amp;quot;Biscoe&amp;quot; &amp;quot;Dream&amp;quot; &amp;quot;Torgersen&amp;quot;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">model.matrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">species&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">island&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">unique_levels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## speciesAdelie speciesChinstrap speciesGentoo islandDream islandTorgersen
## 1 1 0 0 0 1
## 2 1 0 0 0 0
## 3 1 0 0 1 0
## 4 0 0 1 0 0
## 5 0 1 0 1 0
## attr(,&amp;quot;assign&amp;quot;)
## [1] 1 1 1 2 2
## attr(,&amp;quot;contrasts&amp;quot;)
## attr(,&amp;quot;contrasts&amp;quot;)$species
## [1] &amp;quot;contr.treatment&amp;quot;
##
## attr(,&amp;quot;contrasts&amp;quot;)$island
## [1] &amp;quot;contr.treatment&amp;quot;
&lt;/code>&lt;/pre>&lt;p>Notice that there are three indicators for &lt;code>species&lt;/code> but two for &lt;code>island&lt;/code>.&lt;/p>
&lt;p>parsnip now has a contrast function that produces the whole set:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">old_contr&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;contrasts&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">contrasts&lt;/span>
&lt;span class="n">new_contr&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">old_contr&lt;/span>
&lt;span class="n">new_contr[&lt;/span>&lt;span class="s">&amp;#34;unordered&amp;#34;&lt;/span>&lt;span class="n">]&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="s">&amp;#34;contr_one_hot&amp;#34;&lt;/span>
&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">contrasts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new_contr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">model.matrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="n">species&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">island&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">unique_levels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## (Intercept) speciesAdelie speciesChinstrap speciesGentoo islandBiscoe
## 1 1 1 0 0 0
## 2 1 1 0 0 1
## 3 1 1 0 0 0
## 4 1 0 0 1 1
## 5 1 0 1 0 0
## islandDream islandTorgersen
## 1 0 1
## 2 0 0
## 3 1 0
## 4 0 0
## 5 1 0
## attr(,&amp;quot;assign&amp;quot;)
## [1] 0 1 1 1 2 2 2
## attr(,&amp;quot;contrasts&amp;quot;)
## attr(,&amp;quot;contrasts&amp;quot;)$species
## [1] &amp;quot;contr_one_hot&amp;quot;
##
## attr(,&amp;quot;contrasts&amp;quot;)$island
## [1] &amp;quot;contr_one_hot&amp;quot;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># return to original options&lt;/span>
&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">contrasts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">old_contr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, removing the intercept does not change the nature of the indicator columns.&lt;/p>
&lt;h2 id="better-call-objects">Better call objects
&lt;a href="#better-call-objects">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In the output above when the the ranger model was fit via parsnip, the model formula in the ranger object what not the same as what we gave to &lt;code>parsnip::fit()&lt;/code>:&lt;/p>
&lt;pre>&lt;code>## parsnip model object
##
## Fit time: 24ms
## Ranger result
##
## Call:
## ranger::ranger(formula = formula, data = data, seed = ~1221, num.threads = 1, verbose = FALSE)
&lt;/code>&lt;/pre>&lt;p>In the new version of parsnip, if you use &lt;code>parsnip::fit()&lt;/code> and the underlying model uses a formula, the formula is preserved. Here&amp;rsquo;s an example using CART trees:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">cart_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">decision_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rpart&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">cart_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">cart_spec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">body_mass_g&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">species&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">island&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">penguins&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">cart_fit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## parsnip model object
##
## Fit time: 2ms
## n=342 (2 observations deleted due to missingness)
##
## node), split, n, deviance, yval
## * denotes terminal node
##
## 1) root 342 219307700 4201.754
## 2) species=Adelie,Chinstrap 219 41488530 3710.731 *
## 3) species=Gentoo 123 31004250 5076.016 *
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">cart_fit&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">call&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## rpart::rpart(formula = body_mass_g ~ species + island, data = data)
&lt;/code>&lt;/pre>&lt;p>The call still uses &lt;code>data&lt;/code> instead of &lt;code>penguins&lt;/code>. To get the right &lt;code>data&lt;/code> name, there is a &lt;code>repair_call()&lt;/code> function that can be used to get the exact data set name:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">cart_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">repair_call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cart_fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">penguins&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">cart_fit&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">call&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## rpart::rpart(formula = body_mass_g ~ species + island, data = penguins)
&lt;/code>&lt;/pre>&lt;p>There are some R packages that use the object&amp;rsquo;s formula in other functions. For example, the new
&lt;a href="https://github.com/martin-borkovec/ggparty" target="_blank" rel="noopener">&lt;code>ggparty&lt;/code>&lt;/a> package has some pretty cool methods for plotting tree-based models. To use them, the model must be converted into a &lt;code>party&lt;/code> object and this requires a proper call object. Now that we have one, we can do the conversion from an &lt;code>rpart&lt;/code> object to a &lt;code>party&lt;/code> object:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">partykit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">cart_party&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.party&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cart_fit&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">cart_party&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>##
## Model formula:
## body_mass_g ~ species + island
##
## Fitted party:
## [1] root
## | [2] species in Adelie, Chinstrap: 3710.731 (n = 219, err = 41488533.1)
## | [3] species in Gentoo: 5076.016 (n = 123, err = 31004248.0)
##
## Number of inner nodes: 1
## Number of terminal nodes: 2
&lt;/code>&lt;/pre>&lt;p>This can be used with &lt;code>ggparty&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ggparty&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">ggparty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cart_party&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_edge&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_edge_label&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_node_splitvar&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_node_plot&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">gglist&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">geom_histogram&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">body_mass_g&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">bins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">15&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;white&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/ggparty-1.svg" title="plot of chunk ggparty" alt="plot of chunk ggparty" width="60%" style="display: block; margin: auto;" />&lt;/p>
&lt;h2 id="other-new-features">Other new features
&lt;a href="#other-new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>A new main argument was added to
&lt;a href="https://parsnip.tidymodels.org/reference/boost_tree.html" target="_blank" rel="noopener">&lt;code>boost_tree()&lt;/code>&lt;/a> called &lt;code>stop_iter&lt;/code> for early stopping. The &lt;code>xgb_train()&lt;/code> function gained arguments for early stopping and a percentage of data to leave out for a validation set.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The &lt;code>predict()&lt;/code> method for &lt;code>model_fit&lt;/code>s now checks to see if required modeling packages are installed. The packages are loaded (but not attached).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The function &lt;code>req_pkgs()&lt;/code> is a user interface to determining the required packages.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many thanks to Julia Silge and Davis Vaughan for their patience and insights when discussing strategies for predictor encodings.&lt;/p>
&lt;p>Also, we want to thank everyone who contributed changes or issues since the last release:
&lt;a href="https://github.com/cgoo4" target="_blank" rel="noopener">@cgoo4&lt;/a>,
&lt;a href="https://github.com/Deleetdk" target="_blank" rel="noopener">@Deleetdk&lt;/a>,
&lt;a href="https://github.com/EllaKaye" target="_blank" rel="noopener">@EllaKaye&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/enixam" target="_blank" rel="noopener">@enixam&lt;/a>,
&lt;a href="https://github.com/FranciscoPalomares" target="_blank" rel="noopener">@FranciscoPalomares&lt;/a>,
&lt;a href="https://github.com/FrieseWoudloper" target="_blank" rel="noopener">@FrieseWoudloper&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/jtelleriar" target="_blank" rel="noopener">@jtelleriar&lt;/a>,
&lt;a href="https://github.com/kylegilde" target="_blank" rel="noopener">@kylegilde&lt;/a>,
&lt;a href="https://github.com/markbneal" target="_blank" rel="noopener">@markbneal&lt;/a>,
&lt;a href="https://github.com/markhwhiteii" target="_blank" rel="noopener">@markhwhiteii&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>,
&lt;a href="https://github.com/oude-gao" target="_blank" rel="noopener">@oude-gao&lt;/a>,
&lt;a href="https://github.com/ouzor" target="_blank" rel="noopener">@ouzor&lt;/a>,
&lt;a href="https://github.com/RichardPilbery" target="_blank" rel="noopener">@RichardPilbery&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/StefanBRas" target="_blank" rel="noopener">@StefanBRas&lt;/a>,
&lt;a href="https://github.com/stevenpawley" target="_blank" rel="noopener">@stevenpawley&lt;/a>,
&lt;a href="https://github.com/ThomasWolf0701" target="_blank" rel="noopener">@ThomasWolf0701&lt;/a>, and
&lt;a href="https://github.com/UnclAlDeveloper" target="_blank" rel="noopener">@UnclAlDeveloper&lt;/a>.&lt;/p></description></item><item><title>recipes 0.1.13</title><link>https://www.tidyverse.org/blog/2020/06/recipes-0-1-13/</link><pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/06/recipes-0-1-13/</guid><description>&lt;p>We&amp;rsquo;re very chuffed to announce the release of
&lt;a href="https://recipes.tidymodels.org" target="_blank" rel="noopener">recipes&lt;/a> 0.1.13. recipes is an alternative method for creating and preprocessing design matrices that can be used for modeling or visualization.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>install.packages&lt;/span>(&lt;span class='s'>"recipes"&lt;/span>)&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can see a full list of changes in the
&lt;a href="https://recipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">release notes&lt;/a>. There are some improvements and changes to talk about.&lt;/p>
&lt;h2 id="general-changes">General changes
&lt;a href="#general-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>First, &lt;code>step_filter()&lt;/code>, &lt;code>step_slice()&lt;/code>, &lt;code>step_sample()&lt;/code>, and &lt;code>step_naomit()&lt;/code> had their defaults for &lt;code>skip&lt;/code> changed to &lt;code>TRUE&lt;/code>. In the vast majority of applications, these steps should not be applied to the test or assessment sets.&lt;/p>
&lt;p>Also, &lt;code>step_upsample()&lt;/code> and &lt;code>step_downsample()&lt;/code> are soft deprecated in recipes as they are now available in the
&lt;a href="https://tidymodels.github.io/themis/" target="_blank" rel="noopener">themis package&lt;/a>. They will be removed in the next version.&lt;/p>
&lt;p>Finally, for the new version of dplyr, the selectors &lt;code>all_of()&lt;/code> and &lt;code>any_of()&lt;/code> can now be used in step selections.&lt;/p>
&lt;h2 id="feature-extraction-improvements">Feature extraction improvements
&lt;a href="#feature-extraction-improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In the
&lt;a href="https://en.wikipedia.org/wiki/Feature_extraction" target="_blank" rel="noopener">&lt;em>feature extraction&lt;/em>&lt;/a> category, there are two improvements. First, the &lt;code>tidy()&lt;/code> method for &lt;code>step_pca()&lt;/code> can return the percentage of variation accounted for by each
&lt;a href="https://en.wikipedia.org/wiki/Principal_component_analysis" target="_blank" rel="noopener">PCA component&lt;/a>. For example:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>library&lt;/span>(&lt;span class='k'>&lt;a href='https://rdrr.io/pkg/tidymodels/man'>tidymodels&lt;/a>&lt;/span>)
&lt;span class='c'># Many highly correlated numeric predictors:&lt;/span>
&lt;span class='nf'>data&lt;/span>(&lt;span class='k'>meats&lt;/span>, package = &lt;span class='s'>"modeldata"&lt;/span>)
&lt;span class='nf'>set.seed&lt;/span>(&lt;span class='m'>2383&lt;/span>)
&lt;span class='k'>split&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>initial_split&lt;/span>(&lt;span class='k'>meats&lt;/span>)
&lt;span class='k'>meat_tr&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>training&lt;/span>(&lt;span class='k'>split&lt;/span>)
&lt;span class='k'>meat_te&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>testing&lt;/span>(&lt;span class='k'>split&lt;/span>)
&lt;span class='k'>pca_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>recipe&lt;/span>(&lt;span class='k'>water&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='k'>fat&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='k'>protein&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='k'>.&lt;/span>, data = &lt;span class='k'>meat_tr&lt;/span>) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>step_normalize&lt;/span>(&lt;span class='nf'>all_predictors&lt;/span>()) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>step_pca&lt;/span>(&lt;span class='nf'>all_predictors&lt;/span>(), num_comp = &lt;span class='m'>10&lt;/span>, id = &lt;span class='s'>"pca"&lt;/span>) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>prep&lt;/span>()
&lt;span class='k'>var_info&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>tidy&lt;/span>(&lt;span class='k'>pca_rec&lt;/span>, id = &lt;span class='s'>"pca"&lt;/span>, type = &lt;span class='s'>"variance"&lt;/span>)
&lt;span class='nf'>table&lt;/span>(&lt;span class='k'>var_info&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='k'>terms&lt;/span>)
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; cumulative percent variance cumulative variance &lt;/span>
&lt;span class='c'>#&amp;gt; 100 100 &lt;/span>
&lt;span class='c'>#&amp;gt; percent variance variance &lt;/span>
&lt;span class='c'>#&amp;gt; 100 100&lt;/span>
&lt;span class='k'>var_info&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='k'>dplyr&lt;/span>::&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>(&lt;span class='k'>terms&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"percent variance"&lt;/span>) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>ggplot&lt;/span>(&lt;span class='nf'>aes&lt;/span>(x = &lt;span class='k'>component&lt;/span>, y = &lt;span class='k'>value&lt;/span>)) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>geom_bar&lt;/span>(stat = &lt;span class='s'>"identity"&lt;/span>) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>xlim&lt;/span>(&lt;span class='nf'>c&lt;/span>(&lt;span class='m'>0&lt;/span>, &lt;span class='m'>10&lt;/span>)) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>ylab&lt;/span>(&lt;span class='s'>"% of Total Variation"&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/pca-tidy-1.svg" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Another change in this version of recipes is that &lt;code>step_pls()&lt;/code> has received an upgrade.
&lt;a href="https://en.wikipedia.org/wiki/Partial_least_squares_regression" target="_blank" rel="noopener">Partial least squares&lt;/a> (PLS) is similar to PCA but takes the outcome(s) into account.&lt;/p>
&lt;p>Previously, it used the
&lt;a href="https://github.com/bhmevik/pls" target="_blank" rel="noopener">pls package&lt;/a> to do the computations. That&amp;rsquo;s a great package but it lacks two important features: allow for a categorical outcome value (e.g. &amp;ldquo;pls-da&amp;rdquo; for &lt;em>discriminant analysis&lt;/em>) or allow for sparsity in the coefficients. Sparsity would facilitate simpler and perhaps more robust models.&lt;/p>
&lt;p>&lt;code>step_pls()&lt;/code> now uses the Bioconductor
&lt;a href="https://www.bioconductor.org/packages/release/bioc/html/mixOmics.html" target="_blank" rel="noopener">mixOmics package&lt;/a>. As such, the outcome data can now be a factor and a new argument &lt;code>predictor_prop&lt;/code> is used for sparsity. That argument specifies the maximum proportion of partial least squares loadings that will be &lt;em>non-zero&lt;/em> (per component) during training. Newly prepped recipes will use this package but previously created recipes still use the pls package. For our previous example, let&amp;rsquo;s look at the protein outcome and build a recipe:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>pls_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>
&lt;span class='nf'>recipe&lt;/span>(&lt;span class='k'>water&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='k'>fat&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='k'>protein&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='k'>.&lt;/span>, data = &lt;span class='k'>meat_tr&lt;/span>) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>step_normalize&lt;/span>(&lt;span class='nf'>all_predictors&lt;/span>()) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>step_pls&lt;/span>(
&lt;span class='nf'>all_predictors&lt;/span>(),
outcome = &lt;span class='nf'>vars&lt;/span>(&lt;span class='k'>protein&lt;/span>),
num_comp = &lt;span class='m'>3&lt;/span>,
predictor_prop = &lt;span class='m'>0.75&lt;/span>,
id = &lt;span class='s'>"pls"&lt;/span>
) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>prep&lt;/span>()
&lt;span class='c'># for new data: &lt;/span>
&lt;span class='nf'>bake&lt;/span>(&lt;span class='k'>pls_rec&lt;/span>, &lt;span class='k'>meat_te&lt;/span>, &lt;span class='k'>protein&lt;/span>, &lt;span class='nf'>starts_with&lt;/span>(&lt;span class='s'>"PLS"&lt;/span>)) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='k'>tidyr&lt;/span>::&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_longer.html'>pivot_longer&lt;/a>&lt;/span>(cols = &lt;span class='nf'>c&lt;/span>(&lt;span class='o'>-&lt;/span>&lt;span class='k'>protein&lt;/span>),
names_to = &lt;span class='s'>"component"&lt;/span>,
values_to = &lt;span class='s'>"values"&lt;/span>) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>ggplot&lt;/span>(&lt;span class='nf'>aes&lt;/span>(x = &lt;span class='k'>values&lt;/span>, y = &lt;span class='k'>protein&lt;/span>)) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>geom_point&lt;/span>(alpha = &lt;span class='m'>0.5&lt;/span>) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>facet_wrap&lt;/span>(&lt;span class='o'>~&lt;/span> &lt;span class='k'>component&lt;/span>, scale = &lt;span class='s'>"free_x"&lt;/span>) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>xlab&lt;/span>(&lt;span class='s'>"PLS Score"&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/pls-1.svg" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>What are the PLS coefficients from this?&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>tidy&lt;/span>(&lt;span class='k'>pls_rec&lt;/span>, id = &lt;span class='s'>"pls"&lt;/span>) &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>ggplot&lt;/span>(&lt;span class='nf'>aes&lt;/span>(x = &lt;span class='k'>component&lt;/span>, y = &lt;span class='k'>terms&lt;/span>, fill = &lt;span class='k'>value&lt;/span>)) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>geom_tile&lt;/span>() &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>scale_fill_gradient2&lt;/span>(
low = &lt;span class='s'>"#B2182B"&lt;/span>,
mid = &lt;span class='s'>"white"&lt;/span>,
high = &lt;span class='s'>"#2166AC"&lt;/span>,
limits = &lt;span class='nf'>c&lt;/span>(&lt;span class='o'>-&lt;/span>&lt;span class='m'>0.4&lt;/span>, &lt;span class='m'>0.4&lt;/span>)
) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>theme&lt;/span>(axis.text.y = &lt;span class='nf'>element_blank&lt;/span>()) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>ylab&lt;/span>(&lt;span class='s'>"Predictors"&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/pls-coef-1.svg" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>The third component has the largest coefficients and the largest effect on predicting the percentage of protein. This is consistent with the scatter plot above. The blocks of white in the heatmap above are coefficients effected by the sparsity argument.&lt;/p></description></item><item><title>embed 0.1.0</title><link>https://www.tidyverse.org/blog/2020/06/embed-0-1-0/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/06/embed-0-1-0/</guid><description>&lt;p>There is a new release of the
&lt;a href="https://embed.tidymodels.org" target="_blank" rel="noopener">embed package&lt;/a> on
&lt;a href="https://cran.r-project.org/package=embed" target="_blank" rel="noopener">CRAN&lt;/a>. embed contains a number of recipe steps that can be used to represent predictors using a smaller set of artificial features. Some of these methods are &lt;em>supervised&lt;/em> (i.e., it uses the outcome data) and others are &lt;em>unsupervised&lt;/em> (the outcome is not considered). The recipes package already contains similar methods (e.g. principal component analysis, partial least squares, etc.). embed has more sophisticated method and these tend to have more significant package dependencies such as stan and tensorflow.&lt;/p>
&lt;p>The current roster of methods in the embed package are:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;em>Entity embeddings&lt;/em> where categorical predictors are decomposed into a set of smaller numeric features (supervised,
&lt;a href="https://embed.tidymodels.org/reference/step_embed.html" target="_blank" rel="noopener">&lt;code>step_embed()&lt;/code>&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>Effect encodings&lt;/em> model categorical predictors against the outcome and the resulting coefficients are used as the numeric features (supervised,
&lt;a href="https://embed.tidymodels.org/reference/index.html" target="_blank" rel="noopener">&lt;code>step_lencode_*()&lt;/code>&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>Weight of evidence transformation&lt;/em> that use measures of association for categorical predictors and categorical outcomes to generate new features (supervised,
&lt;a href="https://embed.tidymodels.org/reference/step_woe.html" target="_blank" rel="noopener">&lt;code>step_woe()&lt;/code>&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>Uniform manifold approximation and projections&lt;/em> (UMAP) estimate local, low-dimensional representations of numeric predictors (supervised or unsupervised,
&lt;a href="https://embed.tidymodels.org/reference/step_umap.html" target="_blank" rel="noopener">&lt;code>step_umap()&lt;/code>&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>Discretization methods&lt;/em> of numeric predictors using tree-based methods (supervised,
&lt;a href="https://embed.tidymodels.org/reference/index.html" target="_blank" rel="noopener">&lt;code>step_discretize_*()&lt;/code>&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>Feature hashing&lt;/em> creates dummy variables using hashing methods (unsupervised,
&lt;a href="https://embed.tidymodels.org/reference/step_feature_hash.html" target="_blank" rel="noopener">&lt;code>step_feature_hash()&lt;/code>&lt;/a>).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>The latter two sets of steps are only in this new version. Let&amp;rsquo;s look at these two methods in detail.&lt;/p>
&lt;h2 id="discretization">Discretization
&lt;a href="#discretization">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I am
&lt;a href="https://bookdown.org/max/FES/numeric-one-to-many.html#binning" target="_blank" rel="noopener">not a huge fan&lt;/a> of taking numeric data and re-encoding them as categorical predictors. There is mostly likely a loss of information by doing so and other methods, such as splines, are probably a better approach overall. However, I&amp;rsquo;m willing to admit that there might be some data sets where binning works best.&lt;/p>
&lt;p>The recipes package already includes &lt;code>step_discretize()&lt;/code>. This is an unsupervised method that creates the bins using percentiles of the data (so that the new categories have about the same frequency). The new methods in embed use the outcome data (numeric or categorical) to determine the values of the bins as well as how many bins are required.&lt;/p>
&lt;p>Konrad Semsch contributed
&lt;a href="https://embed.tidymodels.org/reference/step_discretize_xgb.html" target="_blank" rel="noopener">&lt;code>step_discretize_xgb()&lt;/code>&lt;/a>) which uses an xgboost model. An initial boosting model is created with a single numeric predictor and the unique splits across boosting iterations are used to discretize the predictor. Here&amp;rsquo;s an example predictor from the Ames housing data:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">embed&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AmesHousing&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ames&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">make_ames&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># Remove quality-related predictors&lt;/span>
&lt;span class="n">dplyr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nf">matches&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Qu&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">4595&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">data_split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">initial_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">strata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Sale_Price&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ames_train&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">training&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ames_test&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">theme_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">theme_bw&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Longitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Sale_Price&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">scale_y_log10&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/ames-longitude-1.svg" alt="plot of chunk ames-longitude">&lt;/p>
&lt;p>Because the Iowa State University is in the center of Ames, there are discontinuous relationships between the sale price of houses and longitude. There&amp;rsquo;s a relationship here but it is nonlinear and complex. To discretize these data:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">525&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ames_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sale_Price&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ames_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sale_Price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">base&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_discretize_xgb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Longitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">outcome&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Sale_Price&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;xgb&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>tidy()&lt;/code> method can be used to show the estimated breaks:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">breaks&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">tidy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;xgb&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">breaks&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## [1] -93.68667 -93.67038 -93.65519 -93.64602 -93.63570 -93.62575 -93.61737
&lt;/code>&lt;/pre>&lt;p>The consequence of using &lt;code>step_discretize_xgb()&lt;/code> is that the numeric predictor &lt;code>Longitude&lt;/code> is converted to a factor with 8 levels:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">bake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ames_test&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Longitude&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 731 x 1
## Longitude
## &amp;lt;fct&amp;gt;
## 1 [-93.63,-93.62)
## 2 [-93.63,-93.62)
## 3 [-93.65,-93.64)
## 4 [-93.64,-93.63)
## 5 [-93.64,-93.63)
## 6 [-93.64,-93.63)
## 7 [-93.64,-93.63)
## 8 [-93.66,-93.65)
## 9 [-93.66,-93.65)
## 10 [-93.66,-93.65)
## # … with 721 more rows
&lt;/code>&lt;/pre>&lt;p>For the test set, here are the breaks:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ames_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Longitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Sale_Price&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_vline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xintercept&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">breaks&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;blue&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.7&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">scale_y_log10&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/ames-longitude-breaks-1.svg" alt="plot of chunk ames-longitude-breaks">&lt;/p>
&lt;p>&lt;code>step_discretize_xgb()&lt;/code> and &lt;code>step_discretize_cart()&lt;/code> contain arguments for the common tuning parameters (e.g. the number of breaks, tree depth, etc.) that can be optimized using the tune package. Also, it is possible that the tree model cannot find any informative splits of a predictor. In this case, a warning is issued and the predictor is not discretized.&lt;/p>
&lt;h2 id="feature-hashing">Feature hashing
&lt;a href="#feature-hashing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When converting a
&lt;a href="https://bookdown.org/max/FES/creating-dummy-variables-for-unordered-categories.html" target="_blank" rel="noopener">categorical predictor to a numeric encoding&lt;/a>, the traditional approach is to make a collection of binary indicator variables. If the original data have &lt;code>C&lt;/code> levels, the standard approach is to create &lt;code>C - 1&lt;/code> new columns using the levels observed within the training set. A slightly different method is &lt;em>one-hot encoding&lt;/em> which creates the full set of &lt;code>C&lt;/code> indicators. The important points for these methods are:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The indicators can only be created for the levels in the training set. There is a 1:1 mapping between the levels and the indicator columns.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A &amp;ldquo;new&amp;rdquo; category could also be issued in case future samples contain other levels.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When &lt;code>C&lt;/code> is very large, this approach is problematic since many indicators are created and many of these will be infrequently observed in the data.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>One alternative method for making indicator variables is
&lt;a href="https://bookdown.org/max/FES/encoding-predictors-with-many-categories.html" target="_blank" rel="noopener">&lt;em>feature hashing&lt;/em>&lt;/a>. This method uses the actual value of the levels to decide which indicator column that the sample should be mapped to. Also, the number of indicators can be less than &lt;code>C&lt;/code>. The math used in the background originate in cryptography and are
&lt;a href="https://en.wikipedia.org/wiki/Hash_function" target="_blank" rel="noopener">pretty interesting&lt;/a>.&lt;/p>
&lt;p>Let&amp;rsquo;s look again at the Ames data. The neighborhood predictor has 28 possible values. This is by no means large but it can be used to illustrate how this method works. Instead of creating 27 indicator columns, let&amp;rsquo;s use 10 instead.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">hash_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sale_Price&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">Neighborhood&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ames_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># For illustration only, `preserve` is used to keep the original column. &lt;/span>
&lt;span class="nf">step_feature_hash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Neighborhood&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num_hash&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">preserve&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>There is no actual estimation used so far. When generating the values, the hashing function is used to create the indicators:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">all_nhood&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">ames&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Neighborhood&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">distinct&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">hashed&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">bake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hash_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">all_nhood&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Neighborhood&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">hashed&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 28 x 11
## Neighborhood Neighborhood_ha… Neighborhood_ha… Neighborhood_ha…
## &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 North_Ames 0 0 0
## 2 Gilbert 0 0 0
## 3 Stone_Brook 0 0 0
## 4 Northwest_A… 1 0 0
## 5 Somerset 0 0 1
## 6 Briardale 0 0 0
## 7 Northpark_V… 0 0 0
## 8 Northridge_… 0 0 0
## 9 Bloomington… 0 0 0
## 10 Northridge 0 0 0
## # … with 18 more rows, and 7 more variables: Neighborhood_hash_04 &amp;lt;dbl&amp;gt;,
## # Neighborhood_hash_05 &amp;lt;dbl&amp;gt;, Neighborhood_hash_06 &amp;lt;dbl&amp;gt;,
## # Neighborhood_hash_07 &amp;lt;dbl&amp;gt;, Neighborhood_hash_08 &amp;lt;dbl&amp;gt;,
## # Neighborhood_hash_09 &amp;lt;dbl&amp;gt;, Neighborhood_hash_10 &amp;lt;dbl&amp;gt;
&lt;/code>&lt;/pre>&lt;p>How were neighborhoods mapped to indicators in these data? Each neighborhood only maps to a single row. However, unlike the traditional methods, multiple neighborhoods are likely to be mapped to the same indicator column:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">hashed&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="n">tidyr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">pivot_longer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cols&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hash&amp;#34;&lt;/span>&lt;span class="p">)),&lt;/span>
&lt;span class="n">names_to&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;column&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">values_to&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">column&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num_neighborhood&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 10 x 2
## column num_neighborhood
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
## 1 Neighborhood_hash_01 4
## 2 Neighborhood_hash_02 2
## 3 Neighborhood_hash_03 3
## 4 Neighborhood_hash_04 2
## 5 Neighborhood_hash_05 2
## 6 Neighborhood_hash_06 4
## 7 Neighborhood_hash_07 3
## 8 Neighborhood_hash_08 4
## 9 Neighborhood_hash_09 4
## 10 Neighborhood_hash_10 0
&lt;/code>&lt;/pre>&lt;p>For this configuration, multiple neighborhoods are mapped to the same feature. In statistics, this is called &lt;em>aliasing&lt;/em> or &lt;em>confounding&lt;/em>. While sometime required, confounding methods should generally alias different values to the same feature using some sort of optimality criterion. Feature hashing does not appear to be optimal in any way that is relevant to modeling. Also note in the output above that some hash features will have no indicators. It might be a good practice to follow this step with &lt;code>step_zv()&lt;/code> to remove them.&lt;/p>
&lt;p>On the bright side, new neighborhoods can be easily mapped. For example:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Novigrad&lt;/code> would be mapped to column 1.&lt;/li>
&lt;li>&lt;code>Brokilon Forest&lt;/code> would be mapped to column 4.&lt;/li>
&lt;li>&lt;code>Brokilon forest&lt;/code> would be mapped to column 9.&lt;/li>
&lt;/ul>
&lt;p>As the last two examples show, the actual value of the factor level is used. Also note that, if a different number of features are created, the mapping will also change.&lt;/p>
&lt;p>This step requires the
&lt;a href="https://keras.rstudio.com/" target="_blank" rel="noopener">keras&lt;/a> R package along with a working
&lt;a href="https://tensorflow.rstudio.com/installation/" target="_blank" rel="noopener">tensorflow&lt;/a> installation.&lt;/p>
&lt;h2 id="hex-logo">Hex logo
&lt;a href="#hex-logo">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The embed package doesn&amp;rsquo;t have a hex logo. If you would like to propose one, please
&lt;a href="https://twitter.com/topepos" target="_blank" rel="noopener">tweet at us&lt;/a> or
&lt;a href="mailto:max@rstudio.com">email&lt;/a>!&lt;/p></description></item><item><title>rules 0.0.1</title><link>https://www.tidyverse.org/blog/2020/05/rules-0-0-1/</link><pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/05/rules-0-0-1/</guid><description>&lt;p>We are happy to announce the release of the
&lt;a href="https://rules.tidymodels.org" target="_blank" rel="noopener">rules package&lt;/a> on
&lt;a href="https://cran.r-project.org/package=rules" target="_blank" rel="noopener">CRAN&lt;/a>. rules is another &amp;ldquo;parsnip-adjacent&amp;rdquo; package that enables a specific class of models within the tidymodels infrastructure. rules currently contains three models:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>C5_rules()&lt;/code>: classification rule sets based on the C5.0 model.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>cubist_rules()&lt;/code>: regression rules using Cubist.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>rule_fit()&lt;/code>: classification or regression rules using the RuleFit model.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>If you aren&amp;rsquo;t familiar with rule-based models, there is a
&lt;a href="https://rviews.rstudio.com/2020/05/21/modern-rule-based-models/" target="_blank" rel="noopener">companion blog post&lt;/a> that summarizes how they work.&lt;/p>
&lt;p>Install rules from CRAN like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rules&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then attach it for use via:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rules&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here&amp;rsquo;s an example of creating Cubist regression rules via the
&lt;a href="https://tune.tidymodels.org/" target="_blank" rel="noopener">parsnip package&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ──────────────────────────────────── tidymodels 0.1.0 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ broom 0.5.6 ✓ recipes 0.1.12&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dials 0.0.6 ✓ rsample 0.0.6&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dplyr 0.8.5 ✓ tibble 3.0.1&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ ggplot2 3.3.0 ✓ tune 0.1.0&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ infer 0.5.1 ✓ workflows 0.1.1&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ parsnip 0.1.1 ✓ yardstick 0.0.6&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ purrr 0.3.4&lt;/span>
&lt;span class="c1">#&amp;gt; ── Conflicts ─────────────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class="c1">#&amp;gt; x purrr::accumulate() masks foreach::accumulate()&lt;/span>
&lt;span class="c1">#&amp;gt; x purrr::discard() masks scales::discard()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::filter() masks stats::filter()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::lag() masks stats::lag()&lt;/span>
&lt;span class="c1">#&amp;gt; x ggplot2::margin() masks dials::margin()&lt;/span>
&lt;span class="c1">#&amp;gt; x recipes::step() masks stats::step()&lt;/span>
&lt;span class="c1">#&amp;gt; x purrr::when() masks foreach::when()&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rules&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_prices&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">9932&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">car_split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">initial_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_prices&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">car_tr&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">training&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">car_te&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># A single rule set:&lt;/span>
&lt;span class="n">cubist_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">cubist_rules&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">neighbors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">7&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Cubist&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">cubist_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">cubist_mod&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">log10&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Price&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">car_tr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">summary&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cubist_fit&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Call:&lt;/span>
&lt;span class="c1">#&amp;gt; cubist.default(x = x, y = y, committees = 1)&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Cubist [Release 2.07 GPL Edition] Wed May 20 21:39:22 2020&lt;/span>
&lt;span class="c1">#&amp;gt; ---------------------------------&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Target attribute `outcome&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Read 603 cases (18 attributes) from undefined.data&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Model:&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Rule 1: [210 cases, mean 4.116360, range 3.94295 to 4.2505, est err 0.030756]&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; if&lt;/span>
&lt;span class="c1">#&amp;gt; Cylinder &amp;lt;= 4&lt;/span>
&lt;span class="c1">#&amp;gt; Saab &amp;lt;= 0&lt;/span>
&lt;span class="c1">#&amp;gt; then&lt;/span>
&lt;span class="c1">#&amp;gt; outcome = 4.115185 + 0.12 Saab - 3.5e-06 Mileage + 0.017 Cylinder&lt;/span>
&lt;span class="c1">#&amp;gt; - 0.087 hatchback - 0.029 Chevy + 0.046 wagon + 0.028 Leather&lt;/span>
&lt;span class="c1">#&amp;gt; + 0.041 Cadillac - 0.024 sedan + 0.027 convertible&lt;/span>
&lt;span class="c1">#&amp;gt; + 0.006 Doors + 0.012 Buick&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Rule 2: [8 cases, mean 4.207121, range 4.13308 to 4.26696, est err 0.006589]&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; if&lt;/span>
&lt;span class="c1">#&amp;gt; Cylinder &amp;gt; 4&lt;/span>
&lt;span class="c1">#&amp;gt; Saturn &amp;gt; 0&lt;/span>
&lt;span class="c1">#&amp;gt; then&lt;/span>
&lt;span class="c1">#&amp;gt; outcome = 3.88624 + 0.057 Cylinder + 0.2 Saab + 0.141 Cadillac&lt;/span>
&lt;span class="c1">#&amp;gt; - 3.8e-06 Mileage - 0.054 sedan + 0.094 convertible&lt;/span>
&lt;span class="c1">#&amp;gt; - 0.085 hatchback + 0.019 Doors + 0.04 Buick + 0.014 Cruise&lt;/span>
&lt;span class="c1">#&amp;gt; + 0.01 Leather + 0.007 Sound + 0.007 Saturn&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Rule 3: [33 cases, mean 4.229076, range 4.16741 to 4.29184, est err 0.012903]&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; if&lt;/span>
&lt;span class="c1">#&amp;gt; Cylinder &amp;gt; 4&lt;/span>
&lt;span class="c1">#&amp;gt; Cruise &amp;lt;= 0&lt;/span>
&lt;span class="c1">#&amp;gt; then&lt;/span>
&lt;span class="c1">#&amp;gt; outcome = 4.265627 - 3.7e-06 Mileage + 0.039 Chevy&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Rule 4: [94 cases, mean 4.272727, range 4.18913 to 4.4427, est err 0.034717]&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; if&lt;/span>
&lt;span class="c1">#&amp;gt; Mileage &amp;gt; 3946&lt;/span>
&lt;span class="c1">#&amp;gt; Cylinder &amp;gt; 4&lt;/span>
&lt;span class="c1">#&amp;gt; Doors &amp;gt; 2&lt;/span>
&lt;span class="c1">#&amp;gt; Cruise &amp;gt; 0&lt;/span>
&lt;span class="c1">#&amp;gt; Buick &amp;lt;= 0&lt;/span>
&lt;span class="c1">#&amp;gt; Cadillac &amp;lt;= 0&lt;/span>
&lt;span class="c1">#&amp;gt; Saturn &amp;lt;= 0&lt;/span>
&lt;span class="c1">#&amp;gt; then&lt;/span>
&lt;span class="c1">#&amp;gt; outcome = 4.037203 + 0.051 Cylinder - 4.3e-06 Mileage + 0.061 Saab&lt;/span>
&lt;span class="c1">#&amp;gt; + 0.044 Cadillac - 0.016 sedan + 0.029 convertible&lt;/span>
&lt;span class="c1">#&amp;gt; - 0.026 hatchback + 0.006 Doors - 0.009 Chevy + 0.012 Buick&lt;/span>
&lt;span class="c1">#&amp;gt; + 0.004 Cruise&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Rule 5: [57 cases, mean 4.314541, range 4.17208 to 4.42864, est err 0.049758]&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; if&lt;/span>
&lt;span class="c1">#&amp;gt; Buick &amp;gt; 0&lt;/span>
&lt;span class="c1">#&amp;gt; then&lt;/span>
&lt;span class="c1">#&amp;gt; outcome = 4.389884 - 3e-06 Mileage&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Rule 6: [9 cases, mean 4.341528, range 4.23957 to 4.66962, est err 0.036309]&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; if&lt;/span>
&lt;span class="c1">#&amp;gt; Mileage &amp;lt;= 3946&lt;/span>
&lt;span class="c1">#&amp;gt; Cylinder &amp;gt; 4&lt;/span>
&lt;span class="c1">#&amp;gt; Cadillac &amp;lt;= 0&lt;/span>
&lt;span class="c1">#&amp;gt; then&lt;/span>
&lt;span class="c1">#&amp;gt; outcome = 3.439093 + 5.28e-05 Mileage + 0.129 Cylinder&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Rule 7: [43 cases, mean 4.354487, range 4.1778 to 4.60071, est err 0.031792]&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; if&lt;/span>
&lt;span class="c1">#&amp;gt; Cylinder &amp;gt; 4&lt;/span>
&lt;span class="c1">#&amp;gt; Doors &amp;lt;= 2&lt;/span>
&lt;span class="c1">#&amp;gt; Cruise &amp;gt; 0&lt;/span>
&lt;span class="c1">#&amp;gt; convertible &amp;lt;= 0&lt;/span>
&lt;span class="c1">#&amp;gt; then&lt;/span>
&lt;span class="c1">#&amp;gt; outcome = 3.40984 + 0.13 Cylinder + 0.116 Chevy - 2.7e-06 Mileage&lt;/span>
&lt;span class="c1">#&amp;gt; + 0.037 Sound + 0.031 Leather&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Rule 8: [85 cases, mean 4.462877, range 4.34723 to 4.58348, est err 0.023398]&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; if&lt;/span>
&lt;span class="c1">#&amp;gt; Saab &amp;gt; 0&lt;/span>
&lt;span class="c1">#&amp;gt; then&lt;/span>
&lt;span class="c1">#&amp;gt; outcome = 4.522928 - 3.4e-06 Mileage + 0.064 Saab - 0.021 Doors&lt;/span>
&lt;span class="c1">#&amp;gt; - 0.035 sedan + 0.009 Cylinder + 0.022 Cadillac&lt;/span>
&lt;span class="c1">#&amp;gt; - 0.024 hatchback + 0.015 convertible - 0.004 Chevy&lt;/span>
&lt;span class="c1">#&amp;gt; + 0.006 Buick&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Rule 9: [60 cases, mean 4.592824, range 4.44778 to 4.84976, est err 0.041948]&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; if&lt;/span>
&lt;span class="c1">#&amp;gt; Cadillac &amp;gt; 0&lt;/span>
&lt;span class="c1">#&amp;gt; then&lt;/span>
&lt;span class="c1">#&amp;gt; outcome = 4.774347 - 0.103 Doors + 0.036 Cylinder - 3.4e-06 Mileage&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Rule 10: [7 cases, mean 4.625017, range 4.58911 to 4.6727, est err 0.006627]&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; if&lt;/span>
&lt;span class="c1">#&amp;gt; Cylinder &amp;gt; 4&lt;/span>
&lt;span class="c1">#&amp;gt; Cadillac &amp;lt;= 0&lt;/span>
&lt;span class="c1">#&amp;gt; convertible &amp;gt; 0&lt;/span>
&lt;span class="c1">#&amp;gt; then&lt;/span>
&lt;span class="c1">#&amp;gt; outcome = 4.693132 - 3.9e-06 Mileage&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Evaluation on training data (603 cases):&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Average |error| 0.032526&lt;/span>
&lt;span class="c1">#&amp;gt; Relative |error| 0.23&lt;/span>
&lt;span class="c1">#&amp;gt; Correlation coefficient 0.97&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Attribute usage:&lt;/span>
&lt;span class="c1">#&amp;gt; Conds Model&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 67% 84% Cylinder&lt;/span>
&lt;span class="c1">#&amp;gt; 49% 66% Saab&lt;/span>
&lt;span class="c1">#&amp;gt; 28% 66% Cadillac&lt;/span>
&lt;span class="c1">#&amp;gt; 28% 17% Cruise&lt;/span>
&lt;span class="c1">#&amp;gt; 25% 66% Buick&lt;/span>
&lt;span class="c1">#&amp;gt; 23% 75% Doors&lt;/span>
&lt;span class="c1">#&amp;gt; 17% 100% Mileage&lt;/span>
&lt;span class="c1">#&amp;gt; 17% 1% Saturn&lt;/span>
&lt;span class="c1">#&amp;gt; 8% 66% convertible&lt;/span>
&lt;span class="c1">#&amp;gt; 77% Chevy&lt;/span>
&lt;span class="c1">#&amp;gt; 66% hatchback&lt;/span>
&lt;span class="c1">#&amp;gt; 66% sedan&lt;/span>
&lt;span class="c1">#&amp;gt; 43% Leather&lt;/span>
&lt;span class="c1">#&amp;gt; 35% wagon&lt;/span>
&lt;span class="c1">#&amp;gt; 8% Sound&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; Time: 0.0 secs&lt;/span>
&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cubist_fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">car_te&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Price&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 201 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; .pred&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 4.32&lt;/span>
&lt;span class="c1">#&amp;gt; 2 4.49&lt;/span>
&lt;span class="c1">#&amp;gt; 3 4.54&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4.54&lt;/span>
&lt;span class="c1">#&amp;gt; 5 4.43&lt;/span>
&lt;span class="c1">#&amp;gt; 6 4.43&lt;/span>
&lt;span class="c1">#&amp;gt; 7 4.46&lt;/span>
&lt;span class="c1">#&amp;gt; 8 4.44&lt;/span>
&lt;span class="c1">#&amp;gt; 9 4.37&lt;/span>
&lt;span class="c1">#&amp;gt; 10 4.48&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 191 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The functions also work with the
&lt;a href="https://tune.tidymodels.org/" target="_blank" rel="noopener">tune package&lt;/a>. To optimize our model, the number of committees (similar to boosting iterations) and the number of nearest-neighbors are the primary parameters for tuning.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">cb_grid&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">expand.grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">committees&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">neighbors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">9&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">8226&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">car_folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vfold_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_tr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">cubist_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">cubist_rules&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">neighbors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">committees&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Cubist&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">car_tune_res&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">cubist_mod&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">tune_grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">log10&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Price&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">car_folds&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cb_grid&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">car_tune_res&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">collect_metrics&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.metric&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;rmse&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">neighbors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">neighbors&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">committees&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">neighbors&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_line&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">scale_color_brewer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">palette&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Dark2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">legend.position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;top&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/blog/2020-05-rules-0-0-1/index_files/figure-html/cb-tune-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">
&lt;span class="nf">show_best&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_tune_res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;rmse&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 7&lt;/span>
&lt;span class="c1">#&amp;gt; committees neighbors .metric .estimator mean n std_err&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 9 9 rmse standard 0.0395 10 0.00133&lt;/span>
&lt;span class="c1">#&amp;gt; 2 5 9 rmse standard 0.0395 10 0.00132&lt;/span>
&lt;span class="c1">#&amp;gt; 3 11 9 rmse standard 0.0395 10 0.00133&lt;/span>
&lt;span class="c1">#&amp;gt; 4 13 9 rmse standard 0.0395 10 0.00132&lt;/span>
&lt;span class="c1">#&amp;gt; 5 8 9 rmse standard 0.0395 10 0.00131&lt;/span>
&lt;span class="n">smallest_rmse&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">select_best&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_tune_res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;rmse&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">smallest_rmse&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; committees neighbors&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 9 9&lt;/span>
&lt;span class="n">final_cb_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">cubist_mod&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">finalize_model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">smallest_rmse&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">log10&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Price&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">car_tr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It appears that the benefit of using committees occurs in the first 10 iterations. The nearest-neighbor adjustment was important to obtaining good performance.&lt;/p>
&lt;p>The test set results look good and are consistent with the resampling estimate of RMSE:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">test_pred&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">final_cb_mod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">car_te&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">bind_cols&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_te&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Price&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">log10&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Price&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">test_pred&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">rmse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.pred&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; .metric .estimator .estimate&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 rmse standard 0.0382&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_pred&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">.pred&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Price&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_abline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;green&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">coord_fixed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ratio&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/blog/2020-05-rules-0-0-1/index_files/figure-html/cb-test-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;p>I&amp;rsquo;d like to thank
&lt;a href="https://github.com/holub008" target="_blank" rel="noopener">Karl Holub&lt;/a> for making the
&lt;a href="https://github.com/holub008/xrf" target="_blank" rel="noopener">xrf package&lt;/a> and accepting my PRs and changes.&lt;/p></description></item><item><title>Announcing tidymodels.org</title><link>https://www.tidyverse.org/blog/2020/04/tidymodels-org/</link><pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/04/tidymodels-org/</guid><description>&lt;p>We&amp;rsquo;re thrilled to announce the launch of
&lt;a href="https://www.tidymodels.org" target="_blank" rel="noopener">&lt;code>tidymodels.org&lt;/code>&lt;/a>! The site is a central location for learning and using the tidymodels packages. It has a new take on a familiar look:&lt;/p>
&lt;img src="tidymodels-front-page.png" alt="tidymodels.org landing page screenshot">
&lt;p>This site has a different organization than its tidyverse sibling.&lt;/p>
&lt;p>The
&lt;a href="https://www.tidymodels.org/start/" target="_blank" rel="noopener">&lt;strong>Get Started&lt;/strong>&lt;/a> page has a series of five articles that are aimed at readers who have little to no experience with the tidymodels packages. Each article focuses on a specific task (e.g. building a model), and the last article walks through a case study that brings all of the other elements together.&lt;/p>
&lt;p>We have consolidated many of the vignettes and articles that showcase code examples on the
&lt;a href="https://www.tidymodels.org/learn/" target="_blank" rel="noopener">&lt;strong>Learn&lt;/strong>&lt;/a> page. Previously, these were scattered across package documentation websites. We received feedback that keeping these articles in the individual sites made it too difficult to find the right material, especially when an article used multiple packages. Articles describing specific technical details of an individual package will remain in that specific pkgdown site.&lt;/p>
&lt;p>The content on the
&lt;a href="https://www.tidymodels.org/learn/" target="_blank" rel="noopener">&lt;strong>Learn&lt;/strong>&lt;/a> page is organized into groups:&lt;/p>
&lt;ul>
&lt;li>Perform statistical analysis&lt;/li>
&lt;li>Create robust models&lt;/li>
&lt;li>Tune, compare, and work with your models&lt;/li>
&lt;li>Develop custom modeling tools&lt;/li>
&lt;/ul>
&lt;p>We&amp;rsquo;ll continue to add new articles to the &lt;strong>Learn&lt;/strong> section as we develop new functions in tidymodels, or for specific topics that need more documentation (based on GitHub issues, as well as posts to Stack Overflow or RStudio Community).&lt;/p>
&lt;p>The
&lt;a href="https://www.tidymodels.org/help/" target="_blank" rel="noopener">&lt;strong>Help&lt;/strong>&lt;/a> section is an excellent place to consult when you are stuck on a problem or when you want to know more. There are additional links to books using the tidymodels packages as well as tools to search across
&lt;a href="https://www.tidymodels.org/find/" target="_blank" rel="noopener">all tidymodels functions&lt;/a>,
&lt;a href="https://www.tidymodels.org/find/parsnip/" target="_blank" rel="noopener">&lt;code>parsnip&lt;/code> model functions&lt;/a>, and
&lt;a href="https://www.tidymodels.org/find/recipes/" target="_blank" rel="noopener">&lt;code>recipe&lt;/code> steps&lt;/a>.&lt;/p>
&lt;p>Blog posts related to tidymodels will still be posted here at the
&lt;a href="https://www.tidyverse.org/blog/" target="_blank" rel="noopener">tidyverse blog&lt;/a>. Both &lt;code>tidyverse.org&lt;/code> and &lt;code>tidymodels.org&lt;/code> are Hugo websites built using R with the
&lt;a href="https://bookdown.org/yihui/blogdown/" target="_blank" rel="noopener">blogdown&lt;/a> package. We learned a lot while launching this new website and plan to share about this process in detail soon.&lt;/p>
&lt;p>The launch of
&lt;a href="https://www.tidymodels.org" target="_blank" rel="noopener">&lt;code>tidymodels.org&lt;/code>&lt;/a> would not have been possible without Alison Hill, whose incredible expertise and tenacity made it happen. Additionally, Alison and Julia Silge did an amazing job making the existing content more readable and better organized.
&lt;a href="https://desiree.rbind.io/" target="_blank" rel="noopener">Desirée De Leon&lt;/a> worked her magic to make the site look even better. We also used Allison Horst&amp;rsquo;s
&lt;a href="https://github.com/allisonhorst/stats-illustrations" target="_blank" rel="noopener">superb illustrations&lt;/a> just to show off. The tidyverse group, Joshua Spiewak, Greg Swinehart, and Sarah Lin (RStudio&amp;rsquo;s Information Architect &amp;amp; Digital Librarian) also contributed valued support and help.&lt;/p>
&lt;p>&lt;img src="parsnip-flagger.png" alt="">&lt;/p></description></item><item><title>New parsnip-adjacent packages</title><link>https://www.tidyverse.org/blog/2020/04/parsnip-adjacent/</link><pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/04/parsnip-adjacent/</guid><description>&lt;p>We&amp;rsquo;re delighted to announce the release of three new tidymodels packages. These are &amp;ldquo;parsnip-adjacent&amp;rdquo; packages that add new models to the tidymodels framework.&lt;/p>
&lt;h2 id="baguette">baguette
&lt;a href="#baguette">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This package contains basic functions and parsnip wrappers for bagging (aka
&lt;a href="https://scholar.google.com/scholar?hl=en&amp;amp;as_sdt=0%2C7&amp;amp;q=bagging&amp;#43;predictors&amp;#43;breiman&amp;#43;1996&amp;amp;oq=Bagging&amp;#43;predictors&amp;#43;" target="_blank" rel="noopener">bootstrap aggregating&lt;/a>) ensemble models. Right now, there are parsnip wrappers called &lt;code>bag_tree()&lt;/code> and &lt;code>bag_mars()&lt;/code> although more are planned, especially for rule-based models.&lt;/p>
&lt;p>One nice feature of this package is that the resulting model objects are smaller than they would normally be. Two separate operations are used to do this:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>The butcher package is used to remove object elements that are not crucial to using the models. For example, some models contain copies of the training set or model residuals when created. These are removed so that space is saved.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For ensembles whose base models use a formula method, there is is a built-in redundancy because each model has an identical &lt;code>terms&lt;/code> object. However, each one of these takes up separate space in memory and can be quite large when there are many predictors. baguette fixes this by replacing each &lt;code>terms&lt;/code> object with the object from the &lt;em>first&lt;/em> model in the ensemble. Since the other &lt;code>terms&lt;/code> objects are not modified, we get the same functional capabilities using far less memory to save the ensemble. A similar trick is used for the resampling method sin &lt;code>modelr&lt;/code> and &lt;code>rsample&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>The models also return aggregated variable importance scores.&lt;/p>
&lt;p>Here&amp;rsquo;s an example:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">baguette&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rpart&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># C5.0 is also available here. &lt;/span>
&lt;span class="c1">#&amp;gt; Bagged Decision Tree Model Specification (unknown)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Main Arguments:&lt;/span>
&lt;span class="c1">#&amp;gt; cost_complexity = 0&lt;/span>
&lt;span class="c1">#&amp;gt; min_n = 2&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: rpart&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5128&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">bag_cars&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">bag_tree&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rpart&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">times&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">25&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="c1"># 25 ensemble members &lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">bag_cars&lt;/span>
&lt;span class="c1">#&amp;gt; parsnip model object&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Fit time: 4.6s &lt;/span>
&lt;span class="c1">#&amp;gt; Bagged CART (regression with 25 members)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Variable importance scores include:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 10 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; term value std.error used&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 disp 966. 56.7 25&lt;/span>
&lt;span class="c1">#&amp;gt; 2 wt 951. 59.4 25&lt;/span>
&lt;span class="c1">#&amp;gt; 3 hp 810. 53.9 25&lt;/span>
&lt;span class="c1">#&amp;gt; 4 cyl 567. 53.9 25&lt;/span>
&lt;span class="c1">#&amp;gt; 5 drat 558. 57.5 25&lt;/span>
&lt;span class="c1">#&amp;gt; 6 qsec 214. 28.4 25&lt;/span>
&lt;span class="c1">#&amp;gt; 7 am 133. 41.1 23&lt;/span>
&lt;span class="c1">#&amp;gt; 8 carb 126. 37.7 25&lt;/span>
&lt;span class="c1">#&amp;gt; 9 vs 108. 41.2 24&lt;/span>
&lt;span class="c1">#&amp;gt; 10 gear 38.9 16.5 19&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="poissonreg">poissonreg
&lt;a href="#poissonreg">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The parsnip package has methods for linear, logistic, and multinomial models. poissonreg extends this to data where the outcome is a count. There are engines for &lt;code>glm&lt;/code>, &lt;code>rstanarm&lt;/code>, &lt;code>glmnet&lt;/code>, &lt;code>hurdle&lt;/code>, and &lt;code>zeroinfl&lt;/code>. The latter two enable zero-inflated Poisson models from the
&lt;a href="https://github.com/atahk/pscl" target="_blank" rel="noopener">pscl&lt;/a> package.&lt;/p>
&lt;p>Here is an example using a log-linear model for analyzing a three dimensional contingency table using the data from Agresti (2007, Table 7.6):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poissonreg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">log_lin_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">poisson_reg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;glm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">.)^2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">seniors&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">log_lin_mod&lt;/span>
&lt;span class="c1">#&amp;gt; parsnip model object&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Fit time: 4ms &lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call: stats::glm(formula = formula, family = stats::poisson, data = data)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Coefficients:&lt;/span>
&lt;span class="c1">#&amp;gt; (Intercept) marijuanayes &lt;/span>
&lt;span class="c1">#&amp;gt; 5.6334 -5.3090 &lt;/span>
&lt;span class="c1">#&amp;gt; cigaretteyes alcoholyes &lt;/span>
&lt;span class="c1">#&amp;gt; -1.8867 0.4877 &lt;/span>
&lt;span class="c1">#&amp;gt; marijuanayes:cigaretteyes marijuanayes:alcoholyes &lt;/span>
&lt;span class="c1">#&amp;gt; 2.8479 2.9860 &lt;/span>
&lt;span class="c1">#&amp;gt; cigaretteyes:alcoholyes &lt;/span>
&lt;span class="c1">#&amp;gt; 2.0545 &lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Degrees of Freedom: 7 Total (i.e. Null); 1 Residual&lt;/span>
&lt;span class="c1">#&amp;gt; Null Deviance: 2851 &lt;/span>
&lt;span class="c1">#&amp;gt; Residual Deviance: 0.374 AIC: 63.42&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>One interesting thing about the zero-inflated Poisson models is that there can be different predictors for the usual linear predictor as well as others for the probability of a zero count (see
&lt;a href="https://www.jstatsoft.org/article/view/v027i08/" target="_blank" rel="noopener">Zeileis &lt;em>et al&lt;/em> (2008)&lt;/a> for more details). For example:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;bioChemists&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;pscl&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">poisson_reg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hurdle&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># Extended formula:&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">art&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">. &lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">phd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">bioChemists&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; parsnip model object&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Fit time: 22ms &lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call:&lt;/span>
&lt;span class="c1">#&amp;gt; pscl::hurdle(formula = formula, data = data)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Count model coefficients (truncated poisson with log link):&lt;/span>
&lt;span class="c1">#&amp;gt; (Intercept) femWomen marMarried kid5 phd ment &lt;/span>
&lt;span class="c1">#&amp;gt; 0.67114 -0.22858 0.09648 -0.14219 -0.01273 0.01875 &lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Zero hurdle model coefficients (binomial with logit link):&lt;/span>
&lt;span class="c1">#&amp;gt; (Intercept) phd &lt;/span>
&lt;span class="c1">#&amp;gt; 0.3075 0.1750&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="plsmod">plsmod
&lt;a href="#plsmod">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This package has parsnip methods for Partial Least Squares (PLS) regression and classification models based on the work in the Bioconductor
&lt;a href="https://bioconductor.org/packages/release/bioc/html/mixOmics.html" target="_blank" rel="noopener">mixOmics&lt;/a> package. This package facilitates ordinary PLS models as well as sparse versions. Additionally, it can also be used for multivariate models.&lt;/p>
&lt;p>Let&amp;rsquo;s take the &lt;code>meats&lt;/code> data from the modeldata package. Spectroscopy was used to estimate the percentage of protein, fat, and water from different meats. The predictors are a set of 100 highly correlated spectra values that would come from an instrument. The model can be used to estimate the three percentages simultaneously:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plsmod&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meats&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">pls_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">pls&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num_comp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num_terms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;mixOmics&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit_xy&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">meats&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">protein&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">fat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">water&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">)),&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">meats&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">protein&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">water&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pls_fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meats&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">protein&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">fat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">water&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; .pred_protein .pred_fat .pred_water&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 16.5 19.3 62.7&lt;/span>
&lt;span class="c1">#&amp;gt; 2 14.5 36.7 48.4&lt;/span>
&lt;span class="c1">#&amp;gt; 3 20.2 10.9 69.1&lt;/span>
&lt;span class="c1">#&amp;gt; 4 20.0 7.21 72.3&lt;/span>
&lt;span class="c1">#&amp;gt; 5 15.6 23.0 59.7&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This model used 5 PLS components for each of the outcomes. The use of &lt;code>num_terms&lt;/code> enables effect &lt;em>sparsity&lt;/em> where the 20 most influential predictors (out of 100) are used for each of the 5 PLS components. Different predictors can be used for each component. While this is not feature selection, it does offer the possibility of simpler models than ordinary PLS techniques.&lt;/p>
&lt;h1 id="other-notes">Other notes
&lt;a href="#other-notes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>Each of these models come fully enables to be used with the tune package; their model parameters can be optimized for performance.&lt;/p>
&lt;p>There are one or two other parsnip-adjacent packages that are around the corner. One is for mixed- and hierarchical models and another is for rule-based machine learning models (e.g. cubist, RuleFit, etc.) currently on GitHub in the
&lt;a href="https://github.com/tidymodels/rules" target="_blank" rel="noopener">rules repo&lt;/a>.&lt;/p></description></item><item><title>themis 0.1.0</title><link>https://www.tidyverse.org/blog/2020/02/themis-0-1-0/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/02/themis-0-1-0/</guid><description>&lt;p>We&amp;rsquo;re chuffed to announce the release of
&lt;a href="https://github.com/tidymodels/themis" target="_blank" rel="noopener">themis&lt;/a> on CRAN.
&lt;a href="https://tidymodels.github.io/themis/" target="_blank" rel="noopener">themis&lt;/a> implements a collection of new steps for the
&lt;a href="https://github.com/tidymodels/recipes" target="_blank" rel="noopener">recipes&lt;/a> package to deal with unbalanced data. themis is still in early development so any and all feedback is highly appreciated.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">modeldata&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">recipes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">themis&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In a classification context, a dataset is said to be unbalanced if there is an unequal number of observations in each class. Many models perform best when the number of observations is equal and, thus, tend to struggle with unbalanced data.&lt;/p>
&lt;p>The steps in this package can be divided into two camps:&lt;/p>
&lt;ul>
&lt;li>Ones that remove observations from the majority class(es), and&lt;/li>
&lt;li>Ones that add observations to the minority class(es).&lt;/li>
&lt;/ul>
&lt;p>You can do more than one action, and, thus, are able to mix and match by for example first removing observations from the majority class followed by adding observations to the minority class to achieve the balance you want.&lt;/p>
&lt;h2 id="hybrid-sampling-steps">Hybrid-sampling steps
&lt;a href="#hybrid-sampling-steps">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Hybrid-sampling involves adding observations to the minority class. This can be done in multiple ways, one way is to sample existing data points like &lt;code>step_upsample()&lt;/code> does, another way is to synthetically generate new points based on existing points, &lt;code>step_smote()&lt;/code> and related steps uses k nearest neighbor information to generate new points. Currently &lt;code>step_upsample()&lt;/code>, &lt;code>step_smote()&lt;/code>, &lt;code>step_bsmote()&lt;/code>, &lt;code>step_adasyn()&lt;/code>, and &lt;code>step_rose()&lt;/code> are available. All steps have references in their respective help pages. They have slightly different requirements according to the data they can handle; most need all numeric with no missing data, but those requirements can and should be handled by previous steps.&lt;/p>
&lt;p>In the following example, let&amp;rsquo;s look at the &lt;code>okc&lt;/code> dataset. and we can see that the imbalance is 1-to-6.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;okc&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">table&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">okc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; stem other &lt;/span>
&lt;span class="c1">#&amp;gt; 9539 50316&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We will use &lt;code>age&lt;/code>, &lt;code>diet&lt;/code> and &lt;code>height&lt;/code> in modeling to predict &lt;code>Class&lt;/code>. Since &lt;code>diet&lt;/code> is a factor, we first need to dummify it before we normalize and perform mean imputation to handle all the missing data.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diet&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">okc&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_unknown&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diet&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diet&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_meanimpute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_smote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">juice&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">table&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; .&lt;/span>
&lt;span class="c1">#&amp;gt; stem other &lt;/span>
&lt;span class="c1">#&amp;gt; 50316 50316&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we see that the resulting dataset has a perfectly even distribution. All the hybrid-sampling steps share the parameter &lt;code>over_ratio&lt;/code>, which specifies the desired ratio between the biggest class and the smallest class. It defaults to 1 for an even distribution but can be set to something like &lt;code>0.5&lt;/code> to have the minority class become half the size of the majority class.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diet&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">okc&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_unknown&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diet&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diet&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_meanimpute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_smote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">over_ratio&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">juice&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">table&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; .&lt;/span>
&lt;span class="c1">#&amp;gt; stem other &lt;/span>
&lt;span class="c1">#&amp;gt; 25158 50316&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="under-sampling-steps">Under-sampling steps
&lt;a href="#under-sampling-steps">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Under-sampling is removing observations from the majority class. Currently &lt;code>step_downsample()&lt;/code>, &lt;code>step_nearmiss()&lt;/code> and &lt;code>step_tomek()&lt;/code> are available. These steps should have the same user experience as the previous steps as they have a similar shared parameter &lt;code>under_ratio&lt;/code> which is the ratio between the smallest and the biggest class. Simply using &lt;code>step_downsample()&lt;/code> randomly removes samples in the majority classes to get them to be the same size as the smallest class.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diet&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">okc&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_unknown&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diet&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diet&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_meanimpute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_downsample&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">juice&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">table&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; .&lt;/span>
&lt;span class="c1">#&amp;gt; stem other &lt;/span>
&lt;span class="c1">#&amp;gt; 9539 9539&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>hardhat 0.1.0</title><link>https://www.tidyverse.org/blog/2019/12/hardhat-0-1-0/</link><pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/12/hardhat-0-1-0/</guid><description>&lt;p>We&amp;rsquo;re excited to announce that the first version of
&lt;a href="https://tidymodels.github.io/hardhat/" target="_blank" rel="noopener">hardhat&lt;/a> is now on CRAN. hardhat is a developer-focused package with the goal of making it easier to create new modeling packages, while simultaneously promoting good R modeling package standards. To accomplish this, hardhat provides tooling around preprocessing, predicting, and validating user input, along with a way to set up the structure of a new modeling package with a single function call.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">modeldata&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tibble&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hardhat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">recipes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;biomass&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">biomass&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">biomass&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="setup">Setup
&lt;a href="#setup">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One exciting feature included with hardhat is &lt;code>create_modeling_package()&lt;/code>. Built on top of &lt;code>usethis::create_package()&lt;/code>, this allows you to quickly set up a new modeling package with pre-generated infrastructure in place for an S3 generic to go with your user-facing modeling function. It also includes a &lt;code>predict()&lt;/code> method and other best practices outlined further in
&lt;a href="https://tidymodels.github.io/model-implementation-principles/" target="_blank" rel="noopener">Conventions for R Modeling Packages&lt;/a>. If you&amp;rsquo;ve never created a modeling package before, this is a great place to start so you can focus more on the implementation rather than the details around package setup.&lt;/p>
&lt;h2 id="preprocessing">Preprocessing
&lt;a href="#preprocessing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When building a model, there are often preprocessing steps that you perform on the training set before fitting. Take this &lt;code>biomass&lt;/code> dataset for example. The goal is to predict the &lt;code>HHV&lt;/code> for each sample, an acronym for the Higher Heating Value, defined as the amount of heat released by an object during combustion. To do this, you might use the numeric columns containing the amounts of different atomic elements that make up each sample.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">training&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">biomass[biomass&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">dataset&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;Training&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">]&lt;/span>
&lt;span class="n">testing&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">biomass[biomass&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">dataset&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;Testing&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">]&lt;/span>
&lt;span class="n">training&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 456 x 8&lt;/span>
&lt;span class="c1">#&amp;gt; sample dataset carbon hydrogen oxygen nitrogen sulfur HHV&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Akhrot Shell Training 49.8 5.64 42.9 0.41 0 20.0&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Alabama Oak Wood Waste Training 49.5 5.7 41.3 0.2 0 19.2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Alder Training 47.8 5.8 46.2 0.11 0.02 18.3&lt;/span>
&lt;span class="c1">#&amp;gt; 4 Alfalfa Training 45.1 4.97 35.6 3.3 0.16 18.2&lt;/span>
&lt;span class="c1">#&amp;gt; 5 Alfalfa Seed Straw Training 46.8 5.4 40.7 1 0.02 18.4&lt;/span>
&lt;span class="c1">#&amp;gt; 6 Alfalfa Stalks Training 45.4 5.75 40.2 2.04 0.1 18.5&lt;/span>
&lt;span class="c1">#&amp;gt; 7 Alfalfa Stems Training 47.2 5.99 38.2 2.68 0.2 18.7&lt;/span>
&lt;span class="c1">#&amp;gt; 8 Alfalfa Straw Training 45.7 5.7 39.7 1.7 0.2 18.3&lt;/span>
&lt;span class="c1">#&amp;gt; 9 Almond Training 48.8 5.5 40.9 0.8 0 18.6&lt;/span>
&lt;span class="c1">#&amp;gt; 10 Almond Hull Training 47.1 5.9 40 1.2 0.1 18.9&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 446 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Depending on the model you choose, you might need to center and scale your data before passing it along to the fitting function. There are two main ways you might do this: a formula, or a recipe. As a modeling package developer, ideally you&amp;rsquo;d support both in your user-facing modeling function, like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">my_model&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">UseMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;my_model&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">my_model.formula&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">formula&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">my_model.recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Unfortunately, each have their own nuances and tricks to be aware of, which you probably don&amp;rsquo;t want to spend too much time thinking about. Ideally, you&amp;rsquo;d be able to focus on your package&amp;rsquo;s implementation, and easily be able to support a number of different user input methods. This is where hardhat can help. &lt;code>hardhat::mold()&lt;/code> is a preprocessing function that knows how to preprocess formulas, prep recipes, and deal with the more basic XY input (two data frames, one holding predictors and one holding outcomes). The best part is that the output from &lt;code>mold()&lt;/code> is standardized across all 3 preprocessing methods, so you always know what data structures you&amp;rsquo;ll be getting back.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HHV&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">carbon&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">training&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">carbon&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">processed_formula&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">mold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HHV&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="nf">scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">carbon&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">training&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">processed_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">mold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">training&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">names&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">processed_formula&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;predictors&amp;#34; &amp;#34;outcomes&amp;#34; &amp;#34;blueprint&amp;#34; &amp;#34;extras&amp;#34;&lt;/span>
&lt;span class="nf">names&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">processed_recipe&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;predictors&amp;#34; &amp;#34;outcomes&amp;#34; &amp;#34;blueprint&amp;#34; &amp;#34;extras&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>predictors&lt;/code> is a data frame of the preprocessed predictors.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>outcomes&lt;/code> is a data frame of the preprocessed outcomes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>blueprint&lt;/code> is the best part of hardhat. It records the preprocessing activities, so that it can replay them on top of new data that needs to be preprocessed at prediction time.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>extras&lt;/code> is a data frame of any &amp;ldquo;extra&amp;rdquo; columns in your data set that aren&amp;rsquo;t considered predictors or outcomes. These might be offsets in a formula, or extra roles from a recipe.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">processed_recipe&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">predictors&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 456 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; carbon&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 0.140 &lt;/span>
&lt;span class="c1">#&amp;gt; 2 0.110 &lt;/span>
&lt;span class="c1">#&amp;gt; 3 -0.0513&lt;/span>
&lt;span class="c1">#&amp;gt; 4 -0.313 &lt;/span>
&lt;span class="c1">#&amp;gt; 5 -0.153 &lt;/span>
&lt;span class="c1">#&amp;gt; 6 -0.284 &lt;/span>
&lt;span class="c1">#&amp;gt; 7 -0.114 &lt;/span>
&lt;span class="c1">#&amp;gt; 8 -0.255 &lt;/span>
&lt;span class="c1">#&amp;gt; 9 0.0428&lt;/span>
&lt;span class="c1">#&amp;gt; 10 -0.120 &lt;/span>
&lt;span class="c1">#&amp;gt; # … with 446 more rows&lt;/span>
&lt;span class="n">processed_recipe&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">outcomes&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 456 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; HHV&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 20.0&lt;/span>
&lt;span class="c1">#&amp;gt; 2 19.2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 18.3&lt;/span>
&lt;span class="c1">#&amp;gt; 4 18.2&lt;/span>
&lt;span class="c1">#&amp;gt; 5 18.4&lt;/span>
&lt;span class="c1">#&amp;gt; 6 18.5&lt;/span>
&lt;span class="c1">#&amp;gt; 7 18.7&lt;/span>
&lt;span class="c1">#&amp;gt; 8 18.3&lt;/span>
&lt;span class="c1">#&amp;gt; 9 18.6&lt;/span>
&lt;span class="c1">#&amp;gt; 10 18.9&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 446 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Generally you won&amp;rsquo;t call &lt;code>mold()&lt;/code> interactively, but will, instead, call it from your top-level modeling function as the first step to standardize and validate a user&amp;rsquo;s input.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">my_model&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">UseMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;my_model&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">my_model.formula&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">formula&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">processed&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">hardhat&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">mold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">formula&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># ... pass on to implementation&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">my_model.recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">processed&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">hardhat&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">mold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># ... pass on to implementation&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="predicting">Predicting
&lt;a href="#predicting">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Once you&amp;rsquo;ve used the preprocessed data to fit your model, you&amp;rsquo;ll probably want to make predictions on a test set. To do this, you&amp;rsquo;ll need to reapply any preprocessing that you did on the training set to the test set as well. hardhat makes this easy with &lt;code>hardhat::forge()&lt;/code>. &lt;code>forge()&lt;/code> takes a data frame of new predictors, as well as a &lt;code>blueprint&lt;/code> that was created in the call to &lt;code>mold()&lt;/code>, and reapplies the correct preprocessing for you. Again, no matter what the original preprocessing method was, the output is consistent and predictable.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">forged_formula&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">forge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testing&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">processed_formula&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">blueprint&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">forged_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">forge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testing&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">processed_recipe&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">blueprint&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">names&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">forged_formula&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;predictors&amp;#34; &amp;#34;outcomes&amp;#34; &amp;#34;extras&amp;#34;&lt;/span>
&lt;span class="nf">names&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">forged_recipe&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;predictors&amp;#34; &amp;#34;outcomes&amp;#34; &amp;#34;extras&amp;#34;&lt;/span>
&lt;span class="n">forged_recipe&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">predictors&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 80 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; carbon&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 -0.193 &lt;/span>
&lt;span class="c1">#&amp;gt; 2 -0.490 &lt;/span>
&lt;span class="c1">#&amp;gt; 3 -0.543 &lt;/span>
&lt;span class="c1">#&amp;gt; 4 -0.188 &lt;/span>
&lt;span class="c1">#&amp;gt; 5 0.0390&lt;/span>
&lt;span class="c1">#&amp;gt; 6 -0.390 &lt;/span>
&lt;span class="c1">#&amp;gt; 7 -0.904 &lt;/span>
&lt;span class="c1">#&amp;gt; 8 -0.601 &lt;/span>
&lt;span class="c1">#&amp;gt; 9 -1.84 &lt;/span>
&lt;span class="c1">#&amp;gt; 10 -1.97 &lt;/span>
&lt;span class="c1">#&amp;gt; # … with 70 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Like &lt;code>mold()&lt;/code>, &lt;code>forge()&lt;/code> is not intended for interactive use. Instead, you&amp;rsquo;ll call it from your &lt;code>predict()&lt;/code> method.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">predict.my_model&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new_data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">processed&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">hardhat&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">forge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new_data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">object&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">blueprint&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># ... pass on to predict() implementation&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>object&lt;/code> here is a model fit of class &lt;code>&amp;quot;my_model&amp;quot;&lt;/code> that should be the result of a user calling your high level &lt;code>my_model()&lt;/code> function. To enable &lt;code>forge()&lt;/code> to work as shown here, you&amp;rsquo;ll need to attach and return the &lt;code>blueprint&lt;/code> that is created from &lt;code>mold()&lt;/code> to this model &lt;code>object&lt;/code>.&lt;/p>
&lt;p>&lt;code>forge()&lt;/code> has powerful data type validation built in. It checks for a number of things including:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Missing predictors&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Predictors with the correct name, but wrong data type&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Factor predictors with &amp;ldquo;novel levels&amp;rdquo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Factor predictors with missing levels, which can be recovered automatically&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="learning-more">Learning more
&lt;a href="#learning-more">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are 3 key vignettes for hardhat.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://tidymodels.github.io/hardhat/articles/package.html" target="_blank" rel="noopener">Creating Modeling Packages With hardhat&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://tidymodels.github.io/hardhat/articles/mold.html" target="_blank" rel="noopener">Molding data for modeling&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://tidymodels.github.io/hardhat/articles/forge.html" target="_blank" rel="noopener">Forging data for predictions&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>There is also a video of Max Kuhn speaking about hardhat at the
&lt;a href="https://canal.uned.es/video/5dd25b9f5578f275e407dd88" target="_blank" rel="noopener">XI Jornadas de Usuarios de R conference&lt;/a>.&lt;/p></description></item><item><title>discrim 0.0.1</title><link>https://www.tidyverse.org/blog/2019/10/discrim-0-0-1/</link><pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/10/discrim-0-0-1/</guid><description>&lt;p>The new package
&lt;a href="https://tidymodels.github.io/discrim/" target="_blank" rel="noopener">&lt;code>discrim&lt;/code>&lt;/a> contains &lt;code>parsnip&lt;/code> bindings for additional classification models, including:&lt;/p>
&lt;ul>
&lt;li>Linear discriminant analysis (LDA, simple and L2 regularized)&lt;/li>
&lt;li>Regularized discriminant analysis (RDA, via
&lt;a href="https://scholar.google.com/scholar?hl=en&amp;amp;as_sdt=0%2C7&amp;amp;q=%22Regularized&amp;#43;Discriminant&amp;#43;Analysis%22&amp;amp;btnG=" target="_blank" rel="noopener">Friedman (1989)&lt;/a>)&lt;/li>
&lt;li>
&lt;a href="https://scholar.google.com/scholar?hl=en&amp;amp;as_sdt=0%2C7&amp;amp;q=%22Flexible&amp;#43;discriminant&amp;#43;analysis%22&amp;amp;btnG=" target="_blank" rel="noopener">Flexible discriminant analysis&lt;/a> (FDA) using
&lt;a href="https://scholar.google.com/scholar?hl=en&amp;amp;as_sdt=0%2C7&amp;amp;q=%22multivariate&amp;#43;adaptive&amp;#43;regression&amp;#43;splines%22&amp;amp;btnG=" target="_blank" rel="noopener">MARS features&lt;/a>&lt;/li>
&lt;li>Naive Bayes models&lt;/li>
&lt;/ul>
&lt;p>The package can also be used as a template for adding new models to &lt;code>tidymodels&lt;/code> without having to directly involve &lt;code>parsnip&lt;/code>.&lt;/p>
&lt;p>As an example, the package contains a simulated data set with two factors and two classes:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidyverse&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ────────────────────────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ tibble 2.1.3 ✔ purrr 0.3.2&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ tidyr 1.0.0 ✔ dplyr 0.8.3&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ readr 1.3.1 ✔ stringr 1.4.0&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ tibble 2.1.3 ✔ forcats 0.4.0&lt;/span>
&lt;span class="c1">#&amp;gt; ── Conflicts ───────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ dplyr::filter() masks stats::filter()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ dplyr::lag() masks stats::lag()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ dplyr::select() masks MASS::select()&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rsample&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">discrim&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Loading required package: parsnip&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">earth&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;parabolic&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;rsample&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Warning in data(&amp;#34;parabolic&amp;#34;, package = &amp;#34;rsample&amp;#34;): data set &amp;#39;parabolic&amp;#39; not&lt;/span>
&lt;span class="c1">#&amp;gt; found&lt;/span>
&lt;span class="n">parabolic&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 500 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; X1 X2 class &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 3.29 1.66 Class1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1.47 0.414 Class2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 1.66 0.791 Class2&lt;/span>
&lt;span class="c1">#&amp;gt; 4 1.60 0.276 Class2&lt;/span>
&lt;span class="c1">#&amp;gt; 5 2.17 3.17 Class1&lt;/span>
&lt;span class="c1">#&amp;gt; 6 1.94 3.83 Class1&lt;/span>
&lt;span class="c1">#&amp;gt; 7 -0.588 -0.977 Class2&lt;/span>
&lt;span class="c1">#&amp;gt; 8 -0.951 1.40 Class1&lt;/span>
&lt;span class="c1">#&amp;gt; 9 0.275 0.370 Class2&lt;/span>
&lt;span class="c1">#&amp;gt; 10 -1.13 -1.14 Class1&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 490 more rows&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parabolic&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">X1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">X2&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">class&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">.3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">coord_equal&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">legend.position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;top&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-10-discrim-0-01_files/figure-html/startup-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;p>How would a flexible discriminant model do here? We&amp;rsquo;ll split the data then fit the model:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">115&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">data_split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">initial_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parabolic&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">prop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">data_tr&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">training&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">data_te&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">fda_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">discrim_flexible&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;earth&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">fda_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">fda_mod&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">X1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">X2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data_tr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">fda_fit&lt;/span>
&lt;span class="c1">#&amp;gt; parsnip model object&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call:&lt;/span>
&lt;span class="c1">#&amp;gt; mda::fda(formula = formula, data = data, method = earth::earth)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Dimension: 1 &lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Percent Between-Group Variance Explained:&lt;/span>
&lt;span class="c1">#&amp;gt; v1 &lt;/span>
&lt;span class="c1">#&amp;gt; 100 &lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Training Misclassification Error: 0.105 ( N = 334 )&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since no model tuning parameters were specified, the MARS algorithm follows its own internal method for optimizing the number of features that are included in the model. The underlying MARS model is:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">summary&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fda_fit&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Call: earth(x=x, y=Theta, weights=weights)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; coefficients&lt;/span>
&lt;span class="c1">#&amp;gt; (Intercept) -0.892&lt;/span>
&lt;span class="c1">#&amp;gt; h(X1- -1.42535) 2.780&lt;/span>
&lt;span class="c1">#&amp;gt; h(X1- -0.907457) -1.972&lt;/span>
&lt;span class="c1">#&amp;gt; h(X1- -0.450335) -0.766&lt;/span>
&lt;span class="c1">#&amp;gt; h(X2-0.351695) -1.634&lt;/span>
&lt;span class="c1">#&amp;gt; h(X2-1.44562) 1.461&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Selected 6 of 13 terms, and 2 of 2 predictors&lt;/span>
&lt;span class="c1">#&amp;gt; Termination condition: Reached nk 21&lt;/span>
&lt;span class="c1">#&amp;gt; Importance: X2, X1&lt;/span>
&lt;span class="c1">#&amp;gt; Number of terms at each degree of interaction: 1 5 (additive model)&lt;/span>
&lt;span class="c1">#&amp;gt; GCV 0.333 RSS 104 GRSq 0.669 RSq 0.688&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The classification boundary, overlaid on the test set, shows a series of segmented lines:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">pred_grid&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">expand.grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">X1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">seq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">-5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">100&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">X2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">seq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">-5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">100&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">pred_grid&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">bind_cols&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">pred_grid&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fda_fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pred_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;prob&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.pred_Class1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">setNames&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;fda_pred&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">p&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data_te&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">X1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">X2&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">class&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">.3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">coord_equal&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">legend.position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;top&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">p&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_contour&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pred_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fda_pred&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">breaks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;black&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-10-discrim-0-01_files/figure-html/grid-1-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;p>This boundary seems pretty reasonable.&lt;/p>
&lt;p>These models also work with the new
&lt;a href="https://github.com/tidymodels/tune" target="_blank" rel="noopener">&lt;code>tune&lt;/code> package&lt;/a>. To demonstrate, a regularized discriminant analysis model^[Despite the name, this type of regularization is different from the more commonly used lasso ($L_1$) or ridge ($L_2$) regression methods. Here, the &lt;em>covariance matrix&lt;/em> of the predictors is regularized in different ways as described
&lt;a href="https://rdrr.io/cran/klaR/man/rda.html" target="_blank" rel="noopener">here&lt;/a>.] will be fit to the data and optimized using a simple grid search.&lt;/p>
&lt;p>We&amp;rsquo;ll use the devel version of dials:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># devtools::install_github(&amp;#34;tidymodels/tune&amp;#34;)&lt;/span>
&lt;span class="c1"># We use the devel version of several tidymodels packages:&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Registered S3 method overwritten by &amp;#39;xts&amp;#39;:&lt;/span>
&lt;span class="c1">#&amp;gt; method from&lt;/span>
&lt;span class="c1">#&amp;gt; as.zoo.xts zoo&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ───────────────────────────────────────────────────────────────────────────────────── tidymodels 0.0.3 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ broom 0.5.2 ✔ recipes 0.1.7.9001&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ dials 0.0.3.9001 ✔ yardstick 0.0.4 &lt;/span>
&lt;span class="c1">#&amp;gt; ✔ infer 0.5.0&lt;/span>
&lt;span class="c1">#&amp;gt; ── Conflicts ──────────────────────────────────────────────────────────────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ scales::discard() masks purrr::discard()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ dplyr::filter() masks stats::filter()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ recipes::fixed() masks stringr::fixed()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ dplyr::lag() masks stats::lag()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ dials::margin() masks ggplot2::margin()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ dials::offset() masks stats::offset()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ dplyr::select() masks MASS::select()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ yardstick::spec() masks readr::spec()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ recipes::step() masks stats::step()&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tune&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>First, we mark the parameters for tuning:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rda_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">discrim_regularized&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">frac_common_cov&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">frac_identity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;klaR&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In order to tune the model, we require a grid of candidate values along with a resampling specification. We&amp;rsquo;ll also setup a &lt;code>yardstick&lt;/code> object to measure the area under the ROC curve for each candidate model:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">20014&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vfold_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data_tr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">repeats&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Use a space-filling design with 30 candidate models&lt;/span>
&lt;span class="n">candidates&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">rda_mod&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">param_set&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">grid_max_entropy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">30&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">roc_values&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">metric_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">roc_auc&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can tune the model:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rda_res&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">tune_grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">X1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">X2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rda_mod&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">rs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">folds&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">candidates&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">perf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">roc_values&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The resampling estimates rank the models (starting with the best) as:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">auc_values&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">estimate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rda_res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">arrange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">desc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mean&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">auc_values&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 7&lt;/span>
&lt;span class="c1">#&amp;gt; frac_common_cov frac_identity .metric .estimator mean n std_err&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 0.0223 0.171 roc_auc binary 0.949 50 0.00392&lt;/span>
&lt;span class="c1">#&amp;gt; 2 0.107 0.362 roc_auc binary 0.943 50 0.00421&lt;/span>
&lt;span class="c1">#&amp;gt; 3 0.255 0.410 roc_auc binary 0.941 50 0.00445&lt;/span>
&lt;span class="c1">#&amp;gt; 4 0.434 0.685 roc_auc binary 0.939 50 0.00454&lt;/span>
&lt;span class="c1">#&amp;gt; 5 0.357 0.584 roc_auc binary 0.939 50 0.00454&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s plot the resampling results:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">auc_values&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">frac_common_cov&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">frac_identity&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">.5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">coord_equal&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-10-discrim-0-01_files/figure-html/grid-res-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;p>There is a wide range of parameter combinations associated with good performance here. The poor results occur mostly when the model tries to enforce a mostly LDA covariance matrix (&lt;code>frac_common_cov&lt;/code> &amp;gt; 0.9) along with &lt;code>frac_identity&lt;/code> &amp;lt;= 0.6. The latter parameter tries to shrink the covariance matrix towards one where the parameters are considered to be nearly independent.&lt;/p>
&lt;p>The &lt;code>parsnip&lt;/code> model object can be updated with the best parameter combination (&lt;code>frac_common_cov&lt;/code> = 0.022 and &lt;code>frac_identity&lt;/code> = 0.171). These parameter values result in a model close to a pure QDA model. The &lt;code>merge()&lt;/code> function can be used to insert these values into our original &lt;code>parsnip&lt;/code> object:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">final_param&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">auc_values&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">frac_common_cov&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">frac_identity&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rda_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">rda_mod&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">merge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">final_param&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pluck&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rda_mod&lt;/span>
&lt;span class="c1">#&amp;gt; Regularized Discriminant Model Specification (classification)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Main Arguments:&lt;/span>
&lt;span class="c1">#&amp;gt; frac_common_cov = 0.0222721435129642&lt;/span>
&lt;span class="c1">#&amp;gt; frac_identity = 0.171292591374367&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: klaR&lt;/span>
&lt;span class="n">rda_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">rda_mod&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">class&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">X1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">X2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data_tr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To show the class boundary:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">pred_grid&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">bind_cols&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">pred_grid&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rda_fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pred_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;prob&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.pred_Class1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">setNames&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rda_pred&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">p&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_contour&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pred_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fda_pred&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">breaks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;black&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_contour&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pred_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rda_pred&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">breaks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;black&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-10-discrim-0-01_files/figure-html/rda-boundary-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;p>This is pretty close to the true simulated boundary, which is parabolic in nature.&lt;/p>
&lt;p>The test sets results are:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">probs_te&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rda_fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data_te&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;prob&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">bind_cols&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data_te&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">class&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">probs_te&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 166 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; .pred_Class1 .pred_Class2 class &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 0.851 0.149 Class1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 0.205 0.795 Class2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 1.000 0.000339 Class1&lt;/span>
&lt;span class="c1">#&amp;gt; 4 0.326 0.674 Class2&lt;/span>
&lt;span class="c1">#&amp;gt; 5 0.377 0.623 Class2&lt;/span>
&lt;span class="c1">#&amp;gt; 6 0.202 0.798 Class2&lt;/span>
&lt;span class="c1">#&amp;gt; 7 0.333 0.667 Class1&lt;/span>
&lt;span class="c1">#&amp;gt; 8 0.472 0.528 Class1&lt;/span>
&lt;span class="c1">#&amp;gt; 9 0.979 0.0210 Class1&lt;/span>
&lt;span class="c1">#&amp;gt; 10 0.166 0.834 Class2&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 156 more rows&lt;/span>
&lt;span class="nf">roc_auc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">probs_te&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">class&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.pred_Class1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; .metric .estimator .estimate&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 roc_auc binary 0.971&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pretty good!&lt;/p></description></item><item><title>dials 0.0.3</title><link>https://www.tidyverse.org/blog/2019/10/dials-0-0-3/</link><pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/10/dials-0-0-3/</guid><description>&lt;p>A new version of &lt;code>dials&lt;/code> is
&lt;a href="https://cran.r-project.org/package=dials" target="_blank" rel="noopener">on CRAN&lt;/a>. The package has contains basic frameworks for managing tuning parameters for models. It is a significant update to the package. The major change is that parameter objects are now generated by functions (as opposed to the prototype objects in the previous version). For example, to make a &lt;code>dials&lt;/code> object for the number of PCA components in a model:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># previously&lt;/span>
&lt;span class="n">pca_comps&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">num_comp&lt;/span>
&lt;span class="c1"># now&lt;/span>
&lt;span class="n">pca_comps&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">num_comp&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For numeric parameters, the range of values can be set using the first argument:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## ── Attaching packages ──────────────────────────────────────── tidymodels 0.0.2 ──
&lt;/code>&lt;/pre>&lt;pre>&lt;code>## ✔ broom 0.5.2 ✔ purrr 0.3.2
## ✔ dials 0.0.3 ✔ recipes 0.1.7
## ✔ dplyr 0.8.3 ✔ rsample 0.0.5
## ✔ ggplot2 3.2.1 ✔ tibble 2.1.3
## ✔ infer 0.4.0.1 ✔ yardstick 0.0.4
## ✔ parsnip 0.0.3.1
&lt;/code>&lt;/pre>&lt;pre>&lt;code>## ── Conflicts ─────────────────────────────────────────── tidymodels_conflicts() ──
## ✖ purrr::discard() masks scales::discard()
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag() masks stats::lag()
## ✖ ggplot2::margin() masks dials::margin()
## ✖ dials::offset() masks stats::offset()
## ✖ recipes::step() masks stats::step()
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">num_comp&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # Components (quantitative)
## Range: [1, ?]
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">num_comp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">range&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # Components (quantitative)
## Range: [2, 10]
&lt;/code>&lt;/pre>&lt;p>Sets of tuning parameters can be created and managed:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">boosting_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">param_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">trees&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">splits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tree_depth&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nf">min_n&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;span class="n">boosting_set&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Collection of 3 parameters for tuning
##
## id parameter type object class
## trees trees nparam[+]
## splits tree_depth nparam[+]
## min_n min_n nparam[+]
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># modifying the parameter range:&lt;/span>
&lt;span class="n">boosting_set&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">trees&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">trees&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1000&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Collection of 3 parameters for tuning
##
## id parameter type object class
## trees trees nparam[+]
## splits tree_depth nparam[+]
## min_n min_n nparam[+]
&lt;/code>&lt;/pre>&lt;p>Note that the tree depth parameter has a user-defined identification variable. This can come in handy when there are multiple tuning parameters of the same type. For example, suppose two variables (&lt;code>x1&lt;/code> and &lt;code>x2&lt;/code>) were modeled using splines. The flexibility of each grouped be represented in a parameter set:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">splines&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">param_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x1_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">deg_free&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">x2_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">deg_free&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;span class="n">splines&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Collection of 2 parameters for tuning
##
## id parameter type object class
## x1_df deg_free nparam[+]
## x2_df deg_free nparam[+]
&lt;/code>&lt;/pre>&lt;p>This version of &lt;code>dials&lt;/code> also contains two functions for creating
&lt;a href="https://scholar.google.com/scholar?hl=en&amp;amp;as_sdt=0%2C7&amp;amp;q=%22Space-Filling&amp;#43;Designs%22&amp;amp;btnG=" target="_blank" rel="noopener">space-filling designs&lt;/a>, a technique from statistical experimental design theory. The two functions are &lt;code>grid_max_entropy()&lt;/code> and &lt;code>grid_latin_hypercube()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">svm_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">param_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">rbf_sigma&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nf">cost&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">463&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">me_grid&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">grid_max_entropy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">svm_set&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;max entropy&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ls_grid&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">grid_latin_hypercube&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">svm_set&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;latin hypercube&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rn_grid&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">grid_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">svm_set&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;random&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">bind_rows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">me_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ls_grid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rn_grid&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cost&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rbf_sigma&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">facet_wrap&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">scale_x_log10&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">scale_y_log10&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">coord_fixed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ratio&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-10-dials-0-0-3_files/figure-html/svm-design-1.png" width="672" />&lt;/p>
&lt;p>&lt;code>dials&lt;/code> will be central to the upcoming framework for optimizing tuning parameters so there is much more to come regarding this package.&lt;/p></description></item><item><title>tidymodels updates</title><link>https://www.tidyverse.org/blog/2019/09/tidymodels-2019-09/</link><pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/09/tidymodels-2019-09/</guid><description>&lt;p>We&amp;rsquo;ve sent a few packages to CRAN recently. Here&amp;rsquo;s a recap of the changes (and some notes at the bottom):&lt;/p>
&lt;h2 id="recipes-016">recipes 0.1.6
&lt;a href="#recipes-016">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="breaking-changes">Breaking Changes
&lt;a href="#breaking-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>Since 2018, a warning has been issued when the wrong argument was used in &lt;code>bake(recipe, newdata)&lt;/code>. The deprecation period is over and &lt;code>new_data&lt;/code> is officially required.&lt;/li>
&lt;li>Previously, if
&lt;a href="https://tidymodels.github.io/recipes/reference/step_other.html" target="_blank" rel="noopener">&lt;code>step_other()&lt;/code>&lt;/a> did &lt;em>not&lt;/em> collapse any levels, it would still add an &amp;ldquo;other&amp;rdquo; level to the factor. This would lump new factor levels into &amp;ldquo;other&amp;rdquo; when data were baked (as
&lt;a href="https://tidymodels.github.io/recipes/reference/step_novel.html" target="_blank" rel="noopener">&lt;code>step_novel()&lt;/code>&lt;/a> does). This no longer occurs, since it was inconsistent with &lt;code>?step_other&lt;/code>, which said that: &amp;ldquo;If no pooling is done the data are unmodified&amp;rdquo;.&lt;/li>
&lt;/ul>
&lt;h3 id="new-operations">New Operations:
&lt;a href="#new-operations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>
&lt;a href="https://tidymodels.github.io/recipes/reference/step_normalize.html" target="_blank" rel="noopener">&lt;code>step_normalize()&lt;/code>&lt;/a> centers and scales the data (if you are, like Max, too lazy to use two separate steps).&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/recipes/reference/step_unknown.html" target="_blank" rel="noopener">&lt;code>step_unknown()&lt;/code>&lt;/a> will convert missing data in categorical columns to &amp;ldquo;unknown&amp;rdquo; and update factor levels.&lt;/li>
&lt;/ul>
&lt;h3 id="other-changes">Other Changes:
&lt;a href="#other-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>If the &lt;code>threshold&lt;/code> argument of
&lt;a href="https://tidymodels.github.io/recipes/reference/step_other.html" target="_blank" rel="noopener">&lt;code>step_other()&lt;/code>&lt;/a> is greater than one, it specifies the minimum sample size before the levels of the factor are collapsed into the &amp;ldquo;other&amp;rdquo; category.
&lt;a href="https://github.com/tidymodels/recipes/issues/289" target="_blank" rel="noopener">#289&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/recipes/reference/step_knnimpute.html" target="_blank" rel="noopener">&lt;code>step_knnimpute()&lt;/code>&lt;/a> can now pass two options to the underlying knn code, including the number of threads (
&lt;a href="https://github.com/tidymodels/recipes/issues/323" target="_blank" rel="noopener">#323&lt;/a>).&lt;/li>
&lt;li>Due to changes by CRAN,
&lt;a href="https://tidymodels.github.io/recipes/reference/step_nnmf.html" target="_blank" rel="noopener">&lt;code>step_nnmf()&lt;/code>&lt;/a> only works on versions of R &amp;gt;= 3.6.0 due to dependency issues.&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/recipes/reference/step_dummy.html" target="_blank" rel="noopener">&lt;code>step_dummy()&lt;/code>&lt;/a> and
&lt;a href="https://tidymodels.github.io/recipes/reference/step_other.html" target="_blank" rel="noopener">&lt;code>step_other()&lt;/code>&lt;/a> are now tolerant to cases where that step&amp;rsquo;s selectors do not capture any columns. In this case, no modifications to the data are made. (
&lt;a href="https://github.com/tidymodels/recipes/issues/290" target="_blank" rel="noopener">#290&lt;/a>,
&lt;a href="https://github.com/tidymodels/recipes/issues/348" target="_blank" rel="noopener">#348&lt;/a>)&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/recipes/reference/step_dummy.html" target="_blank" rel="noopener">&lt;code>step_dummy()&lt;/code>&lt;/a> can now retain the original columns that are used to make the dummy variables by setting &lt;code>preserve = TRUE&lt;/code>. (
&lt;a href="https://github.com/tidymodels/recipes/issues/328" target="_blank" rel="noopener">#328&lt;/a>)&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/recipes/reference/step_other.html" target="_blank" rel="noopener">&lt;code>step_other()&lt;/code>&lt;/a>&amp;lsquo;s print method only reports the variables with collapsed levels (as opposed to any column that was &lt;em>tested&lt;/em> to see if it needed collapsing). (
&lt;a href="https://github.com/tidymodels/recipes/issues/338" target="_blank" rel="noopener">#338&lt;/a>)&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/recipes/reference/step_pca.html" target="_blank" rel="noopener">&lt;code>step_pca()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/recipes/reference/step_kpca.html" target="_blank" rel="noopener">&lt;code>step_kpca()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/recipes/reference/step_ica.html" target="_blank" rel="noopener">&lt;code>step_ica()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/recipes/reference/step_nnmf.html" target="_blank" rel="noopener">&lt;code>step_nnmf()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/recipes/reference/step_pls.html" target="_blank" rel="noopener">&lt;code>step_pls()&lt;/code>&lt;/a>, and
&lt;a href="https://tidymodels.github.io/recipes/reference/step_isomap.html" target="_blank" rel="noopener">&lt;code>step_isomap()&lt;/code>&lt;/a> now accept zero components. In this case, the original data are returned. Please use this with great care.&lt;/li>
&lt;/ul>
&lt;h2 id="embed-003">embed 0.0.3
&lt;a href="#embed-003">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Two new steps were added:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://tidymodels.github.io/embed/reference/step_umap.html" target="_blank" rel="noopener">&lt;code>step_umap()&lt;/code>&lt;/a> was added for both supervised and unsupervised encodings.&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/embed/reference/step_woe.html" target="_blank" rel="noopener">&lt;code>step_woe()&lt;/code>&lt;/a> creates weight of evidence encodings. Thanks to Athos Petri Damiani for this.&lt;/li>
&lt;/ul>
&lt;h2 id="rsample-005">rsample 0.0.5
&lt;a href="#rsample-005">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>Added three functions to compute different
&lt;a href="https://tidymodels.github.io/rsample/articles/Applications/Intervals.html" target="_blank" rel="noopener">bootstrap confidence intervals&lt;/a>.&lt;/li>
&lt;li>A new function (
&lt;a href="https://tidymodels.github.io/rsample/reference/add_resample_id.html" target="_blank" rel="noopener">&lt;code>add_resample_id()&lt;/code>&lt;/a>) augments a data frame with columns for the resampling identifier.&lt;/li>
&lt;li>Updated
&lt;a href="https://tidymodels.github.io/rsample/reference/initial_split.html" target="_blank" rel="noopener">&lt;code>initial_split()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/rsample/reference/mc_cv.html" target="_blank" rel="noopener">&lt;code>mc_cv()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/rsample/reference/vfold_cv.html" target="_blank" rel="noopener">&lt;code>vfold_cv()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/rsample/reference/bootstraps.html" target="_blank" rel="noopener">&lt;code>bootstraps()&lt;/code>&lt;/a>, and
&lt;a href="https://tidymodels.github.io/rsample/reference/group_vfold_cv.html" target="_blank" rel="noopener">&lt;code>group_vfold_cv()&lt;/code>&lt;/a> to use tidyselect on the stratification variable.&lt;/li>
&lt;li>Updated
&lt;a href="https://tidymodels.github.io/rsample/reference/initial_split.html" target="_blank" rel="noopener">&lt;code>initial_split()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/rsample/reference/mc_cv.html" target="_blank" rel="noopener">&lt;code>mc_cv()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/rsample/reference/vfold_cv.html" target="_blank" rel="noopener">&lt;code>vfold_cv()&lt;/code>&lt;/a>, and
&lt;a href="https://tidymodels.github.io/rsample/reference/bootstraps.html" target="_blank" rel="noopener">&lt;code>bootstraps()&lt;/code>&lt;/a> with new &lt;code>breaks&lt;/code> parameter that specifies the number of bins to stratify by for a numeric stratification variable.&lt;/li>
&lt;/ul>
&lt;h2 id="parsnip-0031">parsnip 0.0.3.1
&lt;a href="#parsnip-0031">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Unplanned release based on CRAN requirements for Solaris.&lt;/p>
&lt;h3 id="breaking-changes-1">Breaking Changes
&lt;a href="#breaking-changes-1">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>The method that &lt;code>parsnip&lt;/code> uses to store the model information has changed. Any custom models from previous versions will need to use the new method for registering models. The methods are detailed in &lt;code>?get_model_env&lt;/code> and the
&lt;a href="https://tidymodels.github.io/parsnip/articles/articles/Scratch.html" target="_blank" rel="noopener">package vignette for adding models&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The mode needs to be declared for models that can be used for more than one mode prior to fitting and/or translation.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For &lt;code>surv_reg()&lt;/code>, the engine that uses the &lt;code>survival&lt;/code> package is now called &lt;code>survival&lt;/code> instead of &lt;code>survreg&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For &lt;code>glmnet&lt;/code> models, the full regularization path is always fit regardless of the value given to &lt;code>penalty&lt;/code>. Previously, the model was fit by passing &lt;code>penalty&lt;/code> to &lt;code>glmnet&lt;/code>'s &lt;code>lambda&lt;/code> argument, and the model could only make predictions at those specific values.
&lt;a href="https://github.com/tidymodels/parsnip/issues/195" target="_blank" rel="noopener">(#195)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="new-features">New Features
&lt;a href="#new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;code>add_rowindex()&lt;/code> can create a column called &lt;code>.row&lt;/code> to a data frame.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If a computational engine is not explicitly set, a default will be used. Each default is documented on the corresponding model page. A warning is issued at fit time unless verbosity is zero.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>nearest_neighbor()&lt;/code> gained a &lt;code>multi_predict&lt;/code> method. The &lt;code>multi_predict()&lt;/code> documentation is a little better organized.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A suite of internal functions were added to help with upcoming model tuning features.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A &lt;code>parsnip&lt;/code> object always saved the name(s) of the outcome variable(s) for proper naming of the predicted values.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="corrr-04">corrr 0.4
&lt;a href="#corrr-04">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="new-features-1">New features
&lt;a href="#new-features-1">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>New function called
&lt;a href="https://tidymodels.github.io/corrr/reference/dice.html" target="_blank" rel="noopener">&lt;code>dice()&lt;/code>&lt;/a> function, wraps &lt;code>focus(x,..., mirror = TRUE)&lt;/code>&lt;/li>
&lt;li>A new
&lt;a href="https://tidymodels.github.io/corrr/reference/retract.html" target="_blank" rel="noopener">&lt;code>retract()&lt;/code>&lt;/a> function does the opposite of &lt;code>stretch()&lt;/code>&lt;/li>
&lt;li>A new argument was added to
&lt;a href="https://tidymodels.github.io/corrr/reference/stretch.html" target="_blank" rel="noopener">&lt;code>stretch()&lt;/code>&lt;/a> called &lt;code>remove.dups&lt;/code>. It removes duplicates with out removing all NAs.&lt;/li>
&lt;/ul>
&lt;h3 id="improvements">Improvements
&lt;a href="#improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>&lt;code>correlate()&lt;/code>'s interface for databases was improved. It now only calculates unique pairs, and simplifies the formula that ultimately runs in-database. We also re-added the vignette to the package, which is also available on the site as an
&lt;a href="https://tidymodels.github.io/corrr/articles/databases.html" target="_blank" rel="noopener">article&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="tidypredict-043">tidypredict 0.4.3
&lt;a href="#tidypredict-043">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="new-models">New models
&lt;a href="#new-models">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The new version is now able to parse the following models:&lt;/p>
&lt;ul>
&lt;li>&lt;code>cubist()&lt;/code>, from the &lt;code>Cubist&lt;/code> package&lt;/li>
&lt;li>&lt;code>ctree()&lt;/code>, from the &lt;code>partykit&lt;/code> package&lt;/li>
&lt;li>XGBoost trained models, via the &lt;code>xgboost&lt;/code> package&lt;/li>
&lt;/ul>
&lt;h3 id="new-features-2">New features
&lt;a href="#new-features-2">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>Integration with &lt;code>broom&lt;/code>'s &lt;code>tidy()&lt;/code> function. It works with Regression models only&lt;/li>
&lt;li>Adds support for &lt;code>parsnip&lt;/code> fitted models: &lt;code>lm&lt;/code>, &lt;code>randomForest&lt;/code>, &lt;code>ranger&lt;/code>, and &lt;code>earth&lt;/code>&lt;/li>
&lt;li>Adds
&lt;a href="https://tidymodels.github.io/tidypredict/reference/as_parsed_model.html" target="_blank" rel="noopener">&lt;code>as_parsed_model()&lt;/code>&lt;/a> function. It adds the proper class components to the list. This allows any model exported in the correct spec to be read in by &lt;code>tidypredict&lt;/code>. See the
&lt;a href="https://tidymodels.github.io/tidypredict/articles/save.html" target="_blank" rel="noopener">Save Models&lt;/a> and
&lt;a href="https://tidymodels.github.io/tidypredict/articles/non-r.html" target="_blank" rel="noopener">Non-R models&lt;/a> for more information&lt;/li>
&lt;/ul>
&lt;h3 id="improvements-1">Improvements
&lt;a href="#improvements-1">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>Now supports classification models from &lt;code>ranger&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="website">Website
&lt;a href="#website">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The package&amp;rsquo;s
&lt;a href="https://tidymodels.github.io/tidypredict/index.html" target="_blank" rel="noopener">official website&lt;/a> has been expanded greatly. Here are some highlights:&lt;/p>
&lt;ul>
&lt;li>An article per each supported model, they are found under Model List&lt;/li>
&lt;li>A how to guide to save and reload models,
&lt;a href="https://tidymodels.github.io/tidypredict/articles/save.html" target="_blank" rel="noopener">link here&lt;/a>&lt;/li>
&lt;li>How to integrate non-R models to &lt;code>tidypredict&lt;/code>,
&lt;a href="https://tidymodels.github.io/tidypredict/articles/non-r.html" target="_blank" rel="noopener">link here&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="yardstick-004">yardstick 0.0.4
&lt;a href="#yardstick-004">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="new-metrics">New Metrics
&lt;a href="#new-metrics">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Two new metrics have been added to yardstick:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://tidymodels.github.io/yardstick/reference/iic.html" target="_blank" rel="noopener">&lt;code>iic()&lt;/code>&lt;/a> is a numeric metric for computing the index of ideality of correlation. It is a potential alternative to the traditional correlation coefficient, and has been used in QSAR models (
&lt;a href="https://github.com/tidymodels/yardstick/issues/87" target="_blank" rel="noopener">#115&lt;/a>).&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/yardstick/reference/average_precision.html" target="_blank" rel="noopener">&lt;code>average_precision()&lt;/code>&lt;/a> is a probability metric that can be used as an alternative to &lt;code>pr_auc()&lt;/code>. It has the benefit of avoiding any issues of ambiguity in the edge case where &lt;code>recall == 0&lt;/code> and the current number of false positives is &lt;code>0&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="improvements-2">Improvements
&lt;a href="#improvements-2">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>&lt;code>pr_curve()&lt;/code> (and by extension &lt;code>pr_auc()&lt;/code>) has been greatly improved to better handle edge cases when duplicate class probability values are present. Additionally, the first precision value in the curve is now a &lt;code>1&lt;/code>, rather than an &lt;code>NA&lt;/code>, which results in a more practical curve, and generates a more correct AUC value (
&lt;a href="https://github.com/tidymodels/yardstick/issues/93" target="_blank" rel="noopener">#93&lt;/a>).&lt;/li>
&lt;li>Each metric function now has a &lt;code>direction&lt;/code> attribute, which specifies the direction required for optimization, either minimization or maximization.&lt;/li>
&lt;li>Documentation for class probability metrics has been improved with more informative examples (
&lt;a href="https://github.com/tidymodels/yardstick/issues/100" target="_blank" rel="noopener">#100&lt;/a>).&lt;/li>
&lt;li>&lt;code>mn_log_loss()&lt;/code> now uses the min/max rule before computing the log of the estimated probabilities to avoid problematic undefined log values (
&lt;a href="https://github.com/tidymodels/yardstick/issues/103" target="_blank" rel="noopener">#103&lt;/a>).&lt;/li>
&lt;/ul>
&lt;h2 id="upcoming-changes-and-directions">Upcoming Changes and Directions
&lt;a href="#upcoming-changes-and-directions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We are currently working on two general use packages: &lt;code>workflows&lt;/code> and &lt;code>tune&lt;/code>. The former bundles together recipes, model object, and other items so that there can be single &lt;code>fit()&lt;/code> and &lt;code>predict()&lt;/code> methods. &lt;code>tune&lt;/code> will have tools for&amp;hellip; um&amp;hellip; tuning models. We are hoping to make these public in the next month or so.&lt;/p>
&lt;p>There will be some changes to accommodate model tuning. The &lt;code>dials&lt;/code> package has been re-factored substantially (see the current GH master branch) and there were some small interfaces changes to &lt;code>recipes&lt;/code> too (mostly backwards compatible and also on GH). We are pretty close to end of &amp;ldquo;Phase I&amp;rdquo; of our tidymodels work.&lt;/p></description></item><item><title>How parsnip works</title><link>https://www.tidyverse.org/blog/2019/04/parsnip-internals/</link><pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/04/parsnip-internals/</guid><description>&lt;p>
&lt;a href="https://tidymodels.github.io/parsnip/" target="_blank" rel="noopener">&lt;code>parsnip&lt;/code>&lt;/a> was accepted to CRAN late last year. Our
&lt;a href="https://www.tidyverse.org/articles/2018/11/parsnip-0-0-1/" target="_blank" rel="noopener">first blog post&lt;/a> was a top-level introduction. Here, we will go into the design of some of the internals. If you end up looking at the package sources, there are going to be times that you might question our sanity. This post is intended to go over some design decisions and provide some context.&lt;/p>
&lt;h1 id="my-first-solution-caret">My first solution: caret
&lt;a href="#my-first-solution-caret">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>Having developed
&lt;a href="https://topepo.github.io/caret/" target="_blank" rel="noopener">&lt;code>caret&lt;/code>&lt;/a> in early 2005, I was not prepared for what it would be like to maintain a package that wrapped more than 200 models. What &lt;code>caret&lt;/code> does is to create code &lt;em>modules&lt;/em> that define the different aspects of modeling, such as model fitting, prediction, and so on. These code modules are contained in lists, one per specific model. For example, here is one of the simplest lists for
&lt;a href="https://www.rdocumentation.org/packages/MASS/versions/7.3-51.1/topics/lda" target="_blank" rel="noopener">&lt;code>MASS::lda&lt;/code>&lt;/a> (slightly abbreviated):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Linear Discriminant Analysis&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">library&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;MASS&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Classification&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">fit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">wts&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lev&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">last&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">classProbs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">MASS&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">lda&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="n">predict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">modelFit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newdata&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">submodels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">modelFit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newdata&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">class&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">prob&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">modelFit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newdata&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">submodels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">modelFit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newdata&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">posterior&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some notes:&lt;/p>
&lt;ol>
&lt;li>✔ The modules are fairly well-defined and mutually exclusive.&lt;/li>
&lt;li>✔ The structure prevents &lt;em>information leakage&lt;/em>. The fitting parts are isolated from the prediction parts and the prediction modules only return predictions in a standard format. &lt;code>caret&lt;/code> compartmentalizes the modeling process and prevents people from &amp;ldquo;teaching to the test&amp;rdquo; unless they deliberately go out of their way to do so.&lt;/li>
&lt;li>✔ These modules cleanly document
&lt;a href="https://stat.ethz.ch/pipermail/r-devel/2012-January/062935.html" target="_blank" rel="noopener">issues&lt;/a> with using the packages. We&amp;rsquo;d like each model function to have a predictable interface for fitting and prediction, but that&amp;rsquo;s not the reality for many packages. If nothing else, these modules document the idiosyncratic nature of some packages.&lt;/li>
&lt;li>✔ The &lt;code>lda&lt;/code> code above is a fairly clean case. Others are not as nice to look at, especially if they can predict multiple sub-models at once or have problematic interfaces.&lt;/li>
&lt;li>✖ There is a lot of code duplication. For this reason, the directory containing the current set of 238 modules is about 1.3MB.&lt;/li>
&lt;li>✖ The system in &lt;code>caret&lt;/code> rigidly defines what parameters can be tuned. It is a bit of a walled garden in this respect.&lt;/li>
&lt;li>✔ Code like &lt;code>MASS::lda&lt;/code> would be exposed to &lt;code>R CMD check&lt;/code> if it is contained in a package&amp;rsquo;s &lt;code>R&lt;/code> directory. Because of this, there was a large number of package dependencies in early versions. &lt;code>caret&lt;/code> was almost intolerable when it came time for CRAN to check the package. One way that I fixed this was to compile these code modules in an R list object and treat that as &lt;em>data&lt;/em> in the package. In this way, the package R files do not contain much specific model code and, many formal dependencies are avoided.&lt;/li>
&lt;li>✔ The ellipses (&lt;code>...&lt;/code>) are heavily utilized here. This makes passing other arguments to the underlying fitting function trivial. This is probably still my favorite thing about the S language.&lt;/li>
&lt;li>✖ In some cases, &lt;code>caret&lt;/code> needs to grab an object that might be in the ellipses in order to modify the value. For example, the main tuning parameters for
&lt;a href="https://www.rdocumentation.org/packages/rpart/versions/4.1-13/topics/rpart" target="_blank" rel="noopener">&lt;code>rpart&lt;/code>&lt;/a> models are in
&lt;a href="https://www.rdocumentation.org/packages/rpart/versions/4.1-13/topics/rpart.control" target="_blank" rel="noopener">&lt;code>rpart.control&lt;/code>&lt;/a>. If a user passes in an argument by the name of &lt;code>control&lt;/code>, it will need to be captured and the appropriate arguments (like &lt;code>cp&lt;/code>, &lt;code>maxdepth&lt;/code>, or &lt;code>minsplit&lt;/code>) are modified without changing the other arguments. That&amp;rsquo;s not hard to do but it eliminates the benefits you get by using the ellipses. In the end, &lt;code>do.call(&amp;quot;rpart&amp;quot;, args)&lt;/code> is used to fit the model. The downside of this is that the &lt;em>data&lt;/em> objects are embedded in &lt;code>args&lt;/code> and, as an unhappy side-effect, the &lt;em>data set gets embedded in &lt;code>rpart&lt;/code>'s call object&lt;/em>. That&amp;rsquo;s really bad.&lt;/li>
&lt;/ol>
&lt;p>When I began at RStudio, I had already been thinking about a different and, hopefully more elegant, way to do this for &lt;code>tidymodels&lt;/code>.&lt;/p>
&lt;h1 id="a-focus-on-calls-and-quosures">A focus on calls and quosures
&lt;a href="#a-focus-on-calls-and-quosures">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>When &lt;code>parsnip&lt;/code> fits a model, it constructs a call object that will be evaluated to create the model fit object (&lt;code>rlang::call2&lt;/code> and &lt;code>rlang::call_modify&lt;/code> are excellent). For example, if we were doing this &amp;ldquo;by-hand&amp;rdquo; for something simple like &lt;code>glm&lt;/code>, an initial function using &lt;code>rlang&lt;/code> could be:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rlang&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">glm_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">formula&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">evaluate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1"># capture the specific arguments and ellipses as quosures:&lt;/span>
&lt;span class="n">args&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">formula&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">enquo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">formula&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rlang&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">enquo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1"># capture any extra arguments&lt;/span>
&lt;span class="n">args&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rlang&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">enquos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">...&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1"># make the call&lt;/span>
&lt;span class="n">model_call&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">rlang&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">call2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;glm&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.ns&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;stats&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">!!!&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">evaluate&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">rlang&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">eval_tidy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">model_call&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="n">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">model_call&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">res&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nf">glm_fit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; stats::glm(formula = ~, data = ~)
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">glm_fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stats&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">binomial&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; stats::glm(formula = ~, data = ~, family = ~stats::binomial)
&lt;/code>&lt;/pre>&lt;p>When these are printed, the tilde indicates which values are &lt;em>quosures&lt;/em>. A
&lt;a href="https://adv-r.hadley.nz/evaluation.html" target="_blank" rel="noopener">quosure&lt;/a> is a combination of an &lt;code>rlang&lt;/code> expression and a reference to the environment in which it originated. Since it is partly an expression, the value has not yet been evaluated inside of &lt;code>glm_fit()&lt;/code>. For this reason, when we pass &lt;code>family = stats::binomial&lt;/code>, the object
&lt;a href="https://www.rdocumentation.org/packages/stats/versions/3.5.1/topics/family" target="_blank" rel="noopener">&lt;code>stats::binomial&lt;/code>&lt;/a> is &lt;em>not&lt;/em> evaluated. If it were, the value of that object would be embedded into the call (type &lt;code>unclass(binomial())&lt;/code> at an R prompt to see what this looks like).&lt;/p>
&lt;p>Here&amp;rsquo;s a better example:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">glm_fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; stats::glm(formula = ~(mpg ~ .), data = ~mtcars, x = ~FALSE)
&lt;/code>&lt;/pre>&lt;p>The
&lt;a href="https://www.rdocumentation.org/packages/rlang/versions/0.2.2/topics/eval_tidy_" target="_blank" rel="noopener">&lt;code>eval_tidy&lt;/code>&lt;/a> function can evaluate the quosure arguments when the call itself is evaluated. We get our model object as expected:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">glm_fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">evaluate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt;
#&amp;gt; Call: stats::glm(formula = ~(mpg ~ .), data = ~mtcars, x = ~FALSE)
#&amp;gt;
#&amp;gt; Coefficients:
#&amp;gt; (Intercept) cyl disp hp drat wt
#&amp;gt; 12.3034 -0.1114 0.0133 -0.0215 0.7871 -3.7153
#&amp;gt; qsec vs am gear carb
#&amp;gt; 0.8210 0.3178 2.5202 0.6554 -0.1994
#&amp;gt;
#&amp;gt; Degrees of Freedom: 31 Total (i.e. Null); 21 Residual
#&amp;gt; Null Deviance: 1130
#&amp;gt; Residual Deviance: 147 AIC: 164
&lt;/code>&lt;/pre>&lt;p>For &lt;code>parsnip&lt;/code>, there are utility functions that create the call and others to evaluate it. This means that the only model-related information needed to by the package to define the general &lt;code>glm&lt;/code> fitting function would be:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">glm_data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">func&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;glm&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;stats&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">required_args&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;formula&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>All of the other arguments are assembled from the model specification object or extra arguments provided to
&lt;a href="https://tidymodels.github.io/parsnip/reference/set_engine.html" target="_blank" rel="noopener">&lt;code>set_engine()&lt;/code>&lt;/a> and
&lt;a href="https://tidymodels.github.io/parsnip/reference/fit.html" target="_blank" rel="noopener">&lt;code>fit()&lt;/code>&lt;/a>. This allows for a fairly compact representation of the information for the fitting module. Also, it does not expose the code in a way that requires a package dependency and doesn&amp;rsquo;t contaminate the model call with actual object values. The same strategy can be used to produce predictions and other quantities.&lt;/p>
&lt;p>There are some other niceties too. If a package, like
&lt;a href="https://cran.r-project.org/package=glmnet" target="_blank" rel="noopener">&lt;code>glmnet&lt;/code>&lt;/a> has a non-formula interface and requires the predictors to be in a matrix, that fitting function can just insert &lt;code>x = as.matrix(x)&lt;/code> into the &lt;code>glmnet&lt;/code> call instead of doing the matrix conversion prior to the model fit.&lt;/p>
&lt;p>Unsurprisingly, most model are more complex than our &lt;code>glm&lt;/code> example. There are some modeling packages, such as
&lt;a href="https://keras.rstudio.com/" target="_blank" rel="noopener">&lt;code>keras&lt;/code>&lt;/a> or
&lt;a href="https://cran.r-project.org/package=xgboost" target="_blank" rel="noopener">&lt;code>xgboost&lt;/code>&lt;/a>, that don&amp;rsquo;t have a one-line call to fit the model (see the &lt;code>keras&lt;/code> regression example
&lt;a href="https://keras.rstudio.com/articles/tutorial_basic_regression.html" target="_blank" rel="noopener">here&lt;/a>). In this case, a wrapper function is needed and this most likely results in an extra package dependency.&lt;/p>
&lt;p>Also, some prediction methods give back results that require post-processing. For example, class probability predictions for a multiclass &lt;code>xgboost&lt;/code> model come back as &lt;em>a vector&lt;/em>. For example, if you were to predict four samples of iris data, you would get a 12 element vector back that requires you to reshape the results into the appropriate 4x3 data frame. &lt;code>parsnip&lt;/code> handles these by having slots for pre-processing the data and/or post-processing the raw prediction results. More information can be found on the
&lt;a href="https://tidymodels.github.io/parsnip/articles/articles/Scratch.html" target="_blank" rel="noopener">vignette for creating a model object&lt;/a>. Keep in mind that, as we and other contributors work with the package more, these internals may slightly change in the first few versions.&lt;/p>
&lt;p>Also, a lot of the package code revolves around getting the arguments right. There are some default arguments set by the package, such as &lt;code>family = binomial&lt;/code> for logistic regression. These defaults can be overwritten but may also depend on the mode of the model (e.g. regression, classification, etc.). There are also some arguments that &lt;code>parsnp&lt;/code> &lt;em>protects&lt;/em> in case the user tries to modify them (e.g. &lt;code>data&lt;/code>). Finally, the main arguments to &lt;code>parsnip&lt;/code> model functions are standardized and need to eventually be converted back to their engine-specific names.&lt;/p>
&lt;h1 id="the-down-side-to-using-calls">The down-side to using calls
&lt;a href="#the-down-side-to-using-calls">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>Suppose that you are fitting a random forest regression model and want to tune over &lt;code>mtry&lt;/code>, the number of randomly selected predictors to evaluate at each split of the tree. This is a function of the data since it depends on the number of predictors. A simplistic version of the code that iterates over &lt;code>mtry&lt;/code> might look like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rf_model&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">rand_forest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">for &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">new_rf&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">rf_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtry&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rf_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">new_rf&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ranger&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Width&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">iris&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># now evaluate the model for performance&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1"># what is the current value of `mtry`? &lt;/span>
&lt;span class="n">new_rf&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; Random Forest Model Specification (regression)
#&amp;gt;
#&amp;gt; Main Arguments:
#&amp;gt; mtry = i
&lt;/code>&lt;/pre>&lt;p>The specification depends on &lt;code>i&lt;/code> and its value is not in &lt;code>new_rf&lt;/code>, only a reference to a symbol &lt;code>i&lt;/code> in the global environment. What if the value of &lt;code>i&lt;/code> changes?&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="m">300&lt;/span>
&lt;span class="n">new_rf&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ranger&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Width&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">iris&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; Error in ranger::ranger(formula = formula, data = data, mtry = ~i, num.threads = 1, : User interrupt or internal error.
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># mtry should be between 1 and 4 for these data. &lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this context, using quosures for parameter values is problematic because (by default) their values are not frozen when the specification is created. However, we can fix this using
&lt;a href="https://adv-r.hadley.nz/quasiquotation.html" target="_blank" rel="noopener">quasiquotiation&lt;/a>. The value of &lt;code>i&lt;/code> can be embedded into the call using &lt;code>!!&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">for &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">new_rf&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">rf_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtry&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!!&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1"># What is the current value of `mtry` now? &lt;/span>
&lt;span class="n">new_rf&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; Random Forest Model Specification (regression)
#&amp;gt;
#&amp;gt; Main Arguments:
#&amp;gt; mtry = 4
&lt;/code>&lt;/pre>&lt;p>One other downside is related to the &lt;em>data&lt;/em> used in the call. In the random forest example above, the value of &lt;code>mtry&lt;/code> is dependent on the number of predictors. What if you don&amp;rsquo;t know how many predictors you have until the model is fit? How could you then specify &lt;code>mtry&lt;/code>?&lt;/p>
&lt;p>This could happen for a few reasons. For example, if you are using a &lt;code>recipe&lt;/code> that has a filter based on reducing correlation, the number of predictors may not be known until the recipe is prepped (and the number may vary inside of resampling). A more common example is related to dummy variables. If I use &lt;code>fit_xy()&lt;/code> instead of &lt;code>fit()&lt;/code> in the code above, the &lt;code>Species&lt;/code> predictor in the iris data is expanded from one column into two dummy variable columns just prior to the model fit. This could affect the possible range of &lt;code>mtry&lt;/code> values.&lt;/p>
&lt;p>There are a few ways to get around this. The first (and worst) is to use the data in an expression. Since &lt;code>mtry&lt;/code> isn&amp;rsquo;t evaluated until the model fit, you could try to use &lt;code>mtry = floor(sqrt(ncol(data)))&lt;/code>. That&amp;rsquo;s very brittle for a few different reasons. For one, &lt;em>you&lt;/em> may use the &lt;code>parsnip&lt;/code> interface &lt;code>fit(formula, data)&lt;/code>, but the underlying model may be &lt;code>model_fn(x, y)&lt;/code> and the &lt;code>data&lt;/code> object doesn&amp;rsquo;t exist when the model call is evaluated.&lt;/p>
&lt;p>For this reason, we added
&lt;a href="https://tidymodels.github.io/parsnip/reference/descriptors.html" target="_blank" rel="noopener">data descriptors&lt;/a> to &lt;code>parsnip&lt;/code>. These are small functions that only work when the model is being fit and they capture relevant aspects of the data at &lt;strong>the time of fit&lt;/strong>. For example, the function &lt;code>.obs()&lt;/code> can be used in an argument value to reference the number of rows in the data. To illustrate, the argument &lt;code>min_n&lt;/code> for a random forest model corresponds to how many data points are required to make further splits. For regression models, this defaults to 5 when using
&lt;a href="https://cran.r-project.org/package=ranger" target="_blank" rel="noopener">&lt;code>ranger&lt;/code>&lt;/a>. Suppose you want this to be one-tenth of the data but at least 8. If your data are being resampled, you might not know the training set size. You could use:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rf_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">min_n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">.obs&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ranger&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Width&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">iris&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; parsnip model object
#&amp;gt;
#&amp;gt; Ranger result
#&amp;gt;
#&amp;gt; Call:
#&amp;gt; ranger::ranger(formula = formula, data = data, min.node.size = ~max(8, floor(.obs()/10)), num.threads = 1, verbose = FALSE, seed = sample.int(10^5, 1))
#&amp;gt;
#&amp;gt; Type: Regression
#&amp;gt; Number of trees: 500
#&amp;gt; Sample size: 150
#&amp;gt; Number of independent variables: 4
#&amp;gt; Mtry: 2
#&amp;gt; Target node size: 15
#&amp;gt; Variable importance mode: none
#&amp;gt; Splitrule: variance
#&amp;gt; OOB prediction error (MSE): 0.0827
#&amp;gt; R squared (OOB): 0.565
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># The math checks out for the &amp;#34;Target node size&amp;#34; above:&lt;/span>
&lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">nrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">iris&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; [1] 15
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># Does this work outside of the function call? &lt;/span>
&lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">.obs&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; Descriptor context not set
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># Nope!&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The different descriptors should enable a wide variety of values for tuning parameters.&lt;/p>
&lt;h1 id="why-not-just-evaluate-the-arguments">Why not just evaluate the arguments?
&lt;a href="#why-not-just-evaluate-the-arguments">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>In many cases, the model specification arguments (e.g. &lt;code>mtry&lt;/code> or &lt;code>min_n&lt;/code>) and engine arguments are simple objects or scalar values. It makes sense to quote &lt;code>data&lt;/code>, &lt;code>x&lt;/code> or &lt;code>y&lt;/code> but why not just evaluate the other arguments as usual?&lt;/p>
&lt;p>There are a few reasons. First, there are some arguments whose evaluation should be deferred. For example, &lt;code>stan&lt;/code> and &lt;code>ranger&lt;/code> models have their own random seed arguments. To enable reproducibility, &lt;code>parsnip&lt;/code> gives these function default values of &lt;code>seed = sample.int(10^5, 1)&lt;/code>. If this argument were unquoted, then the seed value would be fixed when the package was compiled. There are solutions for this simple example though.&lt;/p>
&lt;p>As seen above for data descriptors, there is the need to wait for some argument values to be evaluated at the same time that the call is evaluated. Originally, &lt;code>parsnip&lt;/code> immediately evaluated almost all of the arguments and our advice was to have users quote special arguments using &lt;code>rlang::expr()&lt;/code>. The feedback on this aspect of &lt;code>parsnip&lt;/code> was uniformity unfavorable since it would require many casual users to learn &lt;code>rlang&lt;/code> and metaprogramming techniques. For this reason, we moved the metaprogramming parts within the function to accomplish the same goals but without the user being required to understand the technical minutiae. When a user uses an argument like &lt;code>min_n = max(8, floor(.obs()/10))&lt;/code>, the use of quosures is hidden from view and it looks like they are using an ordinary function called &lt;code>.obs()&lt;/code>.&lt;/p>
&lt;p>One final reason to leave arguments unevaluated in the model specification is related to &lt;em>future plans&lt;/em>. As previously mentioned, &lt;code>caret&lt;/code> rigidly defined which model parameters were available for performance tuning. The approach taken by &lt;code>parsnip&lt;/code> is very much the opposite. We want to enable users to tune any aspect of the model that they see fit, including some of the engine specific parameters.&lt;/p>
&lt;p>For example, when fitting a Bayesian regression model, a user might want to tune over how diffuse the prior distribution should be and so on. Rather than formally defining every possible tunable parameter, &lt;code>parsnip&lt;/code> allows the user to have a &lt;em>placeholder&lt;/em> for parameters in the model specification that declares, &amp;ldquo;I want to change this parameter, but I don&amp;rsquo;t know what the exact value should be.&amp;rdquo;&lt;/p>
&lt;p>To do this, a special function called &lt;code>varying()&lt;/code> is used. A model cannot be fit if it has any varying parameters but future packages will be able to detect any of these parameters and construct tuning grids accordingly. The parameter values can be changed to specific candidate values, and these are then tested to see which value is the most appropriate. The code to do this is not ready at this point and will be part of another package. However, we can demonstrate how this happens inside of &lt;code>parsnip&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lr_stan_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">logistic_reg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;stan&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">iter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">prior_intercept&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rstanarm&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">student_t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">varying&lt;/span>&lt;span class="p">()),&lt;/span>
&lt;span class="n">seed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2347&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Which, if any, arguments, should be tuned?&lt;/span>
&lt;span class="nf">varying_args&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lr_stan_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; # A tibble: 5 x 4
#&amp;gt; name varying id type
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
#&amp;gt; 1 penalty FALSE logistic_reg model_spec
#&amp;gt; 2 mixture FALSE logistic_reg model_spec
#&amp;gt; 3 iter FALSE logistic_reg model_spec
#&amp;gt; 4 prior_intercept TRUE logistic_reg model_spec
#&amp;gt; 5 seed FALSE logistic_reg model_spec
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">nnet_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">mlp&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">hidden_units&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">varying&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">epochs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">varying&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">dropout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">varying&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;keras&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">batch_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">varying&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">callbacks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">callback_early_stopping&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">monitor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#39;loss&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">min_delta&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">varying&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nf">varying_args&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nnet_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; # A tibble: 7 x 4
#&amp;gt; name varying id type
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
#&amp;gt; 1 hidden_units TRUE mlp model_spec
#&amp;gt; 2 penalty FALSE mlp model_spec
#&amp;gt; 3 dropout TRUE mlp model_spec
#&amp;gt; 4 epochs TRUE mlp model_spec
#&amp;gt; 5 activation FALSE mlp model_spec
#&amp;gt; 6 batch_size TRUE mlp model_spec
#&amp;gt; 7 callbacks TRUE mlp model_spec
&lt;/code>&lt;/pre>&lt;p>In the &lt;code>keras&lt;/code> example, the argument names in &lt;code>nnet_spec&lt;/code> names match up with objects in the
&lt;a href="https://tidymodels.github.io/dials/" target="_blank" rel="noopener">&lt;code>dials&lt;/code>&lt;/a> package, and it will be possible to automatically create tuning grids for all of the parameters.&lt;/p>
&lt;p>By avoiding evaluation in the model specification, we are enabling some interesting upcoming features.&lt;/p>
&lt;p>Also, this feature will also be used with recipes and other future packages. This will enable joint optimization of parameters associated with pre-processing, model fitting, and post-processing activities.&lt;/p></description></item><item><title>textrecipes 0.0.1</title><link>https://www.tidyverse.org/blog/2018/12/textrecipes-0-0-1/</link><pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/12/textrecipes-0-0-1/</guid><description>&lt;p>We&amp;rsquo;re delighted to announce the release of
&lt;a href="https://github.com/tidymodels/textrecipes" target="_blank" rel="noopener">textrecipes 0.0.1&lt;/a> on CRAN.
&lt;a href="https://tidymodels.github.io/textrecipes/" target="_blank" rel="noopener">textrecipes&lt;/a> implements a collection of new steps for the
&lt;a href="https://github.com/tidymodels/recipes" target="_blank" rel="noopener">recipes&lt;/a> package to deal with text preprocessing. textrecipes is still in early development so any and all feedback is highly appreciated.&lt;/p>
&lt;p>You can install it by running:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;textrecipes&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="new-steps">New steps
&lt;a href="#new-steps">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The steps introduced here can be split into 3 types, those that:&lt;/p>
&lt;ol>
&lt;li>convert from characters to list-columns and vice versa,&lt;/li>
&lt;li>modify the elements in list-columns, and&lt;/li>
&lt;li>convert list-columns to numerics.&lt;/li>
&lt;/ol>
&lt;p>This allows for greater flexibility in the preprocessing tasks that can be done while staying inside the
&lt;a href="https://github.com/tidymodels/recipes" target="_blank" rel="noopener">recipes&lt;/a> framework. This also prevents having a single step with many arguments.&lt;/p>
&lt;h2 id="workflows">Workflows
&lt;a href="#workflows">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>First we start by creating a
&lt;a href="https://tidymodels.github.io/recipes/reference/recipe.html" target="_blank" rel="noopener">&lt;code>recipe&lt;/code>&lt;/a> object from the original data.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;okc_text&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rec_obj&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">okc_text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">rec_obj&lt;/span>
&lt;span class="c1">#&amp;gt; Data Recipe&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Inputs:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; role #variables&lt;/span>
&lt;span class="c1">#&amp;gt; predictor 10&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The workflow in textrecipes so far starts with
&lt;a href="https://tidymodels.github.io/textrecipes/reference/step_tokenize.html" target="_blank" rel="noopener">&lt;code>step_tokenize()&lt;/code>&lt;/a>, followed by a combination of type-1 and type-2 steps ending with a type-3 step.
&lt;a href="https://tidymodels.github.io/textrecipes/reference/step_tokenize.html" target="_blank" rel="noopener">&lt;code>step_tokenize()&lt;/code>&lt;/a> wraps the
&lt;a href="https://github.com/ropensci/tokenizers" target="_blank" rel="noopener">tokenizers&lt;/a> package for tokenization, but other tokenization functions can be utilized using the &lt;code>custom_token&lt;/code> argument. More information concerning arguments can be found in the documentation. The shortest possible recipes are &lt;code>step_tokenize()&lt;/code> directly followed by a type-3 step.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1">### Feature hashing done on word tokens&lt;/span>
&lt;span class="n">rec_obj&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tokenize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">essay0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="c1"># token argument defaults to &amp;#34;words&amp;#34;&lt;/span>
&lt;span class="nf">step_texthash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">essay0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Data Recipe&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Inputs:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; role #variables&lt;/span>
&lt;span class="c1">#&amp;gt; predictor 10&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Operations:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Tokenization for essay0&lt;/span>
&lt;span class="c1">#&amp;gt; Feature hashing with essay0&lt;/span>
&lt;span class="c1">### Counting chacter occurrences&lt;/span>
&lt;span class="n">rec_obj&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tokenize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">essay0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;character&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">essay0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Data Recipe&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Inputs:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; role #variables&lt;/span>
&lt;span class="c1">#&amp;gt; predictor 10&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Operations:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Tokenization for essay0&lt;/span>
&lt;span class="c1">#&amp;gt; Term frequency with essay0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If one wanted to calculate the word count of the top 100 most frequently used words after stemming is performed, type-2 steps are needed. Here we use
&lt;a href="https://tidymodels.github.io/textrecipes/reference/step_stem.html" target="_blank" rel="noopener">&lt;code>step_stem()&lt;/code>&lt;/a> to perform stemming using the
&lt;a href="https://CRAN.R-project.org/package=SnowballC" target="_blank" rel="noopener">SnowballC&lt;/a> package and
&lt;a href="https://tidymodels.github.io/textrecipes/reference/step_tokenfilter.html" target="_blank" rel="noopener">&lt;code>step_tokenfilter()&lt;/code>&lt;/a> to keep only the 100 most frequent tokens.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rec_obj&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tokenize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">essay0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_stem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">essay0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tokenfilter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">essay0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_tokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">100&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">essay0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Data Recipe&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Inputs:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; role #variables&lt;/span>
&lt;span class="c1">#&amp;gt; predictor 10&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Operations:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Tokenization for essay0&lt;/span>
&lt;span class="c1">#&amp;gt; Stemming for essay0&lt;/span>
&lt;span class="c1">#&amp;gt; Text filtering for essay0&lt;/span>
&lt;span class="c1">#&amp;gt; Term frequency with essay0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For more combinations, please consult the documentation and the
&lt;a href="https://tidymodels.github.io/textrecipes/articles/cookbook---using-more-complex-recipes-involving-text.html" target="_blank" rel="noopener">vignette&lt;/a>, which includes recipe examples.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thank you goes out to the 6 people who contributed to this release:
&lt;a href="https://github.com/ClaytonJY" target="_blank" rel="noopener">@ClaytonJY&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jwijffels" target="_blank" rel="noopener">@jwijffels&lt;/a>,
&lt;a href="https://github.com/kanishkamisra" target="_blank" rel="noopener">@kanishkamisra&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p></description></item><item><title>tidymodels package updates</title><link>https://www.tidyverse.org/blog/2018/11/tidymodels-update-nov-18/</link><pubDate>Thu, 29 Nov 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/11/tidymodels-update-nov-18/</guid><description>&lt;p>Along with the release of
&lt;a href="https://tidymodels.github.io/parsnip/" target="_blank" rel="noopener">&lt;code>parsnip&lt;/code>&lt;/a> there are new versions of many &lt;code>tidymodels&lt;/code> packages:
&lt;a href="https://tidymodels.github.io/recipes/" target="_blank" rel="noopener">&lt;code>recipes&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/yardstick/" target="_blank" rel="noopener">&lt;code>yardstick&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/embed/" target="_blank" rel="noopener">&lt;code>embed&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/tidyposterior/" target="_blank" rel="noopener">&lt;code>tidyposterior&lt;/code>&lt;/a>, and
&lt;a href="https://github.com/tidymodels/tidymodels" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code>&lt;/a>.&lt;/p>
&lt;p>We made the conscious choice to add all of the breaking changes now instead of spreading them out over a few versions. The biggest changes are in &lt;code>yardstick&lt;/code> and &lt;code>recipes&lt;/code> and these are described below.&lt;/p>
&lt;p>One change across all of these packages: &lt;code>broom&lt;/code> is no longer used to obtain the &lt;code>tidy&lt;/code> S3 methods. Instead, the
&lt;a href="https://www.tidyverse.org/articles/2018/11/generics-0.0.1/" target="_blank" rel="noopener">&lt;code>generics&lt;/code> package&lt;/a> is imported so that we might reduce dependencies.&lt;/p>
&lt;h2 id="yardstick">&lt;strong>yardstick&lt;/strong>
&lt;a href="#yardstick">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This is a large release for yardstick, with more metrics, grouped
data frame integration, multiclass metric support, and a few breaking changes.&lt;/p>
&lt;h3 id="breaking-changes">Breaking changes
&lt;a href="#breaking-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>These changes were made with the intention of standardizing both the API and the output of each metric.&lt;/p>
&lt;p>All metrics now return a tibble rather than a single numeric value. This sets
the groundwork for allowing metrics to be used with grouped data frames, and
allows more informative output to be returned from each metric.&lt;/p>
&lt;p>To preserve some of the old behavior, &lt;code>_vec()&lt;/code> functions have been added for each
metric. These take vectors as inputs and return a single numeric result.&lt;/p>
&lt;p>A number of small breaking changes have been made to be in line with the tidymodels
&lt;a href="https://tidymodels.github.io/model-implementation-principles/" target="_blank" rel="noopener">model implementation principles&lt;/a>. These include: &lt;code>mnLogLoss()&lt;/code> being renamed to
&lt;a href="https://tidymodels.github.io/yardstick/reference/mn_log_loss.html" target="_blank" rel="noopener">&lt;code>mn_log_loss()&lt;/code>&lt;/a>, the &lt;code>na.rm&lt;/code> argument being renamed to &lt;code>na_rm&lt;/code>, and other similar changes that reflect a standardization that is being implemented across the entire tidymodels ecosystem. All of the changes are documented in the
&lt;a href="https://tidymodels.github.io/yardstick/news/index.html#breaking-changes" target="_blank" rel="noopener">NEWS&lt;/a>.&lt;/p>
&lt;h3 id="multiclass-metrics">Multiclass metrics
&lt;a href="#multiclass-metrics">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>A multiclass model is a classification model that has more than two potential outputs. Until now, the only metric with multiclass support was
&lt;a href="https://tidymodels.github.io/yardstick/reference/accuracy.html" target="_blank" rel="noopener">&lt;code>accuracy()&lt;/code>&lt;/a> because its definition extends naturally into the multiclass world. Now, all metrics have some form of multiclass support through the concepts of macro and micro averaging. To learn about how these types of averaging work, read the new
&lt;a href="https://tidymodels.github.io/yardstick/articles/multiclass.html" target="_blank" rel="noopener">vignette&lt;/a>.&lt;/p>
&lt;p>As an example, the following data set has columns for an observed multiclass result, the predicted class, individual class probability predictions, and the current resample (out of 10).&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hpc_cv&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">hpc_single_resample&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hpc_cv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Resample&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;Fold01&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">head&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hpc_single_resample&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; obs pred VF F M L Resample
#&amp;gt; 1 VF VF 0.914 0.0779 0.00848 1.99e-05 Fold01
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># The outcome has 4 potential values&lt;/span>
&lt;span class="nf">unique&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hpc_single_resample&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">obs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; [1] VF F M L
#&amp;gt; Levels: VF F M L
&lt;/code>&lt;/pre>&lt;p>yardstick will automatically detect that the input is from a multiclass model,
and will choose to use macro averaging by default in most cases.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">precision&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hpc_single_resample&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">obs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pred&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; # A tibble: 1 x 3
#&amp;gt; .metric .estimator .estimate
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 precision macro 0.637
&lt;/code>&lt;/pre>&lt;p>To tell yardstick metrics to use a different variant of averaging, use the &lt;code>estimator&lt;/code>
argument to specify &lt;code>&amp;quot;macro&amp;quot;&lt;/code>, &lt;code>&amp;quot;micro&amp;quot;&lt;/code> or &lt;code>&amp;quot;macro_weighted&amp;quot;&lt;/code> averaging, among
others depending on the metric.&lt;/p>
&lt;h3 id="grouped-data-frames">Grouped data frames
&lt;a href="#grouped-data-frames">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>To calculate metrics on multiple resamples at once, yardstick now recognizes
grouped data frames and calculates the metric on each group separately.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">hpc_grouped&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">hpc_cv&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Resample&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">hpc_grouped&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pr_auc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">obs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">VF&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">L&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">head&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; # A tibble: 3 x 4
#&amp;gt; Resample .metric .estimator .estimate
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 Fold01 pr_auc macro 0.595
#&amp;gt; 2 Fold02 pr_auc macro 0.599
#&amp;gt; 3 Fold03 pr_auc macro 0.682
&lt;/code>&lt;/pre>&lt;p>Combined with
&lt;a href="https://tidymodels.github.io/yardstick/reference/metric_set.html" target="_blank" rel="noopener">&lt;code>metric_set()&lt;/code>&lt;/a>, a new function for combining multiple metrics into one function call, this workflow makes calculating a large number of metrics over multiple resamples a quick task. We encourage you to check out the example section of
&lt;a href="https://tidymodels.github.io/yardstick/reference/metric_set.html" target="_blank" rel="noopener">&lt;code>metric_set()&lt;/code>'s help page&lt;/a> if you are interested in learning more.&lt;/p>
&lt;h3 id="curve-functions">Curve functions
&lt;a href="#curve-functions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Four new &amp;ldquo;curve&amp;rdquo; functions have been added to compute the full ROC curve, precision-recall curve, lift curve, and gain curve. Each of these functions has a corresponding &lt;code>ggplot2::autoplot()&lt;/code> method. Combined with the grouped data frame support, this greatly simplifies some aspects of visualizing model performance.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ggplot2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">hpc_grouped&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">roc_curve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">obs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">VF&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">L&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">ggtitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;One-VS-All ROC Curve&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">subtitle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Computed for each resample&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2018-11-tidymodels-updates_files/figure-html/unnamed-chunk-4-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;h3 id="new-metrics-and-vignettes">New metrics and vignettes
&lt;a href="#new-metrics-and-vignettes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The following metrics are new in this release:
&lt;a href="https://tidymodels.github.io/yardstick/reference/mape.html" target="_blank" rel="noopener">&lt;code>mape()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/yardstick/reference/kap.html" target="_blank" rel="noopener">&lt;code>kap()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/yardstick/reference/detection_prevalence.html" target="_blank" rel="noopener">&lt;code>detection_prevalence()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/yardstick/reference/bal_accuracy.html" target="_blank" rel="noopener">&lt;code>bal_accuracy()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/yardstick/reference/roc_curve.html" target="_blank" rel="noopener">&lt;code>roc_curve()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/yardstick/reference/pr_curve.html" target="_blank" rel="noopener">&lt;code>pr_curve()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/yardstick/reference/gain_curve.html" target="_blank" rel="noopener">&lt;code>gain_curve()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/yardstick/reference/lift_curve.html" target="_blank" rel="noopener">&lt;code>lift_curve()&lt;/code>&lt;/a>, and
&lt;a href="https://tidymodels.github.io/yardstick/reference/gain_capture.html" target="_blank" rel="noopener">&lt;code>gain_capture()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>There are also three new vignettes. One has already been mentioned that describes
&lt;a href="https://tidymodels.github.io/yardstick/articles/multiclass.html" target="_blank" rel="noopener">multiclass averaging&lt;/a>. The other two focus on the three main
&lt;a href="https://tidymodels.github.io/yardstick/articles/metric-types.html" target="_blank" rel="noopener">metric types&lt;/a> in yardstick, and on implementing
&lt;a href="https://tidymodels.github.io/yardstick/articles/custom-metrics.html" target="_blank" rel="noopener">custom metrics&lt;/a> for personal use.&lt;/p>
&lt;h2 id="recipes">&lt;strong>recipes&lt;/strong>
&lt;a href="#recipes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="breaking-changes-1">Breaking changes
&lt;a href="#breaking-changes-1">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>One big change was to make the argument names more consistent with the tidyverse standards and to also make them consistent with &lt;code>dials&lt;/code> and other packages. For example,
&lt;a href="https://tidymodels.github.io/recipes/reference/step_pca.html" target="_blank" rel="noopener">&lt;code>step_pca()&lt;/code>&lt;/a> now has an argument &lt;code>num_comp&lt;/code> that replaces the previous &lt;code>num&lt;/code> argument. This will pay off later when we enable the detection of tuning parameters and the automatic determination of grid values or parameter ranges. The biggest name change is in
&lt;a href="https://tidymodels.github.io/recipes/reference/bake.html" target="_blank" rel="noopener">&lt;code>bake()&lt;/code>&lt;/a>; &lt;code>newdata&lt;/code> is now &lt;code>new_data&lt;/code>. For the time being, a warning will be issued when &lt;code>newdata&lt;/code> is used but that won&amp;rsquo;t last past the next version. The list of name changes are detailed
&lt;a href="https://tidymodels.github.io/recipes/news/index.html" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;p>In recipes, variables can have different roles (e.g. &amp;ldquo;predictor&amp;rdquo; or &amp;ldquo;outcome&amp;rdquo;). Beyond those set by the package, roles are largely user specified and can be pretty much anything. Previously, only a single role was allowed. The new version of recipes expands the number of roles per column. This now means that
&lt;a href="https://tidymodels.github.io/recipes/reference/roles.html" target="_blank" rel="noopener">&lt;code>add_role()&lt;/code>&lt;/a> will &lt;em>append&lt;/em> roles, and the new function
&lt;a href="https://tidymodels.github.io/recipes/reference/roles.html" target="_blank" rel="noopener">&lt;code>update_role()&lt;/code>&lt;/a> will reset them. It also changes how the &lt;code>summary()&lt;/code> results for a recipe are returned since there can now be multiple rows per column variable.&lt;/p>
&lt;p>A feature that we will be working on in the &lt;em>next&lt;/em> version is to be able to reference (and use) previous steps. For example, if you center some variables, you might want to uncenter them at a later step. For this future feature, this version of &lt;code>recipes&lt;/code> mandates an ID field for each step. The ID can be anything, but the current convention is to use the step name followed by random digits (e.g. &lt;code>&amp;quot;center_irqtH&amp;quot;&lt;/code>).&lt;/p>
&lt;p>Another change was to default the
&lt;a href="https://tidymodels.github.io/recipes/reference/prep.html" target="_blank" rel="noopener">&lt;code>prep()&lt;/code>&lt;/a> option &lt;code>retain&lt;/code> to &lt;code>TRUE&lt;/code>. We (and others) found that this was something that is always done since it allows
&lt;a href="https://tidymodels.github.io/recipes/reference/juice.html" target="_blank" rel="noopener">&lt;code>juice()&lt;/code>&lt;/a> to get the processed training set at no extra cost. The down-side is that, if the training set is large, you carry a large copy of the data inside the recipe. When the &lt;code>verbose&lt;/code> option is turned on, a message is printed showing the size of the training set, i.e.:&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;The retained training set is ~ 20.0 Mb in memory.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>This size estimate is approximate since the base R function &lt;code>object.size()&lt;/code> is used, which does not count objects in any environments that are carried along.&lt;/p>
&lt;p>Finally, a number of steps check for duplicate names and will throw an error during &lt;code>prep()&lt;/code> if this occurs. This behavior may slightly change in the future due to changes in the &lt;code>tibble&lt;/code> package related to how unique names should treated be when creating data frames.&lt;/p>
&lt;h3 id="new-steps">New steps
&lt;a href="#new-steps">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>A big new feature in this version of &lt;code>recipes&lt;/code> is the addition of &lt;code>dplyr&lt;/code>-related steps:
&lt;a href="https://tidymodels.github.io/recipes/reference/step_arrange.html" target="_blank" rel="noopener">&lt;code>step_arrange()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/recipes/reference/step_filter.html" target="_blank" rel="noopener">&lt;code>step_filter()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/recipes/reference/step_mutate.html" target="_blank" rel="noopener">&lt;code>step_mutate()&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/recipes/reference/step_sample.html" target="_blank" rel="noopener">&lt;code>step_sample()&lt;/code>&lt;/a>, and
&lt;a href="https://tidymodels.github.io/recipes/reference/step_slice.html" target="_blank" rel="noopener">&lt;code>step_slice()&lt;/code>&lt;/a>. They follow their &lt;code>dplyr&lt;/code> analogs.
&lt;a href="https://tidymodels.github.io/recipes/reference/step_sample.html" target="_blank" rel="noopener">&lt;code>step_sample()&lt;/code>&lt;/a> covers both &lt;code>dplyr::sample_n()&lt;/code> and &lt;code>dplyr::sample_frac()&lt;/code>. Other new steps include:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://tidymodels.github.io/recipes/reference/step_integer.html" target="_blank" rel="noopener">&lt;code>step_integer()&lt;/code>&lt;/a> converts data to ordered integers similar to
&lt;a href="https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelEncoder.html" target="_blank" rel="noopener">&lt;code>LabelEncoder&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://tidymodels.github.io/recipes/reference/step_geodist.html" target="_blank" rel="noopener">&lt;code>step_geodist()&lt;/code>&lt;/a> can be used to calculate the distance between geocodes and a single reference location.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://tidymodels.github.io/recipes/reference/step_nnmf.html" target="_blank" rel="noopener">&lt;code>step_nnmf()&lt;/code>&lt;/a> computes the non-negative matrix factorization components for non-negative data.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>List-columns are also supported in &lt;code>recipes&lt;/code> now.
&lt;a href="https://tidymodels.github.io/recipes/reference/summary.recipe.html" target="_blank" rel="noopener">&lt;code>summary.recipe()&lt;/code>&lt;/a> now shows &lt;code>type&lt;/code> column values as &amp;ldquo;list&amp;rdquo; and these can be selected using &lt;code>has_type(&amp;quot;list&amp;quot;)&lt;/code>. When printing the recipe, a row is labeled as missing when its entire list element is missing (e.g. &lt;code>is.na(list[[i]])&lt;/code> is &lt;code>TRUE&lt;/code>). If the list element has some non-missing values, it is not counted as missing.&lt;/p>
&lt;p>There are also bug fixes and other small changes that can be found in the
&lt;a href="https://tidymodels.github.io/recipes/news/index.html" target="_blank" rel="noopener">News file&lt;/a>.&lt;/p>
&lt;h2 id="rsample">&lt;strong>rsample&lt;/strong>
&lt;a href="#rsample">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A function
&lt;a href="https://tidymodels.github.io/rsample/reference/initial_split.html" target="_blank" rel="noopener">&lt;code>initial_time_split()&lt;/code>&lt;/a> was added. It can be used to create &lt;em>ordered&lt;/em> initial splits and would be appropriate for time series data.&lt;/p>
&lt;p>(&lt;strong>breaking change&lt;/strong>) Also, the &lt;code>recipes&lt;/code>-related
&lt;a href="https://tidymodels.github.io/recipes/reference/prepper.html" target="_blank" rel="noopener">&lt;code>prepper()&lt;/code>&lt;/a> function was moved to the &lt;code>recipes&lt;/code> package. This makes the &lt;code>rsample&lt;/code>'s install footprint much smaller.&lt;/p>
&lt;p>Finally, &lt;code>rsplit&lt;/code> objects have a better representation inside of tibbles when the sample sizes are large.&lt;/p>
&lt;h2 id="embed">&lt;strong>embed&lt;/strong>
&lt;a href="#embed">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The tensorflow function
&lt;a href="https://tidymodels.github.io/embed/reference/step_embed.html" target="_blank" rel="noopener">&lt;code>step_embed()&lt;/code>&lt;/a> can now handle callbacks to &lt;code>keras&lt;/code>. This enables a few different features, including stopping when a convergence criterion is met.&lt;/p>
&lt;h2 id="tidymodels">&lt;strong>tidymodels&lt;/strong>
&lt;a href="#tidymodels">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We added
&lt;a href="https://tidymodels.github.io/parsnip/" target="_blank" rel="noopener">&lt;code>parsnip&lt;/code>&lt;/a> and
&lt;a href="https://tidymodels.github.io/dials/" target="_blank" rel="noopener">&lt;code>dials&lt;/code>&lt;/a> to the core set of packages and bumped all packages up to their current versions.&lt;/p></description></item><item><title>parsnip</title><link>https://www.tidyverse.org/blog/2018/11/parsnip-0-0-1/</link><pubDate>Wed, 28 Nov 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/11/parsnip-0-0-1/</guid><description>&lt;p>The &lt;code>parsnip&lt;/code> package is now
&lt;a href="https://cran.r-project.org/package=parsnip" target="_blank" rel="noopener">on CRAN&lt;/a>. It is designed to solve a specific problem related to model fitting in R, the interface. Many functions have different interfaces and arguments names and &lt;code>parsnip&lt;/code> standardizes the interface for fitting models as well as the return values. When using &lt;code>parsnip&lt;/code>, you don&amp;rsquo;t have to remember each interface and its unique set of argument names to easily move between R packages.&lt;/p>
&lt;p>This is the first of several blog posts that discuss the package. More information can be found at the
&lt;a href="https://tidymodels.github.io/parsnip/" target="_blank" rel="noopener">&lt;code>parsnip&lt;/code> pkgdown site&lt;/a>.&lt;/p>
&lt;h1 id="the-problem">The Problem
&lt;a href="#the-problem">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>The interface problem is something that I&amp;rsquo;ve talked about for some time. I&amp;rsquo;ll use logistic regression to demonstrate the issue here. Many of us are familiar with the standard &lt;code>glm&lt;/code> syntax for fitting models^[This syntax predates R and was formally described in the 1992 book &lt;em>Statistical Models in S&lt;/em>. It&amp;rsquo;s older than
&lt;a href="https://www.debian.org/doc/manuals/project-history/ch-intro.en.html#s1.1" target="_blank" rel="noopener">&lt;em>debian&lt;/em>&lt;/a>.]. It uses the formula method and, to fit a logistic model, the &lt;code>family = binomial&lt;/code> argument is required. Suppose that we want to apply some regularization to the model. A popular choice is the
&lt;a href="https://cran.r-project.org/package=glmnet" target="_blank" rel="noopener">&lt;code>glmnet&lt;/code>&lt;/a> package, but its interface is very different from &lt;code>glm&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>It does not use the formula method and expects the predictors in a matrix (so dummy variables must be pre-computed).&lt;/li>
&lt;li>Nonstandard &lt;code>family&lt;/code> objects are used. The argument is &lt;code>family = &amp;quot;binomial&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>While each of these is not a significant issue, these types of inconsistencies are common across R packages. The only way to avoid them is to only use a single package.&lt;/p>
&lt;p>There is a larger issue when you want to fit the same model via &lt;code>tensorflow&lt;/code>'s
&lt;a href="https://keras.rstudio.com/" target="_blank" rel="noopener">&lt;code>keras&lt;/code>&lt;/a> interface. &lt;code>keras&lt;/code> has a beautiful approach to sequentially assembling deep learning models, but it has very little resemblance to the traditional approaches. Creating a simple logistic model requires the user to learn and use drastically different syntax.&lt;/p>
&lt;p>There is also inconsistency in how different packages return predictions. &lt;em>Most&lt;/em> R packages use the &lt;code>predict()&lt;/code> function to make predictions on new data. If we want to get class probabilities for our logistic regression model, using &lt;code>predict(obj, newdata, type = &amp;quot;response&amp;quot;)&lt;/code> will return a vector of probabilities for the second level of our factor. However, this convention can be wildly inconsistent across R packages. Examples are:&lt;/p>
&lt;style>
td,th {
padding: 0.4em;
}
&lt;/style>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">Function&lt;/th>
&lt;th align="left">Package&lt;/th>
&lt;th align="left">Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">&lt;code>glm&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>stats&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>predict(obj, type = &amp;quot;response&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">&lt;code>lda&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>MASS&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>predict(obj)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">&lt;code>gbm&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>gbm&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>predict(obj, type = &amp;quot;response&amp;quot;, n.trees)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">&lt;code>mda&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>mda&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>predict(obj, type = &amp;quot;posterior&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">&lt;code>rpart&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>rpart&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>predict(obj, type = &amp;quot;prob&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">&lt;code>Weka&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>RWeka&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>predict(obj, type = &amp;quot;probability&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">&lt;code>logitboost&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>LogitBoost&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>predict(obj, type = &amp;quot;raw&amp;quot;, nIter)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">&lt;code>pamr.train&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>pamr&lt;/code>&lt;/td>
&lt;td align="left">&lt;code>pamr.predict(obj, type = &amp;quot;posterior&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;p>An added complication is that some models can create predictions across multiple &lt;em>submodels&lt;/em> at once. For example, boosted trees fit using &lt;code>\(i\)&lt;/code> iterations can produce predictions using less than &lt;code>\(i\)&lt;/code> iterations (effectively creating a different prediction model). This can lead to further inconsistencies.&lt;/p>
&lt;p>These issues, in aggregate, can be grating. Sometimes it might feel like:&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;Is R working for me or am I working for R?&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>parsnip&lt;/code> aims to decrease the frustration for people who want to evaluate different types of models on a data set. This is very much related to our
&lt;a href="https://tidymodels.github.io/model-implementation-principles/" target="_blank" rel="noopener">guidelines for developing modeling packages&lt;/a> (on which we are still looking for feedback).&lt;/p>
&lt;h1 id="parsnip-syntax">parsnip syntax
&lt;a href="#parsnip-syntax">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>To demonstrate, we&amp;rsquo;ll use &lt;code>mtcars&lt;/code> once again.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parsnip&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; ── Attaching packages ─────────────────────────────────────────────────────────────────── tidymodels 0.0.1 ──
&lt;/code>&lt;/pre>&lt;pre>&lt;code>#&amp;gt; ✔ ggplot2 3.1.0 ✔ recipes 0.1.4
#&amp;gt; ✔ tibble 1.4.2 ✔ broom 0.5.0
#&amp;gt; ✔ purrr 0.2.5 ✔ yardstick 0.0.2
#&amp;gt; ✔ dplyr 0.7.8 ✔ infer 0.3.1
#&amp;gt; ✔ rsample 0.0.3
&lt;/code>&lt;/pre>&lt;pre>&lt;code>#&amp;gt; ── Conflicts ────────────────────────────────────────────────────────────────────── tidymodels_conflicts() ──
#&amp;gt; ✖ purrr::accumulate() masks foreach::accumulate()
#&amp;gt; ✖ rsample::fill() masks tidyr::fill()
#&amp;gt; ✖ dplyr::filter() masks stats::filter()
#&amp;gt; ✖ yardstick::get_weights() masks keras::get_weights()
#&amp;gt; ✖ dplyr::lag() masks stats::lag()
#&amp;gt; ✖ rsample::populate() masks Rcpp::populate()
#&amp;gt; ✖ recipes::step() masks stats::step()
#&amp;gt; ✖ yardstick::tidy() masks broom::tidy(), recipes::tidy(), rsample::tidy()
#&amp;gt; ✖ purrr::when() masks foreach::when()
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">4831&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">initial_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mtcars&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">props&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">9&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">car_train&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">training&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">car_test&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s preprocess these data to center and scale the predictors. We&amp;rsquo;ll use a basic recipe to do this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">car_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">car_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_center&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">training&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">car_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">retain&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># The processed versions are:&lt;/span>
&lt;span class="n">train_data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">juice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_rec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">test_data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">bake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">car_test&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To use &lt;code>parsnip&lt;/code>, you start with a model &lt;em>specification&lt;/em>. This is a simple object that defines the &lt;em>intent&lt;/em> of the model. Since we will be using linear regression of various flavors, our first step is a simple statement:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">car_model&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">car_model&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; Linear Regression Model Specification (regression)
&lt;/code>&lt;/pre>&lt;p>That&amp;rsquo;s pretty underwhelming because we haven&amp;rsquo;t given it any details yet. &lt;code>parsnip&lt;/code> offers a variety of methods to fit this general model. We will use ordinary least squares, but could also use penalized least squares too (via the lasso, ridge regression, Bayesian estimation, dropout, etc). We differentiate these cases by the &lt;em>&lt;strong>computational engines&lt;/strong>&lt;/em>, which is a combination of the estimation type, such as least squares, and the &lt;em>implemention&lt;/em>. The latter could be an R package or some other computing platform like Spark or Tensorflow.&lt;/p>
&lt;p>To start simple, let&amp;rsquo;s use &lt;code>lm&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lm_car_model&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">car_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;lm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">lm_car_model&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; Linear Regression Model Specification (regression)
#&amp;gt;
#&amp;gt; Computational engine: lm
&lt;/code>&lt;/pre>&lt;p>There are no additional arguments that we should specify here, so let&amp;rsquo;s jump to fitting the actual model. Our two choices at this point are whether to use &lt;code>fit()&lt;/code> or &lt;code>fit_xy()&lt;/code>. &lt;code>fit()&lt;/code> takes a formula, while &lt;code>fit_xy()&lt;/code> takes objects for the predictors and outcome(s). Recall that &lt;code>glm&lt;/code> and &lt;code>lm&lt;/code> only allow for formulas, while &lt;code>glmnet&lt;/code> only takes a matrix of predictors and an outcome. &lt;code>parsnip&lt;/code> allows for either so that you can avoid having to think about what the underlying model function requires. To demonstrate, let&amp;rsquo;s make a simple model:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lm_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">lm_car_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">car_train&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># or&lt;/span>
&lt;span class="n">lm_car_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit_xy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">mpg&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mpg&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; parsnip model object
#&amp;gt;
#&amp;gt;
#&amp;gt; Call:
#&amp;gt; stats::lm(formula = formula, data = data)
#&amp;gt;
#&amp;gt; Coefficients:
#&amp;gt; (Intercept) cyl disp hp drat
#&amp;gt; 23.1945 -1.6396 0.0439 -0.0301 0.8517
#&amp;gt; wt qsec vs am gear
#&amp;gt; -6.0165 0.8668 0.8757 2.4274 -0.4658
#&amp;gt; carb
#&amp;gt; 0.7889
&lt;/code>&lt;/pre>&lt;p>If we had predictors that were factors, &lt;code>fit()&lt;/code> would be a better choice. If the underlying model takes a formula, the formula and data is passed directly to the function without modification. Otherwise, &lt;code>fit()&lt;/code> applies the standard &lt;code>model.matrix()&lt;/code> machinery to do the preprocessing and converts the data to the required format (e.g. a matrix for &lt;code>glmnet&lt;/code>). Note that, for Spark tables, &lt;code>fit()&lt;/code> must be used.&lt;/p>
&lt;p>It should be noted that &lt;code>lm_car_model&lt;/code> is a
&lt;a href="https://tidymodels.github.io/parsnip/reference/model_spec.html" target="_blank" rel="noopener">model specification object&lt;/a> while &lt;code>lm_fit&lt;/code> is a
&lt;a href="https://tidymodels.github.io/parsnip/reference/model_fit.html" target="_blank" rel="noopener">model fit object&lt;/a>.&lt;/p>
&lt;h1 id="more-engines">More Engines
&lt;a href="#more-engines">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>The value of &lt;code>parsnip&lt;/code> starts to show when we want to try different engines. Let&amp;rsquo;s take our same model and use Bayesian estimation to fit the parameters using Stan. We can change the engine to do so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">stan_car_model&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">car_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;stan&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">stan_car_model&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; Linear Regression Model Specification (regression)
#&amp;gt;
#&amp;gt; Computational engine: stan
&lt;/code>&lt;/pre>&lt;p>To fit this model, &lt;code>parsnip&lt;/code> calls &lt;code>stan_glm()&lt;/code> from the
&lt;a href="http://mc-stan.org/rstanarm/" target="_blank" rel="noopener">&lt;code>rstanarm&lt;/code>&lt;/a> package. If you want to pass in arguments to this function, just add them to &lt;code>set_engine&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">stan_car_model&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">car_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;stan&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">iter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">prior_intercept&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rstanarm&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">cauchy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">seed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2347&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">stan_car_model&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; Linear Regression Model Specification (regression)
#&amp;gt;
#&amp;gt; Engine-Specific Arguments:
#&amp;gt; iter = 5000
#&amp;gt; prior_intercept = rstanarm::cauchy(0, 10)
#&amp;gt; seed = 2347
#&amp;gt;
#&amp;gt; Computational engine: stan
&lt;/code>&lt;/pre>&lt;p>The namespace was used to call &lt;code>cauchy()&lt;/code> since &lt;code>parsnip&lt;/code> does not fully attach the package when the model is fit.&lt;/p>
&lt;p>The model can be fit in the same way. We&amp;rsquo;ll add a feature here; &lt;code>rstanarm&lt;/code> prints &lt;em>a lot&lt;/em> of output when fitting. This can be helpful to diagnose issues but we&amp;rsquo;ll exclude it using a control function:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># don&amp;#39;t print anything:&lt;/span>
&lt;span class="n">ctrl&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">fit_control&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">verbosity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">stan_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">stan_car_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">car_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">control&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctrl&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">stan_fit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; parsnip model object
#&amp;gt;
#&amp;gt; stan_glm
#&amp;gt; family: gaussian [identity]
#&amp;gt; formula: mpg ~ .
#&amp;gt; observations: 24
#&amp;gt; predictors: 11
#&amp;gt; ------
#&amp;gt; Median MAD_SD
#&amp;gt; (Intercept) 23.6 24.1
#&amp;gt; cyl -1.5 1.6
#&amp;gt; disp 0.0 0.0
#&amp;gt; hp 0.0 0.0
#&amp;gt; drat 0.8 2.4
#&amp;gt; wt -5.4 3.1
#&amp;gt; qsec 0.8 0.9
#&amp;gt; vs 0.7 3.2
#&amp;gt; am 2.3 2.7
#&amp;gt; gear -0.4 2.1
#&amp;gt; carb 0.6 1.4
#&amp;gt;
#&amp;gt; Auxiliary parameter(s):
#&amp;gt; Median MAD_SD
#&amp;gt; sigma 3.1 0.6
#&amp;gt;
#&amp;gt; Sample avg. posterior predictive distribution of y:
#&amp;gt; Median MAD_SD
#&amp;gt; mean_PPD 20.6 0.9
#&amp;gt;
#&amp;gt; ------
#&amp;gt; * For help interpreting the printed output see ?print.stanreg
#&amp;gt; * For info on the priors used see ?prior_summary.stanreg
&lt;/code>&lt;/pre>&lt;p>That was easy.&lt;/p>
&lt;p>&lt;strong>But wait, there&amp;rsquo;s more&lt;/strong>! Getting predictions for these models is simple and &lt;em>tidy&lt;/em>. We&amp;rsquo;ve been working on coming up with a
&lt;a href="https://tidymodels.github.io/model-implementation-principles/model-predictions.html" target="_blank" rel="noopener">standard for model predictions&lt;/a> where the predictions always return a tibble that has the same number of rows as the data being predicted. This solves the frustrating issue of having new data with missing predictor values and a &lt;code>predict()&lt;/code> method that returns predictions for only the complete data. In that case, you have to match up the rows of the original data to the predicted values.&lt;/p>
&lt;p>For regression, basic predictions come back in a column called &lt;code>.pred&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lm_fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">car_test&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; # A tibble: 8 x 1
#&amp;gt; .pred
#&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 17.5
#&amp;gt; 2 17.7
#&amp;gt; 3 11.0
#&amp;gt; 4 13.2
#&amp;gt; 5 13.2
#&amp;gt; 6 10.9
#&amp;gt; 7 31.9
#&amp;gt; 8 24.9
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stan_fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">car_test&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; # A tibble: 8 x 1
#&amp;gt; .pred
#&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 17.4
#&amp;gt; 2 17.9
#&amp;gt; 3 11.6
#&amp;gt; 4 13.6
#&amp;gt; 5 13.6
#&amp;gt; 6 10.9
#&amp;gt; 7 31.5
#&amp;gt; 8 24.9
&lt;/code>&lt;/pre>&lt;p>This can be easily joined to the original data and the &lt;code>.&lt;/code> in the name is there to prevent duplicate name conflicts.&lt;/p>
&lt;p>&lt;code>parsnip&lt;/code> also enables different types of predictions with a standard interface. To get interval estimates:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lm_fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">car_test&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;conf_int&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; # A tibble: 8 x 2
#&amp;gt; .pred_lower .pred_upper
#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 14.1 21.0
#&amp;gt; 2 11.6 23.8
#&amp;gt; 3 3.57 18.3
#&amp;gt; 4 7.41 18.9
#&amp;gt; 5 7.15 19.3
#&amp;gt; 6 6.39 15.5
#&amp;gt; 7 23.2 40.7
#&amp;gt; 8 19.0 30.9
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># Not really a confidence interval but gives quantiles of &lt;/span>
&lt;span class="c1"># the posterior distribution of the fitted values. &lt;/span>
&lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stan_fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">car_test&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;conf_int&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; # A tibble: 8 x 2
#&amp;gt; .pred_lower .pred_upper
#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 14.0 20.7
#&amp;gt; 2 12.0 23.9
#&amp;gt; 3 5.03 18.4
#&amp;gt; 4 8.37 18.9
#&amp;gt; 5 8.17 19.3
#&amp;gt; 6 6.38 15.4
#&amp;gt; 7 23.1 39.6
#&amp;gt; 8 19.1 30.8
&lt;/code>&lt;/pre>&lt;p>As one might expect, the code to obtain these values using the original packages are very different from one another. &lt;code>parsnip&lt;/code> works to make the interface easy. A mapping between the available models and their prediction types is
&lt;a href="https://tidymodels.github.io/parsnip/articles/articles/Models.html" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;h1 id="standardized-arguments">Standardized Arguments
&lt;a href="#standardized-arguments">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>Now let&amp;rsquo;s look at estimating this model using an L2 penalty (a.k.a weight decay, a.k.a ridge regression). There are a few ways of doing this. &lt;code>glmnet&lt;/code> is an obvious choice. While we don&amp;rsquo;t have to declare the size of the penalty at the time of model fitting, we&amp;rsquo;ll do so below for illustration.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">x_mat&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">car_train&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">mpg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">as.matrix&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">glmnet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x_mat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">car_train&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">mpg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lambda&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>alpha = 0&lt;/code> tells &lt;code>glmnet&lt;/code> to only use an L2 penalty (as opposed to L1 and L2).&lt;/p>
&lt;p>For &lt;code>keras&lt;/code>,
&lt;a href="https://keras.rstudio.com/articles/tutorial_basic_regression.html" target="_blank" rel="noopener">possible syntax&lt;/a> could be:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lr_model&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">keras_model_sequential&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">lr_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">layer_dense&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">units&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">input_shape&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">dim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x_mat&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">[2]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">activation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#39;linear&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">kernel_regularizer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">regularizer_l2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">early_stopping&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">callback_early_stopping&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">monitor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#39;loss&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">min_delta&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.000001&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">lr_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">compile&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">loss&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#39;mean_squared_error&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">optimizer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">optimizer_adam&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.001&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">lr_model&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x_mat&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">car_train&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">mpg&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">epochs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">batch_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">callbacks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">early_stopping&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is very powerful but maybe it&amp;rsquo;s not something that you want to have to type more than once.&lt;/p>
&lt;p>&lt;code>parsnip&lt;/code> model functions, like &lt;code>linear_reg()&lt;/code>, can also have &lt;em>main arguments&lt;/em> that are standardized and avoid jargon like &lt;code>lambda&lt;/code> or &lt;code>kernel_regularizer&lt;/code>. Here, a model specification would be:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">penalized&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mixture&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">penalty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">penalized&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; Linear Regression Model Specification (regression)
#&amp;gt;
#&amp;gt; Main Arguments:
#&amp;gt; penalty = 0.1
#&amp;gt; mixture = 0
&lt;/code>&lt;/pre>&lt;p>&lt;code>penalty&lt;/code> is the amount of regularization penalty that we want to use. &lt;code>mixture&lt;/code> is only used for models like &lt;code>glmnet&lt;/code> that can fit different types of penalties, and is the proportion of the penalty that corresponds to weight decay (in other words, &lt;code>alpha&lt;/code> from above).&lt;/p>
&lt;p>From here, the &lt;code>glmnet&lt;/code> model would be:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">glmn_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">penalized&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;glmnet&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">car_train&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">glmn_fit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; parsnip model object
#&amp;gt;
#&amp;gt;
#&amp;gt; Call: glmnet::glmnet(x = as.matrix(x), y = y, family = &amp;quot;gaussian&amp;quot;, alpha = ~0, lambda = ~0.1)
#&amp;gt;
#&amp;gt; Df %Dev Lambda
#&amp;gt; [1,] 10 0.854 0.1
&lt;/code>&lt;/pre>&lt;p>For &lt;code>keras&lt;/code>, we can add the other options (unrelated to the penalty) via &lt;code>set_engine()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">early_stopping&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">callback_early_stopping&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">monitor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#39;loss&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">min_delta&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.000001&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">keras_fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">penalized&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;keras&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">epochs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">batch_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callbacks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!!&lt;/span>&lt;span class="n">early_stopping&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">car_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">control&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctrl&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">keras_fit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#&amp;gt; parsnip model object
#&amp;gt;
#&amp;gt; Model
#&amp;gt; ___________________________________________________________________________
#&amp;gt; Layer (type) Output Shape Param #
#&amp;gt; ===========================================================================
#&amp;gt; dense_1 (Dense) (None, 1) 11
#&amp;gt; ___________________________________________________________________________
#&amp;gt; dense_2 (Dense) (None, 1) 2
#&amp;gt; ===========================================================================
#&amp;gt; Total params: 13
#&amp;gt; Trainable params: 13
#&amp;gt; Non-trainable params: 0
#&amp;gt; ___________________________________________________________________________
&lt;/code>&lt;/pre>&lt;p>The main arguments are standardized in &lt;code>parsnip&lt;/code>, so that &lt;code>logistic_reg()&lt;/code> and other functions use the same name, and are being standardized in other packages like
&lt;a href="https://tidymodels.github.io/recipes/" target="_blank" rel="noopener">&lt;code>recipes&lt;/code>&lt;/a> and
&lt;a href="https://tidymodels.github.io/dials/" target="_blank" rel="noopener">&lt;code>dials&lt;/code>&lt;/a>.&lt;/p>
&lt;h1 id="what-parsnip-is-and-what-it-isnt">What parsnip is and what it isn&amp;rsquo;t
&lt;a href="#what-parsnip-is-and-what-it-isnt">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>Other packages, such as
&lt;a href="https://topepo.github.io/caret/" target="_blank" rel="noopener">&lt;code>caret&lt;/code>&lt;/a> and &lt;code>mlr&lt;/code>, help to solve the R model API issue. These packages do a lot of other things too: preprocessing, model tuning, resampling, feature selection, ensembling, and so on. In the tidyverse, we strive to make our packages modular and &lt;code>parsnip&lt;/code> is designed &lt;em>only&lt;/em> to solve the interface issue. It is &lt;strong>not&lt;/strong> designed to be a drop-in replacement for
&lt;a href="https://topepo.github.io/caret/" target="_blank" rel="noopener">&lt;code>caret&lt;/code>&lt;/a>.&lt;/p>
&lt;p>The
&lt;a href="https://github.com/tidymodels" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> package collection&lt;/a>, which includes &lt;code>parsnip&lt;/code>, has other packages for many of these tasks, and they are designed to work together. We are working towards higher-level APIs that can replicate and extend what the current model packages can do.&lt;/p>
&lt;p>For example, &lt;code>fit()&lt;/code> and &lt;code>fit_xy()&lt;/code> do not involve recipes. It might seem natural to include a recipe interface like &lt;code>caret&lt;/code> does (and, originally, &lt;code>parsnip&lt;/code> did). The reason that recipes are excluded from fitting &lt;code>parsnip&lt;/code> objects is that you probably want to process the recipe &lt;em>once&lt;/em> and use it across different models. To include it would link that specific recipe to &lt;em>each&lt;/em> fitted model object.&lt;/p>
&lt;p>As an alternative, we are working on a different object type that is similar to existing pipelines where a set of modeling activities can be woven together to represent the entire &lt;strong>modeling process&lt;/strong>. To get an idea of the activities that we have in store for tidy modeling, look
&lt;a href="https://github.com/orgs/tidymodels/projects" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;h1 id="whats-next">What&amp;rsquo;s next
&lt;a href="#whats-next">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>Subsequent blog posts on &lt;code>parsnip&lt;/code> will talk about the underlying architecture and choices that we made along the line (and why). We&amp;rsquo;ll also talk more about how &lt;code>parsnip&lt;/code> integrates with other &lt;code>tidymodels&lt;/code> packages, how quasiquotation can/should be used, and some other features that are
&lt;a href="https://tidymodels.github.io/parsnip/reference/descriptors.html" target="_blank" rel="noopener">particularly interesting&lt;/a> to us.&lt;/p></description></item><item><title>The tidymodels Package</title><link>https://www.tidyverse.org/blog/2018/08/tidymodels-0-0-1/</link><pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/08/tidymodels-0-0-1/</guid><description>&lt;p>The &lt;code>tidymodels&lt;/code> package is now on
&lt;a href="http://cran.r-project.org/web/packages/tidymodels" target="_blank" rel="noopener">CRAN&lt;/a>. Similar to its sister package &lt;code>tidyverse&lt;/code>, it can be used to install and load tidyverse packages related to modeling and analysis. Currently, it installs and attaches
&lt;a href="https://broom.tidyverse.org/" target="_blank" rel="noopener">&lt;code>broom&lt;/code>&lt;/a>,
&lt;a href="http://dplyr.tidyverse.org" target="_blank" rel="noopener">&lt;code>dplyr&lt;/code>&lt;/a>,
&lt;a href="https://ggplot2.tidyverse.org/" target="_blank" rel="noopener">&lt;code>ggplot2&lt;/code>&lt;/a>,
&lt;a href="http://infer.netlify.com/" target="_blank" rel="noopener">&lt;code>infer&lt;/code>&lt;/a>,
&lt;a href="https://purrr.tidyverse.org/" target="_blank" rel="noopener">&lt;code>purrr&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/recipes/" target="_blank" rel="noopener">&lt;code>recipes&lt;/code>&lt;/a>,
&lt;a href="https://tidymodels.github.io/rsample/" target="_blank" rel="noopener">&lt;code>rsample&lt;/code>&lt;/a>,
&lt;a href="https://tibble.tidyverse.org/" target="_blank" rel="noopener">&lt;code>tibble&lt;/code>&lt;/a>, and
&lt;a href="https://tidymodels.github.io/yardstick/" target="_blank" rel="noopener">&lt;code>yardstick&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ───────────────────────────────── tidymodels 0.0.1 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ ggplot2 3.0.0 ✔ recipes 0.1.3&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ tibble 1.4.2 ✔ broom 0.5.0&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ purrr 0.2.5 ✔ yardstick 0.0.1&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ dplyr 0.7.6 ✔ infer 0.3.0&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ rsample 0.0.2&lt;/span>
&lt;span class="c1">#&amp;gt; ── Conflicts ──────────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ rsample::fill() masks tidyr::fill()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ dplyr::filter() masks stats::filter()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ dplyr::lag() masks stats::lag()&lt;/span>
&lt;span class="c1">#&amp;gt; ✖ recipes::step() masks stats::step()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>tidymodels&lt;/code> also contains a burgeoning list of &lt;em>tagged packages&lt;/em>. These can be used to install sets of packages for specific purposes. For example, if you are in need of additional tidy tools for analyzing text data:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">tag_attach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;text analysis&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ───────────────────────────────── tidymodels 0.0.1 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ tidytext 0.1.9 ✔ keras 2.1.6&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>These tags will be updated with each version of &lt;code>tidymodels&lt;/code> as new packages are released.&lt;/p>
&lt;p>The number of tidyverse modeling package continues to grow. Some packages on the development horizon include:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://topepo.github.io/parsnip" target="_blank" rel="noopener">&lt;code>parsnip&lt;/code>&lt;/a>: a unified interface to models. This should significantly reduce the amount of syntactical minutia that you&amp;rsquo;ll need to memorize by having one standardized model function across different packages and by harmonizing the parameter names across models.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://tidymodels.github.io/dials" target="_blank" rel="noopener">&lt;code>dials&lt;/code>&lt;/a>: tools for tuning parameters. &lt;code>dials&lt;/code> contains objects and methods for creating and validating tuning parameter values as well as grid search tools. This is designed to work seamlessly with &lt;code>parsnip&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://topepo.github.io/embed" target="_blank" rel="noopener">&lt;code>embed&lt;/code>&lt;/a>: an add-on package for &lt;code>recipes&lt;/code>. This can be used to efficiently encode high-cardinality categorical predictors using supervised methods such as likelihood encodings and entity embeddings.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://tidymodels.github.io/modelgenerics" target="_blank" rel="noopener">&lt;code>modelgenerics&lt;/code>&lt;/a>: a developer-related tool. This lightweight package can help reduce package dependencies by providing a set of generic methods for classes which are used across packages. For example, if you are creating a new &lt;code>tidy&lt;/code> method for your model, this package can be used instead of &lt;code>broom&lt;/code> (and its dependencies).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Keep an eye on the
&lt;a href="https://github.com/tidymodels" target="_blank" rel="noopener">tidymodels organization page&lt;/a> for up-to-date information.&lt;/p></description></item><item><title>broom 0.5.0</title><link>https://www.tidyverse.org/blog/2018/07/broom-0-5-0/</link><pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/07/broom-0-5-0/</guid><description>&lt;html>
&lt;style>
h2 code {
font-size: 1em;
}
&lt;/style>
&lt;/html>
&lt;p>I am delighted to announced that
&lt;a href="https://broom.tidyverse.org/" target="_blank" rel="noopener">broom&lt;/a> 0.5.0 is now available on CRAN. broom 0.5.0 is a major new release featuring changes that affect both users and developers. See the
&lt;a href="https://broom.tidyverse.org/news/" target="_blank" rel="noopener">News&lt;/a> for a detailed list of changes.&lt;/p>
&lt;p>This release was possible due to RStudio&amp;rsquo;s internship program, which has enabled me (
&lt;a href="https://github.com/alexpghayes/" target="_blank" rel="noopener">Alex Hayes&lt;/a>) to act as broom&amp;rsquo;s maintainer for the course of the summer. David Robinson continues to steer design decisions. Many thanks to both RStudio and Dave for this opportunity.&lt;/p>
&lt;h2 id="tibble">Tibble output
&lt;a href="#tibble">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>All tidiers should now return &lt;code>tibble&lt;/code>s rather than &lt;code>data.frame&lt;/code>s. This allows broom to take advantage of the nice tibble print method and the more consistent behavior of tibbles:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">broom&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">tidy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 11 x 5
## term estimate std.error statistic p.value
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 (Intercept) 12.3 18.7 0.657 0.518
## 2 cyl -0.111 1.05 -0.107 0.916
## 3 disp 0.0133 0.0179 0.747 0.463
## 4 hp -0.0215 0.0218 -0.987 0.335
## 5 drat 0.787 1.64 0.481 0.635
## # ... with 6 more rows
&lt;/code>&lt;/pre>&lt;p>These changes will mostly likely affect you when you:&lt;/p>
&lt;ul>
&lt;li>subset with &lt;code>[&lt;/code>, which always returns a tibble.&lt;/li>
&lt;li>set rownames on a tibble, which is deprecated.&lt;/li>
&lt;li>use augment methods on models with matrix covariates specified in a formula, which will error.&lt;/li>
&lt;/ul>
&lt;p>&lt;code>augment()&lt;/code> will error with matrix covariates because tibbles are more strict about their contents than data frames. More details are
&lt;a href="#appendix">available below&lt;/a>.&lt;/p>
&lt;p>Deprecated tidiers still return data frames. Tidiers for mixed models also return data frames.&lt;/p>
&lt;h2 id="new-tidiers">New tidiers
&lt;a href="#new-tidiers">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>broom 0.5.0 introduces tidiers for:&lt;/p>
&lt;ul>
&lt;li>&lt;code>lavaan&lt;/code> objects from the &lt;code>lavaan&lt;/code> package&lt;/li>
&lt;li>&lt;code>ivreg&lt;/code> objects from the &lt;code>AER&lt;/code> package&lt;/li>
&lt;li>&lt;code>Kendall&lt;/code> objects from the &lt;code>Kendall&lt;/code> package&lt;/li>
&lt;li>&lt;code>garch&lt;/code> objects from the &lt;code>tseries&lt;/code> package&lt;/li>
&lt;li>&lt;code>irlba&lt;/code> lists from the &lt;code>irlba&lt;/code> package&lt;/li>
&lt;li>&lt;code>durbinWatsonTest&lt;/code> objects from the &lt;code>car&lt;/code> package&lt;/li>
&lt;li>&lt;code>confusionMatrix&lt;/code> objects from the &lt;code>caret&lt;/code> package&lt;/li>
&lt;li>&lt;code>glmnet&lt;/code> and &lt;code>cv.glmnet&lt;/code> objects from the &lt;code>glmnetUtils&lt;/code> package&lt;/li>
&lt;li>&lt;code>clm&lt;/code> and &lt;code>clmm&lt;/code> objects from the &lt;code>ordinal&lt;/code> package&lt;/li>
&lt;li>&lt;code>svyolr&lt;/code> objects from the &lt;code>survey&lt;/code> package, and&lt;/li>
&lt;li>&lt;code>polr&lt;/code> objects from the &lt;code>MASS&lt;/code> package.&lt;/li>
&lt;/ul>
&lt;p>In addition to these new tidiers, this release includes fixes for a large number of bugs in existing tidiers.&lt;/p>
&lt;h2 id="new-test-suite">New test suite
&lt;a href="#new-test-suite">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We are heavily invested in making it easier to contribute to broom, and also in making broom behavior more standardized and consistent. To this end, we&amp;rsquo;ve written new testing infrastructure. At the moment, the new tests mostly ensure tibble output. For example, &lt;code>tidy()&lt;/code> output should now pass the following test:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">td&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tidy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">model&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">check_tidy_output&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Similar tests exist for &lt;code>glance()&lt;/code> and &lt;code>augment()&lt;/code>. Stricter versions of these tests are under development for future releases.&lt;/p>
&lt;h2 id="mixed-models-are-moving-to-broommixed">Mixed models are moving to &lt;code>broom.mixed&lt;/code>
&lt;a href="#mixed-models-are-moving-to-broommixed">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As broom&amp;rsquo;s popularity has grown, broom has grown to encompass a fairly broad range of models. Dave and I have little to no experience with many of these models, and while we can fix bugs in the tidying code, we are no longer able to determine what constitutes a reasonable summary for many of these models.&lt;/p>
&lt;p>Our intended solution is to split broom into several packages for tidying model objects. broom will provide tidiers for popular models (and those in &lt;code>base&lt;/code> and &lt;code>stats&lt;/code>), and then domain experts will manage domain-specific tidying packages. Currently we&amp;rsquo;re working on a spec for all of these sub-packages to implement. With any luck this we&amp;rsquo;ll have a well-written spec to accompany the next release. We&amp;rsquo;d like all of the domain-specific tidying packages to eventually live in
&lt;a href="https://github.com/tidymodels" target="_blank" rel="noopener">tidymodels&lt;/a>, so that users can load a bunch of tools all at once with &lt;code>library(tidymodels)&lt;/code>. tidymodels will act as meta-package that gathers together tidyverse compatible tools for modelling. Max Kuhn has migrated a number of his packages to the tidymodels organization, and we plan to move broom in the near future.&lt;/p>
&lt;p>Mixed-model tidiers have long been a bit of a mess in broom. A while back
&lt;a href="https://github.com/bbolker/broom.mixed" target="_blank" rel="noopener">&lt;code>broom.mixed&lt;/code>&lt;/a> forked off to clean them up. broom.mixed is now a pilot for the larger project of splitting broom into domain specific tidying packages. We anticipate that broom.mixed will makes its way onto CRAN in the next several weeks, which will allow us to deprecate mixed model tidiers in broom 0.7.0. Although these models are
&lt;a href="https://broom.tidyverse.org/news/index.html#deprecations" target="_blank" rel="noopener">not yet deprecated&lt;/a>, there is currently no ongoing development work for them. In particular, the tidiers for:&lt;/p>
&lt;ul>
&lt;li>lme, lme4 and nmle models,&lt;/li>
&lt;li>brms models,&lt;/li>
&lt;li>rstanarm models, and&lt;/li>
&lt;li>mcmc objects&lt;/li>
&lt;/ul>
&lt;p>are one release away from deprecation, and effectively frozen.&lt;/p>
&lt;h2 id="new-suggested-workflow">New suggested workflow
&lt;a href="#new-suggested-workflow">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When working with many models at the same time, we now recommend using list-columns and a &lt;code>nest()-map()-unnest()&lt;/code> workflow. This mirrors similar moves across the rest of the tidyverse. We have updated the
&lt;a href="https://broom.tidyverse.org/articles/kmeans.html" target="_blank" rel="noopener">kmeans&lt;/a>,
&lt;a href="https://broom.tidyverse.org/articles/broom_and_dplyr.html" target="_blank" rel="noopener">broom and dplyr&lt;/a> and
&lt;a href="https://broom.tidyverse.org/articles/bootstrapping.html" target="_blank" rel="noopener">bootstrapping&lt;/a> vignettes to reflect the new workflow. Additional, we&amp;rsquo;ve updated the bootstrapping vignette to use
&lt;a href="https://tidymodels.github.io/rsample/" target="_blank" rel="noopener">rsample&lt;/a> rather than the now-deprecated &lt;code>bootstrap()&lt;/code> function. We no longer recommend the older &lt;code>group_by()-do()&lt;/code> workflow.&lt;/p>
&lt;h2 id="new-vignettes-and-documentation">New vignettes and documentation
&lt;a href="#new-vignettes-and-documentation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The list of available tidiers has been moved out of the README and into the
&lt;a href="https://broom.tidyverse.org/articles/available-methods.html" target="_blank" rel="noopener">Available Methods&lt;/a> vignette.&lt;/p>
&lt;p>We also have two new vignettes that are &lt;strong>strictly works in progress&lt;/strong> at the moment. The first covers
&lt;a href="https://broom.tidyverse.org/articles/adding-tidiers.html" target="_blank" rel="noopener">Adding New Tidiers&lt;/a> and seeks to make the barrier of entry for broom contributions as low as possible. The second contains a
&lt;a href="https://broom.tidyverse.org/articles/glossary.html" target="_blank" rel="noopener">Glossary&lt;/a> of terms we are developing for use in an upcoming release of broom. This glossary will standardize argument names across tidiers, and column names across tidy output.&lt;/p>
&lt;p>We have also migrated to a new template-based documentation strategy. Repeated documentation material now lives in &lt;code>roxygen2&lt;/code> templates and can easily be added to a new tidy method. For an example of how this works, see
&lt;a href="https://github.com/tidyverse/broom/blob/master/R/aer-tidiers.R" target="_blank" rel="noopener">&lt;code>R/aer-tidiers.R&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="deprecations">Deprecations
&lt;a href="#deprecations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="hard-deprecations">Hard deprecations
&lt;a href="#hard-deprecations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>&lt;code>inflate()&lt;/code> has been removed from &lt;code>broom&lt;/code>&lt;/li>
&lt;li>Matrix and vector tidiers have been deprecated in favor of &lt;code>tibble::as_tibble()&lt;/code> and &lt;code>tibble::enframe()&lt;/code>&lt;/li>
&lt;li>Dataframe tidiers and rowwise dataframe tidiers have been deprecated&lt;/li>
&lt;li>&lt;code>bootstrap()&lt;/code> has been deprecated in favor of the
&lt;a href="https://tidymodels.github.io/rsample/" target="_blank" rel="noopener">&lt;code>rsample&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="soft-deprecations">Soft deprecations
&lt;a href="#soft-deprecations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The following functions will be deprecated in the next release of broom:&lt;/p>
&lt;ul>
&lt;li>&lt;code>sp&lt;/code> tidying methods (in favor of &lt;code>sf&lt;/code>)&lt;/li>
&lt;li>&lt;code>tidy.summaryDefault()&lt;/code> (in favor of &lt;code>skimr::skim()&lt;/code>)&lt;/li>
&lt;li>&lt;code>tidy.table()&lt;/code> (in favor of &lt;code>tibble::as_tibble()&lt;/code>)&lt;/li>
&lt;li>Mixed model and bayesian tidiers&lt;/li>
&lt;/ul>
&lt;h2 id="contributors">Contributors
&lt;a href="#contributors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Max Kuhn provided advice on dealing with model objects. Mara Averick provided feedback on drafts of this post.&lt;/p>
&lt;p>An additional 38 fantastic contributors offered thoughtful comments on design, wrote bug reports and created PRs. The broom community has been kind, supportive and insighftul and I look forward to working you all again!&lt;/p>
&lt;p>
&lt;a href="https://github.com/atyre2" target="_blank" rel="noopener">@atyre2&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/bfgray3" target="_blank" rel="noopener">@bfgray3&lt;/a>,
&lt;a href="https://github.com/bmannakee" target="_blank" rel="noopener">@bmannakee&lt;/a>,
&lt;a href="https://github.com/briatte" target="_blank" rel="noopener">@briatte&lt;/a>,
&lt;a href="https://github.com/cawoodjm" target="_blank" rel="noopener">@cawoodjm&lt;/a>,
&lt;a href="https://github.com/cimentadaj" target="_blank" rel="noopener">@cimentadaj&lt;/a>,
&lt;a href="https://github.com/dan87134" target="_blank" rel="noopener">@dan87134&lt;/a>,
&lt;a href="https://github.com/dmenne" target="_blank" rel="noopener">@dmenne&lt;/a>,
&lt;a href="https://github.com/ekatko1" target="_blank" rel="noopener">@ekatko1&lt;/a>,
&lt;a href="https://github.com/ellessenne" target="_blank" rel="noopener">@ellessenne&lt;/a>,
&lt;a href="https://github.com/erleholgersen" target="_blank" rel="noopener">@erleholgersen&lt;/a>,
&lt;a href="https://github.com/Hong-Revo" target="_blank" rel="noopener">@Hong-Revo&lt;/a>,
&lt;a href="https://github.com/huftis" target="_blank" rel="noopener">@huftis&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jacob-long" target="_blank" rel="noopener">@jacob-long&lt;/a>,
&lt;a href="https://github.com/jarvisc1" target="_blank" rel="noopener">@jarvisc1&lt;/a>,
&lt;a href="https://github.com/jenzopr" target="_blank" rel="noopener">@jenzopr&lt;/a>,
&lt;a href="https://github.com/jgabry" target="_blank" rel="noopener">@jgabry&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/josue-rodriguez" target="_blank" rel="noopener">@josue-rodriguez&lt;/a>,
&lt;a href="https://github.com/karldw" target="_blank" rel="noopener">@karldw&lt;/a>,
&lt;a href="https://github.com/kfeilich" target="_blank" rel="noopener">@kfeilich&lt;/a>,
&lt;a href="https://github.com/larmarange" target="_blank" rel="noopener">@larmarange&lt;/a>,
&lt;a href="https://github.com/lboller" target="_blank" rel="noopener">@lboller&lt;/a>,
&lt;a href="https://github.com/mariusbarth" target="_blank" rel="noopener">@mariusbarth&lt;/a>,
&lt;a href="https://github.com/michaelweylandt" target="_blank" rel="noopener">@michaelweylandt&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/mkuehn10" target="_blank" rel="noopener">@mkuehn10&lt;/a>,
&lt;a href="https://github.com/mvevans89" target="_blank" rel="noopener">@mvevans89&lt;/a>,
&lt;a href="https://github.com/nutterb" target="_blank" rel="noopener">@nutterb&lt;/a>,
&lt;a href="https://github.com/ShreyasSingh" target="_blank" rel="noopener">@ShreyasSingh&lt;/a>,
&lt;a href="https://github.com/stephlocke" target="_blank" rel="noopener">@stephlocke&lt;/a>,
&lt;a href="https://github.com/strengejacke" target="_blank" rel="noopener">@strengejacke&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/willbowditch" target="_blank" rel="noopener">@willbowditch&lt;/a>,
&lt;a href="https://github.com/WillemSleegers" target="_blank" rel="noopener">@WillemSleegers&lt;/a>, and
&lt;a href="https://github.com/wilsonfreitas" target="_blank" rel="noopener">@wilsonfreitas&lt;/a>&lt;/p>
&lt;h2 id="appendix">Additional details on tibbles and &lt;code>augment()&lt;/code>
&lt;a href="#appendix">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Data frames allow users to specify columns in a matrix, like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">y&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">matrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">rnorm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">nrow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">data.frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Tibbles do not:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tibble&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Error: Column `x` must be a 1d atomic vector or a list
&lt;/code>&lt;/pre>&lt;p>Modelling functions will occasionally create a data frame like this, but since the model frame can&amp;rsquo;t be coerced a tibble method, &lt;code>augment()&lt;/code> will fail:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">fit&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">lm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">df&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">augment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Error: Column `x` must be a 1d atomic vector or a list
&lt;/code>&lt;/pre>&lt;p>In some cases, explicitly passing the original dataset via the &lt;code>data&lt;/code> argument can resolve this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">augment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">df&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 5 x 10
## X1 X2 y .fitted .se.fit .resid .hat .sigma .cooksd
## * &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 0.617 -0.720 -0.167 0.173 0.341 -0.340 0.661 0.108 1.26
## 2 -0.164 0.943 -0.389 -0.158 0.291 -0.232 0.480 0.499 0.181
## 3 -0.434 0.424 -0.339 -0.529 0.390 0.190 0.863 0.300 3.12
## 4 0.231 0.696 0.148 0.150 0.310 -0.00177 0.545 0.594 0.0000156
## 5 0.663 -0.274 0.704 0.320 0.282 0.384 0.451 0.290 0.418
## # ... with 1 more variable: .std.resid &amp;lt;dbl&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Support for matrix-columns is on the way in dplyr and in a release cycle or two this won&amp;rsquo;t be an issue.&lt;/p>
&lt;p>
&lt;a href="#tibble">Back to tibble section&lt;/a>&lt;/p></description></item></channel></rss>