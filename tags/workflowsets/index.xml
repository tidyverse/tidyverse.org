<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>workflowsets | Tidyverse</title><link>https://www.tidyverse.org/tags/workflowsets/</link><atom:link href="https://www.tidyverse.org/tags/workflowsets/index.xml" rel="self" type="application/rss+xml"/><description>workflowsets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 24 Apr 2024 00:00:00 +0000</lastBuildDate><item><title>Q1 2024 tidymodels digest</title><link>https://www.tidyverse.org/blog/2024/04/tidymodels-2024-q1/</link><pubDate>Wed, 24 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/04/tidymodels-2024-q1/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;p>Since the beginning of 2021, we have been publishing
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">quarterly updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused, like these posts from the past couple of months:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2024/04/tidymodels-survival-analysis/" target="_blank" rel="noopener">Survival analysis for time-to-event data with tidymodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2024/03/tidymodels-fairness/" target="_blank" rel="noopener">Fair machine learning with tidymodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2024/04/tune-1-2-0/" target="_blank" rel="noopener">tune 1.2.0&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Additionally, we have published several related articles on
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels.org&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-case-study/" target="_blank" rel="noopener">How long until building complaints are dispositioned? A survival analysis case study&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-metrics/" target="_blank" rel="noopener">Dynamic Performance Metrics for Event Time Data&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-metrics-details/" target="_blank" rel="noopener">Accounting for Censoring in Performance Metrics for Event Time Data&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/work/fairness-detectors/" target="_blank" rel="noopener">Are GPT detectors fair? A machine learning fairness case study&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/work/fairness-readmission/" target="_blank" rel="noopener">Fair prediction of hospital readmission: a machine learning fairness case study&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/models/bootstrap-metrics/" target="_blank" rel="noopener">Confidence Intervals for Performance Metrics&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2024/01/tidymodels-2023-q4/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been CRAN releases of 21 tidymodels packages. Here are links to their NEWS files:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>baguette
&lt;a href="https://baguette.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.2)&lt;/a>&lt;/li>
&lt;li>brulee
&lt;a href="https://brulee.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.0)&lt;/a>&lt;/li>
&lt;li>butcher
&lt;a href="https://butcher.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.4)&lt;/a>&lt;/li>
&lt;li>censored
&lt;a href="https://censored.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.3.0)&lt;/a>&lt;/li>
&lt;li>dials
&lt;a href="https://dials.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.1)&lt;/a>&lt;/li>
&lt;li>embed
&lt;a href="https://embed.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.4)&lt;/a>&lt;/li>
&lt;li>finetune
&lt;a href="https://finetune.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.0)&lt;/a>&lt;/li>
&lt;li>hardhat
&lt;a href="https://hardhat.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.3.1)&lt;/a>&lt;/li>
&lt;li>modeldata
&lt;a href="https://modeldata.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.3.0)&lt;/a>&lt;/li>
&lt;li>parsnip
&lt;a href="https://parsnip.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.1)&lt;/a>&lt;/li>
&lt;li>probably
&lt;a href="https://probably.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.3)&lt;/a>&lt;/li>
&lt;li>recipes
&lt;a href="https://recipes.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.10)&lt;/a>&lt;/li>
&lt;li>rsample
&lt;a href="https://rsample.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.1)&lt;/a>&lt;/li>
&lt;li>shinymodels
&lt;a href="https://shinymodels.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.1.1)&lt;/a>&lt;/li>
&lt;li>stacks
&lt;a href="https://stacks.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.0.4)&lt;/a>&lt;/li>
&lt;li>tidyclust
&lt;a href="https://tidyclust.tidymodels.org/news/index.html" target="_blank" rel="noopener">(0.2.1)&lt;/a>&lt;/li>
&lt;li>tidymodels
&lt;a href="https://tidymodels.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.0)&lt;/a>&lt;/li>
&lt;li>tune
&lt;a href="https://tune.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.2.0)&lt;/a>&lt;/li>
&lt;li>workflows
&lt;a href="https://workflows.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.4)&lt;/a>&lt;/li>
&lt;li>workflowsets
&lt;a href="https://workflowsets.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.1.0)&lt;/a>&lt;/li>
&lt;li>yardstick
&lt;a href="https://yardstick.tidymodels.org/news/index.html" target="_blank" rel="noopener">(1.3.1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;ll highlight a few especially notable changes below: new prediction options in censored, consistency in augmenting parsnip models and workflows, as well as a new autoplot type for workflow sets.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/censored'>censored&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="new-prediction-options-in-censored">New prediction options in censored
&lt;a href="#new-prediction-options-in-censored">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As part of the framework-wide integration of survival analysis, the parsnip extension package censored has received some love in the form of new prediction options.&lt;/p>
&lt;p>Random forests with the &lt;code>&amp;quot;aorsf&amp;quot;&lt;/code> engine can now predict survival time, thanks to the new feature in the
&lt;a href="https://docs.ropensci.org/aorsf/" target="_blank" rel="noopener">aorsf&lt;/a> package itself. This means that all engines in censored can now predict survival time.&lt;/p>
&lt;p>Let&amp;rsquo;s predict survival time for the first five rows of the lung cancer dataset, survival analysis&amp;rsquo; &lt;code>mtcars&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>rf_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/rand_forest.html'>rand_forest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"aorsf"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"censored regression"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>rf_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>rf_spec&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>, &lt;span class='nv'>status&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>age&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nv'>sex&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>lung_5&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>lung&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>5&lt;/span>, &lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>rf_fit&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung_5&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"time"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred_time&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 217.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 240.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 236.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 236.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 254.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Some models allow for predictions based on different values for tuning parameter without having to refit the model. In parsnip, we refer to this as
&lt;a href="https://parsnip.tidymodels.org/articles/Submodels.html" target="_blank" rel="noopener">&amp;ldquo;the submodel trick.&amp;quot;&lt;/a> Some of those models are regularized models fitted with the
&lt;a href="https://glmnet.stanford.edu/" target="_blank" rel="noopener">glmnet&lt;/a> engine. In censored, the corresponding
&lt;a href="https://parsnip.tidymodels.org/reference/multi_predict.html" target="_blank" rel="noopener">&lt;code>multi_predict()&lt;/code>&lt;/a> method has now gained the prediction types &lt;code>&amp;quot;time&amp;quot;&lt;/code> and &lt;code>&amp;quot;raw&amp;quot;&lt;/code> in addition to the existing types &lt;code>&amp;quot;survival&amp;quot;&lt;/code> and &lt;code>&amp;quot;linear_pred&amp;quot;&lt;/code>.&lt;/p>
&lt;p>Let&amp;rsquo;s fit a regularized Cox model to illustrate. Note how we set the &lt;code>penalty&lt;/code> to a fixed value of &lt;code>0.1&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>cox_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/proportional_hazards.html'>proportional_hazards&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>penalty &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.1&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_engine.html'>set_engine&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"glmnet"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/set_args.html'>set_mode&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"censored regression"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/survival/man/Surv.html'>Surv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>, &lt;span class='nv'>status&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Predictions made with
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> use that penalty value of 0.1. With
&lt;a href="https://parsnip.tidymodels.org/reference/multi_predict.html" target="_blank" rel="noopener">&lt;code>multi_predict()&lt;/code>&lt;/a>, we can change that value to something different without having to refit. Conveniently, we can predict for multiple penalty values as well.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cox_fit&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung_5&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"time"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred_time&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 425.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 350.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>mpred&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/multi_predict.html'>multi_predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cox_fit&lt;/span>, new_data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>lung_5&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"time"&lt;/span>, &lt;/span>
&lt;span> penalty &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0.01&lt;/span>, &lt;span class='m'>0.1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;/span>
&lt;span>&lt;span class='nv'>mpred&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [2 × 2]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The resulting tibble is nested by observation to follow the convention of one row per observation. For each observation, the predictions are stored in a tibble containing the penalty value along with the prediction.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>mpred&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>.pred&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; penalty .pred_time&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 0.01 461.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 0.1 425.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can see that the predicted value from
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> matches the predicted value from
&lt;a href="https://parsnip.tidymodels.org/reference/multi_predict.html" target="_blank" rel="noopener">&lt;code>multi_predict()&lt;/code>&lt;/a> with a penalty of 0.1.&lt;/p>
&lt;h2 id="consistent-augment-for-workflows-and-parsnip-models">Consistent &lt;code>augment()&lt;/code> for workflows and parsnip models
&lt;a href="#consistent-augment-for-workflows-and-parsnip-models">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you are interested in exploring predictions in relation to predictors,
&lt;a href="https://generics.r-lib.org/reference/augment.html" target="_blank" rel="noopener">&lt;code>augment()&lt;/code>&lt;/a> is your extended
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> method: it will augment the inputted dataset with its predictions. For classification, it will add hard class predictions as well as class probabilities. For regression, it will add the numeric prediction. If the outcome variable is part of the dataset, it also calculates residuals. This has already been the case for fitted parsnip models, and the
&lt;a href="https://generics.r-lib.org/reference/augment.html" target="_blank" rel="noopener">&lt;code>augment()&lt;/code>&lt;/a> method for workflows will now also calculate residuals.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>spec_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/linear_reg.html'>linear_reg&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>wflow_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/linear_reg.html'>linear_reg&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/fit.html'>fit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/augment.html'>augment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>spec_fit&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 32 × 13&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred .resid mpg cyl disp hp drat wt qsec vs am gear&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 22.6 -&lt;span style='color: #BB0000;'>1.60&lt;/span> 21 6 160 110 3.9 2.62 16.5 0 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 22.1 -&lt;span style='color: #BB0000;'>1.11&lt;/span> 21 6 160 110 3.9 2.88 17.0 0 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 26.3 -&lt;span style='color: #BB0000;'>3.45&lt;/span> 22.8 4 108 93 3.85 2.32 18.6 1 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 21.2 0.163 21.4 6 258 110 3.08 3.22 19.4 1 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 17.7 1.01 18.7 8 360 175 3.15 3.44 17.0 0 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 20.4 -&lt;span style='color: #BB0000;'>2.28&lt;/span> 18.1 6 225 105 2.76 3.46 20.2 1 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 14.4 -&lt;span style='color: #BB0000;'>0.086&lt;/span>&lt;span style='color: #BB0000; text-decoration: underline;'>3&lt;/span> 14.3 8 360 245 3.21 3.57 15.8 0 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 22.5 1.90 24.4 4 147. 62 3.69 3.19 20 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 24.4 -&lt;span style='color: #BB0000;'>1.62&lt;/span> 22.8 4 141. 95 3.92 3.15 22.9 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 18.7 0.501 19.2 6 168. 123 3.92 3.44 18.3 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 22 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 1 more variable: carb &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/augment.html'>augment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wflow_fit&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 32 × 13&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred .resid mpg cyl disp hp drat wt qsec vs am gear&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>*&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 22.6 -&lt;span style='color: #BB0000;'>1.60&lt;/span> 21 6 160 110 3.9 2.62 16.5 0 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 22.1 -&lt;span style='color: #BB0000;'>1.11&lt;/span> 21 6 160 110 3.9 2.88 17.0 0 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 26.3 -&lt;span style='color: #BB0000;'>3.45&lt;/span> 22.8 4 108 93 3.85 2.32 18.6 1 1 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 21.2 0.163 21.4 6 258 110 3.08 3.22 19.4 1 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 17.7 1.01 18.7 8 360 175 3.15 3.44 17.0 0 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 20.4 -&lt;span style='color: #BB0000;'>2.28&lt;/span> 18.1 6 225 105 2.76 3.46 20.2 1 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 14.4 -&lt;span style='color: #BB0000;'>0.086&lt;/span>&lt;span style='color: #BB0000; text-decoration: underline;'>3&lt;/span> 14.3 8 360 245 3.21 3.57 15.8 0 0 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 22.5 1.90 24.4 4 147. 62 3.69 3.19 20 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 24.4 -&lt;span style='color: #BB0000;'>1.62&lt;/span> 22.8 4 141. 95 3.92 3.15 22.9 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 18.7 0.501 19.2 6 168. 123 3.92 3.44 18.3 1 0 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 22 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 1 more variable: carb &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Both methods also append on the left-hand side of the data frame, rather than the right-hand side. This means that prediction columns are always visible when printed, even for data frames with many columns. As you might expect, the order of the columns is the same for both methods as well.&lt;/p>
&lt;h2 id="new-autoplot-type-for-workflow-sets">New autoplot type for workflow sets
&lt;a href="#new-autoplot-type-for-workflow-sets">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many tidymodels objects have
&lt;a href="https://ggplot2.tidyverse.org/reference/autoplot.html" target="_blank" rel="noopener">&lt;code>autoplot()&lt;/code>&lt;/a> methods for quickly getting a sense of the most important aspects of an object. For workflow sets, the method shows the value of the calculated performance metrics, as well as the respective rank of each workflow in the set. Let&amp;rsquo;s put together a workflow set on the actual &lt;code>mtcars&lt;/code> data and take a look at the default autoplot.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>mt_rec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>mt_rec2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>mt_rec&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>step_normalize&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>mt_rec3&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>mt_rec&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>step_YeoJohnson&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>all_numeric_predictors&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>wflow_set&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow_set&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>plain &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mt_rec&lt;/span>, normalize &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mt_rec2&lt;/span>, yeo_johnson &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mt_rec3&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://parsnip.tidymodels.org/reference/linear_reg.html'>linear_reg&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>wflow_set_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>workflow_map&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>wflow_set&lt;/span>, &lt;/span>
&lt;span> &lt;span class='s'>"fit_resamples"&lt;/span>, &lt;/span>
&lt;span> resamples &lt;span class='o'>=&lt;/span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wflow_set_fit&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/workflowsets-autoplot-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This allows you to grasp the metric values and rank of a workflow and let&amp;rsquo;s you distinguish the type of preprocessor and model. In our case, we only have one type of model, and even just one type of preprocessor, a recipe. What we are much more interested in is which recipe corresponds to which rank. The new option of &lt;code>type = &amp;quot;wflow_id&amp;quot;&lt;/code> lets us see which values and ranks correspond with which workflow and thus also with which recipe.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/autoplot.html'>autoplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>wflow_set_fit&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"wflow_id"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/workflowsets-autoplot-new-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This makes it easy to spot that it&amp;rsquo;s the Yeo-Johnson transformation that makes the difference here!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank those in the community that contributed to tidymodels in the last quarter:&lt;/p>
&lt;div class="highlight">
&lt;ul>
&lt;li>baguette:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>brulee:
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>butcher:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/li>
&lt;li>censored:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/tripartio" target="_blank" rel="noopener">@tripartio&lt;/a>.&lt;/li>
&lt;li>dials:
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>embed:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>.&lt;/li>
&lt;li>finetune:
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/mfansler" target="_blank" rel="noopener">@mfansler&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>hardhat:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>modeldata:
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>parsnip:
&lt;a href="https://github.com/birbritto" target="_blank" rel="noopener">@birbritto&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jmunyoon" target="_blank" rel="noopener">@jmunyoon&lt;/a>,
&lt;a href="https://github.com/marcelglueck" target="_blank" rel="noopener">@marcelglueck&lt;/a>,
&lt;a href="https://github.com/mattheaphy" target="_blank" rel="noopener">@mattheaphy&lt;/a>,
&lt;a href="https://github.com/mesdi" target="_blank" rel="noopener">@mesdi&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>,
&lt;a href="https://github.com/pgg1309" target="_blank" rel="noopener">@pgg1309&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/wzbillings" target="_blank" rel="noopener">@wzbillings&lt;/a>.&lt;/li>
&lt;li>probably:
&lt;a href="https://github.com/brshallo" target="_blank" rel="noopener">@brshallo&lt;/a>,
&lt;a href="https://github.com/Jeffrothschild" target="_blank" rel="noopener">@Jeffrothschild&lt;/a>,
&lt;a href="https://github.com/jgaeb" target="_blank" rel="noopener">@jgaeb&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>recipes:
&lt;a href="https://github.com/DemetriPananos" target="_blank" rel="noopener">@DemetriPananos&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/jdonland" target="_blank" rel="noopener">@jdonland&lt;/a>,
&lt;a href="https://github.com/JiahuaQu" target="_blank" rel="noopener">@JiahuaQu&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/olivroy" target="_blank" rel="noopener">@olivroy&lt;/a>,
&lt;a href="https://github.com/SantiagoD999" target="_blank" rel="noopener">@SantiagoD999&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/stufield" target="_blank" rel="noopener">@stufield&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>rsample:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/paulcbauer" target="_blank" rel="noopener">@paulcbauer&lt;/a>,
&lt;a href="https://github.com/StevenWallaert" target="_blank" rel="noopener">@StevenWallaert&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/ZWael" target="_blank" rel="noopener">@ZWael&lt;/a>.&lt;/li>
&lt;li>shinymodels:
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>stacks:
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>tidyclust:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>, and
&lt;a href="https://github.com/katieburak" target="_blank" rel="noopener">@katieburak&lt;/a>.&lt;/li>
&lt;li>tidymodels:
&lt;a href="https://github.com/jkylearmstrong" target="_blank" rel="noopener">@jkylearmstrong&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/nikosGeography" target="_blank" rel="noopener">@nikosGeography&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>tune:
&lt;a href="https://github.com/AlbertoImg" target="_blank" rel="noopener">@AlbertoImg&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/joshuagi" target="_blank" rel="noopener">@joshuagi&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/marcozanotti" target="_blank" rel="noopener">@marcozanotti&lt;/a>,
&lt;a href="https://github.com/Peter4801" target="_blank" rel="noopener">@Peter4801&lt;/a>,
&lt;a href="https://github.com/rfsaldanha" target="_blank" rel="noopener">@rfsaldanha&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/walkerjameschris" target="_blank" rel="noopener">@walkerjameschris&lt;/a>.&lt;/li>
&lt;li>workflows:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/mesdi" target="_blank" rel="noopener">@mesdi&lt;/a>,
&lt;a href="https://github.com/Milardkh" target="_blank" rel="noopener">@Milardkh&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/li>
&lt;li>workflowsets:
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/li>
&lt;li>yardstick:
&lt;a href="https://github.com/asb2111" target="_blank" rel="noopener">@asb2111&lt;/a>,
&lt;a href="https://github.com/Dpananos" target="_blank" rel="noopener">@Dpananos&lt;/a>,
&lt;a href="https://github.com/EduMinsky" target="_blank" rel="noopener">@EduMinsky&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/tripartio" target="_blank" rel="noopener">@tripartio&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>We&amp;rsquo;re grateful for all of the tidymodels community, from observers to users to contributors. Happy modeling!&lt;/p></description></item><item><title>Survival analysis for time-to-event data with tidymodels</title><link>https://www.tidyverse.org/blog/2024/04/tidymodels-survival-analysis/</link><pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/04/tidymodels-survival-analysis/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re tickled pink to announce the support of survival analysis for time-to-event data across tidymodels. The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles. This new support makes survival analysis a first-class citizen in tidymodels and gives censored regression modeling the same flexibility and ease as classification or regression.&lt;/p>
&lt;p>The functionality resides in multiple tidymodels packages. The easiest way to install them all is to install the tidymodels meta-package:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidymodels"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will highlight why this is useful, explain which additions we&amp;rsquo;ve made to the framework, and point to several places to learn more.&lt;/p>
&lt;p>You can see a full list of changes in the release notes:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://parsnip.tidymodels.org/news/index.html#parsnip-120" target="_blank" rel="noopener">parsnip&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://censored.tidymodels.org/news/index.html#censored-030" target="_blank" rel="noopener">censored&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://yardstick.tidymodels.org/news/index.html#yardstick-130" target="_blank" rel="noopener">yardstick&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflows.tidymodels.org/news/index.html#workflows-114" target="_blank" rel="noopener">workflows&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tune.tidymodels.org/news/index.html#tune-120" target="_blank" rel="noopener">tune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://finetune.tidymodels.org/news/index.html#finetune-120" target="_blank" rel="noopener">finetune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflowsets.tidymodels.org/news/index.html#workflowsets-110" target="_blank" rel="noopener">workflowsets&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="increasing-usefulness-two-perspectives">Increasing usefulness: Two perspectives
&lt;a href="#increasing-usefulness-two-perspectives">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to situate the changes from two different perspectives: How this is useful for people already familiar with survival analysis as well as for people already familiar with tidymodels.&lt;/p>
&lt;p>If you are already familiar with both: Excellent, this is very much for you! Read on for more details on how these two things come together.&lt;/p>
&lt;h3 id="adding-tidymodels-to-your-tool-kit">Adding tidymodels to your tool kit
&lt;a href="#adding-tidymodels-to-your-tool-kit">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>If you are already familiar with survival analysis but maybe not tidymodels, these changes now unlock a whole framework for predictive modelling for you. It applies tidyverse principles to modeling, meaning it strives to be consistent, composable, and human-centered. The framework covers the modeling process from the initial test/train split of the data all the way to tuning various models. Along the way it offers a rich selection of preprocessing techniques, resampling schemes, and performance metrics along with safe-guards against accidental overfitting. We make the full case for tidymodels at
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels.org&lt;/a>.&lt;/p>
&lt;h3 id="adding-survival-analysis-to-your-tool-kit">Adding survival analysis to your tool kit
&lt;a href="#adding-survival-analysis-to-your-tool-kit">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>If you are already familiar with tidymodels but maybe not survival analysis, these changes let you leverage the familiar framework for an additional type of modeling problem. Survival analysis offers methods for modeling time-to-event data. While it has its roots in medical research, it has broad applications as that event of interest can be so much more than a medical outcome. Take customer churn as an example: We are interested in how long someone is a customer for and when they churn. For customers who churned, we have the complete time for which they were customers. For existing customers, we only know how long they&amp;rsquo;ve been customers for &lt;em>so far&lt;/em>. Such observations are called censored. So what are our modeling choices here?&lt;/p>
&lt;p>We could look at the time and model that as a regression problem. We could look at the event status and model that as a classification problem. Both options might get us somewhere close to an answer to our original modeling question but not quite there. Censored regression models let us model an outcome that includes both aspects, the time and the event status. And with that, it can deal with both censored and uncensored observations appropriately. With this type of model, we can predict the survival time, or in more applied terms, how long someone will stay as a customer. We can also predict the probability of survival at a given time point. This lets us answer questions like &amp;ldquo;How likely is it that this customer will churn after 3 months?&amp;quot;. See which prediction types are available for which models at
&lt;a href="https://censored.tidymodels.org/" target="_blank" rel="noopener">censored.tidymodels.org&lt;/a>.&lt;/p>
&lt;h2 id="ch-ch-changes-whats-new-for-censored-regression">Ch-ch-changes: What&amp;rsquo;s new for censored regression?
&lt;a href="#ch-ch-changes-whats-new-for-censored-regression">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The main components needed for this full-fledged integration of survival analysis into tidymodels were&lt;/p>
&lt;ul>
&lt;li>Survival analysis models that can take censoring into account&lt;/li>
&lt;li>Survival analysis performance metrics that can take censoring into account&lt;/li>
&lt;li>Integrating changes required by these models and metrics into the framework&lt;/li>
&lt;/ul>
&lt;p>For the models, parsnip gained a new mode, &lt;code>&amp;quot;censored regression&amp;quot;&lt;/code>, for existing models as well as new model types such as &lt;code>proportional_hazards()&lt;/code>. Engines for these reside in censored, the parsnip extension package for survival models. The &lt;code>&amp;quot;censored regression&amp;quot;&lt;/code> mode has been around for a while and we&amp;rsquo;ve previously shared posts on
&lt;a href="https://www.tidyverse.org/blog/2021/11/survival-analysis-parsnip-adjacent/" target="_blank" rel="noopener">our initial thoughts&lt;/a> and the
&lt;a href="https://www.tidyverse.org/blog/2022/08/censored-0-1-0/" target="_blank" rel="noopener">release of censored&lt;/a>.&lt;/p>
&lt;p>Now we&amp;rsquo;ve added the metrics:
&lt;a href="https://yardstick.tidymodels.org/news/index.html#yardstick-130" target="_blank" rel="noopener">yardstick v1.3.0&lt;/a> includes new metrics for assessing censored regression models. Somewhat similar to how metrics for classification models can take class predictions or probability predictions as input, these survival metrics can take predicted survival times or predictions of survival probabilities as input.&lt;/p>
&lt;p>The new metrics are&lt;/p>
&lt;ul>
&lt;li>Concordance index on the survival time via &lt;code>concordance_survival()&lt;/code>&lt;/li>
&lt;li>Brier score on the survival probability and its integrated version via &lt;code>brier_survival()&lt;/code> and &lt;code>brier_survival_integrated()&lt;/code>&lt;/li>
&lt;li>ROC curve and the area under the ROC curve on the survival probabilities via &lt;code>roc_curve_survival()&lt;/code> and &lt;code>auc_roc_survival()&lt;/code> respectively&lt;/li>
&lt;/ul>
&lt;p>The probability of survival is always defined &lt;em>at a certain point in time&lt;/em>. We call that time point the &lt;em>evaluation time&lt;/em> because it is then also the time point at which we want to evaluate model performance. Metrics that work on the survival probabilities are also called &lt;em>dynamic metrics&lt;/em> and you can read more about them here:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-metrics/" target="_blank" rel="noopener">Dynamic Performance Metrics for Event Time Data&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-metrics-details/" target="_blank" rel="noopener">Accounting for Censoring in Performance Metrics for Event Time Data&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>The evaluation time is also the best example to illustrate the changes necessary to the framework. Most of them were under the hood but the evaluation time is user-facing. Let&amp;rsquo;s take a look at that.&lt;/p>
&lt;p>While the need for evaluation times is dependent on type of metric, it is not actually specified as an argument to the metric functions. Like yardstick&amp;rsquo;s other metrics, those take pre-made predictions as the input. So where do you specify it then?&lt;/p>
&lt;ul>
&lt;li>You need to specify it to directly predict survival probabilities, via
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> or &lt;code>augment()&lt;/code>. We introduced the corresponding &lt;code>eval_time&lt;/code> argument first for fitted models in
&lt;a href="https://www.tidyverse.org/blog/2023/04/censored-0-2-0/#introducing-eval_time" target="_blank" rel="noopener">parsnip and censored&lt;/a> and have added it now for workflows.&lt;/li>
&lt;li>You also need to specify it for the tuning functions &lt;code>tune_*()&lt;/code> from tune and finetune as they will predict survival probabilities as part of the tuning process.&lt;/li>
&lt;li>Lastly, the &lt;code>eval_time&lt;/code> argument now shows up when working with tuning/resampling results such as in &lt;code>show_best()&lt;/code> or &lt;code>autoplot()&lt;/code>. Those changes span the packages generating and working with resampling results: tune, finetune, and workflowsets.&lt;/li>
&lt;/ul>
&lt;p>As we said, plenty of changes under the hood but you shouldn&amp;rsquo;t need to notice them. Everything else should work &amp;ldquo;as usual,&amp;rdquo; allowing the same ease and flexibility in combining tidymodels functionality for censored regression as for classification and regression.&lt;/p>
&lt;h2 id="the-pieces-come-together-a-case-study">The pieces come together: A case study
&lt;a href="#the-pieces-come-together-a-case-study">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To see it all in action, check out the case study
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-case-study/" target="_blank" rel="noopener">How long until building complaints are dispositioned?&lt;/a> on the tidymodels website!&lt;/p>
&lt;p>The city of New York publishes data on complaints received by the Department of Buildings that include how long it takes for a complaint to be dealt with (&amp;ldquo;dispositioned&amp;rdquo;) as well as several characteristics of the complaint. The case study covers a full analysis. We start with splitting the data into test and training sets, explore different preprocessing strategies and model types via tuning, and predict with a final model. It should give you a good first impression of how to use tidymodels for predictive survival analysis.&lt;/p>
&lt;p>We hope you&amp;rsquo;ll find this new capability of tidymodels useful!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many thanks to the people who contributed to our packages since their last release:&lt;/p>
&lt;p>&lt;strong>parsnip:&lt;/strong>
&lt;a href="https://github.com/AlbanOtt2" target="_blank" rel="noopener">@AlbanOtt2&lt;/a>,
&lt;a href="https://github.com/birbritto" target="_blank" rel="noopener">@birbritto&lt;/a>,
&lt;a href="https://github.com/christophscheuch" target="_blank" rel="noopener">@christophscheuch&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/Freestyleyang" target="_blank" rel="noopener">@Freestyleyang&lt;/a>,
&lt;a href="https://github.com/gmcmacran" target="_blank" rel="noopener">@gmcmacran&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jmunyoon" target="_blank" rel="noopener">@jmunyoon&lt;/a>,
&lt;a href="https://github.com/joscani" target="_blank" rel="noopener">@joscani&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/marcelglueck" target="_blank" rel="noopener">@marcelglueck&lt;/a>,
&lt;a href="https://github.com/mattheaphy" target="_blank" rel="noopener">@mattheaphy&lt;/a>,
&lt;a href="https://github.com/mesdi" target="_blank" rel="noopener">@mesdi&lt;/a>,
&lt;a href="https://github.com/millermc38" target="_blank" rel="noopener">@millermc38&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>,
&lt;a href="https://github.com/pgg1309" target="_blank" rel="noopener">@pgg1309&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/seb-mueller" target="_blank" rel="noopener">@seb-mueller&lt;/a>,
&lt;a href="https://github.com/SHo-JANG" target="_blank" rel="noopener">@SHo-JANG&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/vidarsumo" target="_blank" rel="noopener">@vidarsumo&lt;/a>, and
&lt;a href="https://github.com/wzbillings" target="_blank" rel="noopener">@wzbillings&lt;/a>.&lt;/p>
&lt;p>&lt;strong>censored:&lt;/strong>
&lt;a href="https://github.com/bcjaeger" target="_blank" rel="noopener">@bcjaeger&lt;/a>,
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/noahtsao" target="_blank" rel="noopener">@noahtsao&lt;/a>, and
&lt;a href="https://github.com/tripartio" target="_blank" rel="noopener">@tripartio&lt;/a>.&lt;/p>
&lt;p>&lt;strong>yardstick:&lt;/strong>
&lt;a href="https://github.com/aecoleman" target="_blank" rel="noopener">@aecoleman&lt;/a>,
&lt;a href="https://github.com/asb2111" target="_blank" rel="noopener">@asb2111&lt;/a>,
&lt;a href="https://github.com/atsyplenkov" target="_blank" rel="noopener">@atsyplenkov&lt;/a>,
&lt;a href="https://github.com/bgreenwell" target="_blank" rel="noopener">@bgreenwell&lt;/a>,
&lt;a href="https://github.com/Dpananos" target="_blank" rel="noopener">@Dpananos&lt;/a>,
&lt;a href="https://github.com/EduMinsky" target="_blank" rel="noopener">@EduMinsky&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/heidekrueger" target="_blank" rel="noopener">@heidekrueger&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/iacrowe" target="_blank" rel="noopener">@iacrowe&lt;/a>,
&lt;a href="https://github.com/jarbet" target="_blank" rel="noopener">@jarbet&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/maxwell-geospatial" target="_blank" rel="noopener">@maxwell-geospatial&lt;/a>,
&lt;a href="https://github.com/moloscripts" target="_blank" rel="noopener">@moloscripts&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/ruddnr" target="_blank" rel="noopener">@ruddnr&lt;/a>,
&lt;a href="https://github.com/SimonCoulombe" target="_blank" rel="noopener">@SimonCoulombe&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/tbrittoborges" target="_blank" rel="noopener">@tbrittoborges&lt;/a>,
&lt;a href="https://github.com/tonyelhabr" target="_blank" rel="noopener">@tonyelhabr&lt;/a>,
&lt;a href="https://github.com/tripartio" target="_blank" rel="noopener">@tripartio&lt;/a>,
&lt;a href="https://github.com/TSI-PTG" target="_blank" rel="noopener">@TSI-PTG&lt;/a>,
&lt;a href="https://github.com/vnijs" target="_blank" rel="noopener">@vnijs&lt;/a>,
&lt;a href="https://github.com/wbuchanan" target="_blank" rel="noopener">@wbuchanan&lt;/a>, and
&lt;a href="https://github.com/zkrog" target="_blank" rel="noopener">@zkrog&lt;/a>.&lt;/p>
&lt;p>&lt;strong>workflows:&lt;/strong>
&lt;a href="https://github.com/Milardkh" target="_blank" rel="noopener">@Milardkh&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;p>&lt;strong>tune:&lt;/strong>
&lt;a href="https://github.com/AlbertoImg" target="_blank" rel="noopener">@AlbertoImg&lt;/a>,
&lt;a href="https://github.com/dramanica" target="_blank" rel="noopener">@dramanica&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/epiheather" target="_blank" rel="noopener">@epiheather&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/kbodwin" target="_blank" rel="noopener">@kbodwin&lt;/a>,
&lt;a href="https://github.com/kenraywilliams" target="_blank" rel="noopener">@kenraywilliams&lt;/a>,
&lt;a href="https://github.com/KJT-Habitat" target="_blank" rel="noopener">@KJT-Habitat&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/marcozanotti" target="_blank" rel="noopener">@marcozanotti&lt;/a>,
&lt;a href="https://github.com/MasterLuke84" target="_blank" rel="noopener">@MasterLuke84&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>,
&lt;a href="https://github.com/Peter4801" target="_blank" rel="noopener">@Peter4801&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/walkerjameschris" target="_blank" rel="noopener">@walkerjameschris&lt;/a>.&lt;/p>
&lt;p>&lt;strong>finetune:&lt;/strong>
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jdberson" target="_blank" rel="noopener">@jdberson&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/mfansler" target="_blank" rel="noopener">@mfansler&lt;/a>,
&lt;a href="https://github.com/ruddnr" target="_blank" rel="noopener">@ruddnr&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;p>&lt;strong>workflowsets:&lt;/strong>
&lt;a href="https://github.com/dchiu911" target="_blank" rel="noopener">@dchiu911&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jkylearmstrong" target="_blank" rel="noopener">@jkylearmstrong&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/p></description></item><item><title>Tuning hyperparameters with tidymodels is a delight</title><link>https://www.tidyverse.org/blog/2023/04/tuning-delights/</link><pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/04/tuning-delights/</guid><description>&lt;p>The tidymodels team recently released new versions of the tune, finetune, and workflowsets packages, and we&amp;rsquo;re super stoked about it! Each of these three packages facilitates tuning hyperparameters in tidymodels, and their new releases work to make the experience of hyperparameter tuning more joyful.&lt;/p>
&lt;p>You can install these releases from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tune"&lt;/span>, &lt;span class='s'>"workflowsets"&lt;/span>, &lt;span class='s'>"finetune"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will highlight some of new changes in these packages that we&amp;rsquo;re most excited about.&lt;/p>
&lt;p>You can see the full lists of changes in the release notes for each package:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://github.com/tidymodels/tune/releases/tag/v1.1.0" target="_blank" rel="noopener">tune v1.1.0&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/workflowsets/releases/tag/v1.0.1" target="_blank" rel="noopener">workflowsets v1.0.1&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/finetune/releases/tag/v1.1.0" target="_blank" rel="noopener">finetune v1.1.0&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidymodels/finetune'>finetune&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="a-shorthand-for-fitting-the-optimal-model">A shorthand for fitting the optimal model
&lt;a href="#a-shorthand-for-fitting-the-optimal-model">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In tidymodels, the result of tuning a set of hyperparameters is a data structure describing the candidate models, their predictions, and the performance metrics associated with those predictions. For example, tuning the number of &lt;code>neighbors&lt;/code> in a &lt;code>nearest_neighbors()&lt;/code> model over a regular grid:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># tune the `neighbors` hyperparameter&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>knn_model_spec&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>nearest_neighbor&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>, neighbors &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://hardhat.tidymodels.org/reference/tune.html'>tune&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>tuning_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/tune_grid.html'>tune_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>knn_model_spec&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>, &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> control &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/control_grid.html'>control_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>save_workflow &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># check out the resulting object&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>tuning_res&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Tuning results&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Bootstrap sampling &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; splits id .metrics .notes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap1 &lt;span style='color: #555555;'>&amp;lt;tibble [20 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/12]&amp;gt;&lt;/span> Bootstrap2 &lt;span style='color: #555555;'>&amp;lt;tibble [20 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap3 &lt;span style='color: #555555;'>&amp;lt;tibble [20 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/10]&amp;gt;&lt;/span> Bootstrap4 &lt;span style='color: #555555;'>&amp;lt;tibble [20 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/12]&amp;gt;&lt;/span> Bootstrap5 &lt;span style='color: #555555;'>&amp;lt;tibble [20 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># examine proposed hyperparameters and associated metrics&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/collect_predictions.html'>collect_metrics&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tuning_res&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 20 × 7&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; neighbors .metric .estimator mean n std_err .config &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 2 rmse standard 3.19 5 0.208 Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 2 rsq standard 0.664 5 0.086&lt;span style='text-decoration: underline;'>1&lt;/span> Preprocessor1_Model01&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 3 rmse standard 3.13 5 0.266 Preprocessor1_Model02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 3 rsq standard 0.678 5 0.086&lt;span style='text-decoration: underline;'>8&lt;/span> Preprocessor1_Model02&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 4 rmse standard 3.11 5 0.292 Preprocessor1_Model03&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 4 rsq standard 0.684 5 0.085&lt;span style='text-decoration: underline;'>1&lt;/span> Preprocessor1_Model03&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 5 rmse standard 3.10 5 0.287 Preprocessor1_Model04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 5 rsq standard 0.686 5 0.083&lt;span style='text-decoration: underline;'>9&lt;/span> Preprocessor1_Model04&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 8 rmse standard 3.08 5 0.263 Preprocessor1_Model05&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 8 rsq standard 0.689 5 0.084&lt;span style='text-decoration: underline;'>3&lt;/span> Preprocessor1_Model05&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 9 rmse standard 3.07 5 0.256 Preprocessor1_Model06&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 9 rsq standard 0.691 5 0.084&lt;span style='text-decoration: underline;'>5&lt;/span> Preprocessor1_Model06&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>13&lt;/span> 10 rmse standard 3.06 5 0.247 Preprocessor1_Model07&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>14&lt;/span> 10 rsq standard 0.693 5 0.083&lt;span style='text-decoration: underline;'>7&lt;/span> Preprocessor1_Model07&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>15&lt;/span> 11 rmse standard 3.05 5 0.241 Preprocessor1_Model08&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>16&lt;/span> 11 rsq standard 0.696 5 0.083&lt;span style='text-decoration: underline;'>3&lt;/span> Preprocessor1_Model08&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>17&lt;/span> 13 rmse standard 3.03 5 0.236 Preprocessor1_Model09&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>18&lt;/span> 13 rsq standard 0.701 5 0.082&lt;span style='text-decoration: underline;'>0&lt;/span> Preprocessor1_Model09&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>19&lt;/span> 14 rmse standard 3.02 5 0.235 Preprocessor1_Model10&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>20&lt;/span> 14 rsq standard 0.704 5 0.080&lt;span style='text-decoration: underline;'>8&lt;/span> Preprocessor1_Model10&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Given these tuning results, the next steps are to choose the &amp;ldquo;best&amp;rdquo; hyperparameters, assign those hyperparameters to the model, and fit the finalized model on the training set. Previously in tidymodels, this has felt like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># choose a method to define "best" and extract the resulting parameters&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>best_param&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/show_best.html'>select_best&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tuning_res&lt;/span>, &lt;span class='s'>"rmse"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># assign those parameters to model&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>knn_model_final&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/finalize_model.html'>finalize_model&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>knn_model_spec&lt;/span>, &lt;span class='nv'>best_param&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># fit the finalized model to the training set&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>knn_fit&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>knn_model_final&lt;/span>, &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Voilà! &lt;code>knn_fit&lt;/code> is a properly resampled model that is ready to
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> on new data:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>knn_fit&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='o'>]&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 22.0&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The newest release of tune introduced a shorthand interface for going from tuning results to final fit called
&lt;a href="https://tune.tidymodels.org/reference/fit_best.html" target="_blank" rel="noopener">&lt;code>fit_best()&lt;/code>&lt;/a>. The function wraps each of those three functions with sensible defaults to abbreviate the process described above.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>knn_fit_2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/fit_best.html'>fit_best&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>tuning_res&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/predict.html'>predict&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>knn_fit_2&lt;/span>, &lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='o'>]&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 1&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; .pred&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 22.0&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This function is closely related to the
&lt;a href="https://tune.tidymodels.org/reference/last_fit.html" target="_blank" rel="noopener">&lt;code>last_fit()&lt;/code>&lt;/a> function. They both give you access to a workflow fitted on the training data but are situated somewhat differently in the modeling workflow.
&lt;a href="https://tune.tidymodels.org/reference/fit_best.html" target="_blank" rel="noopener">&lt;code>fit_best()&lt;/code>&lt;/a> picks up after a tuning function like
&lt;a href="https://tune.tidymodels.org/reference/tune_grid.html" target="_blank" rel="noopener">&lt;code>tune_grid()&lt;/code>&lt;/a> to take you from tuning results to fitted workflow, ready for you to predict and assess further.
&lt;a href="https://tune.tidymodels.org/reference/last_fit.html" target="_blank" rel="noopener">&lt;code>last_fit()&lt;/code>&lt;/a> assumes you have made your choice of hyperparameters and finalized your workflow to then take you from finalized workflow to fitted workflow and further to performance assessment on the test data. While
&lt;a href="https://tune.tidymodels.org/reference/fit_best.html" target="_blank" rel="noopener">&lt;code>fit_best()&lt;/code>&lt;/a> gives a fitted workflow,
&lt;a href="https://tune.tidymodels.org/reference/last_fit.html" target="_blank" rel="noopener">&lt;code>last_fit()&lt;/code>&lt;/a> gives you the performance results. If you want the fitted workflow, you can extract it from the result of
&lt;a href="https://tune.tidymodels.org/reference/last_fit.html" target="_blank" rel="noopener">&lt;code>last_fit()&lt;/code>&lt;/a> via
&lt;a href="https://hardhat.tidymodels.org/reference/hardhat-extract.html" target="_blank" rel="noopener">&lt;code>extract_workflow()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>The newest release of the workflowsets package also includes a
&lt;a href="https://tune.tidymodels.org/reference/fit_best.html" target="_blank" rel="noopener">&lt;code>fit_best()&lt;/code>&lt;/a> method for workflow set objects. Given a set of tuning results, that method will sift through all of the possible models to find and fit the optimal model configuration.&lt;/p>
&lt;h2 id="interactive-issue-logging">Interactive issue logging
&lt;a href="#interactive-issue-logging">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Imagine, in the previous example, we made some subtle error in specifying the tuning process. For example, passing a function to &lt;code>extract&lt;/code> elements of the proposed workflows that injects some warnings and errors into the tuning process:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>raise_concerns&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/warning.html'>warning&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Ummm, wait. :o"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/stop.html'>stop&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Eep! Nooo!"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>tuning_res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/tune_grid.html'>tune_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>knn_model_spec&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>, &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> control &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/control_grid.html'>control_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>extract &lt;span class='o'>=&lt;/span> &lt;span class='nv'>raise_concerns&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Warnings and errors can come up in all sorts of places while tuning hyperparameters. Often, with obvious issues, we can raise errors early on and halt the tuning process, but with more subtle concerns, we don&amp;rsquo;t want to be too restrictive; it&amp;rsquo;s sometimes better to defer to the underlying modeling packages to decide what&amp;rsquo;s a dire issue versus something that can be worked around.&lt;/p>
&lt;p>In the past, we&amp;rsquo;ve raised warnings and issues as they occur, printing context on the issue to the console before logging the issue in the tuning result. In the above example, this would look like:&lt;/p>
&lt;pre>&lt;code>! Bootstrap1: preprocessor 1/1, model 1/1 (extracts): Ummm, wait. :o
x Bootstrap1: preprocessor 1/1, model 1/1 (extracts): Error in extractor(object): Eep! Nooo!
! Bootstrap2: preprocessor 1/1, model 1/1 (extracts): Ummm, wait. :o
x Bootstrap2: preprocessor 1/1, model 1/1 (extracts): Error in extractor(object): Eep! Nooo!
! Bootstrap3: preprocessor 1/1, model 1/1 (extracts): Ummm, wait. :o
x Bootstrap3: preprocessor 1/1, model 1/1 (extracts): Error in extractor(object): Eep! Nooo!
! Bootstrap4: preprocessor 1/1, model 1/1 (extracts): Ummm, wait. :o
x Bootstrap4: preprocessor 1/1, model 1/1 (extracts): Error in extractor(object): Eep! Nooo!
! Bootstrap5: preprocessor 1/1, model 1/1 (extracts): Ummm, wait. :o
x Bootstrap5: preprocessor 1/1, model 1/1 (extracts): Error in extractor(object): Eep! Nooo!
&lt;/code>&lt;/pre>
&lt;p>The above messages are super descriptive about where issues occur&amp;mdash;they note in which resample, from which proposed modeling workflow, and in which part of the fitting process the issues occurred in. At the same time, they are quite repetitive; if there&amp;rsquo;s an issue during hyperparameter tuning, it probably occurs in every resample, always in the same place. If, instead, we were evaluating this model against 1,000 resamples, or there were more than just two issues, this output could get very overwhelming very quickly.&lt;/p>
&lt;p>The new releases of our tuning packages include tools to determine which tuning issues are unique, and for each unique issue, only print out the message once while maintaining a dynamic count of how many times the issue occurred. With the new tune release, the same output would look like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;span>&lt;span class='c'>#&amp;gt; → &lt;span style='color: #BBBB00; font-weight: bold;'>A&lt;/span> | &lt;span style='color: #BBBB00;'>warning&lt;/span>: Ummm, wait. :o&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; → &lt;span style='color: #BB0000; font-weight: bold;'>B&lt;/span> | &lt;span style='color: #BB0000;'>error&lt;/span>: Eep! Nooo!&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; There were issues with some computations &lt;span style='color: #BBBB00; font-weight: bold;'>A&lt;/span>: x5 &lt;span style='color: #BB0000; font-weight: bold;'>B&lt;/span>: x5&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This interface is hopefully less overwhelming for users. When the messages attached to these issues aren&amp;rsquo;t enough to debug the issue, the complete set of information about the issues lives inside of the tuning result object, and can be retrieved with &lt;code>collect_notes(tuning_res)&lt;/code>. To turn off the interactive logging, set the &lt;code>verbose&lt;/code> control option to &lt;code>TRUE&lt;/code>.&lt;/p>
&lt;h2 id="speedups">Speedups
&lt;a href="#speedups">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Each of these three releases, as well as releases of core tidymodels packages they depend on like parsnip, recipes, and hardhat, include a plethora of changes meant to optimize computational performance. Especially for modeling practitioners who work with many resamples and/or small data sets, our modeling workflows will feel a whole lot snappier:&lt;/p>
&lt;p>&lt;img src="https://simonpcouch.com/blog/speedups-2023/index_files/figure-html/unnamed-chunk-10-1.png" alt="A ggplot2 line graph plotting relative change in time to evaluate model fits with the tidymodels packages. Fits on datasets with 100 training rows are 2 to 3 times faster, while fits on datasets with 100,000 or more rows take about the same amount of time as they used to.">&lt;/p>
&lt;p>With 100-row training data sets, the time to resample models with tune and friends has been at least halved. These releases are the first iteration of a set of changes to reduce the evaluation time of tidymodels code, and users can expect further optimizations in coming releases! See
&lt;a href="https://www.simonpcouch.com/blog/speedups-2023/" target="_blank" rel="noopener">this post on my blog&lt;/a> for more information about those speedups.&lt;/p>
&lt;h2 id="bonus-points">Bonus points
&lt;a href="#bonus-points">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Although they&amp;rsquo;re smaller in scope, we wanted to highlight two additional developments in tuning hyperparameters with tidymodels.&lt;/p>
&lt;h3 id="workflow-set-support-for-tidyclust">Workflow set support for tidyclust
&lt;a href="#workflow-set-support-for-tidyclust">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The recent tidymodels package
&lt;a href="github.com/tidymodels/tidyclust">tidyclust&lt;/a> introduced support for fitting and tuning clustering models in tidymodels. That package&amp;rsquo;s function
&lt;a href="https://tidyclust.tidymodels.org/reference/tune_cluster.html" target="_blank" rel="noopener">&lt;code>tune_cluster()&lt;/code>&lt;/a> is now an option for tuning in
&lt;a href="https://workflowsets.tidymodels.org/reference/workflow_map.html" target="_blank" rel="noopener">&lt;code>workflow_map()&lt;/code>&lt;/a>, meaning that users can fit sets of clustering models and preprocessors using workflow sets. These changes further integrate the tidyclust package into tidymodels framework.&lt;/p>
&lt;h3 id="refined-retrieval-of-intermediate-results">Refined retrieval of intermediate results
&lt;a href="#refined-retrieval-of-intermediate-results">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The &lt;code>.Last.tune.result&lt;/code> helper stores the most recent tuning result in the object &lt;code>.Last.tune.result&lt;/code> as a fail-safe in cases of interrupted tuning, uncaught tuning errors, and simply forgetting to assign tuning results to an object.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># be a silly goose and forget to assign results&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/tune_grid.html'>tune_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>knn_model_spec&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>mpg&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>bootstraps&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>, &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> control &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://tune.tidymodels.org/reference/control_grid.html'>control_grid&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>save_workflow &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Tuning results&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Bootstrap sampling &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; splits id .metrics .notes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap1 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/14]&amp;gt;&lt;/span> Bootstrap2 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/13]&amp;gt;&lt;/span> Bootstrap3 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/12]&amp;gt;&lt;/span> Bootstrap4 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap5 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># all is not lost!&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>.Last.tune.result&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Tuning results&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # Bootstrap sampling &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; splits id .metrics .notes &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap1 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/14]&amp;gt;&lt;/span> Bootstrap2 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/13]&amp;gt;&lt;/span> Bootstrap3 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/12]&amp;gt;&lt;/span> Bootstrap4 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> &lt;span style='color: #555555;'>&amp;lt;split [32/11]&amp;gt;&lt;/span> Bootstrap5 &lt;span style='color: #555555;'>&amp;lt;tibble [18 × 5]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;tibble [0 × 3]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># assign to object after the fact&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>res&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>.Last.tune.result&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>These three releases introduce support for the &lt;code>.Last.tune.result&lt;/code> object in more settings and refine support in existing implementations.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to
&lt;a href="https://github.com/walrossker" target="_blank" rel="noopener">@walrossker&lt;/a>,
&lt;a href="https://github.com/Freestyleyang" target="_blank" rel="noopener">@Freestyleyang&lt;/a>, and
&lt;a href="https://github.com/Jeffrothschild" target="_blank" rel="noopener">@Jeffrothschild&lt;/a> for their contributions to these packages since their last releases.&lt;/p>
&lt;p>Happy modeling, y&amp;rsquo;all!&lt;/p></description></item><item><title>Q1 2022 tidymodels digest</title><link>https://www.tidyverse.org/blog/2022/04/tidymodels-2022-q1/</link><pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/04/tidymodels-2022-q1/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with `hugodown::tidy_show_meta()`)
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] `hugodown::use_tidy_thumbnails()`
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] `usethis::use_tidy_thanks()`
-->
&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ──────────────────────────── tidymodels 0.2.0 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ broom 0.7.12 ✓ rsample 0.1.1 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dials 0.1.0 ✓ tibble 3.1.6 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dplyr 1.0.8 ✓ tidyr 1.2.0 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ infer 1.0.0 ✓ tune 0.2.0 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ modeldata 0.1.1 ✓ workflows 0.2.6 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ parsnip 0.2.1 ✓ workflowsets 0.2.1 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ purrr 0.3.4 ✓ yardstick 0.0.9 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ recipes 0.2.0&lt;/span>
&lt;span class="c1">#&amp;gt; ── Conflicts ─────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class="c1">#&amp;gt; x purrr::discard() masks scales::discard()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::filter() masks stats::filter()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::lag() masks stats::lag()&lt;/span>
&lt;span class="c1">#&amp;gt; x recipes::step() masks stats::step()&lt;/span>
&lt;span class="c1">#&amp;gt; • Dig deeper into tidy modeling with R at https://www.tmwr.org&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the beginning of last year, we have been publishing
&lt;a href="https://www.tidyverse.org/categories/roundup/" target="_blank" rel="noopener">quarterly updates&lt;/a> here on the tidyverse blog summarizing what&amp;rsquo;s new in the tidymodels ecosystem. The purpose of these regular posts is to share useful new features and any updates you may have missed. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including our roundup posts as well as those that are more focused, like these from the past month or so:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/02/recipes-0-2-0/" target="_blank" rel="noopener">recipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/03/usemodels-0-2-0/" target="_blank" rel="noopener">usemodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2022/03/parsnip-roundup-2022/" target="_blank" rel="noopener">parsnip and its extension packages&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Since
&lt;a href="https://www.tidyverse.org/blog/2021/12/tidymodels-2021-q4/" target="_blank" rel="noopener">our last roundup post&lt;/a>, there have been 21 CRAN releases of tidymodels packages. You can install these updates from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;baguette&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;broom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;brulee&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;dials&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;discrim&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;finetune&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;hardhat&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;multilevelmod&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;parsnip&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;plsmod&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;poissonreg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;recipes&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;rules&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;stacks&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;textrecipes&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;tune&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;tidymodels&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;usemodels&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;vetiver&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;workflows&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;workflowsets&amp;#34;&lt;/span>
&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>NEWS&lt;/code> files are linked here for each package; you&amp;rsquo;ll notice that there are a lot! We know it may be bothersome to keep up with all these changes, so we want to draw your attention to our recent blog posts above and also highlight a few more useful updates in today&amp;rsquo;s blog post.&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://baguette.tidymodels.org/news/index.html#baguette-020" target="_blank" rel="noopener">baguette&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://broom.tidymodels.org/news/index.html#broom-0711" target="_blank" rel="noopener">broom&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tidymodels.github.io/brulee/news/index.html#brulee-010" target="_blank" rel="noopener">brulee&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dials.tidymodels.org/news/index.html#dials-010" target="_blank" rel="noopener">dials&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://finetune.tidymodels.org/news/index.html#finetune-020" target="_blank" rel="noopener">finetune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://hardhat.tidymodels.org/news/index.html#hardhat-020" target="_blank" rel="noopener">hardhat&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://hardhat.tidymodels.org/news/index.html#hardhat-020" target="_blank" rel="noopener">hardhat&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/multilevelmod/blob/main/NEWS.md" target="_blank" rel="noopener">multilevelmod&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://parsnip.tidymodels.org/news/index.html#parsnip-021" target="_blank" rel="noopener">parsnip&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://plsmod.tidymodels.org/news/index.html#plsmod-012" target="_blank" rel="noopener">plsmod&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://poissonreg.tidymodels.org/news/index.html#poissonreg-020" target="_blank" rel="noopener">poissonreg&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://github.com/tidymodels/recipes/blob/HEAD/NEWS.md#recipes-020" target="_blank" rel="noopener">recipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://rules.tidymodels.org/news/index.html#rules-020" target="_blank" rel="noopener">rules&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://stacks.tidymodels.org/news/index.html#stacks-022" target="_blank" rel="noopener">stacks&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://textrecipes.tidymodels.org/news/index.html#textrecipes-050" target="_blank" rel="noopener">textrecipes&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tune.tidymodels.org/news/index.html#tune-020" target="_blank" rel="noopener">tune&lt;/a>&lt;/li>
&lt;li>the
&lt;a href="https://tidymodels.tidymodels.org/news/index.html#tidymodels-020" target="_blank" rel="noopener">tidymodels&lt;/a> metapackage itself&lt;/li>
&lt;li>
&lt;a href="https://usemodels.tidymodels.org/news/index.html#usemodels-020" target="_blank" rel="noopener">usemodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://vetiver.tidymodels.org/news/index.html#vetiver-012" target="_blank" rel="noopener">vetiver&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflows.tidymodels.org/news/index.html#workflows-025" target="_blank" rel="noopener">workflows&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflowsets.tidymodels.org/news/index.html#workflowsets-021" target="_blank" rel="noopener">workflowsets&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>We&amp;rsquo;re really excited about
&lt;a href="https://tidymodels.github.io/brulee/" target="_blank" rel="noopener">brulee&lt;/a> and
&lt;a href="https://vetiver.tidymodels.org/" target="_blank" rel="noopener">vetiver&lt;/a> but will share more in upcoming blog posts.&lt;/p>
&lt;h2 id="feature-hashing">Feature hashing
&lt;a href="#feature-hashing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The newest
&lt;a href="https://textrecipes.tidymodels.org/" target="_blank" rel="noopener">textrecipes&lt;/a> release provides support for feature hashing, a feature engineering approach that can be helpful when working with high cardinality categorical data or text. A hashing function takes an input of variable size and maps it to an output of fixed size. Hashing functions are commonly used in cryptography and databases, and we can create a hash in R using &lt;code>rlang::hash()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">textrecipes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sacramento&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sac_split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">initial_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sacramento&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">strata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sac_train&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">training&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sac_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sac_test&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sac_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sac_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zip_hash&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">map_chr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rlang&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">zip_hash&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 698 × 2&lt;/span>
&lt;span class="c1">#&amp;gt; zip zip_hash &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;chr&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 z95838 32cbb7d319c97f062be64075c2ae6c07&lt;/span>
&lt;span class="c1">#&amp;gt; 2 z95815 55d08d816f0d2e9ec16af15239826e91&lt;/span>
&lt;span class="c1">#&amp;gt; 3 z95824 235b72b9a37a6154552498eb3f90e9e3&lt;/span>
&lt;span class="c1">#&amp;gt; 4 z95841 d973597ab5cc48a0dfe54b84a91249e1&lt;/span>
&lt;span class="c1">#&amp;gt; 5 z95842 c44537f2eecd51707b19e69027228a85&lt;/span>
&lt;span class="c1">#&amp;gt; 6 z95820 e1b86cbed49c029f9fa25bba94ede11e&lt;/span>
&lt;span class="c1">#&amp;gt; 7 z95670 60ee71387789bb8c58748e4632089cc4&lt;/span>
&lt;span class="c1">#&amp;gt; 8 z95838 32cbb7d319c97f062be64075c2ae6c07&lt;/span>
&lt;span class="c1">#&amp;gt; 9 z95815 55d08d816f0d2e9ec16af15239826e91&lt;/span>
&lt;span class="c1">#&amp;gt; 10 z95822 8e212bdf9650ef39a1634e6e18529834&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 688 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The variable &lt;code>zip&lt;/code> in this data on home sales in Sacramento, CA is of
&lt;a href="https://en.wikipedia.org/wiki/Cardinality_%28SQL_statements%29" target="_blank" rel="noopener">&amp;ldquo;high cardinality&amp;rdquo;&lt;/a> (as ZIP codes often are) with 67 unique values. When we &lt;code>hash()&lt;/code> the ZIP code, we get out, well, a hash value, and we will always get the same hash value for the same input (as you can see for ZIP code 95838 here). We can choose the fixed size of our hashed output to reduce the number of possible values to whatever we want; it turns out this works well in a lot of situations.&lt;/p>
&lt;p>Let&amp;rsquo;s use a hashing algorithm like this one (with an output size of 16) to create binary indicator variables for this high cardinality &lt;code>zip&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">hash_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">price&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">zip&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">beds&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">baths&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sac_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy_hash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">signed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num_terms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">16L&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">prep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hash_rec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">bake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 698 × 19&lt;/span>
&lt;span class="c1">#&amp;gt; dummyhash_zip_01 dummyhash_zip_02 dummyhash_zip_03 dummyhash_zip_04&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 0 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 2 0 1 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 3 0 0 1 0&lt;/span>
&lt;span class="c1">#&amp;gt; 4 1 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 5 0 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 6 0 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 7 0 1 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 8 0 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 9 0 1 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; 10 0 0 0 0&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 688 more rows, and 15 more variables:&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_05 &amp;lt;dbl&amp;gt;, dummyhash_zip_06 &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_07 &amp;lt;dbl&amp;gt;, dummyhash_zip_08 &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_09 &amp;lt;dbl&amp;gt;, dummyhash_zip_10 &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_11 &amp;lt;dbl&amp;gt;, dummyhash_zip_12 &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_13 &amp;lt;dbl&amp;gt;, dummyhash_zip_14 &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # dummyhash_zip_15 &amp;lt;dbl&amp;gt;, dummyhash_zip_16 &amp;lt;dbl&amp;gt;, beds &amp;lt;int&amp;gt;, …&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We now have 16 columns for &lt;code>zip&lt;/code> (along with the other predictors and the outcome), instead of the over 60 we would have had by making regular dummy variables.&lt;/p>
&lt;p>For more on feature hashing including its benefits (fast and low memory!) and downsides (not directly interpretable!), check out
&lt;a href="https://smltar.com/mlregression.html#case-study-feature-hashing" target="_blank" rel="noopener">Section 6.7 of &lt;em>Supervised Machine Learning for Text Analysis with R&lt;/em>&lt;/a> and/or
&lt;a href="https://www.tmwr.org/categorical.html#feature-hashing" target="_blank" rel="noopener">Section 17.4 of &lt;em>Tidy Modeling with R&lt;/em>&lt;/a>.&lt;/p>
&lt;h2 id="more-customization-for-workflow-sets">More customization for workflow sets
&lt;a href="#more-customization-for-workflow-sets">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Last year about this time, we introduced
&lt;a href="https://www.tidyverse.org/blog/2021/03/workflowsets-0-0-1/" target="_blank" rel="noopener">workflowsets&lt;/a>, a new package for creating, handling, and tuning multiple workflows at once. See
&lt;a href="https://www.tmwr.org/workflows.html#workflow-sets-intro" target="_blank" rel="noopener">Section 7.5&lt;/a> and especially
&lt;a href="https://www.tmwr.org/workflow-sets.html" target="_blank" rel="noopener">Chapter 15&lt;/a> of &lt;em>Tidy Modeling with R&lt;/em> for more on workflow sets. In the latest release of
&lt;a href="https://workflowsets.tidymodels.org/" target="_blank" rel="noopener">workflowsets&lt;/a>, we provide finer control of customization for the workflows you create with workflowsets. First you can create a standard workflow set by crossing a set of models with a set of preprocessors (let&amp;rsquo;s just use the feature hashing recipe we already created):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">glmnet_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">penalty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">mixture&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;glmnet&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">mars_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">mars&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prod_degree&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;earth&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">old_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow_set&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">preproc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hash&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">hash_rec&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">models&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MARS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mars_spec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">glmnet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glmnet_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">old_set&lt;/span>
&lt;span class="c1">#&amp;gt; # A workflow set/tibble: 2 × 4&lt;/span>
&lt;span class="c1">#&amp;gt; wflow_id info option result &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 hash_MARS &amp;lt;tibble [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 hash_glmnet &amp;lt;tibble [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>option&lt;/code> column is a placeholder for any arguments to use when we &lt;em>evaluate&lt;/em> the workflow; the possibilities here are any argument to functions like
&lt;a href="https://tune.tidymodels.org/reference/tune_grid.html" target="_blank" rel="noopener">&lt;code>tune_grid()&lt;/code>&lt;/a> or
&lt;a href="https://tune.tidymodels.org/reference/fit_resamples.html" target="_blank" rel="noopener">&lt;code>fit_resamples()&lt;/code>&lt;/a>. But what about arguments that belong not to the workflow as a whole, but to a recipe or a parsnip model? In the new release, we added support for customizing those kinds of arguments via &lt;code>update_workflow_model()&lt;/code> and &lt;code>update_workflow_recipe()&lt;/code>. This lets you, for example, say that you want to use a
&lt;a href="https://www.tidyverse.org/blog/2020/11/tidymodels-sparse-support/" target="_blank" rel="noopener">sparse blueprint&lt;/a> for fitting:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">sparse_bp&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">hardhat&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">default_recipe_blueprint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">composition&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;dgCMatrix&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">new_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">old_set&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">update_workflow_recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hash_glmnet&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hash_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">blueprint&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sparse_bp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can tune this workflow set, with the sparse blueprint for the glmnet model, over a set of resampling folds.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vfold_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sac_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">strata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">new_set&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">workflow_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">folds&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">verbose&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; i 1 of 2 tuning: hash_MARS&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ 1 of 2 tuning: hash_MARS (2.2s)&lt;/span>
&lt;span class="c1">#&amp;gt; i 2 of 2 tuning: hash_glmnet&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ 2 of 2 tuning: hash_glmnet (3.9s)&lt;/span>
&lt;span class="c1">#&amp;gt; # A workflow set/tibble: 2 × 4&lt;/span>
&lt;span class="c1">#&amp;gt; wflow_id info option result &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 hash_MARS &amp;lt;tibble [1 × 4]&amp;gt; &amp;lt;opts[2]&amp;gt; &amp;lt;tune[+]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 hash_glmnet &amp;lt;tibble [1 × 4]&amp;gt; &amp;lt;opts[2]&amp;gt; &amp;lt;tune[+]&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="new-parameter-objects-and-parameter-handling">New parameter objects and parameter handling
&lt;a href="#new-parameter-objects-and-parameter-handling">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Even if you are a regular tidymodels user, you may not have thought much about
&lt;a href="https://dials.tidymodels.org/" target="_blank" rel="noopener">dials&lt;/a>. This is an infrastructure package that is used to create and manage model hyperparameters. In the latest release of dials, we provide a handful of new parameters for various models and feature engineering approaches. There are a handful of parameters
&lt;a href="https://parsnip.tidymodels.org/reference/bart.html" target="_blank" rel="noopener">for the new &lt;code>parsnip::bart()&lt;/code>&lt;/a>, i.e. Bayesian additive regression trees model:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">prior_outcome_range&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Prior for Outcome Range (quantitative)&lt;/span>
&lt;span class="c1">#&amp;gt; Range: (0, 5]&lt;/span>
&lt;span class="nf">prior_terminal_node_coef&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Terminal Node Prior Coefficient (quantitative)&lt;/span>
&lt;span class="c1">#&amp;gt; Range: (0, 1]&lt;/span>
&lt;span class="nf">prior_terminal_node_expo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Terminal Node Prior Exponent (quantitative)&lt;/span>
&lt;span class="c1">#&amp;gt; Range: [0, 3]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This version of dials, along with the new hardhat release, also provides new functions for extracting single parameters and parameter sets from modeling objects.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">price&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">zip&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">beds&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">baths&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sac_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_dummy_hash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">signed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num_terms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">extract_parameter_set_dials&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Collection of 1 parameters for tuning&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; identifier type object&lt;/span>
&lt;span class="c1">#&amp;gt; num_terms num_terms nparam[+]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also extract a single parameter by name:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mars_spec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">extract_parameter_dials&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;prod_degree&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Degree of Interaction (quantitative)&lt;/span>
&lt;span class="c1">#&amp;gt; Range: [1, 2]&lt;/span>
&lt;span class="n">glmnet_spec&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">extract_parameter_dials&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;penalty&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Amount of Regularization (quantitative)&lt;/span>
&lt;span class="c1">#&amp;gt; Transformer: log-10 &lt;/span>
&lt;span class="c1">#&amp;gt; Range (transformed scale): [-10, 0]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We’d like to extend our thanks to all of the contributors who helped make these releases during Q1 possible!&lt;/p>
&lt;ul>
&lt;li>
&lt;p>baguette:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a> and
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>broom:
&lt;a href="https://github.com/cgoo4" target="_blank" rel="noopener">@cgoo4&lt;/a>,
&lt;a href="https://github.com/colinbrislawn" target="_blank" rel="noopener">@colinbrislawn&lt;/a>,
&lt;a href="https://github.com/DanChaltiel" target="_blank" rel="noopener">@DanChaltiel&lt;/a>,
&lt;a href="https://github.com/ddsjoberg" target="_blank" rel="noopener">@ddsjoberg&lt;/a>,
&lt;a href="https://github.com/fschaffner" target="_blank" rel="noopener">@fschaffner&lt;/a>,
&lt;a href="https://github.com/grantmcdermott" target="_blank" rel="noopener">@grantmcdermott&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/Marc-Girondot" target="_blank" rel="noopener">@Marc-Girondot&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/mlaviolet" target="_blank" rel="noopener">@mlaviolet&lt;/a>,
&lt;a href="https://github.com/oliverbothe" target="_blank" rel="noopener">@oliverbothe&lt;/a>,
&lt;a href="https://github.com/PursuitOfDataScience" target="_blank" rel="noopener">@PursuitOfDataScience&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/vincentarelbundock" target="_blank" rel="noopener">@vincentarelbundock&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>brulee:
&lt;a href="https://github.com/dfalbel" target="_blank" rel="noopener">@dfalbel&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>dials:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/py9mrg" target="_blank" rel="noopener">@py9mrg&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>discrim:
&lt;a href="https://github.com/deschen1" target="_blank" rel="noopener">@deschen1&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jmarshallnz" target="_blank" rel="noopener">@jmarshallnz&lt;/a>, and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>finetune:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/Steviey" target="_blank" rel="noopener">@Steviey&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>hardhat:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/ddsjoberg" target="_blank" rel="noopener">@ddsjoberg&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/MasterLuke84" target="_blank" rel="noopener">@MasterLuke84&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>multilevelmod:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a> and
&lt;a href="https://github.com/sitendug" target="_blank" rel="noopener">@sitendug&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>parsnip:
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/dietrichson" target="_blank" rel="noopener">@dietrichson&lt;/a>,
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jmarshallnz" target="_blank" rel="noopener">@jmarshallnz&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/nikhilpathiyil" target="_blank" rel="noopener">@nikhilpathiyil&lt;/a>,
&lt;a href="https://github.com/nvelden" target="_blank" rel="noopener">@nvelden&lt;/a>,
&lt;a href="https://github.com/t-kalinowski" target="_blank" rel="noopener">@t-kalinowski&lt;/a>,
&lt;a href="https://github.com/tiagomaie" target="_blank" rel="noopener">@tiagomaie&lt;/a>,
&lt;a href="https://github.com/tolliam" target="_blank" rel="noopener">@tolliam&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>plsmod:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a> and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>poissonreg:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a> and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>recipes:
&lt;a href="https://github.com/agwalker82" target="_blank" rel="noopener">@agwalker82&lt;/a>,
&lt;a href="https://github.com/AndrewKostandy" target="_blank" rel="noopener">@AndrewKostandy&lt;/a>,
&lt;a href="https://github.com/aridf" target="_blank" rel="noopener">@aridf&lt;/a>,
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/DoktorMike" target="_blank" rel="noopener">@DoktorMike&lt;/a>,
&lt;a href="https://github.com/duccioa" target="_blank" rel="noopener">@duccioa&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/FieteO" target="_blank" rel="noopener">@FieteO&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mdsteiner" target="_blank" rel="noopener">@mdsteiner&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/spsanderson" target="_blank" rel="noopener">@spsanderson&lt;/a>,
&lt;a href="https://github.com/themichjam" target="_blank" rel="noopener">@themichjam&lt;/a>,
&lt;a href="https://github.com/tmastny" target="_blank" rel="noopener">@tmastny&lt;/a>,
&lt;a href="https://github.com/tomazweiss" target="_blank" rel="noopener">@tomazweiss&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/walrossker" target="_blank" rel="noopener">@walrossker&lt;/a>, and
&lt;a href="https://github.com/zenggyu" target="_blank" rel="noopener">@zenggyu&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rules:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/wdkeyzer" target="_blank" rel="noopener">@wdkeyzer&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>stacks:
&lt;a href="https://github.com/amcmahon17" target="_blank" rel="noopener">@amcmahon17&lt;/a>,
&lt;a href="https://github.com/py9mrg" target="_blank" rel="noopener">@py9mrg&lt;/a>,
&lt;a href="https://github.com/Saarialho" target="_blank" rel="noopener">@Saarialho&lt;/a>,
&lt;a href="https://github.com/siegfried" target="_blank" rel="noopener">@siegfried&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/StuieT85" target="_blank" rel="noopener">@StuieT85&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/williamshell" target="_blank" rel="noopener">@williamshell&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>textrecipes:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>, and
&lt;a href="https://github.com/NLDataScientist" target="_blank" rel="noopener">@NLDataScientist&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tune:
&lt;a href="https://github.com/abichat" target="_blank" rel="noopener">@abichat&lt;/a>,
&lt;a href="https://github.com/AndrewKostandy" target="_blank" rel="noopener">@AndrewKostandy&lt;/a>,
&lt;a href="https://github.com/dax44" target="_blank" rel="noopener">@dax44&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/felxcon" target="_blank" rel="noopener">@felxcon&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juanydlh" target="_blank" rel="noopener">@juanydlh&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>,
&lt;a href="https://github.com/py9mrg" target="_blank" rel="noopener">@py9mrg&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/walrossker" target="_blank" rel="noopener">@walrossker&lt;/a>,
&lt;a href="https://github.com/williamshell" target="_blank" rel="noopener">@williamshell&lt;/a>, and
&lt;a href="https://github.com/wtbxsjy" target="_blank" rel="noopener">@wtbxsjy&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tidymodels:
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/exsell-jc" target="_blank" rel="noopener">@exsell-jc&lt;/a>,
&lt;a href="https://github.com/hardin47" target="_blank" rel="noopener">@hardin47&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/PursuitOfDataScience" target="_blank" rel="noopener">@PursuitOfDataScience&lt;/a>,
&lt;a href="https://github.com/RaymondBalise" target="_blank" rel="noopener">@RaymondBalise&lt;/a>,
&lt;a href="https://github.com/scottlyden" target="_blank" rel="noopener">@scottlyden&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>usemodels:
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a> and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>vetiver:
&lt;a href="https://github.com/atheriel" target="_blank" rel="noopener">@atheriel&lt;/a> and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>workflows:
&lt;a href="https://github.com/CarstenLange" target="_blank" rel="noopener">@CarstenLange&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>, and
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>workflowsets:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dvanic" target="_blank" rel="noopener">@dvanic&lt;/a>,
&lt;a href="https://github.com/gdmcdonald" target="_blank" rel="noopener">@gdmcdonald&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/wdefreitas" target="_blank" rel="noopener">@wdefreitas&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>New tidymodels releases for July 2021</title><link>https://www.tidyverse.org/blog/2021/07/tidymodels-july-2021/</link><pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/07/tidymodels-july-2021/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with `hugodown::tidy_show_meta()`)
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] `hugodown::use_tidy_thumbnails()`
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] `usethis::use_tidy_thanks()`
-->
&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles. Earlier this year, we
&lt;a href="https://www.tidyverse.org/blog/2021/03/tidymodels-2021-q1/" target="_blank" rel="noopener">started regular updates&lt;/a> here on the tidyverse blog summarizing recent developments in the tidymodels ecosystem. You can check out the
&lt;a href="https://www.tidyverse.org/tags/tidymodels/" target="_blank" rel="noopener">&lt;code>tidymodels&lt;/code> tag&lt;/a> to find all tidymodels blog posts here, including those that focus on a single package or more major releases. The purpose of these roundup posts is to keep you informed about any releases you may have missed and useful new functionality as we maintain these packages.&lt;/p>
&lt;p>Recently, we had a series of CRAN releases:
&lt;a href="https://hardhat.tidymodels.org/news/index.html#hardhat-0-1-6-2021-07-14" target="_blank" rel="noopener">hardhat&lt;/a>,
&lt;a href="https://workflows.tidymodels.org/news/#workflows-0-2-3-2021-07-15" target="_blank" rel="noopener">workflows&lt;/a>,
&lt;a href="https://parsnip.tidymodels.org/news/#parsnip-0-1-7-2021-07-21" target="_blank" rel="noopener">parsnip&lt;/a>,
&lt;a href="https://tune.tidymodels.org/news/#tune-0-1-6-2021-07-21" target="_blank" rel="noopener">tune&lt;/a>,
&lt;a href="https://finetune.tidymodels.org/news/#finetune-0-1-0-unreleased" target="_blank" rel="noopener">finetune&lt;/a>,
&lt;a href="https://workflowsets.tidymodels.org/news/#workflowsets-0-1-0-unreleased" target="_blank" rel="noopener">workflowsets&lt;/a>, and
&lt;a href="https://discrim.tidymodels.org/news/#discrim-0-1-3-unreleased" target="_blank" rel="noopener">discrim&lt;/a>. These were coordinated because of some cross-package improvements. This blog post summarizes the changes.&lt;/p>
&lt;h2 id="object-extraction">Object extraction
&lt;a href="#object-extraction">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The tidymodels team decided that we needed a consistent set of APIs for extracting things from objects. For example, a parsnip model contains the underlying model fit based on the engine. A &lt;code>linear_reg()&lt;/code> model with the &lt;code>&amp;quot;lm&amp;quot;&lt;/code> engine contains an &lt;code>lm&lt;/code> object. There were some existing functions to do this (mostly named &lt;code>pull_*()&lt;/code>) but they were fairly inconsistent and were not generics.&lt;/p>
&lt;p>We added the following functions: &lt;code>extract_fit_engine()&lt;/code>, &lt;code>extract_fit_parsnip()&lt;/code>, &lt;code>extract_mold()&lt;/code>, &lt;code>extract_numeric()&lt;/code>, &lt;code>extract_preprocessor()&lt;/code>, &lt;code>extract_recipe()&lt;/code>, &lt;code>extract_spec_parsnip()&lt;/code>, &lt;code>extract_workflow()&lt;/code>, and &lt;code>extract_workflow_set_result()&lt;/code>.&lt;/p>
&lt;p>The nice thing about this change is that a function such as &lt;code>extract_recipe()&lt;/code> can be used with objects created by the tune, workflows, or workflowsets packages.&lt;/p>
&lt;p>The existing &lt;code>pull_*()&lt;/code> methods have been soft-deprecated and will stick around for a while.&lt;/p>
&lt;h2 id="better-model-documentation">Better model documentation
&lt;a href="#better-model-documentation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One issue that we&amp;rsquo;ve seen in the parsnip documentation is that there is just &lt;em>so much&lt;/em> on each model page. It can be intimidating and difficult to find that one piece of information that you were looking for.&lt;/p>
&lt;p>We&amp;rsquo;ve reorganized the model pages so that there are now sub-packages for each engine. For example, when you use &lt;code>?linear_reg&lt;/code>, the help page has a &lt;em>dynamic&lt;/em> list of engines from parsnip or any parsnip-adjacent package that has been loaded. Here is what the
&lt;a href="https://parsnip.tidymodels.org/reference/linear_reg.html" target="_blank" rel="noopener">pkgdown site&lt;/a> looks like:&lt;/p>
&lt;p>&lt;img src="linear_reg.png" title="plot of chunk parsnip" alt="plot of chunk parsnip" width="90%" style="display: block; margin: auto;" />&lt;/p>
&lt;p>There is a similar dynamic list in the &lt;code>See Also&lt;/code> section.&lt;/p>
&lt;p>Each engine page provides basic information about tuning parameters, modes, preprocessing requirements, and anything else that we thing is relevant. For example, for the C5.0 engine for &lt;code>boost_tree()&lt;/code>:&lt;/p>
&lt;p>&lt;img src="C5.0.png" title="plot of chunk C50" alt="plot of chunk C50" width="90%" style="display: block; margin: auto;" />&lt;/p>
&lt;p>Finally, the existing parsnip documentation didn&amp;rsquo;t show the actual fitting and/or prediction in action. A
&lt;a href="https://parsnip.tidymodels.org/articles/articles/Examples.html" target="_blank" rel="noopener">new pkgdown article&lt;/a> has worked examples demonstrating the use of parsnip models on real data. Here is a screen shot for MARS regression via the earth package:&lt;/p>
&lt;p>&lt;img src="earth.png" title="plot of chunk earth" alt="plot of chunk earth" width="90%" style="display: block; margin: auto;" />&lt;/p>
&lt;p>We think that these changes will greatly improve the whole parsnip experience, especially for new users.&lt;/p>
&lt;h2 id="simpler-parsnip-and-workflows-interfaces">Simpler parsnip and workflows interfaces
&lt;a href="#simpler-parsnip-and-workflows-interfaces">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Our good friend and colleague
&lt;a href="https://twitter.com/drob" target="_blank" rel="noopener">David Robinson&lt;/a> had
&lt;a href="http://varianceexplained.org/r/sliced-ml/#where-tidymodels-can-improve" target="_blank" rel="noopener">some great ideas&lt;/a> for specific improvements for our APIs. After some discussion, both of his suggestions were implemented.&lt;/p>
&lt;p>First, we enabled a default engine for parsnip models (you may have noticed this in the screen shots above). This produces simpler code for some model functions and, if a model has a single mode, fitting is as concise as&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># use lm() for regression&lt;/span>
&lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Another nice feature is more succinct piping for workflows. A preprocessor, such as a formula or recipe, can be piped into &lt;code>workflow()&lt;/code> now. Also, there is an optional second argument in that function for the model specification.&lt;/p>
&lt;p>Instead of&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">car_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_ns&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">disp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">deg_free&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">car_wflow&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car_rec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>you can now use&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">car_wflow&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_ns&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">disp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">deg_free&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you might be on the fence about using tidymodels,
&lt;a href="http://varianceexplained.org/r/sliced-ml/" target="_blank" rel="noopener">David&amp;rsquo;s blog post&lt;/a> does an excellent job encapsulating the benefits of our approach, so give it a read.&lt;/p>
&lt;h2 id="other-changes">Other changes
&lt;a href="#other-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>parsnip now has a generalized additive model function
&lt;a href="https://parsnip.tidymodels.org/reference/gen_additive_mod.html" target="_blank" rel="noopener">&lt;code>gen_additive_mod()&lt;/code>&lt;/a>! There is currently one engine (&lt;code>mgcv&lt;/code>).&lt;/p>
&lt;p>The tune package has better control over random numbers since, in some cases, the
&lt;a href="https://github.com/tidymodels/tune/issues/389" target="_blank" rel="noopener">RNGkind was changed&lt;/a> after tuning a model.&lt;/p>
&lt;p>The discrim package has the new parsnip-like documentation and new model engines. Also, the shrunken discriminant analysis method of Ahdesmaki and Strimmer (2010) was added as an engine to &lt;code>discrim_linear()&lt;/code>. The newly resurrected sparsediscrim package allowed use to include new engines for
&lt;a href="https://discrim.tidymodels.org/reference/details_discrim_linear_sparsediscrim.html" target="_blank" rel="noopener">&lt;code>discrim_linear()&lt;/code>&lt;/a> and
&lt;a href="https://discrim.tidymodels.org/reference/details_discrim_quad_sparsediscrim.html" target="_blank" rel="noopener">&lt;code>discrim_quad()&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to thank everyone who has contributed to these packages since their last release:&lt;/p>
&lt;p>&lt;strong>hardhat&lt;/strong>:
&lt;a href="https://github.com/cregouby" target="_blank" rel="noopener">@cregouby&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/DiabbZegpi" target="_blank" rel="noopener">@DiabbZegpi&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jwijffels" target="_blank" rel="noopener">@jwijffels&lt;/a>,
&lt;a href="https://github.com/LasWin" target="_blank" rel="noopener">@LasWin&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;p>&lt;strong>workflows&lt;/strong>:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dgrtwo" target="_blank" rel="noopener">@dgrtwo&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/LiamBlake" target="_blank" rel="noopener">@LiamBlake&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;p>&lt;strong>parsnip&lt;/strong>:
&lt;a href="https://github.com/cgoo4" target="_blank" rel="noopener">@cgoo4&lt;/a>,
&lt;a href="https://github.com/dgrtwo" target="_blank" rel="noopener">@dgrtwo&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/graysonwhite" target="_blank" rel="noopener">@graysonwhite&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/mdancho84" target="_blank" rel="noopener">@mdancho84&lt;/a>,
&lt;a href="https://github.com/RaymondBalise" target="_blank" rel="noopener">@RaymondBalise&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>.&lt;/p>
&lt;p>&lt;strong>tune&lt;/strong>:
&lt;a href="https://github.com/amazongodman" target="_blank" rel="noopener">@amazongodman&lt;/a>,
&lt;a href="https://github.com/brshallo" target="_blank" rel="noopener">@brshallo&lt;/a>,
&lt;a href="https://github.com/dpanyard" target="_blank" rel="noopener">@dpanyard&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/klin333" target="_blank" rel="noopener">@klin333&lt;/a>,
&lt;a href="https://github.com/mbac" target="_blank" rel="noopener">@mbac&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>,
&lt;a href="https://github.com/tjcason" target="_blank" rel="noopener">@tjcason&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/yogat3ch" target="_blank" rel="noopener">@yogat3ch&lt;/a>.&lt;/p>
&lt;p>&lt;strong>finetune&lt;/strong>:
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/hnagaty" target="_blank" rel="noopener">@hnagaty&lt;/a>,
&lt;a href="https://github.com/lukasal" target="_blank" rel="noopener">@lukasal&lt;/a>,
&lt;a href="https://github.com/Mayalaroz" target="_blank" rel="noopener">@Mayalaroz&lt;/a>,
&lt;a href="https://github.com/mrkaye97" target="_blank" rel="noopener">@mrkaye97&lt;/a>,
&lt;a href="https://github.com/shinyquant" target="_blank" rel="noopener">@shinyquant&lt;/a>,
&lt;a href="https://github.com/skeydan" target="_blank" rel="noopener">@skeydan&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;p>&lt;strong>workflowsets&lt;/strong>:
&lt;a href="https://github.com/amazongodman" target="_blank" rel="noopener">@amazongodman&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/oskasf" target="_blank" rel="noopener">@oskasf&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/yogat3ch" target="_blank" rel="noopener">@yogat3ch&lt;/a>.&lt;/p>
&lt;p>&lt;strong>discrim&lt;/strong>:
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p></description></item><item><title>Choose your own tidymodels adventure</title><link>https://www.tidyverse.org/blog/2021/05/choose-tidymodels-adventure/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/05/choose-tidymodels-adventure/</guid><description>&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles. You can install the tidymodels suite of packages from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tidymodels&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The packages in tidymodels are designed to work together in a unified ecosystem, but they are flexible and modular; you can use tidymodels packages for certain parts of a modeling analysis without committing to the entire ecosystem, when preferred. We purposefully write code in these small, modular packages both to make them easier to maintain and easier to use in production systems. This does mean that it can be challenging for a newcomer to know where their specific problem fits in this ecosystem.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ────────────────────────────────── tidymodels 0.1.3 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ broom 0.7.6 ✓ recipes 0.1.16&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dials 0.0.9 ✓ rsample 0.1.0 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dplyr 1.0.6 ✓ tibble 3.1.2 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ ggplot2 3.3.3 ✓ tidyr 1.1.3 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ infer 0.5.4 ✓ tune 0.1.5 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ modeldata 0.1.0 ✓ workflows 0.2.2 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ parsnip 0.1.5 ✓ workflowsets 0.0.2 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ purrr 0.3.4 ✓ yardstick 0.0.8&lt;/span>
&lt;span class="c1">#&amp;gt; ── Conflicts ───────────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class="c1">#&amp;gt; x purrr::discard() masks scales::discard()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::filter() masks stats::filter()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::lag() masks stats::lag()&lt;/span>
&lt;span class="c1">#&amp;gt; x recipes::step() masks stats::step()&lt;/span>
&lt;span class="c1">#&amp;gt; • Use tidymodels_prefer() to resolve common conflicts.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In general, we recommend a couple of resources for folks learning about tidymodels: the
&lt;a href="https://www.tidymodels.org/start/" target="_blank" rel="noopener">&lt;strong>Get Started&lt;/strong> section of tidymodels.org&lt;/a> to get going quickly and our book
&lt;a href="https://www.tmwr.org/" target="_blank" rel="noopener">&lt;em>Tidy Modeling with R&lt;/em>&lt;/a> to dig deeper. This post takes on a more specific task for a newcomer to tidymodels. We consider several categories of real-world modeling analyses and recommend ways to
&lt;a href="https://en.wikipedia.org/wiki/Choose_Your_Own_Adventure" target="_blank" rel="noopener">choose your own adventure&lt;/a> in the tidymodels ecosystem. In tidymodels, you can train:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>a single model,&lt;/p>
&lt;/li>
&lt;li>
&lt;p>a workflow, or&lt;/p>
&lt;/li>
&lt;li>
&lt;p>a set of workflows.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Each of these choices is best in difference circumstances, and we&amp;rsquo;ll consider each in the following sections.&lt;/p>
&lt;h2 id="starting-with-the-basics-a-parsnip-model">Starting with the basics: a &lt;strong>parsnip&lt;/strong> model
&lt;a href="#starting-with-the-basics-a-parsnip-model">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A fully featured ecosystem for modeling and machine learning requires interfaces to, well, models, and the tidymodels package that provides those functions and interfaces is
&lt;a href="https://parsnip.tidymodels.org/" target="_blank" rel="noopener">parsnip&lt;/a>. If your modeling adventure involves smaller data and straightforward data preprocessing (like that provided by
&lt;a href="https://www.tmwr.org/base-r.html#formula" target="_blank" rel="noopener">R&amp;rsquo;s model formula&lt;/a>), you may be well-served by focusing on parsnip. The parsnip package is a good choice for fitting a straightforward model to a smaller data set like this one:&lt;/p>
&lt;p>&lt;img src="https://juliasilge.com/blog/student-debt/index_files/figure-html/unnamed-chunk-3-1.png" title="Plot showing student loan debt by race across time" alt="Plot showing student loan debt by race across time" width="70%" />&lt;/p>
&lt;p>To learn more about how to fit and evaluate parsnip models, check out
&lt;a href="https://www.tidymodels.org/start/models/" target="_blank" rel="noopener">this article at tidymodel.org&amp;rsquo;s &lt;strong>Get Started&lt;/strong> section&lt;/a> and
&lt;a href="https://juliasilge.com/blog/student-debt/" target="_blank" rel="noopener">this blog post (complete with screencast) by me&lt;/a>. You can use
&lt;a href="https://www.tidyverse.org/blog/2021/03/tidymodels-2021-q1/#choose-parsnip-models-with-an-rstudio-addin" target="_blank" rel="noopener">parsnip&amp;rsquo;s RStudio addin&lt;/a> to generate code for one or more models!&lt;/p>
&lt;p>We don&amp;rsquo;t believe most people using tidymodels fall into this first category, but we think that the tools we&amp;rsquo;ve built for these kinds of straightforward analyses are well-designed and will set you up for statistical and practical success in the short and long term. Instead of fitting a model with, say, &lt;code>lm()&lt;/code>, in parsnip we specify a model with code such as:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;lm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Linear Regression Model Specification (regression)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: lm&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We then &lt;code>fit()&lt;/code> that model to data. More code is required to fit a simple model than you may be used to, but learning and using parsnip opens up the door for all the other things you can do with the same pipeline.&lt;/p>
&lt;h2 id="holistic-model-workflows">Holistic model &lt;strong>workflows&lt;/strong>
&lt;a href="#holistic-model-workflows">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When you are setting off on a modeling adventure, it might be worth asking what we even mean by the word &amp;ldquo;model&amp;rdquo;; it is a word that gets overloaded really quickly! In the tidymodels ecosystem, we carefully incorporate &lt;em>both&lt;/em> feature engineering (also called data preprocessing) that must be learned from training data &lt;em>and&lt;/em> a model fit into a modeling workflow that is estimated together. For example, if you trained a least squares regression model with features learned from principal component analysis, the PCA preprocessing step should be considered part of the model workflow:&lt;/p>
&lt;p>&lt;img src="https://www.tmwr.org/premade/proper-workflow.svg" title="Diagram showing that PCA preprocessing is part of the modeling process, together with least squares estimation" alt="Diagram showing that PCA preprocessing is part of the modeling process, together with least squares estimation" />&lt;/p>
&lt;p>In the tidymodels ecosystem, we use the
&lt;a href="https://workflows.tidymodels.org/" target="_blank" rel="noopener">workflows&lt;/a> package to bundle together model components and promote more fluent modeling processes. You can fit, tune, and resample workflows, and using workflows has benefits from making it easier to keep track of model components in your code to avoiding data leakage in feature engineering.&lt;/p>
&lt;p>We generally expect that most people using tidymodels fall into this middle category, and most of our ecosystem is designed to optimize for these users&amp;rsquo; experience. Choose a &lt;code>workflow()&lt;/code> if you want to try several model and/or feature engineering options with your data, if you prefer a simpler and more unified interface for fitting and tuning, or if you like composable and pipeable code for analyses. The
&lt;a href="https://usemodels.tidymodels.org/" target="_blank" rel="noopener">usemodels&lt;/a> package can even automate the creation of a workflow, using &lt;em>your&lt;/em> data to determine a good recipe along with the model of your choice.&lt;/p>
&lt;p>To learn more about using workflows, see them
&lt;a href="https://www.tidymodels.org/start/case-study/" target="_blank" rel="noopener">used in action in this &lt;strong>Get Started&lt;/strong> article&lt;/a>. Also, I have quite a number of blog posts and screencasts that walk through how to use workflows, such as
&lt;a href="https://juliasilge.com/blog/palmer-penguins/" target="_blank" rel="noopener">this one&lt;/a> that compares two approaches for the same modeling problem and
&lt;a href="https://juliasilge.com/blog/water-sources/" target="_blank" rel="noopener">this one&lt;/a> that trains and evaluates a single workflow (one preprocessor + model).&lt;/p>
&lt;h2 id="screening-many-models-workflowsets">Screening many models: &lt;strong>workflowsets&lt;/strong>
&lt;a href="#screening-many-models-workflowsets">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Sometimes a modeling practitioner is in a situation where they don&amp;rsquo;t want to try out just a few approaches on a given data set, but &lt;em>many&lt;/em>: not just two or three or four, but A LOT. This is most common when a practitioner starts a new modeling project with a data set that is not well understood and there is little (or maybe no) &lt;em>a priori&lt;/em> knowledge about what kind of approach will work well.&lt;/p>
&lt;p>For this kind of tidymodels adventure, we encourage users to try the
&lt;a href="https://workflowsets.tidymodels.org/" target="_blank" rel="noopener">workflowsets&lt;/a> package, which supports the creation, fitting, and comparison of sets of multiple workflows. Combinations of preprocessors and models can be created, and the resulting workflow set can be tuned or resampled, then evaluated (perhaps using Bayesian analysis):&lt;/p>
&lt;p>&lt;img src="https://www.tidyverse.org/blog/2021/03/workflowsets-0-0-1/figure/plot-bayes-1.svg" title="Plot showing RMSE by workflow rank for many models" alt="Plot showing RMSE by workflow rank for many models" />&lt;/p>
&lt;p>We don&amp;rsquo;t expect that most people using tidymodels will use workflowsets, as it is a specialized tool only useful in some contexts. If you are familiar with AutoML tools, you may notice some similarities between them and what this package does; it has many of the same pros and cons. To learn more about workflowsets (including why our group was hesitant to support and build this functionality!) watch
&lt;a href="https://youtu.be/2OfTEakSFXQ" target="_blank" rel="noopener">Max&amp;rsquo;s recent talk for the LA RUG&lt;/a>, and also
&lt;a href="https://www.tmwr.org/workflow-sets.html" target="_blank" rel="noopener">read this chapter of our book&lt;/a>.&lt;/p>
&lt;h2 id="your-own-tidymodels-adventure">Your own tidymodels adventure
&lt;a href="#your-own-tidymodels-adventure">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We believe these three general categories cover most of the modeling adventures you as a practitioner might want to embark on, and our guidance here outlines the best choices given the current status of the tidymodels ecosystem here in the middle of 2021. The ecosystem is growing ever more mature, and packages like parsnip and workflows are more stable, while workflowsets is quite new and may be considered more experimental for now.&lt;/p>
&lt;p>For questions and discussions about tidymodels packages, modeling, and machine learning, join us
&lt;a href="https://rstd.io/tidymodels-community" target="_blank" rel="noopener">in discussion on RStudio Community&lt;/a>.&lt;/p></description></item><item><title>workflowsets 0.0.1</title><link>https://www.tidyverse.org/blog/2021/03/workflowsets-0-0-1/</link><pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/03/workflowsets-0-0-1/</guid><description>&lt;p>We&amp;rsquo;re well pleased to announce the first release of
&lt;a href="https://workflowsets.tidymodels.org" target="_blank" rel="noopener">workflowsets&lt;/a>. workflowsets creates a collection of model/preprocessor combinations at once. This enables users to quickly screen a wide variety of methodologies for their data sets.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;workflowsets&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this blog post, we&amp;rsquo;ll demonstrate the utility of the package using a dimensionality reduction example. A new version of the tidyposterior package is paired with workflowsets so we&amp;rsquo;ll show how they can work together.&lt;/p>
&lt;p>The examples below will use a few of the tidymodels packages. If these are unfamiliar, take a look at
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">&lt;code>tidymodels.org&lt;/code>&lt;/a> or the &lt;em>Tidy Models with R&lt;/em>
&lt;a href="https://www.tmwr.org" target="_blank" rel="noopener">website&lt;/a>. The latest version of &lt;em>Tidy Models with R&lt;/em> now contains an additional chapter about
&lt;a href="https://www.tmwr.org/workflow-sets.html" target="_blank" rel="noopener">workflow sets&lt;/a>.&lt;/p>
&lt;h2 id="a-dimensionality-reduction-example">A Dimensionality Reduction Example
&lt;a href="#a-dimensionality-reduction-example">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When a data set is very wide (i.e., many columns), a dimensionality reduction procedure may be able to represent the data with a smaller number of new, artificial variables. The most common method for dimensionality reduction is principal component analysis (PCA) but there are many others.
&lt;a href="https://bookdown.org/max/FES/numeric-many-to-many.html#linear-projection-methods" target="_blank" rel="noopener">Kuhn and Johnson (2018)&lt;/a> give an overview of several other techniques that will be used below.&lt;/p>
&lt;p>There are at least two practical uses of dimensionality reduction:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>When assessing the quality of the data, it can be difficult to visualize high-dimensional data. Reducing the number of columns to a more manageable set helps the user explore and understand the data, and perhaps identify problematic data points.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Some models are less effective with a large number of predictors (relative to the number of data points). This is especially true when the predictors have a high degree of correlation with one another (e.g., multicolinearity).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>As an example, the
&lt;a href="https://modeldata.tidymodels.org/reference/meats.html" target="_blank" rel="noopener">Tecator data&lt;/a> set uses spectrography to predict the percentage of fat, protein, and water in meat samples. They measured 100 channels of the spectum for 215 samples. The &lt;em>average&lt;/em> correlation between predictors is 98.6%. These data might greatly benefit from dimension reduction. We&amp;rsquo;ll evaluate a few different approaches to find a smaller representation of the predictors when the &lt;em>percentage of water&lt;/em> is being predicted.&lt;/p>
&lt;p>We&amp;rsquo;ll load the packages and data, then define a resampling scheme that is used to evaluate the models.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">workflowsets&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidyposterior&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meats&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">package&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;modeldata&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Keep only the water outcome&lt;/span>
&lt;span class="n">meats&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meats&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">fat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">protein&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_split&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">initial_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meats&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_train&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">training&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_test&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">testing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vfold_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">repeats&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Workflow sets take a set of &lt;strong>preprocessors&lt;/strong> and &lt;strong>models&lt;/strong> and combinatorially combine them into a series of workflow objects. The package has some nice convenience functions to tune and/or evaluate each workflow.&lt;/p>
&lt;p>What is a &amp;ldquo;preprocessor&amp;rdquo;? That can be one of three things:&lt;/p>
&lt;ol>
&lt;li>A traditional R model formula.&lt;/li>
&lt;li>A recipe.&lt;/li>
&lt;li>A specification of column names (using
&lt;a href="https://workflows.tidymodels.org//reference/add_variables.html" target="_blank" rel="noopener">&lt;code>workflows::workflow_variables()&lt;/code>&lt;/a>).&lt;/li>
&lt;/ol>
&lt;p>As an example, we&amp;rsquo;ll create a set of recipes for dimension reduction for preprocessing the data along with a simple formula.&lt;/p>
&lt;p>The dimension reduction methods that we&amp;rsquo;ll try are a few different flavors of PCA, partial least squares (PLS), independent component analysis (ICA), and multi-dimensional scaling (MDS). With the exception of PLS, these are unsupervised procedures since they do not take into account the outcome data.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">water&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">meat_train&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_zv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_YeoJohnson&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">pca_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_pca&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">num_comp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">pca_kernel_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_kpca_rbf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">num_comp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">sigma&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">pls_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_pls&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">outcome&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">vars&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">water&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">num_comp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">ica_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_ica&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">num_comp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">mds_recipe&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">base_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_isomap&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="nf">all_predictors&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">num_terms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">neighbors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">tune&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that several methods have tuning parameters that need to be optimized. For our application, we&amp;rsquo;ll feed the new features into a model and use the root mean squared error (RMSE) as the metric to determine good values of these parameters.&lt;/p>
&lt;p>The input into a workflow set is a named list of preprocessors and parsnip model specifications. We&amp;rsquo;ll could the
&lt;a href="https://parsnip.tidymodels.org/reference/parsnip_addin.html" target="_blank" rel="noopener">parsnip RStudio add-in&lt;/a> to write out the model code. Linear regression and multivariate adaptive regression spline (MARS) models will be combined with the different preprocessors.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lm_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;lm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">mars_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">mars&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;earth&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;regression&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, to make the workflow set, named lists are created and given as inputs into
&lt;a href="https://workflowsets.tidymodels.org/reference/workflow_set.html" target="_blank" rel="noopener">&lt;code>workflow_set()&lt;/code>&lt;/a>. Note that we added the original data as-is using a &amp;ldquo;plain&amp;rdquo; R formula.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">preprocessors&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">plain&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">water&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">.,&lt;/span>
&lt;span class="n">pca&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pca_recipe&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">pca_rbf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pca_kernel_recipe&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">pls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pls_recipe&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">ica&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ica_recipe&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">mds&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mds_recipe&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">models&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lm_spec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mars&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mars_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">workflow_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">preprocessors&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">models&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cross&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A workflow set/tibble: 12 x 4
## wflow_id info option result
## &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt;
## 1 plain_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 2 plain_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 3 pca_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 4 pca_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 5 pca_rbf_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 6 pca_rbf_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 7 pls_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 8 pls_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 9 ica_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 10 ica_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 11 mds_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 12 mds_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
&lt;/code>&lt;/pre>&lt;p>The 12 rows are the different combinations of preprocessors and models. As will be shown below, we can evaluate them via resampling using the
&lt;a href="https://workflowsets.tidymodels.org/reference/workflow_map.html" target="_blank" rel="noopener">&lt;code>workflow_map()&lt;/code>&lt;/a> function.&lt;/p>
&lt;p>However, a few of these recipes have tuning parameters that are somewhat difficult to optimize. We might want to have specific tuning parameter ranges for the kernel PCA and MDS recipes. We can accomplish that in the usual way (via &lt;code>parameters()&lt;/code> and &lt;code>update()&lt;/code>) then update the workflow set with these options so that they are used later.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mds_param&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">mds_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">parameters&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># Look at a larger neighbor size than the default range. &lt;/span>
&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">neighbors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">neighbors&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">70&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="n">rbf_param&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">pca_kernel_recipe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">parameters&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># A smaller range than the default.&lt;/span>
&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sigma&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rbf_sigma&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">-5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The
&lt;a href="https://workflowsets.tidymodels.org/reference/option_add.html" target="_blank" rel="noopener">&lt;code>option_add()&lt;/code>&lt;/a> function can add these to the &lt;code>option&lt;/code> column in the workflow set for the appropriate workflows:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">meat_wflow_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">option_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rbf_param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;pca_rbf_lm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">option_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rbf_param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;pca_rbf_mars&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">option_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mds_param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;mds_lm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">option_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mds_param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;mds_mars&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A workflow set/tibble: 12 x 4
## wflow_id info option result
## &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt;
## 1 plain_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 2 plain_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 3 pca_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 4 pca_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 5 pca_rbf_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[1]&amp;gt; &amp;lt;list [0]&amp;gt;
## 6 pca_rbf_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[1]&amp;gt; &amp;lt;list [0]&amp;gt;
## 7 pls_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 8 pls_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 9 ica_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 10 ica_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[0]&amp;gt; &amp;lt;list [0]&amp;gt;
## 11 mds_lm &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[1]&amp;gt; &amp;lt;list [0]&amp;gt;
## 12 mds_mars &amp;lt;tibble[,4] [1 × 4]&amp;gt; &amp;lt;opts[1]&amp;gt; &amp;lt;list [0]&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Note that some of the entries in the &lt;code>option&lt;/code> column have changed to &lt;code>&amp;lt;opts[1]&amp;gt;&lt;/code>.&lt;/p>
&lt;p>We can finally tune these models using &lt;code>workflow_map()&lt;/code>. By default, it uses a basic grid search but any evaluation function from the &lt;code>tune&lt;/code> and &lt;code>finetune&lt;/code> packages can be used. We&amp;rsquo;ll also pass more global options here for the resamples, grid points, and performance metric. The &lt;code>seed&lt;/code> option resets the random number seed for each pass through the workflow set so that the results are reproducible.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">meat_wflow_set&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">workflow_map&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="c1"># Options to `tune_grid()`&lt;/span>
&lt;span class="n">resamples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">meat_folds&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">grid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">metric_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rmse&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="c1"># Options to `workflow_map()`&lt;/span>
&lt;span class="n">seed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">verbose&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>i No tuning parameters. `fit_resamples()` will be attempted
i 1 of 12 resampling: plain_lm
✓ 1 of 12 resampling: plain_lm (2.3s)
i No tuning parameters. `fit_resamples()` will be attempted
i 2 of 12 resampling: plain_mars
✓ 2 of 12 resampling: plain_mars (2.6s)
i 3 of 12 tuning: pca_lm
✓ 3 of 12 tuning: pca_lm (8.1s)
i 4 of 12 tuning: pca_mars
✓ 4 of 12 tuning: pca_mars (8.4s)
i 5 of 12 tuning: pca_rbf_lm
✓ 5 of 12 tuning: pca_rbf_lm (36.9s)
i 6 of 12 tuning: pca_rbf_mars
✓ 6 of 12 tuning: pca_rbf_mars (34.1s)
i 7 of 12 tuning: pls_lm
✓ 7 of 12 tuning: pls_lm (8.6s)
i 8 of 12 tuning: pls_mars
✓ 8 of 12 tuning: pls_mars (8.6s)
i 9 of 12 tuning: ica_lm
✓ 9 of 12 tuning: ica_lm (8.4s)
i 10 of 12 tuning: ica_mars
✓ 10 of 12 tuning: ica_mars (8.4s)
i 11 of 12 tuning: mds_lm
✓ 11 of 12 tuning: mds_lm (39.3s)
i 12 of 12 tuning: mds_mars
✓ 12 of 12 tuning: mds_mars (40s)
&lt;/code>&lt;/pre>&lt;p>The &lt;code>result&lt;/code> column contains the results of &lt;code>tune_grid()&lt;/code> (or &lt;code>fit_resamples()&lt;/code> for the &amp;ldquo;plain&amp;rdquo; models).&lt;/p>
&lt;p>There are a few convenience functions for ranking the results. To get the rankings of the models (and their tuning parameter sub-models) as a data frame:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">rank_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_wflow_set&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="c1"># To fit on the page:&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">-.&lt;/span>&lt;span class="n">metric&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">std_err&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">relocate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rank&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 102 x 6
## rank mean wflow_id .config preprocessor model
## &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
## 1 1 2.48 plain_mars Preprocessor1_Model1 formula mars
## 2 2 2.68 pls_mars Preprocessor3_Model1 recipe mars
## 3 3 3.00 plain_lm Preprocessor1_Model1 formula linear_reg
## 4 4 3.07 ica_mars Preprocessor3_Model1 recipe mars
## 5 5 3.19 pca_mars Preprocessor3_Model1 recipe mars
## 6 6 3.31 pls_lm Preprocessor3_Model1 recipe linear_reg
## 7 7 3.49 ica_lm Preprocessor3_Model1 recipe linear_reg
## 8 8 3.49 pca_lm Preprocessor3_Model1 recipe linear_reg
## 9 9 3.72 pls_mars Preprocessor1_Model1 recipe mars
## 10 10 3.89 pls_lm Preprocessor1_Model1 recipe linear_reg
## # … with 92 more rows
&lt;/code>&lt;/pre>&lt;p>or as a plot:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_wflow_set&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/plot-rank-1.svg" title="plot of chunk plot-rank" alt="plot of chunk plot-rank" width="100%" />&lt;/p>
&lt;p>This shows the results for all tuning parameter combinations for each model. To get the best results &lt;em>per model&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">meat_wflow_set&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">select_best&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/plot-best-rank-1.svg" title="plot of chunk plot-best-rank" alt="plot of chunk plot-best-rank" width="100%" />&lt;/p>
&lt;p>It seems like the MARS model is doing slightly better than ordinary linear regression. The original predictors do well in terms of the mean RMSE. However, the correlation between predictors can cause instability in the results and this is reflected in the larger error bars for those models; reducing the dimensions may still be a good idea.&lt;/p>
&lt;p>Once you decide on a model to keep, you can pull the workflow (or the tuning results) using
&lt;a href="https://workflowsets.tidymodels.org/reference/pull_workflow_set_result.html" target="_blank" rel="noopener">&lt;code>pull_workflow()&lt;/code>&lt;/a> (or &lt;code>pull_workflow_set_result()&lt;/code>). This can be
&lt;a href="https://www.tmwr.org/grid-search.html#finalizing-the-model" target="_blank" rel="noopener">finalized and fit on the training set as one normally would&lt;/a>.&lt;/p>
&lt;h2 id="contrasting-models-using-bayesian-analysis">Contrasting Models Using Bayesian Analysis
&lt;a href="#contrasting-models-using-bayesian-analysis">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Is there really a difference between the &lt;code>plain_mars&lt;/code> and &lt;code>pls_mars&lt;/code> models? The
&lt;a href="https://www.tmwr.org/compare.html" target="_blank" rel="noopener">tidyposterior package can help answer this question&lt;/a>. We can fit a meta-model for the RMSE results for the best configuration within each model using the &lt;code>perf_mod()&lt;/code> function:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">rmse_mod&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">perf_mod&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">meat_wflow_set&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1"># Model different variability per workflow:&lt;/span>
&lt;span class="n">hetero_var&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1"># Options to `rstanarm::stan_glm()`&lt;/span>
&lt;span class="n">seed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">iter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">refresh&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>autoplot()&lt;/code> method for these results displays a &lt;strong>model-based&lt;/strong> version of the previous &lt;code>autoplot()&lt;/code> results for the workflow set:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rmse_mod&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/plot-bayes-1.svg" title="plot of chunk plot-bayes" alt="plot of chunk plot-bayes" width="100%" />&lt;/p>
&lt;p>The tidyposterior package uses the concept of &lt;em>practical significance&lt;/em>, incorporating an effect size that is important to the user. We usually set this value prior to the analysis (based on domain knowledge or subjective concerns), and it reflects the size of an RMSE change between models that is a realistic important difference. We can compute the probability that each model is &lt;em>practically significant&lt;/em> when compared to the numerically best model. Recalling that the outcome is in units of percent water, let&amp;rsquo;s use a 0.5% difference as an effect size:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rmse_mod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;ROPE&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/plot-rope-1.svg" title="plot of chunk plot-rope" alt="plot of chunk plot-rope" width="100%" />&lt;/p>
&lt;p>The top two models are pretty close to practically equivalent, while the others are less likely to be the same.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to the contributors to workflowsets:&lt;/p>
&lt;p>
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/hnagaty" target="_blank" rel="noopener">@hnagaty&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p>
&lt;p>as well as the latest release of tidyposterior:&lt;/p>
&lt;p>
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>,
&lt;a href="https://github.com/robyjos" target="_blank" rel="noopener">@robyjos&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>&lt;/p></description></item></channel></rss>