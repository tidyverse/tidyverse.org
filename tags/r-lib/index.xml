<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>r-lib | Tidyverse</title><link>https://www.tidyverse.org/tags/r-lib/</link><atom:link href="https://www.tidyverse.org/tags/r-lib/index.xml" rel="self" type="application/rss+xml"/><description>r-lib</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 18 Jan 2024 00:00:00 +0000</lastBuildDate><item><title>withr 3.0.0</title><link>https://www.tidyverse.org/blog/2024/01/withr-3-0-0/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/01/withr-3-0-0/</guid><description>&lt;p>It&amp;rsquo;s not without jubilant bearing that we announce the release of the 3.0.0 version of
&lt;a href="https://withr.r-lib.org/" target="_blank" rel="noopener">withr&lt;/a>, the tidyverse solution for automatic cleanup of resources! In this release, the internals of withr were rewritten to improve the performance and increase the compatibility with base R&amp;rsquo;s
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a> mechanism.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"withr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In this blog post we&amp;rsquo;ll go over the changes that made this rewrite possible, but first we&amp;rsquo;ll review the cleanup strategies made possible by withr.&lt;/p>
&lt;p>You can see a full list of changes in the
&lt;a href="https://withr.r-lib.org/news/index.html#withr-300" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;/div>
&lt;h2 id="cleaning-up-resources-with-base-r-and-with-withr">Cleaning up resources with base R and with withr
&lt;a href="#cleaning-up-resources-with-base-r-and-with-withr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Traditionally, resource cleanup in R is done with
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>base::on.exit()&lt;/code>&lt;/a>. Cleaning up in the on-exit hook ensures that the cleanup happens both in the normal case, when the code has finished running without error, and in the error case, when something went wrong and execution is interrupted.&lt;/p>
&lt;p>
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a> is meant to be used inside functions but it also works within
&lt;a href="https://rdrr.io/r/base/eval.html" target="_blank" rel="noopener">&lt;code>local()&lt;/code>&lt;/a>, which we&amp;rsquo;ll use here for our examples:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/eval.html'>local&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/on.exit.html'>on.exit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/message.html'>message&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Cleaning time!"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 3&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; Cleaning time!&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/eval.html'>local&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/on.exit.html'>on.exit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/message.html'>message&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Cleaning time!"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/stop.html'>stop&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"uh oh"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'>:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> uh oh&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; Cleaning time!&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a> is guaranteed to run no matter what and this property makes it invaluable for resource cleaning. No more accidental littering!&lt;/p>
&lt;p>However the process of cleaning up this way can be a bit verbose and feel too manual. Here is how you&amp;rsquo;d create and clean up a temporary file for instance:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/eval.html'>local&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>my_file&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/tempfile.html'>tempfile&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/files.html'>file.create&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>my_file&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/on.exit.html'>on.exit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/files.html'>file.remove&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>my_file&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/writeLines.html'>writeLines&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>&lt;span class='o'>)&lt;/span>, con &lt;span class='o'>=&lt;/span> &lt;span class='nv'>my_file&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Wouldn&amp;rsquo;t it be great if we could wrap this code up in a function? That&amp;rsquo;s the goal of withr&amp;rsquo;s &lt;code>local_&lt;/code>-prefixed functions. They combine both the creation or modification of a resource and its (eventual) restoration to the original state into a single function:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/eval.html'>local&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>my_file&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>withr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://withr.r-lib.org/reference/with_tempfile.html'>local_tempfile&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/writeLines.html'>writeLines&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>&lt;span class='o'>)&lt;/span>, con &lt;span class='o'>=&lt;/span> &lt;span class='nv'>my_file&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In this case we have created a resource (a file), but the same principle applies to modifying resources such as global options:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/eval.html'>local&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='c'># Let's temporarily print with a single decimal place&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>withr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://withr.r-lib.org/reference/with_options.html'>local_options&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>digits &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>/&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 0.3&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># The original option value has been restored&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/options.html'>getOption&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"digits"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 7&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>/&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 0.3333333&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And you can equivalently use the &lt;code>with_&lt;/code>-prefixed variants (from which the package takes its name!), this way you don&amp;rsquo;t need to wrap in
&lt;a href="https://rdrr.io/r/base/eval.html" target="_blank" rel="noopener">&lt;code>local()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>withr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://withr.r-lib.org/reference/with_options.html'>with_options&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>digits &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>/&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 0.3&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The &lt;code>with_&lt;/code> functions are useful for creating very small scopes for given resources, inside or outside a function.&lt;/p>
&lt;h2 id="the-withr-300-rewrite">The withr 3.0.0 rewrite
&lt;a href="#the-withr-300-rewrite">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Traditionally, withr implemented its own exit event system on top of
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a>. We needed an extra layer because of a couple of missing features:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>When multiple resources are managed by a piece of code, the order in which these resources are restored or cleaned up sometimes matter. The most consistent order for cleanup is last-in first-out (LIFO). In other words the oldest resource, on which younger resources might depend, is cleaned up last. But historically R only supported first-in first-out (FIFO) order.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The other missing piece was being able to inspect the contents of the exit hook. The
&lt;a href="https://rdrr.io/r/base/sys.parent.html" target="_blank" rel="noopener">&lt;code>sys.on.exit()&lt;/code>&lt;/a> R helper was created for this purpose but was affected by a bug that prevented it from working inside functions.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>We contributed two changes to R 3.5.0 that filled these missing pieces, fixing the
&lt;a href="https://rdrr.io/r/base/sys.parent.html" target="_blank" rel="noopener">&lt;code>sys.on.exit()&lt;/code>&lt;/a> bug and adding an &lt;code>after&lt;/code> argument to
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a> to allow last-in first-out ordering.&lt;/p>
&lt;p>Until now, we haven&amp;rsquo;t been able to leverage these contributions because of our policy of
&lt;a href="https://www.tidyverse.org/blog/2019/04/r-version-support" target="_blank" rel="noopener">supporting the current and previous four versions of R&lt;/a>. Now that enough time has passed, it was time for a rewrite! Our version of
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>base::on.exit()&lt;/code>&lt;/a> is
&lt;a href="https://withr.r-lib.org/reference/defer.html" target="_blank" rel="noopener">&lt;code>withr::defer()&lt;/code>&lt;/a>. Along with better default behaviour,
&lt;a href="https://withr.r-lib.org/reference/defer.html" target="_blank" rel="noopener">&lt;code>withr::defer()&lt;/code>&lt;/a> allows the clean up of resources non-locally (ironically an essential feature for implementing &lt;code>local_&lt;/code> functions). Given the changes in R 3.5.0,
&lt;a href="https://withr.r-lib.org/reference/defer.html" target="_blank" rel="noopener">&lt;code>withr::defer()&lt;/code>&lt;/a> can now be implemented as a simple wrapper around
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>One benefit of the rewrite is that mixing withr tools and
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a> in the same function now correctly interleaves cleanup:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/eval.html'>local&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/on.exit.html'>on.exit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span> &lt;span class='nf'>withr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://withr.r-lib.org/reference/defer.html'>defer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/on.exit.html'>on.exit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>, add &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>, after &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span> &lt;span class='nf'>withr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://withr.r-lib.org/reference/defer.html'>defer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; [1] 1&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>But the main benefit is increased performance. Here is how &lt;code>defer()&lt;/code> compared to
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a> in the previous version:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>base&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/on.exit.html'>on.exit&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>NULL&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>withr&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>defer&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>NULL&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># withr 2.5.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>bench&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://bench.r-lib.org/reference/mark.html'>mark&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>base&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>withr&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, check &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>8&lt;/span>&lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # A tibble: 2 × 8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; expression min median `itr/sec` mem_alloc `gc/sec` n_itr n_gc&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 base() 0 82ns 6954952. 0B 696. 9999 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 2 withr() 26.2µs 27.9µs 35172. 88.4KB 52.8 9985 15&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>withr 3.0.0 has now caught up to
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a> quite a bit:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># withr 3.0.0&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>bench&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://bench.r-lib.org/reference/mark.html'>mark&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>base&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>withr&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, check &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>8&lt;/span>&lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; # A tibble: 2 × 8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; expression min median `itr/sec` mem_alloc `gc/sec` n_itr n_gc&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 base() 0 82ns 7329829. 0B 0 10000 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 2 withr() 2.95µs 3.4µs 280858. 0B 225. 9992 8&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Of course
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a> is still much faster, in part because &lt;code>defer()&lt;/code> supports more features (more on that below), but mostly because &lt;code>on.exit&lt;/code> is a primitive function whereas &lt;code>defer()&lt;/code> is implemented as a normal R function. That said, we hope that we now have made &lt;code>defer()&lt;/code> (and the &lt;code>local_&lt;/code> and &lt;code>with_&lt;/code> functions that use it) sufficiently fast to be used even in performance-critical micro-tools.&lt;/p>
&lt;h2 id="improved-withr-features">Improved withr features
&lt;a href="#improved-withr-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Over the successive releases of withr we&amp;rsquo;ve improved the behaviour of cleanup expressions interactively, in scripts executed with
&lt;a href="https://rdrr.io/r/base/source.html" target="_blank" rel="noopener">&lt;code>source()&lt;/code>&lt;/a>, and in knitr.
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a> is a bit inconsistent when it is used outside of a function:&lt;/p>
&lt;ul>
&lt;li>Interactively, it doesn&amp;rsquo;t do anything.&lt;/li>
&lt;li>In
&lt;a href="https://rdrr.io/r/base/source.html" target="_blank" rel="noopener">&lt;code>source()&lt;/code>&lt;/a> and in knitr, it runs immediately instead of a the end of the script&lt;/li>
&lt;/ul>
&lt;p>
&lt;a href="https://withr.r-lib.org/reference/defer.html" target="_blank" rel="noopener">&lt;code>withr::defer()&lt;/code>&lt;/a> and the
&lt;a href="https://withr.r-lib.org/reference/with_.html" target="_blank" rel="noopener">&lt;code>withr::local_&lt;/code>&lt;/a> helpers try to be more helpful for these cases.&lt;/p>
&lt;p>Interactively, it saves the cleanup action in a special global hook and you get information about how to actually perform the cleanup:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>file&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>withr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://withr.r-lib.org/reference/with_tempfile.html'>local_tempfile&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Setting global deferred event(s).&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; i These will be run:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; * Automatically, when the R session ends.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; * On demand, if you call `withr::deferred_run()`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; i Use `withr::deferred_clear()` to clear them without executing.&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Clean up now&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>withr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://withr.r-lib.org/reference/defer.html'>deferred_run&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Ran 1/1 deferred expressions&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In knitr or
&lt;a href="https://rdrr.io/r/base/source.html" target="_blank" rel="noopener">&lt;code>source()&lt;/code>&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, the cleanup is performed at the end of the document or of the script. If you need chunk-level cleanup, use
&lt;a href="https://rdrr.io/r/base/eval.html" target="_blank" rel="noopener">&lt;code>local()&lt;/code>&lt;/a> as we&amp;rsquo;ve been doing in the examples of this blog post:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-md" data-lang="md">Cleaning up at the end of the document:
&lt;span class="s">```r
&lt;/span>&lt;span class="s">&lt;/span>&lt;span class="n">document_wide_file&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">withr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">local_tempfile&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="s">```&lt;/span>
Cleaning up at the end of the chunk:
&lt;span class="s">```r
&lt;/span>&lt;span class="s">&lt;/span>&lt;span class="nf">local&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="n">local_file&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">withr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">local_tempfile&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="s">```&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Starting from withr 3.0.0, you can also run &lt;code>deferred_run()&lt;/code> inside of a chunk:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-md" data-lang="md">&lt;span class="s">```r
&lt;/span>&lt;span class="s">&lt;/span>&lt;span class="n">withr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">deferred_run&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Ran 1/1 deferred expressions&lt;/span>
&lt;span class="s">```&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to the github contributors who helped us with this release!&lt;/p>
&lt;p>
&lt;a href="https://github.com/ashbythorpe" target="_blank" rel="noopener">@ashbythorpe&lt;/a>,
&lt;a href="https://github.com/bastistician" target="_blank" rel="noopener">@bastistician&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/fkohrt" target="_blank" rel="noopener">@fkohrt&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gdurif" target="_blank" rel="noopener">@gdurif&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">@HenrikBengtsson&lt;/a>,
&lt;a href="https://github.com/honghaoli42" target="_blank" rel="noopener">@honghaoli42&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jameslairdsmith" target="_blank" rel="noopener">@jameslairdsmith&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jonkeane" target="_blank" rel="noopener">@jonkeane&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/MLopez-Ibanez" target="_blank" rel="noopener">@MLopez-Ibanez&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/multimeric" target="_blank" rel="noopener">@multimeric&lt;/a>,
&lt;a href="https://github.com/orichters" target="_blank" rel="noopener">@orichters&lt;/a>,
&lt;a href="https://github.com/pfuehrlich-pik" target="_blank" rel="noopener">@pfuehrlich-pik&lt;/a>,
&lt;a href="https://github.com/solmos" target="_blank" rel="noopener">@solmos&lt;/a>,
&lt;a href="https://github.com/tillea" target="_blank" rel="noopener">@tillea&lt;/a>, and
&lt;a href="https://github.com/vanhry" target="_blank" rel="noopener">@vanhry&lt;/a>.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>
&lt;a href="https://rdrr.io/r/base/source.html" target="_blank" rel="noopener">&lt;code>source()&lt;/code>&lt;/a> is only supported by default when running in the global environment, which is usually the case. For the special case of sourcing in a local environment, you need to set &lt;code>options(withr.hook_source = TRUE)&lt;/code> first. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>It's about time</title><link>https://www.tidyverse.org/blog/2022/09/its-about-time/</link><pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/09/its-about-time/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>At rstudio::conf(2022), Davis Vaughan gave a lightning talk on
&lt;a href="https://clock.r-lib.org/" target="_blank" rel="noopener">clock&lt;/a>, an R package that aims to provide comprehensive and safe handling of date-times. clock goes beyond the date and date-time types that base R provides, implementing new types for year-month, year-quarter, ISO year-week, and many other date-like formats, all with up to nanosecond precision. clock is &lt;strong>not&lt;/strong> replacing
&lt;a href="https://lubridate.tidyverse.org/" target="_blank" rel="noopener">lubridate&lt;/a>. lubridate will never go away, and is not being deprecated or superseded. In the future, we expect to update lubridate to use clock as a backend (so clock becomes
&lt;a href="https://stringi.gagolewski.com/" target="_blank" rel="noopener">stringi&lt;/a> to lubridate&amp;rsquo;s
&lt;a href="https://stringr.tidyverse.org/" target="_blank" rel="noopener">stringr&lt;/a>).&lt;/p>
&lt;p>In Davis&amp;rsquo; talk, you&amp;rsquo;ll see how clock emphasizes &amp;ldquo;safety first&amp;rdquo; when manipulating date-times, and how its new date-time types can be used in your own work.&lt;/p>
&lt;script src="https://fast.wistia.com/embed/medias/pzuyostdz8.jsonp" async>&lt;/script>
&lt;script src="https://fast.wistia.com/assets/external/E-v1.js" async>&lt;/script>
&lt;div class="wistia_responsive_padding" style="padding:56.25% 0 0 0;position:relative;">
&lt;div class="wistia_responsive_wrapper" style="height:100%;left:0;position:absolute;top:0;width:100%;">
&lt;div class="wistia_embed wistia_async_pzuyostdz8 videoFoam=true" style="height:100%;position:relative;width:100%">
&lt;div class="wistia_swatch" style="height:100%;left:0;opacity:0;overflow:hidden;position:absolute;top:0;transition:opacity 200ms;width:100%;">
&lt;p>&lt;img src="https://fast.wistia.com/embed/medias/pzuyostdz8/swatch" style="filter:blur(5px);height:100%;object-fit:contain;width:100%;" alt="" aria-hidden="true" onload="this.parentNode.style.opacity=1;" />&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;details>
&lt;summary>
&lt;strong>Transcript&lt;/strong>
&lt;/summary>
&lt;p>I am here to talk about time, which is obviously everyone&amp;rsquo;s favorite subject. In particular, I&amp;rsquo;m actually here to talk about a package called clock.&lt;/p>
&lt;p>So, clock is a date time manipulation library kind of in the same way that lubridate is a date time manipulation library. It does things you might expect add dates, subtract dates, format and parse them. All kinds of other manipulation. If you get anything out of this talk, it&amp;rsquo;s really that clock is not here to replace lubridate in any way. The only idea would be that in the end clock might be a back end for lubridate in the same way that dtplyr or dbplyr are different types of back ends for dplyr. And I&amp;rsquo;m not even going to spend the rest of this talk talking about features that overlap with lubridate.&lt;/p>
&lt;p>Instead, I want to talk about things that are pretty unique to clock. One of those is safety. And one of those is calendars.&lt;/p>
&lt;p>Because I only have 5 minutes, I&amp;rsquo;m going to do that with one date, January 30th of this year. Safety is built into clock from the ground up to hopefully avoid issues like this, time zone issues, invalid date issues, things that are pretty common when you&amp;rsquo;re working with time series and just drive you up the wall.&lt;/p>
&lt;p>So let&amp;rsquo;s jump into safety. Here&amp;rsquo;s a timeline. This is January 30th, our date in question marked in blue on our timeline. It continues through to February. On the next line, you&amp;rsquo;ll see this gap between February and March because February only has 28 days, but January had 31, so it doesn&amp;rsquo;t necessarily map 1 to 1. If I were to ask you this seemingly innocuous question. Please add one month to this date. What would you get?&lt;/p>
&lt;p>Well, if we were to ask lubridate, it gives you a somewhat reasonable answer of NA. There is nothing that maps 1 to 1 from January 30th to something in February, maybe. And there&amp;rsquo;s nothing particularly wrong with this except for the fact that it&amp;rsquo;s not the most useful answer. Generally, you&amp;rsquo;ll be running this code and it happens silently. And then five steps downstream. All of a sudden, you discover there&amp;rsquo;s some NAs here. Like, I didn&amp;rsquo;t have those to begin with. Where did those come from? And you have to backtrack up through your calculations and figure out why they appeared.&lt;/p>
&lt;p>If you were to ask clock this question with add months, it actually gives you an error in this special case by default. It says, whoa, hold up. There&amp;rsquo;s something wrong here. Go look at location 1. If you had a vector, it might be location five, seven, whatever. And check out the invalid argument to learn more about this case. You go and you look at the documentation and you come out with the idea that maybe I could set this thing called invalid equals previous. That allows you to say, give me the previous valid date when I have this kind of problem. That&amp;rsquo;s the end of February. I think that&amp;rsquo;s a pretty reasonable result in this case. But you also might want to say, depending on your specific problem, invalid equals next to map forward to the beginning of March instead. If you actually do like that lubridate behavior, that&amp;rsquo;s fine. You can say invalid equals NA any time that occurs, you&amp;rsquo;ll get an NA instead. So that&amp;rsquo;s about safety.&lt;/p>
&lt;p>Let&amp;rsquo;s talk about calendars. Calendars are just the idea of a way to represent a unique point in time. With our date in question, we could use a calendar called year month day to represent this date using three components the year, the month, and the day of the month. But this isn&amp;rsquo;t the only way you could represent this date. You could also use the year and the day of the year, or you could use one of these many other calendar types that are built into clock.&lt;/p>
&lt;p>If your finance person, you might be particularly interested in year quarter day, which uses a true fiscal year to represent your date. These are really nice because they&amp;rsquo;re all convertible to each other. You can work with any particular calendar type and say you need to get the quarter out. You convert to year quarter day, you do manipulation over there, you convert back. It&amp;rsquo;s obviously convertible with the date in POSIXct as well, since those are the date time types that you&amp;rsquo;re most likely to start out with.&lt;/p>
&lt;p>The other really neat thing that I find really fun about these calendar types is that they have what&amp;rsquo;s known as variable precision. These are all day precision calendar types at this point, but we could narrow that down to month precision as needed. And you&amp;rsquo;ve got a built-in year month type in clock. Similarly, you could have a built-in year quarter type. You can actually go the other way, too. You can widen it out all the way to nanoseconds if you need it.&lt;/p>
&lt;p>The last thing I&amp;rsquo;ll say is that clock is completely compatible with some of the other packages you might be familiar with that I&amp;rsquo;ve created called slider and IVs. Slider is one for rolling averages, so you can use clock types as the index to say, give me a rolling average. looking back four or five quarters IVs is a relatively new package. You might not have heard of this one yet, but it deals with date ranges and you can use clock types as the components of those ranges.&lt;/p>
&lt;p>So to sum up, lubridate is not going anywhere. Don&amp;rsquo;t worry, but please try clock for enhanced safety in these powerful new types. Thank you.&lt;/p>
&lt;/details>
&lt;h2 id="try-clock">Try clock
&lt;a href="#try-clock">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To try clock out, you can install the released version from
&lt;a href="https://cran.r-project.org/" target="_blank" rel="noopener">CRAN&lt;/a> with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"clock"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Or, install the development version from its
&lt;a href="https://github.com/r-lib/clock" target="_blank" rel="noopener">GitHub repo&lt;/a> with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># install.packages("remotes")&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>remotes&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://remotes.r-lib.org/reference/install_github.html'>install_github&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"r-lib/clock"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="learn-more">Learn more
&lt;a href="#learn-more">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>You can learn more about clock by reading Davis&amp;rsquo; blog post announcing its first release,
&lt;a href="https://www.tidyverse.org/blog/2021/03/clock-0-1-0/" target="_blank" rel="noopener">Comprehensive date-time handling for R&lt;/a>. Also be sure to check out its vignettes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/clock.html" target="_blank" rel="noopener">Getting started&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/articles/motivations.html" target="_blank" rel="noopener">Motivations for clock&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/recipes.html" target="_blank" rel="noopener">Examples and recipes&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/faq.html" target="_blank" rel="noopener">Frequently asked questions&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>archive 1.1.2</title><link>https://www.tidyverse.org/blog/2021/11/archive-1-1-2/</link><pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/11/archive-1-1-2/</guid><description>&lt;p>
&lt;a href="https://archive.r-lib.org/" target="_blank" rel="noopener">archive&lt;/a> 1.1.2 is now on CRAN. archive lets you work with file archives, such as
&lt;a href="https://en.wikipedia.org/wiki/ZIP_%28file_format%29" target="_blank" rel="noopener">ZIP&lt;/a>,
&lt;a href="https://en.wikipedia.org/wiki/Tar_%28computing%29" target="_blank" rel="noopener">tar&lt;/a>,
&lt;a href="https://en.wikipedia.org/wiki/7-Zip" target="_blank" rel="noopener">7-Zip&lt;/a> and
&lt;a href="https://en.wikipedia.org/wiki/RAR_%28file_format%29" target="_blank" rel="noopener">RAR&lt;/a> and compression formats like
&lt;a href="https://en.wikipedia.org/wiki/Gzip" target="_blank" rel="noopener">gzip&lt;/a>,
&lt;a href="https://en.wikipedia.org/wiki/Bzip2" target="_blank" rel="noopener">bzip2&lt;/a>,
&lt;a href="https://en.wikipedia.org/wiki/XZ_Utils" target="_blank" rel="noopener">XZ&lt;/a> and
&lt;a href="https://en.wikipedia.org/wiki/Zstandard" target="_blank" rel="noopener">Zstandard&lt;/a>. It does this by building on top of the
&lt;a href="https://www.libarchive.org/" target="_blank" rel="noopener">libarchive&lt;/a> C library.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"archive"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will explain the main functions of archive, and show how you can use them to read from and write to archives.&lt;/p>
&lt;p>You can see a full list of changes in the
&lt;a href="https://archive.r-lib.org/news/index.html" target="_blank" rel="noopener">release notes&lt;/a>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://archive.r-lib.org/'>archive&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>my_dir&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/file_temp.html'>file_temp&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> |&amp;gt; &lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/create.html'>dir_create&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>knitr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nv'>&lt;a href='https://rdrr.io/pkg/knitr/man/opts_knit.html'>opts_knit&lt;/a>&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nf'>set&lt;/span>&lt;span class='o'>(&lt;/span>root.dir &lt;span class='o'>=&lt;/span> &lt;span class='nv'>my_dir&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="displaying-archive-contents">Displaying archive contents
&lt;a href="#displaying-archive-contents">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Use
&lt;a href="https://archive.r-lib.org/reference/archive.html" target="_blank" rel="noopener">&lt;code>archive()&lt;/code>&lt;/a> to return a tibble of the files contained in a given archive.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://archive.r-lib.org/reference/archive.html'>archive&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"nycflights13.zip"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; path size date &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> nycflights13/airlines.csv 386 2021-11-04 &lt;span style='color: #555555;'>15:14:15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> nycflights13/airports.csv &lt;span style='text-decoration: underline;'>71&lt;/span>209 2021-11-04 &lt;span style='color: #555555;'>15:14:15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> nycflights13/flights.csv &lt;span style='text-decoration: underline;'>90&lt;/span>886 2021-11-04 &lt;span style='color: #555555;'>15:14:16&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> nycflights13/planes.csv &lt;span style='text-decoration: underline;'>72&lt;/span>927 2021-11-04 &lt;span style='color: #555555;'>15:14:16&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> nycflights13/weather.csv &lt;span style='text-decoration: underline;'>86&lt;/span>753 2021-11-04 &lt;span style='color: #555555;'>15:14:16&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="reading-single-files-from-an-archive">Reading single files from an archive
&lt;a href="#reading-single-files-from-an-archive">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://archive.r-lib.org/reference/archive_read.html" target="_blank" rel="noopener">&lt;code>archive_read()&lt;/code>&lt;/a> is used to read a single file from an archive. This function returns an R connection, which can be passed to many R functions that take a connection object as input. All base R file system functions use connections, as well as some packages like readr.&lt;/p>
&lt;p>The &lt;code>file=&lt;/code> argument accepts numeric positions in the archive, or filenames as input.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>con1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://archive.r-lib.org/reference/archive_read.html'>archive_read&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"nycflights13.zip"&lt;/span>, file &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/readLines.html'>readLines&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>con1&lt;/span>, n &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "faa,name,lat,lon,alt,tz,dst,tzone" &lt;/span>
&lt;span class='c'>#&amp;gt; [2] "04G,Lansdowne Airport,41.1304722,-80.6195833,1044,-5,A,America/New_York" &lt;/span>
&lt;span class='c'>#&amp;gt; [3] "06A,Moton Field Municipal Airport,32.4605722,-85.6800278,264,-6,A,America/Chicago"&lt;/span>
&lt;span class='c'>#&amp;gt; [4] "06C,Schaumburg Regional,41.9893408,-88.1012428,801,-6,A,America/Chicago" &lt;/span>
&lt;span class='c'>#&amp;gt; [5] "06N,Randall Airport,41.431912,-74.3915611,523,-5,A,America/New_York"&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/connections.html'>close&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>con1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>con2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://archive.r-lib.org/reference/archive_read.html'>archive_read&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"nycflights13.zip"&lt;/span>, file &lt;span class='o'>=&lt;/span> &lt;span class='s'>"nycflights13/planes.csv"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/readLines.html'>readLines&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>con2&lt;/span>, n &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "tailnum,year,type,manufacturer,model,engines,seats,speed,engine" &lt;/span>
&lt;span class='c'>#&amp;gt; [2] "N10156,2004,Fixed wing multi engine,EMBRAER,EMB-145XR,2,55,NA,Turbo-fan" &lt;/span>
&lt;span class='c'>#&amp;gt; [3] "N102UW,1998,Fixed wing multi engine,AIRBUS INDUSTRIE,A320-214,2,182,NA,Turbo-fan"&lt;/span>
&lt;span class='c'>#&amp;gt; [4] "N103US,1999,Fixed wing multi engine,AIRBUS INDUSTRIE,A320-214,2,182,NA,Turbo-fan"&lt;/span>
&lt;span class='c'>#&amp;gt; [5] "N104UW,1999,Fixed wing multi engine,AIRBUS INDUSTRIE,A320-214,2,182,NA,Turbo-fan"&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/connections.html'>close&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>con2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="writing-single-files-to-an-archive">Writing single files to an archive
&lt;a href="#writing-single-files-to-an-archive">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Similarly
&lt;a href="https://archive.r-lib.org/reference/archive_write.html" target="_blank" rel="noopener">&lt;code>archive_write()&lt;/code>&lt;/a> is used to write a single file to an archive. Again this creates a writable R connection. Like reading, many base R functions work with writable connections, as well as some packages like readr.&lt;/p>
&lt;p>The archive and compression formats are automatically guessed based on the output filename file extensions. However you can also specify them explicity with the &lt;code>format&lt;/code> and &lt;code>filter&lt;/code> options.&lt;/p>
&lt;p>Here we create a new zip archive containing the file &lt;code>mtcars.csv&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>readr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://readr.tidyverse.org/reference/write_delim.html'>write_csv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>, &lt;span class='nf'>&lt;a href='https://archive.r-lib.org/reference/archive_write.html'>archive_write&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"my-cars.zip"&lt;/span>, &lt;span class='s'>"mtcars.csv"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://archive.r-lib.org/reference/archive.html'>archive&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"my-cars.zip"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; path size date &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> mtcars.csv &lt;span style='text-decoration: underline;'>1&lt;/span>281 1980-01-01 &lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="writing-multiple-files-to-an-archive">Writing multiple files to an archive
&lt;a href="#writing-multiple-files-to-an-archive">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://archive.r-lib.org/reference/archive_write_files.html" target="_blank" rel="noopener">&lt;code>archive_write_files()&lt;/code>&lt;/a> writes multiple files to a new archive. In this case the files to be added to the archive should already be written on disk.&lt;/p>
&lt;p>
&lt;a href="https://archive.r-lib.org/reference/archive_write_files.html" target="_blank" rel="noopener">&lt;code>archive_write_dir()&lt;/code>&lt;/a> is a helper to archive all the files in a given directory.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://readr.tidyverse.org'>readr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Write a few files to the temp directory&lt;/span>
&lt;span class='nf'>&lt;a href='https://readr.tidyverse.org/reference/write_delim.html'>write_csv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>iris&lt;/span>, &lt;span class='s'>"iris.csv"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://readr.tidyverse.org/reference/write_delim.html'>write_csv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>, &lt;span class='s'>"mtcars.csv"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://readr.tidyverse.org/reference/write_delim.html'>write_csv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>airquality&lt;/span>, &lt;span class='s'>"airquality.csv"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Add them to a new XZ compressed tar archive&lt;/span>
&lt;span class='nf'>&lt;a href='https://archive.r-lib.org/reference/archive_write_files.html'>archive_write_files&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"data.tar.xz"&lt;/span>,
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"iris.csv"&lt;/span>, &lt;span class='s'>"mtcars.csv"&lt;/span>, &lt;span class='s'>"airquality.csv"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># View archive contents&lt;/span>
&lt;span class='nf'>&lt;a href='https://archive.r-lib.org/reference/archive.html'>archive&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"data.tar.xz"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; path size date &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> iris.csv &lt;span style='text-decoration: underline;'>3&lt;/span>716 2021-11-04 &lt;span style='color: #555555;'>15:14:17&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> mtcars.csv &lt;span style='text-decoration: underline;'>1&lt;/span>281 2021-11-04 &lt;span style='color: #555555;'>15:14:17&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> airquality.csv &lt;span style='text-decoration: underline;'>2&lt;/span>890 2021-11-04 &lt;span style='color: #555555;'>15:14:17&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="extracting-multiple-files-from-an-archive">Extracting multiple files from an archive
&lt;a href="#extracting-multiple-files-from-an-archive">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://archive.r-lib.org/reference/archive_extract.html" target="_blank" rel="noopener">&lt;code>archive_extract()&lt;/code>&lt;/a> allows you to extract one or more files to disk from an archive.&lt;/p>
&lt;p>Note the archive and compression formats will be automatically detected.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># Create a new directory&lt;/span>
&lt;span class='nv'>my_dir&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/file_temp.html'>file_temp&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> |&amp;gt; &lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/create.html'>dir_create&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Extract two of the files in the archive to that directory&lt;/span>
&lt;span class='nf'>&lt;a href='https://archive.r-lib.org/reference/archive_extract.html'>archive_extract&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"data.tar.xz"&lt;/span>, dir &lt;span class='o'>=&lt;/span> &lt;span class='nv'>my_dir&lt;/span>, files &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"iris.csv"&lt;/span>, &lt;span class='s'>"mtcars.csv"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Show the extracted files&lt;/span>
&lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/dir_ls.html'>dir_ls&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>my_dir&lt;/span>&lt;span class='o'>)&lt;/span> |&amp;gt; &lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path_file.html'>path_file&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "iris.csv" "mtcars.csv"&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to the following users who have tried out the development versions of archive and opened issues and feature suggestions to improve it!
&lt;a href="https://github.com/cboettig" target="_blank" rel="noopener">@cboettig&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a>, and
&lt;a href="https://github.com/JMcrocs" target="_blank" rel="noopener">@JMcrocs&lt;/a>.&lt;/p></description></item><item><title>Comprehensive Date-Time Handling for R</title><link>https://www.tidyverse.org/blog/2021/03/clock-0-1-0/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/03/clock-0-1-0/</guid><description>&lt;div class="highlight">
&lt;/div>
&lt;p>We&amp;rsquo;re thrilled to announce the first release of
&lt;a href="https://clock.r-lib.org/index.html" target="_blank" rel="noopener">clock&lt;/a>. clock is a new package providing a comprehensive set of tools for working with date-times. It is packed with features, including utilities for: parsing, formatting, arithmetic, rounding, and extraction/updating of individual components. In addition to these tools for manipulating date-times, clock provides entirely new date-time types which are structured to reduce the agony of working with time zones as much as possible. At a high-level, clock:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Provides a new family of date-time classes (durations, time points, zoned-times, and calendars) that partition responsibilities so that you only have to think about time zones when you need them.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Implements a
&lt;a href="https://clock.r-lib.org/reference/index.html#section-high-level-api" target="_blank" rel="noopener">high level API&lt;/a> for Date and POSIXct classes that lets you get productive quickly without having to learn the details of clock&amp;rsquo;s new date-time types.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Requires explicit handling of invalid dates (e.g. what date is one month after January 31st?) and nonexistent or ambiguous times (caused by daylight saving time issues).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Is built on the C++
&lt;a href="https://github.com/HowardHinnant/date" target="_blank" rel="noopener">date&lt;/a> library, which provides a correct and high-performance backend. In general, operations on Dates are &lt;em>much&lt;/em> faster with clock than with lubridate. Currently, operations on POSIXct have roughly the same performance between clock and lubridate (clock&amp;rsquo;s performance with POSIXct will improve greatly in a future release, once a few upstream changes in date are accepted).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"clock"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will show off a few of clock&amp;rsquo;s unique features. To learn more, you&amp;rsquo;ll want to take a look at clock&amp;rsquo;s vignettes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/clock.html" target="_blank" rel="noopener">Getting Started&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/articles/motivations.html" target="_blank" rel="noopener">Motivations for clock&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/recipes.html" target="_blank" rel="noopener">Examples and Recipes&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/faq.html" target="_blank" rel="noopener">Frequently Asked Questions&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/r-lib/clock'>clock&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='http://github.com/hadley/nycflights13'>nycflights13&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='http://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://lubridate.tidyverse.org'>lubridate&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="logo">Logo
&lt;a href="#logo">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to
&lt;a href="https://www.jungjulie.com/" target="_blank" rel="noopener">Julie Jung&lt;/a>, clock has an amazing logo:&lt;/p>
&lt;p>&lt;img src="clock.png" width="250"/> &lt;br>&lt;/br>&lt;/p>
&lt;h2 id="what-about-lubridate">What about lubridate?
&lt;a href="#what-about-lubridate">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you&amp;rsquo;ve ever worked with dates or date-times in R, you&amp;rsquo;ve probably used
&lt;a href="https://lubridate.tidyverse.org/" target="_blank" rel="noopener">lubridate&lt;/a>. lubridate has powerful capabilities for working with this kind of data. So, why clock?&lt;/p>
&lt;p>One of the primary motivations for creating clock was to improve on lubridate&amp;rsquo;s handling of invalid dates and daylight saving time. As you&amp;rsquo;ll see in the following sections, clock tries extremely hard to guard you from unexpected problems that can arise from these two complex concepts.&lt;/p>
&lt;p>Additionally, clock provides a variety of new types for working with date-times. While lubridate is solely focused on working with R&amp;rsquo;s native Date and POSIXct classes, clock goes many steps further with types such as: date-times without an implied time zone, nanosecond precision date-times, built-in granular types such as year-month and year-quarter, and a type for representing a weekday.&lt;/p>
&lt;p>lubridate will never go away, and is not being deprecated or superseded. As of now, we consider clock to be an &lt;em>alternative&lt;/em> to lubridate. You can stick with one or the other, or use them together, as there are no name conflicts between the two. Keep in mind that clock is a young package, with plenty of room to grow. If you have any feedback about clock, or questions about its design, we&amp;rsquo;d love for you to
&lt;a href="https://github.com/r-lib/clock/issues" target="_blank" rel="noopener">open an issue&lt;/a>.&lt;/p>
&lt;h2 id="first-steps">First steps
&lt;a href="#first-steps">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The best place to start learning about clock is by checking out the
&lt;a href="https://clock.r-lib.org/reference/index.html#section-high-level-api" target="_blank" rel="noopener">High-Level API&lt;/a>. This lists all of the utilities in clock that work with R&amp;rsquo;s native date (Date) and date-time (POSIXct) types. You&amp;rsquo;ll notice that all of these helpers start with one of the following prefixes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>get_*()&lt;/code>: Get a component&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>set_*()&lt;/code>: Set a component&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>add_*()&lt;/code>: Add a unit of time&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>date_*()&lt;/code>: General date manipulation&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>We&amp;rsquo;ll explore some of these with a trimmed down version of the &lt;code>flights&lt;/code> dataset from the nycflights13 package.&lt;/p>
&lt;div class="highlight">
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flights&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 x 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; year month day dep_time dep_delay&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 6 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>827 -&lt;/span>&lt;span style='color: #BB0000;'>3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 8 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>458 -&lt;/span>&lt;span style='color: #BB0000;'>2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 17 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>823 80&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 26 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>052 13&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 29 448 -&lt;/span>&lt;span style='color: #BB0000;'>12&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1 30 3 124&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 2 1 816 -&lt;/span>&lt;span style='color: #BB0000;'>9&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 2 4 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>943 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 2 10 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>508 36&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 2 13 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>033 33&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The flight departure date is separated into year, month, and day fields. We can combine these together into a Date with
&lt;a href="https://rdrr.io/pkg/clock/man/date_build.html" target="_blank" rel="noopener">&lt;code>date_build()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flights&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>flights&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>
date &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/date_build.html'>date_build&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>year&lt;/span>, &lt;span class='nv'>month&lt;/span>, &lt;span class='nv'>day&lt;/span>&lt;span class='o'>)&lt;/span>,
.keep &lt;span class='o'>=&lt;/span> &lt;span class='s'>"unused"&lt;/span>,
.before &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>flights&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 x 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date dep_time dep_delay&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> 2013-01-06 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>827 -&lt;/span>&lt;span style='color: #BB0000;'>3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> 2013-01-08 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>458 -&lt;/span>&lt;span style='color: #BB0000;'>2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> 2013-01-17 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>823 80&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> 2013-01-26 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>052 13&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> 2013-01-29 448 -&lt;/span>&lt;span style='color: #BB0000;'>12&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> 2013-01-30 3 124&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> 2013-02-01 816 -&lt;/span>&lt;span style='color: #BB0000;'>9&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> 2013-02-04 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>943 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> 2013-02-10 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>508 36&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> 2013-02-13 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>033 33&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you need to get those individual components back, extract them with the corresponding &lt;code>get_*()&lt;/code> function.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>flights&lt;/span>, year &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-getters.html'>get_year&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>&lt;span class='o'>)&lt;/span>, month &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-getters.html'>get_month&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 x 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date dep_time dep_delay year month&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> 2013-01-06 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>827 -&lt;/span>&lt;span style='color: #BB0000;'>3&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> 2013-01-08 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>458 -&lt;/span>&lt;span style='color: #BB0000;'>2&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> 2013-01-17 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>823 80 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> 2013-01-26 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>052 13 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> 2013-01-29 448 -&lt;/span>&lt;span style='color: #BB0000;'>12&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> 2013-01-30 3 124 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> 2013-02-01 816 -&lt;/span>&lt;span style='color: #BB0000;'>9&lt;/span>&lt;span> &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> 2013-02-04 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>943 3 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> 2013-02-10 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>508 36 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> 2013-02-13 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>033 33 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>013 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To summarize the average departure delay by month, one option is to use
&lt;a href="https://rdrr.io/pkg/clock/man/date_group.html" target="_blank" rel="noopener">&lt;code>date_group()&lt;/code>&lt;/a> to group by the current month of the year. For Dates, this ends up setting every day of the month to &lt;code>1&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flights&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>date &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/date_group.html'>date_group&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>, &lt;span class='s'>"month"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>group_by&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>summarise&lt;/span>&lt;span class='o'>(&lt;/span>avg_delay &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dep_delay&lt;/span>, na.rm &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>, .groups &lt;span class='o'>=&lt;/span> &lt;span class='s'>"drop"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 12 x 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date avg_delay&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> 2013-01-01 33.3 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> 2013-02-01 16 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> 2013-03-01 41.8 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> 2013-04-01 -&lt;/span>&lt;span style='color: #BB0000;'>3.14&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> 2013-05-01 -&lt;/span>&lt;span style='color: #BB0000;'>1.14&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> 2013-06-01 12.2 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> 2013-07-01 15.2 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> 2013-08-01 26.2 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> 2013-09-01 10.2 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> 2013-10-01 21 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span>&lt;span> 2013-11-01 -&lt;/span>&lt;span style='color: #BB0000;'>4.14&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span>&lt;span> 2013-12-01 6.2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you&amp;rsquo;ve used lubridate before, you would have probably used
&lt;a href="http://lubridate.tidyverse.org/reference/round_date.html" target="_blank" rel="noopener">&lt;code>lubridate::floor_date()&lt;/code>&lt;/a> for this. In clock, date summarization is broken into three groups: grouping, shifting, and rounding. This separation leads to code that is both less surprising, and more powerful, giving you the ability to summarize in new ways, such as: flooring by multiple weeks, grouping by day of the quarter, and flooring by rolling sets of, say, 60 days.&lt;/p>
&lt;p>Be sure to check out the many other high-level tools for working with dates, including powerful utilities for formatting (
&lt;a href="https://clock.r-lib.org/reference/date_format.html" target="_blank" rel="noopener">&lt;code>date_format()&lt;/code>&lt;/a>) and parsing (
&lt;a href="https://clock.r-lib.org/reference/date_parse.html" target="_blank" rel="noopener">&lt;code>date_parse()&lt;/code>&lt;/a> and
&lt;a href="https://clock.r-lib.org/reference/date-time-parse.html" target="_blank" rel="noopener">&lt;code>date_time_parse()&lt;/code>&lt;/a>).&lt;/p>
&lt;p>As a lubridate user, none of the above should seem particularly revolutionary, and that&amp;rsquo;s the entire idea of the high-level API. We&amp;rsquo;ve tried to make transitioning over to clock as easy as possible. In the following sections, you&amp;rsquo;ll see some of the benefits you&amp;rsquo;ll get from doing so.&lt;/p>
&lt;h2 id="invalid-dates">Invalid dates
&lt;a href="#invalid-dates">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Using our &lt;code>flights&lt;/code> data, imagine we want to add 1 month to &lt;code>date&lt;/code>, perhaps to set up some kind of forward looking variable. With lubridate, we can use &lt;code>+ months(1)&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>flights&lt;/span>, date2 &lt;span class='o'>=&lt;/span> &lt;span class='nv'>date&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/weekday.POSIXt.html'>months&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 x 4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date dep_time dep_delay date2 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> 2013-01-06 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>827 -&lt;/span>&lt;span style='color: #BB0000;'>3&lt;/span>&lt;span> 2013-02-06&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> 2013-01-08 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>458 -&lt;/span>&lt;span style='color: #BB0000;'>2&lt;/span>&lt;span> 2013-02-08&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> 2013-01-17 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>823 80 2013-02-17&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> 2013-01-26 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>052 13 2013-02-26&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> 2013-01-29 448 -&lt;/span>&lt;span style='color: #BB0000;'>12&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #BB0000;'>NA&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> 2013-01-30 3 124 &lt;/span>&lt;span style='color: #BB0000;'>NA&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> 2013-02-01 816 -&lt;/span>&lt;span style='color: #BB0000;'>9&lt;/span>&lt;span> 2013-03-01&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> 2013-02-04 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>943 3 2013-03-04&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> 2013-02-10 &lt;/span>&lt;span style='text-decoration: underline;'>1&lt;/span>&lt;span>508 36 2013-03-10&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> 2013-02-13 &lt;/span>&lt;span style='text-decoration: underline;'>2&lt;/span>&lt;span>033 33 2013-03-13&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Huh, what&amp;rsquo;s up with those &lt;code>NA&lt;/code> values? Let&amp;rsquo;s try with clock:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>flights&lt;/span>, date2 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_months&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Error: Problem with `mutate()` input `date2`.&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span>&lt;span> Invalid date found at location 5. Resolve invalid date issues by specifying the `invalid` argument.&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span>&lt;span> Input `date2` is `add_months(date, 1)`.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>What&amp;rsquo;s this about an invalid date? Location 5? Taking a closer look, we can see that adding 1 month to &lt;code>2013-01-29&lt;/code> theoretically results in &lt;code>2013-02-29&lt;/code>, which doesn&amp;rsquo;t exist. In clock, this is known as an &lt;em>invalid date&lt;/em>. With lubridate, invalid dates result in a silent &lt;code>NA&lt;/code>. With clock, an error is raised.&lt;/p>
&lt;p>So, how do we handle this? Well, there are a number of things that you could do:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Return &lt;code>NA&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Return the previous valid moment in time&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Return the next valid moment in time&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Overflow our invalid date into March by the number of days past the true end of February that it landed at&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>With lubridate,
&lt;a href="http://lubridate.tidyverse.org/reference/mplus.html" target="_blank" rel="noopener">&lt;code>%m+%&lt;/code>&lt;/a> (i.e. 
&lt;a href="http://lubridate.tidyverse.org/reference/mplus.html" target="_blank" rel="noopener">&lt;code>add_with_rollback()&lt;/code>&lt;/a>) can help with the second and third bullets. The hardest part about
&lt;a href="http://lubridate.tidyverse.org/reference/mplus.html" target="_blank" rel="noopener">&lt;code>%m+%&lt;/code>&lt;/a> is just remembering to use it. It is a common bug to forget to use this helper until &lt;em>after&lt;/em> you have been bitten by an invalid date issue with an unexpected &lt;code>NA&lt;/code>.&lt;/p>
&lt;p>With clock, the error message advised us to use the &lt;code>invalid&lt;/code> argument to
&lt;a href="https://rdrr.io/pkg/clock/man/clock-arithmetic.html" target="_blank" rel="noopener">&lt;code>add_months()&lt;/code>&lt;/a>. This allows for explicitly specifying one of many invalid date resolution strategies.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>problems&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>flights&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>slice&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>5&lt;/span>, &lt;span class='m'>6&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>problems&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>
date2 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_months&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>, &lt;span class='m'>1&lt;/span>, invalid &lt;span class='o'>=&lt;/span> &lt;span class='s'>"previous"&lt;/span>&lt;span class='o'>)&lt;/span>,
date3 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_months&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>, &lt;span class='m'>1&lt;/span>, invalid &lt;span class='o'>=&lt;/span> &lt;span class='s'>"next"&lt;/span>&lt;span class='o'>)&lt;/span>,
date4 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_months&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>, &lt;span class='m'>1&lt;/span>, invalid &lt;span class='o'>=&lt;/span> &lt;span class='s'>"overflow"&lt;/span>&lt;span class='o'>)&lt;/span>,
date5 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_months&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>, &lt;span class='m'>1&lt;/span>, invalid &lt;span class='o'>=&lt;/span> &lt;span class='s'>"NA"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 x 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date date2 date3 date4 date5 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> 2013-01-29 2013-02-28 2013-03-01 2013-03-01 &lt;/span>&lt;span style='color: #BB0000;'>NA&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span>&lt;span> 2013-01-30 2013-02-28 2013-03-01 2013-03-02 &lt;/span>&lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The overarching goal of clock is to protect you from issues like invalid dates by erroring early and often, rather than letting them slip through unnoticed, only to cause hard to debug issues down the line. If you&amp;rsquo;re thinking, &amp;ldquo;That would never happen to me!&amp;quot;, consider that if you had a daily sequence of every date in a particular year, and added 1 month to each date in that sequence, you would immediately generate &lt;em>7 invalid dates&lt;/em> (6 if you chose a leap year).&lt;/p>
&lt;h2 id="daylight-saving-time">Daylight saving time
&lt;a href="#daylight-saving-time">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The &lt;code>dep_time&lt;/code> column of &lt;code>flights&lt;/code> contains the hour and minute of the actual departure time, encoded together into a single integer. Let&amp;rsquo;s extract that.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flights_hm&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>flights&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>, &lt;span class='nv'>dep_time&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>
hour &lt;span class='o'>=&lt;/span> &lt;span class='nv'>dep_time&lt;/span> &lt;span class='o'>%/%&lt;/span> &lt;span class='m'>100L&lt;/span>,
minute &lt;span class='o'>=&lt;/span> &lt;span class='nv'>dep_time&lt;/span> &lt;span class='o'>%%&lt;/span> &lt;span class='m'>100L&lt;/span>,
.keep &lt;span class='o'>=&lt;/span> &lt;span class='s'>"unused"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/head.html'>head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>flights_hm&lt;/span>, n &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 x 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date hour minute&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> 2013-01-06 18 27&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span>&lt;span> 2013-01-08 14 58&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We&amp;rsquo;d like to be able to add this time of day information to our &lt;code>date&lt;/code> column. This flight information was recorded in the America/New_York time zone, so our resulting date-time should have that time zone as well. However, converting Date -&amp;gt; POSIXct will &lt;em>always&lt;/em> assume that Date starts as UTC, rather than being naive to any time zones, and the result will use your system&amp;rsquo;s local time zone. This can have unintended side effects:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># My local time zone is actually America/New_York.&lt;/span>
&lt;span class='c'># The conversion to POSIXct retains the underlying UTC instant, but&lt;/span>
&lt;span class='c'># the printed time changes unexpectedly, showing the equivalent time&lt;/span>
&lt;span class='c'># in the local time zone.&lt;/span>
&lt;span class='nv'>flights_hm&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>
datetime &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.POSIXlt.html'>as.POSIXct&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>&lt;span class='o'>)&lt;/span>,
datetime_utc &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/date-zone.html'>date_set_zone&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>datetime&lt;/span>, &lt;span class='s'>"UTC"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/head.html'>head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>n &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 x 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date datetime datetime_utc &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> 2013-01-06 2013-01-05 &lt;/span>&lt;span style='color: #555555;'>19:00:00&lt;/span>&lt;span> 2013-01-06 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span>&lt;span> 2013-01-08 2013-01-07 &lt;/span>&lt;span style='color: #555555;'>19:00:00&lt;/span>&lt;span> 2013-01-08 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span>&lt;span> 2013-01-17 2013-01-16 &lt;/span>&lt;span style='color: #555555;'>19:00:00&lt;/span>&lt;span> 2013-01-17 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To get what we want, we need to convince the &lt;code>date&lt;/code> column to &amp;ldquo;forget&amp;rdquo; that it is UTC, then add on the America/New_York time zone. With clock, we&amp;rsquo;ll do this by going through a new intermediate type called naive-time, a date-time type with a yet-to-be-specified time zone. The ability to separate a date-time from its associated time zone is one of clock&amp;rsquo;s most powerful features, which we&amp;rsquo;ll explore more in the Time Points section below. For now, the important thing is that this retains the printed time as we expected.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flights_dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>flights_hm&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>
datetime &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.POSIXlt.html'>as.POSIXct&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/as_naive_time.html'>as_naive_time&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='s'>"America/New_York"&lt;/span>&lt;span class='o'>)&lt;/span>,
.keep &lt;span class='o'>=&lt;/span> &lt;span class='s'>"unused"&lt;/span>,
.before &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>flights_dt&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 x 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; datetime hour minute&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> 2013-01-06 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;span> 18 27&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> 2013-01-08 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;span> 14 58&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> 2013-01-17 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;span> 18 23&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> 2013-01-26 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;span> 10 52&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> 2013-01-29 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;span> 4 48&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> 2013-01-30 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;span> 0 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> 2013-02-01 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;span> 8 16&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> 2013-02-04 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;span> 19 43&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> 2013-02-10 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;span> 15 8&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> 2013-02-13 &lt;/span>&lt;span style='color: #555555;'>00:00:00&lt;/span>&lt;span> 20 33&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can now add on our hours and minutes.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flights_dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>flights_dt&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>
datetime &lt;span class='o'>=&lt;/span> &lt;span class='nv'>datetime&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_hours&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hour&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_minutes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>minute&lt;/span>&lt;span class='o'>)&lt;/span>,
.keep &lt;span class='o'>=&lt;/span> &lt;span class='s'>"unused"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>flights_dt&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 x 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; datetime &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> 2013-01-06 &lt;/span>&lt;span style='color: #555555;'>18:27:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> 2013-01-08 &lt;/span>&lt;span style='color: #555555;'>14:58:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> 2013-01-17 &lt;/span>&lt;span style='color: #555555;'>18:23:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> 2013-01-26 &lt;/span>&lt;span style='color: #555555;'>10:52:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> 2013-01-29 &lt;/span>&lt;span style='color: #555555;'>04:48:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> 2013-01-30 &lt;/span>&lt;span style='color: #555555;'>00:03:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> 2013-02-01 &lt;/span>&lt;span style='color: #555555;'>08:16:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> 2013-02-04 &lt;/span>&lt;span style='color: #555555;'>19:43:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> 2013-02-10 &lt;/span>&lt;span style='color: #555555;'>15:08:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> 2013-02-13 &lt;/span>&lt;span style='color: #555555;'>20:33:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now assume that we want to add two days to this &lt;code>datetime&lt;/code> column, again to construct some forward looking variable.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flights_dt_lubridate&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>flights_dt&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>datetime2 &lt;span class='o'>=&lt;/span> &lt;span class='nv'>datetime&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='http://lubridate.tidyverse.org/reference/period.html'>days&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>flights_dt_lubridate&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 x 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; datetime datetime2 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> 2013-01-06 &lt;/span>&lt;span style='color: #555555;'>18:27:00&lt;/span>&lt;span> 2013-01-08 &lt;/span>&lt;span style='color: #555555;'>18:27:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> 2013-01-08 &lt;/span>&lt;span style='color: #555555;'>14:58:00&lt;/span>&lt;span> 2013-01-10 &lt;/span>&lt;span style='color: #555555;'>14:58:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> 2013-01-17 &lt;/span>&lt;span style='color: #555555;'>18:23:00&lt;/span>&lt;span> 2013-01-19 &lt;/span>&lt;span style='color: #555555;'>18:23:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> 2013-01-26 &lt;/span>&lt;span style='color: #555555;'>10:52:00&lt;/span>&lt;span> 2013-01-28 &lt;/span>&lt;span style='color: #555555;'>10:52:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> 2013-01-29 &lt;/span>&lt;span style='color: #555555;'>04:48:00&lt;/span>&lt;span> 2013-01-31 &lt;/span>&lt;span style='color: #555555;'>04:48:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> 2013-01-30 &lt;/span>&lt;span style='color: #555555;'>00:03:00&lt;/span>&lt;span> 2013-02-01 &lt;/span>&lt;span style='color: #555555;'>00:03:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> 2013-02-01 &lt;/span>&lt;span style='color: #555555;'>08:16:00&lt;/span>&lt;span> 2013-02-03 &lt;/span>&lt;span style='color: #555555;'>08:16:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> 2013-02-04 &lt;/span>&lt;span style='color: #555555;'>19:43:00&lt;/span>&lt;span> 2013-02-06 &lt;/span>&lt;span style='color: #555555;'>19:43:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> 2013-02-10 &lt;/span>&lt;span style='color: #555555;'>15:08:00&lt;/span>&lt;span> 2013-02-12 &lt;/span>&lt;span style='color: #555555;'>15:08:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> 2013-02-13 &lt;/span>&lt;span style='color: #555555;'>20:33:00&lt;/span>&lt;span> 2013-02-15 &lt;/span>&lt;span style='color: #555555;'>20:33:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Looks reasonable. Now with clock:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flights_dt&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>datetime2 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_days&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>datetime&lt;/span>, &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Error: Problem with `mutate()` input `datetime2`.&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span>&lt;span> Nonexistent time due to daylight saving time at location 18. Resolve nonexistent time issues by specifying the `nonexistent` argument.&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span>&lt;span> Input `datetime2` is `add_days(datetime, 2)`.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Another problem! This time a &lt;em>nonexistent time&lt;/em> at row 18. Let&amp;rsquo;s investigate what lubridate gave us here:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flights_dt_lubridate&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>18&lt;/span>,&lt;span class='o'>]&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 x 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; datetime datetime2 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> 2013-03-08 &lt;/span>&lt;span style='color: #555555;'>02:23:00&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>An &lt;code>NA&lt;/code>? But why?&lt;/p>
&lt;p>As it turns out, in the America/New_York time zone, on 2013-03-10 the clocks jumped forward from 01:59:59 -&amp;gt; 03:00:00, creating a daylight saving time gap, and a &lt;em>nonexistent&lt;/em> 2 o&amp;rsquo;clock hour. By adding two days, we&amp;rsquo;ve landed right in that gap (at 02:23:00). With nonexistent times like this, lubridate silently returns &lt;code>NA&lt;/code>, while clock errors.&lt;/p>
&lt;p>Like with invalid dates, clock tries to guard you from these issues by erroring as soon as they occur. You can resolve these particular issues with the &lt;code>nonexistent&lt;/code> argument to
&lt;a href="https://rdrr.io/pkg/clock/man/clock-arithmetic.html" target="_blank" rel="noopener">&lt;code>add_days()&lt;/code>&lt;/a>. In this case, we could:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Roll forward to the next valid moment in time&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Roll backward to the previous valid moment in time&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Shift forward by the size of the gap&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Shift backward by the size of the gap&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Return &lt;code>NA&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>problem&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>flights_dt&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>datetime&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>18&lt;/span>&lt;span class='o'>]&lt;/span>
&lt;span class='nv'>problem&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2013-03-08 02:23:00 EST"&lt;/span>
&lt;span class='c'># 02:23:00 -&amp;gt; 03:00:00&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_days&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>problem&lt;/span>, &lt;span class='m'>2&lt;/span>, nonexistent &lt;span class='o'>=&lt;/span> &lt;span class='s'>"roll-forward"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2013-03-10 03:00:00 EDT"&lt;/span>
&lt;span class='c'># 02:23:00 -&amp;gt; 01:59:59&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_days&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>problem&lt;/span>, &lt;span class='m'>2&lt;/span>, nonexistent &lt;span class='o'>=&lt;/span> &lt;span class='s'>"roll-backward"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2013-03-10 01:59:59 EST"&lt;/span>
&lt;span class='c'># 02:23:00 -&amp;gt; 03:23:00&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_days&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>problem&lt;/span>, &lt;span class='m'>2&lt;/span>, nonexistent &lt;span class='o'>=&lt;/span> &lt;span class='s'>"shift-forward"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2013-03-10 03:23:00 EDT"&lt;/span>
&lt;span class='c'># 02:23:00 -&amp;gt; 01:23:00&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_days&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>problem&lt;/span>, &lt;span class='m'>2&lt;/span>, nonexistent &lt;span class='o'>=&lt;/span> &lt;span class='s'>"shift-backward"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2013-03-10 01:23:00 EST"&lt;/span>
&lt;span class='c'># 02:23:00 -&amp;gt; NA&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_days&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>problem&lt;/span>, &lt;span class='m'>2&lt;/span>, nonexistent &lt;span class='o'>=&lt;/span> &lt;span class='s'>"NA"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] NA&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>I recommend &lt;code>&amp;quot;roll-forward&amp;quot;&lt;/code> or &lt;code>&amp;quot;roll-backward&amp;quot;&lt;/code>, as these retain the &lt;em>relative ordering&lt;/em> of &lt;code>datetime&lt;/code>, an issue that you can read about
&lt;a href="https://clock.r-lib.org/articles/articles/motivations.html#nonexistent-time-1" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;p>Unlike with invalid dates, lubridate does not provide any tools for resolving nonexistent times.&lt;/p>
&lt;p>There are another class of daylight saving time issues related to &lt;em>ambiguous times&lt;/em>. These generally result from daylight saving fallbacks, where your clock might show two 1 AM hours. You resolve them in a similar way to what was done with nonexistent times. If you&amp;rsquo;re interested, you can read more about ambiguous times
&lt;a href="https://clock.r-lib.org/articles/articles/motivations.html#ambiguous-time-1" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;p>Nonexistent and ambiguous times are particularly nasty issues because they occur relatively infrequently. If your time zone uses daylight saving time, these issues each come up once per year, generally for a duration of 1 hour (but not always!). This can be incredibly frustrating in production, where an analysis that has been working fine suddenly crashes on new data due to a daylight saving time issue. Which brings me to&amp;hellip;&lt;/p>
&lt;h2 id="production">Production
&lt;a href="#production">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This new invalid date and daylight saving time behavior might sound great to you, but you might be wondering about usage of clock in production. What happens if
&lt;a href="https://rdrr.io/pkg/clock/man/clock-arithmetic.html" target="_blank" rel="noopener">&lt;code>add_months()&lt;/code>&lt;/a> worked in interactive development, but then you put your analysis into production, gathered new data, and all of the sudden it started failing?&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>dates&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>flights&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>date&lt;/span>
&lt;span class='c'># All good! Ship it!&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_months&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dates&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>4&lt;/span>&lt;span class='o'>]&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2013-02-06" "2013-02-08" "2013-02-17" "2013-02-26"&lt;/span>
&lt;span class='c'># Failed in production with new data! Oh no!&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_months&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dates&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>10&lt;/span>&lt;span class='o'>]&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Error: Invalid date found at location 5. Resolve invalid date issues by specifying the `invalid` argument.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To balance the usefulness of clock in interactive development with the strict requirements of production, you can set the &lt;code>clock.strict&lt;/code> global option to &lt;code>TRUE&lt;/code> to turn &lt;code>invalid&lt;/code>, &lt;code>nonexistent&lt;/code>, and &lt;code>ambiguous&lt;/code> from optional arguments into required ones.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>rlang&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rlang.r-lib.org/reference/local_options.html'>with_options&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>clock.strict &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>, .expr &lt;span class='o'>=&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_months&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dates&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>4&lt;/span>&lt;span class='o'>]&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Error: The global option, `clock.strict`, is currently set to `TRUE`. In this mode, `invalid` must be set and cannot be left as `NULL`.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Forcing yourself to specify these arguments up front during interactive development is a great way to explicitly document your assumptions about these possible issues, while also guarding against future problems in production.&lt;/p>
&lt;h2 id="advanced-features">Advanced features
&lt;a href="#advanced-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This blog post has only scratched the surface of what clock can do. Up until now, we&amp;rsquo;ve only explored clock&amp;rsquo;s high-level API. There exists an entire world of more powerful utilities in the low-level API that powers clock. We&amp;rsquo;ll briefly explore a few of those in the next few sections, but I&amp;rsquo;d encourage checking out the rest of the
&lt;a href="https://clock.r-lib.org/reference/index.html" target="_blank" rel="noopener">reference page&lt;/a> to get a bird&amp;rsquo;s-eye view of all that clock can do.&lt;/p>
&lt;h3 id="calendars">Calendars
&lt;a href="#calendars">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Calendars allow you to represent a date using an alternative format. Rather than using a typical year, month, and day of the month format, you might want to specify the fiscal year, quarter, and day of the quarter. In the end, these point to the same moment in time, just in different ways. For example:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>ymd&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/year_month_day.html'>year_month_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>25&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Fiscal year starting in January&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/as_year_quarter_day.html'>as_year_quarter_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ymd&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;year_quarter_day&amp;lt;January&amp;gt;&amp;lt;day&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-Q1-56"&lt;/span>
&lt;span class='c'># Fiscal year starting in April&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/as_year_quarter_day.html'>as_year_quarter_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ymd&lt;/span>, start &lt;span class='o'>=&lt;/span> &lt;span class='nv'>clock_months&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>april&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;year_quarter_day&amp;lt;April&amp;gt;&amp;lt;day&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-Q4-56"&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>There are 5 calendars that come with clock. The neat part about these is that they have &lt;em>varying precision&lt;/em>, from year to nanosecond. This provides built-in granular types like year-month and year-quarter.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># Gregorian year, month, and day of the month&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/year_month_day.html'>year_month_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>14&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;year_month_day&amp;lt;day&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-01-14"&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/year_month_day.html'>year_month_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;year_month_day&amp;lt;month&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-02"&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/year_month_day.html'>year_month_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>14&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>30&lt;/span>, &lt;span class='m'>25&lt;/span>, &lt;span class='m'>12345&lt;/span>, subsecond_precision &lt;span class='o'>=&lt;/span> &lt;span class='s'>"nanosecond"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;year_month_day&amp;lt;nanosecond&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-02-14 02:30:25.000012345"&lt;/span>
&lt;span class='c'># Gregorian year, month, and indexed weekday of the month&lt;/span>
&lt;span class='c'># (i.e. the 2nd Wednesday)&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/year_month_weekday.html'>year_month_weekday&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>2&lt;/span>, day &lt;span class='o'>=&lt;/span> &lt;span class='nv'>clock_weekdays&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>wednesday&lt;/span>, index &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;year_month_weekday&amp;lt;day&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-02-Wed[2]"&lt;/span>
&lt;span class='c'># Gregorian year and day of the year&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/year_day.html'>year_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>105&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;year_day&amp;lt;day&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-105"&lt;/span>
&lt;span class='c'># Fiscal year, quarter, and day of the quarter&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/year_quarter_day.html'>year_quarter_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>14&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;year_quarter_day&amp;lt;January&amp;gt;&amp;lt;day&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-Q1-14"&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/year_quarter_day.html'>year_quarter_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>14&lt;/span>, start &lt;span class='o'>=&lt;/span> &lt;span class='nv'>clock_months&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>april&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;year_quarter_day&amp;lt;April&amp;gt;&amp;lt;day&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-Q1-14"&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/year_quarter_day.html'>year_quarter_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>2&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;year_quarter_day&amp;lt;January&amp;gt;&amp;lt;quarter&amp;gt;[3]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-Q2" "2019-Q3" "2019-Q4"&lt;/span>
&lt;span class='c'># ISO year, week, and day of the week&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/iso_year_week_day.html'>iso_year_week_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='nv'>clock_iso_weekdays&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>friday&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;iso_year_week_day&amp;lt;day&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-W02-5"&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>As shown above, you can convert from one calendar to another with functions like
&lt;a href="https://rdrr.io/pkg/clock/man/as_year_quarter_day.html" target="_blank" rel="noopener">&lt;code>as_year_quarter_day()&lt;/code>&lt;/a>, and to Date or POSIXct with the standard
&lt;a href="https://rdrr.io/r/base/as.Date.html" target="_blank" rel="noopener">&lt;code>as.Date()&lt;/code>&lt;/a> and
&lt;a href="https://rdrr.io/r/base/as.POSIXlt.html" target="_blank" rel="noopener">&lt;code>as.POSIXct()&lt;/code>&lt;/a> functions.&lt;/p>
&lt;p>One of the most unique features of calendars is the ability to represent invalid dates directly. In a previous section, we added 1 month to a Date and used the &lt;code>invalid&lt;/code> argument to resolve invalid date issues. Let&amp;rsquo;s swap to a year-month-day and try again. We can also use the cleaner &lt;code>+ duration_months()&lt;/code> syntax here, which we can&amp;rsquo;t use with Dates.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>invalids&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>flights&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>
ymd &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/as_year_month_day.html'>as_year_month_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>&lt;span class='o'>)&lt;/span>,
ymd2 &lt;span class='o'>=&lt;/span> &lt;span class='nv'>ymd&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/duration-helper.html'>duration_months&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>invalids&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 x 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date ymd ymd2 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;ymd&amp;lt;day&amp;gt;&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;ymd&amp;lt;day&amp;gt;&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> 2013-01-06 2013-01-06 2013-02-06&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> 2013-01-08 2013-01-08 2013-02-08&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> 2013-01-17 2013-01-17 2013-02-17&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> 2013-01-26 2013-01-26 2013-02-26&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> 2013-01-29 2013-01-29 2013-02-29&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> 2013-01-30 2013-01-30 2013-02-30&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> 2013-02-01 2013-02-01 2013-03-01&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> 2013-02-04 2013-02-04 2013-03-04&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> 2013-02-10 2013-02-10 2013-03-10&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> 2013-02-13 2013-02-13 2013-03-13&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The &lt;code>ymd2&lt;/code> column directly contains the invalid dates, &lt;code>2013-02-29&lt;/code> and &lt;code>2013-02-30&lt;/code>! You can resolve these dates at any time using
&lt;a href="https://rdrr.io/pkg/clock/man/clock-invalid.html" target="_blank" rel="noopener">&lt;code>invalid_resolve()&lt;/code>&lt;/a>, providing an invalid resolution strategy like we did earlier. Or, you can ignore them if you expect them to be resolved naturally in some other way. For example, if our end goal was to add 1 month, then fix the day of the month to the 15th, then these invalid dates would naturally resolve themselves:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>invalids&lt;/span>, ymd3 &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-setters.html'>set_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ymd2&lt;/span>, &lt;span class='m'>15&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 x 4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date ymd ymd2 ymd3 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;ymd&amp;lt;day&amp;gt;&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;ymd&amp;lt;day&amp;gt;&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;ymd&amp;lt;day&amp;gt;&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> 2013-01-06 2013-01-06 2013-02-06 2013-02-15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> 2013-01-08 2013-01-08 2013-02-08 2013-02-15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> 2013-01-17 2013-01-17 2013-02-17 2013-02-15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> 2013-01-26 2013-01-26 2013-02-26 2013-02-15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> 2013-01-29 2013-01-29 2013-02-29 2013-02-15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> 2013-01-30 2013-01-30 2013-02-30 2013-02-15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> 2013-02-01 2013-02-01 2013-03-01 2013-03-15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> 2013-02-04 2013-02-04 2013-03-04 2013-03-15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> 2013-02-10 2013-02-10 2013-03-10 2013-03-15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> 2013-02-13 2013-02-13 2013-03-13 2013-03-15&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To detect which dates are invalid, use
&lt;a href="https://rdrr.io/pkg/clock/man/clock-invalid.html" target="_blank" rel="noopener">&lt;code>invalid_detect()&lt;/code>&lt;/a>, which returns a logical vector that can be useful for filtering:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>invalids&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-invalid.html'>invalid_detect&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ymd2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 x 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date ymd ymd2 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;ymd&amp;lt;day&amp;gt;&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;ymd&amp;lt;day&amp;gt;&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span>&lt;span> 2013-01-29 2013-01-29 2013-02-29&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span>&lt;span> 2013-01-30 2013-01-30 2013-02-30&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span>&lt;span> 2013-10-31 2013-10-31 2013-11-31&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With invalid dates, the important thing is that they &lt;em>eventually&lt;/em> get resolved. You must resolve them before converting to another calendar or to a Date / POSIXct.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.Date.html'>as.Date&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>invalids&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>ymd2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Error: Conversion from a calendar requires that all dates are valid. Resolve invalid dates by calling `invalid_resolve()`.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="time-points-and-zoned-times">Time points and zoned-times
&lt;a href="#time-points-and-zoned-times">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The daylight saving time section of this post was complicated by the need to work around time zones. If your analysis doesn&amp;rsquo;t actually require time zones, you can represent a date or date-time using a &lt;em>naive-time&lt;/em>. This date-time type makes no assumption about the current time zone, instead assuming that there is a yet-to-be-specified time zone that hasn&amp;rsquo;t been declared yet.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flights_nt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>flights_hm&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>
naive_day &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/as_naive_time.html'>as_naive_time&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>&lt;span class='o'>)&lt;/span>,
naive_time &lt;span class='o'>=&lt;/span> &lt;span class='nv'>naive_day&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/duration-helper.html'>duration_hours&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hour&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/duration-helper.html'>duration_minutes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>minute&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>date&lt;/span>, &lt;span class='nf'>starts_with&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"naive"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>flights_nt&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 x 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; date naive_day naive_time &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;tp&amp;lt;naive&amp;gt;&amp;lt;day&amp;gt;&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;tp&amp;lt;naive&amp;gt;&amp;lt;minute&amp;gt;&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> 2013-01-06 2013-01-06 2013-01-06 18:27 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> 2013-01-08 2013-01-08 2013-01-08 14:58 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> 2013-01-17 2013-01-17 2013-01-17 18:23 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> 2013-01-26 2013-01-26 2013-01-26 10:52 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> 2013-01-29 2013-01-29 2013-01-29 04:48 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> 2013-01-30 2013-01-30 2013-01-30 00:03 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> 2013-02-01 2013-02-01 2013-02-01 08:16 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> 2013-02-04 2013-02-04 2013-02-04 19:43 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> 2013-02-10 2013-02-10 2013-02-10 15:08 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> 2013-02-13 2013-02-13 2013-02-13 20:33 &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Going from Date -&amp;gt; naive-time has dropped the UTC time zone assumption altogether, while keeping the printed time. This allowed us to convert back to POSIXct in an earlier example. Essentially, all that we were doing was declaring that yet-to-be-specified time zone as America/New_York, keeping the printed time where possible. We could have easily chosen a different time zone, like Europe/London.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>flights_nt&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>select&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>naive_time&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>mutate&lt;/span>&lt;span class='o'>(&lt;/span>
datetime_ny &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.POSIXlt.html'>as.POSIXct&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>naive_time&lt;/span>, &lt;span class='s'>"America/New_York"&lt;/span>&lt;span class='o'>)&lt;/span>,
datetime_lo &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.POSIXlt.html'>as.POSIXct&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>naive_time&lt;/span>, &lt;span class='s'>"Europe/London"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 100 x 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; naive_time datetime_ny datetime_lo &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;font-style: italic;'>&amp;lt;tp&amp;lt;naive&amp;gt;&amp;lt;minute&amp;gt;&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dttm&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span>&lt;span> 2013-01-06 18:27 2013-01-06 &lt;/span>&lt;span style='color: #555555;'>18:27:00&lt;/span>&lt;span> 2013-01-06 &lt;/span>&lt;span style='color: #555555;'>18:27:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span>&lt;span> 2013-01-08 14:58 2013-01-08 &lt;/span>&lt;span style='color: #555555;'>14:58:00&lt;/span>&lt;span> 2013-01-08 &lt;/span>&lt;span style='color: #555555;'>14:58:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span>&lt;span> 2013-01-17 18:23 2013-01-17 &lt;/span>&lt;span style='color: #555555;'>18:23:00&lt;/span>&lt;span> 2013-01-17 &lt;/span>&lt;span style='color: #555555;'>18:23:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span>&lt;span> 2013-01-26 10:52 2013-01-26 &lt;/span>&lt;span style='color: #555555;'>10:52:00&lt;/span>&lt;span> 2013-01-26 &lt;/span>&lt;span style='color: #555555;'>10:52:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span>&lt;span> 2013-01-29 04:48 2013-01-29 &lt;/span>&lt;span style='color: #555555;'>04:48:00&lt;/span>&lt;span> 2013-01-29 &lt;/span>&lt;span style='color: #555555;'>04:48:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span>&lt;span> 2013-01-30 00:03 2013-01-30 &lt;/span>&lt;span style='color: #555555;'>00:03:00&lt;/span>&lt;span> 2013-01-30 &lt;/span>&lt;span style='color: #555555;'>00:03:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span>&lt;span> 2013-02-01 08:16 2013-02-01 &lt;/span>&lt;span style='color: #555555;'>08:16:00&lt;/span>&lt;span> 2013-02-01 &lt;/span>&lt;span style='color: #555555;'>08:16:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span>&lt;span> 2013-02-04 19:43 2013-02-04 &lt;/span>&lt;span style='color: #555555;'>19:43:00&lt;/span>&lt;span> 2013-02-04 &lt;/span>&lt;span style='color: #555555;'>19:43:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span>&lt;span> 2013-02-10 15:08 2013-02-10 &lt;/span>&lt;span style='color: #555555;'>15:08:00&lt;/span>&lt;span> 2013-02-10 &lt;/span>&lt;span style='color: #555555;'>15:08:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span>&lt;span> 2013-02-13 20:33 2013-02-13 &lt;/span>&lt;span style='color: #555555;'>20:33:00&lt;/span>&lt;span> 2013-02-13 &lt;/span>&lt;span style='color: #555555;'>20:33:00&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 90 more rows&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you&amp;rsquo;re used to lubridate, converting to naive-time and back with a different time zone is similar to using
&lt;a href="http://lubridate.tidyverse.org/reference/force_tz.html" target="_blank" rel="noopener">&lt;code>lubridate::force_tz()&lt;/code>&lt;/a>, but with more control over possible daylight saving time issues (again using &lt;code>nonexistent&lt;/code> and &lt;code>ambiguous&lt;/code>, but supplied directly to
&lt;a href="https://rdrr.io/r/base/as.POSIXlt.html" target="_blank" rel="noopener">&lt;code>as.POSIXct()&lt;/code>&lt;/a>).&lt;/p>
&lt;p>In clock, a naive-time is a particular kind of &lt;em>time point&lt;/em>, a type that counts units of time with respect to some origin. Time points are extremely efficient at daily and sub-daily arithmetic, but calendars are better suited for monthly and yearly arithmetic. Time points are also efficient at &lt;em>rounding&lt;/em> and &lt;em>shifting&lt;/em>, through
&lt;a href="https://rdrr.io/pkg/clock/man/time-point-rounding.html" target="_blank" rel="noopener">&lt;code>time_point_floor()&lt;/code>&lt;/a> and
&lt;a href="https://rdrr.io/pkg/clock/man/time_point_shift.html" target="_blank" rel="noopener">&lt;code>time_point_shift()&lt;/code>&lt;/a>, but calendars are better at &lt;em>grouping&lt;/em>, through
&lt;a href="https://rdrr.io/pkg/clock/man/calendar_group.html" target="_blank" rel="noopener">&lt;code>calendar_group()&lt;/code>&lt;/a>. In the high-level API for Date and POSIXct, we gloss over these details and internally switch between these two types for you.&lt;/p>
&lt;p>There is a second type of time point in clock, the sys-time, which works exactly like a naive-time &lt;em>except&lt;/em> that it is assumed to be in UTC. If you never use a time zone aware class like POSIXct, then sys-time and naive-time are equivalent. However, once you start adding in time zones, the way you interpret each of them becomes extremely important.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>ymd&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/year_month_day.html'>year_month_day&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2019&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># Yet-to-be-specified time zone&lt;/span>
&lt;span class='nv'>naive&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/as_naive_time.html'>as_naive_time&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ymd&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>naive&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;time_point&amp;lt;naive&amp;gt;&amp;lt;day&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-01-01"&lt;/span>
&lt;span class='c'># UTC time zone&lt;/span>
&lt;span class='nv'>sys&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/as_sys_time.html'>as_sys_time&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ymd&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>sys&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;time_point&amp;lt;sys&amp;gt;&amp;lt;day&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-01-01"&lt;/span>
&lt;span class='c'># - Keeps printed time&lt;/span>
&lt;span class='c'># - Changes underlying duration&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.POSIXlt.html'>as.POSIXct&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>naive&lt;/span>, &lt;span class='s'>"America/New_York"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-01-01 EST"&lt;/span>
&lt;span class='c'># - Changes printed time&lt;/span>
&lt;span class='c'># - Keeps underlying duration&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.POSIXlt.html'>as.POSIXct&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sys&lt;/span>, &lt;span class='s'>"America/New_York"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2018-12-31 19:00:00 EST"&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>clock also provides its own time zone aware date-time type, the zoned-time. Converting to a zoned-time from a sys-time or naive-time works the same as converting to a POSIXct, but zoned-times can have up to nanosecond precision.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>naive&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_nanoseconds&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>100&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/clock-arithmetic.html'>add_hours&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>%&amp;gt;%&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/clock/man/as_zoned_time.html'>as_zoned_time&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"America/New_York"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;zoned_time&amp;lt;nanosecond&amp;gt;&amp;lt;America/New_York&amp;gt;[1]&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "2019-01-01 02:00:00.000000100-05:00"&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>There isn&amp;rsquo;t actually a lot you can do with zoned-times directly. Generally, zoned-times are the start or end points of an analysis meant for humans to interpret. In the middle, you&amp;rsquo;ll convert to naive-time, sys-time, or to a calendar type to perform any date-time specific manipulations.&lt;/p>
&lt;div class="highlight">
&lt;/div></description></item><item><title>usethis 2.0.0</title><link>https://www.tidyverse.org/blog/2020/12/usethis-2-0-0/</link><pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/12/usethis-2-0-0/</guid><description>&lt;p>We&amp;rsquo;re ecstatic to announce the release of usethis v2.0.0 (
&lt;a href="https://usethis.r-lib.org/" target="_blank" rel="noopener">usethis.r-lib.org&lt;/a>). usethis is a package that facilitates interactive workflows for R project creation and development. It&amp;rsquo;s mostly focussed on easing day-to-day package development, but many of its functions are also useful for non-package projects.&lt;/p>
&lt;p>You can install usethis from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"usethis"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This is a major release, involving lots of change under the hood, and yet there are no big, brand new features. Instead, this release is about making more things &amp;ldquo;just work&amp;rdquo; the way you expect. Below, we list many functions and arguments that have been deprecated, because we&amp;rsquo;ve been able to deliver the same functionality (actually, a bit more) with a smaller and simpler user interface.&lt;/p>
&lt;p>This blog post hits a few highlights, mostly relating to Git and GitHub functionality:&lt;/p>
&lt;ul>
&lt;li>We&amp;rsquo;ve switched to a new package, gert, for Git operations. This resolves some long-standing difficulties around credential-finding and provides more reliable support for both HTTPS and SSH remotes.&lt;/li>
&lt;li>Anything that works for github.com should now work for any
&lt;a href="https://github.com/enterprise" target="_blank" rel="noopener">GitHub Enterprise&lt;/a> deployment.&lt;/li>
&lt;li>GitHub personal access tokens are now handled in the same way as command line Git. This means we can all manage our tokens more securely and, for example, can have different tokens for different hosts.&lt;/li>
&lt;li>We&amp;rsquo;ve added more functionality for working with GitHub pull requests.&lt;/li>
&lt;li>A default branch named &lt;code>main&lt;/code> should be fully supported.&lt;/li>
&lt;/ul>
&lt;p>You can see a full list of changes in the
&lt;a href="https://usethis.r-lib.org/news/index.html#usethis-2-0-0-2020-12-10" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://usethis.r-lib.org'>usethis&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="gitgithub--credentials-hosts-and-protocols">Git/GitHub &amp;amp; credentials, hosts, and protocols
&lt;a href="#gitgithub--credentials-hosts-and-protocols">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Usethis has various functions that help with Git-related tasks, which break down into two categories:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Git&lt;/strong> tasks, such as clone, push, and pull. These are things you could do with command line Git.&lt;/li>
&lt;li>Git&lt;strong>Hub&lt;/strong> tasks, such as fork, release, and open an issue or pull request. These are things you could do in the browser or with the GitHub API.&lt;/li>
&lt;/ol>
&lt;p>We&amp;rsquo;ve switched from git2r to the gert package for Git operations (&lt;a href="https://docs.ropensci.org/gert/">https://docs.ropensci.org/gert/&lt;/a>). We continue to use the gh package for GitHub API work (&lt;a href="https://gh.r-lib.org">https://gh.r-lib.org&lt;/a>).&lt;/p>
&lt;p>Many real-world goals can only be accomplished through a mix of Git and GitHub operations, therefore many usethis functions make use of both gert and gh. These packages, in turn, might need your credentials to prove to GitHub that you have the permission to do what you&amp;rsquo;re trying to do.&lt;/p>
&lt;p>If you stop reading here, just know that
&lt;a href="https://usethis.r-lib.org/reference/github-token.html" target="_blank" rel="noopener">&lt;code>gh_token_help()&lt;/code>&lt;/a> is a good way to assess your credential situation:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://usethis.r-lib.org/reference/github-token.html'>gh_token_help&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; ● GitHub host: &lt;span style='color: #0000BB;'>'https://github.com'&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; ● Host online: &lt;span style='color: #0000BB;'>TRUE&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; ● Personal access token for &lt;span style='color: #0000BB;'>'https://github.com'&lt;/span>&lt;span>: &lt;/span>&lt;span style='color: #0000BB;'>'&amp;lt;discovered&amp;gt;'&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>ℹ&lt;/span>&lt;span> Call &lt;/span>&lt;span style='color: #555555;'>`gh::gh_whoami()`&lt;/span>&lt;span> to see info about your token, e.g. the associated user&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>ℹ&lt;/span>&lt;span> To see or update the token, call &lt;/span>&lt;span style='color: #555555;'>`gitcreds::gitcreds_set()`&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span>&lt;span> If those results are OK, you are good go to!&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>ℹ&lt;/span>&lt;span> Read more in the &lt;/span>&lt;span style='color: #0000BB;'>'Managing Git(Hub) Credentials'&lt;/span>&lt;span> article:&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; https://usethis.r-lib.org/articles/articles/git-credentials.html&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can get even more diagnostic information with
&lt;a href="https://usethis.r-lib.org/reference/git_sitrep.html" target="_blank" rel="noopener">&lt;code>git_sitrep()&lt;/code>&lt;/a>.&lt;/p>
&lt;h3 id="finding-git-credentials">Finding Git credentials
&lt;a href="#finding-git-credentials">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>One of the reasons we switched to the gert package is that it generally discovers the same Git credentials as command line Git, for both the HTTPS and SSH protocols, even on Windows. If things &lt;em>still&lt;/em> go sideways, gert&amp;rsquo;s approach to credential finding is mercifully explicit and debuggable&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>This allows usethis to shed some of the workarounds we have needed in the past, to serve as a remedial &amp;ldquo;credential valet&amp;rdquo;. As a result, several functions and arguments are no longer needed and have been deprecated:&lt;/p>
&lt;ul>
&lt;li>Deprecated functions:
&lt;ul>
&lt;li>
&lt;a href="https://usethis.r-lib.org/reference/git_credentials.html" target="_blank" rel="noopener">&lt;code>use_git_credentials()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://usethis.r-lib.org/reference/git_credentials.html" target="_blank" rel="noopener">&lt;code>git_credentials()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://usethis.r-lib.org/reference/usethis-defunct.html" target="_blank" rel="noopener">&lt;code>github_token()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Functions with (deprecated arguments):
&lt;ul>
&lt;li>
&lt;a href="https://usethis.r-lib.org/reference/create_from_github.html" target="_blank" rel="noopener">&lt;code>create_from_github()&lt;/code>&lt;/a> (&lt;code>auth_token&lt;/code>, &lt;code>credentials&lt;/code>)&lt;/li>
&lt;li>
&lt;a href="https://usethis.r-lib.org/reference/use_github.html" target="_blank" rel="noopener">&lt;code>use_github()&lt;/code>&lt;/a> (&lt;code>auth_token&lt;/code>, &lt;code>credentials&lt;/code>)&lt;/li>
&lt;li>
&lt;a href="https://usethis.r-lib.org/reference/use_github_links.html" target="_blank" rel="noopener">&lt;code>use_github_links()&lt;/code>&lt;/a> (&lt;code>host&lt;/code>, &lt;code>auth_token&lt;/code>)&lt;/li>
&lt;li>
&lt;a href="https://usethis.r-lib.org/reference/use_github_labels.html" target="_blank" rel="noopener">&lt;code>use_github_labels()&lt;/code>&lt;/a>,
&lt;a href="https://usethis.r-lib.org/reference/use_github_labels.html" target="_blank" rel="noopener">&lt;code>use_tidy_labels()&lt;/code>&lt;/a> (&lt;code>repo_spec&lt;/code>, &lt;code>host&lt;/code>, &lt;code>auth_token&lt;/code>)&lt;/li>
&lt;li>
&lt;a href="https://usethis.r-lib.org/reference/use_github_release.html" target="_blank" rel="noopener">&lt;code>use_github_release()&lt;/code>&lt;/a> (&lt;code>host&lt;/code>, &lt;code>auth_token&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>If you have any of these in your &lt;code>.Rprofile&lt;/code> or muscle memory, you can let go of that now. (We&amp;rsquo;ll say more about &lt;code>host&lt;/code>, &lt;code>repo_spec&lt;/code>, and &lt;code>auth_token&lt;/code> below.)&lt;/p>
&lt;h3 id="host-and-github-enterprise">Host and GitHub Enterprise
&lt;a href="#host-and-github-enterprise">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Many companies and universities run their own instance of GitHub, using a pro product called
&lt;a href="https://github.com/enterprise" target="_blank" rel="noopener">GitHub Enterprise&lt;/a> (GHE), that walks and talks just like github.com. It&amp;rsquo;s been frustrating that many usethis functions didn&amp;rsquo;t &lt;em>quite&lt;/em> work for GHE. We had partial support for GHE, by adding a &lt;code>host&lt;/code> argument to some functions, but that created new headaches around juggling personal access tokens.&lt;/p>
&lt;p>We&amp;rsquo;ve completely refactored the &amp;ldquo;GitHub host&amp;rdquo; logic in usethis and GHE should be fully supported now. In an existing repo, usethis consults the configured Git remotes, filters for remotes that smell like a GitHub deployment, and deduces the target &lt;code>host&lt;/code> and &lt;code>repo_spec&lt;/code>, where applicable. As a result, we&amp;rsquo;ve deprecated those arguments in several functions (listed above).&lt;/p>
&lt;p>In
&lt;a href="https://usethis.r-lib.org/reference/use_github.html" target="_blank" rel="noopener">&lt;code>use_github()&lt;/code>&lt;/a> and
&lt;a href="https://usethis.r-lib.org/reference/create_from_github.html" target="_blank" rel="noopener">&lt;code>create_from_github()&lt;/code>&lt;/a>, we still have a &lt;code>host&lt;/code> argument, but there are also other ways to specify the &lt;code>host&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>usethis no longer inserts its own opinion about the default &lt;code>host&lt;/code>. This means we no longer get in the way of the existing default behaviour of the gh package, which is to consult the &lt;code>GITHUB_API_URL&lt;/code> environment variable, if it is set. GitHub Enterprise users will probably want to lean heavily on this environment variable.&lt;/li>
&lt;li>A couple functions now accept a full URL as the &lt;code>repo_spec&lt;/code> and, if you do that, we discover the &lt;code>host&lt;/code> from the URL.&lt;/li>
&lt;/ul>
&lt;h4 id="give-me-your-full-urls">Give me your full URLs!
&lt;a href="#give-me-your-full-urls">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h4>&lt;p>The last point above is a nice quality-of-life improvement even when working on github.com. It means you can copy a URL straight from your browser and, as long as it points somewhere within the target repo, all will be well. For example, if you decide to fork-and-clone Matt Lincoln&amp;rsquo;s clipr package while perusing its issues, you can just copy the URL directly from your browser:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://usethis.r-lib.org/reference/create_from_github.html'>create_from_github&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"https://github.com/mdlincoln/clipr/issues"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; ℹ Defaulting to https Git protocol&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Setting `fork = TRUE`&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Creating '/Users/jenny/Desktop/clipr/'&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Forking 'mdlincoln/clipr'&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Cloning repo from 'https://github.com/jennybc/clipr.git' into '/Users/jenny/Desktop/clipr'&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Setting active project to '/Users/jenny/Desktop/clipr'&lt;/span>
&lt;span class='c'>#&amp;gt; ℹ Default branch is 'master'&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Adding 'upstream' remote: 'https://github.com/mdlincoln/clipr.git'&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Pulling changes from 'upstream/master' (default branch of source repo)&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Setting remote tracking branch for local 'master' branch to 'upstream/master'&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>URLs are supported by the &lt;code>repo_spec&lt;/code> argument of
&lt;a href="https://usethis.r-lib.org/reference/create_from_github.html" target="_blank" rel="noopener">&lt;code>create_from_github()&lt;/code>&lt;/a> and
&lt;a href="https://usethis.r-lib.org/reference/use_tidy_thanks.html" target="_blank" rel="noopener">&lt;code>use_tidy_thanks()&lt;/code>&lt;/a>. In addition to browser URLs, you can also use HTTPS and SSH Git remote URLs.&lt;/p>
&lt;h3 id="personal-access-tokens-pats">Personal access tokens (PATs)
&lt;a href="#personal-access-tokens-pats">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>This diagram shows the different ways that usethis might interact with GitHub:&lt;/p>
&lt;ol>
&lt;li>As a Git server, via gert, using either the HTTPS or SSH protocol&lt;/li>
&lt;li>As a web service, via gh, using HTTPS (and OAuth)&lt;/li>
&lt;/ol>
&lt;div class="highlight">
&lt;p>&lt;img src="pat-kills-both-birds.png" width="80%" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>The cheerful orange ovals indicate why we recommend HTTPS as your Git protocol: Once you set up your GitHub personal access token (PAT), usethis, gert, and gh (and possibly other packages) will all be able to find and use this common credential. (If you are an SSH person, you need to set up a GitHub PAT for work that involves the GitHub API, in addition to the SSH keys needed for Git work.)&lt;/p>
&lt;p>You may have noticed that command line Git remembers your HTTPS credentials, after you&amp;rsquo;ve provided them once&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. Git has an internal interface for storing and retrieving HTTPS credentials from system-specific helpers, such as the macOS Keychain and Windows Credential Manager. This interface is exposed for use by other applications in the
&lt;a href="https://git-scm.com/docs/git-credential" target="_blank" rel="noopener">&lt;code>git credential&lt;/code>&lt;/a> utility Both gert and gh (and, therefore, usethis) now use this utility to retrieve a PAT suitable for a specific &lt;code>host&lt;/code>. It is now possible to attain Git credential nirvana, where command line Git, RStudio, and all your favourite R packages are working with the same credentials.&lt;/p>
&lt;p>In the previous section, we explained how the &lt;code>host&lt;/code> is now automatically discovered from Git remotes. And we&amp;rsquo;ve just explained that we now look up the PAT based on the &lt;code>host&lt;/code>. Together, this means usethis no longer needs any explicit PAT management and finishes explaining why so many credential-, token-, and host-related functions and arguments have been deprecated. This is also a major reason why GitHub Enterprise &amp;ldquo;just works&amp;rdquo; now.&lt;/p>
&lt;p>The new connection to the system-specific Git credential store also means we no longer need to set &lt;code>GITHUB_PAT&lt;/code> in our &lt;code>.Renviron&lt;/code> startup files. It is a better security practice anyway to avoid storing such secrets in a plain text file, if better alternatives exist.&lt;/p>
&lt;pre>&lt;code>WUT=yo
GITHUB_PAT=xyz # &amp;lt;-- WE SUGGEST YOU REMOVE THIS LINE FROM .Renviron
OTHER_WEB_SERVICE=super-secret-very-powerful-token
&lt;/code>&lt;/pre>
&lt;p>The &lt;code>host&lt;/code>-specific PAT is now retrieved from the Git credential store upon first need. Note that the PAT &lt;strong>is&lt;/strong> still cached in an environment variable for reuse during the remainder of the current R session.&lt;/p>
&lt;p>Our full recommendations for getting and configuring a PAT are in the new vignette
&lt;a href="https://usethis.r-lib.org/articles/articles/git-credentials.html" target="_blank" rel="noopener">Managing Git(Hub) Credentials&lt;/a>.&lt;/p>
&lt;h3 id="git-protocol">Git protocol
&lt;a href="#git-protocol">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>When usethis configures a new Git remote, it must choose a protocol, either HTTPS or SSH. The new default in this situation is HTTPS, because as we explained above, we think HTTPS is the best choice for most users and projects.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://usethis.r-lib.org/reference/git_protocol.html'>git_protocol&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>ℹ&lt;/span>&lt;span> Defaulting to https Git protocol&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "https"&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>As always, you can specify the default protocol for a single session with
&lt;a href="https://usethis.r-lib.org/reference/git_protocol.html" target="_blank" rel="noopener">&lt;code>use_git_protocol()&lt;/code>&lt;/a> or for all sessions via the &lt;code>usethis.protocol&lt;/code> option. Those who prefer SSH may want to set this option in &lt;code>.Rprofile&lt;/code> going forward.&lt;/p>
&lt;h2 id="pull-request-helpers">Pull request helpers
&lt;a href="#pull-request-helpers">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The team that maintains the tidyverse and r-lib packages makes heavy use of GitHub pull requests for managing internal and external contributions&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>. The &lt;code>pr_*()&lt;/code> family of functions supports pull request workflows, for maintainers and contributors. This family has gained a couple of new functions and some improvements to existing functions:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://usethis.r-lib.org/reference/pull-requests.html" target="_blank" rel="noopener">&lt;code>pr_resume()&lt;/code>&lt;/a> resumes work on an existing local PR branch. It can be called argument-less, to select a branch interactively.&lt;/p>
&lt;pre>&lt;code>&amp;gt; pr_resume()
ℹ No branch specified ... looking up local branches and associated PRs
Which branch do you want to checkout? (0 to exit)
1: avalcarcel9-add_use_author --&amp;gt; #833 ('@avalcarcel9'): Add use author
2: latex-hell
3: holder
4: patch-for-withr
Selection:
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://usethis.r-lib.org/reference/pull-requests.html" target="_blank" rel="noopener">&lt;code>pr_fetch()&lt;/code>&lt;/a> and
&lt;a href="https://usethis.r-lib.org/reference/pull-requests.html" target="_blank" rel="noopener">&lt;code>pr_view()&lt;/code>&lt;/a> now present a similar interactive choice, when the target PR is not specified or implied.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://usethis.r-lib.org/reference/pull-requests.html" target="_blank" rel="noopener">&lt;code>pr_forget()&lt;/code>&lt;/a> abandons a PR you initiated locally or fetched from GitHub. It only does local clean up and will never delete a remote branch or close a PR.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Other &lt;code>pr_*()&lt;/code> functions have nice little improvements, so heavy users should definitely read the
&lt;a href="https://usethis.r-lib.org/news/index.html#changes-to-git-github-functionality" target="_blank" rel="noopener">full release notes&lt;/a>.&lt;/p>
&lt;h2 id="other-goodies">Other goodies
&lt;a href="#other-goodies">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The &lt;code>use_*_license()&lt;/code> functions have gotten a general overhaul and also now work for projects, not just for packages. This was part of a bigger effort related to re-licensing some tidyverse/r-lib packages and updating the
&lt;a href="https://r-pkgs.org/license.html" target="_blank" rel="noopener">licensing chapter of R Packages&lt;/a> for its future second edition.&lt;/p>
&lt;p>
&lt;a href="https://usethis.r-lib.org/reference/browse-this.html" target="_blank" rel="noopener">&lt;code>browse_package()&lt;/code>&lt;/a> and
&lt;a href="https://usethis.r-lib.org/reference/browse-this.html" target="_blank" rel="noopener">&lt;code>browse_project()&lt;/code>&lt;/a> are new additions to the &lt;code>browse_*()&lt;/code> family that let the user choose from a list of URLs derived from local Git remotes and DESCRIPTION (local or possibly on CRAN). Implementing these reminded us of how handy the existing &lt;code>browse_*()&lt;/code> functions are!&lt;/p>
&lt;pre>&lt;code>&amp;gt; browse_package()
Which URL do you want to visit? (0 to exit)
1: https://github.com/r-lib/usethis ('origin' remote)
2: https://github.com/avalcarcel9/usethis ('avalcarcel9' remote)
3: https://usethis.r-lib.org (URL field in DESCRIPTION)
4: https://github.com/r-lib/usethis (URL field in DESCRIPTION)
5: https://github.com/r-lib/usethis/issues (BugReports field in DESCRIPTION)
Selection: 0
&amp;gt; browse_package(&amp;quot;gert&amp;quot;)
Which URL do you want to visit? (0 to exit)
1: https://docs.ropensci.org/gert/ (URL field in DESCRIPTION)
2: https://github.com/r-lib/gert (URL field in DESCRIPTION)
3: https://libgit2.org (URL field in DESCRIPTION)
4: https://github.com/r-lib/gert/issues (BugReports field in DESCRIPTION)
Selection: 0
&amp;gt; browse_cran(&amp;quot;cowsay&amp;quot;)
✓ Opening URL 'https://cran.r-project.org/package=cowsay'
&amp;gt; browse_github(&amp;quot;cpp11&amp;quot;)
✓ Opening URL 'https://github.com/r-lib/cpp11'
&lt;/code>&lt;/pre>
&lt;p>Here&amp;rsquo;s a sampler of other new features:&lt;/p>
&lt;ul>
&lt;li>A default Git branch named &lt;code>main&lt;/code> now works.
&lt;a href="https://usethis.r-lib.org/reference/git_branch_default.html" target="_blank" rel="noopener">&lt;code>git_branch_default()&lt;/code>&lt;/a> is a new function that tries to discover the default branch from the local or remote Git repo. Internally, it is used everywhere that we previously assumed a default branch named &lt;code>master&lt;/code>.&lt;/li>
&lt;li>
&lt;a href="https://usethis.r-lib.org/reference/use_github_pages.html" target="_blank" rel="noopener">&lt;code>use_github_pages()&lt;/code>&lt;/a> and
&lt;a href="https://usethis.r-lib.org/reference/tidyverse.html" target="_blank" rel="noopener">&lt;code>use_tidy_pkgdown()&lt;/code>&lt;/a> are great for turning on GitHub Pages and for using GitHub Actions to build and deploy a pkgdown site.&lt;/li>
&lt;li>usethis knows that RStudio &amp;gt;= 1.3 stores user preferences in a file, which means that
&lt;a href="https://usethis.r-lib.org/reference/use_blank_slate.html" target="_blank" rel="noopener">&lt;code>use_blank_slate()&lt;/code>&lt;/a> can be used to opt in to the &amp;ldquo;never save to or restore &lt;code>.RData&lt;/code>&amp;rdquo; lifestyle, globally, for a user.&lt;/li>
&lt;/ul>
&lt;p>For a full list of changes, see the
&lt;a href="https://usethis.r-lib.org/news/index.html#usethis-2-0-0-2020-12-10" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;re especially grateful to
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">Jeroen Ooms&lt;/a> and
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">Gábor Csárdi&lt;/a> for a great deal of behind-the-scenes work in credentials, gert, gh, and gitcreds. This version of usethis would not be possible without coordinated development and CRAN releases across these five packages.&lt;/p>
&lt;p>A big thanks to everyone who helped with this release by reporting bugs, discussing issues, and contributing code:
&lt;a href="https://github.com/albersonmiranda" target="_blank" rel="noopener">@albersonmiranda&lt;/a>,
&lt;a href="https://github.com/andrader" target="_blank" rel="noopener">@andrader&lt;/a>,
&lt;a href="https://github.com/arashHaratian" target="_blank" rel="noopener">@arashHaratian&lt;/a>,
&lt;a href="https://github.com/Athanasiamo" target="_blank" rel="noopener">@Athanasiamo&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/cstepper" target="_blank" rel="noopener">@cstepper&lt;/a>,
&lt;a href="https://github.com/dmenne" target="_blank" rel="noopener">@dmenne&lt;/a>,
&lt;a href="https://github.com/friep" target="_blank" rel="noopener">@friep&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/ijlyttle" target="_blank" rel="noopener">@ijlyttle&lt;/a>,
&lt;a href="https://github.com/jamesmyatt" target="_blank" rel="noopener">@jamesmyatt&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jtr13" target="_blank" rel="noopener">@jtr13&lt;/a>,
&lt;a href="https://github.com/KoderKow" target="_blank" rel="noopener">@KoderKow&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/malcolmbarrett" target="_blank" rel="noopener">@malcolmbarrett&lt;/a>,
&lt;a href="https://github.com/maurolepore" target="_blank" rel="noopener">@maurolepore&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/mrcaseb" target="_blank" rel="noopener">@mrcaseb&lt;/a>,
&lt;a href="https://github.com/vinhtantran" target="_blank" rel="noopener">@vinhtantran&lt;/a>, and
&lt;a href="https://github.com/whtns" target="_blank" rel="noopener">@whtns&lt;/a>.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>gert uses a dedicated, standalone package: &lt;a href="https://docs.ropensci.org/credentials/">https://docs.ropensci.org/credentials/&lt;/a> &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>In our experience, on both macOS and Windows, recent Git versions come with credential caching that works out-of-the-box. If this is not your experience, it&amp;rsquo;s a good reason to update Git. &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>In 2019, we handled over 6,000 pull requests in the &amp;gt;180 public package repos owned by the GitHub organisations r-dbi, r-lib, rstudio, tidymodels, and tidyverse. &lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Self-cleaning test fixtures</title><link>https://www.tidyverse.org/blog/2020/04/self-cleaning-test-fixtures/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/04/self-cleaning-test-fixtures/</guid><description>&lt;p>&lt;em>Adapted from an internal presentation to the tidyverse team, which tells you something about the target reader. The primary audience for this post is R programmers and, especially, package developers. The problems identified and solved here are pretty niche! People who are mostly interested in R as a data analysis tool may not have direct use for this material. But the post offers something for anyone curious about the hazards of side effects and the various ways we can leave the world as you found it.&lt;/em>&lt;/p>
&lt;h2 id="test-hygiene">Test hygiene
&lt;a href="#test-hygiene">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;blockquote>
&lt;p>Take nothing but memories, leave nothing but footprints.&lt;/p>
&lt;/blockquote>
&lt;p>― Chief Si&amp;rsquo;ahl&lt;/p>
&lt;p>Ideally a test should leave the world exactly as it found it. Examples of things you might do inside a test and, therefore, need to undo:&lt;/p>
&lt;ul>
&lt;li>Create a file or directory&lt;/li>
&lt;li>Create a resource on an external system&lt;/li>
&lt;li>Set an R option&lt;/li>
&lt;li>Set an environment variable&lt;/li>
&lt;li>Change working directory&lt;/li>
&lt;li>Change an aspect of the tested package&amp;rsquo;s state&lt;/li>
&lt;/ul>
&lt;p>Scrupulous attention to cleanup is more than just courtesy or being fastidious. It is also self-serving. The state of the world after test &lt;code>i&lt;/code> is the starting state for test &lt;code>i + 1&lt;/code>. Tests that change state willy-nilly eventually end up interfering with each other in ways that can be very difficult to debug. Most tests are written with an implicit assumption about the starting state, usually whatever &lt;em>tabula rasa&lt;/em> means for the target domain of your package. If you accumulate enough sloppy tests, you will eventually find yourself asking the programming equivalent of questions like &amp;ldquo;Who forgot to turn off the oven?&amp;rdquo; and &amp;ldquo;Who didn&amp;rsquo;t clean up after the dog?&amp;quot;.&lt;/p>
&lt;p>First, we lay some foundations that aren&amp;rsquo;t obviously related to tests, but just trust that we&amp;rsquo;ll get there eventually.&lt;/p>
&lt;h2 id="the-onexit-pattern">The &lt;code>on.exit()&lt;/code> pattern
&lt;a href="#the-onexit-pattern">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you want to clean up after yourself, how should you actually do it?&lt;/p>
&lt;p>The first function to know about is base R&amp;rsquo;s
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a>. You use it inside a function. In the function body, every time you do something that should be undone &lt;strong>on exit&lt;/strong>, you immediately register the cleanup code with &lt;code>on.exit(expr, add = TRUE)&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>Here&amp;rsquo;s a &lt;code>sloppy()&lt;/code> function that prints a number with a specific number of significant digits, by adjusting an R option.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">sloppy&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.141593&lt;/span>
&lt;span class="nf">sloppy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">pi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.1&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notice how &lt;code>pi&lt;/code> prints differently before and after the call to &lt;code>sloppy()&lt;/code>. Calling &lt;code>sloppy()&lt;/code> has a side effect: it changes the &lt;code>digits&lt;/code> option globally, not just within its own scope of operations. This is what we want to avoid.&lt;/p>
&lt;p>&lt;em>Don&amp;rsquo;t worry, I&amp;rsquo;m restoring global state (specifically, the &lt;code>digits&lt;/code> option) behind the scenes here.&lt;/em>&lt;/p>
&lt;p>Here&amp;rsquo;s how to do better with &lt;code>on.exit()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">neat&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">op&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">op&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.141593&lt;/span>
&lt;span class="nf">neat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">pi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.1&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.141593&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The use of &lt;code>on.exit()&lt;/code> ensures that &lt;code>neat()&lt;/code> leaves &lt;code>digits&lt;/code> the way that it found it. &lt;code>on.exit()&lt;/code> also works when you exit the function abnormally, i.e. due to error. This is why it&amp;rsquo;s a better choice than any do-it-yourself solution.&lt;/p>
&lt;p>But I promised to talk about tests! Never fear, &lt;code>on.exit()&lt;/code> also works inside a test.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testthat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.718282&lt;/span>
&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;on.exit() works in a test&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">op&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">op&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">out&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2.7&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># printing just for the benefit of the reader&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;2.7&amp;#34;&lt;/span>
&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.718282&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>on.exit()&lt;/code> is a very useful function and provides enough inspiration for an entire package: withr (
&lt;a href="http://withr.r-lib.org" target="_blank" rel="noopener">withr.r-lib.org&lt;/a>), which is a Swiss army knife for managing state in very flexible ways. It&amp;rsquo;s what I usually use, in functions and tests, for situations like that above.&lt;/p>
&lt;p>&lt;em>For more background, the section about
&lt;a href="https://adv-r.hadley.nz/functions.html#on-exit" target="_blank" rel="noopener">Exit handlers&lt;/a> in Advanced R is a good reference. The
&lt;a href="https://github.com/r-lib/cleancall#readme" target="_blank" rel="noopener">cleancall package&lt;/a> addresses a similar problem, but in the C code of an R package. cleancall is introduced in the blog post
&lt;a href="https://www.tidyverse.org/blog/2019/05/resource-cleanup-in-c-and-the-r-api/" target="_blank" rel="noopener">Resource Cleanup in C and the R API&lt;/a>.&lt;/em>&lt;/p>
&lt;h2 id="withrdefer">&lt;code>withr::defer()&lt;/code>
&lt;a href="#withrdefer">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>withr::defer()&lt;/code> is a more general version of &lt;code>on.exit()&lt;/code>. It can run cleanup for any environment, but defaults to the environment it was called in. Therefore, it works like &lt;code>on.exit()&lt;/code> inside a function &amp;ndash; an extremely important special case &amp;ndash; but the added flexibility means you can use it in more situations.&lt;/p>
&lt;p>Below I compare &lt;code>on.exit()&lt;/code> and &lt;code>withr::defer()&lt;/code> and I put the code inside &lt;code>local()&lt;/code>, instead of inside a function. This is meant to reinforce that cleanup can be relevant beyond function execution environments. It also gives you another tool to play with, in addition to toy functions and tests, in your own explorations of how to manage scope.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">withr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">local&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;last&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># this clobbers `print(&amp;#34;first&amp;#34;)` :(&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;last&amp;#34;&lt;/span>
&lt;span class="nf">local&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;last&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;first&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;last&amp;#34;&lt;/span>
&lt;span class="nf">local&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">after&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;last&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">after&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;last&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;first&amp;#34;&lt;/span>
&lt;span class="nf">local&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nf">defer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">defer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;last&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;last&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;first&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This showcases the nice ergonomics of &lt;code>defer()&lt;/code>: each call &lt;em>adds&lt;/em> to the list of deferred tasks (vs. replaces) and, by default, adds to the &lt;em>front&lt;/em> of the stack (vs. the back). As you&amp;rsquo;ll see below, this turns out to matter in most real world usage&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;h2 id="withrlocal_">&lt;code>withr::local_*()&lt;/code>
&lt;a href="#withrlocal_">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>on.exit()&lt;/code> usage has a very predictable, slightly clunky pattern. In &lt;code>neat()&lt;/code>, it looks like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">op&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">op&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first statement accomplishes two things at once: it sets the &lt;code>digits&lt;/code> option and captures its original value in &lt;code>op&lt;/code>. The second statement schedules the restoration of &lt;code>digits&lt;/code>. This order of operations is encouraged by the design of &lt;code>options()&lt;/code>, which returns the original values when it&amp;rsquo;s used as a setter.&lt;/p>
&lt;p>Here is the more general (and possibly slightly safer) approach: First, capture the current state. Then, immediately schedule the eventual restoration of this original state, so that this is arranged before any additional calls are made that could exit, e.g. throw an error. Last, make the desired state change.&lt;/p>
&lt;p>What if such a maneuver happens all over your package and you want to write a helper?&lt;/p>
&lt;p>You can&amp;rsquo;t wrap &lt;code>on.exit()&lt;/code> in your own helpers, because there&amp;rsquo;s no way to reach back up into the correct parent frame and schedule cleanup there. But with &lt;code>defer()&lt;/code>, we can! Here is such a custom helper, called &lt;code>local_digits()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">local_digits&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sig_digits&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">parent.frame&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">op&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">defer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">op&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can use it to keep any manipulation of &lt;code>digits&lt;/code> local to a test (or function).&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.718282&lt;/span>
&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;withr lets us write custom helpers for local state manipulation&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">local_digits&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">20&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.7182818284590450908&lt;/span>
&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.718282&lt;/span>
&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;we can even make multiple calls to local_digits()&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">local_digits&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">local_digits&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">local_digits&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.72&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.7183&lt;/span>
&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.718282&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The ability to write &lt;code>on.exit()&lt;/code>-like functions, customized to your own needs, is very empowering. However, you may not even need to. There are certain state changes that come up over and over again, for all of us. These are pre-implemented in withr&amp;rsquo;s &lt;code>local_*()&lt;/code> family of functions. A few examples:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Do / undo this&lt;/th>
&lt;th>withr function&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Create a file&lt;/td>
&lt;td>&lt;code>local_file()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Set an R option&lt;/td>
&lt;td>&lt;code>local_options()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Set an environment variable&lt;/td>
&lt;td>&lt;code>local_envvar()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Change working directory&lt;/td>
&lt;td>&lt;code>local_dir()&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&amp;ldquo;Local&amp;rdquo; here refers to the fact that the state change persists only for the lifetime of an associated environment, usually the execution environment of a function or test.&lt;/p>
&lt;p>We can use &lt;code>withr::local_options()&lt;/code> to write yet another version of &lt;code>neat()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">neater&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">local_options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.141593&lt;/span>
&lt;span class="nf">neater&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">pi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.14&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.141593&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each &lt;code>local_*()&lt;/code> function has a companion &lt;code>with_()&lt;/code> function, which is a nod to
&lt;a href="https://rdrr.io/r/base/with.html" target="_blank" rel="noopener">&lt;code>with()&lt;/code>&lt;/a>. We won&amp;rsquo;t use the &lt;code>with_*()&lt;/code> functions here, but you can learn more about them at
&lt;a href="http://withr.r-lib.org" target="_blank" rel="noopener">withr.r-lib.org&lt;/a>.&lt;/p>
&lt;h2 id="test-fixtures">Test fixtures
&lt;a href="#test-fixtures">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Testing is often demonstrated with cute little tests and functions where all the inputs and expected results can be inlined. But in real packages, things aren&amp;rsquo;t always so simple. The main functions in your package probably aren&amp;rsquo;t &amp;ldquo;1 number in, 1 number out&amp;rdquo;. They might require more exotic objects or very specific circumstances. Changing state might be the entire purpose of a function! Now what?&lt;/p>
&lt;p>&lt;em>Obligatory caveat: If you find it hard to write tests, this may be the universe telling you that your package has some design problems. Maybe you&amp;rsquo;ve somehow ended up with a small number of monster functions, with oodles of arguments and complex conditional logic, that can do everything from scramble eggs to change a lightbulb. The best move in this case may be to break things up into smaller and simpler functions. And those will be easier to test. End caveat.&lt;/em>&lt;/p>
&lt;p>Tricky test situations can&amp;rsquo;t always be eliminated by better package design. Let&amp;rsquo;s assume you&amp;rsquo;ve got a reasonable design and you&amp;rsquo;re still facing some test dilemmas. Unless you find a way to make writing tests as pleasant as possible, you won&amp;rsquo;t write nearly enough of them.&lt;/p>
&lt;p>One technique I&amp;rsquo;ve found useful is what I&amp;rsquo;ll call a &lt;strong>self-cleaning test fixture&lt;/strong>.&lt;/p>
&lt;h3 id="usethis-and-create_local_package">usethis and &lt;code>create_local_package()&lt;/code>
&lt;a href="#usethis-and-create_local_package">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The usethis package (
&lt;a href="https://usethis.r-lib.org" target="_blank" rel="noopener">usethis.r-lib.org&lt;/a>) provides functions for looking after the files and folders in an R project, especially an R package. These function names should give you a vague sense of what usethis does: &lt;code>create_package()&lt;/code>, &lt;code>use_vignette()&lt;/code>, &lt;code>use_testthat()&lt;/code>, &lt;code>use_github()&lt;/code>. Many of these functions only make sense in the context of an R package. That means in order to test them, we have to be working inside an R package. And they can&amp;rsquo;t all target some persistent Frankenpackage.&lt;/p>
&lt;p>We need a way to quickly spin up a minimal package, in the session temp directory. Test some functions against it. Then destroy it. Without a lot of fuss. We need a &lt;strong>local package&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">create_local_package&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">file_temp&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">parent.frame&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">old_project&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">proj_get_&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># --- Record starting state --- &lt;/span>
&lt;span class="n">withr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">defer&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="c1"># --- Defer The Undoing --- &lt;/span>
&lt;span class="nf">proj_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">old_project&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">force&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># restore active usethis project (-C)&lt;/span>
&lt;span class="nf">setwd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">old_project&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># restore working directory (-B)&lt;/span>
&lt;span class="n">fs&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">dir_delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># delete the temporary package (-A)&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="n">envir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># --- Do The Doing --- &lt;/span>
&lt;span class="nf">create_package&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">open&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># create new folder and package (A)&lt;/span>
&lt;span class="nf">setwd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># change working directory (B)&lt;/span>
&lt;span class="nf">proj_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># switch to new usethis project (C)&lt;/span>
&lt;span class="nf">invisible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s a simplified version of the test helper&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup> we use in over 170 tests in usethis. Here&amp;rsquo;s an example of how &lt;code>create_local_package()&lt;/code> is used in a test:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;use_roxygen_md() adds DESCRIPTION fields&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">skip_if_not_installed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;roxygen2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">pkg&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">create_local_package&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;------------------------ HERE IT IS!!!!!&lt;/span>
&lt;span class="nf">use_roxygen_md&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">expect_identical&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">desc&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">desc_get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Roxygen&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pkg&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Roxygen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;list(markdown = TRUE)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nf">expect_true&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">desc&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">desc_has_fields&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;RoxygenNote&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pkg&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">expect_true&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">uses_roxygen_md&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This test checks that &lt;code>usethis::use_roxygen_md()&lt;/code> does the setup necessary to use roxygen2 in a package and, specifically, to write documentation with markdown syntax. All 3 expectations consult the DESCRIPTION file, directly or indirectly. So it&amp;rsquo;s very convenient that &lt;code>create_local_package()&lt;/code> creates a minimal package, with a valid DESCRIPTION file, for us to test against. And when the test is done &amp;ndash; poof! &amp;ndash; the package is gone.&lt;/p>
&lt;p>The setup and teardown done by &lt;code>create_local_package()&lt;/code> would be aggravating and repetitive to inline in each individual test. The tests would be dominated by this code, making them less readable. If we need to tweak something, we&amp;rsquo;d have to do it in hundreds of places. This sort of friction has a real chilling effect on one&amp;rsquo;s enthusiasm for writing and maintaining tests.&lt;/p>
&lt;p>A few more observations about the self-cleaning test fixture pattern:&lt;/p>
&lt;ul>
&lt;li>Every action has an equal and opposite reaction. Each individual &amp;ldquo;doing&amp;rdquo;
action (A) has a matching, deferred &amp;ldquo;undoing&amp;rdquo; reaction (-A).&lt;/li>
&lt;li>We work in this order (usually and preferably):
&lt;ul>
&lt;li>Record existing state.&lt;/li>
&lt;li>Describe the eventual cleanup.&lt;/li>
&lt;li>Make the desired state change.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The undoing usually unfolds in the opposite order from the doing (&amp;ldquo;last in,
first out&amp;rdquo;). This is almost always OK and it is often absolutely necessary.
In &lt;code>create_local_package()&lt;/code>:
&lt;ul>
&lt;li>Doing: We must create directory &lt;code>dir&lt;/code> (A) before we can make it the
working directory (B). (A) must come before (B).&lt;/li>
&lt;li>Undoing: We must restore the original working directory (-B) before
we can delete &lt;code>dir&lt;/code> (-A). (-B) must come before (-A). We can&amp;rsquo;t delete
&lt;code>dir&lt;/code> while it&amp;rsquo;s still the working directory!&lt;/li>
&lt;li>Think of it like a stack of plates: the last plate onto the stack has to
be the first one off.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Test fixture&lt;/strong> is a pre-existing term in the software engineering world (and beyond):&lt;/p>
&lt;blockquote>
&lt;p>A test fixture is something used to consistently test some item, device, or piece of software.&lt;/p>
&lt;/blockquote>
&lt;p>&amp;ndash;
&lt;a href="https://en.wikipedia.org/wiki/Test_fixture" target="_blank" rel="noopener">Wikipedia&lt;/a>&lt;/p>
&lt;p>When I first heard &amp;ldquo;test fixture&amp;rdquo; (from Gábor Csárdi, I think), a light bulb clicked on in my head. This was something I &lt;em>knew&lt;/em> I needed and had even implemented in various half-baked ways. But I hadn&amp;rsquo;t identified it as A Real Thing, with specific goals and design principles. It&amp;rsquo;s a great example of
&lt;a href="https://blogs.scientificamerican.com/observations/unknown-unknowns-the-problem-of-hypocognition/" target="_blank" rel="noopener">hypocognition&lt;/a>. Learning the term &amp;ldquo;test fixture&amp;rdquo; gave me a place to hang this knowledge and allowed me to more quickly identify situations where a test fixture was needed.&lt;/p>
&lt;h3 id="googlesheets4-and-local_ss">googlesheets4 and &lt;code>local_ss()&lt;/code>
&lt;a href="#googlesheets4-and-local_ss">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The googlesheets4 package (
&lt;a href="https://googlesheets4.tidyverse.org" target="_blank" rel="noopener">googlesheets4.tidyverse.org&lt;/a>) provides an R interface to the Google Sheets API. A typical test needs access to a Google Sheet, constructed to have very specific properties and the test may even need to modify the Sheet&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>I need a way to quickly create a Sheet, possibly with very specific initial worksheets, cell data, locale, time zone, etc. Test some functions against it. Then trash it. I need a &lt;em>local spreadsheet&lt;/em>.&lt;/p>
&lt;p>Here&amp;rsquo;s a simplified version of the helper &lt;code>local_ss()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">local_ss&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">parent.frame&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">existing&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">gs4_find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">nrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">existing&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">stop_glue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;A spreadsheet named {sq(name)} already exists.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">withr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">defer&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="n">trash_me&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">gs4_find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">googledrive&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">drive_trash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">trash_me&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="n">envir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">gs4_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Even though the Sheets API is very file-ID-oriented, I go out of my way to work here via Sheet name. I bring this up to illustrate another point: you can also use a helper like this to rationalize your development workflow.&lt;/p>
&lt;p>At first, it feels like &lt;code>local_ss()&lt;/code> should create a new Sheet, store its ID, and then schedule it for deletion. But reality is more messy. As I develop a function and its tests, my experimentation can leave behind several instances of a test Sheet (yes, on Drive, you can have several files with the same name!). This leads to a very cluttered and confusing situation in the test account, requiring a periodic &amp;ldquo;search and destroy&amp;rdquo; mission for zombie test Sheets. Now my helper immediately alerts me to this problem and applies constant pressure to keep things neat and tidy.&lt;/p>
&lt;p>If you keep stubbing your toe in a particular way as you work on your package, zoom out and consider if you can design the problem away by adjusting your workflow. The helper that creates a self-cleaning test fixture is great place to apply this sort of leverage.&lt;/p>
&lt;h2 id="defer-on-the-global-environment">&lt;code>defer()&lt;/code> on the global environment
&lt;a href="#defer-on-the-global-environment">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I conclude with one more story about workflow. We&amp;rsquo;ve talked about two main functions for registering deferred events: base R&amp;rsquo;s &lt;code>on.exit()&lt;/code> and &lt;code>withr::defer()&lt;/code>. Part of what &lt;code>withr::defer()&lt;/code> offers over &lt;code>on.exit()&lt;/code> is the ability to defer events on &lt;em>any&lt;/em> environment. But there was still a big exception: the global environment.&lt;/p>
&lt;p>Until quite recently, here&amp;rsquo;s what happened if you called &lt;code>defer()&lt;/code> in an interactive R session&lt;sup id="fnref:5">&lt;a href="#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">withr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">defer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hi&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Error in withr::defer(print(&amp;#34;hi&amp;#34;)):&lt;/span>
&lt;span class="c1">#&amp;gt; attempt to defer event on global environment&lt;/span>
&lt;span class="nf">packageVersion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;withr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#39;2.1.2&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Frankly, this makes a lot of sense. Deferred events are triggered when an environment goes out of scope. &lt;code>on.exit()&lt;/code> and &lt;code>defer()&lt;/code> are meant to be used in an ephemeral environment, like a function execution environment. Deferring events on the global environment is pretty weird.&lt;/p>
&lt;p>But what about your interactive development of functions and tests? Every time you hit a call to &lt;code>defer()&lt;/code> or &lt;code>local_*()&lt;/code>, that code fails to execute. You&amp;rsquo;re forced to develop your logic at arm&amp;rsquo;s length or implement the intent of the &lt;code>local_*()&lt;/code> calls manually. If you&amp;rsquo;re doing quite a bit of work via &lt;code>local_*()&lt;/code> or &lt;code>on.exit()&lt;/code>, this presents a problem. Basically, it&amp;rsquo;s harder to develop with functions that work one way inside a function, but another way in the global environment (or, worse, don&amp;rsquo;t work at all). &lt;code>substitute()&lt;/code> is another example of this.&lt;/p>
&lt;p>As of withr v2.2.0, you can &lt;code>defer()&lt;/code> events on the global environment, which means that &lt;code>local_*()&lt;/code> functions work too. This is still a pretty weird thing to do, which is why you get a message about how to trigger execution.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">withr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">packageVersion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;withr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#39;2.2.0&amp;#39;&lt;/span>
&lt;span class="nf">defer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hi&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Setting deferred event(s) on global environment.&lt;/span>
&lt;span class="c1">#&amp;gt; * Execute (and clear) with `deferred_run()`.&lt;/span>
&lt;span class="c1">#&amp;gt; * Clear (without executing) with `deferred_clear()`.&lt;/span>
&lt;span class="nf">deferred_run&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;hi&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the global environment isn&amp;rsquo;t perishable, like a test environment is, you have to call &lt;code>deferred_run()&lt;/code> explicitly to execute the deferred events. You can also clear them, without running, with &lt;code>deferred_clear()&lt;/code>.&lt;/p>
&lt;p>This new capability is especially handy with self-cleaning test fixtures, like &lt;code>create_local_package()&lt;/code> and &lt;code>local_ss()&lt;/code> shown above. Sometimes you have to change global state while developing tests, e.g. change working directory or create test Sheets. But now there&amp;rsquo;s a way to run the associated cleanup on demand.&lt;/p>
&lt;h2 id="recap">Recap
&lt;a href="#recap">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;ve demonstrated that it&amp;rsquo;s a problem to change state in a function or test. Obviously there are exceptions if, for example, that is the whole point of the function.&lt;/p>
&lt;p>The most common and recommended solution to this is to use &lt;code>on.exit()&lt;/code> to organize the necessary cleanup, i.e. restore the original state. However, &lt;code>on.exit()&lt;/code> has some inherent limitations.&lt;/p>
&lt;p>If this sort of setup/teardown happens frequently in the functions and tests in a package, it makes sense to write a custom helper. This function should follow the conventions of the &lt;code>local_*()&lt;/code> functions in withr and will presumably be built around &lt;code>withr::defer()&lt;/code>.&lt;/p>
&lt;p>There is some cost to using a custom &lt;code>local_*()&lt;/code> helper, as it is one more thing to maintain and that all contributors must understand. Consider whether the pros outweigh the cons when adding another layer of abstraction.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>It&amp;rsquo;s too bad &lt;code>add = TRUE&lt;/code> isn&amp;rsquo;t the default, because you almost always want this. Without it, each call to &lt;code>on.exit()&lt;/code> clobbers the effect of previous calls. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>Note: the &lt;code>after&lt;/code> argument of &lt;code>on.exit()&lt;/code> first appeared in R 3.5.0. &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;code>create_local_package()&lt;/code> is a test helper. The testthat package allows such things to be defined in &lt;code>tests/testthat/helper.R&lt;/code> and then makes them available within package tests. They are also loaded by &lt;code>devtools::load_all()&lt;/code>. &lt;code>tests/testthat/helper.R&lt;/code> is also a great place to define custom expectations. &lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>You might ask about mocking here, but I usually don&amp;rsquo;t embrace that heavily and, in any case, that is a topic for another day. &lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>For all practical purposes, you get the same result with &lt;code>on.exit()&lt;/code>. It&amp;rsquo;s just a silent no-op. &lt;a href="#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>roxygen2 7.1.0</title><link>https://www.tidyverse.org/blog/2020/03/roxygen2-7-1-0/</link><pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/03/roxygen2-7-1-0/</guid><description>&lt;p>We&amp;rsquo;re chuffed to announce the release of
&lt;a href="https://roxygen2.r-lib.org" target="_blank" rel="noopener">roxygen2 7.1.0&lt;/a>.
roxygen2 allows you to write specially formatted R comments that generate R documentation files (&lt;code>man/*.Rd&lt;/code>) and the &lt;code>NAMESPACE&lt;/code> file.
roxygen2 is used by over 8,800 CRAN packages.&lt;/p>
&lt;p>Install the latest version of roxygen2 with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;roxygen2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is a minor release, with many small improvements and bug fixes, and some new features.
This blog post discusses the most important changes. See the
&lt;a href="https://roxygen2.r-lib.org/news/index.html#roxygen2-7-1-0" target="_blank" rel="noopener">full changelog&lt;/a> for all changes.&lt;/p>
&lt;h2 id="roxygen2-meets-knitr">roxygen2 meets knitr
&lt;a href="#roxygen2-meets-knitr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We have been gradually improving roxygen2&amp;rsquo;s markdown support, and this release has an exciting new markdown feature as well.
Starting from roxygen2 7.1.0 you can write inline R code and markdown code fences directly in roxygen2 comments!
roxygen2 runs the R code and inserts its output into the documentation.&lt;/p>
&lt;h3 id="inline-r-code">Inline R code
&lt;a href="#inline-r-code">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>For running R code inline, use the usual markdown backticks, and prefix the code with &lt;code>r&lt;/code> and a space character.
roxygen2 interprets the rest of the text within backticks as R code, evaluates it, and replaces the backtick expression with its value.
After all such substitutions, the text of the whole tag is interpreted as markdown, as usual.&lt;/p>
&lt;p>For example, the following code inserts the date and the R version of the roxygen2 run.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1">#&amp;#39; roxygen2 created this manual page on `r Sys.Date()` using R version&lt;/span>
&lt;span class="c1">#&amp;#39; `r getRversion()`.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="code-blocks-fences">Code blocks (fences)
&lt;a href="#code-blocks-fences">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Markdown code blocks can be dynamic as well, if you use &lt;code>```{r}&lt;/code> to start them, just like in knitr documents.
roxygen evaluates the code, and (by default) both the code and the printed value of the expression will be inserted into the manual page.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1">#&amp;#39; ```{r}&lt;/span>
&lt;span class="c1">#&amp;#39; # This block of code will be evaluated&lt;/span>
&lt;span class="c1">#&amp;#39; summary(iris)&lt;/span>
&lt;span class="c1">#&amp;#39; ```&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Code blocks support knitr chunk options, e.g. to keep the output of several expressions together, you can specify &lt;code>results= &amp;quot;hold&amp;quot;&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1">#&amp;#39; ```{r results = &amp;#34;hold&amp;#34;}&lt;/span>
&lt;span class="c1">#&amp;#39; names(mtcars)&lt;/span>
&lt;span class="c1">#&amp;#39; nrow(mtcars)&lt;/span>
&lt;span class="c1">#&amp;#39; ```&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>By default plots create &lt;code>.png&lt;/code> files in the &lt;code>man/figures&lt;/code> directory. The file names are created from the chunk names:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1">#&amp;#39; ```{r r-cookbook-barplot}&lt;/span>
&lt;span class="c1">#&amp;#39; # https://r-graphics.org/recipe-distribution-basic-hist&lt;/span>
&lt;span class="c1">#&amp;#39; library(ggplot2)&lt;/span>
&lt;span class="c1">#&amp;#39; ggplot(faithful, aes(x = waiting)) +&lt;/span>
&lt;span class="c1">#&amp;#39; geom_histogram()&lt;/span>
&lt;span class="c1">#&amp;#39; ```&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Both the inline R code and the markdown code fences are evaluated when you run &lt;code>devtools::document()&lt;/code> (or &lt;code>roxygenize()&lt;/code>).
You probably want to avoid lengthy computations, or set up caching to keep your package development workflow snappy.&lt;/p>
&lt;p>Please see &lt;code>vignette(&amp;quot;rd-formatting&amp;quot;)&lt;/code> for more about dynamic documentation, including potential caveats.&lt;/p>
&lt;h2 id="line-ending-conversion">Line ending conversion
&lt;a href="#line-ending-conversion">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This version of roxygen2 does a much better job at keeping the line ending characters consistent within each file, across operating systems.
In particular, if a generated file has only Windows (CR LF) line endings, roxygen2 keeps the file that way.
If a file has mixed Windows and Unix (LF) line endings, roxygen2 converts all line endings to Unix (LF).
For new files roxygen2 uses LF file endings.
If you want to convert a file from CR LF line endings to LF, simply remove it and let roxygen2 re-create it.&lt;/p>
&lt;p>The new convention works better with git on Windows.
Windows git, depending on configuration, might or might not convert between CR LF and LF line endings when checking out and when committing code.
No matter which git option you use, roxygen2 now does not introduce spurious line ending changes.&lt;/p>
&lt;p>Thanks to
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a> and
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a> for working on this feature.&lt;/p>
&lt;h2 id="some-other-improvements">Some other improvements
&lt;a href="#some-other-improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>Hyperlinks to R6 methods are also added in the PDF manual.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>@description NULL&lt;/code> and &lt;code>@details NULL&lt;/code> no longer fail; instead, these tags
are ignored, except for &lt;code>@description NULL&lt;/code> in package level documentation,
where it can be used to suppress the auto-generated &amp;lsquo;Description&amp;rsquo; section.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Multiple &lt;code>@format&lt;/code> tags are now combined.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>@evalNamespace()&lt;/code> works again.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all 40 contributors who helped make this release possible!
&lt;a href="https://github.com/alandipert" target="_blank" rel="noopener">@alandipert&lt;/a>,
&lt;a href="https://github.com/allenzhuaz" target="_blank" rel="noopener">@allenzhuaz&lt;/a>,
&lt;a href="https://github.com/BenEngbers" target="_blank" rel="noopener">@BenEngbers&lt;/a>,
&lt;a href="https://github.com/bgctw" target="_blank" rel="noopener">@bgctw&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/cboettig" target="_blank" rel="noopener">@cboettig&lt;/a>,
&lt;a href="https://github.com/dmurdoch" target="_blank" rel="noopener">@dmurdoch&lt;/a>,
&lt;a href="https://github.com/dragosmg" target="_blank" rel="noopener">@dragosmg&lt;/a>,
&lt;a href="https://github.com/eddelbuettel" target="_blank" rel="noopener">@eddelbuettel&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/genomaths" target="_blank" rel="noopener">@genomaths&lt;/a>,
&lt;a href="https://github.com/goldingn" target="_blank" rel="noopener">@goldingn&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">@HenrikBengtsson&lt;/a>,
&lt;a href="https://github.com/Hong-Revo" target="_blank" rel="noopener">@Hong-Revo&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/iferres" target="_blank" rel="noopener">@iferres&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jameslamb" target="_blank" rel="noopener">@jameslamb&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/kingaa" target="_blank" rel="noopener">@kingaa&lt;/a>,
&lt;a href="https://github.com/kortschak" target="_blank" rel="noopener">@kortschak&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/michaelquinn32" target="_blank" rel="noopener">@michaelquinn32&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/mstr3336" target="_blank" rel="noopener">@mstr3336&lt;/a>,
&lt;a href="https://github.com/muschellij2" target="_blank" rel="noopener">@muschellij2&lt;/a>,
&lt;a href="https://github.com/nteetor" target="_blank" rel="noopener">@nteetor&lt;/a>,
&lt;a href="https://github.com/ntguardian" target="_blank" rel="noopener">@ntguardian&lt;/a>,
&lt;a href="https://github.com/pat-s" target="_blank" rel="noopener">@pat-s&lt;/a>,
&lt;a href="https://github.com/RaphaelS1" target="_blank" rel="noopener">@RaphaelS1&lt;/a>,
&lt;a href="https://github.com/russHyde" target="_blank" rel="noopener">@russHyde&lt;/a>,
&lt;a href="https://github.com/s-fleck" target="_blank" rel="noopener">@s-fleck&lt;/a>,
&lt;a href="https://github.com/stefanfritsch" target="_blank" rel="noopener">@stefanfritsch&lt;/a>,
&lt;a href="https://github.com/strboul" target="_blank" rel="noopener">@strboul&lt;/a>,
&lt;a href="https://github.com/TomKellyGenetics" target="_blank" rel="noopener">@TomKellyGenetics&lt;/a>,
&lt;a href="https://github.com/VPetukhov" target="_blank" rel="noopener">@VPetukhov&lt;/a>, and
&lt;a href="https://github.com/zachary-foster" target="_blank" rel="noopener">@zachary-foster&lt;/a>.&lt;/p></description></item><item><title>Tidy eval now supports glue strings</title><link>https://www.tidyverse.org/blog/2020/02/glue-strings-and-tidy-eval/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/02/glue-strings-and-tidy-eval/</guid><description>&lt;p>
&lt;a href="https://www.tidyverse.org/blog/2019/06/rlang-0-4-0/" target="_blank" rel="noopener">rlang 0.4.0&lt;/a> introduced the curly-curly &lt;code>{{&lt;/code> operator to simplify writing functions around tidyverse pipelines. The minor update 0.4.3 of rlang makes it possible to use &lt;code>{&lt;/code> and &lt;code>{{&lt;/code> to create result names in tidyverse verbs taking pairs of names and expressions.&lt;/p>
&lt;p>Install the latest version of rlang to make the new feature globally available throughout the tidyverse:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rlang&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="tunnelling-data-variables-with-curly-curly">Tunnelling data-variables with curly-curly
&lt;a href="#tunnelling-data-variables-with-curly-curly">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>With the &lt;code>{{&lt;/code> operator you can &lt;strong>tunnel&lt;/strong> data-variables (i.e. columns from the data frames) through arg-variables (function arguments):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidyverse&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">mean_by&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">var&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">({{&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="p">}})&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">({{&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="p">}},&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The tunnel makes it possible to supply variables from the data frame to your wrapper function:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mean_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Sepal.Width&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; Species avg&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa 3.43&lt;/span>
&lt;span class="c1">#&amp;gt; 2 versicolor 2.77&lt;/span>
&lt;span class="c1">#&amp;gt; 3 virginica 2.97&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Without a tunnel, the ambiguity between data-variables and arg-variables causes R to complain about objects not found:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mean_by_no_tunnel&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">var&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">by&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">var&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mean_by_no_tunnel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Sepal.Width&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Must group by variables found in `.data`&lt;/span>
&lt;span class="c1">#&amp;gt; * Column `by` is not found&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s because of the ambiguity between the function argument &lt;code>by&lt;/code> and the data-variable &lt;code>Species&lt;/code>. R has no way of knowing that you meant the variable from the data frame.&lt;/p>
&lt;h2 id="custom-result-names">Custom result names
&lt;a href="#custom-result-names">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In the example above, the result name is hard-coded to &lt;code>avg&lt;/code>. This is an informative generic name, but returning a more specific name that reflects the context might make the function more helpful. For this reason, tidy eval functions taking dots (like &lt;code>dplyr::mutate()&lt;/code>, &lt;code>dplyr::group_by()&lt;/code>, or &lt;code>dplyr::summarise()&lt;/code>) now support glue strings as result names.&lt;/p>
&lt;p>Glue strings are implemented in the
&lt;a href="https://glue.tidyverse.org/" target="_blank" rel="noopener">glue package&lt;/a>. They are a flexible way of composing a string from components, interpolating R code within the string:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">glue&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Attaching package: &amp;#39;glue&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; The following object is masked from &amp;#39;package:dplyr&amp;#39;:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; collapse&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="s">&amp;#34;Bianca&amp;#34;&lt;/span>
&lt;span class="nf">glue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The result of `1 + 2` is {1 + 2}, so says {name}.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; The result of `1 + 2` is 3, so says Bianca.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now use glue strings in result names. Note that for technical reasons you need the Walrus operator &lt;code>:=&lt;/code> instead of the usual &lt;code>=&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">suffix&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="s">&amp;#34;foo&amp;#34;&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;prefix_{suffix}&amp;#34;&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Sepal.Width&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; prefix_foo&lt;/span>
&lt;span class="c1">#&amp;gt; 1 3.057333&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In addition to normal glue interpolation with &lt;code>{&lt;/code>, you can also tunnel data-variables through function arguments with &lt;code>{{&lt;/code> inside the string:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mean_by&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">var&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">({{&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="p">}})&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{{ var }}&amp;#34;&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">({{&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="p">}},&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mean_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Sepal.Width&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; Species Sepal.Width&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa 3.43&lt;/span>
&lt;span class="c1">#&amp;gt; 2 versicolor 2.77&lt;/span>
&lt;span class="c1">#&amp;gt; 3 virginica 2.97&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And you can combine both forms of interpolation in a same glue string:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">mean_by&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">var&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">prefix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;avg&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">({{&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="p">}})&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{prefix}_{{ var }}&amp;#34;&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">({{&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="p">}},&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">iris&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mean_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Species&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Sepal.Width&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; Species avg_Sepal.Width&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 setosa 3.43&lt;/span>
&lt;span class="c1">#&amp;gt; 2 versicolor 2.77&lt;/span>
&lt;span class="c1">#&amp;gt; 3 virginica 2.97&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can learn more about tunnelling variables in
&lt;a href="https://speakerdeck.com/lionelhenry/interactivity-and-programming-in-the-tidyverse" target="_blank" rel="noopener">this RStudio::conf 2020 talk&lt;/a>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Read about other bugfixes and features from the 0.4.3 release in the
&lt;a href="https://github.com/r-lib/rlang/blob/master/NEWS.md#rlang-043" target="_blank" rel="noopener">changelog&lt;/a>. Many thanks to all the contributors for this release!&lt;/p>
&lt;p>
&lt;a href="https://github.com/chendaniely" target="_blank" rel="noopener">@chendaniely&lt;/a>,
&lt;a href="https://github.com/clauswilke" target="_blank" rel="noopener">@clauswilke&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/enoshliang" target="_blank" rel="noopener">@enoshliang&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/ianmcook" target="_blank" rel="noopener">@ianmcook&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/neelan29" target="_blank" rel="noopener">@neelan29&lt;/a>,
&lt;a href="https://github.com/nick-youngblut" target="_blank" rel="noopener">@nick-youngblut&lt;/a>,
&lt;a href="https://github.com/nteetor" target="_blank" rel="noopener">@nteetor&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/TylerGrantSmith" target="_blank" rel="noopener">@TylerGrantSmith&lt;/a>,
&lt;a href="https://github.com/vspinu" target="_blank" rel="noopener">@vspinu&lt;/a>, and
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>&lt;/p></description></item><item><title>vroom 1.1.0</title><link>https://www.tidyverse.org/blog/2020/01/vroom-1-1-0/</link><pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/01/vroom-1-1-0/</guid><description>&lt;p>I&amp;rsquo;m excited to announce that
&lt;a href="http://vroom.r-lib.org" target="_blank" rel="noopener">vroom 1.1.0&lt;/a> is now
available on CRAN!&lt;/p>
&lt;p>vroom reads rectangular data, such as comma separated (csv), tab separated (tsv) or fixed width files (fwf) into R.
It performs similar roles to functions like
&lt;a href="http://readr.r-lib.org" target="_blank" rel="noopener">&lt;code>readr::read_csv()&lt;/code>&lt;/a>,
&lt;a href="http://r-datatable.com" target="_blank" rel="noopener">&lt;code>data.table::fread()&lt;/code>&lt;/a> or &lt;code>read.csv()&lt;/code>.
But for many datasets &lt;code>vroom::vroom()&lt;/code> can read them much, much faster (hence the name).
Get the latest version with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;vroom&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And attach the package by running&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vroom&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Improvements in this release include: a hex logo, support for big integer data, improved delimiter guessing, including delimiters in specifications, and streamlined reading from standard input.&lt;/p>
&lt;p>See the
&lt;a href="https://vroom.r-lib.org/news/index.html" target="_blank" rel="noopener">change log&lt;/a> for a full list of changes and bug fixes in this version.&lt;/p>
&lt;h2 id="hex-logo">Hex logo
&lt;a href="#hex-logo">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to
&lt;a href="https://github.com/allisonhorst/stats-illustrations" target="_blank" rel="noopener">Allison Horst&lt;/a> we now have an awesome hex logo for vroom!&lt;/p>
&lt;p>&lt;img src="logo.png" alt="">&lt;/p>
&lt;h2 id="big-integer-support">Big integer support
&lt;a href="#big-integer-support">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>R&amp;rsquo;s standard integers are stored in 32 bits of binary data, which means that the largest value they can store is 2,147,483,647 (&lt;code>2^31 - 1&lt;/code>).
R implicitly converts integers for most operations with doubles to 64-bit floating point values, which is why you may not have noticed this limitation before.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">22&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="m">2147483647L&lt;/span>
&lt;span class="nf">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; int 2147483647&lt;/span>
&lt;span class="nf">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="m">1L&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Warning in x + 1L: NAs produced by integer overflow&lt;/span>
&lt;span class="c1">#&amp;gt; int NA&lt;/span>
&lt;span class="nf">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; num 2.15e+09&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2147483648&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, even 64-bit floating point values can only store consecutive integers up to 9,007,199,254,740,992 (&lt;code>2^53&lt;/code>) without losing precision.
You can observe this because if you try adding 1 to this number you will get the same number.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">y&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="m">9007199254740992&lt;/span>
&lt;span class="n">z&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="n">z&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 9007199254740992&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">z&lt;/span>
&lt;span class="c1">#&amp;gt; [1] TRUE&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To store consecutive integers bigger than this you need to use a 64-bit integer type.
R does not have native support for 64-bit integers, however the
&lt;a href="https://cran.r-project.org/package=bit64" target="_blank" rel="noopener">bit64&lt;/a> package provides support for them.
Because these integers are so large, they rarely occur in real world data, however they can often be obtained from generated data, such as database identifiers.&lt;/p>
&lt;p>vroom 1.1.0 now supports reading these big integers into the &lt;code>integer64&lt;/code> type provided by bit64 with a new &lt;code>col_big_integer()&lt;/code> column type (shortcut &amp;lsquo;I&amp;rsquo;).&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;id\n9007199254740993\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col_type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;I&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">delim&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;,&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">x&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; id &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int64&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 9007199254740993&lt;/span>
&lt;span class="n">x&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="c1">#&amp;gt; integer64&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 9007199254740994&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="improved-delimiter-guessing">Improved delimiter guessing
&lt;a href="#improved-delimiter-guessing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The code to guess delimiters has been rewritten, which should make it more robust to most inputs.
Previous versions of vroom would fall back to using a newline delimiter if a delimiter could not be guessed.
vroom 1.1.0 instead throws an error.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;x\n1\n&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Could not guess the delimiter.&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Use `vroom(delim =)` to specify one explicitly.&lt;/span>
&lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;x\n1\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">delim&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;,&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Rows: 1&lt;/span>
&lt;span class="c1">#&amp;gt; Columns: 1&lt;/span>
&lt;span class="c1">#&amp;gt; Delimiter: &amp;#34;,&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; dbl [1]: x&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Use `spec()` to retrieve the guessed column specification&lt;/span>
&lt;span class="c1">#&amp;gt; Pass a specification to the `col_types` argument to quiet this message&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; x&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="delimiters-in-the-specification">Delimiters in the specification
&lt;a href="#delimiters-in-the-specification">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>vroom now includes the delimiter in the specification object, which means you no longer have to separately provide the delimiter if you are using an existing specification.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># read a csv file, the delimiter is provided as &amp;#39;,&amp;#39;&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">vroom_example&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;mtcars.csv&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">delim&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#39;,&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Rows: 32&lt;/span>
&lt;span class="c1">#&amp;gt; Columns: 12&lt;/span>
&lt;span class="c1">#&amp;gt; Delimiter: &amp;#34;,&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; chr [ 1]: model&lt;/span>
&lt;span class="c1">#&amp;gt; dbl [11]: mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Use `spec()` to retrieve the guessed column specification&lt;/span>
&lt;span class="c1">#&amp;gt; Pass a specification to the `col_types` argument to quiet this message&lt;/span>
&lt;span class="n">mtcars_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">spec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># If the file is read again with the spec, no need to provide the delimiter&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">vroom_example&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;mtcars.csv&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">col_types&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mtcars_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="reading-from-standard-input">Reading from standard input
&lt;a href="#reading-from-standard-input">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>vroom makes it straightforward to read from the C standard input, like you would do when calling R from the terminal command line.
Simply use &lt;code>stdin()&lt;/code> as your input. Let&amp;rsquo;s say you want to take the first few lines the mtcars file and find the average horsepower.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">head mtcars.tsv &lt;span class="p">|&lt;/span> Rscript -e &lt;span class="s1">&amp;#39;hp &amp;lt;- vroom::vroom(stdin(), col_types = list())$hp; mean(hp)&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 122.7778&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This release also contains a number of bug fixes and improvements which should make it more robust than previous releases. See the
&lt;a href="https://vroom.r-lib.org/news/index.html" target="_blank" rel="noopener">change log&lt;/a> for full details.&lt;/p>
&lt;p>A big thanks to all contributors of code, issues and documentation to this release, including many who helped out at the tidyverse developer day in Toulouse, France!&lt;/p>
&lt;p>
&lt;a href="https://github.com/2005m" target="_blank" rel="noopener">@2005m&lt;/a>,
&lt;a href="https://github.com/atomman" target="_blank" rel="noopener">@atomman&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/blairj09" target="_blank" rel="noopener">@blairj09&lt;/a>,
&lt;a href="https://github.com/Chris-M-P" target="_blank" rel="noopener">@Chris-M-P&lt;/a>,
&lt;a href="https://github.com/chsafouane" target="_blank" rel="noopener">@chsafouane&lt;/a>,
&lt;a href="https://github.com/CriscelyLP" target="_blank" rel="noopener">@CriscelyLP&lt;/a>,
&lt;a href="https://github.com/DyfanJones" target="_blank" rel="noopener">@DyfanJones&lt;/a>,
&lt;a href="https://github.com/ecoquant" target="_blank" rel="noopener">@ecoquant&lt;/a>,
&lt;a href="https://github.com/edzer" target="_blank" rel="noopener">@edzer&lt;/a>,
&lt;a href="https://github.com/ericbrownaustin" target="_blank" rel="noopener">@ericbrownaustin&lt;/a>,
&lt;a href="https://github.com/estroger34" target="_blank" rel="noopener">@estroger34&lt;/a>,
&lt;a href="https://github.com/frm1789" target="_blank" rel="noopener">@frm1789&lt;/a>,
&lt;a href="https://github.com/georgevbsantiago" target="_blank" rel="noopener">@georgevbsantiago&lt;/a>,
&lt;a href="https://github.com/guiastrennec" target="_blank" rel="noopener">@guiastrennec&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">@HenrikBengtsson&lt;/a>,
&lt;a href="https://github.com/henry090" target="_blank" rel="noopener">@henry090&lt;/a>,
&lt;a href="https://github.com/jaapwalhout" target="_blank" rel="noopener">@jaapwalhout&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jonaszierer" target="_blank" rel="noopener">@jonaszierer&lt;/a>,
&lt;a href="https://github.com/kiernann" target="_blank" rel="noopener">@kiernann&lt;/a>,
&lt;a href="https://github.com/martindut" target="_blank" rel="noopener">@martindut&lt;/a>,
&lt;a href="https://github.com/meta00" target="_blank" rel="noopener">@meta00&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/mllg" target="_blank" rel="noopener">@mllg&lt;/a>,
&lt;a href="https://github.com/osiris08" target="_blank" rel="noopener">@osiris08&lt;/a>,
&lt;a href="https://github.com/Plebejer" target="_blank" rel="noopener">@Plebejer&lt;/a>,
&lt;a href="https://github.com/R3myG" target="_blank" rel="noopener">@R3myG&lt;/a>,
&lt;a href="https://github.com/randomgambit" target="_blank" rel="noopener">@randomgambit&lt;/a>,
&lt;a href="https://github.com/sanromd" target="_blank" rel="noopener">@sanromd&lt;/a>,
&lt;a href="https://github.com/Shians" target="_blank" rel="noopener">@Shians&lt;/a>,
&lt;a href="https://github.com/stephen-hayne" target="_blank" rel="noopener">@stephen-hayne&lt;/a>,
&lt;a href="https://github.com/vjcitn" target="_blank" rel="noopener">@vjcitn&lt;/a>,
&lt;a href="https://github.com/wlattner" target="_blank" rel="noopener">@wlattner&lt;/a>, and
&lt;a href="https://github.com/xiaodaigh" target="_blank" rel="noopener">@xiaodaigh&lt;/a>.&lt;/p></description></item><item><title>scales 1.1.0</title><link>https://www.tidyverse.org/blog/2019/11/scales-1-1-0/</link><pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/11/scales-1-1-0/</guid><description>&lt;p>We&amp;rsquo;re thrilled to announce the release of
&lt;a href="https://scales.r-lib.org/" target="_blank" rel="noopener">scales&lt;/a> 1.1.0.
The scales package provides much of the infrastructure that underlies ggplot2&amp;rsquo;s scales, and using it allow you to customize the transformations, breaks, and labels used by ggplot2. Get the latest version with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;scales&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The biggest improvements in this release are related to usability and documentation:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Axis breaks and labels have a new naming scheme: functions that generate
breaks from limits are called &lt;code>breaks_&lt;/code>; functions that generate labels
from breaks are called &lt;code>labels_&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>All the examples for breaks and labels have been overhauled to use new
&lt;code>demo_continuous()&lt;/code>, &lt;code>demo_discrete()&lt;/code>, and &lt;code>demo_log10()&lt;/code>. These make
it much easier to see how you&amp;rsquo;d use scales functions with ggplot2, so
when you&amp;rsquo;re
&lt;a href="https://scales.r-lib.org/reference/index.html" target="_blank" rel="noopener">browsing the documentation&lt;/a>,
you can immediately see how the functions work with ggplot2.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scales&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>There are also a few new breaks and labels functions:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>New
&lt;a href="https://scales.r-lib.org/reference/breaks_width.html" target="_blank" rel="noopener">&lt;code>breaks_width()&lt;/code>&lt;/a>
allows you to specify the distance between breaks rather than the number
of them.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">demo_continuous&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">100&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">breaks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">breaks_width&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; scale_x_continuous(breaks = breaks_width(10))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-3-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://scales.r-lib.org/reference/label_number.html" target="_blank" rel="noopener">&lt;code>label_number()&lt;/code>&lt;/a> and
&lt;a href="https://scales.r-lib.org/reference/label_percent.html" target="_blank" rel="noopener">&lt;code>label_percent()&lt;/code>&lt;/a>
do a better job of picking the default &lt;code>accuracy&lt;/code>, which means that you
should generally get the correct number of decimal place by default.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">demo_continuous&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">labels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">label_number&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; scale_x_continuous(labels = label_number())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-4-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">demo_continuous&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">labels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">label_percent&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; scale_x_continuous(labels = label_percent())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-4-2.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New
&lt;a href="https://scales.r-lib.org/reference/label_bytes.html" target="_blank" rel="noopener">&lt;code>label_bytes()&lt;/code>&lt;/a>
replaces &lt;code>number_bytes_format()&lt;/code> with a more convenient interface. It takes
a single &lt;code>unit&lt;/code> argument which can either be an SI unit (e.g. &amp;ldquo;kB&amp;rdquo;), a
binary unit (e.g. &amp;ldquo;kIB&amp;rdquo;), or an automatic unit (either &amp;ldquo;auto_si&amp;rdquo; or
&amp;ldquo;auto_binary&amp;rdquo;).&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># default is &amp;#34;auto_si&amp;#34;&lt;/span>
&lt;span class="nf">demo_continuous&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1e6&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">label_bytes&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; scale_x_continuous(label = label_bytes())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-5-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># supply a unit if you want all labels to use the same unit&lt;/span>
&lt;span class="nf">demo_continuous&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1e6&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">label_bytes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;kB&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; scale_x_continuous(label = label_bytes(&amp;#34;kB&amp;#34;))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-5-2.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New
&lt;a href="https://scales.r-lib.org/reference/label_number_auto.html" target="_blank" rel="noopener">&lt;code>label_number_auto()&lt;/code>&lt;/a>
automatically picks between &lt;code>label_number()&lt;/code> and &lt;code>label_scientific()&lt;/code> based
on the range of the input. It should produce compact labels over a very wide
range of inputs. We are considering making this the default labeller for
a future version of ggplot2.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">demo_continuous&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1e5&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">labels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">label_number_auto&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; scale_x_continuous(labels = label_number_auto())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-6-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">demo_continuous&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1e10&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">labels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">label_number_auto&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; scale_x_continuous(labels = label_number_auto())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-6-2.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New
&lt;a href="https://scales.r-lib.org/reference/label_number_si.html" target="_blank" rel="noopener">&lt;code>label_number_si()&lt;/code>&lt;/a>
formats numeric vectors with SI units.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">demo_continuous&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1e9&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">label_number_si&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; scale_x_continuous(label = label_number_si())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-7-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">demo_log10&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1e9&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">breaks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">log_breaks&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">labels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">label_number_si&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; scale_x_log10(breaks = log_breaks(10), labels = label_number_si())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-7-2.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New
&lt;a href="https://scales.r-lib.org/reference/label_date.html" target="_blank" rel="noopener">&lt;code>label_date_short()&lt;/code>&lt;/a>
creates labels for a date axis that only show the components of the date
that have changed since the previous label.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">five_months&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.POSIXct&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;2019-11-01&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2020-03-01&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">demo_datetime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">five_months&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; scale_x_datetime()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-8-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">demo_datetime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">five_months&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">labels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">label_date_short&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; scale_x_datetime(labels = label_date_short())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figs/unnamed-chunk-8-2.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>See the
&lt;a href="https://scales.r-lib.org/news/index.html#scales-1-1-0" target="_blank" rel="noopener">change log&lt;/a> for a full list of changes and bug fixes in this version.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all the GitHub contributors who helped make this release happen!
&lt;a href="https://github.com/agila5" target="_blank" rel="noopener">@agila5&lt;/a>,
&lt;a href="https://github.com/Anirudhsekar96" target="_blank" rel="noopener">@Anirudhsekar96&lt;/a>,
&lt;a href="https://github.com/apsalverda" target="_blank" rel="noopener">@apsalverda&lt;/a>,
&lt;a href="https://github.com/b-lev" target="_blank" rel="noopener">@b-lev&lt;/a>,
&lt;a href="https://github.com/bhogan-mitre" target="_blank" rel="noopener">@bhogan-mitre&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/bjedwards" target="_blank" rel="noopener">@bjedwards&lt;/a>,
&lt;a href="https://github.com/bkkkk" target="_blank" rel="noopener">@bkkkk&lt;/a>,
&lt;a href="https://github.com/blairj09" target="_blank" rel="noopener">@blairj09&lt;/a>,
&lt;a href="https://github.com/clauswilke" target="_blank" rel="noopener">@clauswilke&lt;/a>,
&lt;a href="https://github.com/const-ae" target="_blank" rel="noopener">@const-ae&lt;/a>,
&lt;a href="https://github.com/davidmasp" target="_blank" rel="noopener">@davidmasp&lt;/a>,
&lt;a href="https://github.com/dpseidel" target="_blank" rel="noopener">@dpseidel&lt;/a>,
&lt;a href="https://github.com/eliocamp" target="_blank" rel="noopener">@eliocamp&lt;/a>,
&lt;a href="https://github.com/GegznaV" target="_blank" rel="noopener">@GegznaV&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">@HenrikBengtsson&lt;/a>,
&lt;a href="https://github.com/hvaret" target="_blank" rel="noopener">@hvaret&lt;/a>,
&lt;a href="https://github.com/jcheng5" target="_blank" rel="noopener">@jcheng5&lt;/a>,
&lt;a href="https://github.com/kiernann" target="_blank" rel="noopener">@kiernann&lt;/a>,
&lt;a href="https://github.com/kuriwaki" target="_blank" rel="noopener">@kuriwaki&lt;/a>,
&lt;a href="https://github.com/mikmart" target="_blank" rel="noopener">@mikmart&lt;/a>,
&lt;a href="https://github.com/njtierney" target="_blank" rel="noopener">@njtierney&lt;/a>,
&lt;a href="https://github.com/paleolimbot" target="_blank" rel="noopener">@paleolimbot&lt;/a>,
&lt;a href="https://github.com/sada1993" target="_blank" rel="noopener">@sada1993&lt;/a>,
&lt;a href="https://github.com/schloerke" target="_blank" rel="noopener">@schloerke&lt;/a>,
&lt;a href="https://github.com/sflippl" target="_blank" rel="noopener">@sflippl&lt;/a>,
&lt;a href="https://github.com/slowkow" target="_blank" rel="noopener">@slowkow&lt;/a>,
&lt;a href="https://github.com/sobrietie" target="_blank" rel="noopener">@sobrietie&lt;/a>,
&lt;a href="https://github.com/tdawry" target="_blank" rel="noopener">@tdawry&lt;/a>,
&lt;a href="https://github.com/teramonagi" target="_blank" rel="noopener">@teramonagi&lt;/a>,
&lt;a href="https://github.com/thomasp85" target="_blank" rel="noopener">@thomasp85&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/tungmilan" target="_blank" rel="noopener">@tungmilan&lt;/a>,
&lt;a href="https://github.com/turgeonmaxime" target="_blank" rel="noopener">@turgeonmaxime&lt;/a>,
&lt;a href="https://github.com/wibeasley" target="_blank" rel="noopener">@wibeasley&lt;/a>,
&lt;a href="https://github.com/woodwards" target="_blank" rel="noopener">@woodwards&lt;/a>, and
&lt;a href="https://github.com/zamorarr" target="_blank" rel="noopener">@zamorarr&lt;/a>.&lt;/p></description></item><item><title>roxygen2 7.0.0</title><link>https://www.tidyverse.org/blog/2019/11/roxygen2-7-0-0/</link><pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/11/roxygen2-7-0-0/</guid><description>&lt;p>We&amp;rsquo;re exceedingly happy to announce the release of
&lt;a href="https://roxygen2.r-lib.org" target="_blank" rel="noopener">roxygen2 7.0.0&lt;/a>. roxygen2 allows you to write specially formatted R comments that generate R documentation files (&lt;code>man/*.Rd&lt;/code>) and a &lt;code>NAMESPACE&lt;/code> file. roxygen2 is used by over 8,000 CRAN packages.&lt;/p>
&lt;p>Install the latest version of roxygen2 with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;roxygen2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This a huge release containing
&lt;a href="https://roxygen2.r-lib.org/news/index.html#roxygen2-7-0-0" target="_blank" rel="noopener">many minor improvements and bug fixes&lt;/a>. This blog post focusses on seven major improvements:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>roxygen2 is no longer (ironically!) the worst documented package. It has a
fresh new website, &lt;a href="https://roxygen2.r-lib.org">https://roxygen2.r-lib.org&lt;/a>, and the vignettes have
all been updated.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We&amp;rsquo;ve made a number of tweaks to the rendering of &lt;code>.Rd&lt;/code>. Most importantly
you no longer needed to escape &lt;code>%&lt;/code> in markdown, and functions with many
arguments are displayed with one argument per line. We&amp;rsquo;ve also removed a
couple of old features that are no longer supported.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can create tables and headings from markdown.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can share text and code between your README/vignettes and your
documentation with the new &lt;code>@includeRmd&lt;/code> tag.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can now document R6 classes!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A package can declare how roxygen2 should load its code, making it easier to
use roxygen2 in wider variety of workflows.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>roxygen2 has a documented extension mechanism so that it&amp;rsquo;s easy to implement
new tags and new roclets in other packages.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="improved-documentation">Improved documentation
&lt;a href="#improved-documentation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>roxygen2 finally (!!) has a
&lt;a href="https://pkgdown.r-lib.org/" target="_blank" rel="noopener">pkgdown&lt;/a> website!&lt;/p>
&lt;p>I used this as an opportunity to look at all the vignettes and make sure they are comprehensive and readable. These are now the best place to go if you want more details on any roxygen2 tag:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://roxygen2.r-lib.org/articles/rd.html" target="_blank" rel="noopener">Rd&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://roxygen2.r-lib.org/articles/rd-formatting.html" target="_blank" rel="noopener">Inline Rd formatting&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://roxygen2.r-lib.org/articles/namespace.html" target="_blank" rel="noopener">&lt;code>NAMESPACE&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Of course, documentation can always be improved, so if you find something hard to follow, please
&lt;a href="https://github.com/r-lib/roxygen2/issues/new" target="_blank" rel="noopener">file an issue&lt;/a>!&lt;/p>
&lt;h2 id="changes-to-rd-output">Changes to &lt;code>.Rd&lt;/code> output
&lt;a href="#changes-to-rd-output">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When you run roxygen2 7.0.0 for the first time, you&amp;rsquo;ll notice a number of changes to the rendered &lt;code>.Rd&lt;/code>. The two most important are:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>%&lt;/code> (the Rd comment symbol) is now automatically escaped in markdown text. That means if you previously escaped it with &lt;code>\%&lt;/code>, you&amp;rsquo;ll need to remove the backslash and take it back to &lt;code>%&lt;/code>.&lt;/p>
&lt;p>If you forget to do this, you&amp;rsquo;ll see confusing &lt;code>R CMD check&lt;/code> notes like:&lt;/p>
&lt;ul>
&lt;li>&lt;code>unknown macro '\item'&lt;/code>&lt;/li>
&lt;li>&lt;code>unexpected section header '\description'&lt;/code>&lt;/li>
&lt;li>&lt;code>unexpected END_OF_INPUT&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>In the &amp;ldquo;Usage&amp;rdquo; section, you&amp;rsquo;ll notice the formatting of function calls has changed. Previously, function calls were wrapped to produce the smallest number of lines, e.g.:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">parse_package&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">env_package&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">registry&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">default_tags&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">global_options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now long function calls are wrapped so that each argument gets its own line:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">parse_package&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">env_package&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">registry&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">default_tags&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">global_options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you prefer the old behaviour you can put the following in your
&lt;code>DESCRIPTION&lt;/code>:&lt;/p>
&lt;pre>&lt;code>Roxygen: list(old_usage = TRUE)
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;p>You&amp;rsquo;ll also notice a number of small improvements:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Markdown code is converted to to either &lt;code>\code{}&lt;/code> or &lt;code>\verb{}&lt;/code>, depending on
whether it not is valid R code. For example, &lt;code>`foofy()`&lt;/code> will become
&lt;code>\code{foofy()}&lt;/code> but &lt;code>`1 +`&lt;/code> will become &lt;code>\verb{1 + }&lt;/code>. This better
matches the intended usage of the &lt;code>\code{}&lt;/code> and &lt;code>\verb{}&lt;/code> macros, and should
make it easier to include arbitrary &amp;ldquo;code&amp;rdquo; snippets in documentation without
causing Rd failures.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>@family&lt;/code> automatically adds &lt;code>()&lt;/code> when linking to functions,
and prints each link on its own line (to improve diffs).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>We&amp;rsquo;ve also removed a few features to simplify the code and/or clearly advertise that certain features are no longer supported:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>@S3method&lt;/code> has been removed. It was deprecated in roxygen2 4.0.0
released 2014-05-02, over 5 years ago.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Using the &lt;code>wrap&lt;/code> option will now trigger a warning, as it hasn&amp;rsquo;t worked
for quite some time. Suppress the warning by remove the option from your
&lt;code>DESCRIPTION&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>@docType package&lt;/code> will no longer add &lt;code>-name&lt;/code> to the file name. If you relied
on this, either switch to the
&lt;a href="https://roxygen2.r-lib.org/articles/rd.html#packages" target="_blank" rel="noopener">new workflow&lt;/a>, or
use &lt;code>@name&lt;/code> to manaully override the default file name.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="markdown-improvements">Markdown improvements
&lt;a href="#markdown-improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are two major improvements to roxygen2&amp;rsquo;s markdown support: you can now use markdown headers and tables.&lt;/p>
&lt;p>Markdown headings can be used in top-level tags like &lt;code>@description&lt;/code>, &lt;code>@details&lt;/code>, and &lt;code>@returns&lt;/code>. Level 1 headings create a new top-level &lt;code>\section{}&lt;/code> and Level 2 headings (and below) create nested &lt;code>\subsection{}&lt;/code>s:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="c1">#&amp;#39; @details&lt;/span>
&lt;span class="c1">#&amp;#39; First sentence&lt;/span>
&lt;span class="c1">#&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;#39; ## Subheading&lt;/span>
&lt;span class="c1">#&amp;#39; Second sentence&lt;/span>
&lt;span class="c1">#&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;#39; # New section&lt;/span>
&lt;span class="c1">#&amp;#39; Third sentence&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>is translated to&lt;/p>
&lt;pre>&lt;code>\details{
First sentence
\subsection{Subheading}{
Second sentence
}
}
\section{New section}{
Third sentence
}
&lt;/code>&lt;/pre>&lt;p>Markdown tables use the
&lt;a href="https://github.github.com/gfm/#tables-extension-" target="_blank" rel="noopener">GFM table syntax&lt;/a> and are converted to &lt;code>\tabular{}&lt;/code> macros. For example,&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-R" data-lang="R">&lt;span class="c1">#&amp;#39; | foo | bar |&lt;/span>
&lt;span class="c1">#&amp;#39; | :-- | --: |&lt;/span>
&lt;span class="c1">#&amp;#39; | baz | bim |&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>is translated to&lt;/p>
&lt;pre>&lt;code>\tabular{lr}{
foo \tab bar \cr
baz \tab bim \cr
}
&lt;/code>&lt;/pre>&lt;p>Lastly, using unsupported markdown features (like blockquotes, inline HTML, and horizontal rules) will now produce an informative message.&lt;/p>
&lt;h2 id="includermd">&lt;code>@includeRmd&lt;/code>
&lt;a href="#includermd">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>@includeRmd&lt;/code> provides a new tool that allows you to share text and code amongst &lt;code>.Rmd&lt;/code> and &lt;code>.Rd&lt;/code>. For example, if you have &lt;code>vignettes/common.Rmd&lt;/code>, you can include it:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>In documentation, with:&lt;/p>
&lt;pre>&lt;code>#' @includeRmd vignettes/common.Rmd
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>In other vignettes with:&lt;/p>
&lt;pre>&lt;code>```{r child = &amp;quot;common.Rmd&amp;quot;}
```
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>In &lt;code>README.Rmd&lt;/code>, with:&lt;/p>
&lt;pre>&lt;code>```{r child = &amp;quot;vignettes/common.Rmd&amp;quot;}
```
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;p>Learn more in
&lt;a href="https://roxygen2.r-lib.org/articles/rd.html#including-external--rmd-md-files" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;rd&amp;quot;)&lt;/code>&lt;/a>&lt;/p>
&lt;h2 id="r6-documentation">R6 documentation
&lt;a href="#r6-documentation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>You can now document R6 classes! The basic usage is straighforward and works similarly to documenting functions. The main difference is that methods require explicit &lt;code>@description&lt;/code> and &lt;code>@detail&lt;/code> tags.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1">#&amp;#39; R6 Class representing a person&lt;/span>
&lt;span class="c1">#&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;#39; A person has a name and a hair color.&lt;/span>
&lt;span class="n">Person&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">R6&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">R6Class&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Person&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">public&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="c1">#&amp;#39; @field name First or full name of the person.&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">#&amp;#39; @field hair Hair color of the person.&lt;/span>
&lt;span class="n">hair&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NULL&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">#&amp;#39; @description&lt;/span>
&lt;span class="c1">#&amp;#39; Create a new person object.&lt;/span>
&lt;span class="c1">#&amp;#39; @param name Name.&lt;/span>
&lt;span class="c1">#&amp;#39; @param hair Hair color.&lt;/span>
&lt;span class="c1">#&amp;#39; @return A new `Person` object.&lt;/span>
&lt;span class="n">initialize&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NA&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hair&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">self&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">name&lt;/span>
&lt;span class="n">self&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hair&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">hair&lt;/span>
&lt;span class="n">self&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">greet&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">#&amp;#39; @description&lt;/span>
&lt;span class="c1">#&amp;#39; Change hair color.&lt;/span>
&lt;span class="c1">#&amp;#39; @param val New hair color.&lt;/span>
&lt;span class="c1">#&amp;#39; @examples&lt;/span>
&lt;span class="c1">#&amp;#39; P &amp;lt;- Person(&amp;#34;Ann&amp;#34;, &amp;#34;black&amp;#34;)&lt;/span>
&lt;span class="c1">#&amp;#39; P$hair&lt;/span>
&lt;span class="c1">#&amp;#39; P$set_hair(&amp;#34;red&amp;#34;)&lt;/span>
&lt;span class="c1">#&amp;#39; P$hair&lt;/span>
&lt;span class="n">set_hair&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">self&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">hair&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">val&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">#&amp;#39; @description&lt;/span>
&lt;span class="c1">#&amp;#39; Say hi.&lt;/span>
&lt;span class="n">greet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">cat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">paste0&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, my name is &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">self&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;.\n&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Learn more in
&lt;a href="https://roxygen2.r-lib.org/articles/rd.html#r6" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;rd&amp;quot;)&lt;/code>&lt;/a>.&lt;/p>
&lt;p>R6 documentation is a work in progress, so please let us know if you find anything missing or confusing. If you document a package with many R6 classes, you will get many warnings about missing documentation. If you want to suppress those warnings, you can turn off R6 documetation with the &lt;code>r6&lt;/code> option, i.e. put &lt;code>Roxygen: list(r6 = FALSE)&lt;/code> in your &lt;code>DESCRIPTION&lt;/code>.&lt;/p>
&lt;h2 id="code-loading">Code loading
&lt;a href="#code-loading">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>roxygen2 now provides three strategies for loading your code:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>load_pkgload()&lt;/code>, the default, uses
&lt;a href="https://www.github.com/r-lib/pkgload" target="_blank" rel="noopener">pkgload&lt;/a>.
Compared to the previous release, this now automatically recompiles your
package if needed.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>load_source()&lt;/code> attaches required packages and &lt;code>source()&lt;/code>s all files in &lt;code>R/&lt;/code>.
This is a cruder simulation of package loading than pkgload (and e.g. is
unreliable if you use S4 extensively), but it does not require that the
package be compiled. Try it if the default strategy (used in roxygen2 6.1.0
and above) causes you grief.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>load_installed()&lt;/code> assumes you have installed the package. This is best
used as part of a bigger automated workflow.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>You can override the default either by calling (e.g.) &lt;code>roxygenise(load_code = &amp;quot;source&amp;quot;)&lt;/code> or by setting the &lt;code>load&lt;/code> option in your DESCRIPTION: &lt;code>Roxygen: list(load = &amp;quot;source&amp;quot;)&lt;/code>.&lt;/p>
&lt;h2 id="extending-roxygen2">Extending roxygen2
&lt;a href="#extending-roxygen2">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The process for extending roxygen2 with new tags and new roclets has been completely overhauled, and is now documented in
&lt;a href="https://roxygen2.r-lib.org/articles/extending.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;extending&amp;quot;)&lt;/code>&lt;/a>. A big thanks goes to
&lt;a href="https://github.com/mikldk" target="_blank" rel="noopener">Mikkel Meyer Andersen&lt;/a> for starting on the vignette and motivating me to make the extension process much more pleasant.&lt;/p>
&lt;p>If you&amp;rsquo;re one of the few people who have written a roxygen2 extension, sorry for breaking your code! But I genuinely believe that the improvements to the documentation, object structure, and print methods make it worth it. If you have previously made a new roclet, see the major changes in the
&lt;a href="https://github.com/r-lib/roxygen2/blob/master/NEWS.md#extending-roxygen2" target="_blank" rel="noopener">news&lt;/a>. Since this interface is now documented, it will not change again without warning and a deprecation cycle.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all 69 contributors who helped make this giant release possible!
&lt;a href="https://github.com/achubaty" target="_blank" rel="noopener">@achubaty&lt;/a>,
&lt;a href="https://github.com/adam52" target="_blank" rel="noopener">@adam52&lt;/a>,
&lt;a href="https://github.com/alaagalal" target="_blank" rel="noopener">@alaagalal&lt;/a>,
&lt;a href="https://github.com/andrewmarx" target="_blank" rel="noopener">@andrewmarx&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/coolbutuseless" target="_blank" rel="noopener">@coolbutuseless&lt;/a>,
&lt;a href="https://github.com/DominiqueMakowski" target="_blank" rel="noopener">@DominiqueMakowski&lt;/a>,
&lt;a href="https://github.com/drjxf" target="_blank" rel="noopener">@drjxf&lt;/a>,
&lt;a href="https://github.com/EmilBode" target="_blank" rel="noopener">@EmilBode&lt;/a>,
&lt;a href="https://github.com/espinielli" target="_blank" rel="noopener">@espinielli&lt;/a>,
&lt;a href="https://github.com/Freguglia" target="_blank" rel="noopener">@Freguglia&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gdurif" target="_blank" rel="noopener">@gdurif&lt;/a>,
&lt;a href="https://github.com/gustavdelius" target="_blank" rel="noopener">@gustavdelius&lt;/a>,
&lt;a href="https://github.com/ha0ye" target="_blank" rel="noopener">@ha0ye&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/halldc" target="_blank" rel="noopener">@halldc&lt;/a>,
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">@HenrikBengtsson&lt;/a>,
&lt;a href="https://github.com/hongyuanjia" target="_blank" rel="noopener">@hongyuanjia&lt;/a>,
&lt;a href="https://github.com/huangwb8" target="_blank" rel="noopener">@huangwb8&lt;/a>,
&lt;a href="https://github.com/iembry" target="_blank" rel="noopener">@iembry&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/inmybrain" target="_blank" rel="noopener">@inmybrain&lt;/a>,
&lt;a href="https://github.com/jackwasey" target="_blank" rel="noopener">@jackwasey&lt;/a>,
&lt;a href="https://github.com/JazzyPierrot" target="_blank" rel="noopener">@JazzyPierrot&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a>,
&lt;a href="https://github.com/jhchou" target="_blank" rel="noopener">@jhchou&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/kenahoo" target="_blank" rel="noopener">@kenahoo&lt;/a>,
&lt;a href="https://github.com/kevinrue" target="_blank" rel="noopener">@kevinrue&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/leej3" target="_blank" rel="noopener">@leej3&lt;/a>,
&lt;a href="https://github.com/leepface" target="_blank" rel="noopener">@leepface&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/mamueller" target="_blank" rel="noopener">@mamueller&lt;/a>,
&lt;a href="https://github.com/maurolepore" target="_blank" rel="noopener">@maurolepore&lt;/a>,
&lt;a href="https://github.com/michaelquinn32" target="_blank" rel="noopener">@michaelquinn32&lt;/a>,
&lt;a href="https://github.com/mikemc" target="_blank" rel="noopener">@mikemc&lt;/a>,
&lt;a href="https://github.com/mikldk" target="_blank" rel="noopener">@mikldk&lt;/a>,
&lt;a href="https://github.com/mjskay" target="_blank" rel="noopener">@mjskay&lt;/a>,
&lt;a href="https://github.com/mnazarov" target="_blank" rel="noopener">@mnazarov&lt;/a>,
&lt;a href="https://github.com/msberends" target="_blank" rel="noopener">@msberends&lt;/a>,
&lt;a href="https://github.com/msenn" target="_blank" rel="noopener">@msenn&lt;/a>,
&lt;a href="https://github.com/nealrichardson" target="_blank" rel="noopener">@nealrichardson&lt;/a>,
&lt;a href="https://github.com/NikKrieger" target="_blank" rel="noopener">@NikKrieger&lt;/a>,
&lt;a href="https://github.com/nteetor" target="_blank" rel="noopener">@nteetor&lt;/a>,
&lt;a href="https://github.com/paleolimbot" target="_blank" rel="noopener">@paleolimbot&lt;/a>,
&lt;a href="https://github.com/pat-s" target="_blank" rel="noopener">@pat-s&lt;/a>,
&lt;a href="https://github.com/peterdesmet" target="_blank" rel="noopener">@peterdesmet&lt;/a>,
&lt;a href="https://github.com/phargarten2" target="_blank" rel="noopener">@phargarten2&lt;/a>,
&lt;a href="https://github.com/ramiromagno" target="_blank" rel="noopener">@ramiromagno&lt;/a>,
&lt;a href="https://github.com/Robinlovelace" target="_blank" rel="noopener">@Robinlovelace&lt;/a>,
&lt;a href="https://github.com/sfirke" target="_blank" rel="noopener">@sfirke&lt;/a>,
&lt;a href="https://github.com/Shians" target="_blank" rel="noopener">@Shians&lt;/a>,
&lt;a href="https://github.com/SoerenXD" target="_blank" rel="noopener">@SoerenXD&lt;/a>,
&lt;a href="https://github.com/stefanoborini" target="_blank" rel="noopener">@stefanoborini&lt;/a>,
&lt;a href="https://github.com/SteveBronder" target="_blank" rel="noopener">@SteveBronder&lt;/a>,
&lt;a href="https://github.com/tbates" target="_blank" rel="noopener">@tbates&lt;/a>,
&lt;a href="https://github.com/thalesmello" target="_blank" rel="noopener">@thalesmello&lt;/a>,
&lt;a href="https://github.com/the-knife" target="_blank" rel="noopener">@the-knife&lt;/a>,
&lt;a href="https://github.com/thomasp85" target="_blank" rel="noopener">@thomasp85&lt;/a>,
&lt;a href="https://github.com/trestletech" target="_blank" rel="noopener">@trestletech&lt;/a>,
&lt;a href="https://github.com/vivekbhr" target="_blank" rel="noopener">@vivekbhr&lt;/a>, and
&lt;a href="https://github.com/wenjie2wang" target="_blank" rel="noopener">@wenjie2wang&lt;/a>.&lt;/p></description></item><item><title>testthat 2.3.0</title><link>https://www.tidyverse.org/blog/2019/11/testthat-2-3-0/</link><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/11/testthat-2-3-0/</guid><description>&lt;p>We&amp;rsquo;re pumped to announce that
&lt;a href="http://testthat.r-lib.org" target="_blank" rel="noopener">testthat 2.3.0&lt;/a> is now available on CRAN!
testthat makes it easy to turn your existing informal tests into formal automated tests that you can rerun quickly and easily.
testthat is the most popular unit-testing package for R, and is used by over 4,000 CRAN and Bioconductor packages.
You can learn more about unit testing at &lt;a href="https://r-pkgs.org/tests.html">https://r-pkgs.org/tests.html&lt;/a>.&lt;/p>
&lt;p>(We didn&amp;rsquo;t write a blog post about testthat 2.2.0 because it only introduced a single, experimental, new feature: &lt;code>verify_output()&lt;/code>.
It has now matured to the point we think you should also try it out, so it&amp;rsquo;s discussed below.)&lt;/p>
&lt;p>Install the latest version of testthat with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;testthat&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This release features two main improvements:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>A general overhaul of condition and error handling.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A polished &lt;code>verify_output()&lt;/code> that is ready for you to use to test your
print methods and error messages.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>For a complete list of changes, please see the
&lt;a href="https://testthat.r-lib.org/news/index.html#testthat-2-3-0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testthat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="errors">Errors
&lt;a href="#errors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The main improvements are mostly behind the scenes: we have overhauled the handling of errors and backtraces so that you should get more informative outputs when tests error unexpectedly or fail.
It&amp;rsquo;s hard to authentically demonstrate this in an RMarkdown document, but if you have an error inside a test, like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">f&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nf">g&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">g&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nf">h&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">h&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nf">stop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;This is an error!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;f() works as expected&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You&amp;rsquo;ll now get an informative backtrace that should allow you to quickly locate the source of the error:&lt;/p>
&lt;pre>&lt;code>test-error.R:6: error: f() works as expected
This is an error!
Backtrace:
1. testthat::expect_equal(f(), 10) tests/testthat/test-error.R:6:2
4. testthat:::f()
5. testthat:::g() tests/testthat/test-catch.R:1:5
6. testthat:::h() tests/testthat/test-catch.R:2:5
&lt;/code>&lt;/pre>&lt;p>The previous version only showed the error message, which wasn&amp;rsquo;t terribly useful!&lt;/p>
&lt;h2 id="verify_output">&lt;code>verify_output()&lt;/code>
&lt;a href="#verify_output">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>verify_output()&lt;/code> is designed to test output aimed at a human, like print methods and error messages.
Here you want to test that the output is useful to a human, but there&amp;rsquo;s obviously no way to do that automatically.
Instead, the best you can do is to check the results with your eyeballs every time the results change.
&lt;code>verify_output()&lt;/code> is designed to help you do this, making it a type of visual regression test.&lt;/p>
&lt;p>You&amp;rsquo;ll need to use &lt;code>verify_output()&lt;/code> in concert with git.
Whenever the output changes, you&amp;rsquo;ll get a test failure, but to see the change, you&amp;rsquo;ll need to use git.
If the change is correct, commit it with git.
If it&amp;rsquo;s incorrect, fix your code and rerun the tests.
Once fixed, the git diff will disappear.&lt;/p>
&lt;p>&lt;code>verify_output()&lt;/code> works a little like RMarkdown: you give it some R code and it will run it, interleaving the input and output.
For example, imagine we were writing some tests to check that tibbles print correctly:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tibble&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tibbles print usefully&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">verify_output&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">test_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;test-print-dataframe.txt&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">df1&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1e6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That test yields a &lt;code>test-print-dataframe.txt&lt;/code> containing this output:&lt;/p>
&lt;pre>&lt;code>&amp;gt; df1 &amp;lt;- tibble(x = 1:1e+06)
&amp;gt; print(df1)
# A tibble: 1,000,000 x 1
x
&amp;lt;int&amp;gt;
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
# ... with 999,990 more rows
&lt;/code>&lt;/pre>&lt;p>Unfortunately, there&amp;rsquo;s no way for &lt;code>verify_output()&lt;/code> to capture comments, so you can instead use bare strings if you want comments to appear in the output. If you start the comment with &lt;code>#&lt;/code> it will be formatted as a heading:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tibbles print usefully&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">verify_output&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">test_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;test-print-dataframe-2.txt&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s">&amp;#34;# long tibbles&amp;#34;&lt;/span>
&lt;span class="n">df1&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">1e6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="s">&amp;#34;# wide tibbles&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;not yet written&amp;#34;&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>
long tibbles
============
&amp;gt; df1 &amp;lt;- tibble(x = 1:1e+06)
&amp;gt; print(df1)
# A tibble: 1,000,000 x 1
x
&amp;lt;int&amp;gt;
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
# ... with 999,990 more rows
wide tibbles
============
&amp;gt; # not yet written
&lt;/code>&lt;/pre>&lt;p>&lt;code>verify_output()&lt;/code> is automatically skipped when run on CRAN.
This avoids false positives because it&amp;rsquo;s very easy to accidentally depend on the code from other packages, and failure does not imply incorrect computation, just a change in presentation.
In other words, &lt;code>verify_output()&lt;/code> is meant to monitor the evolution of outputs produced by your package rather than checking for regressions.
In this way, it is similar to the
&lt;a href="http://vdiffr.r-lib.org/" target="_blank" rel="noopener">vdiffr&lt;/a> extension to testthat which uses the same approach to monitor the evolution of plots.&lt;/p>
&lt;h2 id="acknoweldgements">Acknoweldgements
&lt;a href="#acknoweldgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to everyone who helped make this version happen!
&lt;a href="https://github.com/aaronrudkin" target="_blank" rel="noopener">@aaronrudkin&lt;/a>,
&lt;a href="https://github.com/aneudecker" target="_blank" rel="noopener">@aneudecker&lt;/a>,
&lt;a href="https://github.com/atheriel" target="_blank" rel="noopener">@atheriel&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/cimentadaj" target="_blank" rel="noopener">@cimentadaj&lt;/a>,
&lt;a href="https://github.com/CorradoLanera" target="_blank" rel="noopener">@CorradoLanera&lt;/a>,
&lt;a href="https://github.com/cosi1" target="_blank" rel="noopener">@cosi1&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dtm2451" target="_blank" rel="noopener">@dtm2451&lt;/a>,
&lt;a href="https://github.com/EmielSchmeink" target="_blank" rel="noopener">@EmielSchmeink&lt;/a>,
&lt;a href="https://github.com/flying-sheep" target="_blank" rel="noopener">@flying-sheep&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gdurif" target="_blank" rel="noopener">@gdurif&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/ianmcook" target="_blank" rel="noopener">@ianmcook&lt;/a>,
&lt;a href="https://github.com/jameslamb" target="_blank" rel="noopener">@jameslamb&lt;/a>,
&lt;a href="https://github.com/jcheng5" target="_blank" rel="noopener">@jcheng5&lt;/a>,
&lt;a href="https://github.com/jcubic" target="_blank" rel="noopener">@jcubic&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jozefhajnala" target="_blank" rel="noopener">@jozefhajnala&lt;/a>,
&lt;a href="https://github.com/jpritikin" target="_blank" rel="noopener">@jpritikin&lt;/a>,
&lt;a href="https://github.com/keesh0" target="_blank" rel="noopener">@keesh0&lt;/a>,
&lt;a href="https://github.com/kenahoo" target="_blank" rel="noopener">@kenahoo&lt;/a>,
&lt;a href="https://github.com/KrishanBhasin" target="_blank" rel="noopener">@KrishanBhasin&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/maxheld83" target="_blank" rel="noopener">@maxheld83&lt;/a>,
&lt;a href="https://github.com/mcol" target="_blank" rel="noopener">@mcol&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/mkurdej" target="_blank" rel="noopener">@mkurdej&lt;/a>,
&lt;a href="https://github.com/MLopez-Ibanez" target="_blank" rel="noopener">@MLopez-Ibanez&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/mwmclean" target="_blank" rel="noopener">@mwmclean&lt;/a>,
&lt;a href="https://github.com/Nachtfeuer" target="_blank" rel="noopener">@Nachtfeuer&lt;/a>,
&lt;a href="https://github.com/nalzok" target="_blank" rel="noopener">@nalzok&lt;/a>,
&lt;a href="https://github.com/nbenn" target="_blank" rel="noopener">@nbenn&lt;/a>,
&lt;a href="https://github.com/oxr463" target="_blank" rel="noopener">@oxr463&lt;/a>,
&lt;a href="https://github.com/patr1ckm" target="_blank" rel="noopener">@patr1ckm&lt;/a>,
&lt;a href="https://github.com/richierocks" target="_blank" rel="noopener">@richierocks&lt;/a>,
&lt;a href="https://github.com/rillig" target="_blank" rel="noopener">@rillig&lt;/a>,
&lt;a href="https://github.com/sebastiangonsal" target="_blank" rel="noopener">@sebastiangonsal&lt;/a>,
&lt;a href="https://github.com/shrektan" target="_blank" rel="noopener">@shrektan&lt;/a>,
&lt;a href="https://github.com/StevenMaude" target="_blank" rel="noopener">@StevenMaude&lt;/a>,
&lt;a href="https://github.com/tdhock" target="_blank" rel="noopener">@tdhock&lt;/a>,
&lt;a href="https://github.com/theclue" target="_blank" rel="noopener">@theclue&lt;/a>,
&lt;a href="https://github.com/tjbell" target="_blank" rel="noopener">@tjbell&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/torbjorn" target="_blank" rel="noopener">@torbjorn&lt;/a>,
&lt;a href="https://github.com/trevorld" target="_blank" rel="noopener">@trevorld&lt;/a>,
&lt;a href="https://github.com/wlandau" target="_blank" rel="noopener">@wlandau&lt;/a>, and
&lt;a href="https://github.com/zappingseb" target="_blank" rel="noopener">@zappingseb&lt;/a>&lt;/p></description></item><item><title>styler 1.2.0</title><link>https://www.tidyverse.org/blog/2019/11/styler-1-2-0/</link><pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/11/styler-1-2-0/</guid><description>&lt;p>We are pleased to announce that
&lt;a href="https://styler.r-lib.org" target="_blank" rel="noopener">styler&lt;/a> 1.2.0 is now available on CRAN. The
&lt;a href="https://www.tidyverse.org/articles/2017/12/styler-1.0.0/" target="_blank" rel="noopener">initial version of styler&lt;/a>
was released in December 2017. Since then,
five new versions were released, and styler was improved substantially, but many
improvements were related to special cases or even edge cases. These are all
contained in the
&lt;a href="https://styler.r-lib.org/news/index.html" target="_blank" rel="noopener">change log&lt;/a>. Here,
we want to focus on a few changes since version 1.0.0 that we believe are the
most relevant. You can install the latest stable version from CRAN with
&lt;code>install.packages(&amp;quot;styler&amp;quot;)&lt;/code>. Let&amp;rsquo;s get started:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">styler&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="alignment-detection">Alignment detection
&lt;a href="#alignment-detection">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>styler can finally detect aligned code and keep it aligned! For example, the
following code won&amp;rsquo;t be modified by styler:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">call&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">some_arg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">123&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">more&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;x&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We&amp;rsquo;ve tried to make this as intuitive as possible, but have a look at
&lt;a href="https://styler.r-lib.org/articles/detect-alignment.html" target="_blank" rel="noopener">dedicated vignette&lt;/a>
when you are dealing with more complicated calls than the one above.
Note that the detection currently only works inside &lt;em>function calls&lt;/em>, so styler will not
recognize the below as aligned.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="m">2&lt;/span>
&lt;span class="n">x2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>and turn it into&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="m">2&lt;/span>
&lt;span class="n">x2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>unless you also use &lt;code>strict = FALSE&lt;/code>.^[E.g. &lt;code>styler::style_text(..., strict = FALSE)&lt;/code>, but note that this also has other effects on styling that you might not
want.]&lt;/p>
&lt;h2 id="rlangs-">rlang&amp;rsquo;s {{
&lt;a href="#rlangs-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In
&lt;a href="https://www.tidyverse.org/articles/2019/06/rlang-0-4-0/" target="_blank" rel="noopener">rlang 0.4.0&lt;/a> a new
interpolation operator was introduced: &lt;code>{{&lt;/code> (read curly curly). Because &lt;code>styler &amp;lt; 1.2.0&lt;/code> understood these as regular curly braces, you ended up with&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">call&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">x&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>when styling &lt;code>call({{x}})&lt;/code>, which is nonsense. Now styler yields &lt;code>call({{ x }})&lt;/code>.&lt;/p>
&lt;h2 id="addins">Addins
&lt;a href="#addins">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The &lt;em>Style active file&lt;/em> addin now remembers the cursor position and the details
of styling can be specified as an R option:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">styler.addins_style_transformer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;styler::tidyverse_style(scope = &amp;#39;spaces&amp;#39;)&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also set the value of this option interactively with the &lt;em>set style&lt;/em>
addin (not persistent over sessions). For details, see &lt;code>help(&amp;quot;styler_addins&amp;quot;, &amp;quot;styler&amp;quot;)&lt;/code>
and &lt;code>help(&amp;quot;tidyverse_style&amp;quot;, &amp;quot;styler&amp;quot;)&lt;/code>.&lt;/p>
&lt;p>The customization of the styling does not affect the command-line API
(&lt;code>styler::style_text()&lt;/code> and friends). We are not sure how users could best
customize styling, but you can track our progress on that in
&lt;a href="https://github.com/r-lib/styler/issues/319" target="_blank" rel="noopener">r-lib/styler#319&lt;/a>.&lt;/p>
&lt;p>You can also set the environment variable &lt;code>save_after_styling&lt;/code> to
&lt;code>TRUE&lt;/code>, if you are tired of saving the file after styling it with the addin.&lt;/p>
&lt;h2 id="braces-in-function-calls">Braces in function calls
&lt;a href="#braces-in-function-calls">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>tryCatch()&lt;/code> expressions often look like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">tryCatch&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="n">error&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">x&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Prior to version 1.2.0, styler would return this odd formatting:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">tryCatch&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="n">error&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">x&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, the line is broken before the opening curly brace in function calls, except
if there is only one brace expression and it&amp;rsquo;s the last in the function call.
The typical use case is &lt;code>testthat::test_that(...)&lt;/code>, i.e. the following code
won&amp;rsquo;t be modified:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;some condition holds&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">some_code&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="other-changes">Other changes
&lt;a href="#other-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>styler depends on tibble &amp;gt;= 1.4.2 and runs 2x as fast as initially.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>styler can style roxygen code examples in the source code of
packages.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>styler can style &lt;code>.Rnw&lt;/code> files.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The print method for the output of &lt;code>style_text()&lt;/code> returns
syntax-highlighted code by default, controllable via the option
&lt;code>styler.colored_print.vertical&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="adaption-of-styler">Adaption of styler
&lt;a href="#adaption-of-styler">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to highlight that styler integrates with various other tools you might
be using:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>As a git pre-commit hook. Two standard calls from the R console, and you are
all set. We are convinced that this is the preferred way of using styler to
ensure all your files are consistently formatted. Check out the
&lt;a href="https://lorenzwalthert.github.io/precommit/" target="_blank" rel="noopener">precommit&lt;/a> package that also
implements many other useful hooks.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>usethis::use_tidy_style()&lt;/code> styles your project according to the tidyverse
style guide.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>knitr::knitr()&lt;/code> and friends recognize the R code chunk option &lt;code>tidy = &amp;quot;styler&amp;quot;&lt;/code> for &lt;code>.Rnw&lt;/code> and &lt;code>.Rmd&lt;/code> files to pretty-print code.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>reprex::reprex(..., style = TRUE)&lt;/code> to prettify reprex code before printing.
To permanently use &lt;code>style = TRUE&lt;/code> without specifying it every time, you can
add the following line to your &lt;code>.Rprofile&lt;/code> (e.g. via
&lt;code>usethis::edit_r_profile()&lt;/code>): &lt;code>options(reprex.styler = TRUE)&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>There are plugins for
&lt;a href="https://github.com/lassik/emacs-format-all-the-code" target="_blank" rel="noopener">Emacs&lt;/a> and
&lt;a href="https://github.com/dense-analysis/ale/blob/master/doc/ale-r.txt" target="_blank" rel="noopener">VIM&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="outlook">Outlook
&lt;a href="#outlook">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We have some cool new features in the pipeline such as
&lt;a href="https://github.com/r-lib/styler/pull/538" target="_blank" rel="noopener">caching&lt;/a> for faster styling, and
&lt;a href="https://github.com/r-lib/styler/pull/560" target="_blank" rel="noopener">making styler ignore some lines&lt;/a>,
which you can try out by installing from the respective branches. Feedback welcome.&lt;/p>
&lt;h2 id="acknowledgments">Acknowledgments
&lt;a href="#acknowledgments">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We are grateful to all of the people who contributed not just code, but also
issues and comments over the last two years:&lt;/p>
&lt;p>
&lt;a href="https://github.com/aaronrudkin" target="_blank" rel="noopener">@aaronrudkin&lt;/a>,
&lt;a href="https://github.com/aedobbyn" target="_blank" rel="noopener">@aedobbyn&lt;/a>,
&lt;a href="https://github.com/ArthurPERE" target="_blank" rel="noopener">@ArthurPERE&lt;/a>,
&lt;a href="https://github.com/Banana1530" target="_blank" rel="noopener">@Banana1530&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/Bio7" target="_blank" rel="noopener">@Bio7&lt;/a>,
&lt;a href="https://github.com/ClaytonJY" target="_blank" rel="noopener">@ClaytonJY&lt;/a>,
&lt;a href="https://github.com/courtiol" target="_blank" rel="noopener">@courtiol&lt;/a>,
&lt;a href="https://github.com/crew102" target="_blank" rel="noopener">@crew102&lt;/a>,
&lt;a href="https://github.com/cpsievert" target="_blank" rel="noopener">@cpsievert&lt;/a>,
&lt;a href="https://github.com/dchiu911" target="_blank" rel="noopener">@dchiu911&lt;/a>,
&lt;a href="https://github.com/devSJR" target="_blank" rel="noopener">@devSJR&lt;/a>,
&lt;a href="https://github.com/dirkschumacher" target="_blank" rel="noopener">@dirkschumacher&lt;/a>,
&lt;a href="https://github.com/ellessenne" target="_blank" rel="noopener">@ellessenne&lt;/a>,
&lt;a href="https://github.com/Emiller88" target="_blank" rel="noopener">@Emiller88&lt;/a>,
&lt;a href="https://github.com/fny" target="_blank" rel="noopener">@fny&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/Hasnep" target="_blank" rel="noopener">@Hasnep&lt;/a>,
&lt;a href="https://github.com/igordot" target="_blank" rel="noopener">@igordot&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jackwasey" target="_blank" rel="noopener">@jackwasey&lt;/a>,
&lt;a href="https://github.com/jcrodriguez1989" target="_blank" rel="noopener">@jcrodriguez1989&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jjramsey" target="_blank" rel="noopener">@jjramsey&lt;/a>,
&lt;a href="https://github.com/jkgrain" target="_blank" rel="noopener">@jkgrain&lt;/a>
&lt;a href="https://github.com/jonmcalder" target="_blank" rel="noopener">@jonmcalder&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/kalibera" target="_blank" rel="noopener">@kalibera&lt;/a>,
&lt;a href="https://github.com/katrinleinweber" target="_blank" rel="noopener">@katrinleinweber&lt;/a>,
&lt;a href="https://github.com/kiranmaiganji" target="_blank" rel="noopener">@kiranmaiganji&lt;/a>,
&lt;a href="https://github.com/krivit" target="_blank" rel="noopener">@krivit&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/llrs" target="_blank" rel="noopener">@llrs&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/lwjohnst86" target="_blank" rel="noopener">@lwjohnst86&lt;/a>,
&lt;a href="https://github.com/martin-mfg" target="_blank" rel="noopener">@martin-mfg&lt;/a>,
&lt;a href="https://github.com/maurolepore" target="_blank" rel="noopener">@maurolepore&lt;/a>,
&lt;a href="https://github.com/michaelquinn32" target="_blank" rel="noopener">@michaelquinn32&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/Moohan" target="_blank" rel="noopener">@Moohan&lt;/a>,
&lt;a href="https://github.com/msberends" target="_blank" rel="noopener">@msberends&lt;/a>,
&lt;a href="https://github.com/NGaffney" target="_blank" rel="noopener">@NGaffney&lt;/a>,
&lt;a href="https://github.com/nxskok" target="_blank" rel="noopener">@nxskok&lt;/a>,
&lt;a href="https://github.com/oliverbeagley" target="_blank" rel="noopener">@oliverbeagley&lt;/a>,
&lt;a href="https://github.com/pat-s" target="_blank" rel="noopener">@pat-s&lt;/a>,
&lt;a href="https://github.com/ramnathv" target="_blank" rel="noopener">@ramnathv&lt;/a>,
&lt;a href="https://github.com/raynamharris" target="_blank" rel="noopener">@raynamharris&lt;/a>,
&lt;a href="https://github.com/reddy-ia" target="_blank" rel="noopener">@reddy-ia&lt;/a>,
&lt;a href="https://github.com/riccardoporreca" target="_blank" rel="noopener">@riccardoporreca&lt;/a>,
&lt;a href="https://github.com/rillig" target="_blank" rel="noopener">@rillig&lt;/a>,
&lt;a href="https://github.com/rjake" target="_blank" rel="noopener">@rjake&lt;/a>,
&lt;a href="https://github.com/Robinlovelace" target="_blank" rel="noopener">@Robinlovelace&lt;/a>,
&lt;a href="https://github.com/RMHogervorst" target="_blank" rel="noopener">@RMHogervorst&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/russHyde" target="_blank" rel="noopener">@russHyde&lt;/a>,
&lt;a href="https://github.com/samhinshaw" target="_blank" rel="noopener">@samhinshaw&lt;/a>,
&lt;a href="https://github.com/skirmer" target="_blank" rel="noopener">@skirmer&lt;/a>,
&lt;a href="https://github.com/thalesmello" target="_blank" rel="noopener">@thalesmello&lt;/a>,
&lt;a href="https://github.com/tobiasgerstenberg" target="_blank" rel="noopener">@tobiasgerstenberg&lt;/a>,
&lt;a href="https://github.com/tonytonov" target="_blank" rel="noopener">@tonytonov&lt;/a>,
&lt;a href="https://github.com/tvatter" target="_blank" rel="noopener">@tvatter&lt;/a>,
&lt;a href="https://github.com/vnijs" target="_blank" rel="noopener">@vnijs&lt;/a>,
&lt;a href="https://github.com/wdearden" target="_blank" rel="noopener">@wdearden&lt;/a>,
&lt;a href="https://github.com/wlandau" target="_blank" rel="noopener">@wlandau&lt;/a>,
&lt;a href="https://github.com/wmayner" target="_blank" rel="noopener">@wmayner&lt;/a>,
&lt;a href="https://github.com/yech1990" target="_blank" rel="noopener">@yech1990&lt;/a> and
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>.&lt;/p></description></item><item><title>devtools 2.2.1</title><link>https://www.tidyverse.org/blog/2019/09/devtools-2-2-1/</link><pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/09/devtools-2-2-1/</guid><description>
&lt;h2 id="introduction">Introduction
&lt;a href="#introduction">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://devtools.r-lib.org" target="_blank" rel="noopener">devtools&lt;/a> 2.2.1 is now on CRAN!&lt;/p>
&lt;p>devtools makes package development easier by providing R functions that
simplify and expedite common tasks. R Packages is a book based around this
workflow, which you can read online for free (
&lt;a href="http://r-pkgs.had.co.nz/" target="_blank" rel="noopener">1st
edition&lt;/a>, in-progress
&lt;a href="https://r-pkgs.org/" target="_blank" rel="noopener">2nd
edition&lt;/a>).&lt;/p>
&lt;p>Apart from the new features mentioned below this release also contains a number
of smaller changes and bug fixes. As always a complete list of all the changes
is available in the package
&lt;a href="https://devtools.r-lib.org/news/index.html" target="_blank" rel="noopener">Changelog&lt;/a>.&lt;/p>
&lt;h2 id="new-features">New features
&lt;a href="#new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="create">&lt;code>create()&lt;/code>
&lt;a href="#create">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The &lt;code>create()&lt;/code> function has been re-added to the package. This functions was
previously removed in favor of &lt;code>usethis::create_package()&lt;/code> but it turns out the
RStudio IDE uses &lt;code>devtools::create()&lt;/code> as part of its create new project dialog,
so removing the function would break this functionality in older versions of
RStudio. &lt;code>create()&lt;/code> is however simply an alias for &lt;code>usethis::create_package()&lt;/code>,
so you are free to use whichever you would prefer in your own use.&lt;/p>
&lt;h3 id="dev_sitrep">&lt;code>dev_sitrep()&lt;/code>
&lt;a href="#dev_sitrep">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>A new function &lt;code>dev_sitrep()&lt;/code> can be used to get a &amp;ldquo;situation report&amp;rdquo; about
your development setup. This is important when working on your own packages,
but also to help people get up and running quickly during developer events such
as the
&lt;a href="https://github.com/tidyverse/dev-day-2019" target="_blank" rel="noopener">Tidyverse Dev Days&lt;/a>. It
provides a series of checks that you have the latest versions of R, RStudio,
RTools and package dependencies, along with instructions on how to update them
if needed.&lt;/p>
&lt;p>&lt;img src="https://www.tidyverse.org/images/devtools-2.2.1/sitrep.png" alt="dev_sitrep() output">&lt;/p>
&lt;h3 id="ellipsis">ellipsis
&lt;a href="#ellipsis">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The
&lt;a href="http://ellipsis.r-lib.org/" target="_blank" rel="noopener">ellipsis package&lt;/a> provides a function
&lt;code>check_dots_used()&lt;/code> which ensures that all arguments specified in &lt;code>...&lt;/code> have
been used. Devtools uses &lt;code>...&lt;/code> to pass arguments down to base R functions such
as &lt;code>install.packages()&lt;/code>. If the arguments are invalid, such as mis-typing a
argument name they would often be silently ignored rather than throwing an
error. Using ellipsis instead causes a full error to occur in these cases,
catching many more bugs when they happen. &lt;code>check_dots_used()&lt;/code> is now used for
any devtools function taking &lt;code>...&lt;/code>.&lt;/p>
&lt;p>devtools 2.2.1 introduces a new option &lt;code>devtools.ellipsis_action&lt;/code> to control
the behavior of ellipsis in devtools. Because there are some cases, like when a
given package is already installed, that devtools does not actually use any of
the arguments in &lt;code>...&lt;/code>.&lt;/p>
&lt;p>&lt;code>devtools.ellipsis_action&lt;/code> takes one of the following arguments&lt;/p>
&lt;ul>
&lt;li>&lt;code>rlang::abort&lt;/code> - to emit an error if arguments are unused&lt;/li>
&lt;li>&lt;code>rlang::warn&lt;/code> - to emit a warning if arguments are unused&lt;/li>
&lt;li>&lt;code>rlang::inform&lt;/code> - to emit a message if arguments are unused&lt;/li>
&lt;li>&lt;code>rlang::signal&lt;/code> - to emit a message if arguments are unused&lt;/li>
&lt;/ul>
&lt;p>Using &lt;code>rlang::signal&lt;/code> will produce no output unless the custom condition is
caught, so it is the best way to retain backwards compatibility with devtools
behavior prior to 2.2.0.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We are of grateful to &lt;em>all&lt;/em> of the &lt;em>29&lt;/em> people who contributed not just code, but also issues and comments for this release:
&lt;a href="https://github.com/amit0thesingularity" target="_blank" rel="noopener">@amit0thesingularity&lt;/a>,
&lt;a href="https://github.com/bbimber" target="_blank" rel="noopener">@bbimber&lt;/a>,
&lt;a href="https://github.com/Cervangirard" target="_blank" rel="noopener">@Cervangirard&lt;/a>,
&lt;a href="https://github.com/dachosen1" target="_blank" rel="noopener">@dachosen1&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/deslaur" target="_blank" rel="noopener">@deslaur&lt;/a>,
&lt;a href="https://github.com/djnavarro" target="_blank" rel="noopener">@djnavarro&lt;/a>,
&lt;a href="https://github.com/DSLituiev" target="_blank" rel="noopener">@DSLituiev&lt;/a>,
&lt;a href="https://github.com/DzLGasoline" target="_blank" rel="noopener">@DzLGasoline&lt;/a>,
&lt;a href="https://github.com/f527" target="_blank" rel="noopener">@f527&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hrbrmstr" target="_blank" rel="noopener">@hrbrmstr&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jameslamb" target="_blank" rel="noopener">@jameslamb&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jrowen" target="_blank" rel="noopener">@jrowen&lt;/a>,
&lt;a href="https://github.com/k-doering-NOAA" target="_blank" rel="noopener">@k-doering-NOAA&lt;/a>,
&lt;a href="https://github.com/mezerji1365" target="_blank" rel="noopener">@mezerji1365&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/neonira" target="_blank" rel="noopener">@neonira&lt;/a>,
&lt;a href="https://github.com/njtierney" target="_blank" rel="noopener">@njtierney&lt;/a>,
&lt;a href="https://github.com/p-rocha" target="_blank" rel="noopener">@p-rocha&lt;/a>,
&lt;a href="https://github.com/programgirl" target="_blank" rel="noopener">@programgirl&lt;/a>,
&lt;a href="https://github.com/realDongWang" target="_blank" rel="noopener">@realDongWang&lt;/a>,
&lt;a href="https://github.com/RoundNose" target="_blank" rel="noopener">@RoundNose&lt;/a>,
&lt;a href="https://github.com/rstub" target="_blank" rel="noopener">@rstub&lt;/a>,
&lt;a href="https://github.com/tbates" target="_blank" rel="noopener">@tbates&lt;/a>, and
&lt;a href="https://github.com/TomKellyGenetics" target="_blank" rel="noopener">@TomKellyGenetics&lt;/a>&lt;/p></description></item><item><title>Multi Process Task Queue in 100 Lines of R Code</title><link>https://www.tidyverse.org/blog/2019/09/callr-task-q/</link><pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/09/callr-task-q/</guid><description>
&lt;STYLE type='text/css' scoped>
PRE.fansi SPAN {padding-top: .25em; padding-bottom: .25em};
&lt;/STYLE>
&lt;div id="introduction" class="section level2">
&lt;h2>Introduction&lt;/h2>
&lt;p>This post is a demo of &lt;code>callr::r_session&lt;/code>, a persistent R session you can
use to run R code asynchronously. I set out to build a task queue, which
runs tasks in subprocesses, concurrently, in a mere 100 lines of R code.&lt;/p>
&lt;p>Here is a short teaser for how the queue will work. &lt;code>task_q$new()&lt;/code> creates
a new R6 object, which represents the queue. Its &lt;code>push()&lt;/code> method adds a
task, which is a function and its arguments, similar to &lt;code>callr::r()&lt;/code>.
The &lt;code>pop()&lt;/code> method gets the results of the first task that has finished.
&lt;code>pop()&lt;/code> has a timeout argument, which lets you wait for a task to finish,
if all pushed tasks are still running. It returns &lt;code>NULL&lt;/code> if no task has
finished before the timeout was over. The timeout can be &lt;code>0&lt;/code> or &lt;code>Inf&lt;/code>,
meaning no wait at all, or wait indefinitely. The default timeout is &lt;code>0&lt;/code>.&lt;/p>
&lt;pre class="r">&lt;code>q &amp;lt;- task_q$new()
q$push(function() { Sys.getpid() })
q$push(function() { Sys.sleep(.5); Sys.getpid() })
q$pop()
#&amp;gt; NULL&lt;/code>&lt;/pre>
&lt;p>This &lt;code>pop()&lt;/code> call returned &lt;code>NULL&lt;/code>, as none of the tasks are done yet.
Even though running &lt;code>Sys.getpid()&lt;/code> is fast, the worker processes also need
200-500 ms time start up, when the queue is created. If you are willing to
wait a bit, at least one task should be done in less than half a second
(500 ms), but usually not the second one yet:&lt;/p>
&lt;pre class="r">&lt;code>q$pop(500)$result
#&amp;gt; [1] 18383
q$pop()
#&amp;gt; NULL&lt;/code>&lt;/pre>
&lt;p>The &lt;code>poll()&lt;/code> method checks for finished tasks without removing their
results from the queue. It also has a timeout parameter, which works the
same way as &lt;code>pop()&lt;/code>’s timeout. &lt;code>poll()&lt;/code> returns the identifiers of all
tasks that are done.&lt;/p>
&lt;pre class="r">&lt;code>q$poll(Inf)
#&amp;gt; [1] &amp;quot;.2&amp;quot;
q$pop()$result
#&amp;gt; [1] 18385&lt;/code>&lt;/pre>
&lt;p>If the queue is empty, i.e. no tasks are running and no tasks are waiting,
then &lt;code>pop()&lt;/code> always returns &lt;code>NULL&lt;/code>, immediately, because there is nothing
to wait for:&lt;/p>
&lt;pre class="r">&lt;code>q$pop()
#&amp;gt; NULL&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="api-design" class="section level2">
&lt;h2>API design&lt;/h2>
&lt;p>The task queue will be an R6 class, with &lt;code>push()&lt;/code>, &lt;code>pop()&lt;/code>, &lt;code>poll()&lt;/code>
methods like above, and some other query methods:&lt;/p>
&lt;pre class="r">&lt;code>task_q &amp;lt;- R6::R6Class(
&amp;quot;task_q&amp;quot;,
public = list(
initialize = function(num_workers = 4L) { },
get_num_waiting = function() { },
get_num_running = function() { },
get_num_done = function() { },
is_idle = function() { },
list_tasks = function() { },
push = function(fun, args = list(), id = NULL) { },
poll = function(timeout = 0) { },
pop = function(timeout = 0) { }
)
)&lt;/code>&lt;/pre>
&lt;p>&lt;code>initialize()&lt;/code> has an argument to set the number of workers. The size of
the worker pool remains fixed for the lifetime of the queue.&lt;/p>
&lt;p>The &lt;code>get_num_*()&lt;/code> methods return the number of waiting, running and
completed tasks. &lt;code>get_num_done()&lt;/code> includes tasks that haven’t been
&lt;code>pop()&lt;/code>-d yet. Once a task is &lt;code>pop()&lt;/code>-d, it is removed completely from the
queue.&lt;/p>
&lt;p>&lt;code>is_idle()&lt;/code> returns &lt;code>TRUE&lt;/code> if the queue does not have any tasks (in any
state). &lt;code>list_tasks()&lt;/code> returns a data frame (tibble) with data about the
tasks. This is especially useful for debugging.&lt;/p>
&lt;p>&lt;code>push()&lt;/code> adds a task to the queue. &lt;code>poll()&lt;/code> returns the ids of all tasks
that are done. &lt;code>pop()&lt;/code> returns the result of the oldest task that is done.&lt;/p>
&lt;/div>
&lt;div id="data-structure" class="section level2">
&lt;h2>Data structure&lt;/h2>
&lt;p>Before writing the methods, I’ll design the data structure that will
store all information about the tasks and the worker processes. The
standard data structure for a list of records is a data frame in R.&lt;/p>
&lt;p>A logical choice would be to have two data frames, one for the
tasks, and another one for the workers. Then we could assign unique
identifiers to both tasks and processes and cross-reference them in the
two data frames, to mark which task a worker is running, and which worker
a task is running on.&lt;/p>
&lt;p>I’ll go a step further here, and store both the tasks and the workers
&lt;em>in the same&lt;/em> data frame. This will simplify the implementation
considerably. The queue will create a dummy &lt;em>idle&lt;/em> task for each worker.
Each worker will (pretend to) run its dummy task if there are no other,
real tasks waiting in the queue. So the task list will always contain at
least as many tasks as the number of workers in the queue.&lt;/p>
&lt;p>An example for a task data frame:&lt;/p>
&lt;pre class="r">&lt;code>q$list_tasks()
#&amp;gt; # A tibble: 9 x 7
#&amp;gt; id idle state fun args worker result
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt;
#&amp;gt; 1 .11 FALSE running &amp;lt;fn&amp;gt; &amp;lt;list [1]&amp;gt; &amp;lt;r_sessin&amp;gt; &amp;lt;NULL&amp;gt;
#&amp;gt; 2 .12 FALSE running &amp;lt;fn&amp;gt; &amp;lt;list [1]&amp;gt; &amp;lt;r_sessin&amp;gt; &amp;lt;NULL&amp;gt;
#&amp;gt; 3 .13 FALSE running &amp;lt;fn&amp;gt; &amp;lt;list [1]&amp;gt; &amp;lt;r_sessin&amp;gt; &amp;lt;NULL&amp;gt;
#&amp;gt; 4 .14 FALSE running &amp;lt;fn&amp;gt; &amp;lt;list [1]&amp;gt; &amp;lt;r_sessin&amp;gt; &amp;lt;NULL&amp;gt;
#&amp;gt; 5 .15 FALSE waiting &amp;lt;fn&amp;gt; &amp;lt;list [1]&amp;gt; &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt;
#&amp;gt; 6 .idle-1 TRUE waiting &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt;
#&amp;gt; 7 .idle-2 TRUE waiting &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt;
#&amp;gt; 8 .idle-3 TRUE waiting &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt;
#&amp;gt; 9 .idle-4 TRUE waiting &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt; &amp;lt;NULL&amp;gt;&lt;/code>&lt;/pre>
&lt;p>The columns are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>id&lt;/code>: a character id, which can be user-supplied or auto-assigned (if the
user did not supply it). This is useful to identify tasks.&lt;/li>
&lt;li>&lt;code>idle&lt;/code>: a logical flag, whether this is a dummy idle task or not.&lt;/li>
&lt;li>&lt;code>state&lt;/code>: current state of the task. More about this shortly.&lt;/li>
&lt;li>&lt;code>fun&lt;/code>: the function the task needs to run. This is a list column.&lt;/li>
&lt;li>&lt;code>args&lt;/code>: arguments to pass to the function. This is a list itself,
so the column is a list column.&lt;/li>
&lt;li>&lt;code>worker&lt;/code>: the &lt;code>callr::r_session&lt;/code> object, the R session that is running
the task, or &lt;code>NULL&lt;/code> if the task is not running.&lt;/li>
&lt;li>&lt;code>result&lt;/code>: another list column, the result of the run, if the task is
already done, &lt;code>NULL&lt;/code> otherwise.&lt;/li>
&lt;/ul>
&lt;p>The possible task states are: &lt;em>waiting&lt;/em>, &lt;em>running&lt;/em>, &lt;em>ready&lt;/em> and &lt;em>done&lt;/em>.
The first two are not very surprising. The distinction between the
last two is somewhat technical. A task is &lt;em>ready&lt;/em> if the background R
session has finished running it. The queue hasn’t read out its result yet,
and the R session is still assigned to it. (I.e. the task’s &lt;code>worker&lt;/code> column
is not &lt;code>NULL&lt;/code>.) A task is &lt;em>done&lt;/em> if the queue has already read out the
result of the function call, and has reassigned the R session to another
task, so its &lt;code>worker&lt;/code> column is &lt;code>NULL&lt;/code>.&lt;/p>
&lt;p>Tasks that are &lt;em>running&lt;/em> and &lt;em>ready&lt;/em> always have an R session assigned to
them. Since all R sessions are always assigned to tasks (dummy idle tasks,
if there is nothing else), this means the that the sum of the &lt;em>running&lt;/em>
and &lt;em>ready&lt;/em> tasks always equals the number of workers.&lt;/p>
&lt;p>The idle tasks are somewhat special, because they are never &lt;em>done&lt;/em>. If
an idle task is &lt;em>ready&lt;/em> and its worker is reassigned, it will be &lt;em>waiting&lt;/em>
again. They are also almost never in the &lt;em>running&lt;/em> state. When the queue
assigns a worker to an idle task, the task will immediately go into the
&lt;em>ready&lt;/em> state, since the queue is immediately allowed to re-assign the
worker, should a real task be &lt;em>waiting&lt;/em>.&lt;/p>
&lt;p>However, when a worker is starting up, its idle task is &lt;em>running&lt;/em>, until
their background R process has started up. After this initial &lt;em>running&lt;/em>
state the idle tasks are always either &lt;em>waiting&lt;/em> or &lt;em>ready&lt;/em>.&lt;/p>
&lt;/div>
&lt;div id="implementation" class="section level2">
&lt;h2>Implementation&lt;/h2>
&lt;p>I am ready to start the implementation now. I’ll focus on the individual
methods here, and show the complete code of the R6 class at the end.
Let’s start with the internal data. &lt;code>tasks&lt;/code> contains the task data frame,
&lt;code>initialize()&lt;/code> will create it. &lt;code>next_id&lt;/code> and &lt;code>get_next_id&lt;/code> will provide
us unique task ids. I prefix these with a dot, to increase the probability
that they won’t interfere with user supplied task ids. So they’ll
be &lt;code>&amp;quot;.1&amp;quot;&lt;/code>, &lt;code>&amp;quot;.2&amp;quot;&lt;/code>, etc.&lt;/p>
&lt;pre class="r">&lt;code> private = list(
tasks = NULL,
next_id = 1L,
get_next_id = function() {
id &amp;lt;- private$next_id
private$next_id &amp;lt;- id + 1L
paste0(&amp;quot;.&amp;quot;, id)
}
)&lt;/code>&lt;/pre>
&lt;p>The &lt;code>initialize()&lt;/code> method will just defer the work to a private method.&lt;/p>
&lt;pre class="r">&lt;code> initialize = function(num_workers = 4L) {
private$start_workers(num_workers)
invisible(self)
}&lt;/code>&lt;/pre>
&lt;p>The private &lt;code>start_workers()&lt;/code> method that actually starts the
workers and creates the &lt;code>tasks&lt;/code> data frame:&lt;/p>
&lt;pre class="r">&lt;code> start_workers = function(num_workers) {
private$tasks &amp;lt;- tibble::tibble(
id = character(), idle = logical(),
state = c(&amp;quot;waiting&amp;quot;, &amp;quot;running&amp;quot;, &amp;quot;ready&amp;quot;, &amp;quot;done&amp;quot;)[0],
fun = list(), args = list(), worker = list(), result = list())
for (i in seq_len(num_workers)) {
rs &amp;lt;- callr::r_session$new(wait = FALSE)
private$tasks &amp;lt;- tibble::add_row(private$tasks,
id = paste0(&amp;quot;.idle-&amp;quot;, i), idle = TRUE, state = &amp;quot;running&amp;quot;,
fun = list(NULL), args = list(NULL), worker = list(rs),
result = list(NULL))
}
}&lt;/code>&lt;/pre>
&lt;p>The starting values of the empty task data frame are mostly straightforward.
If you are wondering about the indexing with zero here, it is a simple
way to list all possible task states in the code, in one place, as a note
for the code reader.&lt;/p>
&lt;p>&lt;code>callr::r_session$new()&lt;/code> starts a background R process. The &lt;code>wait = FALSE&lt;/code>
argument tells callr &lt;em>not&lt;/em> to wait until the process is ready to run R
code. This way the R processes start up in parallel, which is worth the
trouble of making our dummy tasks a bit more complicated. The idle tasks
are named &lt;code>.idle-*&lt;/code>. After initialization, the workers are started, and
the &lt;em>running&lt;/em> idle tasks are added to the data frame.&lt;/p>
&lt;p>The query methods are next:&lt;/p>
&lt;pre class="r">&lt;code> list_tasks = function() private$tasks,
get_num_waiting = function()
sum(!private$tasks$idle &amp;amp; private$tasks$state == &amp;quot;waiting&amp;quot;),
get_num_running = function() sum(private$tasks$state == &amp;quot;running&amp;quot;),
get_num_done = function() sum(private$tasks$state == &amp;quot;done&amp;quot;),
is_idle = function() sum(!private$tasks$idle) == 0
&lt;/code>&lt;/pre>
&lt;p>&lt;code>list_tasks()&lt;/code> will just return the task data frame, for simplicity.
If not all data is needed, the &lt;code>get_num_*()&lt;/code> functions are simpler.
For the first two, we need to exclude the dummy idle tasks, because they
can be in the &lt;em>waiting&lt;/em> and &lt;em>running&lt;/em> state as well. They cannot be in the
&lt;em>done&lt;/em> state.&lt;/p>
&lt;p>We still need to write the &lt;code>push()&lt;/code>, &lt;code>pop()&lt;/code> and &lt;code>poll()&lt;/code> public methods.
As the reader might suspect, these are more involved. Let’s start with
&lt;code>push()&lt;/code>.&lt;/p>
&lt;pre class="r">&lt;code> push = function(fun, args = list(), id = NULL) {
if (is.null(id)) id &amp;lt;- private$get_next_id()
if (id %in% private$tasks$id) stop(&amp;quot;Duplicate task id&amp;quot;)
before &amp;lt;- which(private$tasks$idle)[1]
private$tasks &amp;lt;- tibble::add_row(private$tasks, .before = before,
id = id, idle = FALSE, state = &amp;quot;waiting&amp;quot;, fun = list(fun),
args = list(args), worker = list(NULL), result = list(NULL))
private$schedule()
invisible(id)
}&lt;/code>&lt;/pre>
&lt;p>The queue needs to run the tasks in the same order as they were added.
The data frame will keep the correct order, with the additional
tweak that the idle tasks are always at the end. Indeed, these should only
run if there is no other task waiting. So &lt;code>push()&lt;/code> adds the new task right
before the idle tasks.&lt;/p>
&lt;p>The &lt;code>schedule()&lt;/code> private method is the core of the queue. It starts the
tasks on the selected background R workers, and it also reads out the
results after they are done. I.e. it performs the &lt;em>waiting&lt;/em> to &lt;em>running&lt;/em> and
&lt;em>ready&lt;/em> to &lt;em>done&lt;/em> task state transitions. We will show it later.&lt;/p>
&lt;p>&lt;code>push()&lt;/code> returns the id of the newly added task, this can be helpful
to follow the task and match it to the results of a &lt;code>pop()&lt;/code> call.&lt;/p>
&lt;p>&lt;code>pop()&lt;/code> uses &lt;code>poll()&lt;/code> to get a list of tasks that are &lt;em>done&lt;/em>, and returns
the result of the oldest one, which is always the first, thanks to the
ordering of the task data frame.&lt;/p>
&lt;pre class="r">&lt;code> pop = function(timeout = 0) {
if (is.na(done &amp;lt;- self$poll(timeout)[1])) return(NULL)
row &amp;lt;- match(done, private$tasks$id)
result &amp;lt;- private$tasks$result[[row]]
private$tasks &amp;lt;- private$tasks[-row, ]
c(result, list(task_id = done))
}&lt;/code>&lt;/pre>
&lt;p>If no task is &lt;em>done&lt;/em>, then it returns &lt;code>NULL&lt;/code>. The returned task is removed
from the task data frame, and from the queue in general, for good. &lt;code>pop()&lt;/code>
adds the id of the task to the returned result as &lt;code>task_id&lt;/code>, for easier
matching of tasks to results.&lt;/p>
&lt;p>&lt;code>poll()&lt;/code> is the only method that checks on the running workers. This is
important to remember, and unfortunately easy to forget. If the user does
not call &lt;code>poll()&lt;/code>, either directly or via &lt;code>pop()&lt;/code>, the state of a &lt;em>running&lt;/em>
task cannot change, even if the background R session itself has finished.
In other words, one cannot check the status of the tasks by listing
the task data frame with &lt;code>list_tasks()&lt;/code> periodically. This will never
change if &lt;code>poll()&lt;/code> is not called.&lt;/p>
&lt;p>I start with an initial version of &lt;code>poll()&lt;/code>, which will need changes later,
but this is hopefully easier to understand first:&lt;/p>
&lt;pre class="r">&lt;code> poll = function(timeout = 0) {
as_ms &amp;lt;- function(x) if (x == Inf) -1L else as.integer(x)
topoll &amp;lt;- which(private$tasks$state == &amp;quot;running&amp;quot;)
conns &amp;lt;- lapply(
private$tasks$worker[topoll],
function(x) x$get_poll_connection())
pr &amp;lt;- processx::poll(conns, as_ms(timeout))
private$tasks$state[topoll][pr == &amp;quot;ready&amp;quot;] &amp;lt;- &amp;quot;ready&amp;quot;
private$schedule()
private$tasks$id[private$tasks$state == &amp;quot;done&amp;quot;]
}&lt;/code>&lt;/pre>
&lt;p>We only need to check on tasks that are &lt;em>running&lt;/em>. &lt;code>poll()&lt;/code> uses the
&lt;code>processx::poll()&lt;/code> function that can wait on several &lt;code>callr::r_session&lt;/code>s
at once. More precisely, I extract the &lt;em>poll connections&lt;/em> of the
&lt;code>r_session&lt;/code> objects and call &lt;code>processx::poll()&lt;/code> on these. An &lt;code>r_session&lt;/code>
may have multiple pollable connections, one for its standard output
stream, one for its standard error stream. These are not used by default
in &lt;code>r_session&lt;/code>s, and I only want to check on the poll connection, which
signals if the R session has finished with the computation (or encountered
an error while working on it). &lt;code>processx::poll()&lt;/code> returns a list of
character vectors, one entry for each (&lt;em>running&lt;/em>) task. This is &lt;code>&amp;quot;ready&amp;quot;&lt;/code>
if the session is ready with the task. (Or it is &lt;code>&amp;quot;silent&amp;quot;&lt;/code> if it is not
ready, or &lt;code>&amp;quot;timeout&amp;quot;&lt;/code> if the time limit expired and no workers are ready.)&lt;/p>
&lt;p>All tasks that returned &lt;code>&amp;quot;ready&amp;quot;&lt;/code> are indeed set to the &lt;em>ready&lt;/em> state.
After this &lt;code>poll()&lt;/code> calls &lt;code>schedule()&lt;/code> to read out the results of the
&lt;em>ready&lt;/em> tasks and reassign their workers to &lt;em>waiting&lt;/em> ones.&lt;/p>
&lt;p>&lt;code>poll()&lt;/code> returns the ids of all tasks that are &lt;em>done&lt;/em>.&lt;/p>
&lt;p>This version of &lt;code>poll()&lt;/code> has a small issue when the R sessions are starting
up: it might return without any results, before the specified timeout
value is over. At startup the idle tasks are &lt;em>running,&lt;/em> and they are
polled by &lt;code>processx::poll()&lt;/code>. If any of the R sessions start up before the
timeout is over, &lt;code>processx::poll()&lt;/code> returns with &lt;code>&amp;quot;ready&amp;quot;&lt;/code> for them.
But &lt;code>schedule()&lt;/code> cannot mark these tasks as &lt;em>done&lt;/em>, because they are idle
tasks, they’ll be &lt;em>waiting&lt;/em>, and with no task &lt;em>done&lt;/em>, &lt;code>poll()&lt;/code>
will return an empty vector. This is problematic, because &lt;code>poll()&lt;/code>
promises to either wait until the specified timeout &lt;em>or&lt;/em> return a task
that is &lt;em>done&lt;/em>. So we need to wrap the simplified &lt;code>poll()&lt;/code> into a loop, and
keep calling &lt;code>processx::poll()&lt;/code> until either the timeout
expires or a task is &lt;em>done&lt;/em>. The final &lt;code>poll()&lt;/code> looks like this:&lt;/p>
&lt;pre class="r">&lt;code> poll = function(timeout = 0) {
limit &amp;lt;- Sys.time() + timeout
as_ms &amp;lt;- function(x) if (x == Inf) -1L else as.integer(x)
repeat{
topoll &amp;lt;- which(private$tasks$state == &amp;quot;running&amp;quot;)
conns &amp;lt;- lapply(
private$tasks$worker[topoll],
function(x) x$get_poll_connection())
pr &amp;lt;- processx::poll(conns, as_ms(timeout))
private$tasks$state[topoll][pr == &amp;quot;ready&amp;quot;] &amp;lt;- &amp;quot;ready&amp;quot;
private$schedule()
ret &amp;lt;- private$tasks$id[private$tasks$state == &amp;quot;done&amp;quot;]
if (is.finite(timeout)) timeout &amp;lt;- limit - Sys.time()
if (length(ret) || timeout &amp;lt; 0) break;
}
ret
}&lt;/code>&lt;/pre>
&lt;p>Only the private &lt;code>schedule()&lt;/code> method is missing now:&lt;/p>
&lt;pre class="r">&lt;code> schedule = function() {
ready &amp;lt;- which(private$tasks$state == &amp;quot;ready&amp;quot;)
if (!length(ready)) return()
rss &amp;lt;- private$tasks$worker[ready]
private$tasks$result[ready] &amp;lt;- lapply(rss, function(x) x$read())
private$tasks$worker[ready] &amp;lt;- replicate(length(ready), NULL)
private$tasks$state[ready] &amp;lt;-
ifelse(private$tasks$idle[ready], &amp;quot;waiting&amp;quot;, &amp;quot;done&amp;quot;)
waiting &amp;lt;- which(private$tasks$state == &amp;quot;waiting&amp;quot;)[1:length(ready)]
private$tasks$worker[waiting] &amp;lt;- rss
private$tasks$state[waiting] &amp;lt;-
ifelse(private$tasks$idle[waiting], &amp;quot;ready&amp;quot;, &amp;quot;running&amp;quot;)
lapply(waiting, function(i) {
if (! private$tasks$idle[i]) {
private$tasks$worker[[i]]$call(private$tasks$fun[[i]],
private$tasks$args[[i]])
}
})
}&lt;/code>&lt;/pre>
&lt;p>&lt;code>schedule()&lt;/code>’s job is to perform the &lt;em>ready&lt;/em> to &lt;em>done&lt;/em> and the
&lt;em>waiting&lt;/em> to &lt;em>running&lt;/em> state transitions. The first involves reading
out the results of the &lt;em>ready&lt;/em> tasks and the second involves starting
new computation on the workers.&lt;/p>
&lt;p>For every &lt;em>ready&lt;/em> task, &lt;code>schedule()&lt;/code> perform three steps:&lt;/p>
&lt;ol style="list-style-type: decimal">
&lt;li>Reads out and stores its result. (It can do this for the idle tasks
as well, for these &lt;code>r_session$read()&lt;/code> will return &lt;code>NULL&lt;/code>.)&lt;/li>
&lt;li>Removes its worker, i.e. sets it to &lt;code>NULL&lt;/code>.&lt;/li>
&lt;li>Updates its state to &lt;em>done&lt;/em>. (Or to &lt;em>waiting&lt;/em> if it is an idle task.)&lt;/li>
&lt;/ol>
&lt;p>Then it deals with the &lt;em>waiting&lt;/em> tasks, but not more than the number of
&lt;em>ready&lt;/em> tasks the queue had. For these &lt;em>waiting&lt;/em> tasks &lt;code>schedule()&lt;/code>
performs three steps:&lt;/p>
&lt;ol style="list-style-type: decimal">
&lt;li>Assigns a just removed worker to it.&lt;/li>
&lt;li>Sets state to &lt;em>running&lt;/em>. (Or to &lt;em>ready&lt;/em> for idle tasks.)&lt;/li>
&lt;li>Calls &lt;code>fun(args)&lt;/code> in the background session.&lt;/li>
&lt;/ol>
&lt;p>When selecting the waiting tasks to run, the ordering of the task table
makes sure that the oldest task is selected first, and that idle tasks
are only selected if there is nothing else to run. The idle tasks make sure
that &lt;code>schedule()&lt;/code> always has at least as many waiting tasks as ready.&lt;/p>
&lt;p>It is possible that &lt;code>schedule()&lt;/code> first sets an idle task to &lt;em>waiting&lt;/em> and
then selects it and (re-)assigns a worker to it. This is perfectly fine.&lt;/p>
&lt;/div>
&lt;div id="try-it-out" class="section level2">
&lt;h2>Try it out&lt;/h2>
&lt;p>As a simple example, we add a bunch of fake tasks to a queue, and then
run a simple event loop to completion. (To run this code, first
you need to run the complete code at the end of the post.)&lt;/p>
&lt;pre class="r">&lt;code>q &amp;lt;- task_q$new()
for (i in 1:10) {
q$push(function(i) { Sys.sleep(runif(1)); paste(i, &amp;quot;done&amp;quot;) }, list(i = i))
}&lt;/code>&lt;/pre>
&lt;p>This is how the queue looks after adding all these tasks:&lt;/p>
&lt;pre class="r">&lt;code>q$list_tasks()&lt;/code>&lt;/pre>
&lt;PRE class="fansi fansi-output">&lt;CODE>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 14 x 7&lt;/span>&lt;span>
#&amp;gt; id idle state fun args worker result
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 1&lt;/span>&lt;span> .1 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 2&lt;/span>&lt;span> .2 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 3&lt;/span>&lt;span> .3 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 4&lt;/span>&lt;span> .4 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 5&lt;/span>&lt;span> .5 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 6&lt;/span>&lt;span> .6 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 7&lt;/span>&lt;span> .7 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 8&lt;/span>&lt;span> .8 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 9&lt;/span>&lt;span> .9 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>10&lt;/span>&lt;span> .10 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>11&lt;/span>&lt;span> .idle-1 TRUE running &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;r_sessin&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>12&lt;/span>&lt;span> .idle-2 TRUE running &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;r_sessin&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>13&lt;/span>&lt;span> .idle-3 TRUE running &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;r_sessin&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>14&lt;/span>&lt;span> .idle-4 TRUE running &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;r_sessin&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
&lt;/span>&lt;/CODE>&lt;/PRE>
&lt;p>Probably no tasks are running just yet. The queue only has the chance to
change its state when you &lt;code>push()&lt;/code>, &lt;code>pop()&lt;/code> or &lt;code>poll()&lt;/code>. When pushing the
tasks to the queue, the workers were still starting up (i.e. the idle tasks
are &lt;em>running&lt;/em>), so &lt;code>push()&lt;/code> could not start any real tasks. Never mind, as
soon as you try to &lt;code>pop()&lt;/code> or &lt;code>poll()&lt;/code>, they’ll start running:&lt;/p>
&lt;pre class="r">&lt;code>q$poll(1000L)
#&amp;gt; [1] &amp;quot;.2&amp;quot;
q$list_tasks()&lt;/code>&lt;/pre>
&lt;PRE class="fansi fansi-output">&lt;CODE>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 14 x 7&lt;/span>&lt;span>
#&amp;gt; id idle state fun args worker result
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 1&lt;/span>&lt;span> .1 FALSE running &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;r_sessin&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 2&lt;/span>&lt;span> .2 FALSE done &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;cllr_ss_&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 3&lt;/span>&lt;span> .3 FALSE running &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;r_sessin&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 4&lt;/span>&lt;span> .4 FALSE running &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;r_sessin&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 5&lt;/span>&lt;span> .5 FALSE running &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;r_sessin&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 6&lt;/span>&lt;span> .6 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 7&lt;/span>&lt;span> .7 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 8&lt;/span>&lt;span> .8 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 9&lt;/span>&lt;span> .9 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>10&lt;/span>&lt;span> .10 FALSE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;fn&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;named list [1]&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>11&lt;/span>&lt;span> .idle-1 TRUE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;cllr_ss_&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>12&lt;/span>&lt;span> .idle-2 TRUE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;cllr_ss_&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>13&lt;/span>&lt;span> .idle-3 TRUE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;cllr_ss_&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>14&lt;/span>&lt;span> .idle-4 TRUE waiting &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;'>&amp;lt;cllr_ss_&amp;gt;&lt;/span>&lt;span>
&lt;/span>&lt;/CODE>&lt;/PRE>
&lt;pre class="r">&lt;code>while (!q$is_idle()) {
task_result &amp;lt;- q$pop(Inf)
print(task_result$result)
}
#&amp;gt; [1] &amp;quot;1 done&amp;quot;
#&amp;gt; [1] &amp;quot;2 done&amp;quot;
#&amp;gt; [1] &amp;quot;3 done&amp;quot;
#&amp;gt; [1] &amp;quot;4 done&amp;quot;
#&amp;gt; [1] &amp;quot;6 done&amp;quot;
#&amp;gt; [1] &amp;quot;5 done&amp;quot;
#&amp;gt; [1] &amp;quot;7 done&amp;quot;
#&amp;gt; [1] &amp;quot;8 done&amp;quot;
#&amp;gt; [1] &amp;quot;9 done&amp;quot;
#&amp;gt; [1] &amp;quot;10 done&amp;quot;&lt;/code>&lt;/pre>
&lt;p>&lt;code>pop()&lt;/code> just returns whatever &lt;code>r_session$read()&lt;/code> returns. Here is the last
result from the loop:&lt;/p>
&lt;pre class="r">&lt;code>task_result
#&amp;gt; $code
#&amp;gt; [1] 200
#&amp;gt;
#&amp;gt; $message
#&amp;gt; [1] &amp;quot;done file47c57a1f62b5&amp;quot;
#&amp;gt;
#&amp;gt; $result
#&amp;gt; [1] &amp;quot;10 done&amp;quot;
#&amp;gt;
#&amp;gt; $stdout
#&amp;gt; [1] &amp;quot;&amp;quot;
#&amp;gt;
#&amp;gt; $stderr
#&amp;gt; [1] &amp;quot;&amp;quot;
#&amp;gt;
#&amp;gt; $error
#&amp;gt; NULL
#&amp;gt;
#&amp;gt; $task_id
#&amp;gt; [1] &amp;quot;.10&amp;quot;&lt;/code>&lt;/pre>
&lt;p>The important fields are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>result&lt;/code>: the R object returned from the function. This is &lt;code>NULL&lt;/code> on
error.&lt;/li>
&lt;li>&lt;code>stdout&lt;/code>: the standard output of the background session, while running the
function.&lt;/li>
&lt;li>&lt;code>stderr&lt;/code>: the standard error.&lt;/li>
&lt;li>&lt;code>error&lt;/code>: error object if the function failed. &lt;code>NULL&lt;/code> otherwise.&lt;/li>
&lt;li>&lt;code>task_id&lt;/code>: the user supplied or auto-generated task id.&lt;/li>
&lt;/ul>
&lt;p>Let’s see a task that errors.&lt;/p>
&lt;pre class="r">&lt;code>q$push(function() stop(&amp;quot;This failed, sorry&amp;quot;))
res &amp;lt;- q$pop(Inf)
res$error
#&amp;gt; &amp;lt;callr_status_error: callr subprocess failed: This failed, sorry&amp;gt;
#&amp;gt; in process
#&amp;gt; --&amp;gt;
#&amp;gt; &amp;lt;callr_remote_error in (function () stop(&amp;quot;This failed, sorry&amp;quot;))(): This failed, sorry&amp;gt;&lt;/code>&lt;/pre>
&lt;p>The error has two parts, the first refers to the main process, and the
second is the original error, thrown in the background process. To help with
debugging, the error from the background process includes a stack trace:&lt;/p>
&lt;pre class="r">&lt;code>res$error$parent$trace&lt;/code>&lt;/pre>
&lt;PRE class="fansi fansi-output">&lt;CODE>#&amp;gt;
#&amp;gt; &lt;span style='font-weight: bold;'> ERROR TRACE for simpleError&lt;/span>&lt;span>
#&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 12. &lt;/span>&lt;span>(function () ...
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 13. &lt;/span>&lt;span style='color: #BBBB00;'>base:::stop&lt;/span>&lt;span>("This failed, sorry")
#&amp;gt; &lt;/span>&lt;span style='color: #00BBBB;font-style: italic;'>R/&amp;lt;text&amp;gt;:1:8&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 14. &lt;/span>&lt;span style='color: #BBBB00;'>base:::.handleSimpleError&lt;/span>&lt;span>(function (e) ...
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 15. &lt;/span>&lt;span style='color: #BBBB00;'>h&lt;/span>&lt;span>(simpleError(msg, call))
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;font-weight: bold;'>
#&amp;gt; x This failed, sorry &lt;/span>&lt;span>
&lt;/span>&lt;/CODE>&lt;/PRE>
&lt;p>For this simple function that just calls &lt;code>stop()&lt;/code>, the trace is not
very exciting, but it can be very helpful in general.&lt;/p>
&lt;/div>
&lt;div id="how-about-process-cleanup" class="section level2">
&lt;h2>How about process cleanup?&lt;/h2>
&lt;p>Luckily we don’t have to do anything extra to clean up the R processes.
&lt;code>callr::r_session&lt;/code> objects kill their background R session in their
finalizer, i.e. when they are garbage collected. As soon as the
workers have no references, because e.g. the queue object itself has no
references, the garbage collector will clean them up. An explicit &lt;code>kill()&lt;/code>
method would be still useful sometimes, but we leave that as an exercise to
the reader.&lt;/p>
&lt;/div>
&lt;div id="possible-improvements" class="section level2">
&lt;h2>Possible improvements&lt;/h2>
&lt;p>To use this task queue in real code, you would need to make it a bit more
robust and flexible.&lt;/p>
&lt;ol style="list-style-type: decimal">
&lt;li>Most importantly, you would need to handle crashes and freezes in the
worker tasks. &lt;code>callr::r_session&lt;/code> does handle crashes properly, i.e.
&lt;code>poll()&lt;/code> returns immediately if the session crashes, and then &lt;code>read()&lt;/code>
returns an informative error result. But the task queue should also do
something sensible in this case, e.g. return the error result, and
restart the worker.&lt;/li>
&lt;li>To handle freezing worker tasks, the queue could support task timeouts,
and then kill the tasks that don’t finish before their timeout expires.
This can be probably implemented using the &lt;code>r_session$interrupt()&lt;/code> and
&lt;code>r_session$kill()&lt;/code> methods.&lt;/li>
&lt;li>Make the queue interrupt-safe. All operations of the queue (e.g.
&lt;code>poll()&lt;/code>, &lt;code>pop()&lt;/code>, etc.) are interruptible by the user, but they
don’t always leave the task data frame and the background sessions in a
consistent state. E.g. if &lt;code>schedule()&lt;/code> is interrupted and you are
unlucky, you might lose all worker processes. This is a very hard issue
to solve, the relatively new &lt;code>suspendInterrupts()&lt;/code> function probably
helps a lot.&lt;/li>
&lt;li>It would be great to be able to change the number of worker tasks of
the queue dynamically, i.e. add and remove worker processes.&lt;/li>
&lt;li>The whole queue could be implemented in a background process, so that
the scheduler runs concurrently with the main R process. This is far
from being trivial, especially if one wants to avoid copying data
(the function arguments) twice for every task.&lt;/li>
&lt;/ol>
&lt;/div>
&lt;div id="complete-code" class="section level2">
&lt;h2>Complete code&lt;/h2>
&lt;p>It is also available &lt;a href="https://github.com/r-lib/callr/blob/811a02f604de2cf03264f6b35ce9ec8a412f2581/vignettes/taskq.R">on GitHub&lt;/a>.&lt;/p>
&lt;pre class="r">&lt;code>task_q &amp;lt;- R6::R6Class(
&amp;quot;task_q&amp;quot;,
public = list(
initialize = function(concurrency = 4L) {
private$start_workers(concurrency)
invisible(self)
},
list_tasks = function() private$tasks,
get_num_waiting = function()
sum(!private$tasks$idle &amp;amp; private$tasks$state == &amp;quot;waiting&amp;quot;),
get_num_running = function()
sum(!private$tasks$idle &amp;amp; private$tasks$state == &amp;quot;running&amp;quot;),
get_num_done = function() sum(private$tasks$state == &amp;quot;done&amp;quot;),
is_idle = function() sum(!private$tasks$idle) == 0,
push = function(fun, args = list(), id = NULL) {
if (is.null(id)) id &amp;lt;- private$get_next_id()
if (id %in% private$tasks$id) stop(&amp;quot;Duplicate task id&amp;quot;)
before &amp;lt;- which(private$tasks$idle)[1]
private$tasks &amp;lt;- tibble::add_row(private$tasks, .before = before,
id = id, idle = FALSE, state = &amp;quot;waiting&amp;quot;, fun = list(fun),
args = list(args), worker = list(NULL), result = list(NULL))
private$schedule()
invisible(id)
},
poll = function(timeout = 0) {
limit &amp;lt;- Sys.time() + timeout
as_ms &amp;lt;- function(x) if (x == Inf) -1L else as.integer(x)
repeat{
topoll &amp;lt;- which(private$tasks$state == &amp;quot;running&amp;quot;)
conns &amp;lt;- lapply(
private$tasks$worker[topoll],
function(x) x$get_poll_connection())
pr &amp;lt;- processx::poll(conns, as_ms(timeout))
private$tasks$state[topoll][pr == &amp;quot;ready&amp;quot;] &amp;lt;- &amp;quot;ready&amp;quot;
private$schedule()
ret &amp;lt;- private$tasks$id[private$tasks$state == &amp;quot;done&amp;quot;]
if (is.finite(timeout)) timeout &amp;lt;- limit - Sys.time()
if (length(ret) || timeout &amp;lt; 0) break;
}
ret
},
pop = function(timeout = 0) {
if (is.na(done &amp;lt;- self$poll(timeout)[1])) return(NULL)
row &amp;lt;- match(done, private$tasks$id)
result &amp;lt;- private$tasks$result[[row]]
private$tasks &amp;lt;- private$tasks[-row, ]
c(result, list(task_id = done))
}
),
private = list(
tasks = NULL,
next_id = 1L,
get_next_id = function() {
id &amp;lt;- private$next_id
private$next_id &amp;lt;- id + 1L
paste0(&amp;quot;.&amp;quot;, id)
},
start_workers = function(concurrency) {
private$tasks &amp;lt;- tibble::tibble(
id = character(), idle = logical(),
state = c(&amp;quot;waiting&amp;quot;, &amp;quot;running&amp;quot;, &amp;quot;ready&amp;quot;, &amp;quot;done&amp;quot;)[NULL],
fun = list(), args = list(), worker = list(), result = list())
for (i in seq_len(concurrency)) {
rs &amp;lt;- callr::r_session$new(wait = FALSE)
private$tasks &amp;lt;- tibble::add_row(private$tasks,
id = paste0(&amp;quot;.idle-&amp;quot;, i), idle = TRUE, state = &amp;quot;running&amp;quot;,
fun = list(NULL), args = list(NULL), worker = list(rs),
result = list(NULL))
}
},
schedule = function() {
ready &amp;lt;- which(private$tasks$state == &amp;quot;ready&amp;quot;)
if (!length(ready)) return()
rss &amp;lt;- private$tasks$worker[ready]
private$tasks$result[ready] &amp;lt;- lapply(rss, function(x) x$read())
private$tasks$worker[ready] &amp;lt;- replicate(length(ready), NULL)
private$tasks$state[ready] &amp;lt;-
ifelse(private$tasks$idle[ready], &amp;quot;waiting&amp;quot;, &amp;quot;done&amp;quot;)
waiting &amp;lt;- which(private$tasks$state == &amp;quot;waiting&amp;quot;)[1:length(ready)]
private$tasks$worker[waiting] &amp;lt;- rss
private$tasks$state[waiting] &amp;lt;-
ifelse(private$tasks$idle[waiting], &amp;quot;ready&amp;quot;, &amp;quot;running&amp;quot;)
lapply(waiting, function(i) {
if (! private$tasks$idle[i]) {
private$tasks$worker[[i]]$call(private$tasks$fun[[i]],
private$tasks$args[[i]])
}
})
}
)
)&lt;/code>&lt;/pre>
&lt;/div></description></item><item><title>pkgdown 1.4.0</title><link>https://www.tidyverse.org/blog/2019/09/pkgdown-1-4-0/</link><pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/09/pkgdown-1-4-0/</guid><description>&lt;p>We&amp;rsquo;re happy to announce that
&lt;a href="https://pkgdown.r-lib.org/" target="_blank" rel="noopener">pkgdown&lt;/a> 1.4.0 is now
available on CRAN. pkgdown is designed to make it quick and easy to build a
website for your package. Install it with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;pkgdown&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="development-and-deployment-modes">Development and deployment modes
&lt;a href="#development-and-deployment-modes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The main change in this version is that
&lt;a href="https://pkgdown.r-lib.org/reference/build_site.html" target="_blank" rel="noopener">&lt;code>build_site()&lt;/code>&lt;/a>,
&lt;a href="https://pkgdown.r-lib.org/reference/build_reference.html" target="_blank" rel="noopener">&lt;code>build_reference()&lt;/code>&lt;/a> and
&lt;a href="https://pkgdown.r-lib.org/reference/build_home.html" target="_blank" rel="noopener">&lt;code>build_home()&lt;/code>&lt;/a> gain a &lt;code>devel&lt;/code> parameter that controls whether you&amp;rsquo;re in deployment or development mode.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>devel = FALSE&lt;/code> activates deployment mode, which installs the package into a
temporary library, and runs examples/articles in a new process. It&amp;rsquo;s the
default for &lt;code>build_site()&lt;/code>.&lt;/p>
&lt;p>If you&amp;rsquo;re using &lt;code>build_site()&lt;/code> as part of an existing deployment workflow,
you may need to set &lt;code>install = FALSE&lt;/code> so that the package doesn&amp;rsquo;t get
installed twice.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>devel = TRUE&lt;/code> activates development mode, simulates package loading with
&lt;code>pkgload::load_all()&lt;/code> and does all work in the same process. This makes it
most suitable for rapid iteration, and so is the default for
&lt;code>build_reference()&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>There were two related changes to &lt;code>build_reference()&lt;/code> and &lt;code>build_home()&lt;/code>: &lt;code>build_reference()&lt;/code> no longer runs &lt;code>devtools::document()&lt;/code> and &lt;code>build_home()&lt;/code> no longer rebuilds &lt;code>README.Rmd&lt;/code>. This makes pkgdown&amp;rsquo;s responsibilities more clear: it only modifies files in &lt;code>docs/&lt;/code>.&lt;/p>
&lt;h2 id="other-important-changes">Other important changes
&lt;a href="#other-important-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://pkgdown.r-lib.org/reference/build_home.html" target="_blank" rel="noopener">&lt;code>build_home()&lt;/code>&lt;/a> now
strips quotes from &lt;code>Title&lt;/code> and &lt;code>Description&lt;/code> fields when generating page
metadata. Additionally, you can now override the defaults via the &lt;code>title&lt;/code>
and &lt;code>description&lt;/code> fields in the &lt;code>home&lt;/code> section of &lt;code>_pkgdown.yml&lt;/code>. Setting a
custom title is good practice as it allows you to add &amp;ldquo;R&amp;rdquo; and &amp;ldquo;package&amp;rdquo; to
the title, which is likely to be useful for SEO.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://pkgdown.r-lib.org/articles/linking.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;linking&amp;quot;)&lt;/code>&lt;/a>
describes how pkgdown&amp;rsquo;s automatic linking works, and how to ensure that
cross-package links point to the right place.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For external packages, if we can&amp;rsquo;t find an existing pkgdown website to link
to we now link to &lt;a href="https://rdrr.io">https://rdrr.io&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The rendering of &lt;code>\examples{}&lt;/code>, &lt;code>\dots&lt;/code>, &lt;code>\tabular{}&lt;/code>, &lt;code>\subsection{}&lt;/code>,
and &lt;code>\preformatted{}&lt;/code> has been improved.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The navbar is now automatically hidden with
&lt;a href="https://wicky.nillia.ms/headroom.js/" target="_blank" rel="noopener">headroom.js&lt;/a>, and the sidebar
is implemented with pure CSS.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thank you goes to
&lt;a href="https://github.com/jayhesselberth" target="_blank" rel="noopener">@jayhesselberth&lt;/a> (the co-maintainer of pkgdown), and to to the 77 other people who contributed to the release:
&lt;a href="https://github.com/abodnahk" target="_blank" rel="noopener">@abodnahk&lt;/a>,
&lt;a href="https://github.com/agila5" target="_blank" rel="noopener">@agila5&lt;/a>,
&lt;a href="https://github.com/AliciaSchep" target="_blank" rel="noopener">@AliciaSchep&lt;/a>,
&lt;a href="https://github.com/andrie" target="_blank" rel="noopener">@andrie&lt;/a>,
&lt;a href="https://github.com/aravind-j" target="_blank" rel="noopener">@aravind-j&lt;/a>,
&lt;a href="https://github.com/asardaes" target="_blank" rel="noopener">@asardaes&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/Blackglade" target="_blank" rel="noopener">@Blackglade&lt;/a>,
&lt;a href="https://github.com/burgerga" target="_blank" rel="noopener">@burgerga&lt;/a>,
&lt;a href="https://github.com/cboettig" target="_blank" rel="noopener">@cboettig&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/chfleming" target="_blank" rel="noopener">@chfleming&lt;/a>,
&lt;a href="https://github.com/choisy" target="_blank" rel="noopener">@choisy&lt;/a>,
&lt;a href="https://github.com/CrumpLab" target="_blank" rel="noopener">@CrumpLab&lt;/a>,
&lt;a href="https://github.com/davidski" target="_blank" rel="noopener">@davidski&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/ddiez" target="_blank" rel="noopener">@ddiez&lt;/a>,
&lt;a href="https://github.com/docbiz" target="_blank" rel="noopener">@docbiz&lt;/a>,
&lt;a href="https://github.com/dongzhuoer" target="_blank" rel="noopener">@dongzhuoer&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/echasnovski" target="_blank" rel="noopener">@echasnovski&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/emilyriederer" target="_blank" rel="noopener">@emilyriederer&lt;/a>,
&lt;a href="https://github.com/espinielli" target="_blank" rel="noopener">@espinielli&lt;/a>,
&lt;a href="https://github.com/florisvdh" target="_blank" rel="noopener">@florisvdh&lt;/a>,
&lt;a href="https://github.com/flying-sheep" target="_blank" rel="noopener">@flying-sheep&lt;/a>,
&lt;a href="https://github.com/Fredo-XVII" target="_blank" rel="noopener">@Fredo-XVII&lt;/a>,
&lt;a href="https://github.com/grabear" target="_blank" rel="noopener">@grabear&lt;/a>,
&lt;a href="https://github.com/GregorDeCillia" target="_blank" rel="noopener">@GregorDeCillia&lt;/a>,
&lt;a href="https://github.com/gustavdelius" target="_blank" rel="noopener">@gustavdelius&lt;/a>,
&lt;a href="https://github.com/gvegayon" target="_blank" rel="noopener">@gvegayon&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/ijlyttle" target="_blank" rel="noopener">@ijlyttle&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jackwasey" target="_blank" rel="noopener">@jackwasey&lt;/a>,
&lt;a href="https://github.com/jangorecki" target="_blank" rel="noopener">@jangorecki&lt;/a>,
&lt;a href="https://github.com/jemus42" target="_blank" rel="noopener">@jemus42&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a>,
&lt;a href="https://github.com/JohnCoene" target="_blank" rel="noopener">@JohnCoene&lt;/a>,
&lt;a href="https://github.com/katrinleinweber" target="_blank" rel="noopener">@katrinleinweber&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/kkmann" target="_blank" rel="noopener">@kkmann&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/maksymiuks" target="_blank" rel="noopener">@maksymiuks&lt;/a>,
&lt;a href="https://github.com/manish-saraswat-olx" target="_blank" rel="noopener">@manish-saraswat-olx&lt;/a>,
&lt;a href="https://github.com/maurolepore" target="_blank" rel="noopener">@maurolepore&lt;/a>,
&lt;a href="https://github.com/maxheld83" target="_blank" rel="noopener">@maxheld83&lt;/a>,
&lt;a href="https://github.com/maximilianmordig" target="_blank" rel="noopener">@maximilianmordig&lt;/a>,
&lt;a href="https://github.com/mcanouil" target="_blank" rel="noopener">@mcanouil&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/mitchelloharawild" target="_blank" rel="noopener">@mitchelloharawild&lt;/a>,
&lt;a href="https://github.com/mjsteinbaugh" target="_blank" rel="noopener">@mjsteinbaugh&lt;/a>,
&lt;a href="https://github.com/msberends" target="_blank" rel="noopener">@msberends&lt;/a>,
&lt;a href="https://github.com/muschellij2" target="_blank" rel="noopener">@muschellij2&lt;/a>,
&lt;a href="https://github.com/NEONKID" target="_blank" rel="noopener">@NEONKID&lt;/a>,
&lt;a href="https://github.com/noamross" target="_blank" rel="noopener">@noamross&lt;/a>,
&lt;a href="https://github.com/nteetor" target="_blank" rel="noopener">@nteetor&lt;/a>,
&lt;a href="https://github.com/paul-buerkner" target="_blank" rel="noopener">@paul-buerkner&lt;/a>,
&lt;a href="https://github.com/peterdesmet" target="_blank" rel="noopener">@peterdesmet&lt;/a>,
&lt;a href="https://github.com/ramiromagno" target="_blank" rel="noopener">@ramiromagno&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/royfrancis" target="_blank" rel="noopener">@royfrancis&lt;/a>,
&lt;a href="https://github.com/s-fleck" target="_blank" rel="noopener">@s-fleck&lt;/a>,
&lt;a href="https://github.com/scizmeli" target="_blank" rel="noopener">@scizmeli&lt;/a>,
&lt;a href="https://github.com/sdhutchins" target="_blank" rel="noopener">@sdhutchins&lt;/a>,
&lt;a href="https://github.com/seanhardison1" target="_blank" rel="noopener">@seanhardison1&lt;/a>,
&lt;a href="https://github.com/seymakalay" target="_blank" rel="noopener">@seymakalay&lt;/a>,
&lt;a href="https://github.com/sharlagelfand" target="_blank" rel="noopener">@sharlagelfand&lt;/a>,
&lt;a href="https://github.com/surmann" target="_blank" rel="noopener">@surmann&lt;/a>,
&lt;a href="https://github.com/talgalili" target="_blank" rel="noopener">@talgalili&lt;/a>,
&lt;a href="https://github.com/TheOnlyArtz" target="_blank" rel="noopener">@TheOnlyArtz&lt;/a>,
&lt;a href="https://github.com/thierrygosselin" target="_blank" rel="noopener">@thierrygosselin&lt;/a>,
&lt;a href="https://github.com/thomasp85" target="_blank" rel="noopener">@thomasp85&lt;/a>,
&lt;a href="https://github.com/tobyhodges" target="_blank" rel="noopener">@tobyhodges&lt;/a>, and
&lt;a href="https://github.com/yiluheihei" target="_blank" rel="noopener">@yiluheihei&lt;/a>&lt;/p></description></item><item><title>gmailr v1.0.0</title><link>https://www.tidyverse.org/blog/2019/08/gmailr-1-0-0/</link><pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/08/gmailr-1-0-0/</guid><description>
&lt;h2 id="introduction">Introduction
&lt;a href="#introduction">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>gmailr v1.0.0 (&lt;a href="https://gmailr.r-lib.org">https://gmailr.r-lib.org&lt;/a>) is now on CRAN!&lt;/p>
&lt;p>gmailr wraps the
&lt;a href="https://developers.google.com/gmail/" target="_blank" rel="noopener">Gmail REST API v3&lt;/a>. It provides a variety of funcitons to query your mailbox and create and send new email messages. You can retrieve, create and send emails and drafts, manage email labels, trash and untrash emails, and delete messages, drafts and threads.&lt;/p>
&lt;p>The tidyverse team uses gmailr most often to send emails to the maintainers of packages which depend on our packages, to inform them when a new package release is imminent or if any of our changes require action on their part.&lt;/p>
&lt;p>Install gmailr with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;gmailr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The release of version 1.0.0 marks three events:&lt;/p>
&lt;ul>
&lt;li>There are changes in the auth interface that are not backwards compatible.&lt;/li>
&lt;li>The built-in application has been removed.&lt;/li>
&lt;li>The functions have all been prefixed with &lt;code>gm_()&lt;/code>, to avoid name conflicts with functions in other packages (including the base package).&lt;/li>
&lt;/ul>
&lt;p>There is also new functionality that make writing emails with non-ASCII characters more robust, and improved documentation. See the
&lt;a href="http://gmailr.r-lib.org/news/index.html#gmailr-1-0-0" target="_blank" rel="noopener">changelog&lt;/a> for the full details on this release.&lt;/p>
&lt;h2 id="auth-from-gargle">Auth from gargle
&lt;a href="#auth-from-gargle">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>gmailr&amp;rsquo;s auth functionality now comes from the
&lt;a href="https://gargle.r-lib.org" target="_blank" rel="noopener">gargle package&lt;/a>, which provides R infrastructure to work with Google APIs, in general. We&amp;rsquo;ve just
&lt;a href="https://www.tidyverse.org/articles/2019/08/gargle-hello-world/" target="_blank" rel="noopener">blogged about gargle&amp;rsquo;s initial release&lt;/a>, so check out that post for more details.&lt;/p>
&lt;p>We&amp;rsquo;re adopting gargle for auth in several other packages, such as
&lt;a href="https://bigrquery.r-dbi.org" target="_blank" rel="noopener">bigrquery&lt;/a> (&amp;gt;= v1.2.0),
&lt;a href="https://googledrive.r-lib.org" target="_blank" rel="noopener">googledrive&lt;/a> (&amp;gt;= v1.0.0), and
&lt;a href="https://googlesheets4.tidyverse.org" target="_blank" rel="noopener">googlesheets4&lt;/a> (currently GitHub-only, successor of googlesheets). This makes new token flows available in these packages, such as
&lt;a href="https://www.jhanley.com/google-cloud-application-default-credentials/" target="_blank" rel="noopener">Application Default Credentials&lt;/a>, and makes auth less idiosyncratic.&lt;/p>
&lt;h3 id="auth-changes-the-typical-user-will-notice">Auth changes the typical user will notice
&lt;a href="#auth-changes-the-typical-user-will-notice">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The functions used for authentication have changed. Use &lt;code>gm_auth_configure()&lt;/code> to configure your application and then &lt;code>gm_auth()&lt;/code> to actually authenticate your user with the application.&lt;/p>
&lt;blockquote>
&lt;p>OAuth2 tokens are now cached at the user level, by default, instead of in &lt;code>.httr-oauth&lt;/code> in the current project. We will ask if it&amp;rsquo;s OK to create a new folder to hold your OAuth tokens. We recommend that you delete any vestigial &lt;code>.httr-oauth&lt;/code> files lying around your gmailr projects and re-authorize gmailr, i.e. get a new token, stored in the new way.&lt;/p>
&lt;/blockquote>
&lt;p>The new strategy makes it harder to accidentally push your tokens to the cloud, easier to use multiple Google identities, and easier to share tokens across projects and packages.&lt;/p>
&lt;p>Overall, gmailr has gotten more careful about getting your permission to use a cached token. See the gargle vignette
&lt;a href="https://gargle.r-lib.org/articles/non-interactive-auth.html" target="_blank" rel="noopener">Non-interactive auth&lt;/a> to learn how to prevent attempts to interact with you, especially the section
&lt;a href="https://gargle.r-lib.org/articles/non-interactive-auth.html#arrange-for-an-oauth-token-to-be-re-discovered" target="_blank" rel="noopener">&amp;ldquo;Arrange for an oauth token to be re-discovered&amp;rdquo;&lt;/a>.&lt;/p>
&lt;p>gmailr also removes the built-in OAuth &amp;ldquo;app&amp;rdquo;. This was nessesary to comply with
&lt;a href="https://developers.google.com/terms/api-services-user-data-policy#additional-requirements-for-specific-api-scopes" target="_blank" rel="noopener">stricter rules and enforcement&lt;/a> by google for Gmail API applications. It was not possible to comply with these rules and continue to have a default application embedded in gmailr. See the
&lt;a href="http://gmailr.r-lib.org/#setup" target="_blank" rel="noopener">setup&lt;/a> section of the readme for how to create a new project and authenticate it with only a few steps. gmailr operates under the same
&lt;a href="https://www.tidyverse.org/google_privacy_policy/" target="_blank" rel="noopener">Privacy Policy&lt;/a> as other tidyverse API packages, the most relevant bit for users is &amp;lsquo;The packages only communicate with Google APIs. No user data is shared with the owners of the Tidyverse API Packages, RStudio, or any other servers.&amp;rsquo;&lt;/p>
&lt;h2 id="preventing-name-conflicts">Preventing name conflicts
&lt;a href="#preventing-name-conflicts">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Historically functions in gmailr did not attempt to avoid conflicts, including common functions in the base package like &lt;code>body()&lt;/code> and &lt;code>message()&lt;/code>. It was assumed users would use namespaced calls, e.g. &lt;code>gmailr::body()&lt;/code> if there were issues. However this inadvertantly causes confusing errors for users. All of the functions are now prefixed with &lt;code>gm_()&lt;/code> to solve this conflict. This also increases function discoverability via auto-complete.&lt;/p>
&lt;p>The un-exported function &lt;code>gmailr:::gm_convert_file()&lt;/code> converts existing scripts to use the new functions. Use &lt;code>gmailr:::gm_convert_file(list.files(pattern = &amp;quot;[.]R$&amp;quot;, recursive = TRUE))&lt;/code> to convert all of your R scripts in the current directory and below. (Be sure to inspect the changes manually!)&lt;/p>
&lt;h2 id="shared-workflows">Shared workflows
&lt;a href="#shared-workflows">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The shared use of gargle allows us to create centralized articles for several workflows that can be tricky for users:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://gargle.r-lib.org/articles/non-interactive-auth.html" target="_blank" rel="noopener">Non-interactive auth&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://gargle.r-lib.org/articles/auth-from-web.html" target="_blank" rel="noopener">Auth when using R in the browser&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://gargle.r-lib.org/articles/articles/managing-tokens-securely.html" target="_blank" rel="noopener">Managing tokens securely&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://gargle.r-lib.org/articles/get-api-credentials.html" target="_blank" rel="noopener">How to get your own API credentials&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="thanks">Thanks!
&lt;a href="#thanks">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to the 58 people who contributed issues, code, and comments to this release!&lt;/p>
&lt;p>
&lt;a href="https://github.com/abhishek1608" target="_blank" rel="noopener">@abhishek1608&lt;/a>,
&lt;a href="https://github.com/alansz" target="_blank" rel="noopener">@alansz&lt;/a>,
&lt;a href="https://github.com/alkashef" target="_blank" rel="noopener">@alkashef&lt;/a>,
&lt;a href="https://github.com/ascheinwald" target="_blank" rel="noopener">@ascheinwald&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/Btibert3" target="_blank" rel="noopener">@Btibert3&lt;/a>,
&lt;a href="https://github.com/choisy" target="_blank" rel="noopener">@choisy&lt;/a>,
&lt;a href="https://github.com/coatless" target="_blank" rel="noopener">@coatless&lt;/a>,
&lt;a href="https://github.com/csalgads" target="_blank" rel="noopener">@csalgads&lt;/a>,
&lt;a href="https://github.com/ctbrown" target="_blank" rel="noopener">@ctbrown&lt;/a>,
&lt;a href="https://github.com/eluerken" target="_blank" rel="noopener">@eluerken&lt;/a>,
&lt;a href="https://github.com/EricGoldsmith" target="_blank" rel="noopener">@EricGoldsmith&lt;/a>,
&lt;a href="https://github.com/fiol92" target="_blank" rel="noopener">@fiol92&lt;/a>,
&lt;a href="https://github.com/grepinsight" target="_blank" rel="noopener">@grepinsight&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/Hellengeremias" target="_blank" rel="noopener">@Hellengeremias&lt;/a>,
&lt;a href="https://github.com/hopeful-coder" target="_blank" rel="noopener">@hopeful-coder&lt;/a>,
&lt;a href="https://github.com/howard-gu" target="_blank" rel="noopener">@howard-gu&lt;/a>,
&lt;a href="https://github.com/jamespmcguire" target="_blank" rel="noopener">@jamespmcguire&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jim0wheel" target="_blank" rel="noopener">@jim0wheel&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jlegewie" target="_blank" rel="noopener">@jlegewie&lt;/a>,
&lt;a href="https://github.com/jnolis" target="_blank" rel="noopener">@jnolis&lt;/a>,
&lt;a href="https://github.com/josibake" target="_blank" rel="noopener">@josibake&lt;/a>,
&lt;a href="https://github.com/kazuya030" target="_blank" rel="noopener">@kazuya030&lt;/a>,
&lt;a href="https://github.com/kevin-dyrland" target="_blank" rel="noopener">@kevin-dyrland&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lawremi" target="_blank" rel="noopener">@lawremi&lt;/a>,
&lt;a href="https://github.com/lmmx" target="_blank" rel="noopener">@lmmx&lt;/a>,
&lt;a href="https://github.com/lwasser" target="_blank" rel="noopener">@lwasser&lt;/a>,
&lt;a href="https://github.com/maaraaj" target="_blank" rel="noopener">@maaraaj&lt;/a>,
&lt;a href="https://github.com/marco-vene" target="_blank" rel="noopener">@marco-vene&lt;/a>,
&lt;a href="https://github.com/martijnvv" target="_blank" rel="noopener">@martijnvv&lt;/a>,
&lt;a href="https://github.com/matt-negrin" target="_blank" rel="noopener">@matt-negrin&lt;/a>,
&lt;a href="https://github.com/mattbaggott" target="_blank" rel="noopener">@mattbaggott&lt;/a>,
&lt;a href="https://github.com/msgoussi" target="_blank" rel="noopener">@msgoussi&lt;/a>,
&lt;a href="https://github.com/msrodrigues" target="_blank" rel="noopener">@msrodrigues&lt;/a>,
&lt;a href="https://github.com/MST2803" target="_blank" rel="noopener">@MST2803&lt;/a>,
&lt;a href="https://github.com/nicocriscuolo" target="_blank" rel="noopener">@nicocriscuolo&lt;/a>,
&lt;a href="https://github.com/obarisk" target="_blank" rel="noopener">@obarisk&lt;/a>,
&lt;a href="https://github.com/paddytobias" target="_blank" rel="noopener">@paddytobias&lt;/a>,
&lt;a href="https://github.com/prithajnath" target="_blank" rel="noopener">@prithajnath&lt;/a>,
&lt;a href="https://github.com/RockScience" target="_blank" rel="noopener">@RockScience&lt;/a>,
&lt;a href="https://github.com/RozennGZ" target="_blank" rel="noopener">@RozennGZ&lt;/a>,
&lt;a href="https://github.com/rpietro" target="_blank" rel="noopener">@rpietro&lt;/a>,
&lt;a href="https://github.com/scottgrimes" target="_blank" rel="noopener">@scottgrimes&lt;/a>,
&lt;a href="https://github.com/SimonCoulombe" target="_blank" rel="noopener">@SimonCoulombe&lt;/a>,
&lt;a href="https://github.com/slomanl1" target="_blank" rel="noopener">@slomanl1&lt;/a>,
&lt;a href="https://github.com/songyurita" target="_blank" rel="noopener">@songyurita&lt;/a>,
&lt;a href="https://github.com/sumxf" target="_blank" rel="noopener">@sumxf&lt;/a>,
&lt;a href="https://github.com/TheKashe" target="_blank" rel="noopener">@TheKashe&lt;/a>,
&lt;a href="https://github.com/tingmar" target="_blank" rel="noopener">@tingmar&lt;/a>,
&lt;a href="https://github.com/tmamiya" target="_blank" rel="noopener">@tmamiya&lt;/a>,
&lt;a href="https://github.com/Vestaxis" target="_blank" rel="noopener">@Vestaxis&lt;/a>,
&lt;a href="https://github.com/vikram-rawat" target="_blank" rel="noopener">@vikram-rawat&lt;/a>,
&lt;a href="https://github.com/williamgunn" target="_blank" rel="noopener">@williamgunn&lt;/a>, and
&lt;a href="https://github.com/xhudik" target="_blank" rel="noopener">@xhudik&lt;/a>&lt;/p></description></item><item><title>gargle's debut on CRAN</title><link>https://www.tidyverse.org/blog/2019/08/gargle-hello-world/</link><pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/08/gargle-hello-world/</guid><description>&lt;p>We&amp;rsquo;re elated to (somewhat belatedly) announce the initial release of gargle on CRAN!&lt;/p>
&lt;p>The gargle package (&lt;a href="https://gargle.r-lib.org">https://gargle.r-lib.org&lt;/a>) is meant to take some of the pain out of working with Google APIs. It&amp;rsquo;s mostly aimed at the maintainers of R packages that call Google APIs. If we&amp;rsquo;re successful, users won&amp;rsquo;t really notice gargle, they&amp;rsquo;ll just feel like these packages got easier to work with and less idiosyncratic.&lt;/p>
&lt;p>The timing of this post is motivated by the release of
&lt;a href="https://googledrive.tidyverse.org" target="_blank" rel="noopener">googledrive&lt;/a> v1.0.0. As of this version, googledrive gets all of its auth functionality (and more) from gargle. Although we did not blog about it, bigrquery also recently made the switch, with the release of v1.2.0.&lt;/p>
&lt;p>If you are interested in the user-facing implications of using gargle, check out the
&lt;a href="https://www.tidyverse.org/articles/2019/08/googledrive-1-0-0/" target="_blank" rel="noopener">blog post announcing googledrive v1.0.0&lt;/a> and the
&lt;a href="https://bigrquery.r-dbi.org/news/index.html#bigrquery-1-2-0" target="_blank" rel="noopener">changelog for bigrquery v1.2.0&lt;/a>.&lt;/p>
&lt;h2 id="gargle">gargle
&lt;a href="#gargle">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://gargle.r-lib.org" target="_blank" rel="noopener">gargle package&lt;/a> first appeared on CRAN in early June 2019 and has gotten a few small updates as we learn more by wiring it into packages. gargle is already used by:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://bigrquery.r-dbi.org" target="_blank" rel="noopener">bigrquery&lt;/a> (&amp;gt;= v1.2.0)&lt;/li>
&lt;li>
&lt;a href="https://googledrive.tidyverse.org" target="_blank" rel="noopener">googledrive&lt;/a> (&amp;gt;= v1.0.0)&lt;/li>
&lt;li>
&lt;a href="https://gmailr.r-lib.org" target="_blank" rel="noopener">gmailr&lt;/a> (&amp;gt;= v1.0.0 &lt;em>coming soon to CRAN&lt;/em>)&lt;/li>
&lt;li>
&lt;a href="https://code.markedmondson.me/googleAuthR/" target="_blank" rel="noopener">googleAuthR&lt;/a> (&lt;em>dev version&lt;/em>)&lt;/li>
&lt;li>
&lt;a href="https://googlesheets4.tidyverse.org" target="_blank" rel="noopener">googlesheets4&lt;/a> &lt;em>GitHub only&lt;/em>&lt;/li>
&lt;li>
&lt;a href="https://andrie.github.io/gcalendr/" target="_blank" rel="noopener">gcalendr&lt;/a> &lt;em>GitHub only&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>gargle&amp;rsquo;s current functionality falls into two domains, which a client package can adopt (or not) separately:&lt;/p>
&lt;ul>
&lt;li>Auth: help users authenticate themselves with their Google identity and
obtain a token that the wrapper package can use to make authorized requests.&lt;/li>
&lt;li>Request preparation and response handling: check requests against the
machine-readable
&lt;a href="https://developers.google.com/discovery/v1/reference/apis" target="_blank" rel="noopener">Discovery Documents&lt;/a>
that describe Google APIs and process API responses, especially errors.&lt;/li>
&lt;/ul>
&lt;p>The long-term stretch goal is to do for R what the
&lt;a href="https://developers.google.com/api-client-library/" target="_blank" rel="noopener">official Google API Client Libraries&lt;/a> do for other languages, like Python and Java.&lt;/p>
&lt;h2 id="auth-via-gargle">Auth via gargle
&lt;a href="#auth-via-gargle">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Under the hood, gargle&amp;rsquo;s main auth function is
&lt;a href="https://gargle.r-lib.org/articles/how-gargle-gets-tokens.html" target="_blank" rel="noopener">&lt;code>token_fetch()&lt;/code>&lt;/a>, which tries a series of different methods for obtaining a token. The intent is to make auth &amp;ldquo;just work&amp;rdquo; in a wide variety of contexts. This makes some flows newly available in the client packages, such as Application Default Credentials (
&lt;a href="https://cloud.google.com/docs/authentication/production" target="_blank" rel="noopener">official Google docs&lt;/a> and a
&lt;a href="https://www.jhanley.com/google-cloud-application-default-credentials/" target="_blank" rel="noopener">more readable 3rd party blog post&lt;/a>).&lt;/p>
&lt;p>The main change that users will notice is that gargle implements its own way of storing user OAuth tokens between sessions. The
&lt;a href="https://httr.r-lib.org" target="_blank" rel="noopener">httr package&lt;/a>, which gargle depends on, has historically used a local &lt;code>.httr-oauth&lt;/code> file for this. In contrast, gargle encourages tokens to be stored &lt;em>outside&lt;/em> the project, in a hidden directory at the user level, in a key-value store that incorporates the Google user&amp;rsquo;s email. This makes it harder to accidentally push your tokens to the cloud, easier to use multiple Google identities, and easier to share tokens across projects and packages. Users will notice they need to re-auth and may want to track down and delete vestigial &lt;code>.httr-oauth&lt;/code> files.&lt;/p>
&lt;h2 id="articles-and-docs">Articles and docs
&lt;a href="#articles-and-docs">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The release of gargle has provided an occasion to document several recurring workflows that can be tricky for useRs, which now work the same across multiple packages:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://gargle.r-lib.org/articles/non-interactive-auth.html" target="_blank" rel="noopener">Non-interactive auth&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://gargle.r-lib.org/articles/auth-from-web.html" target="_blank" rel="noopener">Auth when using R in the browser&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://gargle.r-lib.org/articles/articles/managing-tokens-securely.html" target="_blank" rel="noopener">Managing tokens securely&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://gargle.r-lib.org/articles/get-api-credentials.html" target="_blank" rel="noopener">How to get your own API credentials&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>gargle also offers a mechanism for client packages to build the documentation for their auth function from templates stored in gargle. This means that packages using a common design will also use the same words to describe it.&lt;/p>
&lt;p>Another set of articles is aimed at package maintainers interested in delegating auth or request &amp;amp; response handling to gargle:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://gargle.r-lib.org/articles/gargle-auth-in-client-package.html" target="_blank" rel="noopener">How to use gargle for auth in a client package&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://gargle.r-lib.org/articles/request-helper-functions.html" target="_blank" rel="noopener">Request helper functions&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="privacy-policy-for-google-related-tidyverser-lib-packages">Privacy policy for Google-related tidyverse/r-lib packages
&lt;a href="#privacy-policy-for-google-related-tidyverser-lib-packages">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Google is tightening the rules around various aspects of API access (see, e.g.,
&lt;a href="https://www.blog.google/technology/safety-security/project-strobe/" target="_blank" rel="noopener">Project Strobe&lt;/a> and
&lt;a href="https://cloud.google.com/blog/products/g-suite/elevating-user-trust-in-our-api-ecosystems" target="_blank" rel="noopener">Elevating user trust in our API ecosystem&lt;/a>). I predict the main thing that useRs will notice is that more and more R packages and apps will require the user to get involved in the nitty gritty details of auth. Users will need to create their own Google Cloud Platform projects, obtain their own API keys, and their own OAuth client IDs and secrets. The overall rationale for Google&amp;rsquo;s changes makes sense, but the way people use open source R packages is an awkward fit with their recommended auth solutions. It&amp;rsquo;s becoming more difficult for package developers to make auth feel like it &amp;ldquo;just works&amp;rdquo;.&lt;/p>
&lt;p>The Google-wrapping packages maintained by the tidyverse / r-lib team are now governed by a shared
&lt;a href="https://www.tidyverse.org/google_privacy_policy/" target="_blank" rel="noopener">Privacy Policy&lt;/a>. This is linked from each package and also from the consent screen whenever auth is facilitated through our OAuth client.&lt;/p>
&lt;h2 id="some-gargle-history">Some gargle history
&lt;a href="#some-gargle-history">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I find gargle&amp;rsquo;s origin story find very satisfying. I suspect that Hadley Wickham&amp;rsquo;s bigrquery (first on CRAN January 2015) has shaped the basic design for how most R packages handle Google auth, directly or indirectly. I can certainly say that Joanna Zhao and I consulted it when developing googlesheets (first on CRAN July 2015). I know that Mark Edmondson was influenced, in turn, by googlesheets, when he developed googleAuthR (first on CRAN August 2015), used in his
&lt;a href="https://code.markedmondson.me/r-packages/" target="_blank" rel="noopener">suite of packages&lt;/a>. By the time Lucy D&amp;rsquo;Agostino McGowan and I created googledrive (first on CRAN August 2017), I&amp;rsquo;d developed some strong opinions about how to modify httr&amp;rsquo;s default behaviour for work with Google APIs. I was also working with Hadley Wickham at RStudio by that point and Lucy and I benefited from his design advice. In May-ish 2017, leading up to
&lt;a href="https://unconf17.ropensci.org" target="_blank" rel="noopener">rOpenSci&amp;rsquo;s 2017 Unconf&lt;/a>, Craig Citro
&lt;a href="https://github.com/ropensci/unconf17/issues/85" target="_blank" rel="noopener">opened an issue&lt;/a> to generate discussion about how to de-duplicate even more API pain, especially for Google APIs. He has a wealth of experience from his role in shaping the
&lt;a href="https://developers.google.com/api-client-library/" target="_blank" rel="noopener">official Python client&lt;/a> and he made the initial commits that laid the foundation for &lt;code>gargle::token_fetch()&lt;/code>.&lt;/p>
&lt;p>Starting from a common origin (bigrquery), all these people and packages have explored different aspects of this problem space and have developed various solutions. gargle represents the distillation of a lot of hard-won experience and a promising space for future consolidation.&lt;/p>
&lt;h2 id="thanks">Thanks!
&lt;a href="#thanks">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to all those who have helped get gargle to its first release:&lt;/p>
&lt;p>
&lt;a href="https://github.com/andrie" target="_blank" rel="noopener">@andrie&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/byapparov" target="_blank" rel="noopener">@byapparov&lt;/a>,
&lt;a href="https://github.com/craigcitro" target="_blank" rel="noopener">@craigcitro&lt;/a>,
&lt;a href="https://github.com/dlebech" target="_blank" rel="noopener">@dlebech&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/MarkEdmondson1234" target="_blank" rel="noopener">@MarkEdmondson1234&lt;/a>,
&lt;a href="https://github.com/wlongabaugh" target="_blank" rel="noopener">@wlongabaugh&lt;/a>, and
&lt;a href="https://github.com/ZainRizvi" target="_blank" rel="noopener">@ZainRizvi&lt;/a>&lt;/p></description></item><item><title>ragg 0.1.0</title><link>https://www.tidyverse.org/blog/2019/07/ragg-0-1-0/</link><pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/07/ragg-0-1-0/</guid><description>&lt;p>We&amp;rsquo;re stoked to announce the release of
&lt;a href="https://ragg.r-lib.org" target="_blank" rel="noopener">ragg 0.1.0&lt;/a> on CRAN. ragg provides a set of high quality and high performance raster devices, capable of producing png, tiff, or ppm files, or a matrix of raw color values directly within R.&lt;/p>
&lt;p>ragg is part of our broader effort to improve graphics performance and quality in R at all levels of the stack, so that you&amp;rsquo;ll benefit no matter what plotting framework you choose to use. Other parts of this efforts have been:&lt;/p>
&lt;ul>
&lt;li>Developing the
&lt;a href="https://github.com/r-lib/devoid" target="_blank" rel="noopener">devoid&lt;/a> package to allow more precise benchmarking of plotting code.&lt;/li>
&lt;li>Multiple improvements to rendering speed in grid in the latest R release (3.6.0).&lt;/li>
&lt;li>Performance improvements in
&lt;a href="https://ggplot2.tidyverse.org" target="_blank" rel="noopener">ggplot2&lt;/a> 3.2.0 both broadly and for sf plotting specifically.&lt;/li>
&lt;li>Performance improvements in
&lt;a href="https://gtable.r-lib.com" target="_blank" rel="noopener">gtable&lt;/a> 0.3.0.&lt;/li>
&lt;/ul>
&lt;h2 id="the-devices">The devices
&lt;a href="#the-devices">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>An R graphic device is an object that receives instructions from the graphic engine in R and translates that into some meaningful format for viewing. The graphic engine in R is the layer that sits between the graphic generating code in R and the devices, and is responsible for allowing the plethora of different output options from the same plot code. The output from a graphic device can either be a file, on screen, or in some other form. ragg provides a set of raster devices, that is, devices that rasterize the instructions and write it to some sort of raster output (e.g. a png file). This is opposed to vector devices such as &lt;code>pdf()&lt;/code> and &lt;code>svg()&lt;/code> that do not perform rasterization but write the instructions directly into a vector graphics format.&lt;/p>
&lt;p>ragg provides three different file outputs (png, tiff, and ppm), though it is important to note that everything, except for the serialization of the data into the file format, is equivalent. A case could be made for also including jpeg output, but this format is generally not useful for graphics as it introduces noticeable artifacts with line graphics.&lt;/p>
&lt;p>Apart from the three file-based devices, ragg also provides a device that gives direct access to the raster buffer from R. This means that you can plot directly into a matrix of color values which you can then further process in R, should you wish.&lt;/p>
&lt;h2 id="features">Features
&lt;a href="#features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are 5 main areas where ragg sets itself apart from the graphic devices already available:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Performance:&lt;/strong> ragg is faster than cairo, the standard anti-aliased device in R. Tests show that it is about twice as fast to render a moderately complex ggplot. See the
&lt;a href="https://ragg.r-lib.org/articles/ragg_performance.html" target="_blank" rel="noopener">Performance&lt;/a> vignette for more in-depth benchmarking.&lt;/li>
&lt;li>&lt;strong>Anti-aliasing:&lt;/strong> ragg is fully anti-aliased, as opposed to the cairo devices that only apply anti-aliasing to strokes and text (not fill). For a comparison, see the
&lt;a href="https://ragg.r-lib.org/articles/ragg_quality.html#shape-rendering" target="_blank" rel="noopener">shape rendering&lt;/a> section of the Quality vignette.&lt;/li>
&lt;li>&lt;strong>Text rendering:&lt;/strong> ragg provides high-quality rendering of rotated text, something that other raster devices struggle with. See the
&lt;a href="https://ragg.r-lib.org/articles/ragg_quality.html#text" target="_blank" rel="noopener">text&lt;/a> section of the Quality vignette for examples.&lt;/li>
&lt;li>&lt;strong>Font access:&lt;/strong> ragg has direct access to all your system fonts, without you having to do anything. All installed fonts on your system should be ready to use.&lt;/li>
&lt;li>&lt;strong>System independence:&lt;/strong> The rendering code in ragg is system independent and should be identical whether it has been rendered on Windows, macOS, or Linux. The only difference is the available fonts on the different systems.&lt;/li>
&lt;/ul>
&lt;h2 id="example">Example
&lt;a href="#example">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The ragg devices are used just like any other device, by starting them, running your plotting code, and turning them off (code below add some complexity in order to embed the created file in the page):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ragg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ggplot2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">fig_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#39;.png&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">agg_png&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">700&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">500&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">units&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#39;px&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diamonds&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_bar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fill&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">color&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">ggtitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;A fancy font&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">element_text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Daubmark&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">50&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">invisible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">dev.off&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">include_graphics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-06-26-ragg-0-1-0_files/figure-html/unnamed-chunk-1-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;p>ragg can also be used with &lt;code>ggsave()&lt;/code> by passing the device in as an argument:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">file&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">fig_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#39;.png&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">p&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mpg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">displ&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hwy&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">ggsave&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">device&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">agg_png&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">300&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Saving 7 x 4.33 in image&lt;/span>
&lt;span class="n">knitr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">include_graphics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-06-26-ragg-0-1-0_files/figure-html/unnamed-chunk-2-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;h2 id="life-cycle">Life cycle
&lt;a href="#life-cycle">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>ragg is currently to be considered
&lt;a href="https://www.tidyverse.org/lifecycle/#experimental" target="_blank" rel="noopener">experimental&lt;/a>. That is not to indicate that any API changes are to be expected, or that using it is not a safe long-term strategy. But we are continuing to invest and improve upon the graphic stack in R, and we cannot say whether ragg will be part of our final solution, or if it is just an interesting experiment. The experience gained in the graphic stack from building ragg will definitely be put to good use though, and you can expect more improvements in the future.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a> for much assistance in getting ragg to compile on all systems!&lt;/p></description></item><item><title>callr 3.3.0</title><link>https://www.tidyverse.org/blog/2019/07/callr-3.3.0/</link><pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/07/callr-3.3.0/</guid><description>
&lt;STYLE type='text/css' scoped>
PRE.fansi SPAN {padding-top: .25em; padding-bottom: .25em};
&lt;/STYLE>
&lt;p>We have just updated the &lt;a href="https://callr.r-lib.org/">callr&lt;/a> package to version 3.3.0 on CRAN.
The biggest change in this release is better support for debugging the
background process. See the full
&lt;a href="https://callr.r-lib.org/news/index.html">changelog here&lt;/a>.&lt;/p>
&lt;p>callr helps with running R code in a separate R process, synchronously or
asynchronously. With synchronous execution the main R process waits until
the separate R subprocess finishes, see &lt;a href="https://callr.r-lib.org/reference/r.html">&lt;code>callr::r()&lt;/code>&lt;/a>. Asynchronous execution
uses &lt;a href="https://processx.r-lib.org/">processx&lt;/a> processes, see &lt;a href="https://callr.r-lib.org/reference/r_bg.html">&lt;code>callr::r_bg()&lt;/code>&lt;/a>
and &lt;a href="https://callr.r-lib.org/reference/r_process.html">&lt;code>callr::r_process()&lt;/code>&lt;/a> for one-off and &lt;a href="https://callr.r-lib.org/reference/r_session.html">&lt;code>callr::r_session()&lt;/code>&lt;/a> for persistent
background R processes.&lt;/p>
&lt;div id="callr-error-objects" class="section level2">
&lt;h2>callr error objects&lt;/h2>
&lt;p>Debugging code running in a background process is notoriously difficult.
Most of the time you cannot use an interactive debugger, and often even
print-debugging, i.e. inserting &lt;code>print()&lt;/code> and &lt;code>cat()&lt;/code> calls into the
code that runs in the background, can be non-trivial.&lt;/p>
&lt;p>The new 3.3.0 version of callr aims to help with this, by creating better
error messages and error traces for errors originating from the background
process. In particular, callr now always throws error objects that
contain:&lt;/p>
&lt;ul>
&lt;li>the exit status of the R process, if the process terminated,&lt;/li>
&lt;li>the full error object thrown in the subprocess,&lt;/li>
&lt;li>the call that generated the error,&lt;/li>
&lt;li>the process id of the subprocess, and&lt;/li>
&lt;li>the full stack trace in the subprocess.&lt;/li>
&lt;/ul>
&lt;p>Here is an example for a trivial error that shows how to extract this
information if the error was caught in the main process:&lt;/p>
&lt;pre class="r">&lt;code>err &amp;lt;- tryCatch(
callr::r(function() library(Callr)),
error = function(e) e)
err
#&amp;gt; &amp;lt;callr_status_error: callr subprocess failed: there is no package called ‘Callr’&amp;gt;
#&amp;gt; in process
#&amp;gt; --&amp;gt;
#&amp;gt; &amp;lt;callr_remote_error in library(Callr): there is no package called ‘Callr’&amp;gt;&lt;/code>&lt;/pre>
&lt;p>The error objects has two parts. The first is the error object thrown in
the main process, and the second is the error object from the the
subprocess. We can extract more information from &lt;code>err&lt;/code>:&lt;/p>
&lt;pre class="r">&lt;code>err$status
#&amp;gt; [1] 0
err$parent
#&amp;gt; &amp;lt;callr_remote_error in library(Callr): there is no package called ‘Callr’&amp;gt;
err$parent$call
#&amp;gt; function() library(Callr)
err$parent$`_pid`
#&amp;gt; [1] 79124&lt;/code>&lt;/pre>
&lt;p>&lt;code>err$status&lt;/code> is the exit status of the subprocess. This is not present
for persistent background processes, i.e. the ones created by &lt;code>r_session&lt;/code>,
because these do not exit on error, but continue running. &lt;code>err$parent&lt;/code> is
the error object, thrown in the subprocess. &lt;code>err$parent$call&lt;/code> is the call
that generated the error, and &lt;code>err$parent$`_pid`&lt;/code> is the process id
of the subprocess.&lt;/p>
&lt;p>The stack trace of the error in subprocess can be printed via
&lt;code>err$parent$trace&lt;/code>. By default the trace omits the boilerplate frames
added by callr, these are usually not very useful for the user.
Nevertheless they are still included in &lt;code>err$parent$trace$calls&lt;/code>.&lt;/p>
&lt;pre class="r">&lt;code>err$parent$trace&lt;/code>&lt;/pre>
&lt;PRE class="fansi fansi-output">&lt;CODE>#&amp;gt;
#&amp;gt; &lt;span style='font-weight: bold;'> ERROR TRACE for packageNotFoundError&lt;/span>&lt;span>
#&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 12. &lt;/span>&lt;span>(function () ...
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 13. &lt;/span>&lt;span style='color: #BBBB00;'>base:::library&lt;/span>&lt;span>(Callr)
#&amp;gt; &lt;/span>&lt;span style='color: #00BBBB;font-style: italic;'>R/&amp;lt;text&amp;gt;:2:12&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 14. &lt;/span>&lt;span style='color: #BBBB00;'>base:::stop&lt;/span>&lt;span>(packageNotFoundError(package, lib.loc, sys.call()))
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 15. &lt;/span>&lt;span>(function (e) ...
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;font-weight: bold;'>
#&amp;gt; x there is no package called ‘Callr’ &lt;/span>&lt;span>
&lt;/span>&lt;/CODE>&lt;/PRE>
&lt;p>The trace starts with the anonymous function that we passed to &lt;code>callr::r()&lt;/code>,
and it is annotated with package names and source references, if they are
available.&lt;/p>
&lt;/div>
&lt;div id="the-last-error" class="section level2">
&lt;h2>The last error&lt;/h2>
&lt;p>Often, the error object is uncaught, i.e. we don’t &lt;code>tryCatch()&lt;/code> the error
in the main R process. Then the error message is printed, but the actual
error object is lost, and you need to re-run the code in a &lt;code>tryCatch()&lt;/code>,
hoping that it would produce the same error.&lt;/p>
&lt;p>For a better workflow, whenever a callr error is uncaught, callr
assigns it to the &lt;code>.Last.error&lt;/code> variable, that can be inspected.
Of course, a subsequent callr error will overwrite &lt;code>.Last.error&lt;/code>, it works very
much like &lt;code>.Last.value&lt;/code>, but for errors. Here is the same code as above
but without the &lt;code>tryCatch()&lt;/code>:&lt;/p>
&lt;pre class="r">&lt;code>callr::r(function() library(Callr))
#&amp;gt; Error: callr subprocess failed: there is no package called ‘Callr’&lt;/code>&lt;/pre>
&lt;pre class="r">&lt;code>.Last.error
#&amp;gt; &amp;lt;callr_status_error: callr subprocess failed: there is no package called ‘Callr’&amp;gt;
#&amp;gt; --&amp;gt;
#&amp;gt; &amp;lt;callr_remote_error in library(Callr): there is no package called ‘Callr’&amp;gt;
.Last.error$parent$call
#&amp;gt; function() library(Callr)&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="the-last-error-trace" class="section level2">
&lt;h2>The last error trace&lt;/h2>
&lt;p>If the error is uncaught, then callr adds a trace to the error object of
the main process as well. The trace will have two parts in this case.
callr also sets the &lt;code>.Last.error.trace&lt;/code> variable for convenience, this is
easier to type than &lt;code>.Last.error$trace&lt;/code>.&lt;/p>
&lt;pre class="r">&lt;code>.Last.error.trace&lt;/code>&lt;/pre>
&lt;PRE class="fansi fansi-output">&lt;CODE>#&amp;gt;
#&amp;gt; &lt;span style='font-weight: bold;'> ERROR TRACE for callr_status_error, callr_error, rlib_error&lt;/span>&lt;span>
#&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='font-weight: bold;'>Process 79108:&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 30. &lt;/span>&lt;span style='color: #BBBB00;'>callr::r&lt;/span>&lt;span>(function() library(Callr))
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 31. &lt;/span>&lt;span style='color: #BBBB00;'>callr:::get_result&lt;/span>&lt;span>(output = out, options)
#&amp;gt; &lt;/span>&lt;span style='color: #00BBBB;font-style: italic;'>R/eval.R:149:3&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 32. &lt;/span>&lt;span style='color: #BBBB00;'>base:::throw&lt;/span>&lt;span>(new_callr_error(output, msg), parent = err[[2]])
#&amp;gt; &lt;/span>&lt;span style='color: #00BBBB;font-style: italic;'>R/result.R:73:5&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;font-weight: bold;'>
#&amp;gt; x callr subprocess failed: there is no package called ‘Callr’ &lt;/span>&lt;span>
#&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='font-weight: bold;'>Process 79135:&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 44. &lt;/span>&lt;span>(function () ...
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 45. &lt;/span>&lt;span style='color: #BBBB00;'>base:::library&lt;/span>&lt;span>(Callr)
#&amp;gt; &lt;/span>&lt;span style='color: #00BBBB;font-style: italic;'>R/&amp;lt;text&amp;gt;:1:10&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 46. &lt;/span>&lt;span style='color: #BBBB00;'>base:::stop&lt;/span>&lt;span>(packageNotFoundError(package, lib.loc, sys.call()))
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 47. &lt;/span>&lt;span>(function (e) ...
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;font-weight: bold;'>
#&amp;gt; x there is no package called ‘Callr’ &lt;/span>&lt;span>
&lt;/span>&lt;/CODE>&lt;/PRE>
&lt;p>The top part of the trace contains the frames in the main process, and the
bottom part contains the frames in the subprocess, starting with the
anonymous function.&lt;/p>
&lt;/div></description></item><item><title>rlang 0.4.0</title><link>https://www.tidyverse.org/blog/2019/06/rlang-0-4-0/</link><pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/06/rlang-0-4-0/</guid><description>&lt;p>It is with great excitement that we announce the release of
&lt;a href="https://rlang.r-lib.org" target="_blank" rel="noopener">rlang 0.4.0&lt;/a> on CRAN. rlang is a toolkit for working with core R and Tidyverse features, and hosts the tidy evaluation framework. The full set of changes can be found in the
&lt;a href="https://rlang.r-lib.org/news/index.html#rlang-0-4-0" target="_blank" rel="noopener">changelog&lt;/a>.&lt;/p>
&lt;p>In this article, we introduce the most important of these, the new tidy evaluation operator &lt;code>{{&lt;/code>. We will use a simple dplyr pipeline as a running example, let&amp;rsquo;s start by attaching the package:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="the-good-and-bad-of-tidy-evaluation">The good and bad of tidy evaluation
&lt;a href="#the-good-and-bad-of-tidy-evaluation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Tidy eval powers packages like dplyr and tidyr. It makes it possible to manipulate data frame columns as if they were defined in the workspace:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">gender&lt;/span>
&lt;span class="c1">#&amp;gt; Error in eval(expr, envir, enclos): object &amp;#39;gender&amp;#39; not found&lt;/span>
&lt;span class="n">mass&lt;/span>
&lt;span class="c1">#&amp;gt; Error in eval(expr, envir, enclos): object &amp;#39;mass&amp;#39; not found&lt;/span>
&lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gender&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mass_maximum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mass&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; gender mass_maximum&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 &amp;lt;NA&amp;gt; 75&lt;/span>
&lt;span class="c1">#&amp;gt; 2 female 75&lt;/span>
&lt;span class="c1">#&amp;gt; 3 hermaphrodite 1358&lt;/span>
&lt;span class="c1">#&amp;gt; 4 male 159&lt;/span>
&lt;span class="c1">#&amp;gt; 5 none 140&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We call this syntax &lt;strong>data masking&lt;/strong>. This feature is unique to the R language and greatly streamlines the writing and reading of code in interactive scripts. Unfortunately, it also makes it more complex to reuse common patterns inside functions:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">max_by&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">var&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">by&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">maximum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">var&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">max_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mass&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gender&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Column `by` is unknown&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Technically, this is because data-masked code needs to be &lt;em>delayed&lt;/em> and &lt;em>transported&lt;/em> to the data context. Behind the scenes, dplyr verbs achieve this by capturing the blueprint of your code, and resuming its evaluation inside the data mask. The example above fails because &lt;code>group_by()&lt;/code> is capturing the wrong piece of blueprint. To solve this, tidy evaluation provides &lt;code>enquo()&lt;/code> to delay the interpretation of code and capture its blueprint, and the surgery operator &lt;code>!!&lt;/code> for modifying blueprints. The combination of using &lt;code>enquo()&lt;/code> and &lt;code>!!&lt;/code> is called the &lt;strong>quote-and-unquote&lt;/strong> pattern:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">max_by&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">var&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!!&lt;/span>&lt;span class="nf">enquo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">by&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">maximum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!!&lt;/span>&lt;span class="nf">enquo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">var&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">max_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mass&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gender&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; gender maximum&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 &amp;lt;NA&amp;gt; 75&lt;/span>
&lt;span class="c1">#&amp;gt; 2 female 75&lt;/span>
&lt;span class="c1">#&amp;gt; 3 hermaphrodite 1358&lt;/span>
&lt;span class="c1">#&amp;gt; 4 male 159&lt;/span>
&lt;span class="c1">#&amp;gt; 5 none 140&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We have come to realise that this pattern is difficult to teach and to learn because it involves a new, unfamiliar syntax, and because it introduces two new programming concepts (quote and unquote) that are hard to understand intuitively. This complexity is not really justified because this pattern is overly flexible for basic programming needs.&lt;/p>
&lt;h2 id="a-simpler-interpolation-pattern-with-">A simpler interpolation pattern with &lt;code>{{&lt;/code>
&lt;a href="#a-simpler-interpolation-pattern-with-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>rlang 0.4.0 provides a new operator, &lt;code>{{&lt;/code> (read: curly curly), which abstracts quote-and-unquote into a single &lt;strong>interpolation&lt;/strong> step. The curly-curly operator should be straightforward to use. When you create a function around a tidyverse pipeline, wrap the function arguments containing data frame variables with &lt;code>{{&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">max_by&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">var&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">({{&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="p">}})&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">maximum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">max&lt;/span>&lt;span class="p">({{&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="p">}},&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">max_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; maximum&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 264&lt;/span>
&lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">max_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gender&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; gender maximum&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 &amp;lt;NA&amp;gt; 167&lt;/span>
&lt;span class="c1">#&amp;gt; 2 female 213&lt;/span>
&lt;span class="c1">#&amp;gt; 3 hermaphrodite 175&lt;/span>
&lt;span class="c1">#&amp;gt; 4 male 264&lt;/span>
&lt;span class="c1">#&amp;gt; 5 none 200&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This syntax should be reminiscent of string interpolation in the
&lt;a href="https://glue.tidyverse.org/" target="_blank" rel="noopener">glue&lt;/a> package by Jim Hester:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">var&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">sample&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;woof&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;meow&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;mooh&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">glue&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">glue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Did you just say {var}?&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Did you just say mooh?&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="other-simple-tidy-evaluation-patterns">Other simple tidy evaluation patterns
&lt;a href="#other-simple-tidy-evaluation-patterns">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are a few existing patterns that aren&amp;rsquo;t emphasised enough in the existing documentation. We are changing our teaching strategy to focus on these simpler patterns.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>If you would like to pass multiple arguments to a data-masking verb, pass &lt;code>...&lt;/code> directly:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">summarise_by&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">({{&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="p">}})&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise_by&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">average&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">maximum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gender&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; gender average maximum&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 &amp;lt;NA&amp;gt; 120 167&lt;/span>
&lt;span class="c1">#&amp;gt; 2 female 165. 213&lt;/span>
&lt;span class="c1">#&amp;gt; 3 hermaphrodite 175 175&lt;/span>
&lt;span class="c1">#&amp;gt; 4 male 179. 264&lt;/span>
&lt;span class="c1">#&amp;gt; 5 none 200 200&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You only need quote-and-unquote (with the plural variants &lt;code>enquos()&lt;/code> and &lt;code>!!!&lt;/code>) when you need to modify the inputs or their names in some way.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you have string inputs, use the &lt;code>.data&lt;/code> pronoun:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">max_by&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">var&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.data[[by]]&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">summarise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">maximum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.data[[var]]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">na.rm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">starwars&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">max_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;height&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;gender&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 5 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; gender maximum&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 &amp;lt;NA&amp;gt; 167&lt;/span>
&lt;span class="c1">#&amp;gt; 2 female 213&lt;/span>
&lt;span class="c1">#&amp;gt; 3 hermaphrodite 175&lt;/span>
&lt;span class="c1">#&amp;gt; 4 male 264&lt;/span>
&lt;span class="c1">#&amp;gt; 5 none 200&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>.&lt;/code> pronoun from magrittr is not appropriate here because it represents the whole data frame, whereas &lt;code>.data&lt;/code> represents the subset for the current group.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>To learn more about the different ways of programming around tidyverse pipelines, we recommend reading the
&lt;a href="https://ggplot2.tidyverse.org/dev/articles/ggplot2-in-packages.html#using-aes-and-vars-in-a-package-function" target="_blank" rel="noopener">new programming vignette in ggplot2&lt;/a>, written by
&lt;a href="https://github.com/paleolimbot" target="_blank" rel="noopener">Dewey Dunnington&lt;/a> who is currently interning at RStudio.&lt;/p>
&lt;h2 id="thanks">Thanks!
&lt;a href="#thanks">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The following people have contributed to this release by posting issues and pull requests:&lt;/p>
&lt;p>
&lt;a href="https://github.com/001ben" target="_blank" rel="noopener">@001ben&lt;/a>,
&lt;a href="https://github.com/asardaes" target="_blank" rel="noopener">@asardaes&lt;/a>,
&lt;a href="https://github.com/BillDunlap" target="_blank" rel="noopener">@BillDunlap&lt;/a>,
&lt;a href="https://github.com/burchill" target="_blank" rel="noopener">@burchill&lt;/a>,
&lt;a href="https://github.com/cpsievert" target="_blank" rel="noopener">@cpsievert&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/egnha" target="_blank" rel="noopener">@egnha&lt;/a>,
&lt;a href="https://github.com/flying-sheep" target="_blank" rel="noopener">@flying-sheep&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gaelledoucet" target="_blank" rel="noopener">@gaelledoucet&lt;/a>,
&lt;a href="https://github.com/GaGaMan1101" target="_blank" rel="noopener">@GaGaMan1101&lt;/a>,
&lt;a href="https://github.com/grayskripko" target="_blank" rel="noopener">@grayskripko&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/harrysouthworth" target="_blank" rel="noopener">@harrysouthworth&lt;/a>,
&lt;a href="https://github.com/holgerbrandl" target="_blank" rel="noopener">@holgerbrandl&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jazzmoe" target="_blank" rel="noopener">@jazzmoe&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jjesusfilho" target="_blank" rel="noopener">@jjesusfilho&lt;/a>,
&lt;a href="https://github.com/juangomezduaso" target="_blank" rel="noopener">@juangomezduaso&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/Marieag" target="_blank" rel="noopener">@Marieag&lt;/a>,
&lt;a href="https://github.com/mmuurr" target="_blank" rel="noopener">@mmuurr&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/paulponcet" target="_blank" rel="noopener">@paulponcet&lt;/a>,
&lt;a href="https://github.com/riccardopinosio" target="_blank" rel="noopener">@riccardopinosio&lt;/a>,
&lt;a href="https://github.com/richierocks" target="_blank" rel="noopener">@richierocks&lt;/a>,
&lt;a href="https://github.com/RolandASc" target="_blank" rel="noopener">@RolandASc&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/s-fleck" target="_blank" rel="noopener">@s-fleck&lt;/a>,
&lt;a href="https://github.com/siddharthprabhu" target="_blank" rel="noopener">@siddharthprabhu&lt;/a>,
&lt;a href="https://github.com/subratiter1" target="_blank" rel="noopener">@subratiter1&lt;/a>,
&lt;a href="https://github.com/wch" target="_blank" rel="noopener">@wch&lt;/a>,
&lt;a href="https://github.com/wetlandscapes" target="_blank" rel="noopener">@wetlandscapes&lt;/a>,
&lt;a href="https://github.com/wlandau" target="_blank" rel="noopener">@wlandau&lt;/a>,
&lt;a href="https://github.com/x1o" target="_blank" rel="noopener">@x1o&lt;/a>,
&lt;a href="https://github.com/XWeiZhou" target="_blank" rel="noopener">@XWeiZhou&lt;/a>,
&lt;a href="https://github.com/yenzichun" target="_blank" rel="noopener">@yenzichun&lt;/a>,
&lt;a href="https://github.com/yonicd" target="_blank" rel="noopener">@yonicd&lt;/a>, and
&lt;a href="https://github.com/zachary-foster" target="_blank" rel="noopener">@zachary-foster&lt;/a>&lt;/p></description></item><item><title>It depends - A dialog about dependencies</title><link>https://www.tidyverse.org/blog/2019/05/itdepends/</link><pubDate>Wed, 29 May 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/05/itdepends/</guid><description>
&lt;h1 id="it-depends---a-dialog-about-dependencies">It depends - A dialog about dependencies
&lt;a href="#it-depends---a-dialog-about-dependencies">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;blockquote>
&lt;p>This post paraphrases my
&lt;a href="https://resources.rstudio.com/rstudio-conf-2019/it-depends-a-dialog-about-dependencies" target="_blank" rel="noopener">talk with the same name&lt;/a> at rstudio::conf 2019.&lt;/p>
&lt;/blockquote>
&lt;p>Software dependencies can be a double-edged sword.&lt;/p>
&lt;p>On one hand, they let you take advantage of others&amp;rsquo; work, giving your software
marvelous new features and reducing bugs.&lt;/p>
&lt;p>On the other hand, they can change over time, causing your software to break
unexpectedly and (potentially) increasing your maintenance burden. They can also
take additional disk space and installation time.&lt;/p>
&lt;p>These downsides have led some to suggest a &amp;lsquo;dependency zero&amp;rsquo; mindset.&lt;/p>
&lt;p>We feel that this is a major mistake for most projects, and will instead increase
maintenance burden, lower functionality and introduce additional bugs.&lt;/p>
&lt;h2 id="dependencies-are-not-equal">Dependencies are not equal
&lt;a href="#dependencies-are-not-equal">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One issue with striving for minimal dependencies is it treats all dependencies
as equivalent. However, in reality this is far from the case. There are many
axes upon which dependencies can differ, but some of the most important include:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>The type of the dependency. Some dependencies come bundled with R
itself (e.g. base, utils, stats) or are part of the &amp;lsquo;Recommended&amp;rsquo; packages
(e.g. Matrix, survival). These packages are very low cost to depend on,
as they are (nearly) universally installed on all users systems, and change
generally only with new R versions. In contrast dependencies can also come
from
&lt;a href="https://CRAN.r-project.org" target="_blank" rel="noopener">CRAN&lt;/a> or even from non-CRAN repositories
such as
&lt;a href="https://www.bioconductor.org/" target="_blank" rel="noopener">Bioconductor&lt;/a>,
&lt;a href="http://www.omegahat.net/" target="_blank" rel="noopener">Omegahat&lt;/a> or
&lt;a href="https://github.com/eddelbuettel/drat" target="_blank" rel="noopener">drat&lt;/a> which require users to configure
additional repositories before installation.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The number of upstream dependencies. For example, the
&lt;a href="https://github.com/r-lib/rlang" target="_blank" rel="noopener">rlang&lt;/a> package has no upstream
dependencies apart from R; while the
&lt;a href="https://cran.r-project.org/package=CNVScope" target="_blank" rel="noopener">CNVscope&lt;/a> package has 125 upstream
dependencies, on both CRAN and Bioconductor.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Already fulfilled dependencies. If your package depends on dplyr then
taking an additional dependency on tibble comes at no additional cost, as
dplyr itself already depends on tibble. Additionally some of the most
popular packages (e.g. ggplot2) will already be installed on the majority
of users&amp;rsquo; machines. So adding a ggplot2 dependency is unlikely to incur additional
installation costs in most cases.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The time taken to compile the package from source. Packages containing R code
generally install in roughly the same amount of time, but those that contain
C, C++ or Fortran code can take very different amounts of time depending
on the complexity of the code. For example, the
&lt;a href="https://cran.r-project.org/package=glue" target="_blank" rel="noopener">glue&lt;/a> package takes ~5 seconds to
compile on CRAN&amp;rsquo;s build machines, whereas the
&lt;a href="https://cran.r-project.org/package=readr" target="_blank" rel="noopener">readr&lt;/a> package takes ~500
seconds to install on the same machines.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The size of the built binary package. Users installing binary packages need
to download them, so the size of the built binary is relevant, particularly
for those with slow internet connections. This also varies a great deal
across packages. The
&lt;a href="https://cran.r-project.org/package=awspack" target="_blank" rel="noopener">awspack&lt;/a>
binary is only 8.6 Kb in size, while the
&lt;a href="https://cran.r-project.org/package=h2o" target="_blank" rel="noopener">h2o&lt;/a> package is 123 Mb, and the
largest binary on Bioconductor is over 4 Gb!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The system requirements to build and use the package. Some packages
require additional system dependencies in order to be used.
For instance, the
&lt;a href="https://cran.r-project.org/package=rgdal" target="_blank" rel="noopener">rgdal&lt;/a> package
requires the GDAL and PROJ.4 dependencies, each of which in turn have
additional system dependencies. Another example is
&lt;a href="https://cran.r-project.org/package=rJava" target="_blank" rel="noopener">rJava&lt;/a> which requires a Java SDK
and also has additional steps needed to configure R for the proper Java
installation, which has caused
&lt;a href="https://stackoverflow.com/questions/tagged/rjava" target="_blank" rel="noopener">installation issues for many
people&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>I hope the above examples illustrate that not all package dependencies are
equal, and we should not treat them as such by using a simple count of
dependencies as our metric.&lt;/p>
&lt;h2 id="prefer-a-holistic-balanced-and-quantitative-approach">Prefer a holistic, balanced and quantitative approach
&lt;a href="#prefer-a-holistic-balanced-and-quantitative-approach">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Instead of striving for a minimal number of dependencies, I would instead suggest
a more holistic, balanced, and quantitative approach.&lt;/p>
&lt;p>A holistic approach looks at the project as a whole and asks who is the primary
audience? If the audience is other package authors, then a leaner package with fewer
dependencies may be more appropriate. If instead it is primarily data scientists or
statisticians they will likely already have many popular dependencies installed and
a more feature-full package is preferred.&lt;/p>
&lt;p>A balanced approach understands that adding (or removing) dependencies
come with trade-offs. Adding a dependency gives you additional features,
bug fixes, and real-world testing, at the costs of increased installation time,
disk space and maintenance if the dependency has breaking changes. In some
cases it makes sense to &lt;em>increase&lt;/em> dependencies for a package, even if an
implementation already exists. For instance base R has a number of different
implementations of non-standard evaluation with varying semantics across its
functions. The same used to be true of tidyverse packages as well, but now they
all depend on the implementations in the tidyselect and rlang packages,
which improves consistency of the feature substantially.&lt;/p>
&lt;p>In contrast, removing a dependency lowers installation time, disk space and
avoids potential breaking changes. However it also removes potential features,
increases bugs and takes additional development time.&lt;/p>
&lt;p>A quantitative approach lets you more accurately measure your dependencies, and
see which are heavier or lighter along various axes. Measuring each of the
dependencies gives you more power to reason about which dependencies would be
most beneficial to remove (if any).&lt;/p>
&lt;p>How you weigh these costs and benefits varies by the skills and experience of
the maintainer and the goals of the project.&lt;/p>
&lt;h2 id="beware-illusory-superiority">Beware illusory superiority
&lt;a href="#beware-illusory-superiority">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When making these decisions it is important to consider the
psychological phenomenon of
&lt;a href="https://en.wikipedia.org/wiki/Illusory_superiority" target="_blank" rel="noopener">Illusory
Superiority&lt;/a>. Illusory
superiority is the idea that people (regardless of background) overestimate
(sometimes greatly) their own abilities in a given field. No one is truly
immune to this phenomenon, including the author of this post! This phenomenon
will cause you to overestimate your ability to re-implement features, and
underestimate the introduction of new bugs.&lt;/p>
&lt;p>However, even if you truly &lt;em>are&lt;/em> a more skilled programmer than the maintainer of
a dependency, we would still advise caution. The existing package has the
significant benefits of &lt;em>time&lt;/em> and &lt;em>users&lt;/em>. Users who have undoubtedly uncovered
numerous bugs using the package in the real world, which are now fixed.&lt;/p>
&lt;h2 id="itdepends-a-package-to-help-with-dependencies">itdepends, a package to help with dependencies
&lt;a href="#itdepends-a-package-to-help-with-dependencies">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://github.com/r-lib/itdepends" target="_blank" rel="noopener">itdepends&lt;/a> package
aids you in having a holistic, balanced and quantitative approach. It provides tools to
assess usage, measure weights, visualize proportions and if needed, assist
removal of dependencies.&lt;/p>
&lt;h2 id="assess-usage-with-itdependsdep_usage">Assess usage with &lt;code>itdepends::dep_usage()&lt;/code>
&lt;a href="#assess-usage-with-itdependsdep_usage">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>dep_usage_proj()&lt;/code> and &lt;code>dep_usage_pkg()&lt;/code> return a tibble of
every function call in your project or package. This information can then be
used to do things like&lt;/p>
&lt;ul>
&lt;li>show which packages you are using the most in a project&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidyverse&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">itdepends&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">dep_usage_pkg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ggplot2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pkg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sort&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 23 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; pkg n&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 base 10333&lt;/span>
&lt;span class="c1">#&amp;gt; 2 ggplot2 1225&lt;/span>
&lt;span class="c1">#&amp;gt; 3 grid 313&lt;/span>
&lt;span class="c1">#&amp;gt; 4 scales 118&lt;/span>
&lt;span class="c1">#&amp;gt; 5 gtable 78&lt;/span>
&lt;span class="c1">#&amp;gt; 6 rlang 68&lt;/span>
&lt;span class="c1">#&amp;gt; 7 plyr 53&lt;/span>
&lt;span class="c1">#&amp;gt; 8 stats 44&lt;/span>
&lt;span class="c1">#&amp;gt; 9 utils 24&lt;/span>
&lt;span class="c1">#&amp;gt; 10 grDevices 20&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 13 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>show the most frequently used &lt;em>function&lt;/em> from each package&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">itdepends&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">dep_usage_pkg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ggplot2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pkg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fun&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">top_n&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">arrange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">desc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">head&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Selecting by n&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 6 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; # Groups: pkg [6]&lt;/span>
&lt;span class="c1">#&amp;gt; pkg fun n&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 base &amp;lt;- 1627&lt;/span>
&lt;span class="c1">#&amp;gt; 2 grid unit 101&lt;/span>
&lt;span class="c1">#&amp;gt; 3 ggplot2 waiver 99&lt;/span>
&lt;span class="c1">#&amp;gt; 4 gtable gtable_add_grob 30&lt;/span>
&lt;span class="c1">#&amp;gt; 5 scales alpha 17&lt;/span>
&lt;span class="c1">#&amp;gt; 6 utils head 12&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="measure-weights-with-itdependsdep_weight">Measure weights with &lt;code>itdepends::dep_weight()&lt;/code>
&lt;a href="#measure-weights-with-itdependsdep_weight">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>dep_weight()&lt;/code> weighs the supplied packages and returns a tibble of 24
different metrics that can be used to compare them. The most important metric
varies by person, so it is useful to examine the full spectrum.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">weights&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">itdepends&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">dep_weight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dplyr&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;data.table&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">weights&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 2 x 25&lt;/span>
&lt;span class="c1">#&amp;gt; package num_user bin_self bin_user install_self install_user funs&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 dplyr 21 1821891 23147844 272. 436. 260&lt;/span>
&lt;span class="c1">#&amp;gt; 2 data.t… 0 6222622 6222622 29.5 29.5 108&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 18 more variables: downloads &amp;lt;dbl&amp;gt;, last_release &amp;lt;dttm&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # open_issues &amp;lt;int&amp;gt;, last_updated &amp;lt;dttm&amp;gt;, stars &amp;lt;int&amp;gt;, forks &amp;lt;int&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # first_release &amp;lt;dttm&amp;gt;, total_releases &amp;lt;dbl&amp;gt;, releases_last_52 &amp;lt;int&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # num_dev &amp;lt;int&amp;gt;, install_dev &amp;lt;dbl&amp;gt;, bin_dev &amp;lt;dbl&amp;gt;, src_size &amp;lt;int&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # user_deps &amp;lt;list&amp;gt;, dev_deps &amp;lt;list&amp;gt;, self_timings &amp;lt;list&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # user_timings &amp;lt;list&amp;gt;, dev_timings &amp;lt;list&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The measures break down into a few rough categories:&lt;/p>
&lt;ul>
&lt;li>package and repository information (&lt;code>package&lt;/code>, &lt;code>funs&lt;/code>, &lt;code>downloads&lt;/code>, &lt;code>open_issues&lt;/code>, &lt;code>last_updated&lt;/code>, &lt;code>forks&lt;/code>, &lt;code>stars&lt;/code>)&lt;/li>
&lt;li>dependency information (&lt;code>num_users&lt;/code>, &lt;code>num_dev&lt;/code>, &lt;code>user_deps&lt;/code>, &lt;code>dev_deps&lt;/code>)&lt;/li>
&lt;li>compiled binary sizes (&lt;code>bin_self&lt;/code>, &lt;code>bin_user&lt;/code>, &lt;code>bin_dev&lt;/code>)&lt;/li>
&lt;li>time to compile dependencies, and the raw times (&lt;code>install_self&lt;/code>, &lt;code>install_user&lt;/code>, &lt;code>install_dev&lt;/code>, &lt;code>self_timings&lt;/code>, &lt;code>user_timings&lt;/code>, &lt;code>dev_timings&lt;/code>)&lt;/li>
&lt;li>CRAN release information (&lt;code>downloads&lt;/code>, &lt;code>first_release&lt;/code>, &lt;code>last_release&lt;/code>, &lt;code>total_releases&lt;/code>, &lt;code>releases_last_52&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>The total number of dependencies, binary sizes, and installation times give you
a good idea the magnitude of the dependency load.&lt;/p>
&lt;p>Equally important, however, are the downloads, release information and open
issues, which tell you how long the package has existed, how many people are
using it and how many open issues exist. Packages that have existed longer,
with more users and fewer issues should generally be more reliable.&lt;/p>
&lt;h2 id="visualize-proportions-with-itdependsdep_plot">Visualize proportions with &lt;code>itdepends::dep_plot()&lt;/code>
&lt;a href="#visualize-proportions-with-itdependsdep_plot">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are two functions available to plot the relative weights of dependencies.&lt;/p>
&lt;ol>
&lt;li>&lt;code>dep_plot_time()&lt;/code> plots the median compilation time on CRAN&amp;rsquo;s servers.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">itdepends&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">dep_plot_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dplyr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-05-itdepends_files/figure-html/unnamed-chunk-4-1.png" width="672" style="display: block; margin: auto;" />&lt;/p>
&lt;p>From the above plot we see that the installation time of dplyr for users is
mostly due to compiling dplyr itself. However, for development dependencies, the
readr, stringi and RSQLite packages also take significant time to install.&lt;/p>
&lt;ol start="2">
&lt;li>&lt;code>dep_plot_size()&lt;/code> plots the pre-compiled binary size, which is often the more
useful measure, as most users install pre-compiled binaries.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">itdepends&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">dep_plot_size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dplyr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-05-itdepends_files/figure-html/unnamed-chunk-5-1.png" width="672" style="display: block; margin: auto;" />&lt;/p>
&lt;p>From this we see the largest user dependencies are BH and Rcpp, and the largest
development dependencies are stringi, and two data packages, Lahman and
nycflights13.&lt;/p>
&lt;h2 id="assist-removal-with-itdependsdep_locate">Assist removal with &lt;code>itdepends::dep_locate()&lt;/code>
&lt;a href="#assist-removal-with-itdependsdep_locate">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you do decide that a given dependency is too heavy or is too unstable to
keep, what are the best practices for removing it?&lt;/p>
&lt;p>First carefully review the operation of the function you are replacing. Many
functions in CRAN packages appear superficially similar to base equivalents,
but often handle edge cases (that you&amp;rsquo;ve likely never encountered) more
consistently. Next and most importantly, write &lt;em>tests&lt;/em> for the existing
behavior. This is an essential step which will greatly reduce the introduction
of new bugs. Only once you have written the tests should you start performing
the replacement. If you are porting a function with existing tests a good practice is
to port its tests as well.&lt;/p>
&lt;p>Then, use the &lt;code>dep_locate()&lt;/code> function to find all the instances when you use
functions from a given dependency in your code base. If &lt;code>dep_locate()&lt;/code> is run
in RStudio the function will add source markers for all the locations, which
can then be clicked individually to do the replacement.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">itdepends&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">dep_locate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;purrr&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;~/p/tidyversedashboard&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/images/itdepends/dep_locate.png" width="100%" style="display: block; margin: auto;" />&lt;/p>
&lt;h2 id="be-balanced-and-use-data">Be balanced and use data
&lt;a href="#be-balanced-and-use-data">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In almost any area of life striving towards absolutes rarely provides the best
outcome. Package dependencies are no exception. Keep the expected users of your
package in mind, and use the tools provided in itdepends to
obtain data which can help you assess which dependencies to remove (if any).&lt;/p>
&lt;p>Donald Knuth has great advice about the importance of measurement during
performance optimization&lt;/p>
&lt;blockquote>
&lt;p>Programmers waste enormous amounts of time thinking about, or worrying about,
the speed of noncritical parts of their programs, and these attempts at
efficiency actually have a strong negative impact when debugging and
maintenance are considered. We should forget about small efficiencies, say
about 97% of the time: premature optimization is the root of all evil. Yet we
should not pass up our opportunities in that critical 3%.&lt;/p>
&lt;/blockquote>
&lt;p>Performance optimization &lt;em>is&lt;/em> important, but we should not seek to optimize
it until we have &lt;em>measured&lt;/em> our program to see where the this critical 3% lies.
The same is true of dependencies, lowering the dependencies &lt;em>is&lt;/em>
important for some packages, however we should not do so blindly without
identifying if it is truly necessary and measuring to discover what the most
critical dependencies are.&lt;/p>
&lt;p>Finally it is important to remember
&lt;a href="https://en.wikipedia.org/wiki/Goodhart%27s_law" target="_blank" rel="noopener">Goodhart&amp;rsquo;s Law&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>When a measure becomes a target, it ceases to be a good measure.&lt;/p>
&lt;/blockquote></description></item><item><title>Resource Cleanup in C and the R API</title><link>https://www.tidyverse.org/blog/2019/05/resource-cleanup-in-c-and-the-r-api/</link><pubDate>Wed, 22 May 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/05/resource-cleanup-in-c-and-the-r-api/</guid><description>
&lt;style>
h1 code, h2 code {
font-size: 0.8em;
}
&lt;/style>
&lt;div id="introduction" class="section level1">
&lt;h1>Introduction&lt;/h1>
&lt;p>We have just released the &lt;a href="https://github.com/r-lib/cleancall#readme">cleancall&lt;/a> package to CRAN. &lt;a href="https://github.com/r-lib/cleancall#readme">cleancall&lt;/a> is a
new package that helps avoiding resource leaks in the C code of your
R package. In this blog post, we show some example resource leaks from
base R and R packages, and also show three different ways to fix them,
one of which uses the &lt;a href="https://github.com/r-lib/cleancall#readme">cleancall&lt;/a> package.&lt;/p>
&lt;/div>
&lt;div id="the-problem" class="section level1">
&lt;h1>The problem&lt;/h1>
&lt;p>When writing C code in R packages, one non-trivial issue is to make
sure that resources acquired by a C function are correctly released
or wrapped before giving back control to R. The difficulties partially
arise from the many ways a C function can terminate and transfer control
back to R:&lt;/p>
&lt;ul>
&lt;li>regular termination,&lt;/li>
&lt;li>error,&lt;/li>
&lt;li>warning or other condition caught with &lt;code>tryCatch()&lt;/code>,&lt;/li>
&lt;li>debugger exit,&lt;/li>
&lt;li>keyboard interruption.&lt;/li>
&lt;/ul>
&lt;p>Resources that need to be released include:&lt;/p>
&lt;ul>
&lt;li>memory areas,&lt;/li>
&lt;li>file handles,&lt;/li>
&lt;li>connections (sockets),&lt;/li>
&lt;li>database connections,&lt;/li>
&lt;li>Windows handles for threads, events, etc.,&lt;/li>
&lt;li>others.&lt;/li>
&lt;/ul>
&lt;div id="regular-termination" class="section level2">
&lt;h2>Regular termination&lt;/h2>
&lt;p>Most functions terminate successfully, most of the time. Releasing
resources is easy in this case, we can simply do it at the end of the
function, before returning.&lt;/p>
&lt;/div>
&lt;div id="error" class="section level2">
&lt;h2>Error&lt;/h2>
&lt;p>Errors may happen two ways. They can be thrown directly, or by the R API.
A function that reads a file will throw an error it if
fails to open the file for reading. These errors are easy to handle, we
can release all resources before throwing the error.&lt;/p>
&lt;p>Errors can also be thrown by the R API. The R C API functions do not
return on error, instead they perform an error (a &lt;code>longjmp&lt;/code> technically),
that can be caught by R or (recently) C code. Releasing resources is
trickier in this case, as our C function never gets back the control after
the failed R API call.&lt;/p>
&lt;/div>
&lt;div id="warning-or-other-condition-caught-with-trycatch" class="section level2">
&lt;h2>Warning or other condition caught with &lt;code>tryCatch()&lt;/code>&lt;/h2>
&lt;p>Usually we assume that throwing a warning (or other non-error condition)
does not cause an early exit, but this is not always the case. Warnings can
be caught by an exiting &lt;code>tryCatch()&lt;/code>.&lt;/p>
&lt;/div>
&lt;div id="debugger-exit" class="section level2">
&lt;h2>Debugger exit&lt;/h2>
&lt;p>If the C function calls back to R to evaluate R expressions, then
these might invoke the debugger, see &lt;code>?debug&lt;/code> or &lt;code>?trace&lt;/code>. The &lt;code>Q&lt;/code> debugger
command invokes the &lt;code>abort&lt;/code> restart, to get back to the top-level prompt.
In this case most functions on the (R and C) stack are removed at once.&lt;/p>
&lt;/div>
&lt;div id="keyboard-interruption" class="section level2">
&lt;h2>Keyboard interruption&lt;/h2>
&lt;p>C code can call &lt;code>R_CheckUserInterrupt()&lt;/code>, and it is indeed suggested to do
so during long computation or I/O. If the user initiates an interrupt via
the keyboard or a signal, then &lt;code>R_CheckUserInterrupt()&lt;/code> never returns, and
the control goes back to top level.&lt;/p>
&lt;p>To illustrate the resource cleanup problem more, we’ll show some examples
from base R and CRAN packages that contain potential resource leaks.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="example-1-download.filemethod-internal" class="section level1">
&lt;h1>Example 1: &lt;code>download.file(method = &amp;quot;internal&amp;quot;)&lt;/code>&lt;/h1>
&lt;p>The C implementation of &lt;code>download.file()&lt;/code> opens a file for saving the
downloaded data to, and it does not clean or even close this file on a
keyboard interrupt. The file is opened here:
&lt;a href="https://github.com/wch/r-source/blob/f3a67c36c5cf4c715dac374e33168cfc348106aa/src/modules/internet/internet.c#L553" class="uri">https://github.com/wch/r-source/blob/f3a67c36c5cf4c715dac374e33168cfc348106aa/src/modules/internet/internet.c#L553&lt;/a>&lt;/p>
&lt;pre class="c">&lt;code> FILE *out;
[...]
out = R_fopen(R_ExpandFileName(file), mode);
[...]&lt;/code>&lt;/pre>
&lt;p>We can easily show the problem in practice as well.
First, we create a handy function that interrupts the current process
one second after calling it. This allows us to simulate an interrupt from
the keyboard. It starts a background process that will send an interrupt
(SIGINT on Unix, CTRL+C on Windows) to our R process.&lt;/p>
&lt;pre class="r">&lt;code>interrupt &amp;lt;- function(expr, after = 1) {
tryCatch({
p &amp;lt;- callr::r_bg(function(pid, after) {
Sys.sleep(after)
ps::ps_interrupt(ps::ps_handle(pid))
}, list(pid = Sys.getpid(), after = after))
expr
p$kill()
}, interrupt = function(e) e)
}&lt;/code>&lt;/pre>
&lt;p>&lt;code>ps::ps_open_files()&lt;/code> lists all open files of a process,&lt;code>ps::ps_handle()&lt;/code>
returns a handle for the current R process. You should see the three
file descriptors corresponding to standard input, output and error here,
and another file is used by the blogdown engine rendering this page. If you
run this code in your R session you’ll not see that file, but of course you
may see others.&lt;/p>
&lt;pre class="r">&lt;code>ps::ps_open_files(ps::ps_handle())
#&amp;gt; # A tibble: 4 x 2
#&amp;gt; fd path
#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;
#&amp;gt; 1 0 /dev/ttys021
#&amp;gt; 2 1 /dev/ttys021
#&amp;gt; 3 2 /dev/ttys021
#&amp;gt; 4 7 /Users/gaborcsardi/R/blogdown/scripts/render_page.R&lt;/code>&lt;/pre>
&lt;p>Now we will start downloading a file, and while it is downloading, we’ll
send an interrupt to our R process, causing an early exit.&lt;/p>
&lt;pre class="r">&lt;code>interrupt(
download.file(&amp;quot;http://httpbin.org/delay/3&amp;quot;, tempfile(), method = &amp;quot;internal&amp;quot;)
)
#&amp;gt; &amp;lt;interrupt: &amp;gt;&lt;/code>&lt;/pre>
&lt;p>The list of open files will now include the one opened by &lt;code>download.file()&lt;/code>:&lt;/p>
&lt;pre class="r">&lt;code>ps::ps_open_files(ps::ps_handle())
#&amp;gt; # A tibble: 5 x 2
#&amp;gt; fd path
#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;
#&amp;gt; 1 0 /dev/ttys021
#&amp;gt; 2 1 /dev/ttys021
#&amp;gt; 3 2 /dev/ttys021
#&amp;gt; 4 7 /Users/gaborcsardi/R/blogdown/scripts/render_page.R
#&amp;gt; 5 9 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…&lt;/code>&lt;/pre>
&lt;p>Because &lt;code>download.file()&lt;/code> fails to clean up this file handle, it is not
released until the R session quits. On Windows this file is probably locked,
and cannot be removed until R exits.&lt;/p>
&lt;/div>
&lt;div id="example-2-download.filemethod-libcurl" class="section level1">
&lt;h1>Example 2: &lt;code>download.file(method = &amp;quot;libcurl&amp;quot;)&lt;/code>&lt;/h1>
&lt;p>There is a very similar bug in the implementation of the &lt;code>download.file()&lt;/code>
libcurl method, which opens an output file here:
&lt;a href="https://github.com/wch/r-source/blob/def075db88ae87104c38437a57e9327b078bb804/src/modules/internet/libcurl.c#L566" class="uri">https://github.com/wch/r-source/blob/def075db88ae87104c38437a57e9327b078bb804/src/modules/internet/libcurl.c#L566&lt;/a>
but it does not close it on error or interrupt. This method can download
many files in parallel, in which case multiple file handles may be lost:&lt;/p>
&lt;pre class="r">&lt;code>ps::ps_open_files(ps::ps_handle())
#&amp;gt; # A tibble: 5 x 2
#&amp;gt; fd path
#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;
#&amp;gt; 1 0 /dev/ttys021
#&amp;gt; 2 1 /dev/ttys021
#&amp;gt; 3 2 /dev/ttys021
#&amp;gt; 4 7 /Users/gaborcsardi/R/blogdown/scripts/render_page.R
#&amp;gt; 5 9 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
interrupt(
download.file(
rep(&amp;quot;https://httpbin.org/delay/3&amp;quot;, 3), paste0(tempfile(), 1:3),
method = &amp;quot;libcurl&amp;quot;)
)
#&amp;gt; &amp;lt;interrupt: &amp;gt;
ps::ps_open_files(ps::ps_handle())
#&amp;gt; # A tibble: 8 x 2
#&amp;gt; fd path
#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;
#&amp;gt; 1 0 /dev/ttys021
#&amp;gt; 2 1 /dev/ttys021
#&amp;gt; 3 2 /dev/ttys021
#&amp;gt; 4 7 /Users/gaborcsardi/R/blogdown/scripts/render_page.R
#&amp;gt; 5 9 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
#&amp;gt; 6 15 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
#&amp;gt; 7 16 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
#&amp;gt; 8 17 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="example-3-edit" class="section level1">
&lt;h1>Example 3: &lt;code>edit()&lt;/code>&lt;/h1>
&lt;p>&lt;code>edit()&lt;/code> invokes the text editor specified by the &lt;code>editor&lt;/code> option, with the
supplied object to be edited. &lt;code>edit()&lt;/code> can also write the edited version
to a file. It opens a file here to create its first version, before starting
the editor:
&lt;a href="https://github.com/wch/r-source/blob/019f16d3dec4f97c1b4e4f0ec905148e36979e37/src/main/edit.c#L121-L128" class="uri">https://github.com/wch/r-source/blob/019f16d3dec4f97c1b4e4f0ec905148e36979e37/src/main/edit.c#L121-L128&lt;/a>&lt;/p>
&lt;pre class="c">&lt;code>121 if((fp=R_fopen(R_ExpandFileName(filename), &amp;quot;w&amp;quot;)) == NULL)
122 errorcall(call, _(&amp;quot;unable to open file&amp;quot;));
123 if (LENGTH(STRING_ELT(fn, 0)) == 0) EdFileUsed++;
124 PROTECT(src = deparse1(x, 0, FORSOURCING)); /* deparse for sourcing, not for display */
125 for (i = 0; i &amp;lt; LENGTH(src); i++)
126 fprintf(fp, &amp;quot;%s\n&amp;quot;, translateChar(STRING_ELT(src, i)));
127 UNPROTECT(1); /* src */
128 fclose(fp);&lt;/code>&lt;/pre>
&lt;p>If all goes well, then it will close it just 7 code lines later.
However, it also calls the R API a number of times before closing the file,
so if any of these API calls fail, the file is never closed. In particular,
it calls &lt;code>deparse1()&lt;/code> which is roughly equivalent to the R &lt;code>deparse()&lt;/code>
function, and &lt;code>deparse&lt;/code>()` fails on long vectors:&lt;/p>
&lt;pre class="r">&lt;code>ps::ps_open_files(ps::ps_handle())
#&amp;gt; # A tibble: 8 x 2
#&amp;gt; fd path
#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;
#&amp;gt; 1 0 /dev/ttys021
#&amp;gt; 2 1 /dev/ttys021
#&amp;gt; 3 2 /dev/ttys021
#&amp;gt; 4 7 /Users/gaborcsardi/R/blogdown/scripts/render_page.R
#&amp;gt; 5 9 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
#&amp;gt; 6 15 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
#&amp;gt; 7 16 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
#&amp;gt; 8 17 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
edit(1:10e10, file = tempfile())
#&amp;gt; Error in edit.default(1:1e+11, file = tempfile()): long vectors not supported yet: ../../../../R-3.5.3/src/include/Rinlinedfuns.h:519
ps::ps_open_files(ps::ps_handle())
#&amp;gt; # A tibble: 9 x 2
#&amp;gt; fd path
#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;
#&amp;gt; 1 0 /dev/ttys021
#&amp;gt; 2 1 /dev/ttys021
#&amp;gt; 3 2 /dev/ttys021
#&amp;gt; 4 7 /Users/gaborcsardi/R/blogdown/scripts/render_page.R
#&amp;gt; 5 8 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
#&amp;gt; 6 9 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
#&amp;gt; 7 15 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
#&amp;gt; 8 16 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…
#&amp;gt; 9 17 /private/var/folders/59/0gkmw1yj2w7bf2dfc3jznv5w0000gn/T/Rtmp0Uww3…&lt;/code>&lt;/pre>
&lt;p>Notice that we have one more extra open file here.&lt;/p>
&lt;/div>
&lt;div id="example-4-the-wait-method-in-processx" class="section level1">
&lt;h1>Example 4: the wait() method in &lt;a href="https://github.com/r-lib/processx#readme">processx&lt;/a>:&lt;/h1>
&lt;p>&lt;code>processx::process&lt;/code> is an R6 class for a subprocess. Its &lt;code>$wait()&lt;/code> method
waits for the subprocess to finish, with a timeout. To implement &lt;code>$wait()&lt;/code>
on Unix, &lt;a href="https://github.com/r-lib/processx#readme">processx&lt;/a> opens a pair of pipe file descriptors. These are
temporary and should be closed once the function exits. &lt;code>$wait()&lt;/code> is
interruptible, it calls &lt;code>R_CheckUserInterrupt()&lt;/code> periodically. However,
in the current, 3.3.0 version of &lt;a href="https://github.com/r-lib/processx#readme">processx&lt;/a> it does not close the pipe
file descriptors on an interrupt. Here is an illustration:&lt;/p>
&lt;pre class="r">&lt;code>ps::ps_num_fds(ps::ps_handle())
#&amp;gt; [1] 20
p &amp;lt;- processx::process$new(&amp;quot;sleep&amp;quot;, &amp;quot;10&amp;quot;)
interrupt(
p$wait()
)
#&amp;gt; &amp;lt;interrupt: &amp;gt;
p$kill()
#&amp;gt; [1] TRUE
gc()
#&amp;gt; used (Mb) gc trigger (Mb) limit (Mb) max used (Mb)
#&amp;gt; Ncells 626041 33.5 1203691 64.3 NA 1203691 64.3
#&amp;gt; Vcells 1188386 9.1 8388608 64.0 16384 2160124 16.5
ps::ps_num_fds(ps::ps_handle())
#&amp;gt; [1] 22&lt;/code>&lt;/pre>
&lt;p>&lt;code>ps_num_fds()&lt;/code> prints the number of open file descriptors of a process.
The two extra file descriptors that are open after garbage collection are
the two ends of the (supposedly) temporary pipe, just opened by &lt;code>$wait()&lt;/code>.&lt;/p>
&lt;/div>
&lt;div id="fix-1-external-pointer-and-finalizer" class="section level1">
&lt;h1>Fix 1: External pointer and finalizer&lt;/h1>
&lt;p>One generic solution to resource cleanup is to wrap all C resources into
one or more R external pointer objects, and add finalizers to them. We
show how this can fix the &lt;a href="https://github.com/r-lib/processx#readme">processx&lt;/a> problem in the previous example.&lt;/p>
&lt;p>This is how the &lt;code>processx_wait()&lt;/code> C function looks like before the fix:
&lt;a href="https://github.com/r-lib/processx/blob/a8f09d147fead78347a87fcf4e0fbd1c07de1c21/src/unix/processx.c#L507-L589" class="uri">https://github.com/r-lib/processx/blob/a8f09d147fead78347a87fcf4e0fbd1c07de1c21/src/unix/processx.c#L507-L589&lt;/a>&lt;/p>
&lt;p>First, we need to create a finalizer function, that will be called by
the R garbage collector, after &lt;code>$wait()&lt;/code> has finished, at the next
garbage collection:&lt;/p>
&lt;pre class="c">&lt;code>static void processx__wait_finalizer(SEXP xptr) {
SEXP tag = R_ExternalPtrTag(xptr);
if (INTEGER(tag)[0] &amp;gt;= 0) close(INTEGER(tag)[0]);
if (INTEGER(tag)[1] &amp;gt;= 0) close(INTEGER(tag)[1]);
}&lt;/code>&lt;/pre>
&lt;p>An external pointer can have a &lt;em>tag&lt;/em>, which is an R object that is kept
alive as long the pointer object itself is alive. In this case we can put
the file descriptors in the tag, in an integer vector of length two.
In more complicated cases the resources cannot easily be represented as
R objects, so you would use the actual C pointer, with a custom C
&lt;code>struct&lt;/code> to store them.&lt;/p>
&lt;p>Now we need to create the external pointer, before the pipes are opened:&lt;/p>
&lt;pre class="c">&lt;code> SEXP tag = PROTECT(allocVector(INTSXP, 2));
INTEGER(tag)[0] = INTEGER(tag)[1] = -1;
SEXP xptr = PROTECT(R_MakeExternalPtr(NULL, tag, R_NilValue));
R_RegisterCFinalizerEx(xptr, processx__wait_finalizer, 0);&lt;/code>&lt;/pre>
&lt;p>We initialize the file descriptors to -1, which is guard value, meaning
that no cleanup is needed.&lt;/p>
&lt;p>We can now open the pipes and save their file descriptors in the tag of
the external pointer.&lt;/p>
&lt;pre class="c">&lt;code> if (pipe(handle-&amp;gt;waitpipe)) {
processx__unblock_sigchld();
error(&amp;quot;processx error: %s&amp;quot;, strerror(errno));
}
INTEGER(tag)[0] = handle-&amp;gt;waitpipe[0];
INTEGER(tag)[1] = handle-&amp;gt;waitpipe[1];&lt;/code>&lt;/pre>
&lt;p>At the end of the function, we need to unprotect the external pointer,
and the tag:&lt;/p>
&lt;pre class="c">&lt;code> UNPROTECT(2);
return ScalarLogical(ret != 0);
}&lt;/code>&lt;/pre>
&lt;p>One potential problem with the external pointer fix is that the resources
will only be cleaned up at the next garbage collection, and sometimes this
is too late. For example, if an open file is locked by the operating system,
then we won’t be able to remove that file, or its directory, until the
garbage collector runs and closes it. It is easier to program if
resource cleanup is immediate, and luckily the other two fixes below are.&lt;/p>
&lt;/div>
&lt;div id="fix-2-the-r_execwithcleanup-function" class="section level1">
&lt;h1>Fix 2: the &lt;code>R_ExecWithCleanup()&lt;/code> function&lt;/h1>
&lt;p>&lt;code>R_ExecWithCleanup()&lt;/code> is a function in the R API, that can add a cleanup
function to a regular C function call. The cleanup function is always
executed, even on early exit:&lt;/p>
&lt;pre class="c">&lt;code>SEXP R_ExecWithCleanup(SEXP (*fun)(void *), void *data,
void (*cleanfun)(void *), void *cleandata);&lt;/code>&lt;/pre>
&lt;p>&lt;code>R_ExecWithCleanup()&lt;/code> calls &lt;code>fun&lt;/code> with &lt;code>data&lt;/code>, and then calls
&lt;code>cleanfun&lt;/code> with &lt;code>cleandata&lt;/code>. If &lt;code>fun&lt;/code> calls the R API and exits early,
then it will still call &lt;code>cleanfun&lt;/code> with &lt;code>cleandata&lt;/code>, before throwing
the error up the stack.&lt;/p>
&lt;p>To fix &lt;code>$wait()&lt;/code> with &lt;code>R_ExecWithCleanup()&lt;/code>, we’ll need to define a
cleanup function first. The cleanup function receives the cleanup data
as a &lt;code>void&lt;/code> pointer, we’ll define a &lt;code>struct&lt;/code> for this. For simplicity,
this struct will also include the arguments to &lt;code>processx_wait()&lt;/code>, so
we can use the same struct for both &lt;code>fun&lt;/code> and &lt;code>cleanupfun&lt;/code>.&lt;/p>
&lt;pre class="c">&lt;code>struct processx_wait_data {
SEXP status;
SEXP timeout;
int fds[2];
};
void processx_wait_cleanup(void *data) {
struct processx_wait_data *pdata = data;
if (pdata-&amp;gt;fds[0] &amp;gt;= 0) close(pdata-&amp;gt;fds[0]);
if (pdata-&amp;gt;fds[1] &amp;gt;= 0) close(pdata-&amp;gt;fds[1]);
}&lt;/code>&lt;/pre>
&lt;p>The new &lt;code>processx_wait()&lt;/code> function will call &lt;code>R_ExecWithCleanup()&lt;/code>,
to call the original &lt;code>processx_wait()&lt;/code>, under a new name:&lt;/p>
&lt;pre class="c">&lt;code>SEXP processx_wait_internal(void *data);
SEXP processx_wait(SEXP status, SEXP timeout) {
struct processx_wait_data pdata = { status, timeout, { -1, -1 } };
SEXP result = R_ExecWithCleanup(processx_wait_internal, &amp;amp;pdata,
processx_wait_cleanup, &amp;amp;pdata);
return result;
}&lt;/code>&lt;/pre>
&lt;p>&lt;code>processx_wait_internal()&lt;/code> is very much like &lt;code>processx_wait()&lt;/code> used to
be, but we need to extract the arguments from the struct at the beginning:&lt;/p>
&lt;pre class="c">&lt;code>SEXP processx_wait_internal(void *data) {
struct processx_wait_data *pdata = data;
SEXP status = pdata-&amp;gt;status;
SEXP timeout = pdata-&amp;gt;timeout;
int *fds = pdata-&amp;gt;fds;
...&lt;/code>&lt;/pre>
&lt;p>Now the only other thing we need to do is saving the file descriptors
in the data struct:&lt;/p>
&lt;pre>&lt;code> if (pipe(handle-&amp;gt;waitpipe)) {
processx__unblock_sigchld();
error(&amp;quot;processx error: %s&amp;quot;, strerror(errno));
}
fds[0] = handle-&amp;gt;waitpipe[0];
fds[1] = handle-&amp;gt;waitpipe[1];&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="fix-3-the-cleancall-package" class="section level1">
&lt;h1>Fix 3: the &lt;a href="https://github.com/r-lib/cleancall#readme">cleancall&lt;/a> package&lt;/h1>
&lt;p>&lt;code>R_ExecWithCleanup()&lt;/code> is a good fix to the resource cleanup problem,
but it can be verbose and error prone. It also requires that you
replace your original function with a wrapper that packs the original
function arguments into a &lt;code>struct&lt;/code> and an internal function that
only has a &lt;code>void*&lt;/code> argument.&lt;/p>
&lt;p>We created the &lt;a href="https://github.com/r-lib/cleancall#readme">cleancall&lt;/a> package to make resource cleanup easier.
This package automates wrapping your functions with &lt;code>R_ExecWithCleanup()&lt;/code>.
&lt;a href="https://github.com/r-lib/cleancall#readme">cleancall&lt;/a> has been just published on CRAN. Here we show how to use it to
fix the &lt;a href="https://github.com/r-lib/processx#readme">processx&lt;/a> &lt;code>$wait()&lt;/code> method.&lt;/p>
&lt;p>To use it in your package, you need to specify &lt;a href="https://github.com/r-lib/cleancall#readme">cleancall&lt;/a> as a dependency,
both as &lt;code>LinkingTo&lt;/code> and &lt;code>Imports&lt;/code>:&lt;/p>
&lt;pre>&lt;code>...
Imports: cleancall
LinkingTo: cleancall
...&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://github.com/r-lib/cleancall#readme">cleancall&lt;/a> defines the &lt;code>call_with_cleanup()&lt;/code> R function and the
&lt;code>r_call_on_exit()&lt;/code> and &lt;code>r_call_on_early_exit()&lt;/code> C functions.&lt;/p>
&lt;p>You need to replace &lt;code>.Call()&lt;/code> with &lt;code>call_with_cleanup()&lt;/code> in your R code:&lt;/p>
&lt;pre>&lt;code>cleancall::call_with_cleanup(c_processx_wait, private$status,
as.integer(timeout))&lt;/code>&lt;/pre>
&lt;p>In your C code, include the &lt;code>cleancall.h&lt;/code> header:&lt;/p>
&lt;pre class="c">&lt;code>#include &amp;lt;cleancall.h&amp;gt;&lt;/code>&lt;/pre>
&lt;p>Next, create a cleanup function for the resource type:&lt;/p>
&lt;pre class="c">&lt;code>void processx__close_fd(void *ptr) {
int *fd = ptr;
if (*fd &amp;gt;= 0) close(*fd);
}&lt;/code>&lt;/pre>
&lt;p>This cleanup function closes a file descriptor. Once your resource type
has a cleanup function, you can call &lt;code>r_call_on_exit()&lt;/code> or
&lt;code>r_call_on_early_exit()&lt;/code> every time you acquire a resource of that type.
Use &lt;code>r_call_on_exit()&lt;/code> if the resource must be released on normal
termination as well, and &lt;code>r_call_on_early_exit()&lt;/code> if it must be released
on early termination only:&lt;/p>
&lt;pre class="c">&lt;code> if (pipe(handle-&amp;gt;waitpipe)) {
processx__unblock_sigchld();
error(&amp;quot;processx error: %s&amp;quot;, strerror(errno));
}
r_call_on_exit(processx__close_fd, handle-&amp;gt;waitpipe);
r_call_on_exit(processx__close_fd, handle-&amp;gt;waitpipe + 1);&lt;/code>&lt;/pre>
&lt;p>Typically &lt;code>r_call_on_exit()&lt;/code> is more convenient for temporary resources.
&lt;code>r_call_on_early_exit()&lt;/code> is more convenient if the C function returns a
handle (e.g. external pointer), for which it needs to allocate resources
gradually. If all resource allocations are successful, and the function
returns normally, then no cleanup is needed. However if an intermediate
step fails, you need to release the resources acquired before the failure.&lt;/p>
&lt;p>In does not matter much in this simple example, but it in important in
general that exit handlers are always executed in reverse order (last one in
is the first one out, LIFO). This makes it easy to build a resource
gradually. Exit handlers installed via &lt;code>r_call_on_exit()&lt;/code> and
&lt;code>r_call_on_early_exit()&lt;/code> share the same stack.&lt;/p>
&lt;p>We suggest that exit handlers are kept as simple and fast as possible.
In particular, errors (and other early exits) triggered from exit handlers
are not caught currently. If an exit handler exits early the others do not
run. If this is an issue, you can wrap the exit handler in &lt;code>R_tryCatch()&lt;/code>
(available for R 3.4.0 and later). But in general the best error handlers
do not call the R API at all.&lt;/p>
&lt;/div>
&lt;div id="what-about-c" class="section level1">
&lt;h1>What about C++?&lt;/h1>
&lt;p>The resource cleanup problem is also present if you interface C++ code.
While &lt;a href="https://github.com/r-lib/cleancall#readme">cleancall&lt;/a> can be used with C++, it works best with C code,
since it follows C idioms.&lt;/p>
&lt;p>Using external pointers and finalizers works for C++ as well, as does
wrapping R API calls in &lt;code>R_ExecWithCleanup()&lt;/code>.&lt;/p>
&lt;p>Alternatively, you can wrap your R API calls in &lt;code>R_tryCatch()&lt;/code> (R 3.4.0
and later), or use &lt;code>R_UnwindProtect()&lt;/code> (R 3.5.0 and later).&lt;/p>
&lt;p>If your C++ code needs to support older R versions, that is more
challenging, and one possibility is to call back to R and call &lt;code>tryCatch()&lt;/code>
there.&lt;/p>
&lt;/div>
&lt;div id="summary" class="section level1">
&lt;h1>Summary&lt;/h1>
&lt;p>Resource cleanup in C code can be challenging, especially given that there
is not very much documentation on this topic.&lt;/p>
&lt;p>Hopefully this post and the &lt;a href="https://github.com/r-lib/cleancall#readme">cleancall&lt;/a> package will make resource
cleanup much simpler, and fewer R packages will suffer from resource
leaks in the future.&lt;/p>
&lt;/div></description></item><item><title>vroom 1.0.0</title><link>https://www.tidyverse.org/blog/2019/05/vroom-1-0-0/</link><pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/05/vroom-1-0-0/</guid><description>&lt;html>
&lt;style>
h2 code {
font-size: 1em;
}
&lt;/style>
&lt;/html>
&lt;p>I&amp;rsquo;m excited to announce that
&lt;a href="http://vroom.r-lib.org" target="_blank" rel="noopener">vroom 1.0.0&lt;/a> is now
available on CRAN!&lt;/p>
&lt;p>vroom reads rectangular data, such as comma separated
(csv), tab separated (tsv) or fixed width files (fwf) into R. It performs
similar roles to functions like
&lt;a href="http://readr.r-lib.org" target="_blank" rel="noopener">&lt;code>readr::read_csv()&lt;/code>&lt;/a>,
&lt;a href="http://r-datatable.com" target="_blank" rel="noopener">&lt;code>data.table::fread()&lt;/code>&lt;/a> or &lt;code>read.csv()&lt;/code>. But for many
datasets &lt;code>vroom::vroom()&lt;/code> can read them much, much faster (hence the name).&lt;/p>
&lt;p>The main reason vroom can be faster is because character data is read from the
file lazily; you only pay for the data you use. This lazy access is done
automatically, so no changes to your R data-manipulation code are needed.&lt;/p>
&lt;p>vroom also provides efficient, multi-threaded writing that is multiple times
faster on most inputs than the &lt;code>readr::write_*()&lt;/code> functions.&lt;/p>
&lt;p>Install vroom with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;vroom&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The best way to get acquainted with the package is the
&lt;a href="http://vroom.r-lib.org/articles/vroom.html" target="_blank" rel="noopener">getting
started&lt;/a> vignette.&lt;/p>
&lt;h2 id="vroom-vs-readr">vroom vs readr
&lt;a href="#vroom-vs-readr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>What does the release of vroom mean for readr? For now we plan
to let the two packages evolve separately, but likely we will unite the
packages in the future. One disadvantage to vroom&amp;rsquo;s lazy reading is certain
data problems can&amp;rsquo;t be reported up front, so how best to unify them requires
some thought.&lt;/p>
&lt;h2 id="reading-delimited-files">Reading delimited files
&lt;a href="#reading-delimited-files">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Compared to readr, the first difference you may note is you use only one
function to read the files,
&lt;a href="http://vroom.r-lib.org/reference/vroom.html" target="_blank" rel="noopener">&lt;code>vroom()&lt;/code>&lt;/a>. This is because
&lt;code>vroom()&lt;/code> guesses the delimiter of the file automatically based on the first
few lines (this feature is inspired by a similar feature in
&lt;code>data.table::fread()&lt;/code>). This works well most of the time, but may fail to guess
properly in some cases. The &lt;code>delim&lt;/code> argument can be used to specify the
delimiter of the file explicitly.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vroom&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Observations: 336,776&lt;/span>
&lt;span class="c1">#&amp;gt; Variables: 19&lt;/span>
&lt;span class="c1">#&amp;gt; chr [ 4]: carrier, tailnum, origin, dest&lt;/span>
&lt;span class="c1">#&amp;gt; dbl [14]: year, month, day, dep_time, sched_dep_time, dep_delay, arr_time, sched_arr...&lt;/span>
&lt;span class="c1">#&amp;gt; dttm [ 1]: time_hour&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call `spec()` for a copy-pastable column specification&lt;/span>
&lt;span class="c1">#&amp;gt; Specify the column types with `col_types` to quiet this message&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The summary message after reading also differs from readr. We hope this output
gives a more informative indication as to whether the types of your columns are
being guessed properly. However you can still retrieve and print the full
column specification with
&lt;a href="http://vroom.r-lib.org/reference/spec.html" target="_blank" rel="noopener">&lt;code>spec()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">spec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; cols(&lt;/span>
&lt;span class="c1">#&amp;gt; year = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; month = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; day = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; dep_time = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; sched_dep_time = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; dep_delay = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; arr_time = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; sched_arr_time = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; arr_delay = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; carrier = col_character(),&lt;/span>
&lt;span class="c1">#&amp;gt; flight = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; tailnum = col_character(),&lt;/span>
&lt;span class="c1">#&amp;gt; origin = col_character(),&lt;/span>
&lt;span class="c1">#&amp;gt; dest = col_character(),&lt;/span>
&lt;span class="c1">#&amp;gt; air_time = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; distance = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; hour = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; minute = col_double(),&lt;/span>
&lt;span class="c1">#&amp;gt; time_hour = col_datetime(format = &amp;#34;&amp;#34;)&lt;/span>
&lt;span class="c1">#&amp;gt; )&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The message will be disabled if you supply a column specification to &lt;code>col_types&lt;/code> when reading.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">s&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">spec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col_types&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="reading-multiple-files">Reading multiple files
&lt;a href="#reading-multiple-files">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One feature new to vroom is built-in support for reading sets of files with the
same columns into one table. Just pass the filenames to be read directly to
&lt;code>vroom()&lt;/code>. Imagine we have a directory of files containing the flights data, where
each file corresponds to a single airline.&lt;/p>
&lt;p>Then, we can efficiently read all of the files into one tibble by passing a
vector of the filenames directly to &lt;code>vroom()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">files&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">fs&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">dir_ls&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">glob&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;flights_*tsv&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">files&lt;/span>
&lt;span class="c1">#&amp;gt; flights_9E.tsv flights_AA.tsv flights_AS.tsv flights_B6.tsv flights_DL.tsv &lt;/span>
&lt;span class="c1">#&amp;gt; flights_EV.tsv flights_F9.tsv flights_FL.tsv flights_HA.tsv flights_MQ.tsv &lt;/span>
&lt;span class="c1">#&amp;gt; flights_OO.tsv flights_UA.tsv flights_US.tsv flights_VX.tsv flights_WN.tsv &lt;/span>
&lt;span class="c1">#&amp;gt; flights_YV.tsv&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">files&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Observations: 336,776&lt;/span>
&lt;span class="c1">#&amp;gt; Variables: 19&lt;/span>
&lt;span class="c1">#&amp;gt; chr [ 4]: carrier, tailnum, origin, dest&lt;/span>
&lt;span class="c1">#&amp;gt; dbl [14]: year, month, day, dep_time, sched_dep_time, dep_delay, arr_time, sched_arr...&lt;/span>
&lt;span class="c1">#&amp;gt; dttm [ 1]: time_hour&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call `spec()` for a copy-pastable column specification&lt;/span>
&lt;span class="c1">#&amp;gt; Specify the column types with `col_types` to quiet this message&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="reading-and-writing-compressed-files">Reading and writing compressed files
&lt;a href="#reading-and-writing-compressed-files">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Just like readr, vroom automatically reads and writes zip, gzip, bz2 and xz compressed
files with the standard file extensions.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">vroom_write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flights&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;flights.tsv.gz&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Check file sizes to show file is compressed&lt;/span>
&lt;span class="n">fs&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">file_size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;flights.tsv.gz&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; 29.62M 7.87M&lt;/span>
&lt;span class="c1"># Read the file back in&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv.gz&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Observations: 336,776&lt;/span>
&lt;span class="c1">#&amp;gt; Variables: 19&lt;/span>
&lt;span class="c1">#&amp;gt; chr [ 4]: carrier, tailnum, origin, dest&lt;/span>
&lt;span class="c1">#&amp;gt; dbl [14]: year, month, day, dep_time, sched_dep_time, dep_delay, arr_time, sched_arr...&lt;/span>
&lt;span class="c1">#&amp;gt; dttm [ 1]: time_hour&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call `spec()` for a copy-pastable column specification&lt;/span>
&lt;span class="c1">#&amp;gt; Specify the column types with `col_types` to quiet this message&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h1 id="reading-remote-files">Reading remote files
&lt;a href="#reading-remote-files">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h1>&lt;p>vroom can also read files from the internet as well by passing the URL of the file to &lt;code>vroom()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">file&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="s">&amp;#34;https://raw.githubusercontent.com/r-lib/vroom/master/inst/extdata/mtcars.csv&amp;#34;&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Observations: 32&lt;/span>
&lt;span class="c1">#&amp;gt; Variables: 12&lt;/span>
&lt;span class="c1">#&amp;gt; chr [ 1]: model&lt;/span>
&lt;span class="c1">#&amp;gt; dbl [11]: mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call `spec()` for a copy-pastable column specification&lt;/span>
&lt;span class="c1">#&amp;gt; Specify the column types with `col_types` to quiet this message&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can even read gzipped files from the internet (although currently not the other compressed formats).&lt;/p>
&lt;h2 id="reading-and-writing-from-pipe-connections">Reading and writing from pipe connections
&lt;a href="#reading-and-writing-from-pipe-connections">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>vroom provides efficient input and output from &lt;code>pipe()&lt;/code> connections.&lt;/p>
&lt;p>This is useful for doing things like pre-filtering large inputs with command line tools like
&lt;a href="https://en.wikipedia.org/wiki/Grep" target="_blank" rel="noopener">grep&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># Return only flights on United Airlines&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">pipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;grep -w UA flights.tsv&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">col_names&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">names&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flights&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Observations: 58,665&lt;/span>
&lt;span class="c1">#&amp;gt; Variables: 19&lt;/span>
&lt;span class="c1">#&amp;gt; chr [ 4]: carrier, tailnum, origin, dest&lt;/span>
&lt;span class="c1">#&amp;gt; dbl [14]: year, month, day, dep_time, sched_dep_time, dep_delay, arr_time, sched_arr...&lt;/span>
&lt;span class="c1">#&amp;gt; dttm [ 1]: time_hour&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call `spec()` for a copy-pastable column specification&lt;/span>
&lt;span class="c1">#&amp;gt; Specify the column types with `col_types` to quiet this message&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or using multi-threaded compression programs like
&lt;a href="https://zlib.net/pigz/" target="_blank" rel="noopener">pigz&lt;/a>, which can greatly reduce the time to write compressed
files.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">bench&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">workout&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nf">vroom_write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flights&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;flights.tsv.gz&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">vroom_write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flights&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">pipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;pigz &amp;gt; flights.tsv.gz&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 2 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; exprs process real&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 vroom_write(flights, &amp;#34;flights.tsv.gz&amp;#34;) 3.5s 2.69s&lt;/span>
&lt;span class="c1">#&amp;gt; 2 vroom_write(flights, pipe(&amp;#34;pigz &amp;gt; flights.tsv.gz&amp;#34;)) 1.54s 975.09ms&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="column-selection">Column selection
&lt;a href="#column-selection">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>vroom&lt;/code> introduces a new argument, &lt;code>col_select&lt;/code>, which makes selecting columns to
keep (or omit) more straightforward.&lt;/p>
&lt;p>&lt;code>col_select&lt;/code> uses the same interface as &lt;code>dplyr::select()&lt;/code>, so you can do flexible selection operations.&lt;/p>
&lt;ul>
&lt;li>Select with the column names&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col_select&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">flight&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tailnum&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Observations: 336,776&lt;/span>
&lt;span class="c1">#&amp;gt; Variables: 3&lt;/span>
&lt;span class="c1">#&amp;gt; chr [1]: tailnum&lt;/span>
&lt;span class="c1">#&amp;gt; dbl [2]: year, flight&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call `spec()` for a copy-pastable column specification&lt;/span>
&lt;span class="c1">#&amp;gt; Specify the column types with `col_types` to quiet this message&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Drop columns by name&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col_select&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dep_time&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">air_time&lt;/span>&lt;span class="o">:-&lt;/span>&lt;span class="n">time_hour&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Observations: 336,776&lt;/span>
&lt;span class="c1">#&amp;gt; Variables: 13&lt;/span>
&lt;span class="c1">#&amp;gt; chr [4]: carrier, tailnum, origin, dest&lt;/span>
&lt;span class="c1">#&amp;gt; dbl [9]: year, month, day, sched_dep_time, dep_delay, arr_time, sched_arr_time, arr...&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call `spec()` for a copy-pastable column specification&lt;/span>
&lt;span class="c1">#&amp;gt; Specify the column types with `col_types` to quiet this message&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Use the selection helpers&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col_select&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">ends_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;time&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Observations: 336,776&lt;/span>
&lt;span class="c1">#&amp;gt; Variables: 5&lt;/span>
&lt;span class="c1">#&amp;gt; dbl [5]: dep_time, sched_dep_time, arr_time, sched_arr_time, air_time&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call `spec()` for a copy-pastable column specification&lt;/span>
&lt;span class="c1">#&amp;gt; Specify the column types with `col_types` to quiet this message&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Or rename columns&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col_select&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plane&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tailnum&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">everything&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;span class="c1">#&amp;gt; Observations: 336,776&lt;/span>
&lt;span class="c1">#&amp;gt; Variables: 19&lt;/span>
&lt;span class="c1">#&amp;gt; chr [ 4]: carrier, tailnum, origin, dest&lt;/span>
&lt;span class="c1">#&amp;gt; dbl [14]: year, month, day, dep_time, sched_dep_time, dep_delay, arr_time, sched_arr...&lt;/span>
&lt;span class="c1">#&amp;gt; dttm [ 1]: time_hour&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Call `spec()` for a copy-pastable column specification&lt;/span>
&lt;span class="c1">#&amp;gt; Specify the column types with `col_types` to quiet this message&lt;/span>
&lt;span class="n">data&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 336,776 x 19&lt;/span>
&lt;span class="c1">#&amp;gt; plane year month day dep_time sched_dep_time dep_delay arr_time&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 N142… 2013 1 1 517 515 2 830&lt;/span>
&lt;span class="c1">#&amp;gt; 2 N242… 2013 1 1 533 529 4 850&lt;/span>
&lt;span class="c1">#&amp;gt; 3 N619… 2013 1 1 542 540 2 923&lt;/span>
&lt;span class="c1">#&amp;gt; 4 N804… 2013 1 1 544 545 -1 1004&lt;/span>
&lt;span class="c1">#&amp;gt; 5 N668… 2013 1 1 554 600 -6 812&lt;/span>
&lt;span class="c1">#&amp;gt; 6 N394… 2013 1 1 554 558 -4 740&lt;/span>
&lt;span class="c1">#&amp;gt; 7 N516… 2013 1 1 555 600 -5 913&lt;/span>
&lt;span class="c1">#&amp;gt; 8 N829… 2013 1 1 557 600 -3 709&lt;/span>
&lt;span class="c1">#&amp;gt; 9 N593… 2013 1 1 557 600 -3 838&lt;/span>
&lt;span class="c1">#&amp;gt; 10 N3AL… 2013 1 1 558 600 -2 753&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 336,766 more rows, and 11 more variables: sched_arr_time &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # arr_delay &amp;lt;dbl&amp;gt;, carrier &amp;lt;chr&amp;gt;, flight &amp;lt;dbl&amp;gt;, origin &amp;lt;chr&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # dest &amp;lt;chr&amp;gt;, air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # time_hour &amp;lt;dttm&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="name-repair">Name repair
&lt;a href="#name-repair">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Often the names of columns in the original dataset are not ideal to work with.
&lt;code>vroom()&lt;/code> uses the same
&lt;a href="https://www.tidyverse.org/articles/2019/01/tibble-2.0.1/#name-repair" target="_blank" rel="noopener">.name_repair&lt;/a>
argument as tibble, so you can use one of the default name repair strategies or
provide a custom function. A great approach is to use the
&lt;a href="http://sfirke.github.io/janitor/" target="_blank" rel="noopener">janitor&lt;/a> &lt;code>make_clean_names()&lt;/code> function as the input.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.name_repair&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">janitor&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_clean_names&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 336,776 x 19&lt;/span>
&lt;span class="c1">#&amp;gt; year month day dep_time sched_dep_time dep_delay arr_time&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 2013 1 1 517 515 2 830&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2013 1 1 533 529 4 850&lt;/span>
&lt;span class="c1">#&amp;gt; 3 2013 1 1 542 540 2 923&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2013 1 1 544 545 -1 1004&lt;/span>
&lt;span class="c1">#&amp;gt; 5 2013 1 1 554 600 -6 812&lt;/span>
&lt;span class="c1">#&amp;gt; 6 2013 1 1 554 558 -4 740&lt;/span>
&lt;span class="c1">#&amp;gt; 7 2013 1 1 555 600 -5 913&lt;/span>
&lt;span class="c1">#&amp;gt; 8 2013 1 1 557 600 -3 709&lt;/span>
&lt;span class="c1">#&amp;gt; 9 2013 1 1 557 600 -3 838&lt;/span>
&lt;span class="c1">#&amp;gt; 10 2013 1 1 558 600 -2 753&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 336,766 more rows, and 12 more variables: sched_arr_time &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # arr_delay &amp;lt;dbl&amp;gt;, carrier &amp;lt;chr&amp;gt;, flight &amp;lt;dbl&amp;gt;, tailnum &amp;lt;chr&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;, air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;&lt;/span>
&lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.name_repair&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">janitor&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">make_clean_names&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.,&lt;/span> &lt;span class="n">case&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;lower_camel&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 336,776 x 19&lt;/span>
&lt;span class="c1">#&amp;gt; year month day depTime schedDepTime depDelay arrTime schedArrTime&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 2013 1 1 517 515 2 830 819&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2013 1 1 533 529 4 850 830&lt;/span>
&lt;span class="c1">#&amp;gt; 3 2013 1 1 542 540 2 923 850&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2013 1 1 544 545 -1 1004 1022&lt;/span>
&lt;span class="c1">#&amp;gt; 5 2013 1 1 554 600 -6 812 837&lt;/span>
&lt;span class="c1">#&amp;gt; 6 2013 1 1 554 558 -4 740 728&lt;/span>
&lt;span class="c1">#&amp;gt; 7 2013 1 1 555 600 -5 913 854&lt;/span>
&lt;span class="c1">#&amp;gt; 8 2013 1 1 557 600 -3 709 723&lt;/span>
&lt;span class="c1">#&amp;gt; 9 2013 1 1 557 600 -3 838 846&lt;/span>
&lt;span class="c1">#&amp;gt; 10 2013 1 1 558 600 -2 753 745&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 336,766 more rows, and 11 more variables: arrDelay &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # carrier &amp;lt;chr&amp;gt;, flight &amp;lt;dbl&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # airTime &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;,&lt;/span>
&lt;span class="c1">#&amp;gt; # timeHour &amp;lt;dttm&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="column-types">Column types
&lt;a href="#column-types">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Like readr, vroom guesses the data types of columns as they are read. readr
simply used the first &lt;code>n&lt;/code> rows of data, vroom uses an improved heuristic of
looking at data throughout the file, which should improve guessing accuracy.
However if the guessing fails it can be necessary to change the type of one or
more columns.&lt;/p>
&lt;p>The available specifications are: (with single letter abbreviations in quotes)&lt;/p>
&lt;ul>
&lt;li>&lt;code>col_logical()&lt;/code> &amp;lsquo;l&amp;rsquo;, containing only &lt;code>T&lt;/code>, &lt;code>F&lt;/code>, &lt;code>TRUE&lt;/code>, &lt;code>FALSE&lt;/code>, &lt;code>1&lt;/code> or &lt;code>0&lt;/code>.&lt;/li>
&lt;li>&lt;code>col_integer()&lt;/code> &amp;lsquo;i&amp;rsquo;, integer values.&lt;/li>
&lt;li>&lt;code>col_double()&lt;/code> &amp;lsquo;d&amp;rsquo;, floating point values.&lt;/li>
&lt;li>&lt;code>col_number()&lt;/code> [n], numbers containing the &lt;code>grouping_mark&lt;/code>&lt;/li>
&lt;li>&lt;code>col_date(format = &amp;quot;&amp;quot;)&lt;/code> [D]: with the locale&amp;rsquo;s &lt;code>date_format&lt;/code>.&lt;/li>
&lt;li>&lt;code>col_time(format = &amp;quot;&amp;quot;)&lt;/code> [t]: with the locale&amp;rsquo;s &lt;code>time_format&lt;/code>.&lt;/li>
&lt;li>&lt;code>col_datetime(format = &amp;quot;&amp;quot;)&lt;/code> [T]: ISO8601 date times.&lt;/li>
&lt;li>&lt;code>col_factor(levels, ordered)&lt;/code> &amp;lsquo;f&amp;rsquo;, a fixed set of values.&lt;/li>
&lt;li>&lt;code>col_character()&lt;/code> &amp;lsquo;c&amp;rsquo;, everything else.&lt;/li>
&lt;li>&lt;code>col_skip()&lt;/code> &amp;lsquo;_, -', don&amp;rsquo;t import this column.&lt;/li>
&lt;li>&lt;code>col_guess()&lt;/code> &amp;lsquo;?', parse using the &amp;ldquo;best&amp;rdquo; type based on the input.&lt;/li>
&lt;/ul>
&lt;p>You can tell vroom what columns to use with the &lt;code>col_types()&lt;/code> argument in a number of ways.&lt;/p>
&lt;p>If you only need to override a single column, the most concise way is to use a named vector.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># read the &amp;#39;year&amp;#39; column as an integer&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col_types&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;i&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1"># also skip reading the &amp;#39;time_hour&amp;#39; column&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col_types&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;i&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">time_hour&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;_&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1"># also read the carrier as a factor&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col_types&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;i&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">time_hour&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;_&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">carrier&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;f&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, you can also use the &lt;code>col_*()&lt;/code> functions in a list.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">col_types&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">year&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">col_integer&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">time_hour&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">col_skip&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">carrier&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">col_factor&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is most useful when a column type needs additional information, such as
for categorical data when you know all of the levels of a factor.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vroom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;flights.tsv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">col_types&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">col_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">levels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;EWR&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;JFK&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;LGA&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="speed">Speed
&lt;a href="#speed">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>vroom is fast, but how fast?
We benchmarked vroom using a real-world dataset of taxi-trip data, with
14.7 million rows, 11 columns. It contains a mix of numeric and text data, and has a
total file size of 1.55 GB.&lt;/p>
&lt;pre>&lt;code>#&amp;gt; Observations: 14,776,615
#&amp;gt; Variables: 11
#&amp;gt; $ medallion &amp;lt;chr&amp;gt; &amp;quot;89D227B655E5C82AECF13C3F540D4CF4&amp;quot;, &amp;quot;0BD7C8F5B...
#&amp;gt; $ hack_license &amp;lt;chr&amp;gt; &amp;quot;BA96DE419E711691B9445D6A6307C170&amp;quot;, &amp;quot;9FD8F69F0...
#&amp;gt; $ vendor_id &amp;lt;chr&amp;gt; &amp;quot;CMT&amp;quot;, &amp;quot;CMT&amp;quot;, &amp;quot;CMT&amp;quot;, &amp;quot;CMT&amp;quot;, &amp;quot;CMT&amp;quot;, &amp;quot;CMT&amp;quot;, &amp;quot;CMT...
#&amp;gt; $ pickup_datetime &amp;lt;chr&amp;gt; &amp;quot;2013-01-01 15:11:48&amp;quot;, &amp;quot;2013-01-06 00:18:35&amp;quot;, ...
#&amp;gt; $ payment_type &amp;lt;chr&amp;gt; &amp;quot;CSH&amp;quot;, &amp;quot;CSH&amp;quot;, &amp;quot;CSH&amp;quot;, &amp;quot;CSH&amp;quot;, &amp;quot;CSH&amp;quot;, &amp;quot;CSH&amp;quot;, &amp;quot;CSH...
#&amp;gt; $ fare_amount &amp;lt;dbl&amp;gt; 6.5, 6.0, 5.5, 5.0, 9.5, 9.5, 6.0, 34.0, 5.5, ...
#&amp;gt; $ surcharge &amp;lt;dbl&amp;gt; 0.0, 0.5, 1.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0, 0...
#&amp;gt; $ mta_tax &amp;lt;dbl&amp;gt; 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0...
#&amp;gt; $ tip_amount &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...
#&amp;gt; $ tolls_amount &amp;lt;dbl&amp;gt; 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.8, 0.0, 0...
#&amp;gt; $ total_amount &amp;lt;dbl&amp;gt; 7.0, 7.0, 7.0, 6.0, 10.5, 10.0, 6.5, 39.3, 7.0...
&lt;/code>&lt;/pre>
&lt;p>We performed a series of simple manipulations with each approach.&lt;/p>
&lt;ul>
&lt;li>Reading the data&lt;/li>
&lt;li>&lt;code>print()&lt;/code>&lt;/li>
&lt;li>&lt;code>head()&lt;/code>&lt;/li>
&lt;li>&lt;code>tail()&lt;/code>&lt;/li>
&lt;li>Sampling 100 random rows&lt;/li>
&lt;li>Filtering for &amp;ldquo;UNK&amp;rdquo; payment, this is 6434 rows (0.0435% of total).&lt;/li>
&lt;li>Summarizing the mean fare amount per payment type.&lt;/li>
&lt;/ul>
&lt;style>
td,th {
padding: 0.4em;
}
thead {
border-top: 1px solid #aaa;
border-bottom: 1px solid #aaa;
}
table {
margin-left: auto;
margin-right: auto;
border-bottom: 1px solid #aaa;
}
&lt;/style>
&lt;p>&lt;img src="https://www.tidyverse.org/articles/2019-05-vroom-1-0-0_files/figure-html/benchmark_plot-1.png" width="960" />&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="right">package&lt;/th>
&lt;th align="right">read&lt;/th>
&lt;th align="right">print&lt;/th>
&lt;th align="right">head&lt;/th>
&lt;th align="right">tail&lt;/th>
&lt;th align="right">sample&lt;/th>
&lt;th align="right">filter&lt;/th>
&lt;th align="right">summarise&lt;/th>
&lt;th align="right">total&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="right">read.delim&lt;/td>
&lt;td align="right">1m 21.5s&lt;/td>
&lt;td align="right">6ms&lt;/td>
&lt;td align="right">1ms&lt;/td>
&lt;td align="right">1ms&lt;/td>
&lt;td align="right">1ms&lt;/td>
&lt;td align="right">315ms&lt;/td>
&lt;td align="right">764ms&lt;/td>
&lt;td align="right">1m 22.6s&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="right">readr&lt;/td>
&lt;td align="right">33.1s&lt;/td>
&lt;td align="right">90ms&lt;/td>
&lt;td align="right">1ms&lt;/td>
&lt;td align="right">1ms&lt;/td>
&lt;td align="right">2ms&lt;/td>
&lt;td align="right">202ms&lt;/td>
&lt;td align="right">825ms&lt;/td>
&lt;td align="right">34.2s&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="right">data.table&lt;/td>
&lt;td align="right">15.7s&lt;/td>
&lt;td align="right">13ms&lt;/td>
&lt;td align="right">1ms&lt;/td>
&lt;td align="right">1ms&lt;/td>
&lt;td align="right">1ms&lt;/td>
&lt;td align="right">129ms&lt;/td>
&lt;td align="right">394ms&lt;/td>
&lt;td align="right">16.3s&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="right">vroom&lt;/td>
&lt;td align="right">3.6s&lt;/td>
&lt;td align="right">86ms&lt;/td>
&lt;td align="right">1ms&lt;/td>
&lt;td align="right">1ms&lt;/td>
&lt;td align="right">2ms&lt;/td>
&lt;td align="right">1.4s&lt;/td>
&lt;td align="right">1.9s&lt;/td>
&lt;td align="right">7s&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br/>
&lt;p>Some things to note in the results. The initial reading is much faster in vroom
than any other method, and most of the manipulations, such as &lt;code>print()&lt;/code>,
&lt;code>head()&lt;/code>, &lt;code>tail()&lt;/code> and &lt;code>sample()&lt;/code> are equally fast, so fast they can&amp;rsquo;t be seen
in the plots. However because the character data is read lazily, operations such
as &lt;code>filter&lt;/code> and &lt;code>summarise&lt;/code>, which need character values, require additional
time. However, this cost will only occur once. After the values have been read,
they will be stored in memory, and subsequent accesses will be equivalent to
other packages.&lt;/p>
&lt;p>For more details on how the benchmarks were performed and additional benchmarks
with other types of data see the
&lt;a href="http://vroom.r-lib.org/articles/benchmarks.html" target="_blank" rel="noopener">benchmark
vignette&lt;/a>.&lt;/p>
&lt;h2 id="feedback-welcome">Feedback welcome!
&lt;a href="#feedback-welcome">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>vroom is a new package and, like any newborn, may fall down a few times before
learning to run. If you do run into a bug or think of a new feature that
would work well in vroom please
&lt;a href="https://github.com/r-lib/vroom/issues" target="_blank" rel="noopener">open an
issue&lt;/a> so we can discuss it!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Even though this is a new release, a number of people have been testing out
pre-release versions on their datasets and opening issues, which has been a
huge help in making the package more robust.&lt;/p>
&lt;p>A big thanks to
&lt;a href="https://github.com/alex-gable" target="_blank" rel="noopener">@alex-gable&lt;/a>,
&lt;a href="https://github.com/andrie" target="_blank" rel="noopener">@andrie&lt;/a>,
&lt;a href="https://github.com/dan-reznik" target="_blank" rel="noopener">@dan-reznik&lt;/a>,
&lt;a href="https://github.com/Evgeniy-" target="_blank" rel="noopener">@Evgeniy-&lt;/a>,
&lt;a href="https://github.com/ginolhac" target="_blank" rel="noopener">@ginolhac&lt;/a>,
&lt;a href="https://github.com/ibarraespinosa" target="_blank" rel="noopener">@ibarraespinosa&lt;/a>,
&lt;a href="https://github.com/KasperSkytte" target="_blank" rel="noopener">@KasperSkytte&lt;/a>,
&lt;a href="https://github.com/ldecicco-USGS" target="_blank" rel="noopener">@ldecicco-USGS&lt;/a>,
&lt;a href="https://github.com/LuisQ95" target="_blank" rel="noopener">@LuisQ95&lt;/a>,
&lt;a href="https://github.com/matthieu-haudiquet" target="_blank" rel="noopener">@matthieu-haudiquet&lt;/a>,
&lt;a href="https://github.com/md0u80c9" target="_blank" rel="noopener">@md0u80c9&lt;/a>,
&lt;a href="https://github.com/mkiang" target="_blank" rel="noopener">@mkiang&lt;/a>,
&lt;a href="https://github.com/R3myG" target="_blank" rel="noopener">@R3myG&lt;/a>,
&lt;a href="https://github.com/randomgambit" target="_blank" rel="noopener">@randomgambit&lt;/a>,
&lt;a href="https://github.com/slowkow" target="_blank" rel="noopener">@slowkow&lt;/a>,
&lt;a href="https://github.com/telaroz" target="_blank" rel="noopener">@telaroz&lt;/a>,
&lt;a href="https://github.com/thierrygosselin" target="_blank" rel="noopener">@thierrygosselin&lt;/a>, and
&lt;a href="https://github.com/xiaodaigh" target="_blank" rel="noopener">@xiaodaigh&lt;/a>!&lt;/p>
&lt;p>Also this package would not be possible without the following significant
contributions to the R ecosystem.&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://twitter.com/groundwalkergmb" target="_blank" rel="noopener">Gabe Becker&lt;/a>,
&lt;a href="https://stat.uiowa.edu/~luke/" target="_blank" rel="noopener">Luke
Tierney&lt;/a> and
&lt;a href="https://github.com/kalibera" target="_blank" rel="noopener">Tomas
Kalibera&lt;/a> for conceiving, implementing
and maintaining the
&lt;a href="https://svn.r-project.org/R/branches/ALTREP/ALTREP.html" target="_blank" rel="noopener">Altrep
framework&lt;/a> used extensively in vroom.&lt;/li>
&lt;li>
&lt;a href="https://twitter.com/romain_francois" target="_blank" rel="noopener">Romain François&lt;/a>, whose
&lt;a href="https://purrple.cat/blog/2018/10/14/altrep-and-cpp/" target="_blank" rel="noopener">Altrepisode&lt;/a>
package and
&lt;a href="https://purrple.cat/blog/2018/10/14/altrep-and-cpp/" target="_blank" rel="noopener">related
blog-posts&lt;/a>
were a great guide for creating new Altrep objects in C++.&lt;/li>
&lt;li>
&lt;a href="https://twitter.com/mattdowle" target="_blank" rel="noopener">Matt Dowle&lt;/a> and the rest of the
&lt;a href="https://github.com/Rdatatable" target="_blank" rel="noopener">Rdatatable&lt;/a> team,
&lt;code>data.table::fread()&lt;/code> is blazing fast and a great motivator to think about
how to read delimited files fast!&lt;/li>
&lt;/ul></description></item><item><title>testthat 2.1.0</title><link>https://www.tidyverse.org/blog/2019/04/testthat-2-1-0/</link><pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/04/testthat-2-1-0/</guid><description>&lt;html>
&lt;style>
h2 code {
font-size: 1em;
}
&lt;/style>
&lt;/html>
&lt;p>We&amp;rsquo;re happy to announce that
&lt;a href="http://testthat.r-lib.org" target="_blank" rel="noopener">testthat 2.1.0&lt;/a> is now available on CRAN! testthat makes it easy to turn your existing informal tests into formal automated tests that you can rerun quickly and easily. testthat is the most popular unit-testing package for R, and is used by over 4,000 CRAN and Bioconductor packages. You can learn more about unit testing at &lt;a href="https://r-pkgs.org/tests.html">https://r-pkgs.org/tests.html&lt;/a>.&lt;/p>
&lt;p>Install the latest version of testthat with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;testthat&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>testthat 2.1.0 mostly contains a large number of minor improvements and bug fixes, as described in the
&lt;a href="https://github.com/r-lib/testthat/releases/tag/v2.1.0" target="_blank" rel="noopener">release notes&lt;/a>. This blog post discusses the bigger improvements:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>context()&lt;/code>s are now optional.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Two new expectations: &lt;code>expect_invisible()&lt;/code> and &lt;code>expect_mapequal()&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="context-is-now-optional">&lt;code>context()&lt;/code> is now optional
&lt;a href="#context-is-now-optional">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The biggest change in this version is that &lt;code>context()&lt;/code> is now optional, and in fact we recommend that you no longer use it. &lt;code>context()&lt;/code> made sense with the original design of testthat, which supported a very flexible mapping between your R code and the corresponding tests.&lt;/p>
&lt;p>Now, however, we have a stronger recommendation: organise the files in &lt;code>tests/testthat&lt;/code> in the same way that you organise the files in &lt;code>R/&lt;/code>, so that tests for code in &lt;code>R/my-file.R&lt;/code> live in &lt;code>tests/testthat-my-file.R&lt;/code>. (This begs the question of how you should organise your &lt;code>R/&lt;/code> directory, which we don&amp;rsquo;t have a good answer for yet, but at least you only need to struggle to organise one directory). With this convention, &lt;code>context()&lt;/code> tends to end up duplicating the file name, causing needless hassle if you reorganise your code structure.&lt;/p>
&lt;p>The convention that every file in &lt;code>R/&lt;/code> has a corresponding file in &lt;code>tests/testthat&lt;/code> (and vice versa) is used by two other helpful functions:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>usethis::use_test()&lt;/code>, which, if you use RStudio, will automatically
create and open a test file corresponding to the R file in the right
location. (If you&amp;rsquo;ve written the test file first, you can instead use
&lt;code>usethis::use_r()&lt;/code>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>devtools::test_coverage_file()&lt;/code>: again, if you use RStudio, this will look
at the active file, run just the tests for that file, and report the coverage
results. This is a great way to rapidly iterate to ensure that you have
tested all the branches of new code.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="new-expectations">New expectations
&lt;a href="#new-expectations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testthat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This version of testthat introduces two important new expectations:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>expect_invisible()&lt;/code> makes it easier to check if a function returns its
results invisibly. This is useful if you are testing a function that is
called primarily for its side-effects, which should (as a general rule)
invisibly return its first argument.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">greet&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">cat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;!\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sep&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">invisible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">expect_invisible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">greet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hadley&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Hello Hadley!&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Hadley&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For symmetry, &lt;code>expect_visible()&lt;/code> is also available, but you would not
generally test for it, as visible return values are the default.
Only use it if you find a bug related to visibilty and want to
programmatically verify that it&amp;rsquo;s fixed.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New &lt;code>expect_mapequal(x, y)&lt;/code> checks that &lt;code>x&lt;/code> and &lt;code>y&lt;/code> have the same names,
and the same value associated with each name (i.e. it compares the values
of the vector standardising the order of the names).&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">exp&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">expect_mapequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">exp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">expect_mapequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">exp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">expect_mapequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">exp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Names absent from `object`: &amp;#34;a&amp;#34;,&lt;/span>
&lt;span class="nf">expect_mapequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">exp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: act$val[exp_nms] not equal to exp$val.&lt;/span>
&lt;span class="c1">#&amp;gt; Component &amp;#34;a&amp;#34;: Mean relative difference: 0.6666667&lt;/span>
&lt;span class="nf">expect_mapequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">exp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error: Names absent from `expected`: &amp;#34;c&amp;#34;,&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>expect_mapequal()&lt;/code> is related to &lt;code>expect_setequal()&lt;/code>, which compares
values, ignoring order and count:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expect_setequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">expect_setequal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all 51 people who helped contribute to this release by reporting bugs, suggesting new features, or creating pull requests:
&lt;a href="https://github.com/aabor" target="_blank" rel="noopener">@aabor&lt;/a>,
&lt;a href="https://github.com/AEBilgrau" target="_blank" rel="noopener">@AEBilgrau&lt;/a>,
&lt;a href="https://github.com/antaldaniel" target="_blank" rel="noopener">@antaldaniel&lt;/a>,
&lt;a href="https://github.com/bflammers" target="_blank" rel="noopener">@bflammers&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/BillDunlap" target="_blank" rel="noopener">@BillDunlap&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/burchill" target="_blank" rel="noopener">@burchill&lt;/a>,
&lt;a href="https://github.com/chasemc" target="_blank" rel="noopener">@chasemc&lt;/a>,
&lt;a href="https://github.com/colearendt" target="_blank" rel="noopener">@colearendt&lt;/a>,
&lt;a href="https://github.com/comicfans" target="_blank" rel="noopener">@comicfans&lt;/a>,
&lt;a href="https://github.com/dmenne" target="_blank" rel="noopener">@dmenne&lt;/a>,
&lt;a href="https://github.com/euklid321" target="_blank" rel="noopener">@euklid321&lt;/a>,
&lt;a href="https://github.com/flying-sheep" target="_blank" rel="noopener">@flying-sheep&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gabrielodom" target="_blank" rel="noopener">@gabrielodom&lt;/a>,
&lt;a href="https://github.com/gvwilson" target="_blank" rel="noopener">@gvwilson&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/harvey131" target="_blank" rel="noopener">@harvey131&lt;/a>,
&lt;a href="https://github.com/Hong-Revo" target="_blank" rel="noopener">@Hong-Revo&lt;/a>,
&lt;a href="https://github.com/HughParsonage" target="_blank" rel="noopener">@HughParsonage&lt;/a>,
&lt;a href="https://github.com/jackhannah95" target="_blank" rel="noopener">@jackhannah95&lt;/a>,
&lt;a href="https://github.com/jackwasey" target="_blank" rel="noopener">@jackwasey&lt;/a>,
&lt;a href="https://github.com/jarodmeng" target="_blank" rel="noopener">@jarodmeng&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jsilve24" target="_blank" rel="noopener">@jsilve24&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/kforner" target="_blank" rel="noopener">@kforner&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/markvanderloo" target="_blank" rel="noopener">@markvanderloo&lt;/a>,
&lt;a href="https://github.com/masaha03" target="_blank" rel="noopener">@masaha03&lt;/a>,
&lt;a href="https://github.com/mb706" target="_blank" rel="noopener">@mb706&lt;/a>,
&lt;a href="https://github.com/mbjoseph" target="_blank" rel="noopener">@mbjoseph&lt;/a>,
&lt;a href="https://github.com/merliseclyde" target="_blank" rel="noopener">@merliseclyde&lt;/a>,
&lt;a href="https://github.com/mikejiang" target="_blank" rel="noopener">@mikejiang&lt;/a>,
&lt;a href="https://github.com/Mooskey" target="_blank" rel="noopener">@Mooskey&lt;/a>,
&lt;a href="https://github.com/olsgaard" target="_blank" rel="noopener">@olsgaard&lt;/a>,
&lt;a href="https://github.com/patr1ckm" target="_blank" rel="noopener">@patr1ckm&lt;/a>,
&lt;a href="https://github.com/ramiromagno" target="_blank" rel="noopener">@ramiromagno&lt;/a>,
&lt;a href="https://github.com/randy3k" target="_blank" rel="noopener">@randy3k&lt;/a>,
&lt;a href="https://github.com/renkun-ken" target="_blank" rel="noopener">@renkun-ken&lt;/a>,
&lt;a href="https://github.com/smbache" target="_blank" rel="noopener">@smbache&lt;/a>,
&lt;a href="https://github.com/stevecondylios" target="_blank" rel="noopener">@stevecondylios&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/tramontini" target="_blank" rel="noopener">@tramontini&lt;/a>,
&lt;a href="https://github.com/wch" target="_blank" rel="noopener">@wch&lt;/a>,
&lt;a href="https://github.com/wsherwin" target="_blank" rel="noopener">@wsherwin&lt;/a>,
&lt;a href="https://github.com/Yuri-M-Dias" target="_blank" rel="noopener">@Yuri-M-Dias&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>, and
&lt;a href="https://github.com/zappingseb" target="_blank" rel="noopener">@zappingseb&lt;/a>.&lt;/p></description></item><item><title>usethis 1.5.0</title><link>https://www.tidyverse.org/blog/2019/04/usethis-1.5.0/</link><pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/04/usethis-1.5.0/</guid><description>&lt;p>We&amp;rsquo;re gratified to announce that
&lt;a href="https://usethis.r-lib.org" target="_blank" rel="noopener">usethis&lt;/a> 1.5.0 is now available on CRAN. Learn more about usethis at &lt;a href="https://usethis.r-lib.org">https://usethis.r-lib.org&lt;/a>. Detailed notes are always in the
&lt;a href="https://usethis.r-lib.org/news/index.html" target="_blank" rel="noopener">change log&lt;/a>.&lt;/p>
&lt;p>usethis is a package that facilitates interactive workflows for R project creation and development. It has broad coverage of package development tasks, but many of its functions are also applicable to non-package projects.&lt;/p>
&lt;p>usethis is part of the package development toolkit whose main public face is the venerable
&lt;a href="https://devtools.r-lib.org" target="_blank" rel="noopener">devtools&lt;/a> package. When devtools went through its
&lt;a href="https://www.tidyverse.org/articles/2018/10/devtools-2-0-0/#conscious-uncoupling" target="_blank" rel="noopener">conscious uncoupling&lt;/a>, the functionality related to package/project setup landed in usethis.&lt;/p>
&lt;p>Install the latest release of usethis like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;usethis&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>devtools exposes all of usethis&amp;rsquo;s functions and most users should just use &lt;code>library(devtools)&lt;/code> to make usethis available in the session.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">devtools&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It is also, of course, possible to just attach usethis specifically.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">usethis&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>usethis::use_devtools()&lt;/code> can help you put a code snippet in your &lt;code>.Rprofile&lt;/code> to do this automatically at startup for interactive sessions.&lt;/p>
&lt;h2 id="overview-of-recent-developments">Overview of recent developments
&lt;a href="#overview-of-recent-developments">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We last blogged about usethis in February 2018, at the
&lt;a href="https://www.tidyverse.org/articles/2018/02/usethis-1-3-0/" target="_blank" rel="noopener">release of v1.3.0&lt;/a>, so there&amp;rsquo;s a lot to catch up on! We&amp;rsquo;ll cover cumulative developments in v1.4.0 and v1.5.0. The current release also marks the passing of the maintainership torch from Hadley Wickham to Jenny Bryan.&lt;/p>
&lt;p>Main themes:&lt;/p>
&lt;ul>
&lt;li>Improve support for the Git/GitHub aspects of project initiation and development.&lt;/li>
&lt;li>Make it possible for others to extend usethis, i.e. to implement specialized workflows or organization-specific standards.&lt;/li>
&lt;li>Implement what the tidyverse/r-lib team regards as best practices, often in functions that feature the word &amp;ldquo;tidy&amp;rdquo;. These are mostly for our use and are, honestly, occasionally aspirational, but others may find it interesting or useful.&lt;/li>
&lt;li>Embrace the
&lt;a href="https://fs.r-lib.org" target="_blank" rel="noopener">fs package&lt;/a> internally for everything related to filepath management. We&amp;rsquo;re also gradually adding better tooling for programmatic management of specific files or for specific parts of a file, such as the badge section of &lt;code>README.Rmd&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Below we highlight specific changes or new features that are of special interest to users. Again, detailed notes are in the
&lt;a href="https://usethis.r-lib.org/news/index.html" target="_blank" rel="noopener">change log&lt;/a>.&lt;/p>
&lt;h2 id="options-to-set-in-rprofile">Options to set in &lt;code>.Rprofile&lt;/code>
&lt;a href="#options-to-set-in-rprofile">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>usethis consults certain options when it creates a new package and, if found, it favors this info over built-in defaults when populating the DESCRIPTION fields. devtools has long had this feature, but it&amp;rsquo;s a good time to open your &lt;code>.Rprofile&lt;/code> (maybe via &lt;code>usethis::edit_r_profile()&lt;/code>) and refresh your settings to look more like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">usethis.full_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Jane Doe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">usethis.description&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">`Authors@R`&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#39;person(&amp;#34;Jane&amp;#34;, &amp;#34;Doe&amp;#34;, email = &amp;#34;jane@example.com&amp;#34;, role = c(&amp;#34;aut&amp;#34;, &amp;#34;cre&amp;#34;),
&lt;/span>&lt;span class="s"> comment = c(ORCID = &amp;#34;YOUR-ORCID-ID&amp;#34;))&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">License&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;MIT + file LICENSE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">Version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;0.0.0.9000&amp;#34;&lt;/span>
&lt;span class="p">),&lt;/span>
&lt;span class="n">usethis.protocol&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;ssh&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note the &lt;code>usethis.*&lt;/code> name prefixes and that field-specific options like &lt;code>devtools.desc.author&lt;/code> and &lt;code>devtools.desc.license&lt;/code> have been replaced with a single named list, &lt;code>usethis.description&lt;/code>. If you are firmly an &amp;ldquo;SSH person&amp;rdquo; or an &amp;ldquo;HTTPS person&amp;rdquo;, in terms of your preferred Git transport protocol, this is a great place to express that. It affects remote URLs created by usethis.&lt;/p>
&lt;p>More setup tips can be found in the
&lt;a href="https://usethis.r-lib.org/articles/articles/usethis-setup.html" target="_blank" rel="noopener">usethis setup article&lt;/a>. For example, you will unlock a lot of usethis&amp;rsquo;s GitHub functionality by setting up a personal access token. &lt;code>usethis::browse_github_token()&lt;/code> walks you through that process.&lt;/p>
&lt;h2 id="git-and-github">Git and GitHub
&lt;a href="#git-and-github">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The &lt;code>git_sitrep()&lt;/code> function gives a &lt;strong>rep&lt;/strong>ort on your current &lt;strong>sit&lt;/strong>uation as a Git and GitHub user and specifics on the current repo&amp;rsquo;s remotes and branches. Here&amp;rsquo;s an example where Jane Doe is working in a local copy of OWNER&amp;rsquo;s package, maybe preparing to contribute a bug fix or new feature:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">usethis&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">git_sitrep&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; Git user&lt;/span>
&lt;span class="c1">#&amp;gt; * Name: &amp;#39;Jane Doe&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; * Email: &amp;#39;jane.doe@example.com&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; * Vaccinated: TRUE&lt;/span>
&lt;span class="c1">#&amp;gt; usethis + git2r&lt;/span>
&lt;span class="c1">#&amp;gt; * Default usethis protocol: &amp;#39;ssh&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; * git2r supports SSH: TRUE&lt;/span>
&lt;span class="c1">#&amp;gt; * Credentials: &amp;#39;&amp;lt;usethis + git2r default behaviour&amp;gt;&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; GitHub&lt;/span>
&lt;span class="c1">#&amp;gt; * Personal access token: &amp;#39;&amp;lt;found in env var&amp;gt;&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; * User: &amp;#39;janedoe&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; * Name: &amp;#39;Jane Doe&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; Repo&lt;/span>
&lt;span class="c1">#&amp;gt; * Path: &amp;#39;/Users/jane/tmp/REPO/.git&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; * Local branch -&amp;gt; remote tracking branch: &amp;#39;master&amp;#39; -&amp;gt; &amp;#39;origin/master&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; GitHub pull request readiness&lt;/span>
&lt;span class="c1">#&amp;gt; * origin: janedoe/REPO, can push, forked from OWNER/REPO&lt;/span>
&lt;span class="c1">#&amp;gt; * upstream: OWNER/REPO, read only&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>git_vaccinate()&lt;/code> makes sure your global, i.e. user-level, gitignore file contains entries relevant to useRs. You are less likely to push confidential or unnecessary and semi-embarrassing information to GitHub if you gitignore files like &lt;code>.Rhistory&lt;/code> and &lt;code>.Rdata&lt;/code>.&lt;/p>
&lt;p>Several other new functions are mostly for internal use but can also be used for troubleshooting and taking greater control of the Git side of usethis: &lt;code>git_remotes()&lt;/code>, &lt;code>use_git_remote()&lt;/code>, &lt;code>git_protocol()&lt;/code>, &lt;code>use_git_protocol()&lt;/code>, &lt;code>git_credentials()&lt;/code>, &lt;code>use_git_credentials()&lt;/code>.&lt;/p>
&lt;p>Two existing functions keep improving and deserve a mention:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>create_from_github(&amp;quot;OWNER/REPO)&lt;/code> creates a local project from a GitHub repository. It&amp;rsquo;s pretty smart about when it should clone vs fork-and-clone (or you can specify this) and, when it forks, it sets up the &lt;code>origin&lt;/code> and &lt;code>upstream&lt;/code> remotes correctly.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">usethis&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">create_from_github&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;OWNER/REPO&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">protocol&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;ssh&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ Creating &amp;#39;/Users/jane/rrr/REPO/&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ Forking &amp;#39;OWNER/REPO&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ Cloning repo from &amp;#39;git@github.com:janedoe/REPO.git&amp;#39; into &amp;#39;/Users/jane/rrr/REPO&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ Setting active project to &amp;#39;/Users/jane/rrr/REPO&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ Adding &amp;#39;upstream&amp;#39; remote: &amp;#39;git@github.com:OWNER/REPO.git&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; ✔ Pulling changes from GitHub source repo &amp;#39;upstream/master&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>use_github()&lt;/code> connects an existing local repo to GitHub &lt;em>post hoc&lt;/em>. It is more robust and, when it fails, it does so early and with actionable messages about what you can fix.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>A new experimental family of &lt;code>pr_*()&lt;/code> functions makes GitHub pull requests (PR) easier, both for maintainers and contributors. We&amp;rsquo;re quite excited about these, as we handle an extraordinary number of pull requests across the tidyverse, r-lib, and tidymodels organizations. For maintainers, &lt;code>pr_fetch(&amp;lt;PR_NUMBER&amp;gt;)&lt;/code> allows you to check out a PR locally, explore it, check/test it, or even fix or extend it. &lt;code>pr_push()&lt;/code>
&lt;a href="https://help.github.com/en/articles/committing-changes-to-a-pull-request-branch-created-from-a-fork" target="_blank" rel="noopener">pushes &lt;em>back into the actual PR&lt;/em>&lt;/a>, where it can now be merged or receive more work from the original author. For contributors, &lt;code>pr_init()&lt;/code> and &lt;code>pr_push()&lt;/code> help to initiate a PR. In all cases, &lt;code>pr_finish()&lt;/code> does the necessary local clean up when the PR is no longer in play.&lt;/p>
&lt;h2 id="extending-usethis">Extending usethis
&lt;a href="#extending-usethis">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;ve made usethis easier for others to wrap and extend:&lt;/p>
&lt;ul>
&lt;li>usethis is very chatty and this is now under the control of the option &lt;code>usethis.quiet&lt;/code>. This makes it easier for a wrapper to muffle usethis&amp;rsquo;s messaging or to temporarily toggle it with functions like &lt;code>withr::with_options()&lt;/code> or &lt;code>withr::local_options()&lt;/code>.&lt;/li>
&lt;li>Project-related helpers &lt;code>proj_path()&lt;/code>, &lt;code>with_project()&lt;/code>, &lt;code>local_project()&lt;/code>, and &lt;code>proj_activate()&lt;/code> are exported.&lt;/li>
&lt;li>File editing helpers &lt;code>edit_file()&lt;/code>, &lt;code>write_over()&lt;/code>, and &lt;code>write_union()&lt;/code> are exported.&lt;/li>
&lt;li>&lt;code>use_template()&lt;/code> can use a template file stored in any package, not just usethis.&lt;/li>
&lt;/ul>
&lt;p>We&amp;rsquo;ve also exported the &lt;code>ui_*()&lt;/code> functions that implement usethis&amp;rsquo;s messaging, conditions, and interactive menus. This is in response to repeated community requests. These functions benefit greatly from the
&lt;a href="https://glue.tidyverse.org" target="_blank" rel="noopener">glue&lt;/a> and
&lt;a href="https://github.com/r-lib/crayon#readme" target="_blank" rel="noopener">crayon&lt;/a> packages to provide nifty features like string interpolation and formatting.&lt;/p>
&lt;p>There are inline styles (&lt;code>ui_field()&lt;/code>, &lt;code>ui_value()&lt;/code>, &lt;code>ui_path()&lt;/code>, &lt;code>ui_code()&lt;/code>), which can be used within the block styles (&lt;code>ui_line()&lt;/code>, &lt;code>ui_done()&lt;/code>, &lt;code>ui_todo()&lt;/code>, &lt;code>ui_oops()&lt;/code>, &lt;code>ui_info()&lt;/code>). Some example usage (flanking newlines added for readability):&lt;/p>
&lt;p>&lt;img src="https://www.tidyverse.org/images/usethis-1.5.0/ui-done-todo-oops-info.png"/>&lt;/p>
&lt;p>&lt;code>ui_stop()&lt;/code> and &lt;code>ui_warn()&lt;/code> raise the associated condition, but with the same features for the message:&lt;/p>
&lt;p>&lt;img src="https://www.tidyverse.org/images/usethis-1.5.0/ui-stop-warn.png"/>&lt;/p>
&lt;p>Finally, &lt;code>ui_yeah()&lt;/code> and &lt;code>ui_nope()&lt;/code> facilitate control flow based on user input:&lt;/p>
&lt;p>&lt;img src="https://www.tidyverse.org/images/usethis-1.5.0/ui-nope-yeah.png"/>&lt;/p>
&lt;p>These functions may ultimately move to a more appropriate home, so we can use them to create a more consistent UI across a broad set of tidyverse, r-lib, and tidymodels packages.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;!-- use_tidy_thanks(from = "v1.3.0", to = "v1.5.0") -->
&lt;p>We give a tremendous thanks to the 108 useRs who contributed to the v1.4.0 and v1.5.0 releases, especially those who joined us at the inaugural
&lt;a href="https://www.tidyverse.org/articles/2018/11/tidyverse-developer-day-2019/" target="_blank" rel="noopener">Tidyverse Developer Day&lt;/a> following
&lt;a href="https://www.rstudio.com/conference/" target="_blank" rel="noopener">rstudio::conf 2019&lt;/a>:&lt;/p>
&lt;p>
&lt;a href="https://github.com/Aariq" target="_blank" rel="noopener">@Aariq&lt;/a>,
&lt;a href="https://github.com/adam-gruer" target="_blank" rel="noopener">@adam-gruer&lt;/a>,
&lt;a href="https://github.com/akgold" target="_blank" rel="noopener">@akgold&lt;/a>,
&lt;a href="https://github.com/alandipert" target="_blank" rel="noopener">@alandipert&lt;/a>,
&lt;a href="https://github.com/alexpghayes" target="_blank" rel="noopener">@alexpghayes&lt;/a>,
&lt;a href="https://github.com/andrie" target="_blank" rel="noopener">@andrie&lt;/a>,
&lt;a href="https://github.com/angela-li" target="_blank" rel="noopener">@angela-li&lt;/a>,
&lt;a href="https://github.com/apreshill" target="_blank" rel="noopener">@apreshill&lt;/a>,
&lt;a href="https://github.com/atheriel" target="_blank" rel="noopener">@atheriel&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/beanumber" target="_blank" rel="noopener">@beanumber&lt;/a>,
&lt;a href="https://github.com/behrman" target="_blank" rel="noopener">@behrman&lt;/a>,
&lt;a href="https://github.com/benmarwick" target="_blank" rel="noopener">@benmarwick&lt;/a>,
&lt;a href="https://github.com/bestdan" target="_blank" rel="noopener">@bestdan&lt;/a>,
&lt;a href="https://github.com/bfgray3" target="_blank" rel="noopener">@bfgray3&lt;/a>,
&lt;a href="https://github.com/boshek" target="_blank" rel="noopener">@boshek&lt;/a>,
&lt;a href="https://github.com/cboettig" target="_blank" rel="noopener">@cboettig&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/chris-billingham" target="_blank" rel="noopener">@chris-billingham&lt;/a>,
&lt;a href="https://github.com/Chris-Engelhardt" target="_blank" rel="noopener">@Chris-Engelhardt&lt;/a>,
&lt;a href="https://github.com/chris-prener" target="_blank" rel="noopener">@chris-prener&lt;/a>,
&lt;a href="https://github.com/coatless" target="_blank" rel="noopener">@coatless&lt;/a>,
&lt;a href="https://github.com/colearendt" target="_blank" rel="noopener">@colearendt&lt;/a>,
&lt;a href="https://github.com/cwickham" target="_blank" rel="noopener">@cwickham&lt;/a>,
&lt;a href="https://github.com/dirkschumacher" target="_blank" rel="noopener">@dirkschumacher&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/dragosmg" target="_blank" rel="noopener">@dragosmg&lt;/a>,
&lt;a href="https://github.com/duckmayr" target="_blank" rel="noopener">@duckmayr&lt;/a>,
&lt;a href="https://github.com/echasnovski" target="_blank" rel="noopener">@echasnovski&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/erictleung" target="_blank" rel="noopener">@erictleung&lt;/a>,
&lt;a href="https://github.com/etiennebr" target="_blank" rel="noopener">@etiennebr&lt;/a>,
&lt;a href="https://github.com/Fazendaaa" target="_blank" rel="noopener">@Fazendaaa&lt;/a>,
&lt;a href="https://github.com/friendly" target="_blank" rel="noopener">@friendly&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gadenbuie" target="_blank" rel="noopener">@gadenbuie&lt;/a>,
&lt;a href="https://github.com/GregorDeCillia" target="_blank" rel="noopener">@GregorDeCillia&lt;/a>,
&lt;a href="https://github.com/GShotwell" target="_blank" rel="noopener">@GShotwell&lt;/a>,
&lt;a href="https://github.com/gvelasq" target="_blank" rel="noopener">@gvelasq&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hafen" target="_blank" rel="noopener">@hafen&lt;/a>,
&lt;a href="https://github.com/HanjoStudy" target="_blank" rel="noopener">@HanjoStudy&lt;/a>,
&lt;a href="https://github.com/haozhu233" target="_blank" rel="noopener">@haozhu233&lt;/a>,
&lt;a href="https://github.com/heavywatal" target="_blank" rel="noopener">@heavywatal&lt;/a>,
&lt;a href="https://github.com/ijlyttle" target="_blank" rel="noopener">@ijlyttle&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jackwasey" target="_blank" rel="noopener">@jackwasey&lt;/a>,
&lt;a href="https://github.com/Jadamso" target="_blank" rel="noopener">@Jadamso&lt;/a>,
&lt;a href="https://github.com/jayhesselberth" target="_blank" rel="noopener">@jayhesselberth&lt;/a>,
&lt;a href="https://github.com/JBGruber" target="_blank" rel="noopener">@JBGruber&lt;/a>,
&lt;a href="https://github.com/jdblischak" target="_blank" rel="noopener">@jdblischak&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jjchern" target="_blank" rel="noopener">@jjchern&lt;/a>,
&lt;a href="https://github.com/jmgirard" target="_blank" rel="noopener">@jmgirard&lt;/a>,
&lt;a href="https://github.com/jonocarroll" target="_blank" rel="noopener">@jonocarroll&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/jooyoungseo" target="_blank" rel="noopener">@jooyoungseo&lt;/a>,
&lt;a href="https://github.com/jsta" target="_blank" rel="noopener">@jsta&lt;/a>,
&lt;a href="https://github.com/jtr13" target="_blank" rel="noopener">@jtr13&lt;/a>,
&lt;a href="https://github.com/karawoo" target="_blank" rel="noopener">@karawoo&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/khailper" target="_blank" rel="noopener">@khailper&lt;/a>,
&lt;a href="https://github.com/kiwiroy" target="_blank" rel="noopener">@kiwiroy&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lbusett" target="_blank" rel="noopener">@lbusett&lt;/a>,
&lt;a href="https://github.com/leonawicz" target="_blank" rel="noopener">@leonawicz&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/llrs" target="_blank" rel="noopener">@llrs&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/lwjohnst86" target="_blank" rel="noopener">@lwjohnst86&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/maislind" target="_blank" rel="noopener">@maislind&lt;/a>,
&lt;a href="https://github.com/markdly" target="_blank" rel="noopener">@markdly&lt;/a>,
&lt;a href="https://github.com/martinjhnhadley" target="_blank" rel="noopener">@martinjhnhadley&lt;/a>,
&lt;a href="https://github.com/MatthieuStigler" target="_blank" rel="noopener">@MatthieuStigler&lt;/a>,
&lt;a href="https://github.com/maurolepore" target="_blank" rel="noopener">@maurolepore&lt;/a>,
&lt;a href="https://github.com/maxheld83" target="_blank" rel="noopener">@maxheld83&lt;/a>,
&lt;a href="https://github.com/mdlincoln" target="_blank" rel="noopener">@mdlincoln&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/MishaCivey" target="_blank" rel="noopener">@MishaCivey&lt;/a>,
&lt;a href="https://github.com/mkearney" target="_blank" rel="noopener">@mkearney&lt;/a>,
&lt;a href="https://github.com/move[bot]" target="_blank" rel="noopener">@move[bot]&lt;/a>,
&lt;a href="https://github.com/muschellij2" target="_blank" rel="noopener">@muschellij2&lt;/a>,
&lt;a href="https://github.com/nbrgraphs" target="_blank" rel="noopener">@nbrgraphs&lt;/a>,
&lt;a href="https://github.com/nijibabulu" target="_blank" rel="noopener">@nijibabulu&lt;/a>,
&lt;a href="https://github.com/njtierney" target="_blank" rel="noopener">@njtierney&lt;/a>,
&lt;a href="https://github.com/noamross" target="_blank" rel="noopener">@noamross&lt;/a>,
&lt;a href="https://github.com/overmar" target="_blank" rel="noopener">@overmar&lt;/a>,
&lt;a href="https://github.com/pat-s" target="_blank" rel="noopener">@pat-s&lt;/a>,
&lt;a href="https://github.com/petermeissner" target="_blank" rel="noopener">@petermeissner&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/ryapric" target="_blank" rel="noopener">@ryapric&lt;/a>,
&lt;a href="https://github.com/sriharitn" target="_blank" rel="noopener">@sriharitn&lt;/a>,
&lt;a href="https://github.com/statquant" target="_blank" rel="noopener">@statquant&lt;/a>,
&lt;a href="https://github.com/statwonk" target="_blank" rel="noopener">@statwonk&lt;/a>,
&lt;a href="https://github.com/strboul" target="_blank" rel="noopener">@strboul&lt;/a>,
&lt;a href="https://github.com/stufield" target="_blank" rel="noopener">@stufield&lt;/a>,
&lt;a href="https://github.com/tgerke" target="_blank" rel="noopener">@tgerke&lt;/a>,
&lt;a href="https://github.com/thomasp85" target="_blank" rel="noopener">@thomasp85&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/trestletech" target="_blank" rel="noopener">@trestletech&lt;/a>,
&lt;a href="https://github.com/VerenaHeld" target="_blank" rel="noopener">@VerenaHeld&lt;/a>,
&lt;a href="https://github.com/VincentGuyader" target="_blank" rel="noopener">@VincentGuyader&lt;/a>,
&lt;a href="https://github.com/vnijs" target="_blank" rel="noopener">@vnijs&lt;/a>,
&lt;a href="https://github.com/webbedfeet" target="_blank" rel="noopener">@webbedfeet&lt;/a>, and
&lt;a href="https://github.com/wlandau" target="_blank" rel="noopener">@wlandau&lt;/a>&lt;/p></description></item><item><title>rlang 0.3.1</title><link>https://www.tidyverse.org/blog/2019/01/rlang-0-3-1/</link><pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/01/rlang-0-3-1/</guid><description>
&lt;p>The patch release 0.3.1 of rlang is now on CRAN! This release polishes the rlang backtraces introduced in 0.3.0. See the &lt;a href="https://rlang.r-lib.org/news/index.html#rlang-0-3-1">NEWS&lt;/a> for the complete set of changes. The main feature is &lt;code>rlang::entrace()&lt;/code>, that you can set as a global error handler to get rlang backtraces for &lt;em>all&lt;/em> errors.&lt;/p>
&lt;div id="numbered-backtraces" class="section level2">
&lt;h2>Numbered backtraces&lt;/h2>
&lt;p>Since rlang 0.3.0, errors thrown with &lt;code>abort()&lt;/code> embed a backtrace that can be consulted by calling &lt;code>last_error()&lt;/code>. We have improved the appearance of the backtraces by numbering its components. Let’s trigger an error within a complicated call stack:&lt;/p>
&lt;pre class="r">&lt;code>f &amp;lt;- function() tryCatch(g(), warning = identity) # Try g()
g &amp;lt;- function() evalq(h()) # Eval h()
h &amp;lt;- function() abort(&amp;quot;Oh no!&amp;quot;) # And fail!
f()&lt;/code>&lt;/pre>
&lt;div class="output">
&lt;pre class="knitr r">#&amp;gt; Error: Oh no!
#&amp;gt; &lt;span style='color: #555555;'>Call `rlang::last_error()` to see a backtrace&lt;/span>&lt;span>
&lt;/span>&lt;/pre>
&lt;/div>
&lt;p>The simplified backtrace shown on error is now numbered:&lt;/p>
&lt;pre class="r">&lt;code>last_error()&lt;/code>&lt;/pre>
&lt;div class="output">
&lt;pre class="knitr r">#&amp;gt; &lt;span style='font-weight: bold;'>&amp;lt;error&amp;gt;&lt;/span>&lt;span>
#&amp;gt; message: &lt;/span>&lt;span style='font-style: italic;'>Oh no!&lt;/span>&lt;span>
#&amp;gt; class: `rlang_error`
#&amp;gt; backtrace:
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 1. &lt;/span>&lt;span style='color: #BB0000;'>global::f()&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 6. &lt;/span>&lt;span style='color: #BB0000;'>global::g()&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 9. &lt;/span>&lt;span style='color: #BB0000;'>global::h()&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>Call `rlang::last_trace()` to see the full backtrace&lt;/span>&lt;span>
&lt;/span>&lt;/pre>
&lt;/div>
&lt;p>Notice how the numbering is not sequential? That’s because &lt;code>last_error()&lt;/code> displays a simplified backtrace by default, that only includes the calls that are most likely to help you figure out a problem. Call the new function &lt;code>last_trace()&lt;/code> to get the full picture:&lt;/p>
&lt;pre class="r">&lt;code>last_trace()&lt;/code>&lt;/pre>
&lt;div class="output">
&lt;pre class="knitr r">#&amp;gt; &lt;span style='color: #555555;'> &lt;/span>&lt;span>█
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 1. &lt;/span>&lt;span>└─global::f()
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 2. &lt;/span>&lt;span> ├─base::tryCatch(g(), warning = identity)
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 3. &lt;/span>&lt;span> │ └─base:::tryCatchList(expr, classes, parentenv, handlers)
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 4. &lt;/span>&lt;span> │ └─base:::tryCatchOne(expr, names, parentenv, handlers[[1L]])
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 5. &lt;/span>&lt;span> │ └─base:::doTryCatch(return(expr), name, parentenv, handler)
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 6. &lt;/span>&lt;span> └─global::g()
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 7. &lt;/span>&lt;span> ├─base::evalq(h())
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 8. &lt;/span>&lt;span> │ └─base::evalq(h())
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 9. &lt;/span>&lt;span> └─global::h()
&lt;/span>&lt;/pre>
&lt;/div>
&lt;p>Note that this full backtrace is the equivalent of &lt;code>base::traceback()&lt;/code>, only structured as a tree, presented in reverse order, and with namespace prefixes. Here is the output of &lt;code>traceback()&lt;/code> for comparison:&lt;/p>
&lt;pre class="output">&lt;code>#&amp;gt; 9: h()
#&amp;gt; 8: evalq(h())
#&amp;gt; 7: evalq(h()) at #1
#&amp;gt; 6: g()
#&amp;gt; 5: doTryCatch(return(expr), name, parentenv, handler)
#&amp;gt; 4: tryCatchOne(expr, names, parentenv, handlers[[1L]])
#&amp;gt; 3: tryCatchList(expr, classes, parentenv, handlers)
#&amp;gt; 2: tryCatch(g(), warning = identity) at #1
#&amp;gt; 1: f()&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="backtraces-for-base-errors" class="section level2">
&lt;h2>Backtraces for base errors!&lt;/h2>
&lt;p>These backtraces are normally only recorded for errors thrown with &lt;code>abort()&lt;/code>. This leaves out errors thrown with &lt;code>stop()&lt;/code>, errors thrown from native C code, and warnings converted to errors. Starting from this release, insert this snippet in your RProfile to enable backtraces for all errors:&lt;/p>
&lt;pre class="r">&lt;code>if (requireNamespace(&amp;quot;rlang&amp;quot;, quietly = TRUE)) {
options(error = rlang::entrace)
}&lt;/code>&lt;/pre>
&lt;p>With this in place, any unhandled error will record an rlang backtrace automatically:&lt;/p>
&lt;pre class="r">&lt;code>h &amp;lt;- function() stop(&amp;quot;stop!&amp;quot;)
f()&lt;/code>&lt;/pre>
&lt;div class="output">
&lt;pre class="knitr r">#&amp;gt; Error: stop!
#&amp;gt; &lt;span style='color: #555555;'>Call `rlang::last_error()` to see a backtrace&lt;/span>&lt;span>
&lt;/span>&lt;/pre>
&lt;/div>
&lt;p>The backtrace can be consulted in the ordinary way:&lt;/p>
&lt;pre class="r">&lt;code>last_error()&lt;/code>&lt;/pre>
&lt;div class="output">
&lt;pre class="knitr r">#&amp;gt; &lt;span style='font-weight: bold;'>&amp;lt;error&amp;gt;&lt;/span>&lt;span>
#&amp;gt; message: &lt;/span>&lt;span style='font-style: italic;'>stop!&lt;/span>&lt;span>
#&amp;gt; class: `rlang_error`
#&amp;gt; backtrace:
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 1. &lt;/span>&lt;span style='color: #BB0000;'>global::f()&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 6. &lt;/span>&lt;span style='color: #BB0000;'>global::g()&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 9. &lt;/span>&lt;span style='color: #BB0000;'>global::h()&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>Call `rlang::last_trace()` to see the full backtrace&lt;/span>&lt;span>
&lt;/span>&lt;/pre>
&lt;/div>
&lt;pre class="r">&lt;code>last_trace()&lt;/code>&lt;/pre>
&lt;div class="output">
&lt;pre class="knitr r">#&amp;gt; &lt;span style='color: #555555;'> &lt;/span>&lt;span>█
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 1. &lt;/span>&lt;span>└─global::f()
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 2. &lt;/span>&lt;span> ├─base::tryCatch(g(), warning = identity)
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 3. &lt;/span>&lt;span> │ └─base:::tryCatchList(expr, classes, parentenv, handlers)
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 4. &lt;/span>&lt;span> │ └─base:::tryCatchOne(expr, names, parentenv, handlers[[1L]])
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 5. &lt;/span>&lt;span> │ └─base:::doTryCatch(return(expr), name, parentenv, handler)
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 6. &lt;/span>&lt;span> └─global::g()
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 7. &lt;/span>&lt;span> ├─base::evalq(h())
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 8. &lt;/span>&lt;span> │ └─base::evalq(h())
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'> 9. &lt;/span>&lt;span> └─global::h()
&lt;/span>&lt;/pre>
&lt;/div>
&lt;p>Both the entracing of base errors and the simplification of backtraces are experimental, but they should already work well enough to be useful in your day-to-day work. We’d love to hear about your feedback!&lt;/p>
&lt;/div></description></item><item><title>lobstr 1.0.0</title><link>https://www.tidyverse.org/blog/2018/12/lobstr/</link><pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/12/lobstr/</guid><description>&lt;p>We&amp;rsquo;re so happy to announce the release of
&lt;a href="https://lobstr.r-lib.org/" target="_blank" rel="noopener">lobstr&lt;/a> on CRAN. lobstr provides tools that allow you to dig into the internal representation and structure of R objects, in a similar vein to
&lt;a href="https://stat.ethz.ch/R-manual/R-devel/library/utils/html/str.html" target="_blank" rel="noopener">&lt;code>str()&lt;/code>&lt;/a>.&lt;/p>
&lt;p>You can install it by running:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;lobstr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="visualising-r-data-structures-with-trees">Visualising R data structures with trees
&lt;a href="#visualising-r-data-structures-with-trees">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="abstract-syntax-trees">Abstract syntax trees
&lt;a href="#abstract-syntax-trees">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>
&lt;a href="https://lobstr.r-lib.org/reference/ast.html" target="_blank" rel="noopener">&lt;code>ast()&lt;/code>&lt;/a> draws the abstract syntax tree (AST) of R expressions. You can learn about these in greater detail in the
&lt;a href="https://adv-r.hadley.nz/expressions.html#abstract-syntax-trees" target="_blank" rel="noopener">Abstract syntax trees&lt;/a> section of
&lt;a href="https://adv-r.hadley.nz/" target="_blank" rel="noopener">Advanced R&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">ast&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; █─`+` &lt;/span>
&lt;span class="c1">#&amp;gt; ├─█─`+` &lt;/span>
&lt;span class="c1">#&amp;gt; │ ├─a &lt;/span>
&lt;span class="c1">#&amp;gt; │ └─b &lt;/span>
&lt;span class="c1">#&amp;gt; └─c&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="call-stack-trees">Call stack trees
&lt;a href="#call-stack-trees">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>
&lt;a href="https://lobstr.r-lib.org/reference/cst.html" target="_blank" rel="noopener">&lt;code>cst()&lt;/code>&lt;/a> shows how the frames of a call stack are connected:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">f&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">g&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">h&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">x&lt;/span>
&lt;span class="nf">f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">cst&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; █&lt;/span>
&lt;span class="c1">#&amp;gt; 1. ├─global::f(cst())&lt;/span>
&lt;span class="c1">#&amp;gt; 2. │ └─global::g(x)&lt;/span>
&lt;span class="c1">#&amp;gt; 3. │ └─global::h(x)&lt;/span>
&lt;span class="c1">#&amp;gt; 4. └─lobstr::cst()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Learn more about this in
&lt;a href="https://adv-r.hadley.nz/environments.html#call-stack" target="_blank" rel="noopener">The call stack&lt;/a>.&lt;/p>
&lt;h3 id="references">References
&lt;a href="#references">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>
&lt;a href="https://lobstr.r-lib.org/reference/ref.html" target="_blank" rel="noopener">&lt;code>ref()&lt;/code>&lt;/a> shows the connection between shared references using a locally unique id by printing the memory address of each object (further discussed
&lt;a href="https://adv-r.hadley.nz/names-values.html#copy-on-modify" target="_blank" rel="noopener">here&lt;/a>).&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">100&lt;/span>
&lt;span class="nf">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1:0x7fb19c66bbc8] &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; █ [1:0x7fb19d0d5a28] &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; ├─[2:0x7fb19c66bbc8] &amp;lt;int&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; ├─[2:0x7fb19c66bbc8] &lt;/span>
&lt;span class="c1">#&amp;gt; └─[2:0x7fb19c66bbc8]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="object-inspection">Object inspection
&lt;a href="#object-inspection">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://lobstr.r-lib.org/reference/obj_addr.html" target="_blank" rel="noopener">&lt;code>obj_addr()&lt;/code>&lt;/a> function gives the address of the value that an object, &lt;code>x&lt;/code>, points to. In
&lt;a href="https://adv-r.hadley.nz/names-values.html#binding-basics" target="_blank" rel="noopener">Binding basics&lt;/a>, this is used to illustrate the &amp;ldquo;lazy copying&amp;rdquo; used by R: when multiple names reference the same value, they point to the same identifier. The object itself is not duplicated.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">10&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">x&lt;/span>
&lt;span class="nf">obj_addr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;0x7fb19c7aeeb0&amp;#34;&lt;/span>
&lt;span class="nf">obj_addr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;0x7fb19c7aeeb0&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;a href="https://lobstr.r-lib.org/reference/obj_size.html" target="_blank" rel="noopener">&lt;code>obj_size()&lt;/code>&lt;/a> computes the size of an object or set of objects. It is different to &lt;code>object.size()&lt;/code> in three ways. It:&lt;/p>
&lt;ul>
&lt;li>Accounts for all types of shared values, not just strings in the global string pool,&lt;/li>
&lt;li>Includes the size of environments (up to &lt;code>env&lt;/code>), and&lt;/li>
&lt;li>Accurately measures the size of ALTREP objects.&lt;/li>
&lt;/ul>
&lt;p>&lt;code>obj_size()&lt;/code> attempts to take into account the size of the environments associated with an object. By default, it never counts the size of the global environment, the base environment, the empty environment, or any namespace. However, the optional &lt;code>env&lt;/code> argument allows you to specify another environment at which to stop.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">runif&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1e4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">obj_size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; 80,048 B&lt;/span>
&lt;span class="n">z&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">obj_size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; 80,488 B&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use &lt;code>obj_sizes()&lt;/code> to see the unique contribution of each component:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">obj_sizes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; * 80,048 B&lt;/span>
&lt;span class="c1">#&amp;gt; * 440 B&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For more detail, see the
&lt;a href="https://adv-r.hadley.nz/names-values.html#object-size" target="_blank" rel="noopener">Object size&lt;/a> section of Advanced R.&lt;/p>
&lt;h2 id="memory-usage">Memory usage
&lt;a href="#memory-usage">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://lobstr.r-lib.org/reference/mem_used.html" target="_blank" rel="noopener">&lt;code>mem_used()&lt;/code>&lt;/a> wraps around the base-R garbage collection function,
&lt;a href="https://stat.ethz.ch/R-manual/R-devel/library/base/html/gc.html" target="_blank" rel="noopener">&lt;code>gc()&lt;/code>&lt;/a>, and returns the exact number of bytes currently used by R. See
&lt;a href="https://adv-r.hadley.nz/names-values.html#gc" target="_blank" rel="noopener">Unbinding and the garbage collector&lt;/a> for details.&lt;/p></description></item><item><title>httr 1.4.0</title><link>https://www.tidyverse.org/blog/2018/12/httr-1-4-0/</link><pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/12/httr-1-4-0/</guid><description>&lt;p>We&amp;rsquo;re well pleased to announce the release of
&lt;a href="https://httr.r-lib.org/" target="_blank" rel="noopener">httr&lt;/a> 1.4.0. The goal of httr is to provide a wrapper for the
&lt;a href="https://CRAN.R-project.org/package=curl" target="_blank" rel="noopener">curl&lt;/a> package, customised to the demands of modern web APIs.&lt;/p>
&lt;p>The
&lt;a href="https://httr.r-lib.org/news/index.html#httr-1-4-0" target="_blank" rel="noopener">httr 1.4.0&lt;/a> release includes improved flexibility for
&lt;a href="https://oauth.net/2/" target="_blank" rel="noopener">OAuth 2.0&lt;/a>, new and updated
&lt;a href="https://github.com/r-lib/httr/tree/master/demo" target="_blank" rel="noopener">demos&lt;/a>, and several minor changes and improvements — the full details of which can be found in the
&lt;a href="https://github.com/r-lib/httr/blob/master/NEWS.md#httr-140" target="_blank" rel="noopener">changelog&lt;/a>.&lt;/p>
&lt;h2 id="oauth-20-improvements">OAuth 2.0 improvements
&lt;a href="#oauth-20-improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>OAuth 2.0 has been made somewhat more flexible in order to support more websites.
&lt;a href="https://httr.r-lib.org/reference/init_oauth2.0.html" target="_blank" rel="noopener">&lt;code>init_oauth2.0()&lt;/code>&lt;/a> now passes &lt;code>use_basic_auth&lt;/code> onward, enabling basic authentication for OAuth 2.0.
&lt;a href="https://httr.r-lib.org/reference/oauth2.0_token.html" target="_blank" rel="noopener">&lt;code>oauth2.0_token()&lt;/code>&lt;/a> and &lt;code>init_oauth2.0()&lt;/code> have gained two new arguments:&lt;/p>
&lt;ul>
&lt;li>&lt;code>oob_value&lt;/code> specifies the value to use for the &lt;code>redirect_uri&lt;/code> parameter when retrieving an authorization URL, necessary when using &amp;ldquo;out-of-band&amp;rdquo; (oob) configuration.&lt;/li>
&lt;li>&lt;code>query_authorize_extra&lt;/code> makes it possible to add extra query parameters to the authorization URL, as is required by some APIs.&lt;/li>
&lt;/ul>
&lt;p>Scopes are now de-duplicated, sorted and stripped of names before being hashed for on-disk token retrieval. This eliminates a source of hash mismatch that could cause new tokens to be requested, even when existing tokens had the necessary scope.&lt;/p>
&lt;h2 id="demo-updates">Demo updates
&lt;a href="#demo-updates">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">Christophe Dervieux&lt;/a>, a new
&lt;a href="https://github.com/r-lib/httr/blob/master/demo/oauth1-nounproject.r" target="_blank" rel="noopener">demo&lt;/a> for
&lt;a href="http://oauthbible.com/#oauth-10a-one-legged" target="_blank" rel="noopener">OAuth 1.0a&amp;rsquo;s one-legged&lt;/a> authentication mechanism has been added, using the
&lt;a href="https://thenounproject.com/" target="_blank" rel="noopener">Noun Project&lt;/a> API.&lt;/p>
&lt;p>The
&lt;a href="https://github.com/r-lib/httr/blob/master/demo/oauth2-facebook.r" target="_blank" rel="noopener">Faceboook demo&lt;/a> now uses
&lt;a href="https://developers.facebook.com/docs/facebook-login/for-devices/" target="_blank" rel="noopener">device flow&lt;/a>. This means that you can continue to use the Facebook API from R under their new security policy.&lt;/p>
&lt;p>The
&lt;a href="https://github.com/r-lib/httr/blob/master/demo/oauth2-vimeo.r" target="_blank" rel="noopener">Vimeo demo&lt;/a> has been updated to use OAuth 2.0.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thank you to the 69 contributors who made this release possible:
&lt;a href="https://github.com/aazaff" target="_blank" rel="noopener">@aazaff&lt;/a>,
&lt;a href="https://github.com/alex-hioperator" target="_blank" rel="noopener">@alex-hioperator&lt;/a>,
&lt;a href="https://github.com/barryrowlingson" target="_blank" rel="noopener">@barryrowlingson&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/bradyte" target="_blank" rel="noopener">@bradyte&lt;/a>,
&lt;a href="https://github.com/braggbear" target="_blank" rel="noopener">@braggbear&lt;/a>,
&lt;a href="https://github.com/brennanpincardiff" target="_blank" rel="noopener">@brennanpincardiff&lt;/a>,
&lt;a href="https://github.com/cameronbracken" target="_blank" rel="noopener">@cameronbracken&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/ChrisMuir" target="_blank" rel="noopener">@ChrisMuir&lt;/a>,
&lt;a href="https://github.com/cosmomeese" target="_blank" rel="noopener">@cosmomeese&lt;/a>,
&lt;a href="https://github.com/cranknasty" target="_blank" rel="noopener">@cranknasty&lt;/a>,
&lt;a href="https://github.com/cschroed-usgs" target="_blank" rel="noopener">@cschroed-usgs&lt;/a>,
&lt;a href="https://github.com/cstawitz" target="_blank" rel="noopener">@cstawitz&lt;/a>,
&lt;a href="https://github.com/ctrombley" target="_blank" rel="noopener">@ctrombley&lt;/a>,
&lt;a href="https://github.com/dcldmartin" target="_blank" rel="noopener">@dcldmartin&lt;/a>,
&lt;a href="https://github.com/dfv-ms" target="_blank" rel="noopener">@dfv-ms&lt;/a>,
&lt;a href="https://github.com/dkulp2" target="_blank" rel="noopener">@dkulp2&lt;/a>,
&lt;a href="https://github.com/drewabbot" target="_blank" rel="noopener">@drewabbot&lt;/a>,
&lt;a href="https://github.com/EOneita" target="_blank" rel="noopener">@EOneita&lt;/a>,
&lt;a href="https://github.com/ErezLo" target="_blank" rel="noopener">@ErezLo&lt;/a>,
&lt;a href="https://github.com/FelixMailoa" target="_blank" rel="noopener">@FelixMailoa&lt;/a>,
&lt;a href="https://github.com/giuseppec" target="_blank" rel="noopener">@giuseppec&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/Hong-Revo" target="_blank" rel="noopener">@Hong-Revo&lt;/a>,
&lt;a href="https://github.com/infinitetrial" target="_blank" rel="noopener">@infinitetrial&lt;/a>,
&lt;a href="https://github.com/Isaacsh" target="_blank" rel="noopener">@Isaacsh&lt;/a>,
&lt;a href="https://github.com/j-Rinehart" target="_blank" rel="noopener">@j-Rinehart&lt;/a>,
&lt;a href="https://github.com/JacquesBonet" target="_blank" rel="noopener">@JacquesBonet&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jguerrero77" target="_blank" rel="noopener">@jguerrero77&lt;/a>,
&lt;a href="https://github.com/JhossePaul" target="_blank" rel="noopener">@JhossePaul&lt;/a>,
&lt;a href="https://github.com/jlegewie" target="_blank" rel="noopener">@jlegewie&lt;/a>,
&lt;a href="https://github.com/jmwerner" target="_blank" rel="noopener">@jmwerner&lt;/a>,
&lt;a href="https://github.com/jthomp1818" target="_blank" rel="noopener">@jthomp1818&lt;/a>,
&lt;a href="https://github.com/KaranKhullar" target="_blank" rel="noopener">@KaranKhullar&lt;/a>,
&lt;a href="https://github.com/karigunnarsson" target="_blank" rel="noopener">@karigunnarsson&lt;/a>,
&lt;a href="https://github.com/klarakaleb" target="_blank" rel="noopener">@klarakaleb&lt;/a>,
&lt;a href="https://github.com/kokomoo" target="_blank" rel="noopener">@kokomoo&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/l-ts" target="_blank" rel="noopener">@l-ts&lt;/a>,
&lt;a href="https://github.com/leonardo-murano" target="_blank" rel="noopener">@leonardo-murano&lt;/a>,
&lt;a href="https://github.com/maalsol" target="_blank" rel="noopener">@maalsol&lt;/a>,
&lt;a href="https://github.com/mmuurr" target="_blank" rel="noopener">@mmuurr&lt;/a>,
&lt;a href="https://github.com/moloscripts" target="_blank" rel="noopener">@moloscripts&lt;/a>,
&lt;a href="https://github.com/mtmorgan" target="_blank" rel="noopener">@mtmorgan&lt;/a>,
&lt;a href="https://github.com/mvkorpel" target="_blank" rel="noopener">@mvkorpel&lt;/a>,
&lt;a href="https://github.com/Nosferican" target="_blank" rel="noopener">@Nosferican&lt;/a>,
&lt;a href="https://github.com/paulgarnes" target="_blank" rel="noopener">@paulgarnes&lt;/a>,
&lt;a href="https://github.com/peterdesmet" target="_blank" rel="noopener">@peterdesmet&lt;/a>,
&lt;a href="https://github.com/peterhartman" target="_blank" rel="noopener">@peterhartman&lt;/a>,
&lt;a href="https://github.com/picousse" target="_blank" rel="noopener">@picousse&lt;/a>,
&lt;a href="https://github.com/pohzipohzi" target="_blank" rel="noopener">@pohzipohzi&lt;/a>,
&lt;a href="https://github.com/porfila" target="_blank" rel="noopener">@porfila&lt;/a>,
&lt;a href="https://github.com/potterzot" target="_blank" rel="noopener">@potterzot&lt;/a>,
&lt;a href="https://github.com/ramnov" target="_blank" rel="noopener">@ramnov&lt;/a>,
&lt;a href="https://github.com/sajukassim" target="_blank" rel="noopener">@sajukassim&lt;/a>,
&lt;a href="https://github.com/sasajuratovic" target="_blank" rel="noopener">@sasajuratovic&lt;/a>,
&lt;a href="https://github.com/Sb9309" target="_blank" rel="noopener">@Sb9309&lt;/a>,
&lt;a href="https://github.com/shrektan" target="_blank" rel="noopener">@shrektan&lt;/a>,
&lt;a href="https://github.com/skirmer" target="_blank" rel="noopener">@skirmer&lt;/a>,
&lt;a href="https://github.com/stefanfritsch" target="_blank" rel="noopener">@stefanfritsch&lt;/a>,
&lt;a href="https://github.com/StevenMMortimer" target="_blank" rel="noopener">@StevenMMortimer&lt;/a>,
&lt;a href="https://github.com/swanderz" target="_blank" rel="noopener">@swanderz&lt;/a>,
&lt;a href="https://github.com/swood-ecology" target="_blank" rel="noopener">@swood-ecology&lt;/a>,
&lt;a href="https://github.com/tjpalanca" target="_blank" rel="noopener">@tjpalanca&lt;/a>,
&lt;a href="https://github.com/TuanTran07" target="_blank" rel="noopener">@TuanTran07&lt;/a>,
&lt;a href="https://github.com/viddagrava" target="_blank" rel="noopener">@viddagrava&lt;/a>, and
&lt;a href="https://github.com/wsphd" target="_blank" rel="noopener">@wsphd&lt;/a>.&lt;/p></description></item><item><title>tidyverse and r-lib: a year in review</title><link>https://www.tidyverse.org/blog/2018/12/tidyverse-and-r-lib-year-in-review/</link><pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/12/tidyverse-and-r-lib-year-in-review/</guid><description>&lt;p>It&amp;rsquo;s been a banner year for the tidyverse and r-lib teams, and, as we close out 2018, we wanted to take a look back at some of our achievements.&lt;/p>
&lt;p>We added significant roster depth this year, with
&lt;a href="https://twitter.com/dvaughan32/" target="_blank" rel="noopener">Davis Vaughan&lt;/a>,
&lt;a href="https://twitter.com/thomasp85/" target="_blank" rel="noopener">Thomas Lin Pedersen&lt;/a>, and
&lt;a href="https://twitter.com/romain_francois/" target="_blank" rel="noopener">Romain François&lt;/a> all joining the squad.&lt;/p>
&lt;h2 id="by-the-numbers">By the numbers
&lt;a href="#by-the-numbers">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;strong>22&lt;/strong> new packages on CRAN (
&lt;a href="https://github.com/r-lib/vctrs" target="_blank" rel="noopener">vctrs&lt;/a>,
&lt;a href="https://github.com/tidymodels/parsnip" target="_blank" rel="noopener">parsnip&lt;/a>,
&lt;a href="https://github.com/r-lib/lobstr" target="_blank" rel="noopener">lobstr&lt;/a>,
&lt;a href="https://github.com/r-lib/sloop" target="_blank" rel="noopener">sloop&lt;/a>,
&lt;a href="https://github.com/r-lib/err" target="_blank" rel="noopener">err&lt;/a>,
&lt;a href="https://github.com/r-lib/generics" target="_blank" rel="noopener">generics&lt;/a>,
&lt;a href="https://github.com/r-lib/carrier" target="_blank" rel="noopener">carrier&lt;/a>,
&lt;a href="https://github.com/r-lib/xopen" target="_blank" rel="noopener">xopen&lt;/a>,
&lt;a href="https://github.com/tidymodels/embed" target="_blank" rel="noopener">embed&lt;/a>,
&lt;a href="https://github.com/tidymodels/dials" target="_blank" rel="noopener">dials&lt;/a>,
&lt;a href="https://github.com/tidymodels/tidymodels" target="_blank" rel="noopener">tidymodels&lt;/a>,
&lt;a href="https://github.com/r-lib/ps" target="_blank" rel="noopener">ps&lt;/a>,
&lt;a href="https://github.com/r-lib/pkgload" target="_blank" rel="noopener">pkgload&lt;/a>,
&lt;a href="https://github.com/r-lib/pkgbuild" target="_blank" rel="noopener">pkgbuild&lt;/a>,
&lt;a href="https://github.com/r-lib/conflicted" target="_blank" rel="noopener">conflicted&lt;/a>,
&lt;a href="https://github.com/r-lib/bench" target="_blank" rel="noopener">bench&lt;/a>,
&lt;a href="https://github.com/r-lib/pkgdown" target="_blank" rel="noopener">pkgdown&lt;/a>,
&lt;a href="https://github.com/r-lib/conf" target="_blank" rel="noopener">conf&lt;/a>,
&lt;a href="https://github.com/r-lib/filelock" target="_blank" rel="noopener">filelock&lt;/a>,
&lt;a href="https://github.com/r-lib/showimage" target="_blank" rel="noopener">showimage&lt;/a>,
&lt;a href="https://github.com/r-lib/fs" target="_blank" rel="noopener">fs&lt;/a>, and
&lt;a href="https://github.com/tidymodels/infer" target="_blank" rel="noopener">infer&lt;/a>.)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>54&lt;/strong> packages with &lt;em>major&lt;/em> releases&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>91&lt;/strong> packages with releases this year&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>100+&lt;/strong> talks and workshops&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>42&lt;/strong> articles on
&lt;a href="https://www.tidyverse.org/articles/" target="_blank" rel="noopener">tidyverse.org&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="major-accomplishments">Major accomplishments
&lt;a href="#major-accomplishments">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>After 6 years of development,
&lt;a href="https://www.tidyverse.org/articles/2018/05/pkgdown-1-0-0/" target="_blank" rel="noopener">&lt;strong>pkgdown&lt;/strong>&lt;/a> had its initial release on CRAN. pkgdown is designed to make it quick and easy to build a website for your package, and has already been used to make sites for over 2500 packages.&lt;/p>
&lt;p>Several major tidyverse package releases have centered on the implementation of
&lt;a href="https://tidyeval.tidyverse.org/" target="_blank" rel="noopener">&lt;strong>tidy evaluation&lt;/strong>&lt;/a>. Notable among these was the 3.0.0 release of
&lt;a href="https://www.tidyverse.org/articles/2018/07/ggplot2-3-0-0/" target="_blank" rel="noopener">&lt;strong>ggplot2&lt;/strong>&lt;/a>, which has more than 2000 reverse dependencies. We continue to improve our tools for and skills with releases with large numbers of reverse dependencies.&lt;/p>
&lt;p>
&lt;a href="https://www.tidyverse.org/articles/2018/10/devtools-2-0-0/" target="_blank" rel="noopener">&lt;strong>devtools 2.0.0&lt;/strong>&lt;/a> split the functionality in devtools into a number of smaller packages which are simpler to develop, and also easier for other packages to depend on. Though devtools will remain the primary package with which developers interact, the functionality will come from its component packages (in what we’re calling a
&lt;a href="https://github.com/r-lib/devtools#conscious-uncoupling" target="_blank" rel="noopener">conscious uncoupling&lt;/a>).&lt;/p>
&lt;p>The
&lt;a href="https://github.com/tidymodels" target="_blank" rel="noopener">&lt;strong>tidymodels&lt;/strong>&lt;/a> collection is the home of several new modelling packages, which follow opinionated but reasonable
&lt;a href="https://tidymodels.github.io/model-implementation-principles/" target="_blank" rel="noopener">model implementation practices&lt;/a>. This includes the
&lt;a href="https://tidymodels.github.io/parsnip/" target="_blank" rel="noopener">&lt;strong>parsnip&lt;/strong>&lt;/a> package, which standardizes the interface for fitting models as well as their return values — separating model &lt;em>specification&lt;/em> from model &lt;em>implementation&lt;/em> (
&lt;a href="https://www.tidyverse.org/articles/2018/11/parsnip-0-0-1/" target="_blank" rel="noopener">more detail here&lt;/a>). In effect, when using parsnip, you don’t have to remember each interface and its unique set of argument names to easily move between R packages.&lt;/p>
&lt;h2 id="consistency">Consistency
&lt;a href="#consistency">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Among the
&lt;a href="https://principles.tidyverse.org" target="_blank" rel="noopener">tidyverse development principles&lt;/a> is the goal of being
&lt;a href="https://principles.tidyverse.org/unifying-principles.html#consistent" target="_blank" rel="noopener">consistent&lt;/a>. This has, perhaps, been most visible in our implementation of
&lt;a href="https://tidyeval.tidyverse.org/" target="_blank" rel="noopener">tidy evaluation&lt;/a> across tidyverse packages. The
&lt;a href="https://fs.r-lib.org/" target="_blank" rel="noopener">&lt;strong>fs&lt;/strong>&lt;/a> r-lib package, first released at the beginning of the year, helps bring such consistency to file system operations. More recently, we’ve devised a consistent strategy for handling
&lt;a href="https://principles.tidyverse.org/names-attribute.html" target="_blank" rel="noopener">name repair&lt;/a> that can be used to make name-handling more predictable.
&lt;a href="https://vctrs.r-lib.org/" target="_blank" rel="noopener">&lt;strong>vctrs&lt;/strong>&lt;/a>, which recently had its first CRAN release, will allow us to bring
&lt;a href="https://vctrs.r-lib.org/articles/stability.html" target="_blank" rel="noopener">type- and size-stability&lt;/a> to user-facing functions; a major focus as we head into the next year.&lt;/p>
&lt;h2 id="tidyverse-dev-day">Tidyverse dev day
&lt;a href="#tidyverse-dev-day">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We hope that our first
&lt;a href="https://www.tidyverse.org/articles/2018/11/tidyverse-developer-day-2019/" target="_blank" rel="noopener">&lt;strong>tidyverse developer day&lt;/strong>&lt;/a> (held after rstudio::conf) will help us continue to nurture regular contributors of all skill levels. We have 100 developers (50 general admission + 50 URM) signed up to participate, and we&amp;rsquo;re looking forward to a fun and productive day!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A huge thank you goes out to the &lt;strong>568&lt;/strong> people who submitted PRs to the
&lt;a href="https://github.com/tidyverse/" target="_blank" rel="noopener">tidyverse&lt;/a>,
&lt;a href="https://github.com/r-lib/" target="_blank" rel="noopener">r-lib&lt;/a>,
&lt;a href="https://github.com/tidymodels" target="_blank" rel="noopener">tidymodels&lt;/a>, or
&lt;a href="https://github.com/r-dbi" target="_blank" rel="noopener">r-dbi&lt;/a> repos in 2018:
&lt;a href="https://github.com/414theodore" target="_blank" rel="noopener">@414theodore&lt;/a>,
&lt;a href="https://github.com/aaronrudkin" target="_blank" rel="noopener">@aaronrudkin&lt;/a>,
&lt;a href="https://github.com/aaronwolen" target="_blank" rel="noopener">@aaronwolen&lt;/a>,
&lt;a href="https://github.com/aayala15" target="_blank" rel="noopener">@aayala15&lt;/a>,
&lt;a href="https://github.com/abichat" target="_blank" rel="noopener">@abichat&lt;/a>,
&lt;a href="https://github.com/adam-gruer" target="_blank" rel="noopener">@adam-gruer&lt;/a>,
&lt;a href="https://github.com/AdeelH" target="_blank" rel="noopener">@AdeelH&lt;/a>,
&lt;a href="https://github.com/adibender" target="_blank" rel="noopener">@adibender&lt;/a>,
&lt;a href="https://github.com/AdrianHordyk" target="_blank" rel="noopener">@AdrianHordyk&lt;/a>,
&lt;a href="https://github.com/AEBilgrau" target="_blank" rel="noopener">@AEBilgrau&lt;/a>,
&lt;a href="https://github.com/aeklant" target="_blank" rel="noopener">@aeklant&lt;/a>,
&lt;a href="https://github.com/aghaynes" target="_blank" rel="noopener">@aghaynes&lt;/a>,
&lt;a href="https://github.com/ahoho" target="_blank" rel="noopener">@ahoho&lt;/a>,
&lt;a href="https://github.com/ajdamico" target="_blank" rel="noopener">@ajdamico&lt;/a>,
&lt;a href="https://github.com/akbertram" target="_blank" rel="noopener">@akbertram&lt;/a>,
&lt;a href="https://github.com/AkhilGNair" target="_blank" rel="noopener">@AkhilGNair&lt;/a>,
&lt;a href="https://github.com/Alanocallaghan" target="_blank" rel="noopener">@Alanocallaghan&lt;/a>,
&lt;a href="https://github.com/alecuba16" target="_blank" rel="noopener">@alecuba16&lt;/a>,
&lt;a href="https://github.com/alexpghayes" target="_blank" rel="noopener">@alexpghayes&lt;/a>,
&lt;a href="https://github.com/alexwhan" target="_blank" rel="noopener">@alexwhan&lt;/a>,
&lt;a href="https://github.com/alistaire47" target="_blank" rel="noopener">@alistaire47&lt;/a>,
&lt;a href="https://github.com/amhrasmussen" target="_blank" rel="noopener">@amhrasmussen&lt;/a>,
&lt;a href="https://github.com/amilenkovic" target="_blank" rel="noopener">@amilenkovic&lt;/a>,
&lt;a href="https://github.com/AmundsenJunior" target="_blank" rel="noopener">@AmundsenJunior&lt;/a>,
&lt;a href="https://github.com/AndreaCirilloAC" target="_blank" rel="noopener">@AndreaCirilloAC&lt;/a>,
&lt;a href="https://github.com/andrewjlm" target="_blank" rel="noopener">@andrewjlm&lt;/a>,
&lt;a href="https://github.com/andrewpbray" target="_blank" rel="noopener">@andrewpbray&lt;/a>,
&lt;a href="https://github.com/anhqle" target="_blank" rel="noopener">@anhqle&lt;/a>,
&lt;a href="https://github.com/Anirudhsekar96" target="_blank" rel="noopener">@Anirudhsekar96&lt;/a>,
&lt;a href="https://github.com/ankane" target="_blank" rel="noopener">@ankane&lt;/a>,
&lt;a href="https://github.com/aoles" target="_blank" rel="noopener">@aoles&lt;/a>,
&lt;a href="https://github.com/apreshill" target="_blank" rel="noopener">@apreshill&lt;/a>,
&lt;a href="https://github.com/ArtemSokolov" target="_blank" rel="noopener">@ArtemSokolov&lt;/a>,
&lt;a href="https://github.com/artichaud1" target="_blank" rel="noopener">@artichaud1&lt;/a>,
&lt;a href="https://github.com/aryoda" target="_blank" rel="noopener">@aryoda&lt;/a>,
&lt;a href="https://github.com/AshesITR" target="_blank" rel="noopener">@AshesITR&lt;/a>,
&lt;a href="https://github.com/asieira" target="_blank" rel="noopener">@asieira&lt;/a>,
&lt;a href="https://github.com/atheriel" target="_blank" rel="noopener">@atheriel&lt;/a>,
&lt;a href="https://github.com/atusy" target="_blank" rel="noopener">@atusy&lt;/a>,
&lt;a href="https://github.com/atyre2" target="_blank" rel="noopener">@atyre2&lt;/a>,
&lt;a href="https://github.com/austensen" target="_blank" rel="noopener">@austensen&lt;/a>,
&lt;a href="https://github.com/austin3dickey" target="_blank" rel="noopener">@austin3dickey&lt;/a>,
&lt;a href="https://github.com/aviast" target="_blank" rel="noopener">@aviast&lt;/a>,
&lt;a href="https://github.com/Ax3man" target="_blank" rel="noopener">@Ax3man&lt;/a>,
&lt;a href="https://github.com/baogorek" target="_blank" rel="noopener">@baogorek&lt;/a>,
&lt;a href="https://github.com/BarkleyBG" target="_blank" rel="noopener">@BarkleyBG&lt;/a>,
&lt;a href="https://github.com/Bart6114" target="_blank" rel="noopener">@Bart6114&lt;/a>,
&lt;a href="https://github.com/bastistician" target="_blank" rel="noopener">@bastistician&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/bblette1" target="_blank" rel="noopener">@bblette1&lt;/a>,
&lt;a href="https://github.com/bbolker" target="_blank" rel="noopener">@bbolker&lt;/a>,
&lt;a href="https://github.com/bbrewington" target="_blank" rel="noopener">@bbrewington&lt;/a>,
&lt;a href="https://github.com/bcipolli" target="_blank" rel="noopener">@bcipolli&lt;/a>,
&lt;a href="https://github.com/bdemeshev" target="_blank" rel="noopener">@bdemeshev&lt;/a>,
&lt;a href="https://github.com/beanumber" target="_blank" rel="noopener">@beanumber&lt;/a>,
&lt;a href="https://github.com/benmarwick" target="_blank" rel="noopener">@benmarwick&lt;/a>,
&lt;a href="https://github.com/bensoltoff" target="_blank" rel="noopener">@bensoltoff&lt;/a>,
&lt;a href="https://github.com/bfgray3" target="_blank" rel="noopener">@bfgray3&lt;/a>,
&lt;a href="https://github.com/bgreenwell" target="_blank" rel="noopener">@bgreenwell&lt;/a>,
&lt;a href="https://github.com/bhive01" target="_blank" rel="noopener">@bhive01&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/bjreisman" target="_blank" rel="noopener">@bjreisman&lt;/a>,
&lt;a href="https://github.com/blairj09" target="_blank" rel="noopener">@blairj09&lt;/a>,
&lt;a href="https://github.com/blakeboswell" target="_blank" rel="noopener">@blakeboswell&lt;/a>,
&lt;a href="https://github.com/blakeyc" target="_blank" rel="noopener">@blakeyc&lt;/a>,
&lt;a href="https://github.com/bleemayer" target="_blank" rel="noopener">@bleemayer&lt;/a>,
&lt;a href="https://github.com/bleutner" target="_blank" rel="noopener">@bleutner&lt;/a>,
&lt;a href="https://github.com/bmannakee" target="_blank" rel="noopener">@bmannakee&lt;/a>,
&lt;a href="https://github.com/boshek" target="_blank" rel="noopener">@boshek&lt;/a>,
&lt;a href="https://github.com/breichholf" target="_blank" rel="noopener">@breichholf&lt;/a>,
&lt;a href="https://github.com/BrianDiggs" target="_blank" rel="noopener">@BrianDiggs&lt;/a>,
&lt;a href="https://github.com/brianwdavis" target="_blank" rel="noopener">@brianwdavis&lt;/a>,
&lt;a href="https://github.com/briatte" target="_blank" rel="noopener">@briatte&lt;/a>,
&lt;a href="https://github.com/brodieG" target="_blank" rel="noopener">@brodieG&lt;/a>,
&lt;a href="https://github.com/brunolucian" target="_blank" rel="noopener">@brunolucian&lt;/a>,
&lt;a href="https://github.com/bschneidr" target="_blank" rel="noopener">@bschneidr&lt;/a>,
&lt;a href="https://github.com/burchill" target="_blank" rel="noopener">@burchill&lt;/a>,
&lt;a href="https://github.com/buyske" target="_blank" rel="noopener">@buyske&lt;/a>,
&lt;a href="https://github.com/byapparov" target="_blank" rel="noopener">@byapparov&lt;/a>,
&lt;a href="https://github.com/caijun" target="_blank" rel="noopener">@caijun&lt;/a>,
&lt;a href="https://github.com/calpan" target="_blank" rel="noopener">@calpan&lt;/a>,
&lt;a href="https://github.com/cathblatter" target="_blank" rel="noopener">@cathblatter&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/cfhammill" target="_blank" rel="noopener">@cfhammill&lt;/a>,
&lt;a href="https://github.com/CharlesNaylor" target="_blank" rel="noopener">@CharlesNaylor&lt;/a>,
&lt;a href="https://github.com/chendaniely" target="_blank" rel="noopener">@chendaniely&lt;/a>,
&lt;a href="https://github.com/chiarapiccino" target="_blank" rel="noopener">@chiarapiccino&lt;/a>,
&lt;a href="https://github.com/chris-park" target="_blank" rel="noopener">@chris-park&lt;/a>,
&lt;a href="https://github.com/ChrisMuir" target="_blank" rel="noopener">@ChrisMuir&lt;/a>,
&lt;a href="https://github.com/christophergandrud" target="_blank" rel="noopener">@christophergandrud&lt;/a>,
&lt;a href="https://github.com/ChuliangXiao" target="_blank" rel="noopener">@ChuliangXiao&lt;/a>,
&lt;a href="https://github.com/cimentadaj" target="_blank" rel="noopener">@cimentadaj&lt;/a>,
&lt;a href="https://github.com/ck37" target="_blank" rel="noopener">@ck37&lt;/a>,
&lt;a href="https://github.com/clauswilke" target="_blank" rel="noopener">@clauswilke&lt;/a>,
&lt;a href="https://github.com/ClaytonJY" target="_blank" rel="noopener">@ClaytonJY&lt;/a>,
&lt;a href="https://github.com/coatless" target="_blank" rel="noopener">@coatless&lt;/a>,
&lt;a href="https://github.com/codetriage-readme-bot" target="_blank" rel="noopener">@codetriage-readme-bot&lt;/a>,
&lt;a href="https://github.com/colearendt" target="_blank" rel="noopener">@colearendt&lt;/a>,
&lt;a href="https://github.com/ColinFay" target="_blank" rel="noopener">@ColinFay&lt;/a>,
&lt;a href="https://github.com/comicfans" target="_blank" rel="noopener">@comicfans&lt;/a>,
&lt;a href="https://github.com/ConorIA" target="_blank" rel="noopener">@ConorIA&lt;/a>,
&lt;a href="https://github.com/const-ae" target="_blank" rel="noopener">@const-ae&lt;/a>,
&lt;a href="https://github.com/coolbutuseless" target="_blank" rel="noopener">@coolbutuseless&lt;/a>,
&lt;a href="https://github.com/corinne-riddell" target="_blank" rel="noopener">@corinne-riddell&lt;/a>,
&lt;a href="https://github.com/CorradoLanera" target="_blank" rel="noopener">@CorradoLanera&lt;/a>,
&lt;a href="https://github.com/corybrunson" target="_blank" rel="noopener">@corybrunson&lt;/a>,
&lt;a href="https://github.com/cosmomeese" target="_blank" rel="noopener">@cosmomeese&lt;/a>,
&lt;a href="https://github.com/cpsievert" target="_blank" rel="noopener">@cpsievert&lt;/a>,
&lt;a href="https://github.com/crew102" target="_blank" rel="noopener">@crew102&lt;/a>,
&lt;a href="https://github.com/crossett" target="_blank" rel="noopener">@crossett&lt;/a>,
&lt;a href="https://github.com/cschroed-usgs" target="_blank" rel="noopener">@cschroed-usgs&lt;/a>,
&lt;a href="https://github.com/csetraynor" target="_blank" rel="noopener">@csetraynor&lt;/a>,
&lt;a href="https://github.com/ctbrown" target="_blank" rel="noopener">@ctbrown&lt;/a>,
&lt;a href="https://github.com/ctrombley" target="_blank" rel="noopener">@ctrombley&lt;/a>,
&lt;a href="https://github.com/cwickham" target="_blank" rel="noopener">@cwickham&lt;/a>,
&lt;a href="https://github.com/czeildi" target="_blank" rel="noopener">@czeildi&lt;/a>,
&lt;a href="https://github.com/daattali" target="_blank" rel="noopener">@daattali&lt;/a>,
&lt;a href="https://github.com/dandermotj" target="_blank" rel="noopener">@dandermotj&lt;/a>,
&lt;a href="https://github.com/daniel-barnett" target="_blank" rel="noopener">@daniel-barnett&lt;/a>,
&lt;a href="https://github.com/daniellima123" target="_blank" rel="noopener">@daniellima123&lt;/a>,
&lt;a href="https://github.com/DataWookie" target="_blank" rel="noopener">@DataWookie&lt;/a>,
&lt;a href="https://github.com/davechilders" target="_blank" rel="noopener">@davechilders&lt;/a>,
&lt;a href="https://github.com/davidkane9" target="_blank" rel="noopener">@davidkane9&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dchiu911" target="_blank" rel="noopener">@dchiu911&lt;/a>,
&lt;a href="https://github.com/delferts" target="_blank" rel="noopener">@delferts&lt;/a>,
&lt;a href="https://github.com/devillemereuil" target="_blank" rel="noopener">@devillemereuil&lt;/a>,
&lt;a href="https://github.com/dgkf" target="_blank" rel="noopener">@dgkf&lt;/a>,
&lt;a href="https://github.com/dgromer" target="_blank" rel="noopener">@dgromer&lt;/a>,
&lt;a href="https://github.com/dgrtwo" target="_blank" rel="noopener">@dgrtwo&lt;/a>,
&lt;a href="https://github.com/diogocp" target="_blank" rel="noopener">@diogocp&lt;/a>,
&lt;a href="https://github.com/dleutnant" target="_blank" rel="noopener">@dleutnant&lt;/a>,
&lt;a href="https://github.com/dmenne" target="_blank" rel="noopener">@dmenne&lt;/a>,
&lt;a href="https://github.com/dominiklanger" target="_blank" rel="noopener">@dominiklanger&lt;/a>,
&lt;a href="https://github.com/dongzhuoer" target="_blank" rel="noopener">@dongzhuoer&lt;/a>,
&lt;a href="https://github.com/doug-friedman" target="_blank" rel="noopener">@doug-friedman&lt;/a>,
&lt;a href="https://github.com/dougmitarotonda" target="_blank" rel="noopener">@dougmitarotonda&lt;/a>,
&lt;a href="https://github.com/Dpananos" target="_blank" rel="noopener">@Dpananos&lt;/a>,
&lt;a href="https://github.com/dpastoor" target="_blank" rel="noopener">@dpastoor&lt;/a>,
&lt;a href="https://github.com/dpocock" target="_blank" rel="noopener">@dpocock&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/dpseidel" target="_blank" rel="noopener">@dpseidel&lt;/a>,
&lt;a href="https://github.com/dracodoc" target="_blank" rel="noopener">@dracodoc&lt;/a>,
&lt;a href="https://github.com/dragosmg" target="_blank" rel="noopener">@dragosmg&lt;/a>,
&lt;a href="https://github.com/drewabbot" target="_blank" rel="noopener">@drewabbot&lt;/a>,
&lt;a href="https://github.com/drkrynstrng" target="_blank" rel="noopener">@drkrynstrng&lt;/a>,
&lt;a href="https://github.com/drsimonj" target="_blank" rel="noopener">@drsimonj&lt;/a>,
&lt;a href="https://github.com/duckmayr" target="_blank" rel="noopener">@duckmayr&lt;/a>,
&lt;a href="https://github.com/duju211" target="_blank" rel="noopener">@duju211&lt;/a>,
&lt;a href="https://github.com/dvcv" target="_blank" rel="noopener">@dvcv&lt;/a>,
&lt;a href="https://github.com/dveeden" target="_blank" rel="noopener">@dveeden&lt;/a>,
&lt;a href="https://github.com/dvmlls" target="_blank" rel="noopener">@dvmlls&lt;/a>,
&lt;a href="https://github.com/dynamicwebpaige" target="_blank" rel="noopener">@dynamicwebpaige&lt;/a>,
&lt;a href="https://github.com/earowang" target="_blank" rel="noopener">@earowang&lt;/a>,
&lt;a href="https://github.com/echasnovski" target="_blank" rel="noopener">@echasnovski&lt;/a>,
&lt;a href="https://github.com/eclarke" target="_blank" rel="noopener">@eclarke&lt;/a>,
&lt;a href="https://github.com/econandrew" target="_blank" rel="noopener">@econandrew&lt;/a>,
&lt;a href="https://github.com/ecortens" target="_blank" rel="noopener">@ecortens&lt;/a>,
&lt;a href="https://github.com/eddelbuettel" target="_blank" rel="noopener">@eddelbuettel&lt;/a>,
&lt;a href="https://github.com/edgararuiz" target="_blank" rel="noopener">@edgararuiz&lt;/a>,
&lt;a href="https://github.com/edublancas" target="_blank" rel="noopener">@edublancas&lt;/a>,
&lt;a href="https://github.com/EdwinTh" target="_blank" rel="noopener">@EdwinTh&lt;/a>,
&lt;a href="https://github.com/edzer" target="_blank" rel="noopener">@edzer&lt;/a>,
&lt;a href="https://github.com/egnha" target="_blank" rel="noopener">@egnha&lt;/a>,
&lt;a href="https://github.com/elben10" target="_blank" rel="noopener">@elben10&lt;/a>,
&lt;a href="https://github.com/eliocamp" target="_blank" rel="noopener">@eliocamp&lt;/a>,
&lt;a href="https://github.com/EllaKaye" target="_blank" rel="noopener">@EllaKaye&lt;/a>,
&lt;a href="https://github.com/ellessenne" target="_blank" rel="noopener">@ellessenne&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/Enchufa2" target="_blank" rel="noopener">@Enchufa2&lt;/a>,
&lt;a href="https://github.com/endore" target="_blank" rel="noopener">@endore&lt;/a>,
&lt;a href="https://github.com/erleholgersen" target="_blank" rel="noopener">@erleholgersen&lt;/a>,
&lt;a href="https://github.com/erocoar" target="_blank" rel="noopener">@erocoar&lt;/a>,
&lt;a href="https://github.com/espinielli" target="_blank" rel="noopener">@espinielli&lt;/a>,
&lt;a href="https://github.com/ethchr" target="_blank" rel="noopener">@ethchr&lt;/a>,
&lt;a href="https://github.com/etiennebr" target="_blank" rel="noopener">@etiennebr&lt;/a>,
&lt;a href="https://github.com/evanhaldane" target="_blank" rel="noopener">@evanhaldane&lt;/a>,
&lt;a href="https://github.com/evanmiller" target="_blank" rel="noopener">@evanmiller&lt;/a>,
&lt;a href="https://github.com/everron" target="_blank" rel="noopener">@everron&lt;/a>,
&lt;a href="https://github.com/ewallace" target="_blank" rel="noopener">@ewallace&lt;/a>,
&lt;a href="https://github.com/ezequielpaura" target="_blank" rel="noopener">@ezequielpaura&lt;/a>,
&lt;a href="https://github.com/fbchow" target="_blank" rel="noopener">@fbchow&lt;/a>,
&lt;a href="https://github.com/fbreitwieser" target="_blank" rel="noopener">@fbreitwieser&lt;/a>,
&lt;a href="https://github.com/Felipe-Rubin" target="_blank" rel="noopener">@Felipe-Rubin&lt;/a>,
&lt;a href="https://github.com/filipefilardi" target="_blank" rel="noopener">@filipefilardi&lt;/a>,
&lt;a href="https://github.com/flaviobarros" target="_blank" rel="noopener">@flaviobarros&lt;/a>,
&lt;a href="https://github.com/flying-sheep" target="_blank" rel="noopener">@flying-sheep&lt;/a>,
&lt;a href="https://github.com/fmichonneau" target="_blank" rel="noopener">@fmichonneau&lt;/a>,
&lt;a href="https://github.com/foo-bar-baz-qux" target="_blank" rel="noopener">@foo-bar-baz-qux&lt;/a>,
&lt;a href="https://github.com/foundinblank" target="_blank" rel="noopener">@foundinblank&lt;/a>,
&lt;a href="https://github.com/frostell" target="_blank" rel="noopener">@frostell&lt;/a>,
&lt;a href="https://github.com/fxdlmatt" target="_blank" rel="noopener">@fxdlmatt&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gadenbuie" target="_blank" rel="noopener">@gadenbuie&lt;/a>,
&lt;a href="https://github.com/gavinsimpson" target="_blank" rel="noopener">@gavinsimpson&lt;/a>,
&lt;a href="https://github.com/GegznaV" target="_blank" rel="noopener">@GegznaV&lt;/a>,
&lt;a href="https://github.com/gergness" target="_blank" rel="noopener">@gergness&lt;/a>,
&lt;a href="https://github.com/gfiumara" target="_blank" rel="noopener">@gfiumara&lt;/a>,
&lt;a href="https://github.com/ghost" target="_blank" rel="noopener">@ghost&lt;/a>,
&lt;a href="https://github.com/gitter-badger" target="_blank" rel="noopener">@gitter-badger&lt;/a>,
&lt;a href="https://github.com/GoldbergData" target="_blank" rel="noopener">@GoldbergData&lt;/a>,
&lt;a href="https://github.com/goldingn" target="_blank" rel="noopener">@goldingn&lt;/a>,
&lt;a href="https://github.com/gorcha" target="_blank" rel="noopener">@gorcha&lt;/a>,
&lt;a href="https://github.com/grayskripko" target="_blank" rel="noopener">@grayskripko&lt;/a>,
&lt;a href="https://github.com/gregmacfarlane" target="_blank" rel="noopener">@gregmacfarlane&lt;/a>,
&lt;a href="https://github.com/gregrs-uk" target="_blank" rel="noopener">@gregrs-uk&lt;/a>,
&lt;a href="https://github.com/Guillaume-Lombardo" target="_blank" rel="noopener">@Guillaume-Lombardo&lt;/a>,
&lt;a href="https://github.com/gutorc92" target="_blank" rel="noopener">@gutorc92&lt;/a>,
&lt;a href="https://github.com/gvelasq" target="_blank" rel="noopener">@gvelasq&lt;/a>,
&lt;a href="https://github.com/gvwilson" target="_blank" rel="noopener">@gvwilson&lt;/a>,
&lt;a href="https://github.com/haavardw" target="_blank" rel="noopener">@haavardw&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hannesmuehleisen" target="_blank" rel="noopener">@hannesmuehleisen&lt;/a>,
&lt;a href="https://github.com/haozhu233" target="_blank" rel="noopener">@haozhu233&lt;/a>,
&lt;a href="https://github.com/hardeepsjohar" target="_blank" rel="noopener">@hardeepsjohar&lt;/a>,
&lt;a href="https://github.com/harrismcgehee" target="_blank" rel="noopener">@harrismcgehee&lt;/a>,
&lt;a href="https://github.com/harvey131" target="_blank" rel="noopener">@harvey131&lt;/a>,
&lt;a href="https://github.com/has2k1" target="_blank" rel="noopener">@has2k1&lt;/a>,
&lt;a href="https://github.com/helix123" target="_blank" rel="noopener">@helix123&lt;/a>,
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">@HenrikBengtsson&lt;/a>,
&lt;a href="https://github.com/hlynurhallgrims" target="_blank" rel="noopener">@hlynurhallgrims&lt;/a>,
&lt;a href="https://github.com/hmalmedal" target="_blank" rel="noopener">@hmalmedal&lt;/a>,
&lt;a href="https://github.com/Hong-Revo" target="_blank" rel="noopener">@Hong-Revo&lt;/a>,
&lt;a href="https://github.com/hrbrmstr" target="_blank" rel="noopener">@hrbrmstr&lt;/a>,
&lt;a href="https://github.com/huftis" target="_blank" rel="noopener">@huftis&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/HughParsonage" target="_blank" rel="noopener">@HughParsonage&lt;/a>,
&lt;a href="https://github.com/ijlyttle" target="_blank" rel="noopener">@ijlyttle&lt;/a>,
&lt;a href="https://github.com/ilarischeinin" target="_blank" rel="noopener">@ilarischeinin&lt;/a>,
&lt;a href="https://github.com/imanuelcostigan" target="_blank" rel="noopener">@imanuelcostigan&lt;/a>,
&lt;a href="https://github.com/Ironholds" target="_blank" rel="noopener">@Ironholds&lt;/a>,
&lt;a href="https://github.com/IronistM" target="_blank" rel="noopener">@IronistM&lt;/a>,
&lt;a href="https://github.com/ismayc" target="_blank" rel="noopener">@ismayc&lt;/a>,
&lt;a href="https://github.com/isomorphisms" target="_blank" rel="noopener">@isomorphisms&lt;/a>,
&lt;a href="https://github.com/isteves" target="_blank" rel="noopener">@isteves&lt;/a>,
&lt;a href="https://github.com/itsdalmo" target="_blank" rel="noopener">@itsdalmo&lt;/a>,
&lt;a href="https://github.com/j450h1" target="_blank" rel="noopener">@j450h1&lt;/a>,
&lt;a href="https://github.com/j6t" target="_blank" rel="noopener">@j6t&lt;/a>,
&lt;a href="https://github.com/jalsalam" target="_blank" rel="noopener">@jalsalam&lt;/a>,
&lt;a href="https://github.com/jameshowison" target="_blank" rel="noopener">@jameshowison&lt;/a>,
&lt;a href="https://github.com/jameslairdsmith" target="_blank" rel="noopener">@jameslairdsmith&lt;/a>,
&lt;a href="https://github.com/jameslamb" target="_blank" rel="noopener">@jameslamb&lt;/a>,
&lt;a href="https://github.com/jan-glx" target="_blank" rel="noopener">@jan-glx&lt;/a>,
&lt;a href="https://github.com/jankislinger" target="_blank" rel="noopener">@jankislinger&lt;/a>,
&lt;a href="https://github.com/jaredhuling" target="_blank" rel="noopener">@jaredhuling&lt;/a>,
&lt;a href="https://github.com/jarodmeng" target="_blank" rel="noopener">@jarodmeng&lt;/a>,
&lt;a href="https://github.com/jarvisc1" target="_blank" rel="noopener">@jarvisc1&lt;/a>,
&lt;a href="https://github.com/jasonmhoule" target="_blank" rel="noopener">@jasonmhoule&lt;/a>,
&lt;a href="https://github.com/javierluraschi" target="_blank" rel="noopener">@javierluraschi&lt;/a>,
&lt;a href="https://github.com/jayhesselberth" target="_blank" rel="noopener">@jayhesselberth&lt;/a>,
&lt;a href="https://github.com/jbao" target="_blank" rel="noopener">@jbao&lt;/a>,
&lt;a href="https://github.com/jbiesanz" target="_blank" rel="noopener">@jbiesanz&lt;/a>,
&lt;a href="https://github.com/jcheng5" target="_blank" rel="noopener">@jcheng5&lt;/a>,
&lt;a href="https://github.com/jdblischak" target="_blank" rel="noopener">@jdblischak&lt;/a>,
&lt;a href="https://github.com/jefferis" target="_blank" rel="noopener">@jefferis&lt;/a>,
&lt;a href="https://github.com/jeffreyhanson" target="_blank" rel="noopener">@jeffreyhanson&lt;/a>,
&lt;a href="https://github.com/jemus42" target="_blank" rel="noopener">@jemus42&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jentjr" target="_blank" rel="noopener">@jentjr&lt;/a>,
&lt;a href="https://github.com/jenzopr" target="_blank" rel="noopener">@jenzopr&lt;/a>,
&lt;a href="https://github.com/jepusto" target="_blank" rel="noopener">@jepusto&lt;/a>,
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a>,
&lt;a href="https://github.com/jfcharney" target="_blank" rel="noopener">@jfcharney&lt;/a>,
&lt;a href="https://github.com/jgabry" target="_blank" rel="noopener">@jgabry&lt;/a>,
&lt;a href="https://github.com/JHonaker" target="_blank" rel="noopener">@JHonaker&lt;/a>,
&lt;a href="https://github.com/jiho" target="_blank" rel="noopener">@jiho&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jimrothstein" target="_blank" rel="noopener">@jimrothstein&lt;/a>,
&lt;a href="https://github.com/jimvine" target="_blank" rel="noopener">@jimvine&lt;/a>,
&lt;a href="https://github.com/jinzhen-lin" target="_blank" rel="noopener">@jinzhen-lin&lt;/a>,
&lt;a href="https://github.com/jjchern" target="_blank" rel="noopener">@jjchern&lt;/a>,
&lt;a href="https://github.com/jlegewie" target="_blank" rel="noopener">@jlegewie&lt;/a>,
&lt;a href="https://github.com/jmpsteen" target="_blank" rel="noopener">@jmpsteen&lt;/a>,
&lt;a href="https://github.com/jmuhlenkamp" target="_blank" rel="noopener">@jmuhlenkamp&lt;/a>,
&lt;a href="https://github.com/jmwerner" target="_blank" rel="noopener">@jmwerner&lt;/a>,
&lt;a href="https://github.com/joelgombin" target="_blank" rel="noopener">@joelgombin&lt;/a>,
&lt;a href="https://github.com/jongbinjung" target="_blank" rel="noopener">@jongbinjung&lt;/a>,
&lt;a href="https://github.com/jonmcalder" target="_blank" rel="noopener">@jonmcalder&lt;/a>,
&lt;a href="https://github.com/jonocarroll" target="_blank" rel="noopener">@jonocarroll&lt;/a>,
&lt;a href="https://github.com/jonthegeek" target="_blank" rel="noopener">@jonthegeek&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/joshuaulrich" target="_blank" rel="noopener">@joshuaulrich&lt;/a>,
&lt;a href="https://github.com/josue-rodriguez" target="_blank" rel="noopener">@josue-rodriguez&lt;/a>,
&lt;a href="https://github.com/jrnold" target="_blank" rel="noopener">@jrnold&lt;/a>,
&lt;a href="https://github.com/jrosen48" target="_blank" rel="noopener">@jrosen48&lt;/a>,
&lt;a href="https://github.com/jschelbert" target="_blank" rel="noopener">@jschelbert&lt;/a>,
&lt;a href="https://github.com/jthurner" target="_blank" rel="noopener">@jthurner&lt;/a>,
&lt;a href="https://github.com/jtr13" target="_blank" rel="noopener">@jtr13&lt;/a>,
&lt;a href="https://github.com/junkka" target="_blank" rel="noopener">@junkka&lt;/a>,
&lt;a href="https://github.com/jwnorman" target="_blank" rel="noopener">@jwnorman&lt;/a>,
&lt;a href="https://github.com/kanishkamisra" target="_blank" rel="noopener">@kanishkamisra&lt;/a>,
&lt;a href="https://github.com/karawoo" target="_blank" rel="noopener">@karawoo&lt;/a>,
&lt;a href="https://github.com/karissawhiting" target="_blank" rel="noopener">@karissawhiting&lt;/a>,
&lt;a href="https://github.com/karldw" target="_blank" rel="noopener">@karldw&lt;/a>,
&lt;a href="https://github.com/katrinleinweber" target="_blank" rel="noopener">@katrinleinweber&lt;/a>,
&lt;a href="https://github.com/keithgw" target="_blank" rel="noopener">@keithgw&lt;/a>,
&lt;a href="https://github.com/kenahoo" target="_blank" rel="noopener">@kenahoo&lt;/a>,
&lt;a href="https://github.com/kendonB" target="_blank" rel="noopener">@kendonB&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/kevinykuo" target="_blank" rel="noopener">@kevinykuo&lt;/a>,
&lt;a href="https://github.com/kforner" target="_blank" rel="noopener">@kforner&lt;/a>,
&lt;a href="https://github.com/khotilov" target="_blank" rel="noopener">@khotilov&lt;/a>,
&lt;a href="https://github.com/kiendang" target="_blank" rel="noopener">@kiendang&lt;/a>,
&lt;a href="https://github.com/kiwiroy" target="_blank" rel="noopener">@kiwiroy&lt;/a>,
&lt;a href="https://github.com/KKulma" target="_blank" rel="noopener">@KKulma&lt;/a>,
&lt;a href="https://github.com/kohske" target="_blank" rel="noopener">@kohske&lt;/a>,
&lt;a href="https://github.com/kopperud" target="_blank" rel="noopener">@kopperud&lt;/a>,
&lt;a href="https://github.com/kos59125" target="_blank" rel="noopener">@kos59125&lt;/a>,
&lt;a href="https://github.com/krivit" target="_blank" rel="noopener">@krivit&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/ktmud" target="_blank" rel="noopener">@ktmud&lt;/a>,
&lt;a href="https://github.com/ktrask" target="_blank" rel="noopener">@ktrask&lt;/a>,
&lt;a href="https://github.com/kwstat" target="_blank" rel="noopener">@kwstat&lt;/a>,
&lt;a href="https://github.com/KZARCA" target="_blank" rel="noopener">@KZARCA&lt;/a>,
&lt;a href="https://github.com/l4u532" target="_blank" rel="noopener">@l4u532&lt;/a>,
&lt;a href="https://github.com/lambiase" target="_blank" rel="noopener">@lambiase&lt;/a>,
&lt;a href="https://github.com/landesbergn" target="_blank" rel="noopener">@landesbergn&lt;/a>,
&lt;a href="https://github.com/larmarange" target="_blank" rel="noopener">@larmarange&lt;/a>,
&lt;a href="https://github.com/lawwu" target="_blank" rel="noopener">@lawwu&lt;/a>,
&lt;a href="https://github.com/lbartnik" target="_blank" rel="noopener">@lbartnik&lt;/a>,
&lt;a href="https://github.com/lbusett" target="_blank" rel="noopener">@lbusett&lt;/a>,
&lt;a href="https://github.com/ledell" target="_blank" rel="noopener">@ledell&lt;/a>,
&lt;a href="https://github.com/leerssej" target="_blank" rel="noopener">@leerssej&lt;/a>,
&lt;a href="https://github.com/lemna" target="_blank" rel="noopener">@lemna&lt;/a>,
&lt;a href="https://github.com/lepennec" target="_blank" rel="noopener">@lepennec&lt;/a>,
&lt;a href="https://github.com/lindbrook" target="_blank" rel="noopener">@lindbrook&lt;/a>,
&lt;a href="https://github.com/LiNk-NY" target="_blank" rel="noopener">@LiNk-NY&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/llrs" target="_blank" rel="noopener">@llrs&lt;/a>,
&lt;a href="https://github.com/LluisRamon" target="_blank" rel="noopener">@LluisRamon&lt;/a>,
&lt;a href="https://github.com/lmullen" target="_blank" rel="noopener">@lmullen&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/lpmi-13" target="_blank" rel="noopener">@lpmi-13&lt;/a>,
&lt;a href="https://github.com/lselzer" target="_blank" rel="noopener">@lselzer&lt;/a>,
&lt;a href="https://github.com/ltobalina" target="_blank" rel="noopener">@ltobalina&lt;/a>,
&lt;a href="https://github.com/LucyMcGowan" target="_blank" rel="noopener">@LucyMcGowan&lt;/a>,
&lt;a href="https://github.com/luisDVA" target="_blank" rel="noopener">@luisDVA&lt;/a>,
&lt;a href="https://github.com/lukesonnet" target="_blank" rel="noopener">@lukesonnet&lt;/a>,
&lt;a href="https://github.com/lwjohnst86" target="_blank" rel="noopener">@lwjohnst86&lt;/a>,
&lt;a href="https://github.com/m-sostero" target="_blank" rel="noopener">@m-sostero&lt;/a>,
&lt;a href="https://github.com/m0nhawk" target="_blank" rel="noopener">@m0nhawk&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/malcolmbarrett" target="_blank" rel="noopener">@malcolmbarrett&lt;/a>,
&lt;a href="https://github.com/MarcusWalz" target="_blank" rel="noopener">@MarcusWalz&lt;/a>,
&lt;a href="https://github.com/mariusbarth" target="_blank" rel="noopener">@mariusbarth&lt;/a>,
&lt;a href="https://github.com/markdly" target="_blank" rel="noopener">@markdly&lt;/a>,
&lt;a href="https://github.com/MarkEdmondson1234" target="_blank" rel="noopener">@MarkEdmondson1234&lt;/a>,
&lt;a href="https://github.com/martin-mfg" target="_blank" rel="noopener">@martin-mfg&lt;/a>,
&lt;a href="https://github.com/martinjhnhadley" target="_blank" rel="noopener">@martinjhnhadley&lt;/a>,
&lt;a href="https://github.com/matthieugomez" target="_blank" rel="noopener">@matthieugomez&lt;/a>,
&lt;a href="https://github.com/MatthieuStigler" target="_blank" rel="noopener">@MatthieuStigler&lt;/a>,
&lt;a href="https://github.com/mattle24" target="_blank" rel="noopener">@mattle24&lt;/a>,
&lt;a href="https://github.com/maurolepore" target="_blank" rel="noopener">@maurolepore&lt;/a>,
&lt;a href="https://github.com/mawds" target="_blank" rel="noopener">@mawds&lt;/a>,
&lt;a href="https://github.com/maxheld83" target="_blank" rel="noopener">@maxheld83&lt;/a>,
&lt;a href="https://github.com/mb706" target="_blank" rel="noopener">@mb706&lt;/a>,
&lt;a href="https://github.com/mbjoseph" target="_blank" rel="noopener">@mbjoseph&lt;/a>,
&lt;a href="https://github.com/mbojan" target="_blank" rel="noopener">@mbojan&lt;/a>,
&lt;a href="https://github.com/mcol" target="_blank" rel="noopener">@mcol&lt;/a>,
&lt;a href="https://github.com/md0u80c9" target="_blank" rel="noopener">@md0u80c9&lt;/a>,
&lt;a href="https://github.com/mdlincoln" target="_blank" rel="noopener">@mdlincoln&lt;/a>,
&lt;a href="https://github.com/medinali" target="_blank" rel="noopener">@medinali&lt;/a>,
&lt;a href="https://github.com/mfansler" target="_blank" rel="noopener">@mfansler&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/mhpedersen" target="_blank" rel="noopener">@mhpedersen&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/michaellevy" target="_blank" rel="noopener">@michaellevy&lt;/a>,
&lt;a href="https://github.com/michaelquinn32" target="_blank" rel="noopener">@michaelquinn32&lt;/a>,
&lt;a href="https://github.com/michaelweylandt" target="_blank" rel="noopener">@michaelweylandt&lt;/a>,
&lt;a href="https://github.com/mikmart" target="_blank" rel="noopener">@mikmart&lt;/a>,
&lt;a href="https://github.com/MilesMcBain" target="_blank" rel="noopener">@MilesMcBain&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/mingwandroid" target="_blank" rel="noopener">@mingwandroid&lt;/a>,
&lt;a href="https://github.com/mitchelloharawild" target="_blank" rel="noopener">@mitchelloharawild&lt;/a>,
&lt;a href="https://github.com/mjskay" target="_blank" rel="noopener">@mjskay&lt;/a>,
&lt;a href="https://github.com/mkcor" target="_blank" rel="noopener">@mkcor&lt;/a>,
&lt;a href="https://github.com/mkearney" target="_blank" rel="noopener">@mkearney&lt;/a>,
&lt;a href="https://github.com/mkuehn10" target="_blank" rel="noopener">@mkuehn10&lt;/a>,
&lt;a href="https://github.com/mllg" target="_blank" rel="noopener">@mllg&lt;/a>,
&lt;a href="https://github.com/mlysy" target="_blank" rel="noopener">@mlysy&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/moslehi" target="_blank" rel="noopener">@moslehi&lt;/a>,
&lt;a href="https://github.com/mpadge" target="_blank" rel="noopener">@mpadge&lt;/a>,
&lt;a href="https://github.com/mpancia" target="_blank" rel="noopener">@mpancia&lt;/a>,
&lt;a href="https://github.com/mrchypark" target="_blank" rel="noopener">@mrchypark&lt;/a>,
&lt;a href="https://github.com/mrtns" target="_blank" rel="noopener">@mrtns&lt;/a>,
&lt;a href="https://github.com/mruessler" target="_blank" rel="noopener">@mruessler&lt;/a>,
&lt;a href="https://github.com/mtmorgan" target="_blank" rel="noopener">@mtmorgan&lt;/a>,
&lt;a href="https://github.com/Mullefa" target="_blank" rel="noopener">@Mullefa&lt;/a>,
&lt;a href="https://github.com/mundl" target="_blank" rel="noopener">@mundl&lt;/a>,
&lt;a href="https://github.com/muschellij2" target="_blank" rel="noopener">@muschellij2&lt;/a>,
&lt;a href="https://github.com/mvevans89" target="_blank" rel="noopener">@mvevans89&lt;/a>,
&lt;a href="https://github.com/mvkorpel" target="_blank" rel="noopener">@mvkorpel&lt;/a>,
&lt;a href="https://github.com/mwaldstein" target="_blank" rel="noopener">@mwaldstein&lt;/a>,
&lt;a href="https://github.com/nacnudus" target="_blank" rel="noopener">@nacnudus&lt;/a>,
&lt;a href="https://github.com/namelessjon" target="_blank" rel="noopener">@namelessjon&lt;/a>,
&lt;a href="https://github.com/nbenn" target="_blank" rel="noopener">@nbenn&lt;/a>,
&lt;a href="https://github.com/nealrichardson" target="_blank" rel="noopener">@nealrichardson&lt;/a>,
&lt;a href="https://github.com/neilmontgomery" target="_blank" rel="noopener">@neilmontgomery&lt;/a>,
&lt;a href="https://github.com/nfultz" target="_blank" rel="noopener">@nfultz&lt;/a>,
&lt;a href="https://github.com/nhamilton1980" target="_blank" rel="noopener">@nhamilton1980&lt;/a>,
&lt;a href="https://github.com/Nick-Rivera" target="_blank" rel="noopener">@Nick-Rivera&lt;/a>,
&lt;a href="https://github.com/nijibabulu" target="_blank" rel="noopener">@nijibabulu&lt;/a>,
&lt;a href="https://github.com/njtierney" target="_blank" rel="noopener">@njtierney&lt;/a>,
&lt;a href="https://github.com/nmattia" target="_blank" rel="noopener">@nmattia&lt;/a>,
&lt;a href="https://github.com/noamross" target="_blank" rel="noopener">@noamross&lt;/a>,
&lt;a href="https://github.com/ntdef" target="_blank" rel="noopener">@ntdef&lt;/a>,
&lt;a href="https://github.com/nuest" target="_blank" rel="noopener">@nuest&lt;/a>,
&lt;a href="https://github.com/nutterb" target="_blank" rel="noopener">@nutterb&lt;/a>,
&lt;a href="https://github.com/nzxwang" target="_blank" rel="noopener">@nzxwang&lt;/a>,
&lt;a href="https://github.com/odeleongt" target="_blank" rel="noopener">@odeleongt&lt;/a>,
&lt;a href="https://github.com/oscardssmith" target="_blank" rel="noopener">@oscardssmith&lt;/a>,
&lt;a href="https://github.com/osorensen" target="_blank" rel="noopener">@osorensen&lt;/a>,
&lt;a href="https://github.com/overmar" target="_blank" rel="noopener">@overmar&lt;/a>,
&lt;a href="https://github.com/pachevalier" target="_blank" rel="noopener">@pachevalier&lt;/a>,
&lt;a href="https://github.com/pank" target="_blank" rel="noopener">@pank&lt;/a>,
&lt;a href="https://github.com/pat-s" target="_blank" rel="noopener">@pat-s&lt;/a>,
&lt;a href="https://github.com/patperry" target="_blank" rel="noopener">@patperry&lt;/a>,
&lt;a href="https://github.com/paul-buerkner" target="_blank" rel="noopener">@paul-buerkner&lt;/a>,
&lt;a href="https://github.com/paulponcet" target="_blank" rel="noopener">@paulponcet&lt;/a>,
&lt;a href="https://github.com/pavel-filatov" target="_blank" rel="noopener">@pavel-filatov&lt;/a>,
&lt;a href="https://github.com/Paxanator" target="_blank" rel="noopener">@Paxanator&lt;/a>,
&lt;a href="https://github.com/peterdesmet" target="_blank" rel="noopener">@peterdesmet&lt;/a>,
&lt;a href="https://github.com/peterhartman" target="_blank" rel="noopener">@peterhartman&lt;/a>,
&lt;a href="https://github.com/petermeissner" target="_blank" rel="noopener">@petermeissner&lt;/a>,
&lt;a href="https://github.com/pgensler" target="_blank" rel="noopener">@pgensler&lt;/a>,
&lt;a href="https://github.com/phaverty" target="_blank" rel="noopener">@phaverty&lt;/a>,
&lt;a href="https://github.com/philmikejones" target="_blank" rel="noopener">@philmikejones&lt;/a>,
&lt;a href="https://github.com/pierreroudier" target="_blank" rel="noopener">@pierreroudier&lt;/a>,
&lt;a href="https://github.com/PirateGrunt" target="_blank" rel="noopener">@PirateGrunt&lt;/a>,
&lt;a href="https://github.com/pitakakariki" target="_blank" rel="noopener">@pitakakariki&lt;/a>,
&lt;a href="https://github.com/pjpaulpj" target="_blank" rel="noopener">@pjpaulpj&lt;/a>,
&lt;a href="https://github.com/pkq" target="_blank" rel="noopener">@pkq&lt;/a>,
&lt;a href="https://github.com/pkrog" target="_blank" rel="noopener">@pkrog&lt;/a>,
&lt;a href="https://github.com/pmenzel" target="_blank" rel="noopener">@pmenzel&lt;/a>,
&lt;a href="https://github.com/PoGibas" target="_blank" rel="noopener">@PoGibas&lt;/a>,
&lt;a href="https://github.com/pohzipohzi" target="_blank" rel="noopener">@pohzipohzi&lt;/a>,
&lt;a href="https://github.com/privefl" target="_blank" rel="noopener">@privefl&lt;/a>,
&lt;a href="https://github.com/prosoitos" target="_blank" rel="noopener">@prosoitos&lt;/a>,
&lt;a href="https://github.com/puterleat" target="_blank" rel="noopener">@puterleat&lt;/a>,
&lt;a href="https://github.com/pzingg" target="_blank" rel="noopener">@pzingg&lt;/a>,
&lt;a href="https://github.com/quartin" target="_blank" rel="noopener">@quartin&lt;/a>,
&lt;a href="https://github.com/QuLogic" target="_blank" rel="noopener">@QuLogic&lt;/a>,
&lt;a href="https://github.com/r2evans" target="_blank" rel="noopener">@r2evans&lt;/a>,
&lt;a href="https://github.com/raffscallion" target="_blank" rel="noopener">@raffscallion&lt;/a>,
&lt;a href="https://github.com/rajanand" target="_blank" rel="noopener">@rajanand&lt;/a>,
&lt;a href="https://github.com/ramnathv" target="_blank" rel="noopener">@ramnathv&lt;/a>,
&lt;a href="https://github.com/randy3k" target="_blank" rel="noopener">@randy3k&lt;/a>,
&lt;a href="https://github.com/ras44" target="_blank" rel="noopener">@ras44&lt;/a>,
&lt;a href="https://github.com/rasmusab" target="_blank" rel="noopener">@rasmusab&lt;/a>,
&lt;a href="https://github.com/rbloehm" target="_blank" rel="noopener">@rbloehm&lt;/a>,
&lt;a href="https://github.com/rcannood" target="_blank" rel="noopener">@rcannood&lt;/a>,
&lt;a href="https://github.com/realAkhmed" target="_blank" rel="noopener">@realAkhmed&lt;/a>,
&lt;a href="https://github.com/Rekyt" target="_blank" rel="noopener">@Rekyt&lt;/a>,
&lt;a href="https://github.com/RemkoDuursma" target="_blank" rel="noopener">@RemkoDuursma&lt;/a>,
&lt;a href="https://github.com/renkun-ken" target="_blank" rel="noopener">@renkun-ken&lt;/a>,
&lt;a href="https://github.com/renozao" target="_blank" rel="noopener">@renozao&lt;/a>,
&lt;a href="https://github.com/rensa" target="_blank" rel="noopener">@rensa&lt;/a>,
&lt;a href="https://github.com/rentrop" target="_blank" rel="noopener">@rentrop&lt;/a>,
&lt;a href="https://github.com/riccardopinosio" target="_blank" rel="noopener">@riccardopinosio&lt;/a>,
&lt;a href="https://github.com/RichardJActon" target="_blank" rel="noopener">@RichardJActon&lt;/a>,
&lt;a href="https://github.com/richardkunze" target="_blank" rel="noopener">@richardkunze&lt;/a>,
&lt;a href="https://github.com/richfitz" target="_blank" rel="noopener">@richfitz&lt;/a>,
&lt;a href="https://github.com/richierocks" target="_blank" rel="noopener">@richierocks&lt;/a>,
&lt;a href="https://github.com/rkahne" target="_blank" rel="noopener">@rkahne&lt;/a>,
&lt;a href="https://github.com/RLesur" target="_blank" rel="noopener">@RLesur&lt;/a>,
&lt;a href="https://github.com/rmatkins" target="_blank" rel="noopener">@rmatkins&lt;/a>,
&lt;a href="https://github.com/rmflight" target="_blank" rel="noopener">@rmflight&lt;/a>,
&lt;a href="https://github.com/rnuske" target="_blank" rel="noopener">@rnuske&lt;/a>,
&lt;a href="https://github.com/robertzk" target="_blank" rel="noopener">@robertzk&lt;/a>,
&lt;a href="https://github.com/Robinlovelace" target="_blank" rel="noopener">@Robinlovelace&lt;/a>,
&lt;a href="https://github.com/robinsones" target="_blank" rel="noopener">@robinsones&lt;/a>,
&lt;a href="https://github.com/robkar" target="_blank" rel="noopener">@robkar&lt;/a>,
&lt;a href="https://github.com/RolandASc" target="_blank" rel="noopener">@RolandASc&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/romunov" target="_blank" rel="noopener">@romunov&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/rsaporta" target="_blank" rel="noopener">@rsaporta&lt;/a>,
&lt;a href="https://github.com/rstub" target="_blank" rel="noopener">@rstub&lt;/a>,
&lt;a href="https://github.com/rtaph" target="_blank" rel="noopener">@rtaph&lt;/a>,
&lt;a href="https://github.com/rtobar" target="_blank" rel="noopener">@rtobar&lt;/a>,
&lt;a href="https://github.com/ruaridhw" target="_blank" rel="noopener">@ruaridhw&lt;/a>,
&lt;a href="https://github.com/rudeboybert" target="_blank" rel="noopener">@rudeboybert&lt;/a>,
&lt;a href="https://github.com/ryanatanner" target="_blank" rel="noopener">@ryanatanner&lt;/a>,
&lt;a href="https://github.com/ryapric" target="_blank" rel="noopener">@ryapric&lt;/a>,
&lt;a href="https://github.com/s-fleck" target="_blank" rel="noopener">@s-fleck&lt;/a>,
&lt;a href="https://github.com/sachsmc" target="_blank" rel="noopener">@sachsmc&lt;/a>,
&lt;a href="https://github.com/saghirb" target="_blank" rel="noopener">@saghirb&lt;/a>,
&lt;a href="https://github.com/salim-b" target="_blank" rel="noopener">@salim-b&lt;/a>,
&lt;a href="https://github.com/samssann" target="_blank" rel="noopener">@samssann&lt;/a>,
&lt;a href="https://github.com/samzhang111" target="_blank" rel="noopener">@samzhang111&lt;/a>,
&lt;a href="https://github.com/sandan" target="_blank" rel="noopener">@sandan&lt;/a>,
&lt;a href="https://github.com/saurfang" target="_blank" rel="noopener">@saurfang&lt;/a>,
&lt;a href="https://github.com/schloerke" target="_blank" rel="noopener">@schloerke&lt;/a>,
&lt;a href="https://github.com/schoonees" target="_blank" rel="noopener">@schoonees&lt;/a>,
&lt;a href="https://github.com/seaaan" target="_blank" rel="noopener">@seaaan&lt;/a>,
&lt;a href="https://github.com/seanpor" target="_blank" rel="noopener">@seanpor&lt;/a>,
&lt;a href="https://github.com/setempler" target="_blank" rel="noopener">@setempler&lt;/a>,
&lt;a href="https://github.com/sflippl" target="_blank" rel="noopener">@sflippl&lt;/a>,
&lt;a href="https://github.com/shabbybanks" target="_blank" rel="noopener">@shabbybanks&lt;/a>,
&lt;a href="https://github.com/shrektan" target="_blank" rel="noopener">@shrektan&lt;/a>,
&lt;a href="https://github.com/ShreyasSingh" target="_blank" rel="noopener">@ShreyasSingh&lt;/a>,
&lt;a href="https://github.com/siddharthab" target="_blank" rel="noopener">@siddharthab&lt;/a>,
&lt;a href="https://github.com/sinhrks" target="_blank" rel="noopener">@sinhrks&lt;/a>,
&lt;a href="https://github.com/sjackman" target="_blank" rel="noopener">@sjackman&lt;/a>,
&lt;a href="https://github.com/slnovak" target="_blank" rel="noopener">@slnovak&lt;/a>,
&lt;a href="https://github.com/slowkow" target="_blank" rel="noopener">@slowkow&lt;/a>,
&lt;a href="https://github.com/smaakage85" target="_blank" rel="noopener">@smaakage85&lt;/a>,
&lt;a href="https://github.com/snaut" target="_blank" rel="noopener">@snaut&lt;/a>,
&lt;a href="https://github.com/sowla" target="_blank" rel="noopener">@sowla&lt;/a>,
&lt;a href="https://github.com/statist7" target="_blank" rel="noopener">@statist7&lt;/a>,
&lt;a href="https://github.com/statwonk" target="_blank" rel="noopener">@statwonk&lt;/a>,
&lt;a href="https://github.com/stefanfritsch" target="_blank" rel="noopener">@stefanfritsch&lt;/a>,
&lt;a href="https://github.com/stillmatic" target="_blank" rel="noopener">@stillmatic&lt;/a>,
&lt;a href="https://github.com/stragu" target="_blank" rel="noopener">@stragu&lt;/a>,
&lt;a href="https://github.com/superchordate" target="_blank" rel="noopener">@superchordate&lt;/a>,
&lt;a href="https://github.com/surmann" target="_blank" rel="noopener">@surmann&lt;/a>,
&lt;a href="https://github.com/suzanbaert" target="_blank" rel="noopener">@suzanbaert&lt;/a>,
&lt;a href="https://github.com/sverchkov" target="_blank" rel="noopener">@sverchkov&lt;/a>,
&lt;a href="https://github.com/t-kalinowski" target="_blank" rel="noopener">@t-kalinowski&lt;/a>,
&lt;a href="https://github.com/talgalili" target="_blank" rel="noopener">@talgalili&lt;/a>,
&lt;a href="https://github.com/tareefk" target="_blank" rel="noopener">@tareefk&lt;/a>,
&lt;a href="https://github.com/tdsmith" target="_blank" rel="noopener">@tdsmith&lt;/a>,
&lt;a href="https://github.com/tereom" target="_blank" rel="noopener">@tereom&lt;/a>,
&lt;a href="https://github.com/terrytangyuan" target="_blank" rel="noopener">@terrytangyuan&lt;/a>,
&lt;a href="https://github.com/theGreatWhiteShark" target="_blank" rel="noopener">@theGreatWhiteShark&lt;/a>,
&lt;a href="https://github.com/ThierryO" target="_blank" rel="noopener">@ThierryO&lt;/a>,
&lt;a href="https://github.com/thisisnic" target="_blank" rel="noopener">@thisisnic&lt;/a>,
&lt;a href="https://github.com/thomascwells" target="_blank" rel="noopener">@thomascwells&lt;/a>,
&lt;a href="https://github.com/thomasp85" target="_blank" rel="noopener">@thomasp85&lt;/a>,
&lt;a href="https://github.com/tigertoes" target="_blank" rel="noopener">@tigertoes&lt;/a>,
&lt;a href="https://github.com/timgoodman" target="_blank" rel="noopener">@timgoodman&lt;/a>,
&lt;a href="https://github.com/timtrice" target="_blank" rel="noopener">@timtrice&lt;/a>,
&lt;a href="https://github.com/tmastny" target="_blank" rel="noopener">@tmastny&lt;/a>,
&lt;a href="https://github.com/tnagler" target="_blank" rel="noopener">@tnagler&lt;/a>,
&lt;a href="https://github.com/tonytonov" target="_blank" rel="noopener">@tonytonov&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/truemoid" target="_blank" rel="noopener">@truemoid&lt;/a>,
&lt;a href="https://github.com/tstev" target="_blank" rel="noopener">@tstev&lt;/a>,
&lt;a href="https://github.com/tyluRp" target="_blank" rel="noopener">@tyluRp&lt;/a>,
&lt;a href="https://github.com/uribo" target="_blank" rel="noopener">@uribo&lt;/a>,
&lt;a href="https://github.com/vkapartzianis" target="_blank" rel="noopener">@vkapartzianis&lt;/a>,
&lt;a href="https://github.com/vnijs" target="_blank" rel="noopener">@vnijs&lt;/a>,
&lt;a href="https://github.com/vsabarly" target="_blank" rel="noopener">@vsabarly&lt;/a>,
&lt;a href="https://github.com/washcycle" target="_blank" rel="noopener">@washcycle&lt;/a>,
&lt;a href="https://github.com/wch" target="_blank" rel="noopener">@wch&lt;/a>,
&lt;a href="https://github.com/wenjie2wang" target="_blank" rel="noopener">@wenjie2wang&lt;/a>,
&lt;a href="https://github.com/wibeasley" target="_blank" rel="noopener">@wibeasley&lt;/a>,
&lt;a href="https://github.com/wilkox" target="_blank" rel="noopener">@wilkox&lt;/a>,
&lt;a href="https://github.com/wilsonfreitas" target="_blank" rel="noopener">@wilsonfreitas&lt;/a>,
&lt;a href="https://github.com/wjakethompson" target="_blank" rel="noopener">@wjakethompson&lt;/a>,
&lt;a href="https://github.com/wlandau" target="_blank" rel="noopener">@wlandau&lt;/a>,
&lt;a href="https://github.com/xhdong-umd" target="_blank" rel="noopener">@xhdong-umd&lt;/a>,
&lt;a href="https://github.com/xvrdm" target="_blank" rel="noopener">@xvrdm&lt;/a>,
&lt;a href="https://github.com/yatharth" target="_blank" rel="noopener">@yatharth&lt;/a>,
&lt;a href="https://github.com/yihui" target="_blank" rel="noopener">@yihui&lt;/a>,
&lt;a href="https://github.com/yiluheihei" target="_blank" rel="noopener">@yiluheihei&lt;/a>,
&lt;a href="https://github.com/yiufung" target="_blank" rel="noopener">@yiufung&lt;/a>,
&lt;a href="https://github.com/yonicd" target="_blank" rel="noopener">@yonicd&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>,
&lt;a href="https://github.com/zachary-foster" target="_blank" rel="noopener">@zachary-foster&lt;/a>,
&lt;a href="https://github.com/zappingseb" target="_blank" rel="noopener">@zappingseb&lt;/a>,
&lt;a href="https://github.com/zeehio" target="_blank" rel="noopener">@zeehio&lt;/a>,
&lt;a href="https://github.com/zkamvar" target="_blank" rel="noopener">@zkamvar&lt;/a>,
&lt;a href="https://github.com/ZoidbergIII" target="_blank" rel="noopener">@ZoidbergIII&lt;/a>,
&lt;a href="https://github.com/zozlak" target="_blank" rel="noopener">@zozlak&lt;/a>, and
&lt;a href="https://github.com/Zsedo" target="_blank" rel="noopener">@Zsedo&lt;/a>.&lt;/p></description></item><item><title>pkgdown 1.3.0</title><link>https://www.tidyverse.org/blog/2018/12/pkgdown-1-3-0/</link><pubDate>Mon, 10 Dec 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/12/pkgdown-1-3-0/</guid><description>&lt;p>We&amp;rsquo;re happy to announce that
&lt;a href="https://pkgdown.r-lib.org/" target="_blank" rel="noopener">pkgdown&lt;/a> 1.3.0 is now
available on CRAN. pkgdown is designed to make it quick and easy to build a
website for your package. Here, we&amp;rsquo;ll highlight some of the new features, and
improvements in this version. Note, this blog post describes pkgdown 1.2.0
and 1.3.0, because we accidentally released 1.3.0 instead of 1.2.1. For a full
list of changes, please see the
&lt;a href="https://github.com/r-lib/pkgdown/blob/master/NEWS.md#pkgdown-120" target="_blank" rel="noopener">NEWS&lt;/a>.&lt;/p>
&lt;h2 id="new-features">New features
&lt;a href="#new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The new
&lt;a href="https://pkgdown.r-lib.org/reference/deploy_site_github.html" target="_blank" rel="noopener">&lt;code>deploy_site_github()&lt;/code>&lt;/a>
function can be used to automatically deploy your package website to GitHub
Pages with continuous integration systems (like
&lt;a href="https://travis-ci.org/" target="_blank" rel="noopener">travis&lt;/a>). Setup details can be found
&lt;a href="https://pkgdown.r-lib.org/reference/deploy_site_github.html#setup" target="_blank" rel="noopener">here&lt;/a>. We
are gradually moving all tidyverse sites to use this process so that they&amp;rsquo;re
always up-to-date.&lt;/p>
&lt;p>
&lt;a href="https://pkgdown.r-lib.org/reference/build_favicon.html" target="_blank" rel="noopener">&lt;code>build_favicon()&lt;/code>&lt;/a>
auto-detects the location of your package logo, and runs it through the
&lt;a href="https://realfavicongenerator.net">https://realfavicongenerator.net&lt;/a> API to build a complete set of favicons with
different sizes.&lt;/p>
&lt;p>Lastly, users with limited internet connectivity can now expressly disable
pkgdown&amp;rsquo;s internet usage by setting &lt;code>options(pkgdown.internet = FALSE)&lt;/code>.&lt;/p>
&lt;h2 id="front-end-improvements">Front-end improvements
&lt;a href="#front-end-improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>All third-party resources are now fetched from a single CDN and are given an SRI
hash. The package version displayed in the navbar now has &lt;code>class=&amp;quot;version&amp;quot;&lt;/code>,
which should make it easier to customize its appearance. The default footer now
displays the version of pkgdown used to build the site. You&amp;rsquo;ll need to run this
once and check in the generated files.&lt;/p>
&lt;h2 id="rd-translation">Rd translation
&lt;a href="#rd-translation">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;a href="https://pkgdown.r-lib.org/reference/rd2html.html" target="_blank" rel="noopener">&lt;code>rd2html()&lt;/code>&lt;/a> is now
exported to facilitate creation of translation reprexes.&lt;/li>
&lt;li>Invalid tags now generate more informative errors.&lt;/li>
&lt;li>&lt;code>\usage{}&lt;/code> now supports qualified functions, eliminating &lt;code>Unknown call: ::&lt;/code>
errors.&lt;/li>
&lt;/ul>
&lt;p>Again, these are just some of the updates, so please be sure to see the
&lt;a href="https://pkgdown.r-lib.org/news/index.html#pkgdown-1-2-0" target="_blank" rel="noopener">change
log&lt;/a> for a more
exhaustive inventory.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thank you goes out to the 59 people who contributed to this release:
&lt;a href="https://github.com/alexpghayes" target="_blank" rel="noopener">@alexpghayes&lt;/a>,
&lt;a href="https://github.com/aqualogy" target="_blank" rel="noopener">@aqualogy&lt;/a>,
&lt;a href="https://github.com/aravind-j" target="_blank" rel="noopener">@aravind-j&lt;/a>,
&lt;a href="https://github.com/arilamstein" target="_blank" rel="noopener">@arilamstein&lt;/a>,
&lt;a href="https://github.com/ArtemSokolov" target="_blank" rel="noopener">@ArtemSokolov&lt;/a>,
&lt;a href="https://github.com/BarkleyBG" target="_blank" rel="noopener">@BarkleyBG&lt;/a>,
&lt;a href="https://github.com/bastistician" target="_blank" rel="noopener">@bastistician&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/BruceZhaoR" target="_blank" rel="noopener">@BruceZhaoR&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/daviddoret" target="_blank" rel="noopener">@daviddoret&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dongzhuoer" target="_blank" rel="noopener">@dongzhuoer&lt;/a>,
&lt;a href="https://github.com/Dripdrop12" target="_blank" rel="noopener">@Dripdrop12&lt;/a>,
&lt;a href="https://github.com/Fazendaaa" target="_blank" rel="noopener">@Fazendaaa&lt;/a>,
&lt;a href="https://github.com/GeoBosh" target="_blank" rel="noopener">@GeoBosh&lt;/a>,
&lt;a href="https://github.com/goldingn" target="_blank" rel="noopener">@goldingn&lt;/a>,
&lt;a href="https://github.com/GregorDeCillia" target="_blank" rel="noopener">@GregorDeCillia&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">@HenrikBengtsson&lt;/a>,
&lt;a href="https://github.com/HughParsonage" target="_blank" rel="noopener">@HughParsonage&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jameslamb" target="_blank" rel="noopener">@jameslamb&lt;/a>,
&lt;a href="https://github.com/jayhesselberth" target="_blank" rel="noopener">@jayhesselberth&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/JiaxiangBU" target="_blank" rel="noopener">@JiaxiangBU&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jmgirard" target="_blank" rel="noopener">@jmgirard&lt;/a>,
&lt;a href="https://github.com/JohnMount" target="_blank" rel="noopener">@JohnMount&lt;/a>,
&lt;a href="https://github.com/jpzhangvincent" target="_blank" rel="noopener">@jpzhangvincent&lt;/a>,
&lt;a href="https://github.com/KasperSkytte" target="_blank" rel="noopener">@KasperSkytte&lt;/a>,
&lt;a href="https://github.com/kenahoo" target="_blank" rel="noopener">@kenahoo&lt;/a>,
&lt;a href="https://github.com/klmr" target="_blank" rel="noopener">@klmr&lt;/a>,
&lt;a href="https://github.com/koheiw" target="_blank" rel="noopener">@koheiw&lt;/a>,
&lt;a href="https://github.com/kopperud" target="_blank" rel="noopener">@kopperud&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/liao961120" target="_blank" rel="noopener">@liao961120&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/lrutter" target="_blank" rel="noopener">@lrutter&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/maurolepore" target="_blank" rel="noopener">@maurolepore&lt;/a>,
&lt;a href="https://github.com/maxheld83" target="_blank" rel="noopener">@maxheld83&lt;/a>,
&lt;a href="https://github.com/md0u80c9" target="_blank" rel="noopener">@md0u80c9&lt;/a>,
&lt;a href="https://github.com/mllg" target="_blank" rel="noopener">@mllg&lt;/a>,
&lt;a href="https://github.com/mrchypark" target="_blank" rel="noopener">@mrchypark&lt;/a>,
&lt;a href="https://github.com/mvinaixa" target="_blank" rel="noopener">@mvinaixa&lt;/a>,
&lt;a href="https://github.com/nbenn" target="_blank" rel="noopener">@nbenn&lt;/a>,
&lt;a href="https://github.com/pat-s" target="_blank" rel="noopener">@pat-s&lt;/a>,
&lt;a href="https://github.com/pbreheny" target="_blank" rel="noopener">@pbreheny&lt;/a>,
&lt;a href="https://github.com/peterdesmet" target="_blank" rel="noopener">@peterdesmet&lt;/a>,
&lt;a href="https://github.com/petermeissner" target="_blank" rel="noopener">@petermeissner&lt;/a>,
&lt;a href="https://github.com/Robinlovelace" target="_blank" rel="noopener">@Robinlovelace&lt;/a>,
&lt;a href="https://github.com/strengejacke" target="_blank" rel="noopener">@strengejacke&lt;/a>,
&lt;a href="https://github.com/thiloklein" target="_blank" rel="noopener">@thiloklein&lt;/a>,
&lt;a href="https://github.com/venelin" target="_blank" rel="noopener">@venelin&lt;/a>,
&lt;a href="https://github.com/wenjie2wang" target="_blank" rel="noopener">@wenjie2wang&lt;/a>,
&lt;a href="https://github.com/yihui" target="_blank" rel="noopener">@yihui&lt;/a>, and
&lt;a href="https://github.com/yonicd" target="_blank" rel="noopener">@yonicd&lt;/a>.&lt;/p></description></item><item><title>generics 0.0.1</title><link>https://www.tidyverse.org/blog/2018/11/generics-0.0.1/</link><pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/11/generics-0.0.1/</guid><description>&lt;p>The
&lt;a href="https://github.com/r-lib/generics" target="_blank" rel="noopener">&lt;code>generics&lt;/code>&lt;/a> package is now on CRAN. &lt;code>generics&lt;/code> is a lightweight package that is designed to help developers reduce dependencies for their packages.&lt;/p>
&lt;p>The idea is to have many generic S3 functions live in a single package that has almost no dependencies. Normally, if you wanted to create a &lt;code>broom::tidy()&lt;/code> method, you would import &lt;code>broom&lt;/code> as a dependency, import the &lt;code>tidy()&lt;/code> generic, then export it so that package users can have access to that specific method. One issue with this is that your package now carries along the dependencies of the package that defines the generic (in this case, &lt;code>broom&lt;/code>).&lt;/p>
&lt;p>Consider &lt;code>fit()&lt;/code>. There are at least 15 packages that export an object called &lt;code>fit&lt;/code> (either a function or method), and at least 12 have specific S3 &lt;code>fit()&lt;/code> methods. When more than one is loaded, there is a potential for conflicts to arise:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NMF&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text2vec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Attaching package: &amp;#39;text2vec&amp;#39;&lt;/span>
&lt;span class="c1">#&amp;gt; The following object is masked from &amp;#39;package:NMF&amp;#39;:&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; fit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>generics&lt;/code> provides a way to avoid such conflicts. To do so, a package would include &lt;code>generics&lt;/code> as an import dependency, import the generic function of interest, then re-export using the &lt;code>roxygen2&lt;/code> commands:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1">#&amp;#39; @importFrom generics fit&lt;/span>
&lt;span class="c1">#&amp;#39; @export&lt;/span>
&lt;span class="n">generics&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">fit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>One interesting aspect of the package is that the &lt;code>generics&lt;/code> function documentation is dynamic. Suppose that &lt;code>generics&lt;/code> is loaded in a clean R session. If you look at the help file &lt;code>?generics::tidy&lt;/code>, the documentation page has:&lt;/p>
&lt;pre>&lt;code>Methods:
No methods found in currently loaded packages.
&lt;/code>&lt;/pre>&lt;p>However, once another package is loaded with an exported &lt;code>tidy()&lt;/code> method, &lt;code>?generics::tidy&lt;/code> shows a list of all exported methods and includes a link to the help page specific to each one. For example, after loading the &lt;code>embed&lt;/code> package:&lt;/p>
&lt;pre>&lt;code>Methods:
See the following help topics for more details about individual
methods:
‘embed’
• ‘step_embed’: ‘step_embed’
• ‘step_lencode_bayes’: ‘step_lencode_bayes’
• ‘step_lencode_glm’: ‘step_lencode_glm’
• ‘step_lencode_mixed’: ‘step_lencode_mixed’
‘recipes’
• ‘check_cols’: ‘check_cols’
• ‘check_missing’: ‘check_missing’
• ‘check_range’: ‘check_range’
&lt;/code>&lt;/pre>&lt;p>The current list of S3 generics that are included in the package are: &lt;code>as.factor&lt;/code>, &lt;code>as.ordered&lt;/code>, &lt;code>augment&lt;/code>, &lt;code>calculate&lt;/code>, &lt;code>compile&lt;/code>, &lt;code>components&lt;/code>, &lt;code>equation&lt;/code>, &lt;code>estfun&lt;/code>, &lt;code>evaluate&lt;/code>, &lt;code>explain&lt;/code>, &lt;code>fit&lt;/code>, &lt;code>fit_xy&lt;/code>, &lt;code>generate&lt;/code>, &lt;code>glance&lt;/code>, &lt;code>hypothesize&lt;/code>, &lt;code>interpolate&lt;/code>, &lt;code>intersect&lt;/code>, &lt;code>is.element&lt;/code>, &lt;code>learn&lt;/code>, &lt;code>prune&lt;/code>, &lt;code>refit&lt;/code>, &lt;code>setdiff&lt;/code>, &lt;code>setequal&lt;/code>, &lt;code>specify&lt;/code>, &lt;code>tidy&lt;/code>, &lt;code>train&lt;/code>, &lt;code>union&lt;/code>, &lt;code>var_imp&lt;/code>, &lt;code>varying_args&lt;/code>, and &lt;code>visualize&lt;/code>.&lt;/p>
&lt;p>Thanks to those who contributed to the discussion prior to releasing the package: Achim Zeileis, Alex Hayes, Andrew Bray, Andy Liaw, Chester Ismay, Davis Vaughan, Hadley Wickham, Mitchell O&amp;rsquo;Hara-Wild, Przemyslaw Biecek, Rob Hyndman, Thomas Lin Pedersen, and Torsten Hothorn.&lt;/p></description></item><item><title>devtools 2.0.0</title><link>https://www.tidyverse.org/blog/2018/10/devtools-2-0-0/</link><pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/10/devtools-2-0-0/</guid><description>
&lt;h2 id="introduction">Introduction
&lt;a href="#introduction">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://devtools.r-lib.org" target="_blank" rel="noopener">devtools&lt;/a> 2.0.0 is now on CRAN!&lt;/p>
&lt;p>devtools makes package development easier by providing R functions that
simplify and expedite common tasks.
&lt;a href="http://r-pkgs.had.co.nz/" target="_blank" rel="noopener">R Packages&lt;/a> is a book based around this
workflow.&lt;/p>
&lt;p>devtools 2.0.0 is a major release! It contains all work from the last major
release (1.13.0) more than a year and a half ago!&lt;/p>
&lt;h2 id="breaking-changes">Breaking changes
&lt;a href="#breaking-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>There are a handful of breaking changes in this release, mainly done in the
interest of simplifying and standardizing the function APIs.&lt;/p>
&lt;p>The changes should affect relatively little user code, but have required
developers to make changes. Common errors and ways to work around them
as well as the full list of changes can be found in the
&lt;a href="https://devtools.r-lib.org/news/index.html#breaking-changes" target="_blank" rel="noopener">Breaking
changes&lt;/a>
section of devtools&amp;rsquo;
&lt;a href="https://github.com/r-lib/devtools/blob/master/NEWS.md" target="_blank" rel="noopener">NEWS&lt;/a>. If you
discover something missing, please let us know so we can add it.&lt;/p>
&lt;h2 id="conscious-uncoupling">Conscious uncoupling
&lt;a href="#conscious-uncoupling">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This release splits the functionality in devtools into a number of smaller
packages which are simpler to develop and also easier for other packages to
depend on. In particular the following packages have been spun off in what we
are calling the
&lt;a href="https://web.archive.org/web/20140326060230/http://www.goop.com/journal/be/conscious-uncoupling" target="_blank" rel="noopener">conscious uncoupling&lt;/a> of devtools.&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://remotes.r-lib.org" target="_blank" rel="noopener">remotes&lt;/a>: Installs packages (e.g.
&lt;code>install_github()&lt;/code>).&lt;/li>
&lt;li>
&lt;a href="https://github.com/r-lib/pkgbuild" target="_blank" rel="noopener">pkgbuild&lt;/a>: Builds binary packages
(including checking if build tools are available) (e.g. &lt;code>build()&lt;/code>).&lt;/li>
&lt;li>
&lt;a href="https://github.com/r-lib/pkgload" target="_blank" rel="noopener">pkgload&lt;/a>: Simulates package loading (e.g.
&lt;code>load_all()&lt;/code>).&lt;/li>
&lt;li>
&lt;a href="https://github.com/r-lib/rcmdcheck" target="_blank" rel="noopener">rcmdcheck&lt;/a>: Runs &lt;code>R CMD check&lt;/code> and
reports the results (e.g. &lt;code>check()&lt;/code>).&lt;/li>
&lt;li>
&lt;a href="https://github.com/r-lib/revdepcheck" target="_blank" rel="noopener">revdepcheck&lt;/a>: Runs &lt;code>R CMD check&lt;/code> on
all reverse dependencies, and figures out what has changed since the last CRAN
release (e.g. &lt;code>revdep_check()&lt;/code>).&lt;/li>
&lt;li>
&lt;a href="https://github.com/r-lib/sessioninfo" target="_blank" rel="noopener">sessioninfo&lt;/a>: R session info (e.g.
&lt;code>session_info()&lt;/code>).&lt;/li>
&lt;li>
&lt;a href="https://usethis.r-lib.org" target="_blank" rel="noopener">usethis&lt;/a>: Automates package setup (e.g.
&lt;code>use_test()&lt;/code>).&lt;/li>
&lt;/ul>
&lt;p>devtools will remain the primary package developers will interact with when
writing R packages; it will just rely on these other packages internally
for most of the functionality.&lt;/p>
&lt;p>Generally, you should not need to worry about these different packages, because
devtools installs them all automatically. You will need to care, however, if
you&amp;rsquo;re filing a bug because reporting it at the correct place will lead to a
speedier resolution.&lt;/p>
&lt;p>Package developers who wish to depend on devtools features should also pay
attention to which package the functionality is coming from and depend on that
rather than devtools. In most cases packages should not depend on devtools
directly. This is similar to the situation with the
&lt;a href="https://www.tidyverse.org/articles/2018/06/tidyverse-not-for-packages/" target="_blank" rel="noopener">tidyverse
package&lt;/a>.&lt;/p>
&lt;h2 id="new-features">New features
&lt;a href="#new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The majority of the work for this release was related to bugfixes and
infrastructure improvements, but there are also some new features you may
notice.&lt;/p>
&lt;p>As always a complete list of all the changes is available in the package
&lt;a href="https://devtools.r-lib.org/news/index.html" target="_blank" rel="noopener">Changelog&lt;/a>.&lt;/p>
&lt;h3 id="upgrade-menu">Upgrade menu
&lt;a href="#upgrade-menu">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>All of the install functions (e.g. &lt;code>install_github()&lt;/code>) now prompt the user with
a menu if there are dependencies of the package being installed which are
outdated. This allows the user to pick which if any they would like to upgrade.&lt;/p>
&lt;p>Previous versions of devtools always upgraded these packages automatically by
default, which sometimes was frustrating when you simply wanted to install one
package.&lt;/p>
&lt;p>When used non-interactively the install functions work like the previous default of
always upgrading outdated packages.&lt;/p>
&lt;p align="center">
&lt;img src="https://www.tidyverse.org/images/devtools-2.0.0/upgrade-menu.png" alt="upgrade menu">
&lt;/p>
&lt;p>The menu respects the &lt;code>menu.graphics&lt;/code> option, so set &lt;code>options(menu.graphics = FALSE)&lt;/code> in your .Rprofile if you prefer text based menus, or &lt;code>TRUE&lt;/code> if you
prefer graphical widgets.&lt;/p>
&lt;h3 id="improved-check-output">Improved check output
&lt;a href="#improved-check-output">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>&lt;code>check()&lt;/code> now uses the
&lt;a href="https://cran.r-project.org/package=rcmdcheck" target="_blank" rel="noopener">rcmdcheck&lt;/a> package, which has much richer, more colorful
output to the check results, making check failures much easier to see.&lt;/p>
&lt;p align="center">
&lt;a href="https://github.com/r-lib/rcmdcheck">
&lt;img src="https://raw.githubusercontent.com/r-lib/rcmdcheck/e2be6b3111c56ac33a2fb89c773d96eafe6dfa22/tools/rcmdcheck.gif" alt="rcmdcheck output" width="700">
&lt;/a>
&lt;/p>
&lt;h3 id="testing-single-files">Testing single files
&lt;a href="#testing-single-files">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>devtools now includes functions (&lt;code>test_file()&lt;/code> and &lt;code>test_coverage_file()&lt;/code>) to
improve development of a single file. Rather than running all
tests, or manually supplying a &lt;code>filter&lt;/code> argument to restrict the tests
&lt;code>test_file()&lt;/code> automatically runs the corresponding tests for a given source
file. These functions make the feedback loop when developing new features
quicker as you only run the relevant tests for the file you are editing.&lt;/p>
&lt;p>This requires you use a
&lt;a href="https://style.tidyverse.org/tests.html" target="_blank" rel="noopener">standard naming
convention&lt;/a> for your tests, e.g. if you
have a source file &lt;code>R/featureA.R&lt;/code> the corresponding test file would be
&lt;code>tests/testthat/test-featureR.R&lt;/code>.&lt;/p>
&lt;p>The tests file to run is automatically detected from the open file in RStudio (if
available), so you can call &lt;code>test_file()&lt;/code> with either the source file or
the test file open. A corresponding &lt;code>test_coverage_file()&lt;/code>
function shows the test code coverage for a single source file.&lt;/p>
&lt;p>There is also a &lt;code>test_coverage()&lt;/code> function to report test coverage for your
whole package.&lt;/p>
&lt;p>These functions have
&lt;a href="https://rstudio.github.io/rstudioaddins/" target="_blank" rel="noopener">RStudio addins&lt;/a>
which allows you to
&lt;a href="https://rstudio.github.io/rstudioaddins/#keyboard-shorcuts" target="_blank" rel="noopener"> bind them to shortcut
keys&lt;/a>.&lt;/p>
&lt;p>Shortcuts we recommend&lt;/p>
&lt;style>
kbd {
border: 1px solid #aaa;
border-radius: 0.2em;
background-color: #f9f9f9;
padding: 0.1em 0.3em;
}
td,th {
padding: 0.4em;
}
&lt;/style>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Function&lt;/th>
&lt;th>Windows shortcut&lt;/th>
&lt;th>macOS shortcut&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>test_file()&lt;/code>&lt;/td>
&lt;td>&lt;kbd>Ctrl&lt;/kbd>+&lt;kbd>T&lt;/kbd>&lt;/td>
&lt;td>&lt;kbd>Command ⌘ &lt;/kbd>+&lt;kbd>T&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>test_coverage_file()&lt;/code>&lt;/td>
&lt;td>&lt;kbd>Ctrl&lt;/kbd>+&lt;kbd>R&lt;/kbd>&lt;/td>
&lt;td>&lt;kbd>Command ⌘ &lt;/kbd>+&lt;kbd>R&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>test_coverage()&lt;/code>&lt;/td>
&lt;td>&lt;kbd>Ctrl&lt;/kbd>+&lt;kbd>Shift ⇧&lt;/kbd>+&lt;kbd>R&lt;/kbd>&lt;/td>
&lt;td>&lt;kbd>Command ⌘ &lt;/kbd>+&lt;kbd>Shift ⇧&lt;/kbd>+&lt;kbd>R&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;h3 id="spell-checking">Spell checking
&lt;a href="#spell-checking">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>&lt;code>spell_check()&lt;/code> can be used to check the spelling of package documentation
using the
&lt;a href="https://cran.r-project.org/package=spelling" target="_blank" rel="noopener">spelling&lt;/a> package. We have found checking spelling before a release
often catches a number of errors. For more details on features of
the spelling package see the
&lt;a href="https://ropensci.org/technotes/2017/09/07/spelling-release/" target="_blank" rel="noopener">rOpenSci
spelling release post&lt;/a>.&lt;/p>
&lt;p>Also see
&lt;a href="https://usethis.r-lib.org/reference/use_spell_check.html" target="_blank" rel="noopener">usethis::use_spell_check()&lt;/a>
to have spell checking for the package performed automatically during &lt;code>devtools::check()&lt;/code>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This release was truly a team effort! Much of the work in the uncoupled
packages, particularly the remotes, rcmdcheck, revdepcheck and sessioninfo
packages was done by Gábor Csárdi. Hadley Wickham worked extensively on
pkgbuild, pkgload and usethis (as well as being responsible for most of the
original code in devtools) and Jenny Bryan had major contributions to the
usethis package.&lt;/p>
&lt;p>The work spanned over 8 packages (devtools + the uncoupled packages) and
includes 1,579 commits, 1,487 closed issues and 107 different code contributors!&lt;/p>
&lt;p>We are of course grateful to &lt;em>all&lt;/em> of the &lt;em>336&lt;/em> people who contributed not just code, but also issues and comments for this release:
&lt;a href="https://github.com/ankane" target="_blank" rel="noopener">@ankane&lt;/a>,
&lt;a href="https://github.com/ashiklom" target="_blank" rel="noopener">@ashiklom&lt;/a>,
&lt;a href="https://github.com/bleutner" target="_blank" rel="noopener">@bleutner&lt;/a>,
&lt;a href="https://github.com/coatless" target="_blank" rel="noopener">@coatless&lt;/a>,
&lt;a href="https://github.com/dandelo" target="_blank" rel="noopener">@dandelo&lt;/a>,
&lt;a href="https://github.com/dleutnant" target="_blank" rel="noopener">@dleutnant&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/evanbiederstedt" target="_blank" rel="noopener">@evanbiederstedt&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/glin" target="_blank" rel="noopener">@glin&lt;/a>,
&lt;a href="https://github.com/gungne" target="_blank" rel="noopener">@gungne&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/heavywatal" target="_blank" rel="noopener">@heavywatal&lt;/a>,
&lt;a href="https://github.com/imanuelcostigan" target="_blank" rel="noopener">@imanuelcostigan&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jogrue" target="_blank" rel="noopener">@jogrue&lt;/a>,
&lt;a href="https://github.com/jonasfoe" target="_blank" rel="noopener">@jonasfoe&lt;/a>,
&lt;a href="https://github.com/joshuaulrich" target="_blank" rel="noopener">@joshuaulrich&lt;/a>,
&lt;a href="https://github.com/jsal13" target="_blank" rel="noopener">@jsal13&lt;/a>,
&lt;a href="https://github.com/KasperSkytte" target="_blank" rel="noopener">@KasperSkytte&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/LiNk-NY" target="_blank" rel="noopener">@LiNk-NY&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">@lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/nbenn" target="_blank" rel="noopener">@nbenn&lt;/a>,
&lt;a href="https://github.com/overmar" target="_blank" rel="noopener">@overmar&lt;/a>,
&lt;a href="https://github.com/paulobrecht" target="_blank" rel="noopener">@paulobrecht&lt;/a>,
&lt;a href="https://github.com/pgensler" target="_blank" rel="noopener">@pgensler&lt;/a>,
&lt;a href="https://github.com/profandyfield" target="_blank" rel="noopener">@profandyfield&lt;/a>,
&lt;a href="https://github.com/r-cheologist" target="_blank" rel="noopener">@r-cheologist&lt;/a>,
&lt;a href="https://github.com/rcannood" target="_blank" rel="noopener">@rcannood&lt;/a>,
&lt;a href="https://github.com/richfitz" target="_blank" rel="noopener">@richfitz&lt;/a>,
&lt;a href="https://github.com/robertdj" target="_blank" rel="noopener">@robertdj&lt;/a>,
&lt;a href="https://github.com/rtobar" target="_blank" rel="noopener">@rtobar&lt;/a>,
&lt;a href="https://github.com/surmann" target="_blank" rel="noopener">@surmann&lt;/a>,
&lt;a href="https://github.com/trinker" target="_blank" rel="noopener">@trinker&lt;/a>,
&lt;a href="https://github.com/VincentGuyader" target="_blank" rel="noopener">@VincentGuyader&lt;/a>,
&lt;a href="https://github.com/vsabarly" target="_blank" rel="noopener">@vsabarly&lt;/a>,
&lt;a href="https://github.com/vspinu" target="_blank" rel="noopener">@vspinu&lt;/a>,
&lt;a href="https://github.com/wch" target="_blank" rel="noopener">@wch&lt;/a>,
&lt;a href="https://github.com/wibeasley" target="_blank" rel="noopener">@wibeasley&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>,
&lt;a href="https://github.com/aravind-j" target="_blank" rel="noopener">@aravind-j&lt;/a>,
&lt;a href="https://github.com/eddelbuettel" target="_blank" rel="noopener">@eddelbuettel&lt;/a>,
&lt;a href="https://github.com/helix123" target="_blank" rel="noopener">@helix123&lt;/a>,
&lt;a href="https://github.com/HughParsonage" target="_blank" rel="noopener">@HughParsonage&lt;/a>,
&lt;a href="https://github.com/jrosen48" target="_blank" rel="noopener">@jrosen48&lt;/a>,
&lt;a href="https://github.com/noamross" target="_blank" rel="noopener">@noamross&lt;/a>,
&lt;a href="https://github.com/pat-s" target="_blank" rel="noopener">@pat-s&lt;/a>,
&lt;a href="https://github.com/wlandau-lilly" target="_blank" rel="noopener">@wlandau-lilly&lt;/a>,
&lt;a href="https://github.com/baptiste" target="_blank" rel="noopener">@baptiste&lt;/a>,
&lt;a href="https://github.com/bbolker" target="_blank" rel="noopener">@bbolker&lt;/a>,
&lt;a href="https://github.com/benjaminhlina" target="_blank" rel="noopener">@benjaminhlina&lt;/a>,
&lt;a href="https://github.com/colearendt" target="_blank" rel="noopener">@colearendt&lt;/a>,
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">@HenrikBengtsson&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/nitisethi28" target="_blank" rel="noopener">@nitisethi28&lt;/a>,
&lt;a href="https://github.com/schloerke" target="_blank" rel="noopener">@schloerke&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/lcolladotor" target="_blank" rel="noopener">@lcolladotor&lt;/a>,
&lt;a href="https://github.com/llrs" target="_blank" rel="noopener">@llrs&lt;/a>,
&lt;a href="https://github.com/patperry" target="_blank" rel="noopener">@patperry&lt;/a>,
&lt;a href="https://github.com/bgoodri" target="_blank" rel="noopener">@bgoodri&lt;/a>,
&lt;a href="https://github.com/dpastoor" target="_blank" rel="noopener">@dpastoor&lt;/a>,
&lt;a href="https://github.com/karldw" target="_blank" rel="noopener">@karldw&lt;/a>,
&lt;a href="https://github.com/kylebmetrum" target="_blank" rel="noopener">@kylebmetrum&lt;/a>,
&lt;a href="https://github.com/njtierney" target="_blank" rel="noopener">@njtierney&lt;/a>,
&lt;a href="https://github.com/richierocks" target="_blank" rel="noopener">@richierocks&lt;/a>,
&lt;a href="https://github.com/sangeetabhatia03" target="_blank" rel="noopener">@sangeetabhatia03&lt;/a>,
&lt;a href="https://github.com/theGreatWhiteShark" target="_blank" rel="noopener">@theGreatWhiteShark&lt;/a>,
&lt;a href="https://github.com/benmarwick" target="_blank" rel="noopener">@benmarwick&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/Dripdrop12" target="_blank" rel="noopener">@Dripdrop12&lt;/a>,
&lt;a href="https://github.com/friendly" target="_blank" rel="noopener">@friendly&lt;/a>,
&lt;a href="https://github.com/isteves" target="_blank" rel="noopener">@isteves&lt;/a>,
&lt;a href="https://github.com/mb706" target="_blank" rel="noopener">@mb706&lt;/a>,
&lt;a href="https://github.com/pitakakariki" target="_blank" rel="noopener">@pitakakariki&lt;/a>,
&lt;a href="https://github.com/prosoitos" target="_blank" rel="noopener">@prosoitos&lt;/a>,
&lt;a href="https://github.com/tetron" target="_blank" rel="noopener">@tetron&lt;/a>,
&lt;a href="https://github.com/yiufung" target="_blank" rel="noopener">@yiufung&lt;/a>,
&lt;a href="https://github.com/adomingues" target="_blank" rel="noopener">@adomingues&lt;/a>,
&lt;a href="https://github.com/alexholcombe" target="_blank" rel="noopener">@alexholcombe&lt;/a>,
&lt;a href="https://github.com/alexpghayes" target="_blank" rel="noopener">@alexpghayes&lt;/a>,
&lt;a href="https://github.com/andrie" target="_blank" rel="noopener">@andrie&lt;/a>,
&lt;a href="https://github.com/atheriel" target="_blank" rel="noopener">@atheriel&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/behrman" target="_blank" rel="noopener">@behrman&lt;/a>,
&lt;a href="https://github.com/bestdan" target="_blank" rel="noopener">@bestdan&lt;/a>,
&lt;a href="https://github.com/bfgray3" target="_blank" rel="noopener">@bfgray3&lt;/a>,
&lt;a href="https://github.com/bhaskarvk" target="_blank" rel="noopener">@bhaskarvk&lt;/a>,
&lt;a href="https://github.com/boshek" target="_blank" rel="noopener">@boshek&lt;/a>,
&lt;a href="https://github.com/cboettig" target="_blank" rel="noopener">@cboettig&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/chris-billingham" target="_blank" rel="noopener">@chris-billingham&lt;/a>,
&lt;a href="https://github.com/Chris-Engelhardt" target="_blank" rel="noopener">@Chris-Engelhardt&lt;/a>,
&lt;a href="https://github.com/chris-prener" target="_blank" rel="noopener">@chris-prener&lt;/a>,
&lt;a href="https://github.com/CorradoLanera" target="_blank" rel="noopener">@CorradoLanera&lt;/a>,
&lt;a href="https://github.com/dchiu911" target="_blank" rel="noopener">@dchiu911&lt;/a>,
&lt;a href="https://github.com/dirkschumacher" target="_blank" rel="noopener">@dirkschumacher&lt;/a>,
&lt;a href="https://github.com/dougmet" target="_blank" rel="noopener">@dougmet&lt;/a>,
&lt;a href="https://github.com/dragosmg" target="_blank" rel="noopener">@dragosmg&lt;/a>,
&lt;a href="https://github.com/duckmayr" target="_blank" rel="noopener">@duckmayr&lt;/a>,
&lt;a href="https://github.com/echasnovski" target="_blank" rel="noopener">@echasnovski&lt;/a>,
&lt;a href="https://github.com/eheinzen" target="_blank" rel="noopener">@eheinzen&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/GregorDeCillia" target="_blank" rel="noopener">@GregorDeCillia&lt;/a>,
&lt;a href="https://github.com/gvegayon" target="_blank" rel="noopener">@gvegayon&lt;/a>,
&lt;a href="https://github.com/gvelasq" target="_blank" rel="noopener">@gvelasq&lt;/a>,
&lt;a href="https://github.com/hafen" target="_blank" rel="noopener">@hafen&lt;/a>,
&lt;a href="https://github.com/HanjoStudy" target="_blank" rel="noopener">@HanjoStudy&lt;/a>,
&lt;a href="https://github.com/ijlyttle" target="_blank" rel="noopener">@ijlyttle&lt;/a>,
&lt;a href="https://github.com/jackwasey" target="_blank" rel="noopener">@jackwasey&lt;/a>,
&lt;a href="https://github.com/jasonserviss" target="_blank" rel="noopener">@jasonserviss&lt;/a>,
&lt;a href="https://github.com/jayhesselberth" target="_blank" rel="noopener">@jayhesselberth&lt;/a>,
&lt;a href="https://github.com/jdblischak" target="_blank" rel="noopener">@jdblischak&lt;/a>,
&lt;a href="https://github.com/jjchern" target="_blank" rel="noopener">@jjchern&lt;/a>,
&lt;a href="https://github.com/jmgirard" target="_blank" rel="noopener">@jmgirard&lt;/a>,
&lt;a href="https://github.com/jonocarroll" target="_blank" rel="noopener">@jonocarroll&lt;/a>,
&lt;a href="https://github.com/jsta" target="_blank" rel="noopener">@jsta&lt;/a>,
&lt;a href="https://github.com/karawoo" target="_blank" rel="noopener">@karawoo&lt;/a>,
&lt;a href="https://github.com/katrinleinweber" target="_blank" rel="noopener">@katrinleinweber&lt;/a>,
&lt;a href="https://github.com/kiwiroy" target="_blank" rel="noopener">@kiwiroy&lt;/a>,
&lt;a href="https://github.com/lbusett" target="_blank" rel="noopener">@lbusett&lt;/a>,
&lt;a href="https://github.com/lwjohnst86" target="_blank" rel="noopener">@lwjohnst86&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/maislind" target="_blank" rel="noopener">@maislind&lt;/a>,
&lt;a href="https://github.com/malcolmbarrett" target="_blank" rel="noopener">@malcolmbarrett&lt;/a>,
&lt;a href="https://github.com/markdly" target="_blank" rel="noopener">@markdly&lt;/a>,
&lt;a href="https://github.com/martinjhnhadley" target="_blank" rel="noopener">@martinjhnhadley&lt;/a>,
&lt;a href="https://github.com/maurolepore" target="_blank" rel="noopener">@maurolepore&lt;/a>,
&lt;a href="https://github.com/mdlincoln" target="_blank" rel="noopener">@mdlincoln&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/mixtrak" target="_blank" rel="noopener">@mixtrak&lt;/a>,
&lt;a href="https://github.com/muschellij2" target="_blank" rel="noopener">@muschellij2&lt;/a>,
&lt;a href="https://github.com/nijibabulu" target="_blank" rel="noopener">@nijibabulu&lt;/a>,
&lt;a href="https://github.com/PeteHaitch" target="_blank" rel="noopener">@PeteHaitch&lt;/a>,
&lt;a href="https://github.com/rdrivers" target="_blank" rel="noopener">@rdrivers&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/rorynolan" target="_blank" rel="noopener">@rorynolan&lt;/a>,
&lt;a href="https://github.com/s-fleck" target="_blank" rel="noopener">@s-fleck&lt;/a>,
&lt;a href="https://github.com/seankross" target="_blank" rel="noopener">@seankross&lt;/a>,
&lt;a href="https://github.com/strboul" target="_blank" rel="noopener">@strboul&lt;/a>,
&lt;a href="https://github.com/tjmahr" target="_blank" rel="noopener">@tjmahr&lt;/a>,
&lt;a href="https://github.com/uribo" target="_blank" rel="noopener">@uribo&lt;/a>,
&lt;a href="https://github.com/vnijs" target="_blank" rel="noopener">@vnijs&lt;/a>,
&lt;a href="https://github.com/webbedfeet" target="_blank" rel="noopener">@webbedfeet&lt;/a>,
&lt;a href="https://github.com/1beb" target="_blank" rel="noopener">@1beb&lt;/a>,
&lt;a href="https://github.com/ackleymi" target="_blank" rel="noopener">@ackleymi&lt;/a>,
&lt;a href="https://github.com/akubisch" target="_blank" rel="noopener">@akubisch&lt;/a>,
&lt;a href="https://github.com/alexilliamson" target="_blank" rel="noopener">@alexilliamson&lt;/a>,
&lt;a href="https://github.com/alistaire47" target="_blank" rel="noopener">@alistaire47&lt;/a>,
&lt;a href="https://github.com/amilenkovic" target="_blank" rel="noopener">@amilenkovic&lt;/a>,
&lt;a href="https://github.com/amstilp" target="_blank" rel="noopener">@amstilp&lt;/a>,
&lt;a href="https://github.com/AmundsenJunior" target="_blank" rel="noopener">@AmundsenJunior&lt;/a>,
&lt;a href="https://github.com/AndreMikulec" target="_blank" rel="noopener">@AndreMikulec&lt;/a>,
&lt;a href="https://github.com/andrewrech" target="_blank" rel="noopener">@andrewrech&lt;/a>,
&lt;a href="https://github.com/andriuking" target="_blank" rel="noopener">@andriuking&lt;/a>,
&lt;a href="https://github.com/anhqle" target="_blank" rel="noopener">@anhqle&lt;/a>,
&lt;a href="https://github.com/Ashilex" target="_blank" rel="noopener">@Ashilex&lt;/a>,
&lt;a href="https://github.com/Bandytwin" target="_blank" rel="noopener">@Bandytwin&lt;/a>,
&lt;a href="https://github.com/bastistician" target="_blank" rel="noopener">@bastistician&lt;/a>,
&lt;a href="https://github.com/BenoitLondon" target="_blank" rel="noopener">@BenoitLondon&lt;/a>,
&lt;a href="https://github.com/bgctw" target="_blank" rel="noopener">@bgctw&lt;/a>,
&lt;a href="https://github.com/BillPetti" target="_blank" rel="noopener">@BillPetti&lt;/a>,
&lt;a href="https://github.com/bioinformatist" target="_blank" rel="noopener">@bioinformatist&lt;/a>,
&lt;a href="https://github.com/bioticinteractions" target="_blank" rel="noopener">@bioticinteractions&lt;/a>,
&lt;a href="https://github.com/Bustami" target="_blank" rel="noopener">@Bustami&lt;/a>,
&lt;a href="https://github.com/carlganz" target="_blank" rel="noopener">@carlganz&lt;/a>,
&lt;a href="https://github.com/cbail" target="_blank" rel="noopener">@cbail&lt;/a>,
&lt;a href="https://github.com/cdeterman" target="_blank" rel="noopener">@cdeterman&lt;/a>,
&lt;a href="https://github.com/cfhammill" target="_blank" rel="noopener">@cfhammill&lt;/a>,
&lt;a href="https://github.com/chiarapiccino" target="_blank" rel="noopener">@chiarapiccino&lt;/a>,
&lt;a href="https://github.com/ChrisMuir" target="_blank" rel="noopener">@ChrisMuir&lt;/a>,
&lt;a href="https://github.com/ck37" target="_blank" rel="noopener">@ck37&lt;/a>,
&lt;a href="https://github.com/cklunch" target="_blank" rel="noopener">@cklunch&lt;/a>,
&lt;a href="https://github.com/courtiol" target="_blank" rel="noopener">@courtiol&lt;/a>,
&lt;a href="https://github.com/crossxwill" target="_blank" rel="noopener">@crossxwill&lt;/a>,
&lt;a href="https://github.com/daattali" target="_blank" rel="noopener">@daattali&lt;/a>,
&lt;a href="https://github.com/damianooldoni" target="_blank" rel="noopener">@damianooldoni&lt;/a>,
&lt;a href="https://github.com/darsoo" target="_blank" rel="noopener">@darsoo&lt;/a>,
&lt;a href="https://github.com/dataisdata" target="_blank" rel="noopener">@dataisdata&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dbaston" target="_blank" rel="noopener">@dbaston&lt;/a>,
&lt;a href="https://github.com/deephoot" target="_blank" rel="noopener">@deephoot&lt;/a>,
&lt;a href="https://github.com/dfrankow" target="_blank" rel="noopener">@dfrankow&lt;/a>,
&lt;a href="https://github.com/DiogoFerrari" target="_blank" rel="noopener">@DiogoFerrari&lt;/a>,
&lt;a href="https://github.com/DivadNojnarg" target="_blank" rel="noopener">@DivadNojnarg&lt;/a>,
&lt;a href="https://github.com/djm158" target="_blank" rel="noopener">@djm158&lt;/a>,
&lt;a href="https://github.com/djvanderlaan" target="_blank" rel="noopener">@djvanderlaan&lt;/a>,
&lt;a href="https://github.com/dmenne" target="_blank" rel="noopener">@dmenne&lt;/a>,
&lt;a href="https://github.com/dmurdoch" target="_blank" rel="noopener">@dmurdoch&lt;/a>,
&lt;a href="https://github.com/DocOfi" target="_blank" rel="noopener">@DocOfi&lt;/a>,
&lt;a href="https://github.com/dracodoc" target="_blank" rel="noopener">@dracodoc&lt;/a>,
&lt;a href="https://github.com/dtelad11" target="_blank" rel="noopener">@dtelad11&lt;/a>,
&lt;a href="https://github.com/EmilBode" target="_blank" rel="noopener">@EmilBode&lt;/a>,
&lt;a href="https://github.com/epurdom" target="_blank" rel="noopener">@epurdom&lt;/a>,
&lt;a href="https://github.com/Fazendaaa" target="_blank" rel="noopener">@Fazendaaa&lt;/a>,
&lt;a href="https://github.com/feng-li" target="_blank" rel="noopener">@feng-li&lt;/a>,
&lt;a href="https://github.com/FilipeamTeixeira" target="_blank" rel="noopener">@FilipeamTeixeira&lt;/a>,
&lt;a href="https://github.com/flying-sheep" target="_blank" rel="noopener">@flying-sheep&lt;/a>,
&lt;a href="https://github.com/fmichonneau" target="_blank" rel="noopener">@fmichonneau&lt;/a>,
&lt;a href="https://github.com/gbouzill" target="_blank" rel="noopener">@gbouzill&lt;/a>,
&lt;a href="https://github.com/GeoBosh" target="_blank" rel="noopener">@GeoBosh&lt;/a>,
&lt;a href="https://github.com/gilbertocamara" target="_blank" rel="noopener">@gilbertocamara&lt;/a>,
&lt;a href="https://github.com/Gioparra91" target="_blank" rel="noopener">@Gioparra91&lt;/a>,
&lt;a href="https://github.com/gitter-badger" target="_blank" rel="noopener">@gitter-badger&lt;/a>,
&lt;a href="https://github.com/goranbrostrom" target="_blank" rel="noopener">@goranbrostrom&lt;/a>,
&lt;a href="https://github.com/guhjy" target="_blank" rel="noopener">@guhjy&lt;/a>,
&lt;a href="https://github.com/gwarnes-mdsol" target="_blank" rel="noopener">@gwarnes-mdsol&lt;/a>,
&lt;a href="https://github.com/gzagatti" target="_blank" rel="noopener">@gzagatti&lt;/a>,
&lt;a href="https://github.com/ha0ye" target="_blank" rel="noopener">@ha0ye&lt;/a>,
&lt;a href="https://github.com/holgerbrandl" target="_blank" rel="noopener">@holgerbrandl&lt;/a>,
&lt;a href="https://github.com/Hong-Revo" target="_blank" rel="noopener">@Hong-Revo&lt;/a>,
&lt;a href="https://github.com/hrbrmstr" target="_blank" rel="noopener">@hrbrmstr&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">@hughjonesd&lt;/a>,
&lt;a href="https://github.com/ianmcook" target="_blank" rel="noopener">@ianmcook&lt;/a>,
&lt;a href="https://github.com/Isaacsh" target="_blank" rel="noopener">@Isaacsh&lt;/a>,
&lt;a href="https://github.com/Jadamso" target="_blank" rel="noopener">@Jadamso&lt;/a>,
&lt;a href="https://github.com/james-atkins" target="_blank" rel="noopener">@james-atkins&lt;/a>,
&lt;a href="https://github.com/JamesSteeleII" target="_blank" rel="noopener">@JamesSteeleII&lt;/a>,
&lt;a href="https://github.com/jceleste1991" target="_blank" rel="noopener">@jceleste1991&lt;/a>,
&lt;a href="https://github.com/jefshe" target="_blank" rel="noopener">@jefshe&lt;/a>,
&lt;a href="https://github.com/jiaqitony" target="_blank" rel="noopener">@jiaqitony&lt;/a>,
&lt;a href="https://github.com/JiaxiangBU" target="_blank" rel="noopener">@JiaxiangBU&lt;/a>,
&lt;a href="https://github.com/jkraut" target="_blank" rel="noopener">@jkraut&lt;/a>,
&lt;a href="https://github.com/joeddav" target="_blank" rel="noopener">@joeddav&lt;/a>,
&lt;a href="https://github.com/JohnMount" target="_blank" rel="noopener">@JohnMount&lt;/a>,
&lt;a href="https://github.com/joncfoo" target="_blank" rel="noopener">@joncfoo&lt;/a>,
&lt;a href="https://github.com/jonkeane" target="_blank" rel="noopener">@jonkeane&lt;/a>,
&lt;a href="https://github.com/josherrickson" target="_blank" rel="noopener">@josherrickson&lt;/a>,
&lt;a href="https://github.com/JustinMShea" target="_blank" rel="noopener">@JustinMShea&lt;/a>,
&lt;a href="https://github.com/KallyopeBio" target="_blank" rel="noopener">@KallyopeBio&lt;/a>,
&lt;a href="https://github.com/kanasethu" target="_blank" rel="noopener">@kanasethu&lt;/a>,
&lt;a href="https://github.com/karlropkins" target="_blank" rel="noopener">@karlropkins&lt;/a>,
&lt;a href="https://github.com/Keaton1188" target="_blank" rel="noopener">@Keaton1188&lt;/a>,
&lt;a href="https://github.com/kemin711" target="_blank" rel="noopener">@kemin711&lt;/a>,
&lt;a href="https://github.com/kenahoo" target="_blank" rel="noopener">@kenahoo&lt;/a>,
&lt;a href="https://github.com/kendonB" target="_blank" rel="noopener">@kendonB&lt;/a>,
&lt;a href="https://github.com/kimyen" target="_blank" rel="noopener">@kimyen&lt;/a>,
&lt;a href="https://github.com/klmr" target="_blank" rel="noopener">@klmr&lt;/a>,
&lt;a href="https://github.com/kmcconeghy" target="_blank" rel="noopener">@kmcconeghy&lt;/a>,
&lt;a href="https://github.com/komalsrathi" target="_blank" rel="noopener">@komalsrathi&lt;/a>,
&lt;a href="https://github.com/krshedd" target="_blank" rel="noopener">@krshedd&lt;/a>,
&lt;a href="https://github.com/layik" target="_blank" rel="noopener">@layik&lt;/a>,
&lt;a href="https://github.com/lindbrook" target="_blank" rel="noopener">@lindbrook&lt;/a>,
&lt;a href="https://github.com/lucacerone" target="_blank" rel="noopener">@lucacerone&lt;/a>,
&lt;a href="https://github.com/magic-lantern" target="_blank" rel="noopener">@magic-lantern&lt;/a>,
&lt;a href="https://github.com/malwinare" target="_blank" rel="noopener">@malwinare&lt;/a>,
&lt;a href="https://github.com/MansMeg" target="_blank" rel="noopener">@MansMeg&lt;/a>,
&lt;a href="https://github.com/MarcHiggins" target="_blank" rel="noopener">@MarcHiggins&lt;/a>,
&lt;a href="https://github.com/MarkEdmondson1234" target="_blank" rel="noopener">@MarkEdmondson1234&lt;/a>,
&lt;a href="https://github.com/martin11112" target="_blank" rel="noopener">@martin11112&lt;/a>,
&lt;a href="https://github.com/mattfidler" target="_blank" rel="noopener">@mattfidler&lt;/a>,
&lt;a href="https://github.com/mdavy86" target="_blank" rel="noopener">@mdavy86&lt;/a>,
&lt;a href="https://github.com/meowcat" target="_blank" rel="noopener">@meowcat&lt;/a>,
&lt;a href="https://github.com/mhines-usgs" target="_blank" rel="noopener">@mhines-usgs&lt;/a>,
&lt;a href="https://github.com/MichaelM27" target="_blank" rel="noopener">@MichaelM27&lt;/a>,
&lt;a href="https://github.com/michaelwhammer" target="_blank" rel="noopener">@michaelwhammer&lt;/a>,
&lt;a href="https://github.com/mikemeredith" target="_blank" rel="noopener">@mikemeredith&lt;/a>,
&lt;a href="https://github.com/mikldk" target="_blank" rel="noopener">@mikldk&lt;/a>,
&lt;a href="https://github.com/MilesMcBain" target="_blank" rel="noopener">@MilesMcBain&lt;/a>,
&lt;a href="https://github.com/mjpnijmeijer" target="_blank" rel="noopener">@mjpnijmeijer&lt;/a>,
&lt;a href="https://github.com/mkearney" target="_blank" rel="noopener">@mkearney&lt;/a>,
&lt;a href="https://github.com/mkhezr" target="_blank" rel="noopener">@mkhezr&lt;/a>,
&lt;a href="https://github.com/mojaveazure" target="_blank" rel="noopener">@mojaveazure&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/MrFlick" target="_blank" rel="noopener">@MrFlick&lt;/a>,
&lt;a href="https://github.com/mroemer" target="_blank" rel="noopener">@mroemer&lt;/a>,
&lt;a href="https://github.com/mrustl" target="_blank" rel="noopener">@mrustl&lt;/a>,
&lt;a href="https://github.com/ms609" target="_blank" rel="noopener">@ms609&lt;/a>,
&lt;a href="https://github.com/msberends" target="_blank" rel="noopener">@msberends&lt;/a>,
&lt;a href="https://github.com/mtmorgan" target="_blank" rel="noopener">@mtmorgan&lt;/a>,
&lt;a href="https://github.com/mvuorre" target="_blank" rel="noopener">@mvuorre&lt;/a>,
&lt;a href="https://github.com/myaseen208" target="_blank" rel="noopener">@myaseen208&lt;/a>,
&lt;a href="https://github.com/navdeep-G" target="_blank" rel="noopener">@navdeep-G&lt;/a>,
&lt;a href="https://github.com/neekro" target="_blank" rel="noopener">@neekro&lt;/a>,
&lt;a href="https://github.com/Neil-Schneider" target="_blank" rel="noopener">@Neil-Schneider&lt;/a>,
&lt;a href="https://github.com/ngreifer" target="_blank" rel="noopener">@ngreifer&lt;/a>,
&lt;a href="https://github.com/nick-youngblut" target="_blank" rel="noopener">@nick-youngblut&lt;/a>,
&lt;a href="https://github.com/nmattia" target="_blank" rel="noopener">@nmattia&lt;/a>,
&lt;a href="https://github.com/ntdef" target="_blank" rel="noopener">@ntdef&lt;/a>,
&lt;a href="https://github.com/okayaa" target="_blank" rel="noopener">@okayaa&lt;/a>,
&lt;a href="https://github.com/paternogbc" target="_blank" rel="noopener">@paternogbc&lt;/a>,
&lt;a href="https://github.com/paul-buerkner" target="_blank" rel="noopener">@paul-buerkner&lt;/a>,
&lt;a href="https://github.com/paulmartins" target="_blank" rel="noopener">@paulmartins&lt;/a>,
&lt;a href="https://github.com/pavel-filatov" target="_blank" rel="noopener">@pavel-filatov&lt;/a>,
&lt;a href="https://github.com/Paxanator" target="_blank" rel="noopener">@Paxanator&lt;/a>,
&lt;a href="https://github.com/peterhurford" target="_blank" rel="noopener">@peterhurford&lt;/a>,
&lt;a href="https://github.com/petermeissner" target="_blank" rel="noopener">@petermeissner&lt;/a>,
&lt;a href="https://github.com/pfgherardini" target="_blank" rel="noopener">@pfgherardini&lt;/a>,
&lt;a href="https://github.com/plantarum" target="_blank" rel="noopener">@plantarum&lt;/a>,
&lt;a href="https://github.com/potterzot" target="_blank" rel="noopener">@potterzot&lt;/a>,
&lt;a href="https://github.com/privefl" target="_blank" rel="noopener">@privefl&lt;/a>,
&lt;a href="https://github.com/qpcg" target="_blank" rel="noopener">@qpcg&lt;/a>,
&lt;a href="https://github.com/renkun-ken" target="_blank" rel="noopener">@renkun-ken&lt;/a>,
&lt;a href="https://github.com/renozao" target="_blank" rel="noopener">@renozao&lt;/a>,
&lt;a href="https://github.com/rpruim" target="_blank" rel="noopener">@rpruim&lt;/a>,
&lt;a href="https://github.com/RS-eco" target="_blank" rel="noopener">@RS-eco&lt;/a>,
&lt;a href="https://github.com/RSIGitHubAdmin" target="_blank" rel="noopener">@RSIGitHubAdmin&lt;/a>,
&lt;a href="https://github.com/sammo3182" target="_blank" rel="noopener">@sammo3182&lt;/a>,
&lt;a href="https://github.com/SanVerhavert" target="_blank" rel="noopener">@SanVerhavert&lt;/a>,
&lt;a href="https://github.com/saurfang" target="_blank" rel="noopener">@saurfang&lt;/a>,
&lt;a href="https://github.com/sfirke" target="_blank" rel="noopener">@sfirke&lt;/a>,
&lt;a href="https://github.com/ShanSabri" target="_blank" rel="noopener">@ShanSabri&lt;/a>,
&lt;a href="https://github.com/skhiggins" target="_blank" rel="noopener">@skhiggins&lt;/a>,
&lt;a href="https://github.com/SrinivasTammana" target="_blank" rel="noopener">@SrinivasTammana&lt;/a>,
&lt;a href="https://github.com/StanleyXu" target="_blank" rel="noopener">@StanleyXu&lt;/a>,
&lt;a href="https://github.com/statquant" target="_blank" rel="noopener">@statquant&lt;/a>,
&lt;a href="https://github.com/stla" target="_blank" rel="noopener">@stla&lt;/a>,
&lt;a href="https://github.com/stumoodie" target="_blank" rel="noopener">@stumoodie&lt;/a>,
&lt;a href="https://github.com/sushilashenoy" target="_blank" rel="noopener">@sushilashenoy&lt;/a>,
&lt;a href="https://github.com/Swarje" target="_blank" rel="noopener">@Swarje&lt;/a>,
&lt;a href="https://github.com/SymbolixAU" target="_blank" rel="noopener">@SymbolixAU&lt;/a>,
&lt;a href="https://github.com/talgalili" target="_blank" rel="noopener">@talgalili&lt;/a>,
&lt;a href="https://github.com/tbates" target="_blank" rel="noopener">@tbates&lt;/a>,
&lt;a href="https://github.com/tfitzhughilx" target="_blank" rel="noopener">@tfitzhughilx&lt;/a>,
&lt;a href="https://github.com/thk686" target="_blank" rel="noopener">@thk686&lt;/a>,
&lt;a href="https://github.com/ThorleyJack" target="_blank" rel="noopener">@ThorleyJack&lt;/a>,
&lt;a href="https://github.com/TinkaMiau" target="_blank" rel="noopener">@TinkaMiau&lt;/a>,
&lt;a href="https://github.com/TKoscik" target="_blank" rel="noopener">@TKoscik&lt;/a>,
&lt;a href="https://github.com/tungmilan" target="_blank" rel="noopener">@tungmilan&lt;/a>,
&lt;a href="https://github.com/twolodzko" target="_blank" rel="noopener">@twolodzko&lt;/a>,
&lt;a href="https://github.com/unDocUMeantIt" target="_blank" rel="noopener">@unDocUMeantIt&lt;/a>,
&lt;a href="https://github.com/vaibhav2903" target="_blank" rel="noopener">@vaibhav2903&lt;/a>,
&lt;a href="https://github.com/vermouthmjl" target="_blank" rel="noopener">@vermouthmjl&lt;/a>,
&lt;a href="https://github.com/vishnu1994" target="_blank" rel="noopener">@vishnu1994&lt;/a>,
&lt;a href="https://github.com/wehc1" target="_blank" rel="noopener">@wehc1&lt;/a>,
&lt;a href="https://github.com/wldnjs" target="_blank" rel="noopener">@wldnjs&lt;/a>,
&lt;a href="https://github.com/wolski" target="_blank" rel="noopener">@wolski&lt;/a>,
&lt;a href="https://github.com/xingbaodong" target="_blank" rel="noopener">@xingbaodong&lt;/a>,
&lt;a href="https://github.com/Xinzhu-Fang" target="_blank" rel="noopener">@Xinzhu-Fang&lt;/a>,
&lt;a href="https://github.com/YanpingGuo312" target="_blank" rel="noopener">@YanpingGuo312&lt;/a>, and
&lt;a href="https://github.com/yurivict" target="_blank" rel="noopener">@yurivict&lt;/a>&lt;/p></description></item><item><title>rlang 0.3.0</title><link>https://www.tidyverse.org/blog/2018/10/rlang-0-3-0/</link><pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/10/rlang-0-3-0/</guid><description>
&lt;h2 id="introduction">Introduction
&lt;a href="#introduction">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;re happy to announce that
&lt;a href="https://cran.r-project.org/package=rlang" target="_blank" rel="noopener">rlang 0.3.0&lt;/a> in now on CRAN! rlang is of most interest to package developers and R programmers, as it is intended for people developing data science tools rather than data scientists. rlang implements a consistent API for working with base types, hosts the tidy evaluation framework, and offers tools for error reporting. This release provides major improvements for each of those themes.&lt;/p>
&lt;p>Consult the
&lt;a href="https://rlang.r-lib.org/news/index.html#rlang-0-3-0" target="_blank" rel="noopener">changelog&lt;/a> for the full list of changes, including many bug fixes. The rlang API is still maturing and a number of functions and arguments were deprecated or renamed. Check the
&lt;a href="https://rlang.r-lib.org/news/index.html#lifecycle" target="_blank" rel="noopener">lifecycle section&lt;/a> for a summary of the API changes.&lt;/p>
&lt;h2 id="tidy-evaluation-and-tidy-dots">Tidy evaluation and tidy dots
&lt;a href="#tidy-evaluation-and-tidy-dots">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Tidy evaluation is the framework that powers data-masking APIs like dplyr, tidyr, or ggplot2. Tidy dots is a related feature that allows you to use &lt;code>!!!&lt;/code> in functions taking dots, among other things.&lt;/p>
&lt;h3 id="referring-to-columns-with-data">Referring to columns with &lt;code>.data&lt;/code>
&lt;a href="#referring-to-columns-with-data">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The main user-facing change is that subsetting the &lt;code>.data&lt;/code> pronoun with &lt;code>[[&lt;/code> now behaves as if the index were implicitly unquoted. Concretely, this means that the index can no longer be confused with a data frame column. Subsetting &lt;code>.data&lt;/code> is now always safe, even in functions:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">suppressPackageStartupMessages&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dplyr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">var&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">g&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">var&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="s">&amp;#34;g&amp;#34;&lt;/span>
&lt;span class="c1"># `df` contains `var` but the column doesn&amp;#39;t count!&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">group_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">.data[[var]]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 x 2&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'># Groups: g [2]&lt;/span>&lt;span>
#&amp;gt; var g
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;span> &lt;/span>&lt;span style='color: #555555;font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>1&lt;/span>&lt;span> 1 1
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>2&lt;/span>&lt;span> 2 1
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>3&lt;/span>&lt;span> 3 2
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>4&lt;/span>&lt;span> 4 2
&lt;/span>&lt;/pre>&lt;/div>
&lt;h3 id="new-tidy-dots-options">New tidy dots options
&lt;a href="#new-tidy-dots-options">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Tidy dots refers to a set of features enabled in functions collecting dots. To enable tidy dots, use &lt;code>list2()&lt;/code> instead of list:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">fn&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">list2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>With tidy dots, users can splice in lists of arguments:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arg1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arg2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;B&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">fn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">!!!&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; [[1]]
#&amp;gt; [1] 1
#&amp;gt;
#&amp;gt; [[2]]
#&amp;gt; [1] 2
#&amp;gt;
#&amp;gt; $arg1
#&amp;gt; [1] "A"
#&amp;gt;
#&amp;gt; $arg2
#&amp;gt; [1] "B"
#&amp;gt;
#&amp;gt; [[5]]
#&amp;gt; [1] 3
&lt;/pre>&lt;/div>
&lt;p>They can unquote names:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">nm&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span>
&lt;span class="nf">fn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">!!&lt;/span>&lt;span class="n">nm&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; $a
#&amp;gt; [1] 1
#&amp;gt;
#&amp;gt; $b
#&amp;gt; [1] 2
&lt;/pre>&lt;/div>
&lt;p>And trailing empty arguments are always ignored to make copy-pasting easier:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">fn&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">foo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;foo&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">foo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;bar&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; $foo
#&amp;gt; [1] "foo"
#&amp;gt;
#&amp;gt; $foo
#&amp;gt; [1] "bar"
&lt;/pre>&lt;/div>
&lt;p>While &lt;code>list2()&lt;/code> hard-codes these features, &lt;code>dots_list()&lt;/code> gains several options to control how to collect dots:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>.preserve_empty&lt;/code> preserves empty arguments:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">list3&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">dots_list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">...&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.preserve_empty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">list3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; $a
#&amp;gt; [1] 1
#&amp;gt;
#&amp;gt; $b
#&amp;gt;
#&amp;gt;
#&amp;gt; $c
#&amp;gt; [1] 2
&lt;/pre>&lt;/div>
&lt;p>We are using this option in &lt;code>env_bind()&lt;/code> and &lt;code>call_modify()&lt;/code> to allow assigning explicit missing values (see &lt;code>?missing_arg()&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">call&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">quote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">mean&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nf">call_modify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">,&lt;/span> &lt;span class="n">trim&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; mean(..., trim = )
&lt;/pre>&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;code>.homonyms&lt;/code> controls whether to keep all arguments that have the same name (the default), only the first or last of these, or throw an error:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">list3&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">dots_list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">...&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.homonyms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;last&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">list3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">foo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">foo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; $foo
#&amp;gt; [1] 3
#&amp;gt;
#&amp;gt; $bar
#&amp;gt; [1] 5
&lt;/pre>&lt;/div>
&lt;/li>
&lt;/ul>
&lt;p>These options can be set in &lt;code>enquos()&lt;/code> as well.&lt;/p>
&lt;h2 id="error-reporting">Error reporting
&lt;a href="#error-reporting">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>abort()&lt;/code> extends &lt;code>base::stop()&lt;/code> to make it easy to create error objects with
&lt;a href="https://adv-r.hadley.nz/conditions.html" target="_blank" rel="noopener">custom class and metadata&lt;/a>. With rlang 0.3.0, &lt;code>abort()&lt;/code> automatically stores a backtrace in the error object and supports chaining errors.&lt;/p>
&lt;h3 id="backtraces">Backtraces
&lt;a href="#backtraces">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Storing a backtrace in rlang errors makes it possible to post-process the call tree that lead to an error and simplify it substantially. Let&amp;rsquo;s define three functions calling each other, with &lt;code>tryCatch()&lt;/code> and &lt;code>evalq()&lt;/code> interspersed in order to create a complicated call tree:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">f&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nf">tryCatch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">g&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">warning&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">identity&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Try g()&lt;/span>
&lt;span class="n">g&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nf">evalq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">h&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="c1"># Eval h()&lt;/span>
&lt;span class="n">h&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nf">abort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Oh no!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># And fail!&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When a function signals an error with &lt;code>abort()&lt;/code>, the user is invited to call &lt;code>last_error()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">f&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; Error: Oh no!
#&amp;gt; &lt;span style='color: #555555;'>Call `rlang::last_error()` to see a backtrace&lt;/span>&lt;span>
&lt;/span>&lt;/pre>&lt;/div>
&lt;p>Calling &lt;code>last_error()&lt;/code> returns the last error object. The error prints with its backtrace:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">last_error&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; &lt;span style='font-weight: bold;'>&amp;lt;error&amp;gt;&lt;/span>&lt;span>
#&amp;gt; message: &lt;/span>&lt;span style='font-style: italic;'>Oh no!&lt;/span>&lt;span>
#&amp;gt; class: `rlang_error`
#&amp;gt; backtrace:
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─global::f()&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─global::g()&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─global::h()&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>Call `summary(rlang::last_error())` to see the full backtrace&lt;/span>&lt;span>
&lt;/span>&lt;/pre>&lt;/div>
&lt;p>The backtrace is simple and to the point because it is printed in a simplified form by default. If you&amp;rsquo;d like to see the full story (or include the full backtrace in a bug report), call &lt;code>summary()&lt;/code> on the error object:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">summary&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">last_error&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; &lt;span style='font-weight: bold;'>&amp;lt;error&amp;gt;&lt;/span>&lt;span>
#&amp;gt; message: &lt;/span>&lt;span style='font-style: italic;'>Oh no!&lt;/span>&lt;span>
#&amp;gt; class: `rlang_error`
#&amp;gt; fields: `message`, `trace` and `parent`
#&amp;gt; backtrace:
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'>█&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'>└─global::f()&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ├─base::tryCatch(g(), warning = identity)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> │ └─base:::tryCatchList(expr, classes, parentenv, handlers)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> │ └─base:::tryCatchOne(expr, names, parentenv, handlers[[1L]])&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> │ └─base:::doTryCatch(return(expr), name, parentenv, handler)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> └─global::g()&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ├─base::evalq(h())&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> │ └─base::evalq(h())&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> └─global::h()&lt;/span>&lt;span>
&lt;/span>&lt;/pre>&lt;/div>
&lt;p>Each call is prepended with a namespace prefix&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> to reveal the flow of control across package contexts.&lt;/p>
&lt;h3 id="chained-errors">Chained errors
&lt;a href="#chained-errors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Chaining errors is relevant when you&amp;rsquo;re calling low-level APIs such as web scraping, JSON parsing, etc. When these APIs encounter an error, they often fail with technical error messages. It is often a good idea to transform these developer-friendly error messages into something more meaningful and actionable for end users.&lt;/p>
&lt;p>Several programming languages provide the ability of chaining errors for these situations. With chained errors, the low level and high level contexts are clearly separated in the error report. This makes the error more legible for the end user, without hiding the low level information that might be crucial for figuring out the problem.&lt;/p>
&lt;p>Say we&amp;rsquo;re writing a function &lt;code>make_report()&lt;/code> to create an automated report and we&amp;rsquo;re downloading a file as part of the process with &lt;code>fetch_csv()&lt;/code>, which might be implemented in a package:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">fetch_csv&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">suppressWarnings&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="nf">read.csv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">url&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">prepare_data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">fetch_csv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">tibble&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">make_report&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">prepare_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># We&amp;#39;re not going to get there because all our attempts to download&lt;/span>
&lt;span class="c1"># a file are going to fail!&lt;/span>
&lt;span class="kc">...&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This function might fail in &lt;code>fetch_csv()&lt;/code> because of connection issues:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">make_report&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;https://rstats.edu/awesome-data.csv&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; Error in open.connection(file, "rt"): cannot open the connection to 'https://rstats.edu/awesome-data.csv'
&lt;/pre>&lt;/div>
&lt;p>Chaining errors makes it possible to transform this low-level API error into a high level error, without losing any debugging information. There are two steps involved in error chaining: catch low level errors, and rethrow them with a high level message. Catching can be done with &lt;code>base::tryCatch()&lt;/code> or &lt;code>rlang::with_handlers()&lt;/code>. Both these functions take an error handler: a function of one argument which is passed an error object when an error occurs.&lt;/p>
&lt;p>To chain an error, simply call &lt;code>abort()&lt;/code> in the error handler, with a high level error message and the original error passed as the &lt;code>parent&lt;/code> argument. Here we&amp;rsquo;re going to use &lt;code>with_handlers()&lt;/code> because it supports the rlang syntax for lambda functions (also used in purrr), which makes it easy to write simple handlers:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">prepare_data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">with_handlers&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">error&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="nf">abort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Can&amp;#39;t download file!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">parent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">.)&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nf">fetch_csv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">tibble&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nf">make_report&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;https://rstats.edu/awesome-data.csv&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; Error: Can't download file!
#&amp;gt; Parents:
#&amp;gt; ─cannot open the connection to 'https://rstats.edu/awesome-data.csv'
&lt;/pre>&lt;/div>
&lt;p>The main error message is now the high level one. The low level message is still included in the output to avoid hiding precious debugging information. Errors can be chained multiple times and all the messages and all parent messages are included in the output. But note that only errors thrown with &lt;code>abort()&lt;/code> contain a backtrace:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">last_error&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; &lt;span style='font-weight: bold;'>&amp;lt;error&amp;gt;&lt;/span>&lt;span>
#&amp;gt; message: &lt;/span>&lt;span style='font-style: italic;'>Can't download file!&lt;/span>&lt;span>
#&amp;gt; class: `rlang_error`
#&amp;gt; backtrace:
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─global::make_report("https://rstats.edu/awesome-data.csv")&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─global::prepare_data(url)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='font-weight: bold;'>&amp;lt;error: parent&amp;gt;&lt;/span>&lt;span>
#&amp;gt; message: &lt;/span>&lt;span style='font-style: italic;'>cannot open the connection to 'https://rstats.edu/awesome-data.csv'&lt;/span>&lt;span>
#&amp;gt; class: `simpleError`
&lt;/span>&lt;/pre>&lt;/div>
&lt;p>For this reason, chaining errors is more effective with rlang errors than with errors thrown with &lt;code>stop()&lt;/code> and the error report could be improved if &lt;code>fetch_csv()&lt;/code> used &lt;code>abort()&lt;/code> instead of &lt;code>thrown()&lt;/code>. Fortunately it is easy to transform any error into an rlang error without changing any code!&lt;/p>
&lt;h3 id="promoting-base-errors-to-rlang-errors">Promoting base errors to rlang errors
&lt;a href="#promoting-base-errors-to-rlang-errors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>rlang provides &lt;code>with_abort()&lt;/code> to run code with base errors automatically promoted to rlang errors. Let&amp;rsquo;s wrap around &lt;code>fetch_csv()&lt;/code> to run it in a &lt;code>with_abort&lt;/code> context:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">my_fetch_csv&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">with_abort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">fetch_csv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">prepare_data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">with_handlers&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">error&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="nf">abort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Can&amp;#39;t download file!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">parent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">.)&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nf">my_fetch_csv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">tibble&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Our own function calls &lt;code>abort()&lt;/code> and the foreign functions are called within a &lt;code>with_abort()&lt;/code>. Let&amp;rsquo;s see how chained errors now look like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">make_report&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;https://rstats.edu/awesome-data.csv&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; Error: Can't download file!
#&amp;gt; Parents:
#&amp;gt; ─cannot open the connection to 'https://rstats.edu/awesome-data.csv'
#&amp;gt; &lt;span style='color: #555555;'>Call `rlang::last_error()` to see a backtrace&lt;/span>&lt;span>
&lt;/span>&lt;/pre>&lt;/div>
&lt;p>The backtraces are automatically segmented between low level and high level contexts:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">last_error&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; &lt;span style='font-weight: bold;'>&amp;lt;error&amp;gt;&lt;/span>&lt;span>
#&amp;gt; message: &lt;/span>&lt;span style='font-style: italic;'>Can't download file!&lt;/span>&lt;span>
#&amp;gt; class: `rlang_error`
#&amp;gt; backtrace:
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─global::make_report("https://rstats.edu/awesome-data.csv")&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─global::prepare_data(url)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='font-weight: bold;'>&amp;lt;error: parent&amp;gt;&lt;/span>&lt;span>
#&amp;gt; message: &lt;/span>&lt;span style='font-style: italic;'>cannot open the connection to 'https://rstats.edu/awesome-data.csv'&lt;/span>&lt;span>
#&amp;gt; class: `rlang_error`
#&amp;gt; backtrace:
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─global::my_fetch_csv(url)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─global::fetch_csv(url)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─utils::read.csv(url(url))&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─utils::read.table(...)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ─base::open.connection(file, "rt")&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #555555;'>Call `summary(rlang::last_error())` to see the full backtrace&lt;/span>&lt;span>
&lt;/span>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">summary&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">last_error&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; &lt;span style='font-weight: bold;'>&amp;lt;error&amp;gt;&lt;/span>&lt;span>
#&amp;gt; message: &lt;/span>&lt;span style='font-style: italic;'>Can't download file!&lt;/span>&lt;span>
#&amp;gt; class: `rlang_error`
#&amp;gt; fields: `message`, `trace` and `parent`
#&amp;gt; backtrace:
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'>█&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'>└─global::make_report("https://rstats.edu/awesome-data.csv")&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> └─global::prepare_data(url)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='font-weight: bold;'>&amp;lt;error: parent&amp;gt;&lt;/span>&lt;span>
#&amp;gt; message: &lt;/span>&lt;span style='font-style: italic;'>cannot open the connection to 'https://rstats.edu/awesome-data.csv'&lt;/span>&lt;span>
#&amp;gt; class: `rlang_error`
#&amp;gt; fields: `message`, `trace`, `parent` and `error`
#&amp;gt; backtrace:
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'>█&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'>└─global::my_fetch_csv(url)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ├─rlang::with_abort(fetch_csv(url))&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> │ └─base::withCallingHandlers(...)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> └─global::fetch_csv(url)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ├─base::suppressWarnings(read.csv(url(url)))&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> │ └─base::withCallingHandlers(expr, warning = function(w) invokeRestart("muffleWarning"))&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> └─utils::read.csv(url(url))&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> └─utils::read.table(...)&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> ├─base::open(file, "rt")&lt;/span>&lt;span>
#&amp;gt; &lt;/span>&lt;span style='color: #BB0000;'> └─base::open.connection(file, "rt")&lt;/span>&lt;span>
&lt;/span>&lt;/pre>&lt;/div>
&lt;p>If you&amp;rsquo;d like to promote all errors to rlang errors at all time, you can try out this experimental option by adding this to your RProfile:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">requireNamespace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rlang&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">quietly&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">quote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rlang&lt;/span>&lt;span class="o">:::&lt;/span>&lt;span class="nf">add_backtrace&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="environments">Environments
&lt;a href="#environments">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The environment API gains two specialised print methods. &lt;code>env_print()&lt;/code> prints information about the contents and the properties of environments. If you don&amp;rsquo;t specify an environment, it prints the current environment by default, here the global environment:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">env_print&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; &lt;span style='font-weight: bold;'>&amp;lt;environment: global&amp;gt;&lt;/span>&lt;span>
#&amp;gt; parent: &amp;lt;environment: package:bindrcpp&amp;gt;
#&amp;gt; bindings:
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>fn: &amp;lt;fn&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>var: &amp;lt;chr&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>x: &amp;lt;list&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>fetch_csv: &amp;lt;fn&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>my_fetch_csv: &amp;lt;fn&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>list3: &amp;lt;fn&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>nm: &amp;lt;chr&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>.Random.seed: &amp;lt;int&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>call: &amp;lt;language&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>f: &amp;lt;fn&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>g: &amp;lt;fn&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>h: &amp;lt;fn&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>make_report: &amp;lt;fn&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>df: &amp;lt;tibble&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>colourise_chunk: &amp;lt;fn&amp;gt;
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>prepare_data: &amp;lt;fn&amp;gt;
&lt;/span>&lt;/pre>&lt;/div>
&lt;p>The global environment doesn&amp;rsquo;t have any fancy features. Let&amp;rsquo;s look at a package environment:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">env_print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">pkg_env&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rlang&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; &lt;span style='font-weight: bold;'>&amp;lt;environment: package:rlang&amp;gt; [L]&lt;/span>&lt;span>
#&amp;gt; parent: &amp;lt;environment: package:stats&amp;gt;
#&amp;gt; bindings:
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>is_dbl_na: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>coerce_class: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>as_quosure: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>as_quosures: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>quo_get_env: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>return_to: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>env_binding_are_lazy: &amp;lt;fn&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>quo_is_call: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>new_call: &amp;lt;fn&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>is_scoped: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>set_names: &amp;lt;fn&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>expr_deparse: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>`f_env&amp;lt;-`: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>as_box_if: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>`%|%`: &amp;lt;fn&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>lang_head: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>ns_env: &amp;lt;fn&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>list_along: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>parse_quo: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; &lt;/span>&lt;span style='color: #555555;font-weight: bold;'>* &lt;/span>&lt;span>lang_tail: &amp;lt;lazy&amp;gt; [L]
#&amp;gt; * ... with 438 more bindings
&lt;/span>&lt;/pre>&lt;/div>
&lt;p>This environment contains all functions exported by rlang. Its header includes the &lt;code>[L]&lt;/code> tag to indicate that the environment is locked: you can&amp;rsquo;t add or remove bindings from it. The same tag appears next to each binding to indicate that the bindings are locked and can&amp;rsquo;t be changed to point to a different object. Finally, note how the type of many bindings is &lt;code>&amp;lt;lazy&amp;gt;&lt;/code>. That&amp;rsquo;s because packages are lazily loaded for performance reasons. Technically, the binding points to a &lt;em>promise&lt;/em> that will eventually evaluate to the actual object, the first time it is accessed.&lt;/p>
&lt;p>The second print method concerns lists of environments as returned by &lt;code>search_envs()&lt;/code> and &lt;code>env_parents()&lt;/code>. While &lt;code>base::search()&lt;/code> returns the names of environments on the search path, &lt;code>search_envs()&lt;/code> returns the corresponding list of environments:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">search_envs&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; [[1]] $ &amp;lt;env: global&amp;gt;
#&amp;gt; [[2]] $ &amp;lt;env: package:bindrcpp&amp;gt;
#&amp;gt; [[3]] $ &amp;lt;env: package:dplyr&amp;gt;
#&amp;gt; [[4]] $ &amp;lt;env: package:rlang&amp;gt;
#&amp;gt; [[5]] $ &amp;lt;env: package:stats&amp;gt;
#&amp;gt; [[6]] $ &amp;lt;env: package:graphics&amp;gt;
#&amp;gt; [[7]] $ &amp;lt;env: package:grDevices&amp;gt;
#&amp;gt; [[8]] $ &amp;lt;env: package:utils&amp;gt;
#&amp;gt; [[9]] $ &amp;lt;env: package:datasets&amp;gt;
#&amp;gt; [[10]] $ &amp;lt;env: package:methods&amp;gt;
#&amp;gt; [[11]] $ &amp;lt;env: Autoloads&amp;gt;
#&amp;gt; [[12]] $ &amp;lt;env: package:base&amp;gt;
&lt;/pre>&lt;/div>
&lt;p>&lt;code>env_parents()&lt;/code> returns all parents of a given environment. For search environments, the last parent of the list is the empty environment:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">envs&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">env_parents&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">pkg_env&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;utils&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">envs&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; [[1]] $ &amp;lt;env: package:datasets&amp;gt;
#&amp;gt; [[2]] $ &amp;lt;env: package:methods&amp;gt;
#&amp;gt; [[3]] $ &amp;lt;env: Autoloads&amp;gt;
#&amp;gt; [[4]] $ &amp;lt;env: package:base&amp;gt;
#&amp;gt; [[5]] $ &amp;lt;env: empty&amp;gt;
&lt;/pre>&lt;/div>
&lt;p>For all other environments, the last parent is either the empty environment or the global environment. Most of the time the global env is part of the ancestry because package namespaces inherit from the search path:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">env_parents&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">ns_env&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;rlang&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; [[1]] $ &amp;lt;env: imports:rlang&amp;gt;
#&amp;gt; [[2]] $ &amp;lt;env: namespace:base&amp;gt;
#&amp;gt; [[3]] $ &amp;lt;env: global&amp;gt;
&lt;/pre>&lt;/div>
&lt;p>It is possible to construct environments insulated from the search path. We&amp;rsquo;ll use &lt;code>env()&lt;/code> to create such an environment. Counting from rlang 0.3.0, you can pass a single unnamed environment to &lt;code>env()&lt;/code> to specify a parent. The following creates a child of the base package:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">e&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">env&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">base_env&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">foo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;bar&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">env_parents&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; [[1]] $ &amp;lt;env: package:base&amp;gt;
#&amp;gt; [[2]] $ &amp;lt;env: empty&amp;gt;
&lt;/pre>&lt;/div>
&lt;p>Here is how to create a grandchild of the empty environment:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">e&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">env&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">env&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">empty_env&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;span class="nf">env_parents&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class = "output">&lt;pre class="knitr r">#&amp;gt; [[1]] &amp;lt;env: 0x7fb6ec084238&amp;gt;
#&amp;gt; [[2]] $ &amp;lt;env: empty&amp;gt;
&lt;/pre>&lt;/div>
&lt;p>We hope that these print methods make it easier to explore the structure and contents of R environments.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to all contributors!&lt;/p>
&lt;p>
&lt;a href="https://github.com/akbertram" target="_blank" rel="noopener">＠akbertram&lt;/a>,
&lt;a href="https://github.com/AndreMikulec" target="_blank" rel="noopener">＠AndreMikulec&lt;/a>,
&lt;a href="https://github.com/andresimi" target="_blank" rel="noopener">＠andresimi&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">＠billdenney&lt;/a>,
&lt;a href="https://github.com/BillDunlap" target="_blank" rel="noopener">＠BillDunlap&lt;/a>,
&lt;a href="https://github.com/cfhammill" target="_blank" rel="noopener">＠cfhammill&lt;/a>,
&lt;a href="https://github.com/egnha" target="_blank" rel="noopener">＠egnha&lt;/a>,
&lt;a href="https://github.com/grayskripko" target="_blank" rel="noopener">＠grayskripko&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">＠hadley&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">＠IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">＠jimhester&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">＠krlmlr&lt;/a>,
&lt;a href="https://github.com/marinsokol5" target="_blank" rel="noopener">＠marinsokol5&lt;/a>,
&lt;a href="https://github.com/md0u80c9" target="_blank" rel="noopener">＠md0u80c9&lt;/a>,
&lt;a href="https://github.com/mikmart" target="_blank" rel="noopener">＠mikmart&lt;/a>,
&lt;a href="https://github.com/move[bot]" target="_blank" rel="noopener">＠move[bot]&lt;/a>,
&lt;a href="https://github.com/NikNakk" target="_blank" rel="noopener">＠NikNakk&lt;/a>,
&lt;a href="https://github.com/privefl" target="_blank" rel="noopener">＠privefl&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">＠romainfrancois&lt;/a>,
&lt;a href="https://github.com/wibeasley" target="_blank" rel="noopener">＠wibeasley&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">＠yutannihilation&lt;/a>, and
&lt;a href="https://github.com/zslajchrt" target="_blank" rel="noopener">＠zslajchrt&lt;/a>&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Or &lt;code>global::&lt;/code> if the function is defined in the global workspace. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>processx 3.2.0</title><link>https://www.tidyverse.org/blog/2018/09/processx-3.2.0/</link><pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/09/processx-3.2.0/</guid><description>
&lt;h2 id="introduction">Introduction
&lt;a href="#introduction">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;re delighted to announce that
&lt;a href="https://cran.r-project.org/package=processx" target="_blank" rel="noopener">processx&lt;/a> in now on CRAN.
processx makes it easy to run external processes from R. It&amp;rsquo;s an extended
version of &lt;code>system()&lt;/code> and &lt;code>system2()&lt;/code>, that gives you greater control,
and more visibility into the running process.&lt;/p>
&lt;p>It&amp;rsquo;s hard to make processx examples work across platforms because system
utilities vary from OS to OS. To work around this problem, processx bundles
a small program, &lt;code>px&lt;/code>, which can perform some basic tasks, like printing
to the standard output and error, and waiting for a given amount of time.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">px&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">processx&lt;/span>&lt;span class="o">:::&lt;/span>&lt;span class="nf">get_tool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;px&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">px&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;/Users/gaborcsardi/r_pkgs/processx/bin//px&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>processx deals with two kinds of external processes: foreground and
background. Foreground processes are synchronous, R waits until they
finish, and collects the output and the exit code of the process.
Background processes are asynchronous, processx does not wait for them
to finish, they run concurrently and can communicate with the R process.&lt;/p>
&lt;h2 id="foreground-processes">Foreground processes
&lt;a href="#foreground-processes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>processx::run()&lt;/code> runs a foreground external process. It is somewhat
similar to the &lt;code>system2()&lt;/code> base R function. Its basic usage is:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">processx&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>command&lt;/code> is a string (length 1 character vector), and &lt;code>args&lt;/code> should be a
character vector of arguments. &lt;code>command&lt;/code> can be an absolute file name, a
relative file name, or a command name. For the latter, the current &lt;code>PATH&lt;/code>
is used to find the command. For example these both work on Unix systems:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/bin/ls&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ls&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here is the output of &lt;code>px --help&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">pxhelp&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;--help&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">cat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pxhelp&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">stderr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Usage: px [command arg] [command arg] ...&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Commands:&lt;/span>
&lt;span class="c1">#&amp;gt; sleep &amp;lt;seconds&amp;gt; -- sleep for a number os seconds&lt;/span>
&lt;span class="c1">#&amp;gt; out &amp;lt;string&amp;gt; -- print string to stdout&lt;/span>
&lt;span class="c1">#&amp;gt; err &amp;lt;string&amp;gt; -- print string to stderr&lt;/span>
&lt;span class="c1">#&amp;gt; outln &amp;lt;string&amp;gt; -- print string to stdout, add newline&lt;/span>
&lt;span class="c1">#&amp;gt; errln &amp;lt;string&amp;gt; -- print string to stderr, add newline&lt;/span>
&lt;span class="c1">#&amp;gt; cat &amp;lt;filename&amp;gt; -- print file to stdout&lt;/span>
&lt;span class="c1">#&amp;gt; return &amp;lt;exitcode&amp;gt; -- return with exitcode&lt;/span>
&lt;span class="c1">#&amp;gt; write &amp;lt;fd&amp;gt; &amp;lt;string&amp;gt; -- write to file descriptor&lt;/span>
&lt;span class="c1">#&amp;gt; echo &amp;lt;fd1&amp;gt; &amp;lt;fd2&amp;gt; &amp;lt;nbytes&amp;gt; -- echo from fd to another fd&lt;/span>
&lt;span class="c1">#&amp;gt; getenv &amp;lt;var&amp;gt; -- environment variable to stdout&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="quoting">Quoting
&lt;a href="#quoting">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>processx does not use a shell to start up the external process, so special
characters in &lt;code>command&lt;/code> and &lt;code>args&lt;/code> need &lt;em>not&lt;/em> be shell quoted. This makes it
much easier to support arbitrary file names (that may contain spaces or
special characters) in calls to external programs.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;outln&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;arg - with spaces&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;outln&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#39;arg with quote&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; $status&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 0&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; $stdout&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;arg - with spaces\n&amp;#39;arg with quote&amp;#39;\n&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; $stderr&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; $timeout&lt;/span>
&lt;span class="c1">#&amp;gt; [1] FALSE&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="interruption">Interruption
&lt;a href="#interruption">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Unlike &lt;code>system()&lt;/code> and &lt;code>system2()&lt;/code>, &lt;code>processx::run()&lt;/code> is always
interruptible, you can use the usual interruption key, e.g. ESC in RStudio,
or CTRL+C in a terminal. On interruption, the external process is
terminated.&lt;/p>
&lt;h3 id="spinner">Spinner
&lt;a href="#spinner">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>&lt;code>run()&lt;/code> can show a friendly spinner while the external process is running.
If the process takes longer then a few second, it is a good idea to use it.
The spinner is automatically hidden if R is non-interactive:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;5&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">spinner&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="time-limit">Time limit
&lt;a href="#time-limit">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>You can specify a time limit in &lt;code>run()&lt;/code>, in seconds, or as a &lt;code>difftime&lt;/code>
object:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;5&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">timeout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Error in run(px, c(&amp;#34;sleep&amp;#34;, &amp;#34;5&amp;#34;), timeout = 1): System command timeout&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>run()&lt;/code> throws an error of class &lt;code>system_command_timeout_error&lt;/code>, so you
can easily catch timeouts using &lt;code>tryCatch()&lt;/code>, if you wish so. By default
&lt;code>run()&lt;/code> also throws an error if the system command fails, as indicated by
its exit status.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;return&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;10&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Error in run(px, c(&amp;#34;return&amp;#34;, &amp;#34;10&amp;#34;)): System command error&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>error_on_status&lt;/code> argument can be set to &lt;code>FALSE&lt;/code> to avoid errors
for non-zero exit statuses. This can be useful if you anticipate a failure
and want to handle it without throwing an R error, or if a non-zero exit
status does not indicate an error for the given program.&lt;/p>
&lt;h3 id="standard-output-and-error">Standard output and error
&lt;a href="#standard-output-and-error">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>By default, &lt;code>run()&lt;/code> collects all standard output and error of the process
and retuns them in two strings. If desired, it can also echo them to
the screen while the external process is running. (They are still collected
and returned, so you can still compute on them.)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">outp&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ls&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;..&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">echo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; _redirects&lt;/span>
&lt;span class="c1">#&amp;gt; articles&lt;/span>
&lt;span class="c1">#&amp;gt; contribute.md&lt;/span>
&lt;span class="c1">#&amp;gt; help-is-on-the-way.jpg&lt;/span>
&lt;span class="c1">#&amp;gt; help.md&lt;/span>
&lt;span class="c1">#&amp;gt; learn.md&lt;/span>
&lt;span class="c1">#&amp;gt; lifecycle.md&lt;/span>
&lt;span class="c1">#&amp;gt; packages.md&lt;/span>
&lt;span class="c1">#&amp;gt; reprex-addin.png&lt;/span>
&lt;span class="c1">#&amp;gt; reprex-addins-menu.png&lt;/span>
&lt;span class="c1">#&amp;gt; rstudio-logo.svg&lt;/span>
&lt;span class="c1">#&amp;gt; test-ggplot2-1.png&lt;/span>
&lt;span class="c1">#&amp;gt; test.md&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="setting-environment-variables">Setting environment variables
&lt;a href="#setting-environment-variables">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>You can set environment variables for the external process via the &lt;code>env&lt;/code>
argument. Usually you want to add these variables to those already set in
the current process, otherwise the external process might fail if some
essential environment variables (like &lt;code>PATH&lt;/code>) are not set:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;getenv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;FOO&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">Sys.getenv&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">FOO&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;bar&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; $status&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 0&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; $stdout&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;bar\n&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; $stderr&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; $timeout&lt;/span>
&lt;span class="c1">#&amp;gt; [1] FALSE&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="advanced-usage-background-processes">Advanced usage: background processes
&lt;a href="#advanced-usage-background-processes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>processx really shines when it comes to controlling background processes.
To start a backgound process, you create an R6 object of class &lt;code>process&lt;/code>.
The arguments of &lt;code>process$new()&lt;/code> mostly correspond to the arguments of
&lt;code>run()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">proc&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;10&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">proc&lt;/span>
&lt;span class="c1">#&amp;gt; PROCESS &amp;#39;px&amp;#39;, running, pid 61100.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>process&lt;/code> objects have methods to query process information and to
manipulate the subprocess. See &lt;code>?process&lt;/code> for a complete list of methods.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">get_name&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;px&amp;#34;&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">get_cmdline&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;/Users/gaborcsardi/r_pkgs/processx/bin//px&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [2] &amp;#34;sleep&amp;#34; &lt;/span>
&lt;span class="c1">#&amp;gt; [3] &amp;#34;10&amp;#34;&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">get_exe&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;/Users/gaborcsardi/r_pkgs/processx/bin/px&amp;#34;&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">is_alive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] TRUE&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">suspend&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; NULL&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">get_status&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;stopped&amp;#34;&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">resume&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; NULL&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">get_status&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;running&amp;#34;&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">kill&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] TRUE&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">is_alive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] FALSE&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">get_exit_status&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] -9&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="output-and-polling">Output and polling
&lt;a href="#output-and-polling">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The standard output and standard error of a background process are ignored
by default. To write them to files, set the &lt;code>stdout&lt;/code> and/or &lt;code>stderr&lt;/code>
arguments to the paths of the files. Alternatively, processx can create
connections for standard output and error, and R can read from these
connections or poll them. Polling a set of connections or processes means
that R waits until data is available on any of the connections, or a
timeout expires. This is useful if the R process is waiting on one or more
processes.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">proc&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;outln&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;foo&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;errln&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;bar&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">stdout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;|&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;stderr&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;|&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">poll_io&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">-1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; output error process &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;#34;ready&amp;#34; &amp;#34;silent&amp;#34; &amp;#34;nopipe&amp;#34;&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">read_output_lines&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;foo&amp;#34;&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">poll_io&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">-1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; output error process &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;#34;silent&amp;#34; &amp;#34;ready&amp;#34; &amp;#34;nopipe&amp;#34;&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">read_error_lines&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;bar&amp;#34;&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">poll_io&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">-1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; output error process &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;#34;silent&amp;#34; &amp;#34;ready&amp;#34; &amp;#34;nopipe&amp;#34;&lt;/span>
&lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">is_alive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] FALSE&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>$poll_io()&lt;/code> also returns when the process terminates.&lt;/p>
&lt;p>To poll multiple processes, the non-member &lt;code>poll()&lt;/code> function can be used,
this takes a list of processes:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">proc1&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;0.5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;outln&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;foo1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">stdout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;|&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;stderr&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;|&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">proc2&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;outln&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;foo2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">stdout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;|&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;stderr&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;|&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">poll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">proc1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">proc2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="m">-1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [[1]]&lt;/span>
&lt;span class="c1">#&amp;gt; output error process &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;#34;ready&amp;#34; &amp;#34;silent&amp;#34; &amp;#34;nopipe&amp;#34; &lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[2]]&lt;/span>
&lt;span class="c1">#&amp;gt; output error process &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;#34;silent&amp;#34; &amp;#34;silent&amp;#34; &amp;#34;nopipe&amp;#34;&lt;/span>
&lt;span class="n">proc1&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">read_output_lines&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;foo1&amp;#34;&lt;/span>
&lt;span class="nf">poll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">proc1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">proc2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="m">-1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [[1]]&lt;/span>
&lt;span class="c1">#&amp;gt; output error process &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;#34;silent&amp;#34; &amp;#34;silent&amp;#34; &amp;#34;nopipe&amp;#34; &lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; [[2]]&lt;/span>
&lt;span class="c1">#&amp;gt; output error process &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;#34;ready&amp;#34; &amp;#34;silent&amp;#34; &amp;#34;nopipe&amp;#34;&lt;/span>
&lt;span class="n">proc2&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">read_output_lines&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;foo2&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="process-tree-cleanup">Process tree cleanup
&lt;a href="#process-tree-cleanup">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>In addition to terminating the subprocess, processx supports terminating
all child processes that were started by the subprocess, and the child
processes of those, etc.&lt;/p>
&lt;p>To request process tree cleanup, set the &lt;code>cleanup_tree&lt;/code> argument of &lt;code>run()&lt;/code>
or the &lt;code>cleanup&lt;/code> argument of &lt;code>process$new()&lt;/code> to &lt;code>TRUE&lt;/code>. (It is the
default for &lt;code>process$new()&lt;/code>.) To clean up manually, use the &lt;code>$kill_tree()&lt;/code>
method.&lt;/p>
&lt;h3 id="use-case-wait-for-an-external-process-to-be-ready">Use case: wait for an external process to be ready
&lt;a href="#use-case-wait-for-an-external-process-to-be-ready">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>When starting up an external process, sometimes you need to wait until
the process is ready to receive input. E.g. PhantomJS is a headless
browser, used for testing web applications. The headless browser is
queried and controlled via an HTTP socket. PhantomJS has some startup time,
and to make sure that it is ready for input, you need need to wait until
it logs an INFO line to its standard output:&lt;/p>
&lt;pre>&lt;code>❯ phantomjs -w
[INFO - 2018-08-21T19:57:53.957Z] GhostDriver - Main - running on port 8910
^C
&lt;/code>&lt;/pre>&lt;p>So processx must capture the standard output and wait until the message
is printed. If the message is not printed within a timeout we throw an
error. On success the function returns the PhantomJS &lt;code>process&lt;/code> object:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">start_program&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">timeout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">timeout&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.difftime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">timeout&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">units&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;secs&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">deadline&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">Sys.time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">timeout&lt;/span>
&lt;span class="n">px&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">stdout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;|&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">while &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">is_alive&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">now&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">Sys.time&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">deadline&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">poll_time&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">as.double&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">deadline&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">now&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">units&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;secs&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="m">1000&lt;/span>
&lt;span class="n">px&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">poll_io&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">as.integer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poll_time&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">lines&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">px&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">read_output_lines&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">any&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">grepl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lines&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="nf">return&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">px&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">kill&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">stop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Cannot start &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">command&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;code>start_program&lt;/code> like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">start_program&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;phantomjs&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;-w&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;running on port&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some comments about &lt;code>start_program()&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>It waits for &lt;code>message&lt;/code> to show up in the standard output of the process.&lt;/li>
&lt;li>If this does not happen within 5 seconds, it throws an error.&lt;/li>
&lt;li>On success, it returns the process object.&lt;/li>
&lt;li>The returned process object still has a connection to the standard output
of the process. This needs to be read out regularly, otherwise its buffer
fills up, and the subprocess stops, until the buffer it freed.
Alternatively, one can close it with &lt;code>close(px$get_output_connection())&lt;/code>.&lt;/li>
&lt;li>If an error happens, the subprocess is terminated when the process object,
referred to by &lt;code>px&lt;/code> within the function, is garbage collected.&lt;/li>
&lt;/ul>
&lt;h2 id="related-tools">Related tools
&lt;a href="#related-tools">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="the-ps-package">The ps package
&lt;a href="#the-ps-package">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The
&lt;a href="https://ps.r-lib.org" target="_blank" rel="noopener">ps&lt;/a> package deals with system processes in
general. processx and ps methods overlap, in fact processx uses ps to
implement some of its methods. It is also possible to create a &lt;code>ps_handle&lt;/code>
object from a processx object, with the &lt;code>$as_ps_handle()&lt;/code> method.
This can then be used with the ps functions directly:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">proc&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;sleep&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">ps&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">proc&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="nf">as_ps_handle&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">ps&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">ps_memory_info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ps&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; rss vms pfaults pageins &lt;/span>
&lt;span class="c1">#&amp;gt; 663552 2491170816 323 0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The ps package includes a testthat reporter that can be used to check
that testthat test cases clean up all their child processes and close
their connections and open files. See &lt;code>?ps::CleanupReporter&lt;/code> for details.&lt;/p>
&lt;p>Here is a simple example on how to use it. In the &lt;code>testthat.R&lt;/code> file of your
package, update the &lt;code>test_check()&lt;/code> call to use &lt;code>CleanupReporter&lt;/code>. Since
ps is not supported on all platforms (only Windows, macOS and Linux
currently), we also need to check for ps support:&lt;/p>
&lt;pre>&lt;code>if (ps::ps_is_supported()) {
reporter &amp;lt;- ps::CleanupReporter(testthat::SummaryReporter)$new()
} else {
## ps does not support this platform
reporter &amp;lt;- &amp;quot;progress&amp;quot;
}
test_check(&amp;quot;&amp;lt;package-name&amp;gt;&amp;quot;, reporter = reporter)
&lt;/code>&lt;/pre>&lt;p>&lt;code>CleanupReporter&lt;/code> will check for leftover child processes, R connections
and open files at the end of each &lt;code>test_that()&lt;/code> block. If a check fails,
it generates a regular testthat test failure.&lt;/p>
&lt;h3 id="the-callr-package">The callr package
&lt;a href="#the-callr-package">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The callr package uses processx to start another R process, and run R
code in it. It can start R processes synchonously or asynchronously,
and the R processes can be either state-less or stateful. See &lt;code>?callr::r&lt;/code>,
&lt;code>?callr::r_process&lt;/code> and &lt;code>?callr::r_session&lt;/code> for details.&lt;/p>
&lt;h2 id="links">Links:
&lt;a href="#links">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;a href="https://github.com/r-lib/processx" target="_blank" rel="noopener">processx on GitHub&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://processx.r-lib.org" target="_blank" rel="noopener">processx documentation&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://cran.r-project.org/package=ps" target="_blank" rel="noopener">ps on CRAN&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://cran.r-project.org/package=callr" target="_blank" rel="noopener">callr on CRAN&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We’re grateful to the 8 people who contributed issues, code and comments
since the last processx release:&lt;/p>
&lt;p>
&lt;a href="https://github.com/breichholf" target="_blank" rel="noopener">＠breichholf&lt;/a>,
&lt;a href="https://github.com/dchiu911" target="_blank" rel="noopener">＠dchiu911&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">＠gaborcsardi&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">＠hadley&lt;/a>,
&lt;a href="https://github.com/joelnitta" target="_blank" rel="noopener">＠joelnitta&lt;/a>,
&lt;a href="https://github.com/matthijsvanderloos" target="_blank" rel="noopener">＠matthijsvanderloos&lt;/a>,
&lt;a href="https://github.com/maxheld83" target="_blank" rel="noopener">＠maxheld83&lt;/a>, and
&lt;a href="https://github.com/wlandau" target="_blank" rel="noopener">＠wlandau&lt;/a>&lt;/p></description></item><item><title>scales 1.0.0</title><link>https://www.tidyverse.org/blog/2018/08/scales-1-0-0/</link><pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/08/scales-1-0-0/</guid><description>&lt;p>We&amp;rsquo;re delighted to announce the release of
&lt;a href="https://scales.r-lib.org/" target="_blank" rel="noopener">scales&lt;/a> 1.0.0.
The scales packages provides the internal scaling infrastructure to ggplot2 and its functions allow users to customize the transformations, breaks, guides and palettes used in visualizations in ggplot2 and beyond.&lt;/p>
&lt;p>This is a major release with significant changes to the popular formatter
functions, and added transformations. Below we demonstrate some of the biggest
changes in this release including:&lt;/p>
&lt;ul>
&lt;li>updated formatter functions&lt;/li>
&lt;li>new transformations&lt;/li>
&lt;li>improved breaks on log-transformed scales&lt;/li>
&lt;/ul>
&lt;p>See the
&lt;a href="https://scales.r-lib.org/news/index.html" target="_blank" rel="noopener">News&lt;/a> for a detailed list of changes
and visit
&lt;a href="https://scales.r-lib.org/" target="_blank" rel="noopener">the new website&lt;/a> for complete documentation and
additional usage examples.&lt;/p>
&lt;p>Install the latest version with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;scales&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="formatter-changes">Formatter changes
&lt;a href="#formatter-changes">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to the help of
&lt;a href="https://github.com/larmarange" target="_blank" rel="noopener">@larmarange&lt;/a>, scales has
now added a generic formatter function, &lt;code>number_format()&lt;/code>, that powers the majority
of the formatters in the package.&lt;/p>
&lt;p>This change altered the arguments of most of the formatters:
&lt;code>comma_format()&lt;/code>, &lt;code>percent_format()&lt;/code>, &lt;code>unit_format()&lt;/code>, &lt;code>dollar_format()&lt;/code>,
&lt;code>ordinal_format()&lt;/code>, and &lt;code>scientific_format()&lt;/code>. All gained new arguments &lt;code>accuracy&lt;/code>,
&lt;code>scale&lt;/code>, &lt;code>prefix&lt;/code>, and &lt;code>suffix&lt;/code>, allowing users to specify rounding accuracy,
a scaling value, a prefix, and a suffix to
customize output. Furthermore, all of these functions now allow user
specification of the thousands separator, &lt;code>big.mark&lt;/code>, and the decimal separator,
&lt;code>decimal.mark&lt;/code>. Users of these formatters will notice that the default thousands
separator is now a space. This default was chosen as a useful compromise for
an international audience (a space for thousands separator and a dot for decimal
separator) and is officially endorsed by SI/ISO 31-0 standard, as well as by the
International Bureau of Weights and Measures and the International Union of
Pure and Applied Chemistry (IUPAC), the American Medical Association&amp;rsquo;s widely
followed AMA Manual of Style, and the Metrication Board, among others
(
&lt;a href="https://www.wikiwand.com/en/Decimal_separator#/Digit_grouping" target="_blank" rel="noopener">read more here&lt;/a>).
Those interested in number formatting with no separator can simply define
&lt;code>big.mark = &amp;quot;&amp;quot;&lt;/code> to revert to the previous behaviour.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scales&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">number&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">12.3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">12345.789&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.0002&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;12&amp;#34; &amp;#34;4&amp;#34; &amp;#34;12 346&amp;#34; &amp;#34;0&amp;#34;&lt;/span>
&lt;span class="c1"># these functions round by default, but you can set the accuracy&lt;/span>
&lt;span class="nf">number&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">12.3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">12345.789&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.0002&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">big.mark&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">accuracy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">.01&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;12.30&amp;#34; &amp;#34;4.00&amp;#34; &amp;#34;12345.79&amp;#34; &amp;#34;0.00&amp;#34;&lt;/span>
&lt;span class="c1"># percent() function takes a numeric and does your division and labelling for you&lt;/span>
&lt;span class="nf">percent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0.1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0.56&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;10.0%&amp;#34; &amp;#34;33.3%&amp;#34; &amp;#34;56.0%&amp;#34;&lt;/span>
&lt;span class="c1"># comma() adds commas into large numbers for easier readability&lt;/span>
&lt;span class="nf">comma&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">10e6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;10,000,000&amp;#34;&lt;/span>
&lt;span class="c1"># dollar() adds currency symbols speficifed by `prefix` or `suffix`&lt;/span>
&lt;span class="nf">dollar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">125&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3000&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;$100&amp;#34; &amp;#34;$125&amp;#34; &amp;#34;$3,000&amp;#34;&lt;/span>
&lt;span class="nf">dollar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">125&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3000&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">suffix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;€&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">prefix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;100€&amp;#34; &amp;#34;125€&amp;#34; &amp;#34;3,000€&amp;#34;&lt;/span>
&lt;span class="c1"># unit_format() adds unique units&lt;/span>
&lt;span class="c1"># the scale argument can do simple conversion on the fly&lt;/span>
&lt;span class="nf">unit_format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;ha&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">scale&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1e-4&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">10e6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">10e4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">8e3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;1 000 ha&amp;#34; &amp;#34;10 ha&amp;#34; &amp;#34;1 ha&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Three additional formatters have been added: &lt;code>pvalue_format()&lt;/code> formats p-values, &lt;code>number_bytes_format()&lt;/code> formats numeric vectors into byte measurements, and
&lt;code>time_format()&lt;/code> provides support for formatting POSIXt and hms objects. Finally, &lt;code>ordinal_format()&lt;/code> has gained new rules for French and Spanish formatting.&lt;/p>
&lt;h2 id="new-transformations">New transformations
&lt;a href="#new-transformations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Two new transformations were added to the package for this release: &lt;code>psuedo_log_trans()&lt;/code>,
and &lt;code>modulus_trans()&lt;/code>. &lt;code>pseudo_log_trans()&lt;/code> transforms data on a signed
logarithmic scale with a smooth transition to a linear scale around 0. The
&lt;code>modulus_trans()&lt;/code> was added along with a refactored &lt;code>boxcox_trans()&lt;/code> to
provide a better option for negative numbers. Both &lt;code>modulus_trans()&lt;/code> and
&lt;code>boxcox_trans()&lt;/code> gained an argument &lt;code>offset&lt;/code> which now allows users to fit both
type-1 and type-2 Box-Cox transformations.&lt;/p>
&lt;h2 id="better-breaks">Better breaks
&lt;a href="#better-breaks">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In a long awaited fix, &lt;code>log_breaks()&lt;/code> now returns integer multiples of
integer powers of base when finer breaks are needed on the log scale.
This will change all ggplot graphics with log-transformed axes.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ggplot2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5678&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dsamp&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">sample_n&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tbl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">diamonds&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">ggplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dsamp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">aes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">carat&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="nf">geom_point&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nf">scale_x_log10&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nf">scale_y_log10&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://www.tidyverse.org/articles/2018-08-scales-1-0-0_files/figure-html/logbreaks-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We’re grateful to the 24 people who contributed issues, code and comments:
&lt;a href="https://github.com/alexandreliborio" target="_blank" rel="noopener">@alexandreliborio&lt;/a>,
&lt;a href="https://github.com/AndreaCirilloAC" target="_blank" rel="noopener">@AndreaCirilloAC&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/BenOnEarth" target="_blank" rel="noopener">@BenOnEarth&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/Bisaloo" target="_blank" rel="noopener">@Bisaloo&lt;/a>,
&lt;a href="https://github.com/CesarSancho" target="_blank" rel="noopener">@CesarSancho&lt;/a>,
&lt;a href="https://github.com/christianhomberg" target="_blank" rel="noopener">@christianhomberg&lt;/a>,
&lt;a href="https://github.com/clauswilke" target="_blank" rel="noopener">@clauswilke&lt;/a>,
&lt;a href="https://github.com/cwickham" target="_blank" rel="noopener">@cwickham&lt;/a>,
&lt;a href="https://github.com/dpseidel" target="_blank" rel="noopener">@dpseidel&lt;/a>,
&lt;a href="https://github.com/foo-bar-baz-qux" target="_blank" rel="noopener">@foo-bar-baz-qux&lt;/a>,
&lt;a href="https://github.com/graciecorgi" target="_blank" rel="noopener">@graciecorgi&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">@jimhester&lt;/a>,
&lt;a href="https://github.com/jnolis" target="_blank" rel="noopener">@jnolis&lt;/a>,
&lt;a href="https://github.com/larmarange" target="_blank" rel="noopener">@larmarange&lt;/a>,
&lt;a href="https://github.com/lepennec" target="_blank" rel="noopener">@lepennec&lt;/a>,
&lt;a href="https://github.com/markvanderloo" target="_blank" rel="noopener">@markvanderloo&lt;/a>,
&lt;a href="https://github.com/ptoche" target="_blank" rel="noopener">@ptoche&lt;/a>,
&lt;a href="https://github.com/RobertMyles" target="_blank" rel="noopener">@RobertMyles&lt;/a>,
&lt;a href="https://github.com/statist7" target="_blank" rel="noopener">@statist7&lt;/a>,
&lt;a href="https://github.com/ThierryO" target="_blank" rel="noopener">@ThierryO&lt;/a>, and
&lt;a href="https://github.com/zeehio" target="_blank" rel="noopener">@zeehio&lt;/a>.&lt;/p></description></item><item><title>roxygen2 6.1.0</title><link>https://www.tidyverse.org/blog/2018/08/roxygen2-6-1-0/</link><pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/08/roxygen2-6-1-0/</guid><description>&lt;p>We&amp;rsquo;re delighted to announce that
&lt;a href="https://CRAN.R-project.org/package=roxygen2" target="_blank" rel="noopener">roxygen2&lt;/a>
6.1.0 is now on CRAN. The goal of roxygen is to make documenting your code as
easy as possible. It allows you to describe your functions in comments next to
their definitions, and processes your source code and comments to produce &lt;code>.Rd&lt;/code>
files in the &lt;code>man/&lt;/code> directory, as well as. roxygen will also create a
&lt;code>NAMESPACE&lt;/code> for you, and will manage the &lt;code>Collate&lt;/code> field in &lt;code>DESCRIPTION&lt;/code>.&lt;/p>
&lt;p>This release includes several updates to markdown parsing, as well as some new
features we highlight below. For a full list of updates and changes, please
see the
&lt;a href="https://github.com/klutometis/roxygen/blob/master/NEWS.md#roxygen2-610" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;h2 id="new-features">New features
&lt;a href="#new-features">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The &lt;code>NAMESPACE&lt;/code> roclet now works in two passes - it first generates the
&lt;code>NAMESPACE&lt;/code> containing only import directives because this can be generated
without evaluating the code in the package. This alleviates a problem where it
was previously possible to get into a state that you could only get out of by
carefully editing the &lt;code>NAMESPACE&lt;/code> by hand.&lt;/p>
&lt;p>&lt;code>roxygenise()&lt;/code> now uses &lt;code>pkgload::load_all()&lt;/code> instead of a homegrown solution
to simulate package loading. This is one of the benefits of the
&lt;a href="http://devtools.r-lib.org/#diaspora" target="_blank" rel="noopener">conscious uncoupling of devtools&lt;/a>. The
simulated package loading is needed because roxygen2 uses run-time information
to generate the documentation. This should reduce S4-related problems, and
ensure that &lt;code>devtools::document()&lt;/code> and &lt;code>roxygenise()&lt;/code> always have the same
behaviour.&lt;/p>
&lt;p>&lt;code>@evalRd&lt;/code> &lt;code>foo()&lt;/code> evaluates &lt;code>foo()&lt;/code> defined in the package namespace and
inserts the results into the current block. The code should return a character
vector with one entry for each line (and they should not start with &lt;code>#'&lt;/code>). This
provides a flexible way to extract out duplicated documentation. For example:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">today&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">paste0&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Today is \\strong{&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">Sys.Date&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="s">&amp;#34;%A&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;}&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">#&amp;#39; @evalRd today()&lt;/span>
&lt;span class="kc">NULL&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>today()&lt;/code> will be executed every time that you run roxygen2. There are two small
limitations to the current implementation: the generated roxygen will not affect
the &lt;code>@md/@noMd&lt;/code> status, and &lt;code>@evalRd&lt;/code> does not work inside templates.&lt;/p>
&lt;p>&lt;code>@evalNamespace&lt;/code> does for &lt;code>NAMESPACE&lt;/code> what &lt;code>@evalRd&lt;/code> does for &lt;code>Rd&lt;/code> files: you
give it R code that produces a literal entry in &lt;code>NAMESPACE&lt;/code> when run. This
should make it easier to export functions that are generated by other
functions in your package.&lt;/p>
&lt;h2 id="improvements-to-markdown-parsing">Improvements to markdown parsing
&lt;a href="#improvements-to-markdown-parsing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Starting from version 6.0.0, roxygen supports markdown markup within most
roxygen tags (learn more
&lt;a href="https://cran.r-project.org/web/packages/roxygen2/vignettes/markdown.html" target="_blank" rel="noopener">here&lt;/a>). You can switch to markdown documentation with
&lt;a href="http://usethis.r-lib.org/reference/use_roxygen_md.html" target="_blank" rel="noopener">&lt;code>usethis::use_roxygen_md()&lt;/code>&lt;/a>,
which uses the
&lt;a href="https://github.com/r-lib/roxygen2md" target="_blank" rel="noopener">roxygen2md&lt;/a> package to
convert Rd expressions to markdown.&lt;/p>
&lt;p>In this version, we&amp;rsquo;ve made a number of bug fixes to markdown translation:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Whitespace between words in link text is now preserved as single space for
links of the form &lt;code>[text][fcn]&lt;/code> and &lt;code>[text](URL)&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Code in link text is now properly rendered as code.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The parsing of markdown links has been modified to reduce false
positives. If you still get a false positive, you can add &lt;code>\\&lt;/code> in front of the
&lt;code>[&lt;/code> to avoid its being converted to a link.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Markdown features that are &lt;em>not&lt;/em> supported should now generate a warning
identifying them as such.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thank you to the 114 people who have contributed to this release:
&lt;a href="https://github.com/agwells" target="_blank" rel="noopener">＠agwells&lt;/a>,
&lt;a href="https://github.com/alexpghayes" target="_blank" rel="noopener">＠alexpghayes&lt;/a>,
&lt;a href="https://github.com/apomatix" target="_blank" rel="noopener">＠apomatix&lt;/a>,
&lt;a href="https://github.com/Ax3man" target="_blank" rel="noopener">＠Ax3man&lt;/a>,
&lt;a href="https://github.com/BarkleyBG" target="_blank" rel="noopener">＠BarkleyBG&lt;/a>,
&lt;a href="https://github.com/BillWeld" target="_blank" rel="noopener">＠BillWeld&lt;/a>,
&lt;a href="https://github.com/brodieG" target="_blank" rel="noopener">＠brodieG&lt;/a>,
&lt;a href="https://github.com/brry" target="_blank" rel="noopener">＠brry&lt;/a>,
&lt;a href="https://github.com/bwiernik" target="_blank" rel="noopener">＠bwiernik&lt;/a>,
&lt;a href="https://github.com/cfhammill" target="_blank" rel="noopener">＠cfhammill&lt;/a>,
&lt;a href="https://github.com/coatless" target="_blank" rel="noopener">＠coatless&lt;/a>,
&lt;a href="https://github.com/coldfir3" target="_blank" rel="noopener">＠coldfir3&lt;/a>,
&lt;a href="https://github.com/ColinFay" target="_blank" rel="noopener">＠ColinFay&lt;/a>,
&lt;a href="https://github.com/ctbrown" target="_blank" rel="noopener">＠ctbrown&lt;/a>,
&lt;a href="https://github.com/danielsjf" target="_blank" rel="noopener">＠danielsjf&lt;/a>,
&lt;a href="https://github.com/dankelley" target="_blank" rel="noopener">＠dankelley&lt;/a>,
&lt;a href="https://github.com/dewittpe" target="_blank" rel="noopener">＠dewittpe&lt;/a>,
&lt;a href="https://github.com/dongzhuoer" target="_blank" rel="noopener">＠dongzhuoer&lt;/a>,
&lt;a href="https://github.com/dpritchLibre" target="_blank" rel="noopener">＠dpritchLibre&lt;/a>,
&lt;a href="https://github.com/ebridge2" target="_blank" rel="noopener">＠ebridge2&lt;/a>,
&lt;a href="https://github.com/egnha" target="_blank" rel="noopener">＠egnha&lt;/a>,
&lt;a href="https://github.com/evanbiederstedt" target="_blank" rel="noopener">＠evanbiederstedt&lt;/a>,
&lt;a href="https://github.com/fangly" target="_blank" rel="noopener">＠fangly&lt;/a>,
&lt;a href="https://github.com/FelixErnst" target="_blank" rel="noopener">＠FelixErnst&lt;/a>,
&lt;a href="https://github.com/flyeye" target="_blank" rel="noopener">＠flyeye&lt;/a>,
&lt;a href="https://github.com/flying-sheep" target="_blank" rel="noopener">＠flying-sheep&lt;/a>,
&lt;a href="https://github.com/graemeleehickey" target="_blank" rel="noopener">＠graemeleehickey&lt;/a>,
&lt;a href="https://github.com/grst" target="_blank" rel="noopener">＠grst&lt;/a>,
&lt;a href="https://github.com/gvegayon" target="_blank" rel="noopener">＠gvegayon&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">＠hadley&lt;/a>,
&lt;a href="https://github.com/HenrikBengtsson" target="_blank" rel="noopener">＠HenrikBengtsson&lt;/a>,
&lt;a href="https://github.com/hughjonesd" target="_blank" rel="noopener">＠hughjonesd&lt;/a>,
&lt;a href="https://github.com/ijlyttle" target="_blank" rel="noopener">＠ijlyttle&lt;/a>,
&lt;a href="https://github.com/inkrement" target="_blank" rel="noopener">＠inkrement&lt;/a>,
&lt;a href="https://github.com/jackwasey" target="_blank" rel="noopener">＠jackwasey&lt;/a>,
&lt;a href="https://github.com/Jakob2014uafmx" target="_blank" rel="noopener">＠Jakob2014uafmx&lt;/a>,
&lt;a href="https://github.com/jcrodriguez1989" target="_blank" rel="noopener">＠jcrodriguez1989&lt;/a>,
&lt;a href="https://github.com/jeis2497052" target="_blank" rel="noopener">＠jeis2497052&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">＠jennybc&lt;/a>,
&lt;a href="https://github.com/jimhester" target="_blank" rel="noopener">＠jimhester&lt;/a>,
&lt;a href="https://github.com/jkl789" target="_blank" rel="noopener">＠jkl789&lt;/a>,
&lt;a href="https://github.com/joethorley" target="_blank" rel="noopener">＠joethorley&lt;/a>,
&lt;a href="https://github.com/JoFAM" target="_blank" rel="noopener">＠JoFAM&lt;/a>,
&lt;a href="https://github.com/JohnMount" target="_blank" rel="noopener">＠JohnMount&lt;/a>,
&lt;a href="https://github.com/jonlehrer" target="_blank" rel="noopener">＠jonlehrer&lt;/a>,
&lt;a href="https://github.com/JoshOBrien" target="_blank" rel="noopener">＠JoshOBrien&lt;/a>,
&lt;a href="https://github.com/jpfrench81" target="_blank" rel="noopener">＠jpfrench81&lt;/a>,
&lt;a href="https://github.com/jpritikin" target="_blank" rel="noopener">＠jpritikin&lt;/a>,
&lt;a href="https://github.com/jrosen48" target="_blank" rel="noopener">＠jrosen48&lt;/a>,
&lt;a href="https://github.com/karawoo" target="_blank" rel="noopener">＠karawoo&lt;/a>,
&lt;a href="https://github.com/kbenoit" target="_blank" rel="noopener">＠kbenoit&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">＠kevinushey&lt;/a>,
&lt;a href="https://github.com/klmr" target="_blank" rel="noopener">＠klmr&lt;/a>,
&lt;a href="https://github.com/krivit" target="_blank" rel="noopener">＠krivit&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">＠krlmlr&lt;/a>,
&lt;a href="https://github.com/leifeld" target="_blank" rel="noopener">＠leifeld&lt;/a>,
&lt;a href="https://github.com/levisc8" target="_blank" rel="noopener">＠levisc8&lt;/a>,
&lt;a href="https://github.com/lindbrook" target="_blank" rel="noopener">＠lindbrook&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">＠lionel-&lt;/a>,
&lt;a href="https://github.com/lorenzwalthert" target="_blank" rel="noopener">＠lorenzwalthert&lt;/a>,
&lt;a href="https://github.com/Lucaweihs" target="_blank" rel="noopener">＠Lucaweihs&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">＠maelle&lt;/a>,
&lt;a href="https://github.com/MansMeg" target="_blank" rel="noopener">＠MansMeg&lt;/a>,
&lt;a href="https://github.com/martin-mfg" target="_blank" rel="noopener">＠martin-mfg&lt;/a>,
&lt;a href="https://github.com/mashranga" target="_blank" rel="noopener">＠mashranga&lt;/a>,
&lt;a href="https://github.com/maxheld83" target="_blank" rel="noopener">＠maxheld83&lt;/a>,
&lt;a href="https://github.com/mb706" target="_blank" rel="noopener">＠mb706&lt;/a>,
&lt;a href="https://github.com/mcol" target="_blank" rel="noopener">＠mcol&lt;/a>,
&lt;a href="https://github.com/md0u80c9" target="_blank" rel="noopener">＠md0u80c9&lt;/a>,
&lt;a href="https://github.com/mikmart" target="_blank" rel="noopener">＠mikmart&lt;/a>,
&lt;a href="https://github.com/mixtrak" target="_blank" rel="noopener">＠mixtrak&lt;/a>,
&lt;a href="https://github.com/mkoohafkan" target="_blank" rel="noopener">＠mkoohafkan&lt;/a>,
&lt;a href="https://github.com/mvkorpel" target="_blank" rel="noopener">＠mvkorpel&lt;/a>,
&lt;a href="https://github.com/natgoodman" target="_blank" rel="noopener">＠natgoodman&lt;/a>,
&lt;a href="https://github.com/nteetor" target="_blank" rel="noopener">＠nteetor&lt;/a>,
&lt;a href="https://github.com/nuno-agostinho" target="_blank" rel="noopener">＠nuno-agostinho&lt;/a>,
&lt;a href="https://github.com/PeterVermont" target="_blank" rel="noopener">＠PeterVermont&lt;/a>,
&lt;a href="https://github.com/philmikejones" target="_blank" rel="noopener">＠philmikejones&lt;/a>,
&lt;a href="https://github.com/pierreroudier" target="_blank" rel="noopener">＠pierreroudier&lt;/a>,
&lt;a href="https://github.com/pkq" target="_blank" rel="noopener">＠pkq&lt;/a>,
&lt;a href="https://github.com/privefl" target="_blank" rel="noopener">＠privefl&lt;/a>,
&lt;a href="https://github.com/publicus" target="_blank" rel="noopener">＠publicus&lt;/a>,
&lt;a href="https://github.com/QuLogic" target="_blank" rel="noopener">＠QuLogic&lt;/a>,
&lt;a href="https://github.com/r2evans" target="_blank" rel="noopener">＠r2evans&lt;/a>,
&lt;a href="https://github.com/rabutler" target="_blank" rel="noopener">＠rabutler&lt;/a>,
&lt;a href="https://github.com/renozao" target="_blank" rel="noopener">＠renozao&lt;/a>,
&lt;a href="https://github.com/richierocks" target="_blank" rel="noopener">＠richierocks&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">＠romainfrancois&lt;/a>,
&lt;a href="https://github.com/rvlenth" target="_blank" rel="noopener">＠rvlenth&lt;/a>,
&lt;a href="https://github.com/s-fleck" target="_blank" rel="noopener">＠s-fleck&lt;/a>,
&lt;a href="https://github.com/saralinker" target="_blank" rel="noopener">＠saralinker&lt;/a>,
&lt;a href="https://github.com/sgibb" target="_blank" rel="noopener">＠sgibb&lt;/a>,
&lt;a href="https://github.com/spluque" target="_blank" rel="noopener">＠spluque&lt;/a>,
&lt;a href="https://github.com/ssdavenport" target="_blank" rel="noopener">＠ssdavenport&lt;/a>,
&lt;a href="https://github.com/ssokolen" target="_blank" rel="noopener">＠ssokolen&lt;/a>,
&lt;a href="https://github.com/Stanwood18" target="_blank" rel="noopener">＠Stanwood18&lt;/a>,
&lt;a href="https://github.com/statnmap" target="_blank" rel="noopener">＠statnmap&lt;/a>,
&lt;a href="https://github.com/stufield" target="_blank" rel="noopener">＠stufield&lt;/a>,
&lt;a href="https://github.com/StuHorsman" target="_blank" rel="noopener">＠StuHorsman&lt;/a>,
&lt;a href="https://github.com/sylvainschmitt" target="_blank" rel="noopener">＠sylvainschmitt&lt;/a>,
&lt;a href="https://github.com/sz-cgt" target="_blank" rel="noopener">＠sz-cgt&lt;/a>,
&lt;a href="https://github.com/tbates" target="_blank" rel="noopener">＠tbates&lt;/a>,
&lt;a href="https://github.com/teo029" target="_blank" rel="noopener">＠teo029&lt;/a>,
&lt;a href="https://github.com/tpbilton" target="_blank" rel="noopener">＠tpbilton&lt;/a>,
&lt;a href="https://github.com/twang2218" target="_blank" rel="noopener">＠twang2218&lt;/a>,
&lt;a href="https://github.com/ugroempi" target="_blank" rel="noopener">＠ugroempi&lt;/a>,
&lt;a href="https://github.com/unDocUMeantIt" target="_blank" rel="noopener">＠unDocUMeantIt&lt;/a>,
&lt;a href="https://github.com/vjcitn" target="_blank" rel="noopener">＠vjcitn&lt;/a>,
&lt;a href="https://github.com/WastlM" target="_blank" rel="noopener">＠WastlM&lt;/a>,
&lt;a href="https://github.com/xhdong-umd" target="_blank" rel="noopener">＠xhdong-umd&lt;/a>,
&lt;a href="https://github.com/xhudik" target="_blank" rel="noopener">＠xhudik&lt;/a>,
&lt;a href="https://github.com/ximeg" target="_blank" rel="noopener">＠ximeg&lt;/a>,
&lt;a href="https://github.com/yannickspill" target="_blank" rel="noopener">＠yannickspill&lt;/a>, and
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">＠yutannihilation&lt;/a>.&lt;/p></description></item><item><title>bench 1.0.1</title><link>https://www.tidyverse.org/blog/2018/06/bench-1.0.1/</link><pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/06/bench-1.0.1/</guid><description>
&lt;p>&lt;a href="https://bench.r-lib.org">bench&lt;/a> is now available on CRAN!&lt;/p>
&lt;p>The goal of &lt;a href="https://bench.r-lib.org">bench&lt;/a> is to benchmark code, by tracking execution time, memory allocations and garbage collections.&lt;/p>
&lt;p>Install the latest version with:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;bench&amp;quot;)&lt;/code>&lt;/pre>
&lt;div id="usage" class="section level3">
&lt;h3>Usage&lt;/h3>
&lt;p>Benchmarks can be run with &lt;code>bench::mark()&lt;/code>, which takes one or more expressions to benchmark against each other.&lt;/p>
&lt;pre class="r">&lt;code>library(bench)
set.seed(42)
dat &amp;lt;- data.frame(x = runif(10000, 1, 1000), y=runif(10000, 1, 1000))&lt;/code>&lt;/pre>
&lt;p>&lt;code>bench::mark()&lt;/code> will throw an error if the results are not equivalent, so you don’t accidentally benchmark non-equivalent code.&lt;/p>
&lt;pre class="r">&lt;code>bench::mark(
dat[dat$x &amp;gt; 500, ],
dat[which(dat$x &amp;gt; 499), ],
subset(dat, x &amp;gt; 500))
#&amp;gt; Error: Each result must equal the first result:
#&amp;gt; `dat[dat$x &amp;gt; 500, ]` does not equal `dat[which(dat$x &amp;gt; 499), ]`&lt;/code>&lt;/pre>
&lt;p>Results are easy to interpret, with human readable units in a rectangular data frame.&lt;/p>
&lt;pre class="r">&lt;code>bnch &amp;lt;- bench::mark(
dat[dat$x &amp;gt; 500, ],
dat[which(dat$x &amp;gt; 500), ],
subset(dat, x &amp;gt; 500))
bnch
#&amp;gt; # A tibble: 3 x 10
#&amp;gt; expression min mean median max `itr/sec` mem_alloc n_gc n_itr total_time
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;bch:tm&amp;gt;
#&amp;gt; 1 dat[dat$x &amp;gt; 500, ] 300µs 347µs 321µs 1.26ms 2884. 416KB 55 949 329ms
#&amp;gt; 2 dat[which(dat$x &amp;gt; 500), ] 230µs 281µs 259µs 1.12ms 3563. 357KB 52 1156 324ms
#&amp;gt; 3 subset(dat, x &amp;gt; 500) 374µs 461µs 420µs 1.52ms 2169. 548KB 43 803 370ms&lt;/code>&lt;/pre>
&lt;p>By default, the summary uses absolute measures, however relative results can be obtained by using &lt;code>relative = TRUE&lt;/code> in your call to &lt;code>bench::mark()&lt;/code> or by calling &lt;code>summary(relative = TRUE)&lt;/code> on the results.&lt;/p>
&lt;pre class="r">&lt;code>summary(bnch, relative = TRUE)
#&amp;gt; # A tibble: 3 x 10
#&amp;gt; expression min mean median max `itr/sec` mem_alloc n_gc n_itr total_time
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 dat[dat$x &amp;gt; 500, ] 1.30 1.24 1.24 1.13 1.33 1.16 1.28 1.18 1.01
#&amp;gt; 2 dat[which(dat$x &amp;gt; 500), ] 1 1 1 1 1.64 1 1.21 1.44 1
#&amp;gt; 3 subset(dat, x &amp;gt; 500) 1.63 1.64 1.62 1.36 1 1.53 1 1 1.14&lt;/code>&lt;/pre>
&lt;p>&lt;code>bench::press()&lt;/code> is used to run benchmarks against a grid of parameters. Provide setup and benchmarking code as a single unnamed argument then define sets of values as named arguments. The full combination of values will be expanded and the benchmarks are then &lt;em>pressed&lt;/em> together in the result. This allows you to benchmark a set of expressions across a wide variety of input sizes, perform replications and other useful tasks.&lt;/p>
&lt;pre class="r">&lt;code>set.seed(42)
create_df &amp;lt;- function(rows, cols) {
as.data.frame(setNames(
replicate(cols, runif(rows, 1, 1000), simplify = FALSE),
rep_len(c(&amp;quot;x&amp;quot;, letters), cols)))
}
results &amp;lt;- bench::press(
rows = c(10000, 100000),
cols = c(10, 100),
{
dat &amp;lt;- create_df(rows, cols)
bench::mark(
min_iterations = 100,
bracket = dat[dat$x &amp;gt; 500, ],
which = dat[which(dat$x &amp;gt; 500), ],
subset = subset(dat, x &amp;gt; 500)
)
}
)
results
#&amp;gt; # A tibble: 12 x 12
#&amp;gt; expression rows cols min mean median max `itr/sec` mem_alloc n_gc n_itr total_time
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;bch:tm&amp;gt;
#&amp;gt; 1 bracket 10000 10 830µs 1.06ms 987.08µs 2.29ms 940. 1.17MB 18 304 323.47ms
#&amp;gt; 2 which 10000 10 447.96µs 652.94µs 564.73µs 1.6ms 1532. 827.04KB 21 551 359.77ms
#&amp;gt; 3 subset 10000 10 906.91µs 1.15ms 1.04ms 2.27ms 866. 1.28MB 21 320 369.44ms
#&amp;gt; 4 bracket 100000 10 14.96ms 17.34ms 17.39ms 19.95ms 57.7 11.54MB 46 54 936.47ms
#&amp;gt; 5 which 100000 10 9.09ms 11.24ms 11.04ms 15.25ms 89.0 7.91MB 32 68 764.24ms
#&amp;gt; 6 subset 100000 10 14.76ms 16.86ms 16.07ms 20.74ms 59.3 12.68MB 46 54 910.46ms
#&amp;gt; 7 bracket 10000 100 7.19ms 9.16ms 8.76ms 13ms 109. 9.71MB 34 66 604.84ms
#&amp;gt; 8 which 10000 100 2.74ms 4.17ms 3.98ms 8.17ms 240. 5.91MB 19 81 338.03ms
#&amp;gt; 9 subset 10000 100 7.19ms 9.63ms 9.46ms 12.54ms 104. 9.84MB 35 65 626.03ms
#&amp;gt; 10 bracket 100000 100 100.19ms 111.1ms 111.08ms 121.63ms 9.00 97.47MB 83 21 2.33s
#&amp;gt; 11 which 100000 100 54.19ms 59.62ms 59.36ms 65.77ms 16.8 59.51MB 36 64 3.82s
#&amp;gt; 12 subset 100000 100 103.36ms 113.58ms 111.83ms 134ms 8.80 98.62MB 84 16 1.82s&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="plotting" class="section level3">
&lt;h3>Plotting&lt;/h3>
&lt;p>&lt;code>ggplot2::autoplot()&lt;/code> can be used to generate an informative default plot. This plot is colored by GC level (0, 1, or 2) and faceted by parameters (if any). By default it generates a &lt;a href="https://github.com/eclarke/ggbeeswarm#geom_quasirandom">beeswarm&lt;/a> plot, however you can also specify other plot types (&lt;code>jitter&lt;/code>, &lt;code>ridge&lt;/code>, &lt;code>boxplot&lt;/code>, &lt;code>violin&lt;/code>). See &lt;code>?autoplot.bench_mark&lt;/code> for full details. This gives you a nice overview of the runs and allows you to gauge the effects of garbage collection on the results.&lt;/p>
&lt;pre class="r">&lt;code>ggplot2::autoplot(results)&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://www.tidyverse.org/articles/2018-06-bench-1.0.1_files/figure-html/autoplot-1.png" width="100%" />&lt;/p>
&lt;p>You can also produce fully custom plots by un-nesting the results and working with the data directly. In this case we are exploring how the amount of memory allocated by each expression interacts with the time taken to run.&lt;/p>
&lt;pre class="r">&lt;code>library(tidyverse)
results %&amp;gt;%
unnest() %&amp;gt;%
filter(gc == &amp;quot;none&amp;quot;) %&amp;gt;%
ggplot(aes(x = mem_alloc, y = time, color = expression)) +
geom_point() +
scale_color_brewer(type = &amp;quot;qual&amp;quot;, palette = 3) +
geom_smooth(method = &amp;quot;lm&amp;quot;, se = F, colour = &amp;quot;grey50&amp;quot;)&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://www.tidyverse.org/articles/2018-06-bench-1.0.1_files/figure-html/custom-plot-1.png" width="100%" />&lt;/p>
&lt;/div>
&lt;div id="compared-to-existing-methods" class="section level3">
&lt;h3>Compared to existing methods&lt;/h3>
&lt;p>Compared to other methods such as &lt;a href="https://www.rdocumentation.org/packages/base/versions/3.5.0/topics/system.time">system.time&lt;/a>, &lt;a href="https://cran.r-project.org/package=rbenchmark">rbenchmark&lt;/a>, &lt;a href="https://cran.r-project.org/package=tictoc">tictoc&lt;/a> or &lt;a href="https://cran.r-project.org/package=microbenchmark">microbenchmark&lt;/a> we feel it has a number of benefits.&lt;/p>
&lt;ul>
&lt;li>Uses the highest precision APIs available for each operating system (often nanosecond-level).&lt;/li>
&lt;li>Tracks memory allocations for each expression.&lt;/li>
&lt;li>Tracks the number and type of R garbage collections per run.&lt;/li>
&lt;li>Verifies equality of expression results by default, to avoid accidentally benchmarking non-equivalent code.&lt;/li>
&lt;li>Uses adaptive stopping by default, running each expression for a set amount of time rather than for a specific number of iterations.&lt;/li>
&lt;li>Runs expressions in batches and calculates summary statistics after filtering out iterations with garbage collections. This allows you to isolate the performance and effects of garbage collection on running time (for more details see &lt;a href="https://radfordneal.wordpress.com/2014/02/02/inaccurate-results-from-microbenchmark/">Neal 2014&lt;/a>).&lt;/li>
&lt;li>Allows benchmarking across a grid of input values with &lt;code>bench::press()&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="dependency-load" class="section level3">
&lt;h3>Dependency load&lt;/h3>
&lt;p>When the development version of &lt;strong>bench&lt;/strong> was &lt;a href="https://twitter.com/jimhester_/status/996063591433416704">introduced&lt;/a> a few people expressed concern over the number of dependencies in the package. I will attempt to explain why these dependencies exist and why the true load may actually be less than you might think.&lt;/p>
&lt;p>While bench currently has 19 dependencies, only 8 of these are hard dependencies; that is they are needed to install the package. Of these 8 hard dependencies 3 of them (methods, stats, utils) are base packages installed with R. Of these 5 remaining packages 3 have no additional dependencies (glue, profmem, rlang). The two remaining packages (tibble and pillar) are used to provide nice printing of the times and memory sizes and support for list columns to store the timings, garbage collections, and allocations. These are major features of the bench package and it would not work without these dependencies.&lt;/p>
&lt;p>The remaining 11 packages are soft dependencies, used either for testing or for optional functionality, most notably plotting. They will not be installed unless explicitly requested.&lt;/p>
&lt;p>The &lt;a href="https://cran.r-project.org/package=microbenchmark">microbenchmark&lt;/a> package is a good alternative for those looking for a package with only base dependencies.&lt;/p>
&lt;/div>
&lt;div id="feedback-wanted" class="section level3">
&lt;h3>Feedback wanted!&lt;/h3>
&lt;p>We hope &lt;strong>bench&lt;/strong> is a useful tool for benchmarking short expressions of code. Please open &lt;a href="https://github.com/r-lib/bench">GitHub issues&lt;/a> for any feature requests or bugs.&lt;/p>
&lt;p>Learn more about &lt;strong>bench&lt;/strong> at &lt;a href="http://bench.r-lib.org" class="uri">http://bench.r-lib.org&lt;/a>&lt;/p>
&lt;p>A big thanks goes to all the community members who contributed code and opened issues since for this release! &lt;a href="https://github.com/espinielli">@espinielli&lt;/a>, &lt;a href="https://github.com/hadley">@hadley&lt;/a>, &lt;a href="https://github.com/HughParsonage">@HughParsonage&lt;/a>, &lt;a href="https://github.com/jasonserviss">@jasonserviss&lt;/a>, &lt;a href="https://github.com/jimhester">@jimhester&lt;/a>, &lt;a href="https://github.com/jonocarroll">@jonocarroll&lt;/a>, &lt;a href="https://github.com/lionel-">@lionel-&lt;/a>, &lt;a href="https://github.com/MilesMcBain">@MilesMcBain&lt;/a>, &lt;a href="https://github.com/njtierney">@njtierney&lt;/a>, and &lt;a href="https://github.com/zkamvar">@zkamvar&lt;/a>&lt;/p>
&lt;/div></description></item><item><title>pkgdown 1.1.0</title><link>https://www.tidyverse.org/blog/2018/06/pkgdown-1-1-0/</link><pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/06/pkgdown-1-1-0/</guid><description>
&lt;p>We’re delighted to announce the release of &lt;a href="http://pkgdown.r-lib.org/">pkgdown&lt;/a>
1.1.0. pkgdown is designed to make it quick and easy to build a website for
your package. In addition to minor fixes, this release includes front-end and
Rd-translation improvements. For a full list of changes, please see the
&lt;a href="https://github.com/r-lib/pkgdown/blob/master/NEWS.md#pkgdown-110">NEWS&lt;/a>.&lt;/p>
&lt;div id="new-features" class="section level2">
&lt;h2>New features&lt;/h2>
&lt;p>&lt;code>build_reference()&lt;/code> and &lt;code>build_site()&lt;/code> have gained a new &lt;code>document&lt;/code> argument,
which defaults to &lt;code>TRUE&lt;/code>. This ensures that your documentation is up to date
by automatically running &lt;code>devtools::document()&lt;/code>.&lt;/p>
&lt;p>The &lt;code>build_site()&lt;/code> function has also gained a &lt;code>new_process&lt;/code> argument. When
&lt;code>new_process&lt;/code> is set to &lt;code>TRUE&lt;/code> (as it is by default), pkgdown will be run in
a separate process to improve reproducibility. This also means that in example
code &lt;code>interactive()&lt;/code> will return &lt;code>FALSE&lt;/code>, making that the best way to run code
that is truly interactive (as with shiny apps).&lt;/p>
&lt;p>The new, improved display for icons can be seen in the &lt;a href="http://ggplot2.tidyverse.org/reference/index.html">ggplot2 documentation&lt;/a>. Icons must
be 30px, and stored in a top-level &lt;a href="https://github.com/tidyverse/ggplot2/tree/master/icons">&lt;code>icons/&lt;/code>&lt;/a>
directory. Icon names are matched to the name of the Rd file. The icons will be
embedded in a separate column of the reference index table, rather than inside
of comments. (See ggplot2’s &lt;a href="https://github.com/tidyverse/ggplot2/blob/master/icons/icons.R">&lt;code>icons.R&lt;/code>&lt;/a>
for detail).&lt;/p>
&lt;/div>
&lt;div id="front-end" class="section level2">
&lt;h2>Front end&lt;/h2>
&lt;p>Users can now access search with a keyboard shortcut, &lt;code>shift&lt;/code> + &lt;code>/ (?)&lt;/code>.
We’ve also improved active-tab highlighting in the navbar, and better isolated
&lt;code>pkgdown.js&lt;/code> to avoid issues when widgets loaded use a different version of
jquery.&lt;/p>
&lt;/div>
&lt;div id="rd-translation" class="section level2">
&lt;h2>Rd translation&lt;/h2>
&lt;p>This release includes several improvements to Rd translation. Automatic linking
now works for re-exported objects that are not functions. &lt;code>vignette()&lt;/code> calls
that don’t link to existing vignettes fail silently, instead of generating
uninformative errors. Empty &lt;code>\section{}&lt;/code>s are now ignored. &lt;code>\Sexpr{}&lt;/code> now
supports &lt;code>results=text&lt;/code>, &lt;code>results=Rd&lt;/code>, and &lt;code>results=hide&lt;/code>. Lastly, &lt;code>\tabular{}&lt;/code>
no longer requires a terminal &lt;code>\cr&lt;/code>.&lt;/p>
&lt;/div>
&lt;div id="acknowledgements" class="section level2">
&lt;h2>Acknowledgements&lt;/h2>
&lt;p>For other minor bug fixes and improvements, please see the &lt;a href="http://pkgdown.r-lib.org/news/index.html#pkgdown-1-1-0">Changelog&lt;/a>.
Thank you to everyone who contributed to this release:
&lt;a href="https://github.com/adibender">@adibender&lt;/a>, &lt;a href="https://github.com/aoles">@aoles&lt;/a>, &lt;a href="https://github.com/aravind-j">@aravind-j&lt;/a>, &lt;a href="https://github.com/batpigandme">@batpigandme&lt;/a>, &lt;a href="https://github.com/dchiu911">@dchiu911&lt;/a>, &lt;a href="https://github.com/Enchufa2">@Enchufa2&lt;/a>, &lt;a href="https://github.com/gaborcsardi">@gaborcsardi&lt;/a>, &lt;a href="https://github.com/GeoBosh">@GeoBosh&lt;/a>, &lt;a href="https://github.com/hadley">@hadley&lt;/a>, &lt;a href="https://github.com/hrecht">@hrecht&lt;/a>, &lt;a href="https://github.com/ijlyttle">@ijlyttle&lt;/a>, &lt;a href="https://github.com/IndrajeetPatil">@IndrajeetPatil&lt;/a>, &lt;a href="https://github.com/jackwasey">@jackwasey&lt;/a>, &lt;a href="https://github.com/jakob-r">@jakob-r&lt;/a>, &lt;a href="https://github.com/JasperHG90">@JasperHG90&lt;/a>, &lt;a href="https://github.com/jayhesselberth">@jayhesselberth&lt;/a>, &lt;a href="https://github.com/jennybc">@jennybc&lt;/a>, &lt;a href="https://github.com/jeroen">@jeroen&lt;/a>, &lt;a href="https://github.com/jflournoy">@jflournoy&lt;/a>, &lt;a href="https://github.com/JohnCoene">@JohnCoene&lt;/a>, &lt;a href="https://github.com/kenahoo">@kenahoo&lt;/a>, &lt;a href="https://github.com/krlmlr">@krlmlr&lt;/a>, &lt;a href="https://github.com/mcneney">@mcneney&lt;/a>, &lt;a href="https://github.com/md0u80c9">@md0u80c9&lt;/a>, &lt;a href="https://github.com/merliseclyde">@merliseclyde&lt;/a>, &lt;a href="https://github.com/Miachol">@Miachol&lt;/a>, &lt;a href="https://github.com/pat-s">@pat-s&lt;/a>, &lt;a href="https://github.com/rmendels">@rmendels&lt;/a>, &lt;a href="https://github.com/s-fleck">@s-fleck&lt;/a>, &lt;a href="https://github.com/strengejacke">@strengejacke&lt;/a>, &lt;a href="https://github.com/surh">@surh&lt;/a>, &lt;a href="https://github.com/WastlM">@WastlM&lt;/a>, and &lt;a href="https://github.com/yutannihilation">@yutannihilation&lt;/a>&lt;/p>
&lt;/div></description></item><item><title>conflicted: a new approach to resolving ambiguity</title><link>https://www.tidyverse.org/blog/2018/06/conflicted/</link><pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/06/conflicted/</guid><description>
&lt;p>We’re stoked to announce the initial release of the &lt;a href="https://github.com/r-lib/conflicted#conflicted">conflicted&lt;/a> package. The goal of conflicted is to provide an alternative way of resolving conflicts caused by ambiguous function names. R handles ambiguity by reporting conflicts when you load a package, but otherwise lets the most recently loaded package win. This can make it hard to detect conflicts, because it’s easy to miss the messages since you often load packages at the top of the script, and you don’t see a problem until much later. conflicted takes a different approach to resolving ambiguity, instead making every conflict an error and forcing you to explicitly choose which function to use.&lt;/p>
&lt;p>Install conflicted by running:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;conflicted&amp;quot;)&lt;/code>&lt;/pre>
&lt;div id="how-do-i-use-it" class="section level2">
&lt;h2>How do I use it?&lt;/h2>
&lt;p>conflicted does not export any functions. To use it, you just need to load it:&lt;/p>
&lt;pre class="r">&lt;code>library(conflicted)
library(dplyr)
filter(mtcars, am &amp;amp; cyl == 8)
#&amp;gt; Error: filter found in 2 packages. You must indicate which one you want with ::
#&amp;gt; * dplyr::filter
#&amp;gt; * stats::filter&lt;/code>&lt;/pre>
&lt;p>To resolve conflicts, remove the ambiguity by using &lt;code>::&lt;/code> (i.e. &lt;code>dplyr::filter()&lt;/code> or &lt;code>base::filter()&lt;/code>). To resolve conflicts for your entire session, use &lt;code>&amp;lt;-&lt;/code>:&lt;/p>
&lt;pre class="r">&lt;code>filter &amp;lt;- dplyr::filter
filter(mtcars, am &amp;amp; cyl == 8)
#&amp;gt; mpg cyl disp hp drat wt qsec vs am gear carb
#&amp;gt; 1 15.8 8 351 264 4.22 3.17 14.5 0 1 5 4
#&amp;gt; 2 15.0 8 301 335 3.54 3.57 14.6 0 1 5 8&lt;/code>&lt;/pre>
&lt;p>If you want to make this behaviour the default, you can load conflicted in your &lt;code>~/.Rprofile&lt;/code> (the easiest way to find and edit this file is with &lt;code>usethis::edit_r_profile()&lt;/code>):&lt;/p>
&lt;pre class="r">&lt;code>if (interactive()) {
require(conflicted)
}&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="how-does-it-work" class="section level2">
&lt;h2>How does it work?&lt;/h2>
&lt;p>Loading conflicted creates a new “conflicted” environment that is attached just after the global environment. This environment contains an active binding for any object that is exported by multiple packages; the active binding will throw an error message describing how to disambiguate the name.&lt;/p>
&lt;p>The conflicted environment also contains bindings for &lt;code>library()&lt;/code> and &lt;code>require()&lt;/code>, which suppress the default conflict reporting (i.e. &lt;code>warn.conflicts = FALSE&lt;/code>) and ensure that the conflicted environment is updated with any new conflicts. Because they occur in the search path before the base package, they will be called instead of &lt;code>base::library()&lt;/code> and &lt;code>base::require()&lt;/code>.&lt;/p>
&lt;/div>
&lt;div id="what-does-the-future-hold" class="section level2">
&lt;h2>What does the future hold?&lt;/h2>
&lt;p>In my use of conflicted, I have noticed two main pain points:&lt;/p>
&lt;ul>
&lt;li>&lt;p>When creating the dplyr package I made what I now believe to be a mistake
and I gave two functions the same name as existing base R functions:
&lt;code>filter()&lt;/code> and &lt;code>lag()&lt;/code> (I did this because I thought those functions were
rarely used, but they’re actually important to some communities). However,
it’s frustrating to have do &lt;code>filter &amp;lt;- dplyr::filter()&lt;/code> everytime you
load dplyr, so I need to figure out someway to allow you to globally
prefer either &lt;code>dplyr::filter()&lt;/code> or &lt;code>base::filter()&lt;/code>. It’s possible
&lt;code>library(tidyverse)&lt;/code> could do this for you, but I’m not sure if that’s too
aggressive or not.&lt;/p>&lt;/li>
&lt;li>&lt;p>When we move a function to a different package, we usually leave a function
behind that tells you the new location. Ideally, this sort of function would
never trigger a conflict so there’s no additional hassle if you have both
new and old packages loaded. (Currently the biggest hassle is usethis and
devtools since so many usethis functions originally lived in devtools). I
think the right way to handle this is to set an attribute on deprecated
functions so that conflicted knows to ignore them.&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>My goal is to figure out how to eliminate these pain points before the next release.&lt;/p>
&lt;/div>
&lt;div id="acknowledgements" class="section level2">
&lt;h2>Acknowledgements&lt;/h2>
&lt;p>Thanks to &lt;a href="https://github.com/krlmlr">@krlmlr&lt;/a> for the basic idea. This code was previously part of the experimental &lt;a href="https://github.com/hadley/strict">strict&lt;/a> package, but I decided improved conflict resolution is useful by itself and worth its own package.&lt;/p>
&lt;/div></description></item><item><title>pkgdown 1.0.0</title><link>https://www.tidyverse.org/blog/2018/05/pkgdown-1-0-0/</link><pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/05/pkgdown-1-0-0/</guid><description>
&lt;p>I’m very pleased to announce the initial release of &lt;a href="http://pkgdown.r-lib.org">pkgdown&lt;/a> to CRAN! pkgdown is designed to make it quick and easy to build a website for your package. You can see pkgdown in action at &lt;a href="http://pkgdown.r-lib.org" class="uri">http://pkgdown.r-lib.org&lt;/a>: this is the output of pkgdown applied to the latest version of pkgdown. This initial release is version 1.0.0 in recognition that pkgdown has been in development for 6 years (!) and has already been used to make websites for &lt;a href="https://github.com/search?q=pkgdown.css+in%3Apath+path%3Adocs&amp;amp;type=Code">over 1600 packages&lt;/a> (!!).&lt;/p>
&lt;p>Install pkgdown with:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;pkgdown&amp;quot;)&lt;/code>&lt;/pre>
&lt;div id="usage" class="section level2">
&lt;h2>Usage&lt;/h2>
&lt;p>Basic usage is simple: run &lt;code>build_site()&lt;/code> within your package directory:&lt;/p>
&lt;pre class="r">&lt;code>pkgdown::build_site()&lt;/code>&lt;/pre>
&lt;p>By default, this will generate a &lt;code>docs/&lt;/code> directory. The home page will be generated from your &lt;code>README.md&lt;/code>, a function reference will be generated from the documentation in the &lt;code>man/&lt;/code> directory, and any &lt;code>vignettes/&lt;/code> will be converted into articles&lt;/p>
&lt;p>If you are using GitHub, the easiest way to make this your package website is to check it in, push it, then go to repo settings and ensure that the &lt;strong>GitHub pages&lt;/strong> source is set to “master branch /docs folder”.&lt;/p>
&lt;/div>
&lt;div id="customisation" class="section level2">
&lt;h2>Customisation&lt;/h2>
&lt;p>To customise your site, first read &lt;a href="http://pkgdown.r-lib.org/articles/pkgdown.html">&lt;code>vignette(&amp;quot;pkgdown&amp;quot;)&lt;/code>&lt;/a>, then read the documentation for the functions responsible for building each part of the site:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://pkgdown.r-lib.org/reference/init_site.html">&lt;code>init_site()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://pkgdown.r-lib.org/reference/build_home.html">&lt;code>build_home()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://pkgdown.r-lib.org/reference/build_reference.html">&lt;code>build_reference()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://pkgdown.r-lib.org/reference/build_articles.html">&lt;code>build_articles()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://pkgdown.r-lib.org/reference/build_tutorials.html">&lt;code>build_tutorials()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://pkgdown.r-lib.org/reference/build_news.html">&lt;code>build_news()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="in-the-wild" class="section level2">
&lt;h2>In the wild&lt;/h2>
&lt;p>A great way to see what you can do with pkgdown is to look at existing websites. Here are a few examples created by some of the contributors to pkgdown:&lt;/p>
&lt;ul>
&lt;li>&lt;p>&lt;a href="http://mc-stan.org/bayesplot/index.html">bayesplot&lt;/a>
[&lt;a href="https://github.com/stan-dev/bayesplot/tree/gh-pages">source&lt;/a>]:
plotting functions for posterior analysis, model checking, and MCMC
diagnostics.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;a href="https://rnabioco.github.io/valr/">valr&lt;/a>
[&lt;a href="https://github.com/rnabioco/valr">source&lt;/a>]:
read and manipulate genome intervals and signals.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;a href="http://jranke.github.io/mkin/">mkin&lt;/a>
[&lt;a href="https://github.com/jranke/mkin">source&lt;/a>]:
calculation routines based on the FOCUS Kinetics Report&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;a href="http://renozao.github.io/NMF/master/index.html">NMF&lt;/a>
[&lt;a href="https://github.com/renozao/NMF">source&lt;/a>]:
a framework to perform non-negative matrix factorization (NMF).&lt;/p>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="acknowledgements" class="section level2">
&lt;h2>Acknowledgements&lt;/h2>
&lt;p>pkgdown has been a long time coming, and it wouldn’t have been possible without a devoted community of users, many of whom have gone on to contribute fixes. I’d like to particularly thank &lt;a href="https://hesselberthlab.org">Jay Hesselberth&lt;/a> who put a lot of work into implementing site search in partnership with &lt;a href="https://community.algolia.com/docsearch/">Algolia’s docsearch&lt;/a>.&lt;/p>
&lt;p>A big thanks goes out to all 184 other people who contributed issues, pull requests, and comments: &lt;a href="https://github.com/aaronrudkin">@aaronrudkin&lt;/a>, &lt;a href="https://github.com/adamkski">@adamkski&lt;/a>, &lt;a href="https://github.com/adibender">@adibender&lt;/a>, &lt;a href="https://github.com/AdrianHordyk">@AdrianHordyk&lt;/a>, &lt;a href="https://github.com/adrtod">@adrtod&lt;/a>, &lt;a href="https://github.com/agrueneberg">@agrueneberg&lt;/a>, &lt;a href="https://github.com/alekrutkowski">@alekrutkowski&lt;/a>, &lt;a href="https://github.com/amatsuo">@amatsuo&lt;/a>, &lt;a href="https://github.com/amrrs">@amrrs&lt;/a>, &lt;a href="https://github.com/andrie">@andrie&lt;/a>, &lt;a href="https://github.com/antuki">@antuki&lt;/a>, &lt;a href="https://github.com/aravind-j">@aravind-j&lt;/a>, &lt;a href="https://github.com/batpigandme">@batpigandme&lt;/a>, &lt;a href="https://github.com/bborgesr">@bborgesr&lt;/a>, &lt;a href="https://github.com/bhaskarvk">@bhaskarvk&lt;/a>, &lt;a href="https://github.com/bowerth">@bowerth&lt;/a>, &lt;a href="https://github.com/BrianDiggs">@BrianDiggs&lt;/a>, &lt;a href="https://github.com/carlosparadis">@carlosparadis&lt;/a>, &lt;a href="https://github.com/cboettig">@cboettig&lt;/a>, &lt;a href="https://github.com/cderv">@cderv&lt;/a>, &lt;a href="https://github.com/chfleming">@chfleming&lt;/a>, &lt;a href="https://github.com/choisy">@choisy&lt;/a>, &lt;a href="https://github.com/christophergandrud">@christophergandrud&lt;/a>, &lt;a href="https://github.com/ck37">@ck37&lt;/a>, &lt;a href="https://github.com/corybrunson">@corybrunson&lt;/a>, &lt;a href="https://github.com/crew102">@crew102&lt;/a>, &lt;a href="https://github.com/czeildi">@czeildi&lt;/a>, &lt;a href="https://github.com/Dasonk">@Dasonk&lt;/a>, &lt;a href="https://github.com/davebraze">@davebraze&lt;/a>, &lt;a href="https://github.com/davidcarslaw">@davidcarslaw&lt;/a>, &lt;a href="https://github.com/DavisVaughan">@DavisVaughan&lt;/a>, &lt;a href="https://github.com/dfalbel">@dfalbel&lt;/a>, &lt;a href="https://github.com/dincerti">@dincerti&lt;/a>, &lt;a href="https://github.com/dirkschumacher">@dirkschumacher&lt;/a>, &lt;a href="https://github.com/dmenne">@dmenne&lt;/a>, &lt;a href="https://github.com/dracodoc">@dracodoc&lt;/a>, &lt;a href="https://github.com/edgararuiz">@edgararuiz&lt;/a>, &lt;a href="https://github.com/edzer">@edzer&lt;/a>, &lt;a href="https://github.com/eibanez">@eibanez&lt;/a>, &lt;a href="https://github.com/eliotmcintire">@eliotmcintire&lt;/a>, &lt;a href="https://github.com/Emaasit">@Emaasit&lt;/a>, &lt;a href="https://github.com/emhart">@emhart&lt;/a>, &lt;a href="https://github.com/Enchufa2">@Enchufa2&lt;/a>, &lt;a href="https://github.com/espinielli">@espinielli&lt;/a>, &lt;a href="https://github.com/famuvie">@famuvie&lt;/a>, &lt;a href="https://github.com/flaviobarros">@flaviobarros&lt;/a>, &lt;a href="https://github.com/flying-sheep">@flying-sheep&lt;/a>, &lt;a href="https://github.com/friendly">@friendly&lt;/a>, &lt;a href="https://github.com/gaborcsardi">@gaborcsardi&lt;/a>, &lt;a href="https://github.com/GegznaV">@GegznaV&lt;/a>, &lt;a href="https://github.com/GeoBosh">@GeoBosh&lt;/a>, &lt;a href="https://github.com/ghost">@ghost&lt;/a>, &lt;a href="https://github.com/goldingn">@goldingn&lt;/a>, &lt;a href="https://github.com/gr8694">@gr8694&lt;/a>, &lt;a href="https://github.com/GShotwell">@GShotwell&lt;/a>, &lt;a href="https://github.com/Guilz">@Guilz&lt;/a>, &lt;a href="https://github.com/gvegayon">@gvegayon&lt;/a>, &lt;a href="https://github.com/hadley">@hadley&lt;/a>, &lt;a href="https://github.com/iagomosqueira">@iagomosqueira&lt;/a>, &lt;a href="https://github.com/ijlyttle">@ijlyttle&lt;/a>, &lt;a href="https://github.com/IndrajeetPatil">@IndrajeetPatil&lt;/a>, &lt;a href="https://github.com/isteves">@isteves&lt;/a>, &lt;a href="https://github.com/jacob-long">@jacob-long&lt;/a>, &lt;a href="https://github.com/jakob-r">@jakob-r&lt;/a>, &lt;a href="https://github.com/jakobbossek">@jakobbossek&lt;/a>, &lt;a href="https://github.com/jamesdunham">@jamesdunham&lt;/a>, &lt;a href="https://github.com/janeshdev">@janeshdev&lt;/a>, &lt;a href="https://github.com/jaredhuling">@jaredhuling&lt;/a>, &lt;a href="https://github.com/javierluraschi">@javierluraschi&lt;/a>, &lt;a href="https://github.com/jbkunst">@jbkunst&lt;/a>, &lt;a href="https://github.com/jefferis">@jefferis&lt;/a>, &lt;a href="https://github.com/jeffwong">@jeffwong&lt;/a>, &lt;a href="https://github.com/jemus42">@jemus42&lt;/a>, &lt;a href="https://github.com/jennybc">@jennybc&lt;/a>, &lt;a href="https://github.com/jentjr">@jentjr&lt;/a>, &lt;a href="https://github.com/jeroenjanssens">@jeroenjanssens&lt;/a>, &lt;a href="https://github.com/jflournoy">@jflournoy&lt;/a>, &lt;a href="https://github.com/jhoobergs">@jhoobergs&lt;/a>, &lt;a href="https://github.com/jimhester">@jimhester&lt;/a>, &lt;a href="https://github.com/jjallaire">@jjallaire&lt;/a>, &lt;a href="https://github.com/jkennel">@jkennel&lt;/a>, &lt;a href="https://github.com/JohnCoene">@JohnCoene&lt;/a>, &lt;a href="https://github.com/JohnMount">@JohnMount&lt;/a>, &lt;a href="https://github.com/jolars">@jolars&lt;/a>, &lt;a href="https://github.com/jonasfoe">@jonasfoe&lt;/a>, &lt;a href="https://github.com/jranke">@jranke&lt;/a>, &lt;a href="https://github.com/jrosen48">@jrosen48&lt;/a>, &lt;a href="https://github.com/jthurner">@jthurner&lt;/a>, &lt;a href="https://github.com/KasperSkytte">@KasperSkytte&lt;/a>, &lt;a href="https://github.com/katrinleinweber">@katrinleinweber&lt;/a>, &lt;a href="https://github.com/kbenoit">@kbenoit&lt;/a>, &lt;a href="https://github.com/KellyLoucks">@KellyLoucks&lt;/a>, &lt;a href="https://github.com/kent37">@kent37&lt;/a>, &lt;a href="https://github.com/keurcien">@keurcien&lt;/a>, &lt;a href="https://github.com/kevinushey">@kevinushey&lt;/a>, &lt;a href="https://github.com/kimyen">@kimyen&lt;/a>, &lt;a href="https://github.com/kmiddleton">@kmiddleton&lt;/a>, &lt;a href="https://github.com/kohske">@kohske&lt;/a>, &lt;a href="https://github.com/krlmlr">@krlmlr&lt;/a>, &lt;a href="https://github.com/kuhnrl30">@kuhnrl30&lt;/a>, &lt;a href="https://github.com/kwstat">@kwstat&lt;/a>, &lt;a href="https://github.com/kylebmetrum">@kylebmetrum&lt;/a>, &lt;a href="https://github.com/lbusett">@lbusett&lt;/a>, &lt;a href="https://github.com/lgatto">@lgatto&lt;/a>, &lt;a href="https://github.com/LiNk-NY">@LiNk-NY&lt;/a>, &lt;a href="https://github.com/lionel-">@lionel-&lt;/a>, &lt;a href="https://github.com/luca-scr">@luca-scr&lt;/a>, &lt;a href="https://github.com/maelle">@maelle&lt;/a>, &lt;a href="https://github.com/MarcinKosinski">@MarcinKosinski&lt;/a>, &lt;a href="https://github.com/marcosci">@marcosci&lt;/a>, &lt;a href="https://github.com/MarkEdmondson1234">@MarkEdmondson1234&lt;/a>, &lt;a href="https://github.com/markusdumke">@markusdumke&lt;/a>, &lt;a href="https://github.com/maurolepore">@maurolepore&lt;/a>, &lt;a href="https://github.com/maxheld83">@maxheld83&lt;/a>, &lt;a href="https://github.com/mdsumner">@mdsumner&lt;/a>, &lt;a href="https://github.com/merliseclyde">@merliseclyde&lt;/a>, &lt;a href="https://github.com/michaellevy">@michaellevy&lt;/a>, &lt;a href="https://github.com/michelk">@michelk&lt;/a>, &lt;a href="https://github.com/mjsteinbaugh">@mjsteinbaugh&lt;/a>, &lt;a href="https://github.com/mooresm">@mooresm&lt;/a>, &lt;a href="https://github.com/Mullefa">@Mullefa&lt;/a>, &lt;a href="https://github.com/mwillumz">@mwillumz&lt;/a>, &lt;a href="https://github.com/nacnudus">@nacnudus&lt;/a>, &lt;a href="https://github.com/nbenn">@nbenn&lt;/a>, &lt;a href="https://github.com/nealrichardson">@nealrichardson&lt;/a>, &lt;a href="https://github.com/newtux">@newtux&lt;/a>, &lt;a href="https://github.com/nhejazi">@nhejazi&lt;/a>, &lt;a href="https://github.com/nite">@nite&lt;/a>, &lt;a href="https://github.com/noamross">@noamross&lt;/a>, &lt;a href="https://github.com/nsheff">@nsheff&lt;/a>, &lt;a href="https://github.com/nuno-agostinho">@nuno-agostinho&lt;/a>, &lt;a href="https://github.com/pachevalier">@pachevalier&lt;/a>, &lt;a href="https://github.com/PascalKieslich">@PascalKieslich&lt;/a>, &lt;a href="https://github.com/pat-s">@pat-s&lt;/a>, &lt;a href="https://github.com/patperry">@patperry&lt;/a>, &lt;a href="https://github.com/privefl">@privefl&lt;/a>, &lt;a href="https://github.com/rajanand">@rajanand&lt;/a>, &lt;a href="https://github.com/randy3k">@randy3k&lt;/a>, &lt;a href="https://github.com/ras44">@ras44&lt;/a>, &lt;a href="https://github.com/renozao">@renozao&lt;/a>, &lt;a href="https://github.com/restonslacker">@restonslacker&lt;/a>, &lt;a href="https://github.com/rickhelmus">@rickhelmus&lt;/a>, &lt;a href="https://github.com/RLesur">@RLesur&lt;/a>, &lt;a href="https://github.com/RLumSK">@RLumSK&lt;/a>, &lt;a href="https://github.com/RMHogervorst">@RMHogervorst&lt;/a>, &lt;a href="https://github.com/robertzk">@robertzk&lt;/a>, &lt;a href="https://github.com/Robinlovelace">@Robinlovelace&lt;/a>, &lt;a href="https://github.com/romainfrancois">@romainfrancois&lt;/a>, &lt;a href="https://github.com/rstub">@rstub&lt;/a>, &lt;a href="https://github.com/sahilseth">@sahilseth&lt;/a>, &lt;a href="https://github.com/samuel-rosa">@samuel-rosa&lt;/a>, &lt;a href="https://github.com/saurfang">@saurfang&lt;/a>, &lt;a href="https://github.com/sckott">@sckott&lt;/a>, &lt;a href="https://github.com/sebastian-c">@sebastian-c&lt;/a>, &lt;a href="https://github.com/sfirke">@sfirke&lt;/a>, &lt;a href="https://github.com/slwu89">@slwu89&lt;/a>, &lt;a href="https://github.com/statsandthings">@statsandthings&lt;/a>, &lt;a href="https://github.com/stephlocke">@stephlocke&lt;/a>, &lt;a href="https://github.com/StevenMMortimer">@StevenMMortimer&lt;/a>, &lt;a href="https://github.com/surmann">@surmann&lt;/a>, &lt;a href="https://github.com/t-kalinowski">@t-kalinowski&lt;/a>, &lt;a href="https://github.com/terrytangyuan">@terrytangyuan&lt;/a>, &lt;a href="https://github.com/ThierryO">@ThierryO&lt;/a>, &lt;a href="https://github.com/thk686">@thk686&lt;/a>, &lt;a href="https://github.com/tjmahr">@tjmahr&lt;/a>, &lt;a href="https://github.com/tomaskrehlik">@tomaskrehlik&lt;/a>, &lt;a href="https://github.com/topepo">@topepo&lt;/a>, &lt;a href="https://github.com/trinker">@trinker&lt;/a>, &lt;a href="https://github.com/Tutuchan">@Tutuchan&lt;/a>, &lt;a href="https://github.com/UweBlock">@UweBlock&lt;/a>, &lt;a href="https://github.com/WastlM">@WastlM&lt;/a>, &lt;a href="https://github.com/wch">@wch&lt;/a>, &lt;a href="https://github.com/wjakethompson">@wjakethompson&lt;/a>, &lt;a href="https://github.com/wlandau">@wlandau&lt;/a>, &lt;a href="https://github.com/wlandau-lilly">@wlandau-lilly&lt;/a>, &lt;a href="https://github.com/wrathematics">@wrathematics&lt;/a>, &lt;a href="https://github.com/wviechtb">@wviechtb&lt;/a>, &lt;a href="https://github.com/xguardi">@xguardi&lt;/a>, &lt;a href="https://github.com/yiluheihei">@yiluheihei&lt;/a>, &lt;a href="https://github.com/yutannihilation">@yutannihilation&lt;/a>, &lt;a href="https://github.com/zappingseb">@zappingseb&lt;/a>, &lt;a href="https://github.com/zbjornson">@zbjornson&lt;/a>, &lt;a href="https://github.com/zkamvar">@zkamvar&lt;/a>, and &lt;a href="https://github.com/znmeb">@znmeb&lt;/a>&lt;/p>
&lt;/div></description></item><item><title>pillar 1.2.2</title><link>https://www.tidyverse.org/blog/2018/04/pillar-1-2-2/</link><pubDate>Mon, 30 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/04/pillar-1-2-2/</guid><description>
&lt;p>Announcing version 1.2.2 of the &lt;em>pillar&lt;/em> package which prints &lt;a href="http://tibble.tidyverse.org/">tibbles&lt;/a> to the terminal. This is yet another small release that addresses user feedback. Numbers are printed more consicely and accurately. We show how to enable the original data frame printing for tibbles, and an outlook on upcoming formatting improvement for list columns.&lt;/p>
&lt;p>Please see the &lt;a href="https://github.com/r-lib/pillar/releases/v1.2.2">release notes&lt;/a> for the full list of changes. Examples in this blog post are shown using the &lt;em>tibble&lt;/em> package, which uses &lt;em>pillar&lt;/em> under the hood.&lt;/p>
&lt;div id="improved-output" class="section level2">
&lt;h2>Improved output&lt;/h2>
&lt;p>The decimal dot that was always printed since &lt;em>pillar&lt;/em> 1.2.1 seems to have contributed to more confusion, not less. It’s gone now, whole numbers don’t have the dot anymore. Unless.&lt;/p>
&lt;p>Unless it’s a whole number a tiny number has been added to or subtracted from. In other words, &lt;code>1&lt;/code> is shown as &lt;code>1&lt;/code>, but &lt;code>1 + 1e-6&lt;/code> is shown as &lt;code>1.00&lt;/code>, and &lt;code>123 + 1e-6&lt;/code> is shown as &lt;code>123.&lt;/code>. This is a hint that there’s more than can be shown with the requested number of significant digits (which is 3 by default and can be changed by setting the &lt;code>pillar.sigfig&lt;/code> option).&lt;/p>
&lt;p>Likewise, decimal numbers that don’t use the requested number of significant digits are shortened. The number &lt;code>0.1&lt;/code> is no longer shown as &lt;code>0.100&lt;/code>. Because most finite decimal representations don’t have an accurate representation in the underlying floating-point format, &lt;em>pillar&lt;/em> uses a heuristic: if the number multiplied by a power of 10 is a whole number within a small tolerance of about &lt;code>1e-8&lt;/code> (on most systems), it can be shortened. This is the same tolerance that the &lt;code>all.equal()&lt;/code> function uses for comparing numeric values.&lt;/p>
&lt;pre class="r">&lt;code>tibble(numbers = c(1, 0.1, 0.01, c(1, 12, 123, 1234, 0.1, 0.01) + 1e-6))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#8a8a8a"># A tibble: 9 x 1&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> numbers
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="font-style:italic">&lt;span style="color:#8a8a8a">&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">1&lt;/span> 1
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">2&lt;/span> 0.1
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">3&lt;/span> 0.01
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">4&lt;/span> 1.00
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">5&lt;/span> 12.0
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">6&lt;/span> 123.
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">7&lt;/span> &lt;span style="text-decoration:underline">1&lt;/span>234.
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">8&lt;/span> 0.100
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">9&lt;/span> 0.010&lt;span style="text-decoration:underline">0&lt;/span>
&lt;/pre>
&lt;/div>
&lt;div id="dont-like-the-printing" class="section level2">
&lt;h2>Don’t like the printing?&lt;/h2>
&lt;p>Just like with the absence of row names or the default &lt;code>drop = FALSE&lt;/code>, tibbles are opinionated in how they print. We’re working on providing a sensible default that suits most use cases, but some users have expressed the desire to revert to the good old data frame output.&lt;/p>
&lt;p>This is possible already by overriding the &lt;code>print.tbl_df&lt;/code> method, which is called when a tibble is printed (either explicitly via &lt;code>print()&lt;/code> or implicitly from the console). On the downside, this also loses the second header row with the data types and the restriction in the number of rows and columns shown.&lt;/p>
&lt;pre class="r">&lt;code>tibble(a = 1:3)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#8a8a8a"># A tibble: 3 x 1&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> a
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="font-style:italic">&lt;span style="color:#8a8a8a">&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">1&lt;/span> 1
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">2&lt;/span> 2
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">3&lt;/span> 3
&lt;/pre>
&lt;pre class="r">&lt;code>print.tbl_df &amp;lt;- function(x, ...) {
print.data.frame(x, ...)
invisible(x)
}
tibble(a = 1:3)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> a
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> 1 1
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> 2 2
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> 3 3
&lt;/pre>
&lt;/div>
&lt;div id="outlook-formatting-list-columns" class="section level2">
&lt;h2>Outlook: formatting list columns&lt;/h2>
&lt;p>List columns (and the special case of nested data frames) are a very powerful idiom. In R, a list is just a special case of a vector that can hold arbitrary complex objects; it can be added to a data frame if it has the same lengths as the other columns:&lt;/p>
&lt;pre class="r">&lt;code>tibble(a = 1:3, b = list(4, 5:6, letters[7:9]))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#8a8a8a"># A tibble: 3 x 2&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> a b
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="font-style:italic">&lt;span style="color:#8a8a8a">&amp;lt;int&amp;gt;&lt;/span>&lt;/span> &lt;span style="font-style:italic">&lt;span style="color:#8a8a8a">&amp;lt;list&amp;gt;&lt;/span>&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">1&lt;/span> 1 &lt;span style="color:#8a8a8a">&amp;lt;dbl [1]&amp;gt;&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">2&lt;/span> 2 &lt;span style="color:#8a8a8a">&amp;lt;int [2]&amp;gt;&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">3&lt;/span> 3 &lt;span style="color:#8a8a8a">&amp;lt;chr [3]&amp;gt;&lt;/span>
&lt;/pre>
&lt;p>Often, all objects in a list column have the same data type. A different formatting for such homogeneous lists would help focus on the relevant parts (e.g. the dimensions of the objects in that list) and save space too. This feature isn’t ready for prime time yet, but the screenshot below shows how this could look like. Feel free to comment on the &lt;a href="https://github.com/r-lib/pillar/pull/109">relevant pull request&lt;/a> on GitHub.&lt;/p>
&lt;div class="figure">
&lt;img src="https://www.tidyverse.org/images/pillar-1-2-2/colored-list-col.png" />
&lt;/div>
&lt;/div>
&lt;div id="acknowledgments" class="section level2">
&lt;h2>Acknowledgments&lt;/h2>
&lt;p>We’d like to use the opportunity to thank all recent contributors to &lt;em>pillar&lt;/em> and &lt;em>tibble&lt;/em>. Thanks to everyone, your contributions help improve the tidyverse:&lt;/p>
&lt;p>&lt;a href="https://github.com/adsaxon">@adsaxon&lt;/a>, &lt;a href="https://github.com/aegerton">@aegerton&lt;/a>, &lt;a href="https://github.com/alaindanet">@alaindanet&lt;/a>, &lt;a href="https://github.com/alexwhan">@alexwhan&lt;/a>, &lt;a href="https://github.com/alistaire47">@alistaire47&lt;/a>, &lt;a href="https://github.com/anhqle">@anhqle&lt;/a>, &lt;a href="https://github.com/batpigandme">@batpigandme&lt;/a>, &lt;a href="https://github.com/bgreenwell">@bgreenwell&lt;/a>, &lt;a href="https://github.com/blueprint-ade">@blueprint-ade&lt;/a>, &lt;a href="https://github.com/brodieG">@brodieG&lt;/a>, &lt;a href="https://github.com/BruceZhaoR">@BruceZhaoR&lt;/a>, &lt;a href="https://github.com/cboettig">@cboettig&lt;/a>, &lt;a href="https://github.com/chasemc">@chasemc&lt;/a>, &lt;a href="https://github.com/cimentadaj">@cimentadaj&lt;/a>, &lt;a href="https://github.com/czeildi">@czeildi&lt;/a>, &lt;a href="https://github.com/DavisVaughan">@DavisVaughan&lt;/a>, &lt;a href="https://github.com/digital-dharma">@digital-dharma&lt;/a>, &lt;a href="https://github.com/dpeterson71">@dpeterson71&lt;/a>, &lt;a href="https://github.com/drewgendreau">@drewgendreau&lt;/a>, &lt;a href="https://github.com/echasnovski">@echasnovski&lt;/a>, &lt;a href="https://github.com/EdwardJRoss">@EdwardJRoss&lt;/a>, &lt;a href="https://github.com/edzer">@edzer&lt;/a>, &lt;a href="https://github.com/Eluvias">@Eluvias&lt;/a>, &lt;a href="https://github.com/flying-sheep">@flying-sheep&lt;/a>, &lt;a href="https://github.com/gregorp">@gregorp&lt;/a>, &lt;a href="https://github.com/holstius">@holstius&lt;/a>, &lt;a href="https://github.com/hplieninger">@hplieninger&lt;/a>, &lt;a href="https://github.com/ijlyttle">@ijlyttle&lt;/a>, &lt;a href="https://github.com/iron0012">@iron0012&lt;/a>, &lt;a href="https://github.com/javierluraschi">@javierluraschi&lt;/a>, &lt;a href="https://github.com/jcpetkovich">@jcpetkovich&lt;/a>, &lt;a href="https://github.com/jennybc">@jennybc&lt;/a>, &lt;a href="https://github.com/JLYJabc">@JLYJabc&lt;/a>, &lt;a href="https://github.com/jonathan-g">@jonathan-g&lt;/a>, &lt;a href="https://github.com/jtelleriar">@jtelleriar&lt;/a>, &lt;a href="https://github.com/kendonB">@kendonB&lt;/a>, &lt;a href="https://github.com/kevinushey">@kevinushey&lt;/a>, &lt;a href="https://github.com/kevinykuo">@kevinykuo&lt;/a>, &lt;a href="https://github.com/khughitt">@khughitt&lt;/a>, &lt;a href="https://github.com/kovla">@kovla&lt;/a>, &lt;a href="https://github.com/lbusett">@lbusett&lt;/a>, &lt;a href="https://github.com/lionel-">@lionel-&lt;/a>, &lt;a href="https://github.com/lorenzwalthert">@lorenzwalthert&lt;/a>, &lt;a href="https://github.com/lpmarco">@lpmarco&lt;/a>, &lt;a href="https://github.com/lwiklendt">@lwiklendt&lt;/a>, &lt;a href="https://github.com/martinjhnhadley">@martinjhnhadley&lt;/a>, &lt;a href="https://github.com/martj42">@martj42&lt;/a>, &lt;a href="https://github.com/mattfidler">@mattfidler&lt;/a>, &lt;a href="https://github.com/mmuurr">@mmuurr&lt;/a>, &lt;a href="https://github.com/momeara">@momeara&lt;/a>, &lt;a href="https://github.com/mubeenarasack">@mubeenarasack&lt;/a>, &lt;a href="https://github.com/mundl">@mundl&lt;/a>, &lt;a href="https://github.com/nathancday">@nathancday&lt;/a>, &lt;a href="https://github.com/p0bs">@p0bs&lt;/a>, &lt;a href="https://github.com/PalaceChan">@PalaceChan&lt;/a>, &lt;a href="https://github.com/patperry">@patperry&lt;/a>, &lt;a href="https://github.com/plantarum">@plantarum&lt;/a>, &lt;a href="https://github.com/PMassicotte">@PMassicotte&lt;/a>, &lt;a href="https://github.com/randomgambit">@randomgambit&lt;/a>, &lt;a href="https://github.com/rkahne">@rkahne&lt;/a>, &lt;a href="https://github.com/slonik-az">@slonik-az&lt;/a>, &lt;a href="https://github.com/strengejacke">@strengejacke&lt;/a>, &lt;a href="https://github.com/sumtxt">@sumtxt&lt;/a>, &lt;a href="https://github.com/t-kalinowski">@t-kalinowski&lt;/a>, &lt;a href="https://github.com/Tazinho">@Tazinho&lt;/a>, &lt;a href="https://github.com/tjmahr">@tjmahr&lt;/a>, &lt;a href="https://github.com/tmelconian">@tmelconian&lt;/a>, &lt;a href="https://github.com/tomroh">@tomroh&lt;/a>, &lt;a href="https://github.com/trinker">@trinker&lt;/a>, &lt;a href="https://github.com/vnijs">@vnijs&lt;/a>, &lt;a href="https://github.com/vspinu">@vspinu&lt;/a>, &lt;a href="https://github.com/WB-Student">@WB-Student&lt;/a>, &lt;a href="https://github.com/wch">@wch&lt;/a>, &lt;a href="https://github.com/wibeasley">@wibeasley&lt;/a>, &lt;a href="https://github.com/wpetry">@wpetry&lt;/a>, &lt;a href="https://github.com/yutannihilation">@yutannihilation&lt;/a>, and &lt;a href="https://github.com/Zedseayou">@Zedseayou&lt;/a>.&lt;/p>
&lt;/div></description></item><item><title>pillar 1.2.1</title><link>https://www.tidyverse.org/blog/2018/03/pillar-1-2-1/</link><pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/03/pillar-1-2-1/</guid><description>
&lt;p>We’re excited to present version 1.2.1 of the &lt;em>pillar&lt;/em> package, the package that is responsible for printing &lt;a href="http://tibble.tidyverse.org/">tibbles&lt;/a> to the terminal. This small release addresses feedback concerning the output of tibbles. In particular, groups of three digits are now highlighted to give a better idea about the order of magnitude of decimal numbers. In addition, a few minor bugs were fixed, such as the output for S3 classes extending &lt;code>numeric&lt;/code> (like durations from &lt;em>lubridate&lt;/em>) and the output very small numbers.&lt;/p>
&lt;p>Please see the &lt;a href="https://github.com/r-lib/pillar/releases/v1.2.1">release notes&lt;/a> for the full list of improvements and bug fixes. Because the changes in this package mostly affect the output for tibbles, examples in this blog post are shown using the &lt;em>tibble&lt;/em> package.&lt;/p>
&lt;div id="improved-output" class="section level2">
&lt;h2>Improved output&lt;/h2>
&lt;p>In response to use feedback, the following changes were made to the output:&lt;/p>
&lt;ul>
&lt;li>Previous versions of &lt;em>pillar&lt;/em> showed all but the three “significant” digits in a subtle color. This highlights the wrong digits in some common use cases and is now turned off by default.&lt;br />
&lt;/li>
&lt;li>The negation sign is printed next to the number again. Aligning all negation signs turned out to be confusing in some cases.&lt;/li>
&lt;li>Groups of three digits are now underlined, starting with the fourth before/after the decimal point. This gives a better idea of the order of magnitude of the numbers.&lt;/li>
&lt;/ul>
&lt;pre class="r">&lt;code>x &amp;lt;- -123456789 * (10 ^ c(-2, -5, -6, NA, -8, -10)) * c(-1, 1)
x&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> [1] 1.234568e+06 -1.234568e+03 1.234568e+02 NA 1.234568e+00
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> [6] -1.234568e-02
&lt;/pre>
&lt;pre class="r">&lt;code>tibble(x)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#8a8a8a"># A tibble: 6 x 1&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> x
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="font-style:italic">&lt;span style="color:#8a8a8a">&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">1&lt;/span> 1&lt;span style="text-decoration:underline">2&lt;/span>&lt;span style="text-decoration:underline">3&lt;/span>&lt;span style="text-decoration:underline">4&lt;/span>568.
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">2&lt;/span> -&lt;span style="color:#cc0000">&lt;span style="text-decoration:underline">1&lt;/span>23&lt;/span>&lt;span style="color:#cc0000">5&lt;/span>&lt;span style="color:#cc0000">.&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">3&lt;/span> 123.
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">4&lt;/span> &lt;span style="color:#cc0000">NA&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">5&lt;/span> 1.23
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">6&lt;/span> -&lt;span style="color:#cc0000">0&lt;/span>&lt;span style="color:#cc0000">.&lt;/span>&lt;span style="color:#cc0000">0&lt;/span>&lt;span style="color:#cc0000">12&lt;span style="text-decoration:underline">3&lt;/span>&lt;/span>
&lt;/pre>
&lt;ul>
&lt;li>Scientific notation uses regular digits again for exponents, to improve legibility and because in some common fonts the superscript digits aren’t aligned correctly.&lt;/li>
&lt;/ul>
&lt;pre class="r">&lt;code>print(tibble(x), width = 15)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt; &lt;span style="color:#8a8a8a"># A tibble: 6
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span>&lt;/span> # x 1
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> x
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="font-style:italic">&lt;span style="color:#8a8a8a">&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">1&lt;/span> 1.23&lt;span style="color:#8a8a8a">e&lt;/span>+6
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">2&lt;/span> -&lt;span style="color:#cc0000">1&lt;/span>&lt;span style="color:#cc0000">.&lt;/span>&lt;span style="color:#cc0000">23&lt;/span>&lt;span style="color:#8a8a8a">e&lt;/span>+3
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">3&lt;/span> 1.23&lt;span style="color:#8a8a8a">e&lt;/span>+2
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">4&lt;/span> &lt;span style="color:#cc0000">NA&lt;/span> &lt;span style="color:#8a8a8a"> &lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">5&lt;/span> 1.23&lt;span style="color:#8a8a8a">e&lt;/span>+0
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">6&lt;/span> -&lt;span style="color:#cc0000">1&lt;/span>&lt;span style="color:#cc0000">.&lt;/span>&lt;span style="color:#cc0000">23&lt;/span>&lt;span style="color:#8a8a8a">e&lt;/span>&lt;span style="color:#cc0000">-2&lt;/span>
&lt;/span>&lt;/pre>
&lt;p>To avoid confusion, the decimal dot is now always printed for numbers of type &lt;code>numeric&lt;/code>, but trailing zeros are no longer shown if all displayed numbers are whole numbers. Compare the following outputs:&lt;/p>
&lt;pre class="r">&lt;code>whole &amp;lt;- c(1, 3, 5)
tibble(whole)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#8a8a8a"># A tibble: 3 x 1&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> whole
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="font-style:italic">&lt;span style="color:#8a8a8a">&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">1&lt;/span> 1.
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">2&lt;/span> 3.
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">3&lt;/span> 5.
&lt;/pre>
&lt;pre class="r">&lt;code>tibble(wholeish = whole + 0.00000001)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#8a8a8a"># A tibble: 3 x 1&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> wholeish
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="font-style:italic">&lt;span style="color:#8a8a8a">&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">1&lt;/span> 1.00
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">2&lt;/span> 3.00
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">3&lt;/span> 5.00
&lt;/pre>
&lt;/div>
&lt;div id="bug-fixes" class="section level2">
&lt;h2>Bug fixes&lt;/h2>
&lt;p>Are you a &lt;em>lubridate&lt;/em> user? Durations and other objects are displayed again:&lt;/p>
&lt;pre class="r">&lt;code>tibble(duration = lubridate::as.duration(1:3))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#8a8a8a"># A tibble: 3 x 1&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> duration
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="font-style:italic">&lt;span style="color:#8a8a8a">&amp;lt;S4: Duration&amp;gt;&lt;/span>&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">1&lt;/span> 1s
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">2&lt;/span> 2s
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">3&lt;/span> 3s
&lt;/pre>
&lt;p>(This also works for other data types that extend &lt;code>numeric&lt;/code> but don’t implement a &lt;code>pillar_shaft()&lt;/code> method. See the &lt;a href="http://tibble.tidyverse.org/articles/extending.html">“Extending tibble” vignette&lt;/a> for details on providing better support for printing your data type in a tibble.)&lt;/p>
&lt;p>Very small numbers are now printed correctly.&lt;/p>
&lt;pre class="r">&lt;code>tiny &amp;lt;- c(1e-310, 1e-320, 1e-330)
tiny&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> [1] 1.000000e-310 9.999889e-321 0.000000e+00
&lt;/pre>
&lt;pre class="r">&lt;code>tibble(tiny)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#8a8a8a"># A tibble: 3 x 1&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> tiny
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="font-style:italic">&lt;span style="color:#8a8a8a">&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">1&lt;/span> 1.00&lt;span style="color:#8a8a8a">e&lt;/span>&lt;span style="color:#cc0000">-310&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">2&lt;/span> 10.00&lt;span style="color:#8a8a8a">e&lt;/span>&lt;span style="color:#cc0000">-321&lt;/span>
&lt;span style="color:#8a8a8a">#&amp;gt;&lt;/span> &lt;span style="color:#b2b2b2">3&lt;/span> 0. &lt;span style="color:#8a8a8a"> &lt;/span>
&lt;/pre>
&lt;/div>
&lt;div id="tibble-or-pillar" class="section level2">
&lt;h2>Tibble or pillar?&lt;/h2>
&lt;p>Now that &lt;em>pillar&lt;/em> is responsible for generating the output for tibbles, what is the best place to discuss problems or suggest ideas?&lt;/p>
&lt;p>As usual, if you’re not sure if a particular behavior is intended, &lt;a href="https://stackoverflow.com/">StackOverflow&lt;/a> is a good place to ask, use the &lt;code>[r]&lt;/code> and &lt;code>[tibble]&lt;/code> tags and perhaps the &lt;code>[tidyverse]&lt;/code> tag. Include a reproducible example, perhaps using the &lt;a href="http://reprex.tidyverse.org/">&lt;em>reprex&lt;/em>&lt;/a> package with a &lt;code>reprex::reprex(venue = &amp;quot;so&amp;quot;)&lt;/code> call.&lt;/p>
&lt;p>To submit bugs or suggest ideas for the output of tibbles, use the &lt;a href="https://github.com/tidyverse/tibble/issues">&lt;em>tibble&lt;/em> issue tracker&lt;/a>, your contributions are always welcome. Add a reprex with &lt;code>reprex::reprex()&lt;/code>. Unfortunately, the &lt;em>reprex&lt;/em> package doesn’t support rendering color and font effects yet, please include a screenshot if these details matter for your example.&lt;/p>
&lt;p>If you are developing a package that uses &lt;em>pillar&lt;/em>, or if you are sure that you have found a problem in this package, you can also use the &lt;a href="https://github.com/r-lib/pillar/issues">&lt;em>pillar&lt;/em> issue tracker&lt;/a>. Please restrict your reprex to the &lt;em>pillar&lt;/em> package in these situations.&lt;/p>
&lt;/div>
&lt;div id="acknowledgments" class="section level2">
&lt;h2>Acknowledgments&lt;/h2>
&lt;p>We’d like to use the opportunity to thank all contributors to &lt;em>pillar&lt;/em> since its inception. Thanks to everyone, your feedback is very valuable to us: &lt;a href="https://github.com/adsaxon">@adsaxon&lt;/a>, &lt;a href="https://github.com/benmarwick">@benmarwick&lt;/a>, &lt;a href="https://github.com/brodieG">@brodieG&lt;/a>, &lt;a href="https://github.com/cboettig">@cboettig&lt;/a>, &lt;a href="https://github.com/DavisVaughan">@DavisVaughan&lt;/a>, &lt;a href="https://github.com/dpeterson71">@dpeterson71&lt;/a>, &lt;a href="https://github.com/echasnovski">@echasnovski&lt;/a>, &lt;a href="https://github.com/edzer">@edzer&lt;/a>, &lt;a href="https://github.com/ijlyttle">@ijlyttle&lt;/a>, &lt;a href="https://github.com/jennybc">@jennybc&lt;/a>, &lt;a href="https://github.com/leondutoit">@leondutoit&lt;/a>, &lt;a href="https://github.com/lionel-">@lionel-&lt;/a>, &lt;a href="https://github.com/martinjhnhadley">@martinjhnhadley&lt;/a>, &lt;a href="https://github.com/PMassicotte">@PMassicotte&lt;/a>, &lt;a href="https://github.com/randomgambit">@randomgambit&lt;/a>, &lt;a href="https://github.com/rkahne">@rkahne&lt;/a>, &lt;a href="https://github.com/strengejacke">@strengejacke&lt;/a>, &lt;a href="https://github.com/tmelconian">@tmelconian&lt;/a>, and &lt;a href="https://github.com/wibeasley">@wibeasley&lt;/a>.&lt;/p>
&lt;/div></description></item><item><title>rlang 0.2.0</title><link>https://www.tidyverse.org/blog/2018/03/rlang-0.2.0/</link><pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/03/rlang-0.2.0/</guid><description>
&lt;p>We are happy to announce a new version of &lt;a href="http://rlang.tidyverse.org/">rlang&lt;/a> that features many improvements to tidy evaluation:&lt;/p>
&lt;ul>
&lt;li>&lt;p>The quirks in the quasiquotation syntax have been much reduced.&lt;/p>&lt;/li>
&lt;li>&lt;p>Quosures gained a much improved printing method with colour support.&lt;/p>&lt;/li>
&lt;li>&lt;p>The performance of quoting, splicing and quosure evaluation was vastly improved.&lt;/p>&lt;/li>
&lt;li>&lt;p>Many bugs have been fixed.&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>Install the latest version of rlang with:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;rlang&amp;quot;)&lt;/code>&lt;/pre>
&lt;div id="syntax-adjustments-for-the-operator" class="section level3">
&lt;h3>Syntax adjustments for the !! operator&lt;/h3>
&lt;p>The headline improvement is a much improved syntax for the &lt;code>!!&lt;/code> operator (pronounced bang-bang). In a way bang-bang is a lie, or a &lt;a href="https://adv-r.hadley.nz/quasiquotation.html#the-polite-fiction-of">polite fiction&lt;/a>. It is not a real R operator and only works in tidy evaluation functions. To implement &lt;code>!!&lt;/code>, we simply look at the code and reinterpret two consecutive &lt;code>!&lt;/code> negations as the unquoting operator. The major downside of this approach was that our &lt;code>!!&lt;/code> operator inherited from the operation precedence of &lt;code>!&lt;/code>, which is very low. As a result &lt;code>!!a + b&lt;/code> was interpreted by R as &lt;code>!!(a + b)&lt;/code> rather than &lt;code>(!!a) + b&lt;/code>. To work around this, tidy eval users had to add explicit parentheses, which was often confusing.&lt;/p>
&lt;p>Happily this is no longer necessary. We now reprocess the whole syntax tree to give &lt;code>!!&lt;/code> a more natural operation precedence, i.e. that of unary &lt;code>+&lt;/code> and &lt;code>-&lt;/code>. This means that expressions like &lt;code>!!a &amp;gt; b&lt;/code> now do the expected thing (only &lt;code>a&lt;/code> is unquoted):&lt;/p>
&lt;pre class="r">&lt;code>a &amp;lt;- sym(&amp;quot;foo&amp;quot;)
expr(!!a &amp;gt; b)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; foo &amp;gt; b
&lt;/pre>
&lt;p>In addition, we automatically strip one layer when &lt;code>!!&lt;/code> is wrapped in parentheses. This is useful for unquoting function names cleanly:&lt;/p>
&lt;pre class="r">&lt;code>expr((!!a)(bar, baz))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; foo(bar, baz)
&lt;/pre>
&lt;pre class="r">&lt;code>
op &amp;lt;- sym(&amp;quot;&amp;gt;&amp;quot;)
expr((!!op)(bar, baz))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; bar &amp;gt; baz
&lt;/pre>
&lt;/div>
&lt;div id="a-new-print-method-for-quosures" class="section level3">
&lt;h3>A new print method for quosures&lt;/h3>
&lt;div id="problems-with-base-r-deparsing" class="section level4">
&lt;h4>Problems with base R deparsing&lt;/h4>
&lt;p>When R code is printed at the console (be it a function, an expression, a formula or a quosure), R runs the function &lt;code>deparse()&lt;/code> to transform the code to a printable string. The deparsing mechanism in base R is not optimal for tidy eval:&lt;/p>
&lt;ul>
&lt;li>&lt;p>It adds redundant parentheses between the &lt;code>!&lt;/code> of &lt;code>!!&lt;/code>:&lt;/p>
&lt;pre class="r">&lt;code>quote(!!x)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; !(!x)
&lt;/pre>
&lt;p>If you ever encounter these weird &lt;code>!(!x)&lt;/code> statements (for instance by printing the code of a tidy eval function in the console), it’s because the R printer adds the pair of parentheses at printing-time. The good news is that it is merely a printing problem.&lt;/p>&lt;/li>
&lt;li>&lt;p>The way it prints inlined vectors is ambiguous. R expressions can contain actual data structures not just symbolic code. It is especially easy to inline vectors and other objects with quasiquotation:&lt;/p>
&lt;pre class="r">&lt;code>expr(mean(!!c(1, 2, 3)))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; mean(c(1, 2, 3))
&lt;/pre>
&lt;p>Note how the output above is indistinguishable from the following output:&lt;/p>
&lt;pre class="r">&lt;code>expr(mean(c(1, 2, 3)))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; mean(c(1, 2, 3))
&lt;/pre>
&lt;p>In both cases, the R printer outputs the code that creates the vector, even if the vector is already created as in the first case!&lt;/p>&lt;/li>
&lt;li>&lt;p>Quosures are currently implemented as formulas but that’s an implementation detail. Quosures and formulas behave differently and it is misleading to have them print as formulas:&lt;/p>
&lt;pre class="r">&lt;code>expr(mean(!!quo(c(1, 2, 3))))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; mean(~c(1, 2, 3))
&lt;/pre>
&lt;p>Furthermore, it would be nice to have a way to distinguish quosures coming from different contexts.&lt;/p>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="deparsing-with-rlang" class="section level4">
&lt;h4>Deparsing with rlang&lt;/h4>
&lt;p>rlang now features &lt;code>expr_print()&lt;/code> powered by &lt;code>expr_deparse()&lt;/code>. These functions are used in the print method of quosures and nicely solve the printing issues:&lt;/p>
&lt;ul>
&lt;li>&lt;p>Inlined vectors are represented with angular brackets and are abbreviated to avoid taking too much space:&lt;/p>
&lt;pre class="r">&lt;code>quo(list(code = 1:10, data = !!(1:10)))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; &amp;lt;quosure&amp;gt;
#&amp;gt; expr: ^list(code = 1:10, data = &amp;lt;int: 1L, 2L, 3L, 4L, 5L, ...&amp;gt;)
#&amp;gt; env: global
&lt;/pre>
&lt;p>S3 objects are printed based on the extensible &lt;code>pillar::type_sum()&lt;/code> generic:&lt;/p>
&lt;pre class="r">&lt;code>quo(lm(!!(disp ~ cyl), data = !!mtcars))&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; &amp;lt;quosure&amp;gt;
#&amp;gt; expr: ^lm(&amp;lt;S3: formula&amp;gt;, data = &amp;lt;data.frame&amp;gt;)
#&amp;gt; env: global
&lt;/pre>&lt;/li>
&lt;li>&lt;p>As you can see in the output above quosures are now displayed with a leading &lt;code>^&lt;/code> instead of a tilde in order to distinguish them from formulas. In addition, they are now colourised according to their environments. Quosures from the global environment are always printed with the default colour. Quosures from local environments are printed with a unique colour. To illustrate this, let’s create two quosures referring to &lt;code>arg&lt;/code>, where &lt;code>arg&lt;/code> represents a different object:&lt;/p>
&lt;pre class="r">&lt;code>make_quo &amp;lt;- function(arg) {
quo(arg)
}
q1 &amp;lt;- make_quo(&amp;quot;foo&amp;quot;)
q2 &amp;lt;- make_quo(&amp;quot;bar&amp;quot;)
q3 &amp;lt;- quo(list(!!q1, !!q2))
q3&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; &amp;lt;quosure&amp;gt;
#&amp;gt; expr: ^list(&lt;span style="color:#3465a4">^arg&lt;/span>, &lt;span style="color:#4e9a06">^arg&lt;/span>)
#&amp;gt; env: global
&lt;/pre>
&lt;p>&lt;code>q3&lt;/code> contains two nested quosures that both point to objects called &lt;code>arg&lt;/code>. While they have the same names these objects come from different contexts, the contexts that were created each time we called the function &lt;code>make_quo()&lt;/code>. Let’s evaluate &lt;code>q3&lt;/code> to verify this:&lt;/p>
&lt;pre class="r">&lt;code>eval_tidy(q3)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; [[1]]
#&amp;gt; [1] "foo"
#&amp;gt;
#&amp;gt; [[2]]
#&amp;gt; [1] "bar"
&lt;/pre>
&lt;p>The colours should help you figure out what is happening when quosures from disparate contexts are unquoted in a larger expression.&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>Note that if you are ever confused by how a quosure prints out (perhaps because of those intervening &lt;code>^&lt;/code> symbols), you can use the new function &lt;code>quo_squash()&lt;/code> to get rid of all the nested quosures and print a naked version:&lt;/p>
&lt;pre class="r">&lt;code>quo_squash(q3)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; list(arg, arg)
&lt;/pre>
&lt;p>Finally, raw expressions created by &lt;code>expr()&lt;/code> are still printed with the base R deparser. If you would like to debug tidy eval code and inspect the result of quasiquotation, use the new &lt;code>qq_show()&lt;/code> function to display a raw expression with the new printer:&lt;/p>
&lt;pre class="r">&lt;code>my_wrapper &amp;lt;- function(data, expr) {
expr &amp;lt;- enquo(expr)
qq_show(data %&amp;gt;% mutate(mean(!!expr)))
}
my_wrapper(mtcars, cyl)&lt;/code>&lt;/pre>
&lt;pre class="knitr r">#&amp;gt; data %&amp;gt;% mutate(mean(^cyl))
&lt;/pre>
&lt;/div>
&lt;/div></description></item><item><title>usethis 1.3.0</title><link>https://www.tidyverse.org/blog/2018/02/usethis-1-3-0/</link><pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/02/usethis-1-3-0/</guid><description>
&lt;p>We are pleased to announce that &lt;a href="http://usethis.r-lib.org">usethis&lt;/a> 1.3.0 is now available on CRAN. usethis automates many common setup tasks for R projects, especially, but not only, for R packages. You can learn more about it at &lt;a href="http://usethis.r-lib.org" class="uri">http://usethis.r-lib.org&lt;/a>. Install it with:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;usethis&amp;quot;)&lt;/code>&lt;/pre>
&lt;p>usethis is part of the refactoring of the &lt;a href="https://github.com/r-lib/devtools#readme">devtools&lt;/a> package. We realize we need to say more about that process, so stay tuned for a dedicated post in the near future. Short version: devtools is here to stay, but it’s being separated into more manageable pieces under the hood.&lt;/p>
&lt;p>usethis was first released in late 2017 at version 1.0.0 (&lt;a href="https://www.tidyverse.org/articles/2017/11/usethis-1.0.0/">blog post&lt;/a>). Here we highlight notable developments since then. For the full details, see the &lt;a href="https://github.com/r-lib/usethis/releases/tag/v1.3.0">release notes&lt;/a>.&lt;/p>
&lt;div id="website-including-setup-advice" class="section level2">
&lt;h2>Website, including setup advice&lt;/h2>
&lt;p>usethis now has a basic website, &lt;a href="http://usethis.r-lib.org" class="uri">http://usethis.r-lib.org&lt;/a>. It includes a &lt;a href="http://usethis.r-lib.org/articles/articles/usethis-setup.html">setup article&lt;/a>, with a “to do” list of tasks that are especially rewarding for R developers who use usethis and devtools.&lt;/p>
&lt;p>In particular, usethis can help with the Git and GitHub side of your R projects, if you do the necessary software installation and configuration. usethis even offers several functions to help with this: &lt;a href="http://usethis.r-lib.org/reference/index.html#section-configuration">configuration functions&lt;/a>.&lt;/p>
&lt;/div>
&lt;div id="secondary-value-of-usethis" class="section level2">
&lt;h2>Secondary value of usethis&lt;/h2>
&lt;p>Working on this usethis release made me reflect on what it is good for. I think of it as a “jig”, in the woodworking sense (quoting &lt;a href="https://en.wikipedia.org/wiki/Jig_(tool)">Wikipedia&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>[Jigs are made] to increase productivity through consistency, to do repetitive activities or to do a job more precisely.&lt;/p>
&lt;/blockquote>
&lt;p>An R package is set of files with a very specific structure and the definitive document is &lt;a href="https://cran.r-project.org/doc/manuals/r-release/R-exts.html">Writing R Extensions&lt;/a> (WRE). A great many of these conventions are fairly simple and rote, yet don’t come up often enough for you to remember all the details. Examples include how to embed data in a package (see &lt;a href="http://usethis.r-lib.org/reference/use_data.html">&lt;code>use_data()&lt;/code>&lt;/a>) or how to set up a vignette (see &lt;a href="http://usethis.r-lib.org/reference/use_vignette.html">&lt;code>use_vignette()&lt;/code>&lt;/a>).&lt;/p>
&lt;p>usethis provides a useful complement to WRE. Each function adds one specific piece of infrastructure to a package or project. Importantly, it documents this not (only) in prose, but also in executable R code. The implementation as discrete R functions allows us to make specific bits of documentation readily available, through the normal R help mechanism. If you use version control, the diff right after executing one of these functions also makes it clear what has been added or modified. Even if you don’t use the usethis functions all the time, they provide a handy reference and learning tool.&lt;/p>
&lt;/div>
&lt;div id="git-and-github" class="section level2">
&lt;h2>Git and GitHub&lt;/h2>
&lt;p>usethis has gained new functions to help with Git/GitHub and some existing functions are now more powerful.&lt;/p>
&lt;p>&lt;a href="http://usethis.r-lib.org/reference/use_git_config.html">&lt;code>use_git_config()&lt;/code>&lt;/a> allows you to set (or view) &lt;code>user.name&lt;/code> and &lt;code>user.email&lt;/code> from within R, at either the user or project level (global or local, in Git-speak).&lt;/p>
&lt;pre class="r">&lt;code>use_git_config(user.name = &amp;quot;Jane Doe&amp;quot;, user.email = &amp;quot;jane@example.com&amp;quot;)
#&amp;gt; ✔ Writing to user git config file
#&amp;gt; $user.name
#&amp;gt; [1] &amp;quot;Jane Doe&amp;quot;
#&amp;gt;
#&amp;gt; $user.email
#&amp;gt; [1] &amp;quot;jane@example.com&amp;quot;&lt;/code>&lt;/pre>
&lt;p>&lt;a href="http://usethis.r-lib.org/reference/browse_github_pat.html">&lt;code>browse_github_pat()&lt;/code>&lt;/a> takes you to a pre-filled web form to generate a GitHub personal access token (PAT). You are instructed how to store this as an environment variable, which usethis can then use downstream to, e.g., create new GitHub repositories on your behalf.&lt;/p>
&lt;p>&lt;a href="http://usethis.r-lib.org/reference/create_from_github.html">&lt;code>create_from_github()&lt;/code>&lt;/a> is not new, but is newly capable of both the &lt;a href="https://help.github.com/articles/cloning-a-repository/">“clone”&lt;/a> or &lt;a href="https://help.github.com/articles/fork-a-repo/">“fork and clone”&lt;/a> workflows, with either the https or ssh protocols. It gains optional arguments for direct provision of the PAT, Git credentials, and GitHub host. usethis can now facilitate all the major workflows:&lt;/p>
&lt;ul>
&lt;li>GitHub first, local project/repo last: &lt;a href="http://usethis.r-lib.org/reference/create_from_github.html">&lt;code>create_from_github()&lt;/code>&lt;/a> does this, with and without forking. In the case of a fork, both the &lt;code>origin&lt;/code> and &lt;code>upstream&lt;/code> remotes are configured, so you are ready to stay in sync with the upstream repo.&lt;/li>
&lt;li>Local project/repo first, GitHub last: &lt;a href="http://usethis.r-lib.org/reference/use_github.html">&lt;code>use_github()&lt;/code>&lt;/a> does this.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="distribution-of-course-materials" class="section level2">
&lt;h2>Distribution of course materials&lt;/h2>
&lt;p>Many courses and workshops kick-off with the participants downloading a set of files from the instructor, such as slides or code examples. We have found this to be a reliable source of aggravation, due to the diversity of the learners’ file system knowledge and habits. You cannot assume that everyone will quickly download an entire set of files, and only those files, to a well-named folder, that they can find in their file browser. &lt;a href="http://usethis.r-lib.org/reference/use_course.html">&lt;code>use_course()&lt;/code>&lt;/a> is a targeted solution to this problem, when time is of the essence.&lt;/p>
&lt;p>&lt;a href="http://usethis.r-lib.org/reference/use_course.html">&lt;code>use_course()&lt;/code>&lt;/a> accepts a link and interactively obtains user’s permission to download a ZIP archive and unpack it to a deliberately named folder on user’s desktop. If an RStudio Project file is found, the new Project is launched and, otherwise, the folder is opened in the file manager, e.g. Finder or File Explorer.&lt;/p>
&lt;p>Here’s an example where the bit.ly shortlink points to the usethis source on GitHub.&lt;/p>
&lt;pre class="r">&lt;code>usethis::use_course(&amp;quot;bit.ly/usethis-shortlink-example&amp;quot;)
#&amp;gt; ✔ Downloading ZIP file to &amp;#39;/Users/jenny/Desktop/r-lib-usethis-v1.2.0-93-g7d1c255.zip&amp;#39;
#&amp;gt; ✔ Unpacking ZIP file into &amp;#39;/Users/jenny/Desktop/r-lib-usethis-7d1c255/&amp;#39; (272 files extracted)&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="community-specific-conventions" class="section level2">
&lt;h2>Community-specific conventions&lt;/h2>
&lt;p>The development conventions for &lt;a href="https://www.tidyverse.org/packages/">tidyverse packages&lt;/a> are gradually being codified into a set of &lt;a href="http://usethis.r-lib.org/reference/tidyverse.html">&lt;code>use_tidy_*()&lt;/code>&lt;/a> helper functions. Some of these functions are directly useful to other developers, such as &lt;code>use_tidy_ci()&lt;/code>, whereas others draw on templates very specific to the &lt;a href="https://github.com/tidyverse/">tidyverse organization&lt;/a>, such as &lt;code>use_tidy_support()&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>&lt;code>use_tidy_style()&lt;/code> is a new function that uses the &lt;a href="http://styler.r-lib.org">styler package&lt;/a> to restyle code according to the &lt;a href="http://style.tidyverse.org">tidyverse style guide&lt;/a>. It’s an example of a function that is generally useful.&lt;/li>
&lt;li>&lt;code>use_tidy_github()&lt;/code> is a new function that adds several standard files, such as contribution guidelines and an issue template, to make a project &lt;a href="https://help.github.com/articles/helping-people-contribute-to-your-project/">more transparent to outside contributors&lt;/a>. These files include hyperlinks that are specific to the tidyverse, so other developers will need to edit the resulting files to reflect their project’s context.&lt;/li>
&lt;/ul>
&lt;p>The community has contributed new &lt;a href="http://usethis.r-lib.org/reference/badges.html">badging functions&lt;/a>, such as &lt;code>use_bioc_badge()&lt;/code> for the build status of BioConductor packages and &lt;code>use_binder_badge()&lt;/code> for &lt;a href="https://mybinder.org">binder&lt;/a> projects. The tidyverse team is starting to use &lt;code>use_lifecycle_badge()&lt;/code> to indicate the &lt;a href="https://www.tidyverse.org/lifecycle/">developmental stage&lt;/a> of a package.&lt;/p>
&lt;/div>
&lt;div id="acknowledgements" class="section level2">
&lt;h2>Acknowledgements&lt;/h2>
&lt;p>A special salute to Maelle Salmon for encouraging the &lt;a href="http://usethis.r-lib.org/articles/articles/usethis-setup.html">setup article&lt;/a>, Ian Lyttle for regularly sharing his Windows pain, Carl Boettiger for exploring every possible GitHub scenario, Stefan Widgren for his stewardship of &lt;a href="https://github.com/ropensci/git2r">git2r&lt;/a>, Jared Lander for commiseration re: workshops, and Jeroen Ooms for the clever pre-filled webform for GitHub PATs.&lt;/p>
&lt;p>A big thanks goes out to the 53 users who contributed issues and pull requests since usethis became a separate package:
&lt;a href="https://github.com/adomingues">@adomingues&lt;/a>, &lt;a href="https://github.com/alexholcombe">@alexholcombe&lt;/a>, &lt;a href="https://github.com/batpigandme">@batpigandme&lt;/a>, &lt;a href="https://github.com/benmarwick">@benmarwick&lt;/a>, &lt;a href="https://github.com/bhaskarvk">@bhaskarvk&lt;/a>, &lt;a href="https://github.com/cboettig">@cboettig&lt;/a>, &lt;a href="https://github.com/colearendt">@colearendt&lt;/a>, &lt;a href="https://github.com/CorradoLanera">@CorradoLanera&lt;/a>, &lt;a href="https://github.com/dchiu911">@dchiu911&lt;/a>, &lt;a href="https://github.com/dhimmel">@dhimmel&lt;/a>, &lt;a href="https://github.com/dougmet">@dougmet&lt;/a>, &lt;a href="https://github.com/dpastoor">@dpastoor&lt;/a>, &lt;a href="https://github.com/eheinzen">@eheinzen&lt;/a>, &lt;a href="https://github.com/EmilHvitfeldt">@EmilHvitfeldt&lt;/a>, &lt;a href="https://github.com/gaborcsardi">@gaborcsardi&lt;/a>, &lt;a href="https://github.com/gvegayon">@gvegayon&lt;/a>, &lt;a href="https://github.com/hadley">@hadley&lt;/a>, &lt;a href="https://github.com/ijlyttle">@ijlyttle&lt;/a>, &lt;a href="https://github.com/jasonserviss">@jasonserviss&lt;/a>, &lt;a href="https://github.com/jdblischak">@jdblischak&lt;/a>, &lt;a href="https://github.com/jennybc">@jennybc&lt;/a>, &lt;a href="https://github.com/jeroen">@jeroen&lt;/a>, &lt;a href="https://github.com/jimhester">@jimhester&lt;/a>, &lt;a href="https://github.com/jjchern">@jjchern&lt;/a>, &lt;a href="https://github.com/jonocarroll">@jonocarroll&lt;/a>, &lt;a href="https://github.com/jrosen48">@jrosen48&lt;/a>, &lt;a href="https://github.com/jsta">@jsta&lt;/a>, &lt;a href="https://github.com/katrinleinweber">@katrinleinweber&lt;/a>, &lt;a href="https://github.com/kevinushey">@kevinushey&lt;/a>, &lt;a href="https://github.com/krlmlr">@krlmlr&lt;/a>, &lt;a href="https://github.com/lindbrook">@lindbrook&lt;/a>, &lt;a href="https://github.com/LiNk-NY">@LiNk-NY&lt;/a>, &lt;a href="https://github.com/lionel-">@lionel-&lt;/a>, &lt;a href="https://github.com/llrs">@llrs&lt;/a>, &lt;a href="https://github.com/lorenzwalthert">@lorenzwalthert&lt;/a>, &lt;a href="https://github.com/maelle">@maelle&lt;/a>, &lt;a href="https://github.com/malcolmbarrett">@malcolmbarrett&lt;/a>, &lt;a href="https://github.com/martinjhnhadley">@martinjhnhadley&lt;/a>, &lt;a href="https://github.com/maurolepore">@maurolepore&lt;/a>, &lt;a href="https://github.com/mixtrak">@mixtrak&lt;/a>, &lt;a href="https://github.com/muschellij2">@muschellij2&lt;/a>, &lt;a href="https://github.com/nbenn">@nbenn&lt;/a>, &lt;a href="https://github.com/PeteHaitch">@PeteHaitch&lt;/a>, &lt;a href="https://github.com/r-pkgs-bot">@r-pkgs-bot&lt;/a>, &lt;a href="https://github.com/rdrivers">@rdrivers&lt;/a>, &lt;a href="https://github.com/richierocks">@richierocks&lt;/a>, &lt;a href="https://github.com/s-fleck">@s-fleck&lt;/a>, &lt;a href="https://github.com/seankross">@seankross&lt;/a>, &lt;a href="https://github.com/tjmahr">@tjmahr&lt;/a>, &lt;a href="https://github.com/topepo">@topepo&lt;/a>, &lt;a href="https://github.com/uribo">@uribo&lt;/a>, &lt;a href="https://github.com/vnijs">@vnijs&lt;/a>, and &lt;a href="https://github.com/webbedfeet">@webbedfeet&lt;/a>.&lt;/p>
&lt;/div></description></item><item><title>fs 1.0.0</title><link>https://www.tidyverse.org/blog/2018/01/fs-1.0.0/</link><pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/01/fs-1.0.0/</guid><description>
&lt;p>&lt;a href="http://fs.r-lib.org">fs 1.0.0&lt;/a> is now available on CRAN! &lt;a href="http://fs.r-lib.org">fs&lt;/a> provides a cross-platform, uniform interface to file system operations. &lt;a href="http://fs.r-lib.org">fs&lt;/a> uses &lt;a href="http://docs.libuv.org/en/v1.x/fs.html">libuv&lt;/a> under the hood, which gives a rock solid cross-platform interface to the filesystem.&lt;/p>
&lt;p>Install the latest version with:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;fs&amp;quot;)&lt;/code>&lt;/pre>
&lt;section id="comparison-vs-base-equivalents" class="level3">
&lt;h3>Comparison vs base equivalents&lt;/h3>
&lt;p>&lt;strong>fs&lt;/strong> functions smooth over some of the idiosyncrasies of file handling with base R functions:&lt;/p>
&lt;ul>
&lt;li>&lt;p>Vectorization. All &lt;strong>fs&lt;/strong> functions are vectorized, accepting multiple paths as input. Base functions are inconsistently vectorized.&lt;/p>&lt;/li>
&lt;li>&lt;p>Predictable return values that always convey a path. All &lt;strong>fs&lt;/strong> functions return a character vector of paths, a named integer or a logical vector, where the names give the paths. Base return values are more varied: they are often logical or contain error codes which require downstream processing.&lt;/p>&lt;/li>
&lt;li>&lt;p>Explicit failure. If &lt;strong>fs&lt;/strong> operations fail, they throw an error. Base functions tend to generate a warning and a system dependent error code. This makes it easy to miss a failure.&lt;/p>&lt;/li>
&lt;li>&lt;p>UTF-8 all the things! &lt;strong>fs&lt;/strong> functions always convert input paths to UTF-8 and return results as UTF-8. This gives you path encoding consistency across OSes. Base functions rely on the native system encoding.&lt;/p>&lt;/li>
&lt;li>&lt;p>Naming convention. &lt;strong>fs&lt;/strong> functions use a consistent naming convention. Because base R’s functions were gradually added over time there are a number of different conventions used (e.g. &lt;code>path.expand()&lt;/code> vs &lt;code>normalizePath()&lt;/code>; &lt;code>Sys.chmod()&lt;/code> vs &lt;code>file.access()&lt;/code>).&lt;/p>&lt;/li>
&lt;/ul>
&lt;/section>
&lt;section id="tidy-paths" class="level3">
&lt;h3>Tidy paths&lt;/h3>
&lt;p>&lt;strong>fs&lt;/strong> functions always return ‘tidy’ paths. Tidy paths&lt;/p>
&lt;ul>
&lt;li>always expand &lt;code>~&lt;/code>&lt;/li>
&lt;li>use &lt;code>/&lt;/code> to delimit directories&lt;/li>
&lt;li>never have multiple &lt;code>/&lt;/code> or trailing &lt;code>/&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Tidy paths are also coloured (if your terminal supports it) based on the file permissions and file type. This colouring can be customised or extended by setting the &lt;code>LS_COLORS&lt;/code> environment variable, in the same output format as &lt;a href="http://www.bigsoft.co.uk/blog/index.php/2008/04/11/configuring-ls_colors">GNU dircolors&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://www.tidyverse.org/images/fs-1.0.0/colour.png" />&lt;/p>
&lt;/section>
&lt;section id="usage" class="level3">
&lt;h3>Usage&lt;/h3>
&lt;p>&lt;strong>fs&lt;/strong> functions are divided into four main categories:&lt;/p>
&lt;ul>
&lt;li>&lt;code>path_&lt;/code> for manipulating paths&lt;/li>
&lt;li>&lt;code>file_&lt;/code> for files&lt;/li>
&lt;li>&lt;code>dir_&lt;/code> for directories&lt;/li>
&lt;li>&lt;code>link_&lt;/code> for links&lt;/li>
&lt;/ul>
&lt;p>Directories and links are special types of files, so &lt;code>file_&lt;/code> functions will generally also work when applied to a directory or link.&lt;/p>
&lt;pre class="r">&lt;code>library(fs)
# list files in the current directory
dir_ls()
#&amp;gt; COPYRIGHTS DESCRIPTION INDEX Meta NAMESPACE NEWS.md
#&amp;gt; R help html libs tests
# create a new directory
tmp &amp;lt;- dir_create(file_temp())
tmp
#&amp;gt; /var/folders/dt/r5s12t392tb5sk181j3gs4zw0000gn/T/RtmpmTqzrq/filed45419bda5e2
# create new files in that directory
file_create(path(tmp, &amp;quot;my-file.txt&amp;quot;))
dir_ls(tmp)
#&amp;gt; /var/folders/dt/r5s12t392tb5sk181j3gs4zw0000gn/T/RtmpmTqzrq/filed45419bda5e2/my-file.txt
# remove files from the directory
file_delete(path(tmp, &amp;quot;my-file.txt&amp;quot;))
dir_ls(tmp)
#&amp;gt; character(0)
# remove the directory
dir_delete(tmp)&lt;/code>&lt;/pre>
&lt;p>&lt;strong>fs&lt;/strong> is designed to work well with the pipe, though because it is a minimal-dependency infrastructure package it doesn’t provide the pipe itself. You will need to attach &lt;a href="http://magrittr.tidyverse.org">magrittr&lt;/a> or similar.&lt;/p>
&lt;pre class="r">&lt;code>library(magrittr)
paths &amp;lt;- file_temp() %&amp;gt;%
dir_create() %&amp;gt;%
path(letters[1:5]) %&amp;gt;%
file_create()
paths
#&amp;gt; /var/folders/dt/r5s12t392tb5sk181j3gs4zw0000gn/T/RtmpmTqzrq/filed45416d276a/a
#&amp;gt; /var/folders/dt/r5s12t392tb5sk181j3gs4zw0000gn/T/RtmpmTqzrq/filed45416d276a/b
#&amp;gt; /var/folders/dt/r5s12t392tb5sk181j3gs4zw0000gn/T/RtmpmTqzrq/filed45416d276a/c
#&amp;gt; /var/folders/dt/r5s12t392tb5sk181j3gs4zw0000gn/T/RtmpmTqzrq/filed45416d276a/d
#&amp;gt; /var/folders/dt/r5s12t392tb5sk181j3gs4zw0000gn/T/RtmpmTqzrq/filed45416d276a/e
paths %&amp;gt;% file_delete()&lt;/code>&lt;/pre>
&lt;p>&lt;strong>fs&lt;/strong> functions also work well in conjunction with other &lt;a href="https://www.tidyverse.org/">tidyverse&lt;/a> packages, like &lt;a href="http://dplyr.tidyverse.org">dplyr&lt;/a> and &lt;a href="http://purrr.tidyverse.org">purrr&lt;/a>.&lt;/p>
&lt;p>Some examples…&lt;/p>
&lt;pre class="r">&lt;code>suppressMessages(
library(tidyverse))&lt;/code>&lt;/pre>
&lt;p>Filter files by type, permission, size and 15 other attributes.&lt;/p>
&lt;pre class="r">&lt;code>dir_info(recursive = TRUE) %&amp;gt;%
filter(type == &amp;quot;file&amp;quot;, permissions == &amp;quot;u+r&amp;quot;, size &amp;gt; &amp;quot;10KB&amp;quot;) %&amp;gt;%
arrange(desc(size)) %&amp;gt;%
select(path, permissions, size, modification_time)
#&amp;gt; # A tibble: 5 x 4
#&amp;gt; path permissions size modification_time
#&amp;gt; &amp;lt;fs::path&amp;gt; &amp;lt;fs::perms&amp;gt; &amp;lt;fs::bytes&amp;gt; &amp;lt;dttm&amp;gt;
#&amp;gt; 1 libs/fs.so rwxr-xr-x 328.6K 2018-01-19 08:32:18
#&amp;gt; 2 R/fs.rdb rw-r--r-- 214.7K 2018-01-19 08:32:18
#&amp;gt; 3 help/fs.rdb rw-r--r-- 45.1K 2018-01-19 08:32:19
#&amp;gt; 4 COPYRIGHTS rw-r--r-- 24.1K 2018-01-19 08:32:18
#&amp;gt; 5 tests/testthat/test-path.R rw-r--r-- 11.2K 2018-01-19 08:32:18&lt;/code>&lt;/pre>
&lt;p>Tabulate and display folder size.&lt;/p>
&lt;pre class="r">&lt;code>dir_info(recursive = TRUE) %&amp;gt;%
group_by(directory = path_dir(path)) %&amp;gt;%
tally(wt = size, sort = TRUE)
#&amp;gt; # A tibble: 8 x 2
#&amp;gt; directory n
#&amp;gt; &amp;lt;fs::path&amp;gt; &amp;lt;fs::bytes&amp;gt;
#&amp;gt; 1 libs 328.62K
#&amp;gt; 2 R 217.8K
#&amp;gt; 3 tests/testthat 48.18K
#&amp;gt; 4 help 47.67K
#&amp;gt; 5 . 29.96K
#&amp;gt; 6 html 9.25K
#&amp;gt; 7 Meta 4.82K
#&amp;gt; 8 tests 728&lt;/code>&lt;/pre>
&lt;p>Read a collection of files into one data frame.&lt;/p>
&lt;p>&lt;code>dir_ls()&lt;/code> returns a named vector, so it can be used directly with &lt;code>purrr::map_df(.id)&lt;/code>.&lt;/p>
&lt;pre class="r">&lt;code># Create separate files for each species
iris %&amp;gt;%
split(.$Species) %&amp;gt;%
map(select, -Species) %&amp;gt;%
iwalk(~ write_tsv(.x, paste0(.y, &amp;quot;.tsv&amp;quot;)))
# Show the files
iris_files &amp;lt;- dir_ls(glob = &amp;quot;*.tsv&amp;quot;)
iris_files
#&amp;gt; setosa.tsv versicolor.tsv virginica.tsv
# Read the data into a single table, including the filenames
iris_files %&amp;gt;%
map_df(read_tsv, .id = &amp;quot;file&amp;quot;, col_types = cols(), n_max = 2)
#&amp;gt; # A tibble: 6 x 5
#&amp;gt; file Sepal.Length Sepal.Width Petal.Length Petal.Width
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 setosa.tsv 5.10 3.50 1.40 0.200
#&amp;gt; 2 setosa.tsv 4.90 3.00 1.40 0.200
#&amp;gt; 3 versicolor.tsv 7.00 3.20 4.70 1.40
#&amp;gt; 4 versicolor.tsv 6.40 3.20 4.50 1.50
#&amp;gt; 5 virginica.tsv 6.30 3.30 6.00 2.50
#&amp;gt; 6 virginica.tsv 5.80 2.70 5.10 1.90
file_delete(iris_files)&lt;/code>&lt;/pre>
&lt;/section>
&lt;section id="feedback-wanted" class="level3">
&lt;h3>Feedback wanted!&lt;/h3>
&lt;p>We hope &lt;strong>fs&lt;/strong> is a useful tool for both analysis scripts and packages. Please open &lt;a href="https://github.com/r-lib/fs">GitHub issues&lt;/a> for any feature requests or bugs.&lt;/p>
&lt;p>In particular, we have found non-ASCII filenames in non-English locales on Windows to be especially tricky to reproduce and handle correctly. There is already &lt;a href="https://github.com/r-lib/fs/commit/b0b7a88de708300fd48273b0824e9bb265a0ee7b">one fix&lt;/a> for this issue since &lt;strong>fs&lt;/strong> was submitted to CRAN. Additional Feedback from users is greatly appreciated!&lt;/p>
&lt;p>Learn more about &lt;strong>fs&lt;/strong> at - &lt;a href="http://fs.r-lib.org" class="uri">http://fs.r-lib.org&lt;/a>&lt;/p>
&lt;/section></description></item><item><title>testthat 2.0.0</title><link>https://www.tidyverse.org/blog/2017/12/testthat-2-0-0/</link><pubDate>Tue, 19 Dec 2017 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2017/12/testthat-2-0-0/</guid><description>
&lt;p>We are very excited to announce that &lt;a href="http://testthat.r-lib.org">testthat 2.0.0&lt;/a> is now available on CRAN! Testthat makes it easy to turn your existing informal tests into formal automated tests that you can rerun quickly and easily. testthat is the most popular unit testing package for R, and is used by over 2,600 CRAN packages and by many more &lt;a href="https://github.com/search?q=filename%3Atestthat.R">Github packages&lt;/a>. Learn more about unit testing at &lt;a href="http://r-pkgs.had.co.nz/tests.html" class="uri">http://r-pkgs.had.co.nz/tests.html&lt;/a>.&lt;/p>
&lt;p>Install the latest version of testthat with:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;testthat&amp;quot;)&lt;/code>&lt;/pre>
&lt;p>testthat 2.0.0 is a massive release containing a bunch of new features. For the full details, see the &lt;a href="https://github.com/r-lib/testthat/releases/tag/v2.0.0">release notes&lt;/a>, or read the hightlights below:&lt;/p>
&lt;ul>
&lt;li>&lt;p>A new default reporter revamps the output to make better use of colour.&lt;/p>&lt;/li>
&lt;li>&lt;p>New setup and teardown tools make it easier to run code before and after each test file, and before and after all tests.&lt;/p>&lt;/li>
&lt;li>&lt;p>New and improved expectations make it easier to test printed output and precisely test conditions (i.e. errors, warnings, and messages).&lt;/p>&lt;/li>
&lt;li>&lt;p>Quasiquotation support makes it easier to wrap tests in for loops and functions and still get useful failure messages.&lt;/p>&lt;/li>
&lt;li>&lt;p>Along with these new features we unfortunately also had to make a few breaking changes. We describe the symptoms and how to work around the changes below.&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>In addition, as part of a general process to make tidyverse and r-lib packages available more widely, we are now checking testthat with R 3.1, 3.2, 3.3, 3.4, and 3.5.&lt;/p>
&lt;div id="new-default-reporter" class="section level2">
&lt;h2>New default reporter&lt;/h2>
&lt;p>A new default reporter, &lt;code>ReporterProgress&lt;/code>, revamps the output to make use of colour and reveal details of failures as they occur:&lt;/p>
&lt;p>&lt;img src="https://www.tidyverse.org/images/testthat-2-0/progress.gif" />&lt;/p>
&lt;p>If you prefer the previous version, you can run it once with &lt;code>devtools::test(reporter = &amp;quot;summary&amp;quot;)&lt;/code> or turn back time by setting &lt;code>option(testthat.default_reporter = &amp;quot;summary&amp;quot;)&lt;/code>.&lt;/p>
&lt;/div>
&lt;div id="setup-and-teardown" class="section level2">
&lt;h2>Setup and teardown&lt;/h2>
&lt;p>There are two new ways to setup and teardown code:&lt;/p>
&lt;ul>
&lt;li>&lt;p>New &lt;code>setup()&lt;/code> and &lt;code>teardown()&lt;/code> functions specify code to be run at the beginning and end of each test file. Write them next to each other so you can easily confirm that each &lt;code>setup()&lt;/code> is paired with a &lt;code>teardown()&lt;/code> that cleans up any changes to the global state.&lt;/p>
&lt;pre class="r">&lt;code>tmp &amp;lt;- tempfile()
setup({
writeLines(&amp;quot;TEST DATA&amp;quot;, tmp)
})
teardown({
unlink(tmp)
})&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;p>&lt;code>tests/testthat/setup-xyz.R&lt;/code> files are run before the first test file is executed. They are similar to the existing &lt;code>helpers-xyz.R&lt;/code> files, but are not run by &lt;code>devtools::load_all()&lt;/code>. Similarly, &lt;code>test/teststhat/teardown-xyz.R&lt;/code> files are run after all tests are complete; use these to clean up any global changes made by the setup files.&lt;/p>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="new-and-improved-expectations" class="section level2">
&lt;h2>New and improved expectations&lt;/h2>
&lt;p>We have identified a new family of expectations that compares the results of an expression to a known good value stored in a file. They are designed to be used in conjunction with git so that you can see what precisely has changed, and revert it if needed:&lt;/p>
&lt;ul>
&lt;li>&lt;p>&lt;code>expect_known_output()&lt;/code> saves the output of an expression and will fail the first time the output changes. The file is updated on each run, so needs to be used in conjunction with git. It replaces &lt;code>expect_output_file()&lt;/code> which is now soft-deprecated.&lt;/p>
&lt;pre class="r">&lt;code># File to save results: would usually be filename, which will be stored
# in tests/testthat.
tmp &amp;lt;- tempfile()
# The first run always succeeds, but warns
expect_known_output(mtcars[1:10, ], tmp, print = TRUE)
#&amp;gt; Warning: Creating reference output
# Subsequent runs will suceed only if the file is unchanged
# This will succeed:
expect_known_output(mtcars[1:10, ], tmp, print = TRUE)
# This will fail
expect_known_output(mtcars[1:9, ], tmp, print = TRUE)
#&amp;gt; Error: `mtcars[1:9, ]` has changed from known value recorded in &amp;#39;/tmp/Rtmphlp98S/file481a3697072d&amp;#39;.
#&amp;gt; Lengths differ: 10 is not 11&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;p>&lt;code>expect_known_value()&lt;/code> replaces &lt;code>expect_equal_to_reference()&lt;/code>, which has been soft-deprecated. It gains an update argument defaulting to &lt;code>TRUE&lt;/code>. This changes behaviour from the previous version, and soft-deprecated &lt;code>expect_equal_to_reference()&lt;/code> gets &lt;code>update = FALSE&lt;/code>.&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>We’ve also improved tools for testing for failures:&lt;/p>
&lt;ul>
&lt;li>&lt;p>&lt;code>expect_condition()&lt;/code> works like &lt;code>expect_error()&lt;/code> but captures any condition, not just error conditions.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>expect_error()&lt;/code> gains a &lt;code>class&lt;/code> argument that allows you to make an assertion about the class of the error object.&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>We’ve also added &lt;code>expect_setequal()&lt;/code> to compares two sets (stored in vectors), ignoring duplicates and differences in order. Finally, we added a few new helpers for skipping tests:&lt;/p>
&lt;ul>
&lt;li>&lt;p>&lt;code>skip_if()&lt;/code> makes it easy to skip a test when a condition is true. For example, use &lt;code>skip_if(getRversion() &amp;lt;= 3.1)&lt;/code> to skip a test in older R versions.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>skip_if_translated()&lt;/code> skips tests if you’re running in an locale where translations are likely to occur. Use this to avoid spurious failures when checking the text of error messages in non-English locales.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>skip_if_not_installed()&lt;/code> gains new &lt;code>minimum_version&lt;/code> argument. This allows you to only test if a minimum version requrement is met, e.g.&lt;/p>
&lt;pre class="r">&lt;code>skip_if_not_installed(&amp;quot;ggplot2&amp;quot;, &amp;quot;2.0.0&amp;quot;)&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="quasiquotation-support" class="section level2">
&lt;h2>Quasiquotation support&lt;/h2>
&lt;p>All expectations can now make use of &lt;a href="https://adv-r.hadley.nz/tidy-eval">unquoting&lt;/a>, with &lt;code>!!&lt;/code>. This makes it much easier to generate informative failure messages when running tests in a for loop or function. For example take this test:&lt;/p>
&lt;pre class="r">&lt;code>f &amp;lt;- function(i) if (i &amp;gt; 3) i * 9 else i * 10
for (i in 1:5) {
expect_equal(f(i), i * 10)
}
#&amp;gt; Error: f(i) not equal to i * 10.
#&amp;gt; 1/1 mismatches
#&amp;gt; [1] 36 - 40 == -4&lt;/code>&lt;/pre>
&lt;p>The error message is not great because you don’t know which iteration caused the problem! You can resolve that problem by using the unquoting operator &lt;code>!!&lt;/code> (pronounced bang-bang):&lt;/p>
&lt;pre class="r">&lt;code>for (i in 1:5) {
expect_equal(f(!!i), !!(i * 10))
}
#&amp;gt; Error: f(4L) not equal to 40.
#&amp;gt; 1/1 mismatches
#&amp;gt; [1] 36 - 40 == -4&lt;/code>&lt;/pre>
&lt;p>(Note that this is not tidy evaluation &lt;em>per se&lt;/em>, but is closely related. It works a little differently compared to tidyverse packages because quoting is only used to generate the failure messages: see &lt;code>?quasi_label()&lt;/code> for more details. At this time you can not unquote quosures.)&lt;/p>
&lt;/div>
&lt;div id="breaking-changes" class="section level2">
&lt;h2>Breaking changes&lt;/h2>
&lt;p>Unfortunately it was necessary to make a few API breaking changes in testthat in order to make testthat more flexible for the future, and deal with some changes made to R. These changes affected around 1 in 40 packages using testthat on CRAN, and all maintainers were warned a month in advance.&lt;/p>
&lt;p>If you have a non-CRAN package, read the following list of symptoms and remedies in order to get your package working with testthat 2.0.0:&lt;/p>
&lt;ul>
&lt;li>&lt;p>&lt;strong>“Can’t mock functions in base packages”&lt;/strong>: You can no longer use &lt;code>with_mock()&lt;/code> to mock functions in base packages, because this no longer works in R-devel due to changes with the byte code compiler. I recommend using &lt;a href="https://github.com/n-s-f/mockery">mockery&lt;/a> or &lt;a href="https://github.com/krlmlr/mockr">mockr&lt;/a> instead.&lt;/p>&lt;/li>
&lt;li>&lt;p>The order of arguments to &lt;code>expect_equivalent()&lt;/code> and &lt;code>expect_error()&lt;/code> was changed slightly as both now pass &lt;code>...&lt;/code> on to another function. This reveals itself with a number of different errors, like:&lt;/p>
&lt;ul>
&lt;li>‘what’ must be a character vector&lt;/li>
&lt;li>‘check.attributes’ must be logical&lt;/li>
&lt;li>‘tolerance’ should be numeric&lt;/li>
&lt;li>argument is not interpretable as logical&lt;/li>
&lt;li>threw an error with unexpected class&lt;/li>
&lt;li>argument “quo” is missing, with no default&lt;/li>
&lt;li>argument is missing, with no default&lt;/li>
&lt;/ul>
&lt;p>If you see one of these errors, check the number, order, and names of arguments to the expectation.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;strong>“Failure: (unknown)”&lt;/strong>. The last release mistakenly failed to test bare expectations not wrapped inside &lt;code>test_that()&lt;/code>. If you see “(unknown)” in a failure message, this is a failing expectation that you previously weren’t seeing. As well as fixing the failure, please also wrap inside a &lt;code>test_that()&lt;/code> with an informative name.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;strong>“Error: the argument has already been evaluated”&lt;/strong>: the way in which expectations now create labels has changed, which caused a couple of failures with unusual usage when combined with &lt;code>Reduce&lt;/code>, &lt;code>lapply()&lt;/code>, and &lt;code>Map()&lt;/code>. Avoid these functions in favour of for loops. I also recommend reading the section on quasiquotation support (above) in order to create more informative failure messages.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>is_null()&lt;/code> and &lt;code>matches()&lt;/code> have been deprecated because they conflict with other functions in the tidyverse. Use the modern &lt;code>expect_null()&lt;/code> and &lt;code>expect_matches()&lt;/code> instead.&lt;/p>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="acknowledgements" class="section level2">
&lt;h2>Acknowledgements&lt;/h2>
&lt;p>A big thanks goes to &lt;a href="https://github.com/krlmlr">Kirill Müller&lt;/a> for his help running R CMD check on all the packages that use testthat - in total he ran R CMD check over 10,000 times! Likewise, a big thanks to the CRAN team who also have to run these checks to ensure that other packages are not broken inadvertently.&lt;/p>
&lt;p>A whopping 103 people helped to make this release happen. Thanks to everyone who opened issues and contributed code: &lt;a href="https://github.com/3psil0n">@3psil0n&lt;/a>, &lt;a href="https://github.com/agricolamz">@agricolamz&lt;/a>, &lt;a href="https://github.com/akbertram">@akbertram&lt;/a>, &lt;a href="https://github.com/AmeliaMN">@AmeliaMN&lt;/a>, &lt;a href="https://github.com/andrie">@andrie&lt;/a>, &lt;a href="https://github.com/aronatkins">@aronatkins&lt;/a>, &lt;a href="https://github.com/BarkleyBG">@BarkleyBG&lt;/a>, &lt;a href="https://github.com/bbolker">@bbolker&lt;/a>, &lt;a href="https://github.com/bc">@bc&lt;/a>, &lt;a href="https://github.com/bdwyer2">@bdwyer2&lt;/a>, &lt;a href="https://github.com/billchenxi">@billchenxi&lt;/a>, &lt;a href="https://github.com/billdenney">@billdenney&lt;/a>, &lt;a href="https://github.com/BillDunlap">@BillDunlap&lt;/a>, &lt;a href="https://github.com/boennecd">@boennecd&lt;/a>, &lt;a href="https://github.com/bradleyjeck">@bradleyjeck&lt;/a>, &lt;a href="https://github.com/briencj">@briencj&lt;/a>, &lt;a href="https://github.com/brodieG">@brodieG&lt;/a>, &lt;a href="https://github.com/carlganz">@carlganz&lt;/a>, &lt;a href="https://github.com/cbare">@cbare&lt;/a>, &lt;a href="https://github.com/cderv">@cderv&lt;/a>, &lt;a href="https://github.com/cdriveraus">@cdriveraus&lt;/a>, &lt;a href="https://github.com/cfhammill">@cfhammill&lt;/a>, &lt;a href="https://github.com/chambm">@chambm&lt;/a>, &lt;a href="https://github.com/Christoph999">@Christoph999&lt;/a>, &lt;a href="https://github.com/cogmind">@cogmind&lt;/a>, &lt;a href="https://github.com/colearendt">@colearendt&lt;/a>, &lt;a href="https://github.com/dchudz">@dchudz&lt;/a>, &lt;a href="https://github.com/dlindelof">@dlindelof&lt;/a>, &lt;a href="https://github.com/dmenne">@dmenne&lt;/a>, &lt;a href="https://github.com/dougpagani">@dougpagani&lt;/a>, &lt;a href="https://github.com/egnha">@egnha&lt;/a>, &lt;a href="https://github.com/epurdom">@epurdom&lt;/a>, &lt;a href="https://github.com/fangly">@fangly&lt;/a>, &lt;a href="https://github.com/floybix">@floybix&lt;/a>, &lt;a href="https://github.com/FrancoisGuillem">@FrancoisGuillem&lt;/a>, &lt;a href="https://github.com/frankandrobot">@frankandrobot&lt;/a>, &lt;a href="https://github.com/fritzo">@fritzo&lt;/a>, &lt;a href="https://github.com/gaborcsardi">@gaborcsardi&lt;/a>, &lt;a href="https://github.com/george-weingart">@george-weingart&lt;/a>, &lt;a href="https://github.com/hadley">@hadley&lt;/a>, &lt;a href="https://github.com/hansharhoff">@hansharhoff&lt;/a>, &lt;a href="https://github.com/hesamaseh">@hesamaseh&lt;/a>, &lt;a href="https://github.com/HyukjinKwon">@HyukjinKwon&lt;/a>, &lt;a href="https://github.com/jackolney">@jackolney&lt;/a>, &lt;a href="https://github.com/jackwasey">@jackwasey&lt;/a>, &lt;a href="https://github.com/jcheng5">@jcheng5&lt;/a>, &lt;a href="https://github.com/jdblischak">@jdblischak&lt;/a>, &lt;a href="https://github.com/jdshkolnik">@jdshkolnik&lt;/a>, &lt;a href="https://github.com/jefferis">@jefferis&lt;/a>, &lt;a href="https://github.com/jennybc">@jennybc&lt;/a>, &lt;a href="https://github.com/jeroen">@jeroen&lt;/a>, &lt;a href="https://github.com/jimhester">@jimhester&lt;/a>, &lt;a href="https://github.com/joethorley">@joethorley&lt;/a>, &lt;a href="https://github.com/jspitzen">@jspitzen&lt;/a>, &lt;a href="https://github.com/kalibera">@kalibera&lt;/a>, &lt;a href="https://github.com/katrinleinweber">@katrinleinweber&lt;/a>, &lt;a href="https://github.com/kenahoo">@kenahoo&lt;/a>, &lt;a href="https://github.com/kenahoo-windlogics">@kenahoo-windlogics&lt;/a>, &lt;a href="https://github.com/kendonB">@kendonB&lt;/a>, &lt;a href="https://github.com/kevinushey">@kevinushey&lt;/a>, &lt;a href="https://github.com/kevinykuo">@kevinykuo&lt;/a>, &lt;a href="https://github.com/kforner">@kforner&lt;/a>, &lt;a href="https://github.com/klmr">@klmr&lt;/a>, &lt;a href="https://github.com/krlmlr">@krlmlr&lt;/a>, &lt;a href="https://github.com/lbartnik">@lbartnik&lt;/a>, &lt;a href="https://github.com/lc0">@lc0&lt;/a>, &lt;a href="https://github.com/lionel-">@lionel-&lt;/a>, &lt;a href="https://github.com/lorenzwalthert">@lorenzwalthert&lt;/a>, &lt;a href="https://github.com/mahaiyer">@mahaiyer&lt;/a>, &lt;a href="https://github.com/MarkEdmondson1234">@MarkEdmondson1234&lt;/a>, &lt;a href="https://github.com/maxheld83">@maxheld83&lt;/a>, &lt;a href="https://github.com/micstr">@micstr&lt;/a>, &lt;a href="https://github.com/mllg">@mllg&lt;/a>, &lt;a href="https://github.com/mlysy">@mlysy&lt;/a>, &lt;a href="https://github.com/mschubert">@mschubert&lt;/a>, &lt;a href="https://github.com/nabilabd">@nabilabd&lt;/a>, &lt;a href="https://github.com/nealrichardson">@nealrichardson&lt;/a>, &lt;a href="https://github.com/p-smirnov">@p-smirnov&lt;/a>, &lt;a href="https://github.com/paciorek">@paciorek&lt;/a>, &lt;a href="https://github.com/pat-s">@pat-s&lt;/a>, &lt;a href="https://github.com/patperry">@patperry&lt;/a>, &lt;a href="https://github.com/r2evans">@r2evans&lt;/a>, &lt;a href="https://github.com/rdiaz02">@rdiaz02&lt;/a>, &lt;a href="https://github.com/rgknight">@rgknight&lt;/a>, &lt;a href="https://github.com/richierocks">@richierocks&lt;/a>, &lt;a href="https://github.com/robwe">@robwe&lt;/a>, &lt;a href="https://github.com/ruaridhw">@ruaridhw&lt;/a>, &lt;a href="https://github.com/s6mike">@s6mike&lt;/a>, &lt;a href="https://github.com/schoettl">@schoettl&lt;/a>, &lt;a href="https://github.com/scottkosty">@scottkosty&lt;/a>, &lt;a href="https://github.com/Stan125">@Stan125&lt;/a>, &lt;a href="https://github.com/stla">@stla&lt;/a>, &lt;a href="https://github.com/swt30">@swt30&lt;/a>, &lt;a href="https://github.com/twolodzko">@twolodzko&lt;/a>, &lt;a href="https://github.com/unDocUMeantIt">@unDocUMeantIt&lt;/a>, &lt;a href="https://github.com/vermouthmjl">@vermouthmjl&lt;/a>, &lt;a href="https://github.com/wch">@wch&lt;/a>, &lt;a href="https://github.com/wlandau-lilly">@wlandau-lilly&lt;/a>, &lt;a href="https://github.com/wligtenberg">@wligtenberg&lt;/a>, &lt;a href="https://github.com/wsloand">@wsloand&lt;/a>, &lt;a href="https://github.com/wush978">@wush978&lt;/a>, &lt;a href="https://github.com/zachcp">@zachcp&lt;/a>, and &lt;a href="https://github.com/zer0hedge">@zer0hedge&lt;/a>&lt;/p>
&lt;/div></description></item><item><title>usethis 1.0.0 (and 1.1.0)</title><link>https://www.tidyverse.org/blog/2017/11/usethis-1.0.0/</link><pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2017/11/usethis-1.0.0/</guid><description>
&lt;p>We’re pleased to announce the release of &lt;a href="https://github.com/r-lib/usethis/releases/tag/v1.0.0">usethis 1.0.0&lt;/a> on CRAN (now &lt;a href="https://github.com/r-lib/usethis/releases/tag/v1.1.0">1.1.0&lt;/a>, following some small improvements discovered after release). usethis is designed to smooth package-development workflows by automating everything that can be automated. Many of the functions were previously part of devtools, but have been extracted out in their own package to give them more room to grow.&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;usethis&amp;quot;)&lt;/code>&lt;/pre>
&lt;div id="r-packages" class="section level2">
&lt;h2>R packages&lt;/h2>
&lt;p>Get started by loading usethis and running &lt;code>create_package()&lt;/code>. For this blog post, I’m going to create a package in a temporary directory, but normally you’d create it somewhere safe!&lt;/p>
&lt;pre class="r">&lt;code>library(usethis)
# Create a new package -------------------------------------------------
tmp &amp;lt;- file.path(tempdir(), &amp;quot;mypkg&amp;quot;)
create_package(tmp)
#&amp;gt; Changing active project to mypkg
#&amp;gt; ✔ Creating &amp;#39;R/&amp;#39;
#&amp;gt; ✔ Creating &amp;#39;man/&amp;#39;
#&amp;gt; ✔ Writing &amp;#39;DESCRIPTION&amp;#39;
#&amp;gt; ✔ Writing &amp;#39;NAMESPACE&amp;#39;&lt;/code>&lt;/pre>
&lt;p>If you’re using RStudio, this will automatically open a new RStudio session. Generally, usethis is tightly integrated with RStudio but should work with other editors too. The fallbacks for non-RStudio editors aren’t as well tested, so please &lt;a href="https://github.com/r-lib/usethis/issues">let us know&lt;/a> if you encounter problems.&lt;/p>
&lt;p>(If you find yourself using usethis a lot and don’t want to load it everytime, run &lt;code>use_usethis()&lt;/code> and follow the instructions.)&lt;/p>
&lt;p>Notice that the output includes “Changing active project to mypkg”. usethis has the concept of an “active project” which is where all usethis functions will have effect. It is usually the working directory, but is changed automatically by the &lt;code>create_&lt;/code> functions, and can be changed manually with &lt;code>proj_set()&lt;/code>.&lt;/p>
&lt;p>If you don’t want a package, use &lt;code>create_project()&lt;/code> to create a minimal &lt;a href="https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects">RStudio project&lt;/a>. usethis is gradually evolving towards supporting more general R “projects” but this is still a work in progress. Please &lt;a href="https://github.com/r-lib/usethis/issues">let us know&lt;/a> if you have ideas or discover a problem!&lt;/p>
&lt;div id="code-and-tests" class="section level3">
&lt;h3>Code and tests&lt;/h3>
&lt;p>&lt;code>use_r()&lt;/code> will create/edit a script file in &lt;code>R/&lt;/code>:&lt;/p>
&lt;pre class="r">&lt;code>use_r(&amp;quot;foo&amp;quot;)
#&amp;gt; ● Edit &amp;#39;R/foo.R&amp;#39;&lt;/code>&lt;/pre>
&lt;p>&lt;code>use_test(&amp;quot;foo&amp;quot;)&lt;/code> will set up all the infrastructure you need for &lt;a href="http://r-pkgs.had.co.nz/tests.html">unit testing&lt;/a>, and create/edit a test file in &lt;code>tests/teststhat/&lt;/code>:&lt;/p>
&lt;pre class="r">&lt;code>use_test(&amp;quot;foo&amp;quot;)
#&amp;gt; ✔ Adding &amp;#39;testthat&amp;#39; to Suggests field in DESCRIPTION
#&amp;gt; ✔ Creating &amp;#39;tests/testthat/&amp;#39;
#&amp;gt; ✔ Writing &amp;#39;tests/testthat.R&amp;#39;
#&amp;gt; ✔ Writing &amp;#39;tests/testthat/test-foo.R&amp;#39;
#&amp;gt; ● Edit &amp;#39;tests/testthat/test-foo.R&amp;#39;&lt;/code>&lt;/pre>
&lt;p>We recommend that you have paired test and source files. If you use RStudio, you can use &lt;code>use_test()&lt;/code> to create/edit the test file corresponding to the open source file, and &lt;code>use_r()&lt;/code> to create/edit to the source file corresponding to the open test file.&lt;/p>
&lt;/div>
&lt;div id="dependencies" class="section level3">
&lt;h3>Dependencies&lt;/h3>
&lt;p>To declare that your project has some dependencies, use &lt;code>use_package()&lt;/code>:&lt;/p>
&lt;pre class="r">&lt;code>use_package(&amp;quot;ggplot2&amp;quot;)
#&amp;gt; ✔ Adding &amp;#39;ggplot2&amp;#39; to Imports field in DESCRIPTION
#&amp;gt; ● Refer to functions with `ggplot2::fun()`
use_package(&amp;quot;dplyr&amp;quot;)
#&amp;gt; ✔ Adding &amp;#39;dplyr&amp;#39; to Imports field in DESCRIPTION
#&amp;gt; ● Refer to functions with `dplyr::fun()`&lt;/code>&lt;/pre>
&lt;p>Or if you want a dependency on a development version of a package, use &lt;code>use_dev_package()&lt;/code>.&lt;/p>
&lt;/div>
&lt;div id="documentation" class="section level3">
&lt;h3>Documentation&lt;/h3>
&lt;p>Take advantage of these helpers to document your package:&lt;/p>
&lt;ul>
&lt;li>&lt;p>&lt;code>use_roxygen_md()&lt;/code> sets up &lt;a href="http://r-pkgs.had.co.nz/man.html">roxygen2&lt;/a> and enables markdown mode so you can use markdown in your roxygen2 comment blocks.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>use_package_doc()&lt;/code> creates a skeleton documentation file for the complete package, taking the advantage of the latest roxygen2 features to minimise duplication between the &lt;code>DESCRIPTION&lt;/code> and the documentation.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>use_readme_rmd()&lt;/code> creates a &lt;a href="http://r-pkgs.had.co.nz/release.html#important-files">&lt;code>README.Rmd&lt;/code>&lt;/a>: use this to describe what your package does and why people should care about it.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>use_news_md()&lt;/code> creates a basic &lt;code>NEWS.md&lt;/code> for you to record changes.&lt;/p>&lt;/li>
&lt;li>&lt;p>&lt;code>use_vignette(&amp;quot;vignette-name&amp;quot;)&lt;/code> sets you up for success by configuring &lt;code>DESCRIPTION&lt;/code> and creating a &lt;code>.Rmd&lt;/code> template in &lt;code>vignettes/&lt;/code>&lt;/p>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="sharing" class="section level3">
&lt;h3>Sharing&lt;/h3>
&lt;p>If you want to share your code with others, it’s good practice to make the licensing clear. usethis provides helpers for the four most common open source licenses:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://choosealicense.com/licenses/mit">&lt;code>use_mit_license()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://choosealicense.com/licenses/apache-2.0/">&lt;code>use_apl2_license()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://choosealicense.com/licenses/gpl-3.0/">&lt;code>use_gpl3_license()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/">&lt;code>use_cc0_license()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>These set the &lt;code>License&lt;/code> field in the &lt;code>DESCRIPTION&lt;/code> and include the license text in &lt;code>LICENSE.md&lt;/code>, which is then added to &lt;code>.Rbuildignore&lt;/code>. This allows you to follow licensing best practices while adhering to CRAN’s requirements.&lt;/p>
&lt;p>For this package, I’ll use an MIT license which is simple and permissive:&lt;/p>
&lt;pre class="r">&lt;code>use_mit_license(&amp;quot;Hadley Wickham&amp;quot;)
#&amp;gt; ✔ Setting License field in DESCRIPTION to &amp;#39;MIT + file LICENSE&amp;#39;
#&amp;gt; ✔ Writing &amp;#39;LICENSE.md&amp;#39;
#&amp;gt; ✔ Adding &amp;#39;^LICENSE\\.md$&amp;#39; to &amp;#39;.Rbuildignore&amp;#39;
#&amp;gt; ✔ Writing &amp;#39;LICENSE&amp;#39;&lt;/code>&lt;/pre>
&lt;p>It’s also easy to activate git:&lt;/p>
&lt;pre class="r">&lt;code>use_git()
#&amp;gt; ✔ Initialising Git repo
#&amp;gt; ✔ Adding &amp;#39;.Rhistory&amp;#39;, &amp;#39;.RData&amp;#39;, &amp;#39;.Rproj.user&amp;#39; to &amp;#39;./.gitignore&amp;#39;
#&amp;gt; ✔ Adding files and committing&lt;/code>&lt;/pre>
&lt;p>And publish to GitHub (I’m not going to run this code here!)&lt;/p>
&lt;pre class="r">&lt;code>use_github()&lt;/code>&lt;/pre>
&lt;p>(For this to work, you’ll need to set a &lt;code>GITHUB_PAT&lt;/code> environment variable in your &lt;code>~/.Renviron&lt;/code>. Follow &lt;a href="http://happygitwithr.com/github-pat.html#step-by-step">Jenny Bryan’s instructions&lt;/a>, and use &lt;code>edit_r_environ()&lt;/code> to easily access the right file for editing)&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="browsing" class="section level2">
&lt;h2>Browsing&lt;/h2>
&lt;p>You can also use usethis to easily create and/or edit important configuration files:&lt;/p>
&lt;ul>
&lt;li>&lt;p>R: &lt;code>edit_r_profile()&lt;/code> (R code run on start up), &lt;code>edit_r_environ()&lt;/code> (environment variables), and &lt;code>edit_r_makevars()&lt;/code> (default configuration for compiled code).&lt;/p>&lt;/li>
&lt;li>&lt;p>Git: &lt;code>edit_git_config()&lt;/code> and &lt;code>edit_git_ignore()&lt;/code>.&lt;/p>&lt;/li>
&lt;li>&lt;p>RStudio: &lt;code>edit_rstudio_snippets(type)&lt;/code> (edit language specific &lt;a href="https://support.rstudio.com/hc/en-us/articles/204463668-Code-Snippets">snippets&lt;/a>).&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>Most functions have a &lt;code>scope&lt;/code> argument which can be either “user” or “project”. This lets you control the scope of your changes: either to the current project, or for all projects for the current user (the default).&lt;/p>
&lt;p>Another set of functions lets you quickly jump to important websites:&lt;/p>
&lt;ul>
&lt;li>CRAN: &lt;code>browse_cran()&lt;/code>&lt;/li>
&lt;li>GitHub: &lt;code>browse_github()&lt;/code>, &lt;code>browse_github_issues()&lt;/code>, &lt;code>browse_github_pulls()&lt;/code>&lt;/li>
&lt;li>Travis &lt;code>browse_travis()&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>These functions take a package name as the first argument; if not supplied they’ll use the current project.&lt;/p>
&lt;/div></description></item><item><title>withr 2.1.0</title><link>https://www.tidyverse.org/blog/2017/11/withr-2.1.0/</link><pubDate>Thu, 16 Nov 2017 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2017/11/withr-2.1.0/</guid><description>
&lt;p>&lt;a href="http://withr.r-lib.org/news/index.html">withr 2.1.0&lt;/a> is now available on CRAN! &lt;a href="http://withr.r-lib.org">withr&lt;/a> makes working with global state in R safer and less error prone. It has only base package dependencies so is easily included in packages.&lt;/p>
&lt;p>Install the latest version with:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;withr&amp;quot;)&lt;/code>&lt;/pre>
&lt;div id="whither-withr" class="section level1">
&lt;h1>Whither withr?&lt;/h1>
&lt;p>Many functions in R modify global state in some fashion. Some common examples are &lt;code>par()&lt;/code> for graphics parameters, &lt;code>dir()&lt;/code> to change the current directory and &lt;code>options()&lt;/code> to set a global option. Using these functions is handy when using R interactively, because you can set them early in your experimentation and they will remain set for the duration of the session. However this makes programming with these settings difficult, because they make your function impure by modifying a global state. Therefore you should always strive to reset the previous state when the function exists.&lt;/p>
&lt;p>One common idiom for dealing with this problem is to save the current state, make your change, then restore the previous state.&lt;/p>
&lt;pre class="r">&lt;code>par(&amp;quot;col&amp;quot; = &amp;quot;black&amp;quot;)
my_plot &amp;lt;- function(new) {
old &amp;lt;- par(col = &amp;quot;red&amp;quot;, pch = 19)
plot(mtcars$hp, mtcars$wt)
par(old)
}
my_plot()&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://www.tidyverse.org/articles/2017-11-16-withr-2.1.0_files/figure-html/unnamed-chunk-2-1.png" width="672" />&lt;/p>
&lt;pre class="r">&lt;code>par(&amp;quot;col&amp;quot;)
#&amp;gt; [1] &amp;quot;black&amp;quot;&lt;/code>&lt;/pre>
&lt;p>However this approach can fail if there’s an error before you are able to reset the options.&lt;/p>
&lt;pre class="r">&lt;code>par(&amp;quot;col&amp;quot; = &amp;quot;black&amp;quot;)
my_plot &amp;lt;- function(new) {
old &amp;lt;- par(col = &amp;quot;red&amp;quot;, pch = 19)
plot(mtcars$hpp, mtcars$wt)
par(old)
}
my_plot()
#&amp;gt; Error in xy.coords(x, y, xlabel, ylabel, log): &amp;#39;x&amp;#39; and &amp;#39;y&amp;#39; lengths differ
par(&amp;quot;col&amp;quot;)
#&amp;gt; [1] &amp;quot;red&amp;quot;&lt;/code>&lt;/pre>
&lt;p>Using the base function &lt;code>on.exit()&lt;/code> is a robust solution to this problem. &lt;code>on.exit()&lt;/code> will run the code when the function is exited, regardless whether it exits normally or with an error.&lt;/p>
&lt;pre class="r">&lt;code>par(&amp;quot;col&amp;quot; = &amp;quot;black&amp;quot;)
my_plot &amp;lt;- function(new) {
old &amp;lt;- par(col = &amp;quot;red&amp;quot;, pch = 19)
on.exit(par(old))
plot(mtcars$hpp, mtcars$wt)
}
my_plot()
#&amp;gt; Error in xy.coords(x, y, xlabel, ylabel, log): &amp;#39;x&amp;#39; and &amp;#39;y&amp;#39; lengths differ
par(&amp;quot;col&amp;quot;)
#&amp;gt; [1] &amp;quot;black&amp;quot;
options(test = 1)
{
print(getOption(&amp;quot;test&amp;quot;))
on.exit(options(test = 2))
}
#&amp;gt; [1] 1
getOption(&amp;quot;test&amp;quot;)
#&amp;gt; [1] 2&lt;/code>&lt;/pre>
&lt;p>However this solution is somewhat cumbersome to work with. You need to remember to use an &lt;code>on.exit()&lt;/code> call after each stateful call. In addition by default each &lt;code>on.exit()&lt;/code> action will overwrite any previous &lt;code>on.exit()&lt;/code> action in the same function unless you use the &lt;code>add = TRUE&lt;/code> option. &lt;code>add = TRUE&lt;/code> also adds additional code to the &lt;em>end&lt;/em> of existing code, which means the code is not run in the &lt;a href="https://en.wikipedia.org/wiki/FIFO_and_LIFO_accounting">Last-In, First-Out&lt;/a> order you would generally prefer. It is also not possible to have this cleanup code performed before the function has finished.&lt;/p>
&lt;p>&lt;a href="http://withr.r-lib.org">withr&lt;/a> is a solution to these issues. It defines a &lt;a href="http://withr.r-lib.org/#withr---run-code-with-modified-state">large set of functions&lt;/a> for dealing with global settings in R, such as &lt;code>with_par()&lt;/code>. These functions set one of the global settings for the duration of a block of code, then automatically reset it after the block is completed.&lt;/p>
&lt;pre class="r">&lt;code>par(&amp;quot;col&amp;quot; = &amp;quot;black&amp;quot;)
my_plot &amp;lt;- function(new) {
with_par(list(col = &amp;quot;red&amp;quot;, pch = 19),
plot(mtcars$hp, mtcars$wt)
)
par(&amp;quot;col&amp;quot;)
}
my_plot()&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://www.tidyverse.org/articles/2017-11-16-withr-2.1.0_files/figure-html/unnamed-chunk-5-1.png" width="672" />&lt;/p>
&lt;pre>&lt;code>#&amp;gt; [1] &amp;quot;black&amp;quot;
par(&amp;quot;col&amp;quot;)
#&amp;gt; [1] &amp;quot;black&amp;quot;&lt;/code>&lt;/pre>
&lt;p>In addition to the &lt;code>with_*&lt;/code> functions there are &lt;code>local_*&lt;/code> variants whose effects last until the end of the function they are included in. These work similar to &lt;code>on.exit()&lt;/code>, but you can set the options in one call rather than two.&lt;/p>
&lt;pre class="r">&lt;code>par(&amp;quot;col&amp;quot; = &amp;quot;black&amp;quot;)
my_plot &amp;lt;- function(new) {
local_par(list(col = &amp;quot;red&amp;quot;, pch = 19))
plot(mtcars$hp, mtcars$wt)
}
my_plot()&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://www.tidyverse.org/articles/2017-11-16-withr-2.1.0_files/figure-html/unnamed-chunk-6-1.png" width="672" />&lt;/p>
&lt;pre class="r">&lt;code>par(&amp;quot;col&amp;quot;)
#&amp;gt; [1] &amp;quot;black&amp;quot;&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="new-features" class="section level1">
&lt;h1>New features&lt;/h1>
&lt;p>Here are some highlights of new functions for v2.1.0.&lt;/p>
&lt;div id="graphics-devices" class="section level2">
&lt;h2>Graphics devices&lt;/h2>
&lt;p>There are now a comprehensive set of functions to deal with R’s builtin &lt;a href="http://withr.r-lib.org/reference/devices.html">graphics devices&lt;/a>.&lt;/p>
&lt;p>These functions open a new graphics device, run some code, then automatically close the device.&lt;/p>
&lt;pre class="r">&lt;code>path &amp;lt;- file.path(Sys.glob(&amp;quot;*withr*_files/figure-html&amp;quot;), &amp;quot;test.png&amp;quot;)
with_png(path, width = 400, height = 300, {
plot(mtcars$hp, mtcars$mpg)
})&lt;/code>&lt;/pre>
&lt;div class="figure">
&lt;img src="https://www.tidyverse.org/articles/2017-11-16-withr-2.1.0_files/figure-html/test.png" />
&lt;/div>
&lt;p>Thanks to &lt;a href="https://github.com/richierocks">Richard Cotton’s&lt;/a> great &lt;a href="https://github.com/r-lib/withr/pull/37">pull request&lt;/a> for this feature!&lt;/p>
&lt;/div>
&lt;div id="connections" class="section level2">
&lt;h2>Connections&lt;/h2>
&lt;p>There are two new functions for cleaning up connections in R. &lt;code>with_connection()&lt;/code> allows you to automatically close R’s file connections. Here we create a writable file connection, write some lines to it with &lt;code>with_connection()&lt;/code>, then open a read-only connection and read the file using &lt;code>local_connection()&lt;/code>.&lt;/p>
&lt;pre class="r">&lt;code>with_connection(list(con = file(&amp;quot;temp&amp;quot;, &amp;quot;w&amp;quot;)), {
writeLines(c(&amp;quot;foo&amp;quot;, &amp;quot;bar&amp;quot;), con)
})
read_temp &amp;lt;- function() {
con &amp;lt;- local_connection(file(&amp;quot;temp&amp;quot;, &amp;quot;r&amp;quot;))
readLines(con)
}
read_temp()
#&amp;gt; [1] &amp;quot;foo&amp;quot; &amp;quot;bar&amp;quot;&lt;/code>&lt;/pre>
&lt;p>&lt;code>with_db_connection()&lt;/code> provides &lt;a href="http://rstats-db.github.io/DBI">DBI&lt;/a> connections to databases which automatically call &lt;code>DBI::dbDisconnect()&lt;/code>. Here we create a new &lt;a href="https://www.sqlite.org/">SQLite&lt;/a> database, connect to it with &lt;code>with_db_connection()&lt;/code>, and write a new table to it. We then create another connection with &lt;code>local_db_connection()&lt;/code> and read from the table.&lt;/p>
&lt;pre class="r">&lt;code>db &amp;lt;- tempfile()
with_db_connection(
list(con = DBI::dbConnect(RSQLite::SQLite(), db)), {
DBI::dbWriteTable(con, &amp;quot;mtcars&amp;quot;, mtcars)
})
#&amp;gt; Loading required namespace: DBI
head_db_table &amp;lt;- function(...) {
con &amp;lt;- local_db_connection(DBI::dbConnect(RSQLite::SQLite(), db))
head(DBI::dbReadTable(con, &amp;quot;mtcars&amp;quot;), ...)
}
head_db_table()
#&amp;gt; mpg cyl disp hp drat wt qsec vs am gear carb
#&amp;gt; 1 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4
#&amp;gt; 2 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4
#&amp;gt; 3 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1
#&amp;gt; 4 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1
#&amp;gt; 5 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2
#&amp;gt; 6 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1
unlink(db)&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="packages" class="section level2">
&lt;h2>Packages&lt;/h2>
&lt;p>&lt;code>with_package()&lt;/code> allows you to temporarily attach a package.&lt;/p>
&lt;pre class="r">&lt;code>with_package(&amp;quot;lattice&amp;quot;, {
xyplot(y ~ x, data.frame(x = -2:2, y = dnorm(-2:2)))
})&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://www.tidyverse.org/articles/2017-11-16-withr-2.1.0_files/figure-html/unnamed-chunk-11-1.png" width="672" />&lt;/p>
&lt;/div>
&lt;div id="tempfiles" class="section level2">
&lt;h2>Tempfiles&lt;/h2>
&lt;p>&lt;code>with_tempfile()&lt;/code> handy for creating a new temporary files that are removed, often useful when writing tests.&lt;/p>
&lt;pre class="r">&lt;code>with_tempfile(&amp;quot;file1&amp;quot;, {
print(file1)
writeLines(&amp;quot;foo&amp;quot;, file1)
readLines(file1)
})
#&amp;gt; [1] &amp;quot;/var/folders/dt/r5s12t392tb5sk181j3gs4zw0000gn/T//RtmpC6vpTp/file15b492f945411&amp;quot;
#&amp;gt; [1] &amp;quot;foo&amp;quot;&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="other-changes" class="section level2">
&lt;h2>Other changes&lt;/h2>
&lt;p>There are many other bug fixes and other minor improvements in this release. You can see a complete list in the &lt;a href="https://github.com/r-lib/withr/releases/tag/v2.1.0">release notes&lt;/a>.&lt;/p>
&lt;p>A big thanks goes to all the community members who contributed code and opened issues since the last release!&lt;/p>
&lt;p>&lt;a href="https://github.com/QuLogic">@QuLogic&lt;/a>, &lt;a href="https://github.com/krlmlr">@krlmlr&lt;/a>, &lt;a href="https://github.com/hadley">@hadley&lt;/a>, &lt;a href="https://github.com/wlandau-lilly">@wlandau-lilly&lt;/a>, &lt;a href="https://github.com/jimhester">@jimhester&lt;/a>, &lt;a href="https://github.com/kevinushey">@kevinushey&lt;/a>, and &lt;a href="https://github.com/richierocks">@richierocks&lt;/a>&lt;/p>
&lt;/div>
&lt;/div></description></item></channel></rss>