<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tidyr | Tidyverse</title><link>https://www.tidyverse.org/tags/tidyr/</link><atom:link href="https://www.tidyverse.org/tags/tidyr/index.xml" rel="self" type="application/rss+xml"/><description>tidyr</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 24 Jan 2023 00:00:00 +0000</lastBuildDate><item><title>tidyr 1.3.0</title><link>https://www.tidyverse.org/blog/2023/01/tidyr-1-3-0/</link><pubDate>Tue, 24 Jan 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/01/tidyr-1-3-0/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re pleased to announce the release of
&lt;a href="https://tidyr.tidyverse.org" target="_blank" rel="noopener">tidyr&lt;/a> 1.3.0. tidyr provides a set of tools for transforming data frames to and from tidy data, where each variable is a column and each observation is a row. Tidy data is a convention for matching the semantics and structure of your data that makes using the rest of the tidyverse (and many other R packages) much easier.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This post highlights the biggest changes in this release:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>A new family of &lt;code>separate_*()&lt;/code> functions supersede
&lt;a href="https://tidyr.tidyverse.org/reference/separate.html" target="_blank" rel="noopener">&lt;code>separate()&lt;/code>&lt;/a> and
&lt;a href="https://tidyr.tidyverse.org/reference/extract.html" target="_blank" rel="noopener">&lt;code>extract()&lt;/code>&lt;/a> and come with useful debugging features.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://tidyr.tidyverse.org/reference/unnest_wider.html" target="_blank" rel="noopener">&lt;code>unnest_wider()&lt;/code>&lt;/a> and
&lt;a href="https://tidyr.tidyverse.org/reference/unnest_longer.html" target="_blank" rel="noopener">&lt;code>unnest_longer()&lt;/code>&lt;/a> gain a bundle of useful improvements.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_longer.html" target="_blank" rel="noopener">&lt;code>pivot_longer()&lt;/code>&lt;/a> gets a new &lt;code>cols_vary&lt;/code> argument.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>nest(.by)&lt;/code> provides a new (and hopefully final) way to create nested datasets.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>You should also notice generally improved errors with this release: we check function arguments more aggressively, and take care to always report the name of the function that you called, not some internal helper. As usual, you can find a full set of changes in the
&lt;a href="http://github.com/tidyverse/tidyr/releases/tag/v1.3.0" target="_blank" rel="noopener">release notes&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyr.tidyverse.org'>tidyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>, warn.conflicts &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="separate_-family-of-functions">&lt;code>separate_*()&lt;/code> family of functions
&lt;a href="#separate_-family-of-functions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The biggest feature of this release is a new, experimental family of functions for separating string columns:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Make columns&lt;/th>
&lt;th>Make rows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Separate with delimiter&lt;/td>
&lt;td>
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_delim()&lt;/code>&lt;/a>&lt;/td>
&lt;td>
&lt;a href="https://tidyr.tidyverse.org/reference/separate_longer_delim.html" target="_blank" rel="noopener">&lt;code>separate_longer_delim()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Separate by position&lt;/td>
&lt;td>
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_position()&lt;/code>&lt;/a>&lt;/td>
&lt;td>
&lt;a href="https://tidyr.tidyverse.org/reference/separate_longer_delim.html" target="_blank" rel="noopener">&lt;code>separate_longer_position()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Separate with regular expression&lt;/td>
&lt;td>
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_regex()&lt;/code>&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>These functions collectively supersede
&lt;a href="https://tidyr.tidyverse.org/reference/extract.html" target="_blank" rel="noopener">&lt;code>extract()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/separate.html" target="_blank" rel="noopener">&lt;code>separate()&lt;/code>&lt;/a>, and
&lt;a href="https://tidyr.tidyverse.org/reference/separate_rows.html" target="_blank" rel="noopener">&lt;code>separate_rows()&lt;/code>&lt;/a> because they have more consistent names and arguments, have better performance (thanks to stringr), and provide a new approach for handling problems.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Make columns&lt;/th>
&lt;th>Make rows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Separate with delimiter&lt;/td>
&lt;td>&lt;code>separate(sep = string)&lt;/code>&lt;/td>
&lt;td>
&lt;a href="https://tidyr.tidyverse.org/reference/separate_rows.html" target="_blank" rel="noopener">&lt;code>separate_rows()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Separate by position&lt;/td>
&lt;td>&lt;code>separate(sep = integer vector)&lt;/code>&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Separate with regular expression&lt;/td>
&lt;td>
&lt;a href="https://tidyr.tidyverse.org/reference/extract.html" target="_blank" rel="noopener">&lt;code>extract()&lt;/code>&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Here I&amp;rsquo;ll focus on the &lt;code>wider&lt;/code> functions because they generally present the most interesting challenges. Let&amp;rsquo;s start by grabbing some census data with the
&lt;a href="https://walker-data.com/tidycensus/" target="_blank" rel="noopener">tidycensus&lt;/a> package:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>vt_census&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>tidycensus&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://walker-data.com/tidycensus/reference/get_decennial.html'>get_decennial&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> geography &lt;span class='o'>=&lt;/span> &lt;span class='s'>"block"&lt;/span>,&lt;/span>
&lt;span> state &lt;span class='o'>=&lt;/span> &lt;span class='s'>"VT"&lt;/span>,&lt;/span>
&lt;span> county &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Washington"&lt;/span>,&lt;/span>
&lt;span> variables &lt;span class='o'>=&lt;/span> &lt;span class='s'>"P1_001N"&lt;/span>,&lt;/span>
&lt;span> year &lt;span class='o'>=&lt;/span> &lt;span class='m'>2020&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Getting data from the 2020 decennial Census&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; Using the PL 94-171 Redistricting Data summary file&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>Note: 2020 decennial Census data use differential privacy, a technique that&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>&lt;span style='color: #00BBBB;'>#&amp;gt; introduces errors into data to preserve respondent confidentiality.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span> &lt;span style='color: #BB00BB;'>Small counts should be interpreted with caution.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>ℹ&lt;/span> &lt;span style='color: #BB00BB;'>See https://www.census.gov/library/fact-sheets/2021/protecting-the-confidentiality-of-the-2020-census-redistricting-data.html for additional guidance.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>This message is displayed once per session.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nv'>vt_census&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2,150 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>GEOID&lt;/span> &lt;span style='font-weight: bold;'>NAME&lt;/span> &lt;span style='font-weight: bold;'>variable&lt;/span> &lt;span style='font-weight: bold;'>value&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 500239555021014 Block 1014, Block Group 1, Census Tract 9555.… P1_001N 21&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 500239555021015 Block 1015, Block Group 1, Census Tract 9555.… P1_001N 19&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 500239555021016 Block 1016, Block Group 1, Census Tract 9555.… P1_001N 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 500239555021017 Block 1017, Block Group 1, Census Tract 9555.… P1_001N 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 500239555021018 Block 1018, Block Group 1, Census Tract 9555.… P1_001N 43&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 500239555021019 Block 1019, Block Group 1, Census Tract 9555.… P1_001N 68&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 500239555021020 Block 1020, Block Group 1, Census Tract 9555.… P1_001N 30&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 500239555021021 Block 1021, Block Group 1, Census Tract 9555.… P1_001N 0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 500239555021022 Block 1022, Block Group 1, Census Tract 9555.… P1_001N 18&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 500239555021023 Block 1023, Block Group 1, Census Tract 9555.… P1_001N 93&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 2,140 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The &lt;code>GEOID&lt;/code> column is made up of four components: a 2-digit state identifier, a 3-digit county identifier, a 6-digit tract identifier, and a 4-digit block identifier. We can use
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_position()&lt;/code>&lt;/a> to extract these into their own variables:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>vt_census&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>GEOID&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate_wider_delim.html'>separate_wider_position&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>GEOID&lt;/span>,&lt;/span>
&lt;span> widths &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>state &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>, county &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>, tract &lt;span class='o'>=&lt;/span> &lt;span class='m'>6&lt;/span>, block &lt;span class='o'>=&lt;/span> &lt;span class='m'>4&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2,150 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>state&lt;/span> &lt;span style='font-weight: bold;'>county&lt;/span> &lt;span style='font-weight: bold;'>tract&lt;/span> &lt;span style='font-weight: bold;'>block&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 50 023 955502 1014 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 50 023 955502 1015 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 50 023 955502 1016 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 50 023 955502 1017 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 50 023 955502 1018 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 50 023 955502 1019 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 50 023 955502 1020 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 50 023 955502 1021 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 50 023 955502 1022 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 50 023 955502 1023 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 2,140 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The &lt;code>name&lt;/code> column contains this same information in a text form, with each component separated by a comma. We can use
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_delim()&lt;/code>&lt;/a> to break up this sort of data into individual variables:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>vt_census&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>NAME&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate_wider_delim.html'>separate_wider_delim&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>NAME&lt;/span>,&lt;/span>
&lt;span> delim &lt;span class='o'>=&lt;/span> &lt;span class='s'>", "&lt;/span>,&lt;/span>
&lt;span> names &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"block"&lt;/span>, &lt;span class='s'>"block_group"&lt;/span>, &lt;span class='s'>"tract"&lt;/span>, &lt;span class='s'>"county"&lt;/span>, &lt;span class='s'>"state"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2,150 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>block&lt;/span> &lt;span style='font-weight: bold;'>block_group&lt;/span> &lt;span style='font-weight: bold;'>tract&lt;/span> &lt;span style='font-weight: bold;'>county&lt;/span> &lt;span style='font-weight: bold;'>state&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Block 1014 Block Group 1 Census Tract 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Block 1015 Block Group 1 Census Tract 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Block 1016 Block Group 1 Census Tract 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Block 1017 Block Group 1 Census Tract 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Block 1018 Block Group 1 Census Tract 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Block 1019 Block Group 1 Census Tract 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Block 1020 Block Group 1 Census Tract 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Block 1021 Block Group 1 Census Tract 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Block 1022 Block Group 1 Census Tract 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Block 1023 Block Group 1 Census Tract 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 2,140 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You&amp;rsquo;ll notice that each row contains a lot of duplicated information (&amp;ldquo;Block&amp;rdquo;, &amp;ldquo;Block Group&amp;rdquo;, &amp;hellip;). You could certainly use
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> and string manipulation to clean this up, but there&amp;rsquo;s a more direct approach that you can use if you&amp;rsquo;re familiar with regular expressions. The new
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_regex()&lt;/code>&lt;/a> takes a vector of regular expressions that are matched in order, from left to right. If you name the regular expression, it will appear in the output; otherwise, it will be dropped. I think this leads to a particularly elegant solution to many problems.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>vt_census&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>NAME&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate_wider_delim.html'>separate_wider_regex&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>NAME&lt;/span>,&lt;/span>
&lt;span> patterns &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='s'>"Block "&lt;/span>, block &lt;span class='o'>=&lt;/span> &lt;span class='s'>"\\d+"&lt;/span>, &lt;span class='s'>", "&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Block Group "&lt;/span>, block_group &lt;span class='o'>=&lt;/span> &lt;span class='s'>"\\d+"&lt;/span>, &lt;span class='s'>", "&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Census Tract "&lt;/span>, tract &lt;span class='o'>=&lt;/span> &lt;span class='s'>"\\d+.\\d+"&lt;/span>, &lt;span class='s'>", "&lt;/span>,&lt;/span>
&lt;span> county &lt;span class='o'>=&lt;/span> &lt;span class='s'>"[^,]+"&lt;/span>, &lt;span class='s'>", "&lt;/span>,&lt;/span>
&lt;span> state &lt;span class='o'>=&lt;/span> &lt;span class='s'>".*"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2,150 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>block&lt;/span> &lt;span style='font-weight: bold;'>block_group&lt;/span> &lt;span style='font-weight: bold;'>tract&lt;/span> &lt;span style='font-weight: bold;'>county&lt;/span> &lt;span style='font-weight: bold;'>state&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1014 1 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 1015 1 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 1016 1 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 1017 1 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 1018 1 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 1019 1 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 1020 1 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 1021 1 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 1022 1 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 1023 1 9555.02 Washington County Vermont&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 2,140 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>These functions also have a new way to report problems. Let&amp;rsquo;s start with a very simple example:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> id &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>,&lt;/span>
&lt;span> x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"a-b"&lt;/span>, &lt;span class='s'>"a-b-c"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate_wider_delim.html'>separate_wider_delim&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, delim &lt;span class='o'>=&lt;/span> &lt;span class='s'>"-"&lt;/span>, names &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"x"&lt;/span>, &lt;span class='s'>"y"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `separate_wider_delim()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Expected 2 pieces in each element of `x`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> 1 value was too short.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Use `too_few = "debug"` to diagnose the problem.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Use `too_few = "align_start"/"align_end"` to silence this message.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> 1 value was too long.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Use `too_many = "debug"` to diagnose the problem.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Use `too_many = "drop"/"merge"` to silence this message.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We&amp;rsquo;ve requested two columns in the output (&lt;code>x&lt;/code> and &lt;code>y&lt;/code>), but the first row has only one element and the last row has three elements, so
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_delim()&lt;/code>&lt;/a> can&amp;rsquo;t do what we&amp;rsquo;ve asked. The error lays out your options for resolving the problem using the &lt;code>too_few&lt;/code> and &lt;code>too_many&lt;/code> arguments. I&amp;rsquo;d recommend always starting with &lt;code>&amp;quot;debug&amp;quot;&lt;/code> to get more information about the problem:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>probs&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate_wider_delim.html'>separate_wider_delim&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span>,&lt;/span>
&lt;span> delim &lt;span class='o'>=&lt;/span> &lt;span class='s'>"-"&lt;/span>,&lt;/span>
&lt;span> names &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> too_few &lt;span class='o'>=&lt;/span> &lt;span class='s'>"debug"&lt;/span>,&lt;/span>
&lt;span> too_many &lt;span class='o'>=&lt;/span> &lt;span class='s'>"debug"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning: Debug mode activated: adding variables `x_ok`, `x_pieces`, and `x_remainder`.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nv'>probs&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 7&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>id&lt;/span> &lt;span style='font-weight: bold;'>a&lt;/span> &lt;span style='font-weight: bold;'>b&lt;/span> &lt;span style='font-weight: bold;'>x&lt;/span> &lt;span style='font-weight: bold;'>x_ok&lt;/span> &lt;span style='font-weight: bold;'>x_pieces&lt;/span> &lt;span style='font-weight: bold;'>x_remainder&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;lgl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 a &lt;span style='color: #BB0000;'>NA&lt;/span> a FALSE 1 &lt;span style='color: #555555;'>""&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 a b a-b TRUE 2 &lt;span style='color: #555555;'>""&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 a b a-b-c FALSE 3 &lt;span style='color: #555555;'>"&lt;/span>-c&lt;span style='color: #555555;'>"&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This adds three new variables: &lt;code>x_ok&lt;/code> tells you if the &lt;code>x&lt;/code> could be separated as you requested, &lt;code>x_pieces&lt;/code> tells you the actual number of pieces, and &lt;code>x_remainder&lt;/code> shows you anything that remains after the columns you asked for. You can use this information to fix the problems in the input, or you can use the other options to &lt;code>too_few&lt;/code> and &lt;code>too_many&lt;/code> to tell
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_delim()&lt;/code>&lt;/a> to fix them for you:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate_wider_delim.html'>separate_wider_delim&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>x&lt;/span>,&lt;/span>
&lt;span> delim &lt;span class='o'>=&lt;/span> &lt;span class='s'>"-"&lt;/span>,&lt;/span>
&lt;span> names &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> too_few &lt;span class='o'>=&lt;/span> &lt;span class='s'>"align_start"&lt;/span>,&lt;/span>
&lt;span> too_many &lt;span class='o'>=&lt;/span> &lt;span class='s'>"drop"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>id&lt;/span> &lt;span style='font-weight: bold;'>a&lt;/span> &lt;span style='font-weight: bold;'>b&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 a &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 a b &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 a b&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>&lt;code>too_few&lt;/code> and &lt;code>too_many&lt;/code> also work with
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_position()&lt;/code>&lt;/a>, and &lt;code>too_few&lt;/code> works with
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_regex()&lt;/code>&lt;/a>. The &lt;code>longer&lt;/code> variants don&amp;rsquo;t need these arguments because varying numbers of rows don&amp;rsquo;t matter in the same way that varying numbers of columns do:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate_longer_delim.html'>separate_longer_delim&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, delim &lt;span class='o'>=&lt;/span> &lt;span class='s'>"-"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>id&lt;/span> &lt;span style='font-weight: bold;'>x&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 a &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 a &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 b &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 3 a &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 b &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 c&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>These functions are still experimental so we are actively seeking feedback. Please try them out and let us know if you find them useful or if there are other features you&amp;rsquo;d like to see.&lt;/p>
&lt;h2 id="unnest_wider-and-unnest_longer-improvements">&lt;code>unnest_wider()&lt;/code> and &lt;code>unnest_longer()&lt;/code> improvements
&lt;a href="#unnest_wider-and-unnest_longer-improvements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://tidyr.tidyverse.org/reference/unnest_longer.html" target="_blank" rel="noopener">&lt;code>unnest_longer()&lt;/code>&lt;/a> and
&lt;a href="https://tidyr.tidyverse.org/reference/unnest_wider.html" target="_blank" rel="noopener">&lt;code>unnest_wider()&lt;/code>&lt;/a> have both received some quality of life and consistency improvements. Most importantly:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://tidyr.tidyverse.org/reference/unnest_wider.html" target="_blank" rel="noopener">&lt;code>unnest_wider()&lt;/code>&lt;/a> now gives a better error when unnesting an unnamed vector:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> id &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>,&lt;/span>
&lt;span> x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"a"&lt;/span>, &lt;span class='s'>"b"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"d"&lt;/span>, &lt;span class='s'>"e"&lt;/span>, &lt;span class='s'>"f"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/unnest_wider.html'>unnest_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `unnest_wider()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> In column: `x`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> In row: 1.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>Caused by error:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Can't unnest elements with missing names.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Supply `names_sep` to generate automatic names.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/unnest_wider.html'>unnest_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, names_sep &lt;span class='o'>=&lt;/span> &lt;span class='s'>"_"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>id&lt;/span> &lt;span style='font-weight: bold;'>x_1&lt;/span> &lt;span style='font-weight: bold;'>x_2&lt;/span> &lt;span style='font-weight: bold;'>x_3&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 a b &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 d e f&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And this same behaviour now also applies to partially named vectors.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://tidyr.tidyverse.org/reference/unnest_longer.html" target="_blank" rel="noopener">&lt;code>unnest_longer()&lt;/code>&lt;/a> has gained a &lt;code>keep_empty&lt;/code> argument like
&lt;a href="https://tidyr.tidyverse.org/reference/unnest.html" target="_blank" rel="noopener">&lt;code>unnest()&lt;/code>&lt;/a>, and it now treats &lt;code>NULL&lt;/code> and empty vectors the same way:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> id &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>,&lt;/span>
&lt;span> x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>NULL&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/integer.html'>integer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/unnest_longer.html'>unnest_longer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>id&lt;/span> &lt;span style='font-weight: bold;'>x&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 3 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 3 2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 3&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/unnest_longer.html'>unnest_longer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, keep_empty &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>id&lt;/span> &lt;span style='font-weight: bold;'>x&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 3 2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 3&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h2 id="pivot_longercols_vary">&lt;code>pivot_longer(cols_vary)&lt;/code>
&lt;a href="#pivot_longercols_vary">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>By default,
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_longer.html" target="_blank" rel="noopener">&lt;code>pivot_longer()&lt;/code>&lt;/a> creates its output row-by-row:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>,&lt;/span>
&lt;span> y &lt;span class='o'>=&lt;/span> &lt;span class='m'>3&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>4&lt;/span>,&lt;/span>
&lt;span> z &lt;span class='o'>=&lt;/span> &lt;span class='m'>5&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>6&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_longer.html'>pivot_longer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/everything.html'>everything&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> names_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"name"&lt;/span>,&lt;/span>
&lt;span> values_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"value"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>name&lt;/span> &lt;span style='font-weight: bold;'>value&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> x 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> y 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> z 5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> x 2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> y 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> z 6&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can now request to create the output column-by-column with &lt;code>cols_vary = &amp;quot;slowest&amp;quot;:&lt;/code>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_longer.html'>pivot_longer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/everything.html'>everything&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> names_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"name"&lt;/span>,&lt;/span>
&lt;span> values_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"value"&lt;/span>,&lt;/span>
&lt;span> cols_vary &lt;span class='o'>=&lt;/span> &lt;span class='s'>"slowest"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>name&lt;/span> &lt;span style='font-weight: bold;'>value&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> x 1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> x 2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> y 3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> y 4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> z 5&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> z 6&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="nestby">&lt;code>nest(.by)&lt;/code>
&lt;a href="#nestby">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A nested data frame is a data frame where one (or more) columns is a list of data frames. Nested data frames are a powerful tool that allow you to turn groups into rows and can facilitate certain types of data manipulation that would be very tricky otherwise. (One place to learn more about them is my 2016 talk &amp;ldquo;
&lt;a href="https://www.youtube.com/watch?v=rz3_FDVt9eg" target="_blank" rel="noopener">Managing many models with R&lt;/a>&amp;quot;.)&lt;/p>
&lt;p>Over the years we&amp;rsquo;ve made a number of attempts at getting the correct interface for nesting, including
&lt;a href="https://tidyr.tidyverse.org/reference/nest.html" target="_blank" rel="noopener">&lt;code>tidyr::nest()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/nest_by.html" target="_blank" rel="noopener">&lt;code>dplyr::nest_by()&lt;/code>&lt;/a>, and
&lt;a href="https://dplyr.tidyverse.org/reference/group_nest.html" target="_blank" rel="noopener">&lt;code>dplyr::group_nest()&lt;/code>&lt;/a>. In this version of tidyr we&amp;rsquo;ve taken one more stab at it by adding a new argument to
&lt;a href="https://tidyr.tidyverse.org/reference/nest.html" target="_blank" rel="noopener">&lt;code>nest()&lt;/code>&lt;/a>: &lt;code>.by&lt;/code>, inspired by the upcoming
&lt;a href="https://www.tidyverse.org/blog/2022/11/dplyr-1-1-0-is-coming-soon/" target="_blank" rel="noopener">dplyr 1.1.0&lt;/a> release. This means that
&lt;a href="https://tidyr.tidyverse.org/reference/nest.html" target="_blank" rel="noopener">&lt;code>nest()&lt;/code>&lt;/a> now allows you to specify the variables you want to nest by as an alternative to specifying the variables that appear in the nested data.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Specify what to nest by&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>mtcars&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/nest.html'>nest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>.by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>cyl&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>cyl&lt;/span> &lt;span style='font-weight: bold;'>data&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 6 &lt;span style='color: #555555;'>&amp;lt;tibble [7 × 10]&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 4 &lt;span style='color: #555555;'>&amp;lt;tibble [11 × 10]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 8 &lt;span style='color: #555555;'>&amp;lt;tibble [14 × 10]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Specify what should be nested&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>mtcars&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/nest.html'>nest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>data &lt;span class='o'>=&lt;/span> &lt;span class='o'>-&lt;/span>&lt;span class='nv'>cyl&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>cyl&lt;/span> &lt;span style='font-weight: bold;'>data&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 6 &lt;span style='color: #555555;'>&amp;lt;tibble [7 × 10]&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 4 &lt;span style='color: #555555;'>&amp;lt;tibble [11 × 10]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 8 &lt;span style='color: #555555;'>&amp;lt;tibble [14 × 10]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Specify both (to drop variables)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>mtcars&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/nest.html'>nest&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mpg&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='nv'>drat&lt;/span>, .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>cyl&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='font-weight: bold;'>cyl&lt;/span> &lt;span style='font-weight: bold;'>data&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 6 &lt;span style='color: #555555;'>&amp;lt;tibble [7 × 5]&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 4 &lt;span style='color: #555555;'>&amp;lt;tibble [11 × 5]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 8 &lt;span style='color: #555555;'>&amp;lt;tibble [14 × 5]&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If this function is all we hope it to be, we&amp;rsquo;re likely to supersede
&lt;a href="https://dplyr.tidyverse.org/reference/nest_by.html" target="_blank" rel="noopener">&lt;code>dplyr::nest_by()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/group_nest.html" target="_blank" rel="noopener">&lt;code>dplyr::group_nest()&lt;/code>&lt;/a> in the future. This has the nice property of placing the functions for nesting and unnesting in the same package (tidyr).&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all 51 contributors who helped make this release possible, by writing code and documentating, asking questions, and reporting bugs!
&lt;a href="https://github.com/AdrianS85" target="_blank" rel="noopener">@AdrianS85&lt;/a>,
&lt;a href="https://github.com/ahcyip" target="_blank" rel="noopener">@ahcyip&lt;/a>,
&lt;a href="https://github.com/allenbaron" target="_blank" rel="noopener">@allenbaron&lt;/a>,
&lt;a href="https://github.com/AnBarbosaBr" target="_blank" rel="noopener">@AnBarbosaBr&lt;/a>,
&lt;a href="https://github.com/ArthurAndrews" target="_blank" rel="noopener">@ArthurAndrews&lt;/a>,
&lt;a href="https://github.com/bart1" target="_blank" rel="noopener">@bart1&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/bknakker" target="_blank" rel="noopener">@bknakker&lt;/a>,
&lt;a href="https://github.com/bwiernik" target="_blank" rel="noopener">@bwiernik&lt;/a>,
&lt;a href="https://github.com/crissthiandi" target="_blank" rel="noopener">@crissthiandi&lt;/a>,
&lt;a href="https://github.com/daattali" target="_blank" rel="noopener">@daattali&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dcaud" target="_blank" rel="noopener">@dcaud&lt;/a>,
&lt;a href="https://github.com/DSLituiev" target="_blank" rel="noopener">@DSLituiev&lt;/a>,
&lt;a href="https://github.com/elgabbas" target="_blank" rel="noopener">@elgabbas&lt;/a>,
&lt;a href="https://github.com/fabiangehring" target="_blank" rel="noopener">@fabiangehring&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/ilikegitlab" target="_blank" rel="noopener">@ilikegitlab&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jic007" target="_blank" rel="noopener">@jic007&lt;/a>,
&lt;a href="https://github.com/Joao-O-Santos" target="_blank" rel="noopener">@Joao-O-Santos&lt;/a>,
&lt;a href="https://github.com/joeycouse" target="_blank" rel="noopener">@joeycouse&lt;/a>,
&lt;a href="https://github.com/jonspring" target="_blank" rel="noopener">@jonspring&lt;/a>,
&lt;a href="https://github.com/kevinushey" target="_blank" rel="noopener">@kevinushey&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/lotard" target="_blank" rel="noopener">@lotard&lt;/a>,
&lt;a href="https://github.com/lschneiderbauer" target="_blank" rel="noopener">@lschneiderbauer&lt;/a>,
&lt;a href="https://github.com/lucylgao" target="_blank" rel="noopener">@lucylgao&lt;/a>,
&lt;a href="https://github.com/markfairbanks" target="_blank" rel="noopener">@markfairbanks&lt;/a>,
&lt;a href="https://github.com/martina-starc" target="_blank" rel="noopener">@martina-starc&lt;/a>,
&lt;a href="https://github.com/MatthieuStigler" target="_blank" rel="noopener">@MatthieuStigler&lt;/a>,
&lt;a href="https://github.com/mattnolan001" target="_blank" rel="noopener">@mattnolan001&lt;/a>,
&lt;a href="https://github.com/mattroumaya" target="_blank" rel="noopener">@mattroumaya&lt;/a>,
&lt;a href="https://github.com/mdkrause" target="_blank" rel="noopener">@mdkrause&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/millermc38" target="_blank" rel="noopener">@millermc38&lt;/a>,
&lt;a href="https://github.com/modche" target="_blank" rel="noopener">@modche&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/mspittler" target="_blank" rel="noopener">@mspittler&lt;/a>,
&lt;a href="https://github.com/olivroy" target="_blank" rel="noopener">@olivroy&lt;/a>,
&lt;a href="https://github.com/piokol23" target="_blank" rel="noopener">@piokol23&lt;/a>,
&lt;a href="https://github.com/ppreshant" target="_blank" rel="noopener">@ppreshant&lt;/a>,
&lt;a href="https://github.com/ramiromagno" target="_blank" rel="noopener">@ramiromagno&lt;/a>,
&lt;a href="https://github.com/Rengervn" target="_blank" rel="noopener">@Rengervn&lt;/a>,
&lt;a href="https://github.com/rjake" target="_blank" rel="noopener">@rjake&lt;/a>,
&lt;a href="https://github.com/roohitk" target="_blank" rel="noopener">@roohitk&lt;/a>,
&lt;a href="https://github.com/struckma" target="_blank" rel="noopener">@struckma&lt;/a>,
&lt;a href="https://github.com/tjmahr" target="_blank" rel="noopener">@tjmahr&lt;/a>,
&lt;a href="https://github.com/weirichs" target="_blank" rel="noopener">@weirichs&lt;/a>, and
&lt;a href="https://github.com/wurli" target="_blank" rel="noopener">@wurli&lt;/a>.&lt;/p></description></item><item><title>tidyr 1.2.0</title><link>https://www.tidyverse.org/blog/2022/02/tidyr-1-2-0/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/02/tidyr-1-2-0/</guid><description>&lt;p>We&amp;rsquo;re chuffed to announce the release of
&lt;a href="https://tidyr.tidyverse.org" target="_blank" rel="noopener">tidyr&lt;/a> 1.2.0. tidyr provides a set of tools for transforming data frames to and from tidy data, where each variable is a column and each observation is a row. Tidy data is a convention for matching the semantics and structure of your data that makes using the rest of the tidyverse (and many other R packages) much easier.&lt;/p>
&lt;p>You can install it from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will go over the main new features, which include four new arguments to
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_wider.html" target="_blank" rel="noopener">&lt;code>pivot_wider()&lt;/code>&lt;/a>, the ability to unnest multiple columns at once in
&lt;a href="https://tidyr.tidyverse.org/reference/hoist.html" target="_blank" rel="noopener">&lt;code>unnest_wider()&lt;/code>&lt;/a> and
&lt;a href="https://tidyr.tidyverse.org/reference/hoist.html" target="_blank" rel="noopener">&lt;code>unnest_longer()&lt;/code>&lt;/a>, an enhanced
&lt;a href="https://tidyr.tidyverse.org/reference/complete.html" target="_blank" rel="noopener">&lt;code>complete()&lt;/code>&lt;/a> function, and some updates to our tools for handling missing values.&lt;/p>
&lt;p>You can see a full list of changes in the
&lt;a href="https://github.com/tidyverse/tidyr/blob/main/NEWS.md" target="_blank" rel="noopener">release notes&lt;/a>, where you&amp;rsquo;ll also find details on the ~50 bugs that were fixed in this release!&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyr.tidyverse.org'>tidyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>, warn.conflicts &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="new-author">New author
&lt;a href="#new-author">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>First off, we are very excited to welcome
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">Maximilian Girlich&lt;/a> as a new tidyr author in recognition of his significant and sustained contributions. In particular, he played a large part in speeding up a number of core functions, including:
&lt;a href="https://tidyr.tidyverse.org/reference/chop.html" target="_blank" rel="noopener">&lt;code>unchop()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/nest.html" target="_blank" rel="noopener">&lt;code>unnest()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/hoist.html" target="_blank" rel="noopener">&lt;code>unnest_wider()&lt;/code>&lt;/a>, and
&lt;a href="https://tidyr.tidyverse.org/reference/hoist.html" target="_blank" rel="noopener">&lt;code>unnest_longer()&lt;/code>&lt;/a>. Additionally, he provided proof-of-concept implementations for a few new features, like the &lt;code>unused_fn&lt;/code> argument to
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_wider.html" target="_blank" rel="noopener">&lt;code>pivot_wider()&lt;/code>&lt;/a> discussed below.&lt;/p>
&lt;h2 id="pivoting">Pivoting
&lt;a href="#pivoting">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="value-expansion">Value expansion
&lt;a href="#value-expansion">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_wider.html" target="_blank" rel="noopener">&lt;code>pivot_wider()&lt;/code>&lt;/a> has gained two new arguments related to the &lt;em>expansion&lt;/em> of values. These arguments are similar to &lt;code>drop = FALSE&lt;/code> from
&lt;a href="https://tidyr.tidyverse.org/reference/spread.html" target="_blank" rel="noopener">&lt;code>spread()&lt;/code>&lt;/a>, but are a bit more fine grained. As you&amp;rsquo;ll see, these are mostly useful when you have factors in either &lt;code>names_from&lt;/code> or &lt;code>id_cols&lt;/code> and want to ensure that all of the factor levels are retained.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>weekdays&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Mon"&lt;/span>, &lt;span class='s'>"Tue"&lt;/span>, &lt;span class='s'>"Wed"&lt;/span>, &lt;span class='s'>"Thu"&lt;/span>, &lt;span class='s'>"Fri"&lt;/span>, &lt;span class='s'>"Sat"&lt;/span>, &lt;span class='s'>"Sun"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>daily&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
day &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/factor.html'>factor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Tue"&lt;/span>, &lt;span class='s'>"Thu"&lt;/span>, &lt;span class='s'>"Fri"&lt;/span>, &lt;span class='s'>"Mon"&lt;/span>&lt;span class='o'>)&lt;/span>, levels &lt;span class='o'>=&lt;/span> &lt;span class='nv'>weekdays&lt;/span>&lt;span class='o'>)&lt;/span>,
value &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>2&lt;/span>, &lt;span class='m'>3&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>5&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>daily&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; day value&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Tue 2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Thu 3&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Fri 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Mon 5&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Imagine you&amp;rsquo;d like to pivot the values from &lt;code>day&lt;/code> into columns, filling the cells with &lt;code>value&lt;/code>. By default,
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_wider.html" target="_blank" rel="noopener">&lt;code>pivot_wider()&lt;/code>&lt;/a> only generates columns from the data that is actually there, and will retain the ordering that was present in the data.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>daily&lt;/span>, names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>day&lt;/span>, values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>value&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; Tue Thu Fri Mon&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 2 3 1 5&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>When you know the full set of possible values and have encoded them as factor levels (as we have done here), you might want to retain those levels in the pivot, even if there isn&amp;rsquo;t any data. Additionally, it would probably be nice if they were sorted to match the levels found in the factor. The new &lt;code>names_expand&lt;/code> argument handles both of these.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>daily&lt;/span>, names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>day&lt;/span>, values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>value&lt;/span>, names_expand &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 7&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; Mon Tue Wed Thu Fri Sat Sun&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 5 2 &lt;span style='color: #BB0000;'>NA&lt;/span> 3 1 &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>A related problem can occur when there are implicit missing factor levels in the &lt;code>id_cols&lt;/code>. When this happens, there are missing rows (rather than columns) that you&amp;rsquo;d like to explicitly represent. To demonstrate, we&amp;rsquo;ll modify &lt;code>daily&lt;/code> with a &lt;code>type&lt;/code> column, and pivot on that instead, keeping &lt;code>day&lt;/code> as an identifier column.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>daily&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>daily&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>type &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"A"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>daily&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; day value type &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Tue 2 A &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Thu 3 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Fri 1 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Mon 5 A&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In the pivot below, we are missing some rows corresponding to the missing factor levels of &lt;code>day&lt;/code>. Again, by default
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_wider.html" target="_blank" rel="noopener">&lt;code>pivot_wider()&lt;/code>&lt;/a> will only use data that already exists in the &lt;code>id_cols&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>daily&lt;/span>,
names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>type&lt;/span>,
values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>value&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; day A B&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Tue 2 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Thu &lt;span style='color: #BB0000;'>NA&lt;/span> 3&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Fri &lt;span style='color: #BB0000;'>NA&lt;/span> 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Mon 5 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To explicitly expand (and sort) these missing rows, we can use &lt;code>id_expand&lt;/code>, which works much the same way as &lt;code>names_expand&lt;/code>. We will also go ahead and fill the unrepresented values with zeros.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>daily&lt;/span>,
id_expand &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>,
names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>type&lt;/span>,
values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>value&lt;/span>,
values_fill &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 7 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; day A B&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Mon 5 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Tue 2 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Wed 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Thu 0 3&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> Fri 0 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> Sat 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>7&lt;/span> Sun 0 0&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="varying-names">Varying names
&lt;a href="#varying-names">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>When you specify multiple &lt;code>values_from&lt;/code> columns, the resulting column names that get generated from the combination of &lt;code>names_from&lt;/code> values and &lt;code>values_from&lt;/code> names default to varying the &lt;code>names_from&lt;/code> values &lt;em>fastest&lt;/em>. This means that all of the columns related to the first &lt;code>values_from&lt;/code> column will be at the front, followed by the columns related to the second &lt;code>values_from&lt;/code> column, and so on. For example, if we wanted to flatten &lt;code>daily&lt;/code> all the way out to a single row by specifying &lt;code>values_from = c(value, type)&lt;/code>, then we would end up with all the columns related to &lt;code>value&lt;/code> followed by those related to &lt;code>type&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>daily&lt;/span>,
names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>day&lt;/span>,
values_from &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>value&lt;/span>, &lt;span class='nv'>type&lt;/span>&lt;span class='o'>)&lt;/span>,
names_expand &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 14&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; value_Mon value_Tue value_Wed value_Thu value_Fri value_Sat value_Sun type_Mon&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 5 2 &lt;span style='color: #BB0000;'>NA&lt;/span> 3 1 &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> A &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 6 more variables: type_Tue &amp;lt;chr&amp;gt;, type_Wed &amp;lt;chr&amp;gt;, type_Thu &amp;lt;chr&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># type_Fri &amp;lt;chr&amp;gt;, type_Sat &amp;lt;chr&amp;gt;, type_Sun &amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Depending on your data, you might instead want to group all of the columns related to a particular &lt;code>names_from&lt;/code> value together. In this example, that would mean grouping all of the columns related to Monday together, followed by Tuesday, Wednesday, etc. You can accomplish this with the new &lt;code>names_vary&lt;/code> argument, which allows you to vary the &lt;code>names_from&lt;/code> values &lt;em>slowest&lt;/em>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>daily&lt;/span>,
names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>day&lt;/span>,
values_from &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>value&lt;/span>, &lt;span class='nv'>type&lt;/span>&lt;span class='o'>)&lt;/span>,
names_expand &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>,
names_vary &lt;span class='o'>=&lt;/span> &lt;span class='s'>"slowest"&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 14&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; value_Mon type_Mon value_Tue type_Tue value_Wed type_Wed value_Thu type_Thu&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 5 A 2 A &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> 3 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 6 more variables: value_Fri &amp;lt;dbl&amp;gt;, type_Fri &amp;lt;chr&amp;gt;, value_Sat &amp;lt;dbl&amp;gt;,&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># type_Sat &amp;lt;chr&amp;gt;, value_Sun &amp;lt;dbl&amp;gt;, type_Sun &amp;lt;chr&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="unused-columns">Unused columns
&lt;a href="#unused-columns">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Occasionally you&amp;rsquo;ll find yourself in a situation where you have columns in your data that are unrelated to the pivoting process itself, but you&amp;rsquo;d still like to retain some information about them. Consider this data set that records values returned by various systems across multiple counties.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>readouts&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
county &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Wake"&lt;/span>, &lt;span class='s'>"Wake"&lt;/span>, &lt;span class='s'>"Wake"&lt;/span>, &lt;span class='s'>"Guilford"&lt;/span>, &lt;span class='s'>"Guilford"&lt;/span>&lt;span class='o'>)&lt;/span>,
date &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.Date.html'>as.Date&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"2020-01-01"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.Date.html'>as.Date&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"2020-01-03"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>,
system &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"B"&lt;/span>, &lt;span class='s'>"C"&lt;/span>, &lt;span class='s'>"A"&lt;/span>, &lt;span class='s'>"C"&lt;/span>&lt;span class='o'>)&lt;/span>,
value &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>3.2&lt;/span>, &lt;span class='m'>4&lt;/span>, &lt;span class='m'>5.5&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>1.2&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>readouts&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; county date system value&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Wake 2020-01-01 A 3.2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Wake 2020-01-02 B 4 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Wake 2020-01-03 C 5.5&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Guilford 2020-01-03 A 2 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> Guilford 2020-01-04 C 1.2&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You might want to pivot this into a view containing one row per &lt;code>county&lt;/code>, with the &lt;code>system&lt;/code> types across the columns. You might do something like:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>readouts&lt;/span>,
id_cols &lt;span class='o'>=&lt;/span> &lt;span class='nv'>county&lt;/span>,
names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>system&lt;/span>,
values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>value&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; county A B C&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Wake 3.2 4 5.5&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Guilford 2 &lt;span style='color: #BB0000;'>NA&lt;/span> 1.2&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This worked, but in the process we&amp;rsquo;ve lost all of the information from the &lt;code>date&lt;/code> column about when the values were recorded. To fix this, we can use the new &lt;code>unused_fn&lt;/code> argument to retain a summary of the unused &lt;code>date&lt;/code> column. In our case, we&amp;rsquo;ll retain the most recent date a value was recorded across all systems.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>readouts&lt;/span>,
id_cols &lt;span class='o'>=&lt;/span> &lt;span class='nv'>county&lt;/span>,
names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>system&lt;/span>,
values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>value&lt;/span>,
unused_fn &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>date &lt;span class='o'>=&lt;/span> &lt;span class='nv'>max&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; county A B C date &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Wake 3.2 4 5.5 2020-01-03&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Guilford 2 &lt;span style='color: #BB0000;'>NA&lt;/span> 1.2 2020-01-04&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you want to retain the unused columns but delay the summarization entirely, you can use
&lt;a href="https://rdrr.io/r/base/list.html" target="_blank" rel="noopener">&lt;code>list()&lt;/code>&lt;/a> to wrap up the value into a list column.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>readouts&lt;/span>,
id_cols &lt;span class='o'>=&lt;/span> &lt;span class='nv'>county&lt;/span>,
names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>system&lt;/span>,
values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>value&lt;/span>,
unused_fn &lt;span class='o'>=&lt;/span> &lt;span class='nv'>list&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; county A B C date &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Wake 3.2 4 5.5 &lt;span style='color: #555555;'>&amp;lt;date [3]&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Guilford 2 &lt;span style='color: #BB0000;'>NA&lt;/span> 1.2 &lt;span style='color: #555555;'>&amp;lt;date [2]&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that for &lt;code>unused_fn&lt;/code> to work, you must supply &lt;code>id_cols&lt;/code> explicitly, as otherwise all of the remaining columns are assumed to be &lt;code>id_cols&lt;/code>.&lt;/p>
&lt;h3 id="more-informative-errors">More informative errors
&lt;a href="#more-informative-errors">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>We&amp;rsquo;ve improved on a number of the error messages throughout tidyr, but the error you get from
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_wider.html" target="_blank" rel="noopener">&lt;code>pivot_wider()&lt;/code>&lt;/a> when you encounter values that aren&amp;rsquo;t uniquely identified is now especially nice. Let&amp;rsquo;s &amp;ldquo;accidentally&amp;rdquo; add a duplicate row to &lt;code>readouts&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>readouts2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>readouts&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/seq.html'>seq_len&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/context.html'>n&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/context.html'>n&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>readouts2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; county date system value&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;date&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Wake 2020-01-01 A 3.2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Wake 2020-01-02 B 4 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Wake 2020-01-03 C 5.5&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Guilford 2020-01-03 A 2 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> Guilford 2020-01-04 C 1.2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> Guilford 2020-01-04 C 1.2&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Pivoting on &lt;code>system&lt;/code> warns us that the values from &lt;code>value&lt;/code> are not uniquely identified.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>readouts2&lt;/span>,
id_cols &lt;span class='o'>=&lt;/span> &lt;span class='nv'>county&lt;/span>,
names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>system&lt;/span>,
values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>value&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Warning: Values from `value` are not uniquely identified; output will contain list-cols.&lt;/span>
&lt;span class='c'>#&amp;gt; * Use `values_fn = list` to suppress this warning.&lt;/span>
&lt;span class='c'>#&amp;gt; * Use `values_fn = &amp;#123;summary_fun&amp;#125;` to summarise duplicates.&lt;/span>
&lt;span class='c'>#&amp;gt; * Use the following dplyr code to identify duplicates.&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;#123;data&amp;#125; %&amp;gt;%&lt;/span>
&lt;span class='c'>#&amp;gt; dplyr::group_by(county, system) %&amp;gt;%&lt;/span>
&lt;span class='c'>#&amp;gt; dplyr::summarise(n = dplyr::n(), .groups = "drop") %&amp;gt;%&lt;/span>
&lt;span class='c'>#&amp;gt; dplyr::filter(n &amp;gt; 1L)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 4&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; county A B C &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Wake &lt;span style='color: #555555;'>&amp;lt;dbl [1]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;dbl [1]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;dbl [1]&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Guilford &lt;span style='color: #555555;'>&amp;lt;dbl [1]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;NULL&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;dbl [2]&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This provides us with a number of options, but the last one is particularly useful if we weren&amp;rsquo;t expecting duplicates. This prints out a block of dplyr code that you can use to quickly identify duplication issues. Replacing &lt;code>{data}&lt;/code> with &lt;code>readouts2&lt;/code>, we get:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>readouts2&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>dplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>county&lt;/span>, &lt;span class='nv'>system&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>dplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>n &lt;span class='o'>=&lt;/span> &lt;span class='nf'>dplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/context.html'>n&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>, .groups &lt;span class='o'>=&lt;/span> &lt;span class='s'>"drop"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>dplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>n&lt;/span> &lt;span class='o'>&amp;gt;&lt;/span> &lt;span class='m'>1L&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; county system n&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Guilford C 2&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="unnesting">(Un)nesting
&lt;a href="#unnesting">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://tidyr.tidyverse.org/reference/hoist.html" target="_blank" rel="noopener">&lt;code>unnest_longer()&lt;/code>&lt;/a> and
&lt;a href="https://tidyr.tidyverse.org/reference/hoist.html" target="_blank" rel="noopener">&lt;code>unnest_wider()&lt;/code>&lt;/a> have both gained the ability to unnest multiple columns at once. This is particularly useful with
&lt;a href="https://tidyr.tidyverse.org/reference/hoist.html" target="_blank" rel="noopener">&lt;code>unnest_longer()&lt;/code>&lt;/a>, where sequential unnesting would instead result in a Cartesian product, which isn&amp;rsquo;t typically desired.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>df&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; x y &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;list&amp;gt;&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #555555;'>&amp;lt;dbl [1]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;dbl [1]&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #555555;'>&amp;lt;int [2]&amp;gt;&lt;/span> &lt;span style='color: #555555;'>&amp;lt;int [2]&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># Sequential unnesting&lt;/span>
&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/hoist.html'>unnest_longer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/hoist.html'>unnest_longer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; x y&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 1 2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 2 2&lt;/span>
&lt;span class='c'># Joint unnesting&lt;/span>
&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/hoist.html'>unnest_longer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; x y&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 2&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="grids">Grids
&lt;a href="#grids">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When
&lt;a href="https://tidyr.tidyverse.org/reference/complete.html" target="_blank" rel="noopener">&lt;code>complete()&lt;/code>&lt;/a>-ing a data frame, it&amp;rsquo;s often useful to immediately fill the newly generated missing values with a value that better represents their intention. For example, with the &lt;code>daily&lt;/code> data we could complete on the &lt;code>day&lt;/code> factor column and insert zeros for &lt;code>value&lt;/code> in any row that wasn&amp;rsquo;t previously represented.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>daily&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; day value type &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Tue 2 A &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Thu 3 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Fri 1 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Mon 5 A&lt;/span>
&lt;span class='nv'>daily&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/complete.html'>complete&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>day&lt;/span>, fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>value &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 7 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; day value type &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Mon 5 A &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Tue 2 A &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Wed 0 &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Thu 3 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> Fri 1 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> Sat 0 &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>7&lt;/span> Sun 0 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>But what if there were already missing values before completing? By default,
&lt;a href="https://tidyr.tidyverse.org/reference/complete.html" target="_blank" rel="noopener">&lt;code>complete()&lt;/code>&lt;/a> will still fill those &lt;em>explicit&lt;/em> missing values too.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>daily2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>daily&lt;/span>
&lt;span class='nv'>daily2&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>value&lt;/span>&lt;span class='o'>[&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/nrow.html'>nrow&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>daily2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>]&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kc'>NA&lt;/span>
&lt;span class='nv'>daily2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; day value type &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Tue 2 A &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Thu 3 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Fri 1 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Mon &lt;span style='color: #BB0000;'>NA&lt;/span> A&lt;/span>
&lt;span class='nv'>daily2&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/complete.html'>complete&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>day&lt;/span>, fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>value &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 7 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; day value type &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Mon 0 A &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Tue 2 A &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Wed 0 &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Thu 3 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> Fri 1 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> Sat 0 &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>7&lt;/span> Sun 0 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To avoid this, you can now retain pre-existing explicit missing values with the new &lt;code>explicit&lt;/code> argument:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>daily2&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/complete.html'>complete&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>day&lt;/span>, fill &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>value &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span>, explicit &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 7 × 3&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; day value type &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Mon &lt;span style='color: #BB0000;'>NA&lt;/span> A &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Tue 2 A &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Wed 0 &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Thu 3 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> Fri 1 B &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> Sat 0 &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>7&lt;/span> Sun 0 &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="missing-values">Missing values
&lt;a href="#missing-values">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The three core missing values functions,
&lt;a href="https://tidyr.tidyverse.org/reference/drop_na.html" target="_blank" rel="noopener">&lt;code>drop_na()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/replace_na.html" target="_blank" rel="noopener">&lt;code>replace_na()&lt;/code>&lt;/a>, and
&lt;a href="https://tidyr.tidyverse.org/reference/fill.html" target="_blank" rel="noopener">&lt;code>fill()&lt;/code>&lt;/a>, have all been updated to utilize
&lt;a href="https://vctrs.r-lib.org" target="_blank" rel="noopener">vctrs&lt;/a>. This allows them to work properly with a wider variety of types, and makes them safer to use with some of the existing types that they already supported.&lt;/p>
&lt;p>As an example,
&lt;a href="https://tidyr.tidyverse.org/reference/fill.html" target="_blank" rel="noopener">&lt;code>fill()&lt;/code>&lt;/a> now works properly with the Period types from
&lt;a href="https://lubridate.tidyverse.org" target="_blank" rel="noopener">lubridate&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://lubridate.tidyverse.org'>lubridate&lt;/a>&lt;/span>, warn.conflicts &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://lubridate.tidyverse.org/reference/period.html'>seconds&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='kc'>NA&lt;/span>, &lt;span class='m'>4&lt;/span>, &lt;span class='kc'>NA&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/fill.html'>fill&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, .direction &lt;span class='o'>=&lt;/span> &lt;span class='s'>"down"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 5 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; x &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;Period&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1S &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2S &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2S &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 4S &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 4S&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And it now treats &lt;code>NaN&lt;/code> like any other missing value:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='kc'>NaN&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='kc'>NA&lt;/span>, &lt;span class='m'>3&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/fill.html'>fill&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, .direction &lt;span class='o'>=&lt;/span> &lt;span class='s'>"up"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; x&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 3&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The most drastic improvement in safety comes to
&lt;a href="https://tidyr.tidyverse.org/reference/replace_na.html" target="_blank" rel="noopener">&lt;code>replace_na()&lt;/code>&lt;/a>. Previously, this relied on &lt;code>[&amp;lt;-&lt;/code> to replace missing values with a replacement value, which is much laxer than vctrs in terms of what the replacement value can be. This resulted in the possibility for your column type to change depending on what your replacement value was.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># Notice that this is an integer column&lt;/span>
&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tibble.html'>tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1L&lt;/span>, &lt;span class='kc'>NA&lt;/span>, &lt;span class='m'>3L&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>df&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; x&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># Previous behavior without vctrs:&lt;/span>
&lt;span class='c'># Integer column changed to character column&lt;/span>
&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/replace_na.html'>replace_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='s'>"missing"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; # A tibble: 3 × 1&lt;/span>
&lt;span class='c'>#&amp;gt; x &lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;chr&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; 1 1 &lt;/span>
&lt;span class='c'>#&amp;gt; 2 missing&lt;/span>
&lt;span class='c'>#&amp;gt; 3 3&lt;/span>
&lt;span class='c'># Integer column changed to double column&lt;/span>
&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/replace_na.html'>replace_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; # A tibble: 3 × 1&lt;/span>
&lt;span class='c'>#&amp;gt; x&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; 2 1&lt;/span>
&lt;span class='c'>#&amp;gt; 3 3&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With vctrs, we now ensure that the replacement value is always cast to the type of the column you are replacing in. This ensures that the column types remain the same before and after you replace any missing values.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># New behavior with vctrs:&lt;/span>
&lt;span class='c'># Error, because "missing" can't be converted to an integer&lt;/span>
&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/replace_na.html'>replace_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='s'>"missing"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Error: Can't convert `replace$x` &amp;lt;character&amp;gt; to match type of `data$x` &amp;lt;integer&amp;gt;.&lt;/span>
&lt;span class='c'># Integer column type is retained, and the double value of `1` is&lt;/span>
&lt;span class='c'># converted to an integer replacement value of `1L`&lt;/span>
&lt;span class='nv'>df&lt;/span> &lt;span class='o'>&lt;a href='https://tidyr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/replace_na.html'>replace_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/list.html'>list&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 1&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; x&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to the 25 people who contributed to this version of tidyr by discussing ideas and suggesting new features!
&lt;a href="https://github.com/aliaamiri" target="_blank" rel="noopener">@aliaamiri&lt;/a>,
&lt;a href="https://github.com/allenbaron" target="_blank" rel="noopener">@allenbaron&lt;/a>,
&lt;a href="https://github.com/bersbersbers" target="_blank" rel="noopener">@bersbersbers&lt;/a>,
&lt;a href="https://github.com/cjburgess" target="_blank" rel="noopener">@cjburgess&lt;/a>,
&lt;a href="https://github.com/DanChaltiel" target="_blank" rel="noopener">@DanChaltiel&lt;/a>,
&lt;a href="https://github.com/edzer" target="_blank" rel="noopener">@edzer&lt;/a>,
&lt;a href="https://github.com/eshom" target="_blank" rel="noopener">@eshom&lt;/a>,
&lt;a href="https://github.com/gaborcsardi" target="_blank" rel="noopener">@gaborcsardi&lt;/a>,
&lt;a href="https://github.com/gergness" target="_blank" rel="noopener">@gergness&lt;/a>,
&lt;a href="https://github.com/ggrothendieck" target="_blank" rel="noopener">@ggrothendieck&lt;/a>,
&lt;a href="https://github.com/iago-pssjd" target="_blank" rel="noopener">@iago-pssjd&lt;/a>,
&lt;a href="https://github.com/issactoast" target="_blank" rel="noopener">@issactoast&lt;/a>,
&lt;a href="https://github.com/joiharalds" target="_blank" rel="noopener">@joiharalds&lt;/a>,
&lt;a href="https://github.com/LuiNov" target="_blank" rel="noopener">@LuiNov&lt;/a>,
&lt;a href="https://github.com/LukasWallrich" target="_blank" rel="noopener">@LukasWallrich&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/MichaelChirico" target="_blank" rel="noopener">@MichaelChirico&lt;/a>,
&lt;a href="https://github.com/NFA" target="_blank" rel="noopener">@NFA&lt;/a>,
&lt;a href="https://github.com/olehost" target="_blank" rel="noopener">@olehost&lt;/a>,
&lt;a href="https://github.com/psads-git" target="_blank" rel="noopener">@psads-git&lt;/a>,
&lt;a href="https://github.com/psychelzh" target="_blank" rel="noopener">@psychelzh&lt;/a>,
&lt;a href="https://github.com/ramiromagno" target="_blank" rel="noopener">@ramiromagno&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/TimTaylor" target="_blank" rel="noopener">@TimTaylor&lt;/a>, and
&lt;a href="https://github.com/xiangpin" target="_blank" rel="noopener">@xiangpin&lt;/a>.&lt;/p></description></item><item><title>tidyr 1.1.0</title><link>https://www.tidyverse.org/blog/2020/05/tidyr-1.1.0/</link><pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/05/tidyr-1.1.0/</guid><description>&lt;p>We&amp;rsquo;re delighted to announce that
&lt;a href="http://tidyr.tidyverse.org/" target="_blank" rel="noopener">tidyr&lt;/a> 1.1.0 is now available from CRAN. tidyr provides a set of tools for transforming data frames to and from tidy data, where each variable is a column and each observation is a row. Tidy data is a convention for matching the semantics and structure of your data that makes using the rest of the tidyverse (and many other R packages) much easier.&lt;/p>
&lt;p>You can install install tidyr with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tidyr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This release doesn&amp;rsquo;t include any major new excitement but it includes a whole passel of minor improvements building on the major changes in
&lt;a href="https://www.tidyverse.org/blog/2019/09/tidyr-1-0-0/" target="_blank" rel="noopener">tidyr 1.0.0&lt;/a>, and generally making everything easier to use and a bit more flexible. In this blog post, I&amp;rsquo;ll give a quick run down on new pivoting features; see the
&lt;a href="https://github.com/tidyverse/tidyr/releases/tag/v1.1.0" target="_blank" rel="noopener">full release announcement&lt;/a> for the details of other changes.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="pivot_longer">&lt;code>pivot_longer()&lt;/code>
&lt;a href="#pivot_longer">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;code>pivot_longer()&lt;/code> gains a new &lt;code>names_transform&lt;/code> argument that allows you to
transform column names before they turn into data. For example, you can
use this new argument along with
&lt;a href="https://readr.tidyverse.org/reference/parse_number.html" target="_blank" rel="noopener">&lt;code>readr::parse_number()&lt;/code>&lt;/a> to
parse column names that really should be numbers:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">wk1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">wk2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">wk3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">wk4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">25&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">pivot_longer&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">cols&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">starts_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;wk&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">names_to&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;week&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">names_transform&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">week&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">readr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">parse_number&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; id week value&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 1 0&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 2 4&lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 3 9&lt;/span>
&lt;span class="c1">#&amp;gt; 4 1 4 25&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>pivot_longer()&lt;/code> can now discard uninformative column names by setting
&lt;code>names_to = character()&lt;/code>, thanks to idea and implementation from
&lt;a href="https://github.com/mitchelloharawild" target="_blank" rel="noopener">Mitch O&amp;rsquo;Hara Wild&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fruitful_panda&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">angry_aardvark&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">pivot_longer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">names_to&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">character&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 4 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; id value&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 3&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 5&lt;/span>
&lt;span class="c1">#&amp;gt; 3 2 4&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 6&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>pivot_longer()&lt;/code> no longer creates a &lt;code>.copy&lt;/code> variable in the presence of
duplicate column names. This makes it more consistent with the handling
of non-unique pivot specifications.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">.name_repair&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;minimal&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">pivot_longer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 6 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; id name value&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; 3 2 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; 5 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; 6 3 x 6&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>pivot_longer()&lt;/code> automatically disambiguates non-unique outputs, which can
occur when the input variables include some additional component that you
don&amp;rsquo;t care about and want to discard. You can discard parts of column names
either with &lt;code>names_pattern&lt;/code> or with &lt;code>NA&lt;/code> in &lt;code>names_to&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x_1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y_2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y_3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">9&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">11&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">pivot_longer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">names_pattern&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;(.)_.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 9 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; id name value&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 y 4&lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 y 9&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; 5 2 y 5&lt;/span>
&lt;span class="c1">#&amp;gt; 6 2 y 10&lt;/span>
&lt;span class="c1">#&amp;gt; 7 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; 8 3 y 6&lt;/span>
&lt;span class="c1">#&amp;gt; 9 3 y 11&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">pivot_longer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">names_sep&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;_&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">names_to&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">NA&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 9 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; id name value&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 y 4&lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 y 9&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; 5 2 y 5&lt;/span>
&lt;span class="c1">#&amp;gt; 6 2 y 10&lt;/span>
&lt;span class="c1">#&amp;gt; 7 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; 8 3 y 6&lt;/span>
&lt;span class="c1">#&amp;gt; 9 3 y 11&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">pivot_longer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">names_sep&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;_&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">names_to&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;.value&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">NA&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 6 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; id x y&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 1 4&lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 NA 9&lt;/span>
&lt;span class="c1">#&amp;gt; 3 2 2 5&lt;/span>
&lt;span class="c1">#&amp;gt; 4 2 NA 10&lt;/span>
&lt;span class="c1">#&amp;gt; 5 3 3 6&lt;/span>
&lt;span class="c1">#&amp;gt; 6 3 NA 11&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="pivot_wider">&lt;code>pivot_wider()&lt;/code>
&lt;a href="#pivot_wider">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;code>pivot_wider()&lt;/code> gains a &lt;code>names_sort&lt;/code> argument which allows you to sort
column names in order. The default, &lt;code>FALSE&lt;/code>, orders columns by their
first appearance. I&amp;rsquo;m considering changing the default value to &lt;code>TRUE&lt;/code>
in a future version.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">day_int&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">day_fac&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">day_int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">labels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Mon&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Tue&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Wed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Thu&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Fri&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">pivot_wider&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">names_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">day_fac&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">values_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">day_int&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; Thu Wed Fri Mon Tue&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 4 3 5 1 2&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">pivot_wider&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">names_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">day_fac&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">names_sort&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">values_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">day_int&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 5&lt;/span>
&lt;span class="c1">#&amp;gt; Mon Tue Wed Thu Fri&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 2 3 4 5&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>pivot_wider()&lt;/code> gains a &lt;code>names_glue&lt;/code> argument that allows you to construct
output column names with a glue specification when &lt;code>names_to&lt;/code> includes
multiple columns.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">df&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">first&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">second&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">third&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;X&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">pivot_wider&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">names_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">second&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">third&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">values_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">names_glue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;{first}.{second}_{third}&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 1 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; a.1_X&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>pivot_wider()&lt;/code> arguments &lt;code>values_fn&lt;/code> and &lt;code>values_fill&lt;/code> can now be single
values; you now only need to use a named list if you want to use different
values for different value columns. You&amp;rsquo;ll also get better errors if
they&amp;rsquo;re not of the correct type.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Finally, both &lt;code>pivot_wider()&lt;/code> and &lt;code>pivot_longer()&lt;/code> are considerably more
performant, thanks largely to improvements in the underlying vctrs code
by
&lt;a href="http://github.com/DavisVaughan" target="_blank" rel="noopener">Davis Vaughn&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to all 135 people who contributed to this version of tidyr by discussing issues and suggesting new code!
&lt;a href="https://github.com/abichat" target="_blank" rel="noopener">@abichat&lt;/a>,
&lt;a href="https://github.com/abiyug" target="_blank" rel="noopener">@abiyug&lt;/a>,
&lt;a href="https://github.com/adisarid" target="_blank" rel="noopener">@adisarid&lt;/a>,
&lt;a href="https://github.com/ahmohamed" target="_blank" rel="noopener">@ahmohamed&lt;/a>,
&lt;a href="https://github.com/akikirinrin" target="_blank" rel="noopener">@akikirinrin&lt;/a>,
&lt;a href="https://github.com/albertotb" target="_blank" rel="noopener">@albertotb&lt;/a>,
&lt;a href="https://github.com/alex-pax" target="_blank" rel="noopener">@alex-pax&lt;/a>,
&lt;a href="https://github.com/amirmazmi" target="_blank" rel="noopener">@amirmazmi&lt;/a>,
&lt;a href="https://github.com/andtheWings" target="_blank" rel="noopener">@andtheWings&lt;/a>,
&lt;a href="https://github.com/ashiklom" target="_blank" rel="noopener">@ashiklom&lt;/a>,
&lt;a href="https://github.com/atusy" target="_blank" rel="noopener">@atusy&lt;/a>,
&lt;a href="https://github.com/batpigandme" target="_blank" rel="noopener">@batpigandme&lt;/a>,
&lt;a href="https://github.com/bertrandh" target="_blank" rel="noopener">@bertrandh&lt;/a>,
&lt;a href="https://github.com/BillBlanc" target="_blank" rel="noopener">@BillBlanc&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/BrianDiggs" target="_blank" rel="noopener">@BrianDiggs&lt;/a>,
&lt;a href="https://github.com/bushdanielkwajaffa" target="_blank" rel="noopener">@bushdanielkwajaffa&lt;/a>,
&lt;a href="https://github.com/cderv" target="_blank" rel="noopener">@cderv&lt;/a>,
&lt;a href="https://github.com/CGMossa" target="_blank" rel="noopener">@CGMossa&lt;/a>,
&lt;a href="https://github.com/cgoo4" target="_blank" rel="noopener">@cgoo4&lt;/a>,
&lt;a href="https://github.com/charliejhadley" target="_blank" rel="noopener">@charliejhadley&lt;/a>,
&lt;a href="https://github.com/chester-gan" target="_blank" rel="noopener">@chester-gan&lt;/a>,
&lt;a href="https://github.com/cimentadaj" target="_blank" rel="noopener">@cimentadaj&lt;/a>,
&lt;a href="https://github.com/cjvanlissa" target="_blank" rel="noopener">@cjvanlissa&lt;/a>,
&lt;a href="https://github.com/cloversleaves" target="_blank" rel="noopener">@cloversleaves&lt;/a>,
&lt;a href="https://github.com/colearendt" target="_blank" rel="noopener">@colearendt&lt;/a>,
&lt;a href="https://github.com/dah33" target="_blank" rel="noopener">@dah33&lt;/a>,
&lt;a href="https://github.com/DanOvando" target="_blank" rel="noopener">@DanOvando&lt;/a>,
&lt;a href="https://github.com/dapperjapper" target="_blank" rel="noopener">@dapperjapper&lt;/a>,
&lt;a href="https://github.com/daranzolin" target="_blank" rel="noopener">@daranzolin&lt;/a>,
&lt;a href="https://github.com/davidhunterwalsh" target="_blank" rel="noopener">@davidhunterwalsh&lt;/a>,
&lt;a href="https://github.com/davisadamw" target="_blank" rel="noopener">@davisadamw&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dchiu911" target="_blank" rel="noopener">@dchiu911&lt;/a>,
&lt;a href="https://github.com/dpastoor" target="_blank" rel="noopener">@dpastoor&lt;/a>,
&lt;a href="https://github.com/dpeterson71" target="_blank" rel="noopener">@dpeterson71&lt;/a>,
&lt;a href="https://github.com/dpprdan" target="_blank" rel="noopener">@dpprdan&lt;/a>,
&lt;a href="https://github.com/eantworth" target="_blank" rel="noopener">@eantworth&lt;/a>,
&lt;a href="https://github.com/earcanal" target="_blank" rel="noopener">@earcanal&lt;/a>,
&lt;a href="https://github.com/echasnovski" target="_blank" rel="noopener">@echasnovski&lt;/a>,
&lt;a href="https://github.com/enixam" target="_blank" rel="noopener">@enixam&lt;/a>,
&lt;a href="https://github.com/ericgunnink" target="_blank" rel="noopener">@ericgunnink&lt;/a>,
&lt;a href="https://github.com/florianm" target="_blank" rel="noopener">@florianm&lt;/a>,
&lt;a href="https://github.com/fmmattioni" target="_blank" rel="noopener">@fmmattioni&lt;/a>,
&lt;a href="https://github.com/franzbischoff" target="_blank" rel="noopener">@franzbischoff&lt;/a>,
&lt;a href="https://github.com/GegznaV" target="_blank" rel="noopener">@GegznaV&lt;/a>,
&lt;a href="https://github.com/geotheory" target="_blank" rel="noopener">@geotheory&lt;/a>,
&lt;a href="https://github.com/ggrothendieck" target="_blank" rel="noopener">@ggrothendieck&lt;/a>,
&lt;a href="https://github.com/gregorp" target="_blank" rel="noopener">@gregorp&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/HanOostdijk" target="_blank" rel="noopener">@HanOostdijk&lt;/a>,
&lt;a href="https://github.com/henry090" target="_blank" rel="noopener">@henry090&lt;/a>,
&lt;a href="https://github.com/iago-pssjd" target="_blank" rel="noopener">@iago-pssjd&lt;/a>,
&lt;a href="https://github.com/ifellows" target="_blank" rel="noopener">@ifellows&lt;/a>,
&lt;a href="https://github.com/infotroph" target="_blank" rel="noopener">@infotroph&lt;/a>,
&lt;a href="https://github.com/jam1015" target="_blank" rel="noopener">@jam1015&lt;/a>,
&lt;a href="https://github.com/jannikbuhr" target="_blank" rel="noopener">@jannikbuhr&lt;/a>,
&lt;a href="https://github.com/jasonpcasey" target="_blank" rel="noopener">@jasonpcasey&lt;/a>,
&lt;a href="https://github.com/jeffreypullin" target="_blank" rel="noopener">@jeffreypullin&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jenren" target="_blank" rel="noopener">@jenren&lt;/a>,
&lt;a href="https://github.com/JenspederM" target="_blank" rel="noopener">@JenspederM&lt;/a>,
&lt;a href="https://github.com/jeonghyunwoo" target="_blank" rel="noopener">@jeonghyunwoo&lt;/a>,
&lt;a href="https://github.com/jjnote" target="_blank" rel="noopener">@jjnote&lt;/a>,
&lt;a href="https://github.com/jmh530" target="_blank" rel="noopener">@jmh530&lt;/a>,
&lt;a href="https://github.com/JohnCoene" target="_blank" rel="noopener">@JohnCoene&lt;/a>,
&lt;a href="https://github.com/joshua-theisen" target="_blank" rel="noopener">@joshua-theisen&lt;/a>,
&lt;a href="https://github.com/JosiahParry" target="_blank" rel="noopener">@JosiahParry&lt;/a>,
&lt;a href="https://github.com/jthomasmock" target="_blank" rel="noopener">@jthomasmock&lt;/a>,
&lt;a href="https://github.com/jwilliman" target="_blank" rel="noopener">@jwilliman&lt;/a>,
&lt;a href="https://github.com/kaneplusplus" target="_blank" rel="noopener">@kaneplusplus&lt;/a>,
&lt;a href="https://github.com/kaybenleroll" target="_blank" rel="noopener">@kaybenleroll&lt;/a>,
&lt;a href="https://github.com/kent37" target="_blank" rel="noopener">@kent37&lt;/a>,
&lt;a href="https://github.com/kiernann" target="_blank" rel="noopener">@kiernann&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/Ljupch0" target="_blank" rel="noopener">@Ljupch0&lt;/a>,
&lt;a href="https://github.com/lymanmark" target="_blank" rel="noopener">@lymanmark&lt;/a>,
&lt;a href="https://github.com/maelle" target="_blank" rel="noopener">@maelle&lt;/a>,
&lt;a href="https://github.com/majazaloznik" target="_blank" rel="noopener">@majazaloznik&lt;/a>,
&lt;a href="https://github.com/mattantaliss" target="_blank" rel="noopener">@mattantaliss&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/maurolepore" target="_blank" rel="noopener">@maurolepore&lt;/a>,
&lt;a href="https://github.com/md0u80c9" target="_blank" rel="noopener">@md0u80c9&lt;/a>,
&lt;a href="https://github.com/mgirlich" target="_blank" rel="noopener">@mgirlich&lt;/a>,
&lt;a href="https://github.com/MikeEdinger" target="_blank" rel="noopener">@MikeEdinger&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/mikmart" target="_blank" rel="noopener">@mikmart&lt;/a>,
&lt;a href="https://github.com/mitchelloharawild" target="_blank" rel="noopener">@mitchelloharawild&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/msberends" target="_blank" rel="noopener">@msberends&lt;/a>,
&lt;a href="https://github.com/msgoussi" target="_blank" rel="noopener">@msgoussi&lt;/a>,
&lt;a href="https://github.com/mstackhouse" target="_blank" rel="noopener">@mstackhouse&lt;/a>,
&lt;a href="https://github.com/MyKo101" target="_blank" rel="noopener">@MyKo101&lt;/a>,
&lt;a href="https://github.com/nacnudus" target="_blank" rel="noopener">@nacnudus&lt;/a>,
&lt;a href="https://github.com/namelessjon" target="_blank" rel="noopener">@namelessjon&lt;/a>,
&lt;a href="https://github.com/ndrewGele" target="_blank" rel="noopener">@ndrewGele&lt;/a>,
&lt;a href="https://github.com/Nicktz" target="_blank" rel="noopener">@Nicktz&lt;/a>,
&lt;a href="https://github.com/npjc" target="_blank" rel="noopener">@npjc&lt;/a>,
&lt;a href="https://github.com/osorensen" target="_blank" rel="noopener">@osorensen&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>,
&lt;a href="https://github.com/philipp-baumann" target="_blank" rel="noopener">@philipp-baumann&lt;/a>,
&lt;a href="https://github.com/PMSeitzer" target="_blank" rel="noopener">@PMSeitzer&lt;/a>,
&lt;a href="https://github.com/psychelzh" target="_blank" rel="noopener">@psychelzh&lt;/a>,
&lt;a href="https://github.com/randomgambit" target="_blank" rel="noopener">@randomgambit&lt;/a>,
&lt;a href="https://github.com/riinuots" target="_blank" rel="noopener">@riinuots&lt;/a>,
&lt;a href="https://github.com/romagnolid" target="_blank" rel="noopener">@romagnolid&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/rvino" target="_blank" rel="noopener">@rvino&lt;/a>,
&lt;a href="https://github.com/salim-b" target="_blank" rel="noopener">@salim-b&lt;/a>,
&lt;a href="https://github.com/shanepiesik" target="_blank" rel="noopener">@shanepiesik&lt;/a>,
&lt;a href="https://github.com/shannonpileggi" target="_blank" rel="noopener">@shannonpileggi&lt;/a>,
&lt;a href="https://github.com/sharleenw" target="_blank" rel="noopener">@sharleenw&lt;/a>,
&lt;a href="https://github.com/siddharthprabhu" target="_blank" rel="noopener">@siddharthprabhu&lt;/a>,
&lt;a href="https://github.com/simazhi" target="_blank" rel="noopener">@simazhi&lt;/a>,
&lt;a href="https://github.com/skr5k" target="_blank" rel="noopener">@skr5k&lt;/a>,
&lt;a href="https://github.com/skydavis435" target="_blank" rel="noopener">@skydavis435&lt;/a>,
&lt;a href="https://github.com/smingerson" target="_blank" rel="noopener">@smingerson&lt;/a>,
&lt;a href="https://github.com/smithjd" target="_blank" rel="noopener">@smithjd&lt;/a>,
&lt;a href="https://github.com/srnnkls" target="_blank" rel="noopener">@srnnkls&lt;/a>,
&lt;a href="https://github.com/stragu" target="_blank" rel="noopener">@stragu&lt;/a>,
&lt;a href="https://github.com/stufield" target="_blank" rel="noopener">@stufield&lt;/a>,
&lt;a href="https://github.com/tangcxx" target="_blank" rel="noopener">@tangcxx&lt;/a>,
&lt;a href="https://github.com/tdhock" target="_blank" rel="noopener">@tdhock&lt;/a>,
&lt;a href="https://github.com/the-Zian" target="_blank" rel="noopener">@the-Zian&lt;/a>,
&lt;a href="https://github.com/tomhopper" target="_blank" rel="noopener">@tomhopper&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/wgrundlingh" target="_blank" rel="noopener">@wgrundlingh&lt;/a>,
&lt;a href="https://github.com/wibeasley" target="_blank" rel="noopener">@wibeasley&lt;/a>,
&lt;a href="https://github.com/william3031" target="_blank" rel="noopener">@william3031&lt;/a>,
&lt;a href="https://github.com/wmoldham" target="_blank" rel="noopener">@wmoldham&lt;/a>,
&lt;a href="https://github.com/wolski" target="_blank" rel="noopener">@wolski&lt;/a>,
&lt;a href="https://github.com/xkdog" target="_blank" rel="noopener">@xkdog&lt;/a>,
&lt;a href="https://github.com/xtimbeau" target="_blank" rel="noopener">@xtimbeau&lt;/a>, and
&lt;a href="https://github.com/yusuzech" target="_blank" rel="noopener">@yusuzech&lt;/a>.&lt;/p></description></item><item><title>tidyr 1.0.0</title><link>https://www.tidyverse.org/blog/2019/09/tidyr-1-0-0/</link><pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2019/09/tidyr-1-0-0/</guid><description>&lt;p>I&amp;rsquo;m very excited to announce the release of
&lt;a href="https://tidyr.tidyverse.org" target="_blank" rel="noopener">tidyr 1.0.0&lt;/a>! tidyr provides a set of tools for transforming data frames to and from
&lt;a href="https://tidyr.tidyverse.org/articles/tidy-data.html" target="_blank" rel="noopener">tidy data&lt;/a>, where each variable is a column and each observation is a row. Tidy data is a convention for matching the semantics and structure of your data that makes using the rest of the tidyverse (and many other R packages) much easier.&lt;/p>
&lt;p>Install tidyr with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tidyr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you might guess from the version number, this is a major release, and the 1.0.0 moniker indicates that I&amp;rsquo;m finally happy with the overall interface of the package. This has been a long time coming: it&amp;rsquo;s five years since the first tidyr release, nine years since the first reshape2 release, and fourteen years since the first reshape release!&lt;/p>
&lt;p>This blog post summarises the four major changes to the package:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>New &lt;code>pivot_longer()&lt;/code> and &lt;code>pivot_wider()&lt;/code> provide improved tools for reshaping,
superceding &lt;code>spread()&lt;/code> and &lt;code>gather()&lt;/code>. The new functions are substantially
more powerful, thanks to ideas from the
&lt;a href="https://CRAN.R-project.org/package=data.table" target="_blank" rel="noopener">data.table&lt;/a> and
&lt;a href="https://CRAN.R-project.org/package=cdata" target="_blank" rel="noopener">cdata&lt;/a> packages, and I&amp;rsquo;m
confident that you&amp;rsquo;ll find them easier to use and remember than their
predecessors.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New &lt;code>unnest_auto()&lt;/code>, &lt;code>unnest_longer()&lt;/code>, &lt;code>unnest_wider()&lt;/code>, and &lt;code>hoist()&lt;/code>
provide new tools for rectangling, converting deeply nested lists into tidy
data frames.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>nest()&lt;/code> and &lt;code>unnest()&lt;/code> have been changed to match an emerging principle for
the design of &lt;code>...&lt;/code> interfaces. Four new functions (&lt;code>pack()&lt;/code>/&lt;code>unpack()&lt;/code>, and
&lt;code>chop()&lt;/code>/&lt;code>unchop()&lt;/code>) reveal that nesting is the combination of two simpler
steps.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New &lt;code>expand_grid()&lt;/code>, a variant of &lt;code>base::expand.grid()&lt;/code>. This is a useful
function to know about, but also serves as a good reason to discuss the
important role that
&lt;a href="http://vctrs.r-lib.org/" target="_blank" rel="noopener">vctrs&lt;/a> plays behind the scenes.
You shouldn&amp;rsquo;t ever &lt;em>have&lt;/em> to learn about vctrs, but it brings improvements to
consistency and performance.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>As well as implementing the new features, I&amp;rsquo;ve spent considerable time on the documentation, including four major new vignettes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://tidyr.tidyverse.org/articles/pivot.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;pivot&amp;quot;)&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/articles/rectangle.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;rectangle&amp;quot;)&lt;/code>&lt;/a>,
and
&lt;a href="https://tidyr.tidyverse.org/articles/nest.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;nest&amp;quot;)&lt;/code>&lt;/a>
provide detailed documentation and case studies of pivotting, rectangling,
and nesting respectively.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://tidyr.tidyverse.org/articles/in-packages.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;in-packages&amp;quot;)&lt;/code>&lt;/a>
provides best practices for using tidyr inside
another package, and detailed advice on working with multiple
versions of tidyr if an interface change has affected your package.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>You can see a list of all the other minor bug fixes and improvements in the
&lt;a href="https://tidyr.tidyverse.org/news/index.html#tidyr-1-0-0" target="_blank" rel="noopener">release notes&lt;/a>. I strongly recommend reading the complete release notes if you&amp;rsquo;re a package developer.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dplyr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="pivoting">Pivoting
&lt;a href="#pivoting">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>New
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_longer.html" target="_blank" rel="noopener">&lt;code>pivot_longer()&lt;/code>&lt;/a> and
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_wider.html" target="_blank" rel="noopener">&lt;code>pivot_wider()&lt;/code>&lt;/a> provide modern alternatives to &lt;code>spread()&lt;/code> and &lt;code>gather()&lt;/code>. They have been carefully redesigned to be easier to learn and remember, and include many new features. &lt;code>spread()&lt;/code> and &lt;code>gather()&lt;/code> won&amp;rsquo;t go away, but they&amp;rsquo;ve been retired which means that they&amp;rsquo;re no longer under active development.&lt;/p>
&lt;p>The best place to learn about &lt;code>pivot_longer()&lt;/code> and &lt;code>pivot_wider()&lt;/code> is
&lt;a href="https://tidyr.tidyverse.org/articles/pivot.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;pivot&amp;quot;)&lt;/code>&lt;/a>, or by watching my presentation to the
&lt;a href="https://www.youtube.com/watch?v=D48JHU4llkk" target="_blank" rel="noopener">Vienna R users group&lt;/a>. Here I&amp;rsquo;ll quickly show off a few of the coolest new features:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>pivot_longer()&lt;/code> can now separate column names into multiple variables in
a single step. For example, take the &lt;code>who&lt;/code> dataset which has column names
that look like &lt;code>new_{diagnosis}_{gender}{age}&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">names&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">who&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;country&amp;#34; &amp;#34;iso2&amp;#34; &amp;#34;iso3&amp;#34; &amp;#34;year&amp;#34; &lt;/span>
&lt;span class="c1">#&amp;gt; [5] &amp;#34;new_sp_m014&amp;#34; &amp;#34;new_sp_m1524&amp;#34; &amp;#34;new_sp_m2534&amp;#34; &amp;#34;new_sp_m3544&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [9] &amp;#34;new_sp_m4554&amp;#34; &amp;#34;new_sp_m5564&amp;#34; &amp;#34;new_sp_m65&amp;#34; &amp;#34;new_sp_f014&amp;#34; &lt;/span>
&lt;span class="c1">#&amp;gt; [13] &amp;#34;new_sp_f1524&amp;#34; &amp;#34;new_sp_f2534&amp;#34; &amp;#34;new_sp_f3544&amp;#34; &amp;#34;new_sp_f4554&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [17] &amp;#34;new_sp_f5564&amp;#34; &amp;#34;new_sp_f65&amp;#34; &amp;#34;new_sn_m014&amp;#34; &amp;#34;new_sn_m1524&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [21] &amp;#34;new_sn_m2534&amp;#34; &amp;#34;new_sn_m3544&amp;#34; &amp;#34;new_sn_m4554&amp;#34; &amp;#34;new_sn_m5564&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [25] &amp;#34;new_sn_m65&amp;#34; &amp;#34;new_sn_f014&amp;#34; &amp;#34;new_sn_f1524&amp;#34; &amp;#34;new_sn_f2534&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [29] &amp;#34;new_sn_f3544&amp;#34; &amp;#34;new_sn_f4554&amp;#34; &amp;#34;new_sn_f5564&amp;#34; &amp;#34;new_sn_f65&amp;#34; &lt;/span>
&lt;span class="c1">#&amp;gt; [33] &amp;#34;new_ep_m014&amp;#34; &amp;#34;new_ep_m1524&amp;#34; &amp;#34;new_ep_m2534&amp;#34; &amp;#34;new_ep_m3544&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [37] &amp;#34;new_ep_m4554&amp;#34; &amp;#34;new_ep_m5564&amp;#34; &amp;#34;new_ep_m65&amp;#34; &amp;#34;new_ep_f014&amp;#34; &lt;/span>
&lt;span class="c1">#&amp;gt; [41] &amp;#34;new_ep_f1524&amp;#34; &amp;#34;new_ep_f2534&amp;#34; &amp;#34;new_ep_f3544&amp;#34; &amp;#34;new_ep_f4554&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [45] &amp;#34;new_ep_f5564&amp;#34; &amp;#34;new_ep_f65&amp;#34; &amp;#34;newrel_m014&amp;#34; &amp;#34;newrel_m1524&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [49] &amp;#34;newrel_m2534&amp;#34; &amp;#34;newrel_m3544&amp;#34; &amp;#34;newrel_m4554&amp;#34; &amp;#34;newrel_m5564&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [53] &amp;#34;newrel_m65&amp;#34; &amp;#34;newrel_f014&amp;#34; &amp;#34;newrel_f1524&amp;#34; &amp;#34;newrel_f2534&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [57] &amp;#34;newrel_f3544&amp;#34; &amp;#34;newrel_f4554&amp;#34; &amp;#34;newrel_f5564&amp;#34; &amp;#34;newrel_f65&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now tease apart the variable names in a single step
(i.e. without
&lt;a href="https://tidyr.tidyverse.org/reference/separate.html" target="_blank" rel="noopener">&lt;code>separate()&lt;/code>&lt;/a>))
by supplying a vector of variable names to &lt;code>names_to&lt;/code> and a regular
expression to &lt;code>names_pattern&lt;/code> (simpler cases might only need &lt;code>names_sep&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">who&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">pivot_longer&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">cols&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new_sp_m014&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">newrel_f65&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">names_to&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;diagnosis&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;gender&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;age&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">names_pattern&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;new_?(.*)_(.)(.*)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">values_to&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;count&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">values_drop_na&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 76,046 x 8&lt;/span>
&lt;span class="c1">#&amp;gt; country iso2 iso3 year diagnosis gender age count&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Afghanistan AF AFG 1997 sp m 014 0&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Afghanistan AF AFG 1997 sp m 1524 10&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Afghanistan AF AFG 1997 sp m 2534 6&lt;/span>
&lt;span class="c1">#&amp;gt; 4 Afghanistan AF AFG 1997 sp m 3544 3&lt;/span>
&lt;span class="c1">#&amp;gt; 5 Afghanistan AF AFG 1997 sp m 4554 5&lt;/span>
&lt;span class="c1">#&amp;gt; 6 Afghanistan AF AFG 1997 sp m 5564 2&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 7.604e+04 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>pivot_longer()&lt;/code> can now work with rows that contain multiple observations
(this feature was inspired by data.table&amp;rsquo;s &lt;code>dcast()&lt;/code> method). For example,
take the base &lt;code>anscombe&lt;/code> dataset. Each row consists of four pairs of
&lt;code>x&lt;/code> and &lt;code>y&lt;/code> measurements:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">head&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">anscombe&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; x1 x2 x3 x4 y1 y2 y3 y4&lt;/span>
&lt;span class="c1">#&amp;gt; 1 10 10 10 8 8.04 9.14 7.46 6.58&lt;/span>
&lt;span class="c1">#&amp;gt; 2 8 8 8 8 6.95 8.14 6.77 5.76&lt;/span>
&lt;span class="c1">#&amp;gt; 3 13 13 13 8 7.58 8.74 12.74 7.71&lt;/span>
&lt;span class="c1">#&amp;gt; 4 9 9 9 8 8.81 8.77 7.11 8.84&lt;/span>
&lt;span class="c1">#&amp;gt; 5 11 11 11 8 8.33 9.26 7.81 8.47&lt;/span>
&lt;span class="c1">#&amp;gt; 6 14 14 14 8 9.96 8.10 8.84 7.04&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can now tidy this in a single step by using the special &lt;code>.value&lt;/code>
variable name:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">anscombe&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pivot_longer&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="nf">everything&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">names_to&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;.value&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;set&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">names_pattern&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;(.)(.)&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 44 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; set x y&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 10 8.04&lt;/span>
&lt;span class="c1">#&amp;gt; 2 2 10 9.14&lt;/span>
&lt;span class="c1">#&amp;gt; 3 3 10 7.46&lt;/span>
&lt;span class="c1">#&amp;gt; 4 4 8 6.58&lt;/span>
&lt;span class="c1">#&amp;gt; 5 1 8 6.95&lt;/span>
&lt;span class="c1">#&amp;gt; 6 2 8 8.14&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 38 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>pivot_wider()&lt;/code> can now do simple aggregations (&lt;code>reshape2::dcast()&lt;/code> fans
rejoice!). For example, take the base &lt;code>warpbreaks&lt;/code> dataset (converted to a
tibble to print more compactly):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">warpbreaks&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">warpbreaks&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">as_tibble&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wool&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tension&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">breaks&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">warpbreaks&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 54 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; wool tension breaks&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 A L 26&lt;/span>
&lt;span class="c1">#&amp;gt; 2 A L 30&lt;/span>
&lt;span class="c1">#&amp;gt; 3 A L 54&lt;/span>
&lt;span class="c1">#&amp;gt; 4 A L 25&lt;/span>
&lt;span class="c1">#&amp;gt; 5 A L 70&lt;/span>
&lt;span class="c1">#&amp;gt; 6 A L 52&lt;/span>
&lt;span class="c1">#&amp;gt; # … with 48 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is a designed experiment with nine replicates for every combination of
&lt;code>wool&lt;/code> (&lt;code>A&lt;/code> and &lt;code>B&lt;/code>) and &lt;code>tension&lt;/code> (&lt;code>L&lt;/code>, &lt;code>M&lt;/code>, &lt;code>H&lt;/code>). If we attempt to pivot
the levels of &lt;code>wool&lt;/code> into the columns, we get a warning and the output
contains list-columns:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">warpbreaks&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">pivot_wider&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">names_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wool&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">values_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">breaks&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Warning: Values in `breaks` are not uniquely identified; output will contain list-cols.&lt;/span>
&lt;span class="c1">#&amp;gt; * Use `values_fn = list(breaks = list)` to suppress this warning.&lt;/span>
&lt;span class="c1">#&amp;gt; * Use `values_fn = list(breaks = length)` to identify where the duplicates arise&lt;/span>
&lt;span class="c1">#&amp;gt; * Use `values_fn = list(breaks = summary_fun)` to summarise duplicates&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; tension A B&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;list&amp;lt;dbl&amp;gt;&amp;gt; &amp;lt;list&amp;lt;dbl&amp;gt;&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 L [9] [9]&lt;/span>
&lt;span class="c1">#&amp;gt; 2 M [9] [9]&lt;/span>
&lt;span class="c1">#&amp;gt; 3 H [9] [9]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now summarise the duplicates with the &lt;code>values_fn&lt;/code> argument:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">warpbreaks&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pivot_wider&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">names_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wool&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">values_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">breaks&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">values_fn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">breaks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mean&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; tension A B&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 L 44.6 28.2&lt;/span>
&lt;span class="c1">#&amp;gt; 2 M 24 28.8&lt;/span>
&lt;span class="c1">#&amp;gt; 3 H 24.6 18.8&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>Learn the full details and see many more examples in
&lt;a href="http://tidyr.tidyverse.org/articles/pivot.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;pivot&amp;quot;)&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="rectangling">Rectangling
&lt;a href="#rectangling">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Rectangling is the art and craft of taking a deeply nested list (often sourced from wild-caught JSON or XML) and taming it into a tidy data set of rows and columns. tidyr 1.0.0 provides four new functions to aid rectangling:&lt;/p>
&lt;ul>
&lt;li>&lt;code>unnest_longer()&lt;/code> takes each element of a list-column and makes a new row.&lt;/li>
&lt;li>&lt;code>unnest_wider()&lt;/code> takes each element of a list-column and makes a new column.&lt;/li>
&lt;li>&lt;code>unnest_auto()&lt;/code> uses some heuristics to guess whether you want
&lt;code>unnest_longer()&lt;/code> or &lt;code>unnest_wider()&lt;/code>.&lt;/li>
&lt;li>&lt;code>hoist()&lt;/code> is similar to &lt;code>unnest_wider()&lt;/code> but only plucks out selected
components, and can reach down multiple levels.&lt;/li>
&lt;/ul>
&lt;p>To see them in action, take this small sample from &lt;code>repurrrsive::got_chars&lt;/code>. It contains data about three characters from the Game of Thrones:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">characters&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Theon Greyjoy&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">aliases&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Prince of Fools&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Theon Turncloak&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Theon Kinslayer&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">alive&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>
&lt;span class="p">),&lt;/span>
&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Tyrion Lannister&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">aliases&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The Imp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Halfman&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Giant of Lannister&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">alive&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>
&lt;span class="p">),&lt;/span>
&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Arys Oakheart&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">alive&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To work with the new tidyr rectangling tools, we first put the list into a data frame, creating a list-column:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">got&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tibble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">character&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">characters&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">got&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 1&lt;/span>
&lt;span class="c1">#&amp;gt; character &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 &amp;lt;named list [3]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 &amp;lt;named list [3]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 3 &amp;lt;named list [2]&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can then use &lt;code>unnest_wider()&lt;/code> to make each element of that list into a column:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">got&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">unnest_wider&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">character&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; name aliases alive&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt; &amp;lt;lgl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Theon Greyjoy &amp;lt;chr [3]&amp;gt; TRUE &lt;/span>
&lt;span class="c1">#&amp;gt; 2 Tyrion Lannister &amp;lt;chr [3]&amp;gt; TRUE &lt;/span>
&lt;span class="c1">#&amp;gt; 3 Arys Oakheart &amp;lt;???&amp;gt; FALSE&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Followed by &lt;code>unnest_longer()&lt;/code> to turn each alias into its own row:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">got&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">unnest_wider&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">character&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">unnest_longer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aliases&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 7 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; name aliases alive&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;lgl&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 Theon Greyjoy Prince of Fools TRUE &lt;/span>
&lt;span class="c1">#&amp;gt; 2 Theon Greyjoy Theon Turncloak TRUE &lt;/span>
&lt;span class="c1">#&amp;gt; 3 Theon Greyjoy Theon Kinslayer TRUE &lt;/span>
&lt;span class="c1">#&amp;gt; 4 Tyrion Lannister The Imp TRUE &lt;/span>
&lt;span class="c1">#&amp;gt; 5 Tyrion Lannister Halfman TRUE &lt;/span>
&lt;span class="c1">#&amp;gt; 6 Tyrion Lannister Giant of Lannister TRUE &lt;/span>
&lt;span class="c1">#&amp;gt; 7 Arys Oakheart &amp;lt;NA&amp;gt; FALSE&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Even more conveniently, you can use &lt;code>unnest_auto()&lt;/code> to guess which direction a list column should be unnested in. Here it yields the same results as above, and the messages tell you why:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">got&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">unnest_auto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">character&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">unnest_auto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aliases&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Using `unnest_wider(character)`; elements have 2 names in common&lt;/span>
&lt;span class="c1">#&amp;gt; Using `unnest_longer(aliases)`; no element has names&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alternatively, you can use &lt;code>hoist()&lt;/code> to reach deeply into a data structure and put out just the pieces you need:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">got&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">hoist&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">character&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">alias&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;aliases&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">alive&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;alive&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 3 x 4&lt;/span>
&lt;span class="c1">#&amp;gt; name alias alive character &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;list&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; 1 Theon Greyjoy Prince of Fools TRUE &amp;lt;named list [1]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 2 Tyrion Lannister The Imp TRUE &amp;lt;named list [1]&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 3 Arys Oakheart &amp;lt;NA&amp;gt; FALSE &amp;lt;named list [0]&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This syntax provides a more approachable alternative to using &lt;code>purrr::map()&lt;/code> inside &lt;code>dplyr::mutate()&lt;/code>, as we&amp;rsquo;d previously recommended:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">got&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">purrr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">map_chr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">character&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">alias&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">purrr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">map_chr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">character&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;aliases&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">.default&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">NA&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">alive&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">purrr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">map_lgl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">character&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;alive&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Learn more in
&lt;a href="http://tidyr.tidyverse.org/articles/rectangle.html" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;rectangle&amp;quot;)&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="nesting">Nesting
&lt;a href="#nesting">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>nest()&lt;/code> and &lt;code>unnest()&lt;/code> have been updated with new interfaces that are more closely aligned to evolving tidyverse conventions. The biggest change is to their operation with multiple columns:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="c1"># old&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">nest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># new&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">nest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1"># old&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">unnest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># new&lt;/span>
&lt;span class="n">df&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">unnest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I&amp;rsquo;ve done my best to ensure that common uses of &lt;code>nest()&lt;/code> and &lt;code>unnest()&lt;/code> will continue to work, generating an informative warning telling you precisely how you need to update your code. If this doesn&amp;rsquo;t work, you can use &lt;code>nest_legacy()&lt;/code> or &lt;code>unnest_legacy()&lt;/code> to access the previous interfaces; see
&lt;a href="https://tidyr.tidyverse.org/articles/in-packages.html#tidyr-v0-8-3---v1-0-0" target="_blank" rel="noopener">&lt;code>vignette(&amp;quot;in-packages&amp;quot;)&lt;/code>&lt;/a> for more advice on managing this transition.&lt;/p>
&lt;p>Behind the scenes, I discovered that nesting (and unnesting) can be decomposed into the combination of two simpler operations:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>pack()&lt;/code> and &lt;code>unpack()&lt;/code> multiple columns into and out of a data
frame column.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>chop()&lt;/code> and &lt;code>unchop()&lt;/code> chop up rows into and out of list-columns. It&amp;rsquo;s
a bit like an explicit form of &lt;code>dplyr::group_by()&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://www.tidyverse.org/images/tidyr-1-0-0/nest-pack-chop.png" width="480" height="352" />&lt;/p>
&lt;p>This is primarily of internal interest, but it considerably simplifies the implementation of &lt;code>nest()&lt;/code>, and you may occasionally find the underlying functions useful when working with exotic data structures.&lt;/p>
&lt;h2 id="expand_grid">&lt;code>expand_grid()&lt;/code>
&lt;a href="#expand_grid">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://tidyr.tidyverse.org/reference/expand_grid.html" target="_blank" rel="noopener">&lt;code>expand_grid()&lt;/code>&lt;/a> completes the existing family of &lt;code>expand()&lt;/code>, &lt;code>nesting()&lt;/code>, and &lt;code>crossing()&lt;/code> with a low-level function that works with vectors:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expand_grid&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">letters&lt;/span>&lt;span class="n">[1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="n">]&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">LETTERS&lt;/span>&lt;span class="n">[1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="n">]&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 27 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; x y z &lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 1 a A &lt;/span>
&lt;span class="c1">#&amp;gt; 2 1 a B &lt;/span>
&lt;span class="c1">#&amp;gt; 3 1 a C &lt;/span>
&lt;span class="c1">#&amp;gt; 4 1 b A &lt;/span>
&lt;span class="c1">#&amp;gt; 5 1 b B &lt;/span>
&lt;span class="c1">#&amp;gt; 6 1 b C &lt;/span>
&lt;span class="c1">#&amp;gt; # … with 21 more rows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compared to the existing base function &lt;code>expand.grid()&lt;/code>, &lt;code>expand_grid()&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>Varies the first element most slowly (not most quickly).&lt;/li>
&lt;li>Never converts strings to factors and doesn&amp;rsquo;t add any additional attributes.&lt;/li>
&lt;li>Returns a tibble, not a data frame.&lt;/li>
&lt;li>Can expand data frames.&lt;/li>
&lt;/ul>
&lt;p>The last feature is quite powerful, as it allows you to generate partial grids:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">students&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">tribble&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="o">~&lt;/span> &lt;span class="n">school&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">student&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;John&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Mary&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Susan&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;B&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;John&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nf">expand_grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">students&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">semester&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 8 x 3&lt;/span>
&lt;span class="c1">#&amp;gt; school student semester&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 A John 1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 A John 2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 A Mary 1&lt;/span>
&lt;span class="c1">#&amp;gt; 4 A Mary 2&lt;/span>
&lt;span class="c1">#&amp;gt; 5 A Susan 1&lt;/span>
&lt;span class="c1">#&amp;gt; 6 A Susan 2&lt;/span>
&lt;span class="c1">#&amp;gt; 7 B John 1&lt;/span>
&lt;span class="c1">#&amp;gt; 8 B John 2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is made possible by the
&lt;a href="https://vctrs.r-lib.org" target="_blank" rel="noopener">vctrs&lt;/a> package. vctrs is primarily of interest to package developers but I want to talk about it briefly here because I&amp;rsquo;ve been having a lot of fun working with it. It&amp;rsquo;s hard to concisely describe vctrs, but one aspect is carefully defining what a &amp;ldquo;vector&amp;rdquo; is, and providing a set of useful functions that work on all types of vctrs, without any special cases. One interesting finding is that thinking of a data frame as a vector of &lt;em>rows&lt;/em> (not columns, as R usually does) is suprisingly useful, and something you can expect to see in more places in the tidyverse in the future.&lt;/p>
&lt;p>Note that when data frame inputs are unnamed, they&amp;rsquo;re automatically unpacked into individual columns in the output. It&amp;rsquo;s also possible to create a column that is itself a data frame, a &lt;strong>df-column&lt;/strong>, if you name it:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expand_grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">student&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">students&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">semester&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; # A tibble: 8 x 2&lt;/span>
&lt;span class="c1">#&amp;gt; student$school $student semester&lt;/span>
&lt;span class="c1">#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;&lt;/span>
&lt;span class="c1">#&amp;gt; 1 A John 1&lt;/span>
&lt;span class="c1">#&amp;gt; 2 A John 2&lt;/span>
&lt;span class="c1">#&amp;gt; 3 A Mary 1&lt;/span>
&lt;span class="c1">#&amp;gt; 4 A Mary 2&lt;/span>
&lt;span class="c1">#&amp;gt; 5 A Susan 1&lt;/span>
&lt;span class="c1">#&amp;gt; 6 A Susan 2&lt;/span>
&lt;span class="c1">#&amp;gt; 7 B John 1&lt;/span>
&lt;span class="c1">#&amp;gt; 8 B John 2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Df-columns aren&amp;rsquo;t particularly useful yet, but they provide powerful building blocks for future extensions. For example, we expect a future version of dplyr will support df-columns as a way for &lt;code>mutate()&lt;/code> and &lt;code>summarise()&lt;/code> to create multiple new columns from a single function call.&lt;/p>
&lt;h2 id="thanks">Thanks
&lt;a href="#thanks">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A big thanks to all 95 people who help to make this release possible!
&lt;a href="https://github.com/abiyug" target="_blank" rel="noopener">@abiyug&lt;/a>,
&lt;a href="https://github.com/AdvikS" target="_blank" rel="noopener">@AdvikS&lt;/a>,
&lt;a href="https://github.com/ahcyip" target="_blank" rel="noopener">@ahcyip&lt;/a>,
&lt;a href="https://github.com/alexpghayes" target="_blank" rel="noopener">@alexpghayes&lt;/a>,
&lt;a href="https://github.com/aneisse" target="_blank" rel="noopener">@aneisse&lt;/a>,
&lt;a href="https://github.com/apreshill" target="_blank" rel="noopener">@apreshill&lt;/a>,
&lt;a href="https://github.com/atusy" target="_blank" rel="noopener">@atusy&lt;/a>,
&lt;a href="https://github.com/ax42" target="_blank" rel="noopener">@ax42&lt;/a>,
&lt;a href="https://github.com/banfai" target="_blank" rel="noopener">@banfai&lt;/a>,
&lt;a href="https://github.com/billdenney" target="_blank" rel="noopener">@billdenney&lt;/a>,
&lt;a href="https://github.com/brentthorne" target="_blank" rel="noopener">@brentthorne&lt;/a>,
&lt;a href="https://github.com/brunj7" target="_blank" rel="noopener">@brunj7&lt;/a>,
&lt;a href="https://github.com/coolbutuseless" target="_blank" rel="noopener">@coolbutuseless&lt;/a>,
&lt;a href="https://github.com/courtiol" target="_blank" rel="noopener">@courtiol&lt;/a>,
&lt;a href="https://github.com/cwickham" target="_blank" rel="noopener">@cwickham&lt;/a>,
&lt;a href="https://github.com/DanielReedOcean" target="_blank" rel="noopener">@DanielReedOcean&lt;/a>,
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">@DavisVaughan&lt;/a>,
&lt;a href="https://github.com/dewittpe" target="_blank" rel="noopener">@dewittpe&lt;/a>,
&lt;a href="https://github.com/donboyd5" target="_blank" rel="noopener">@donboyd5&lt;/a>,
&lt;a href="https://github.com/earowang" target="_blank" rel="noopener">@earowang&lt;/a>,
&lt;a href="https://github.com/eElor" target="_blank" rel="noopener">@eElor&lt;/a>,
&lt;a href="https://github.com/enricoferrero" target="_blank" rel="noopener">@enricoferrero&lt;/a>,
&lt;a href="https://github.com/fresques" target="_blank" rel="noopener">@fresques&lt;/a>,
&lt;a href="https://github.com/garrettgman" target="_blank" rel="noopener">@garrettgman&lt;/a>,
&lt;a href="https://github.com/gederajeg" target="_blank" rel="noopener">@gederajeg&lt;/a>,
&lt;a href="https://github.com/georgevbsantiago" target="_blank" rel="noopener">@georgevbsantiago&lt;/a>,
&lt;a href="https://github.com/giocomai" target="_blank" rel="noopener">@giocomai&lt;/a>,
&lt;a href="https://github.com/gireeshkbogu" target="_blank" rel="noopener">@gireeshkbogu&lt;/a>,
&lt;a href="https://github.com/gorkang" target="_blank" rel="noopener">@gorkang&lt;/a>,
&lt;a href="https://github.com/ha0ye" target="_blank" rel="noopener">@ha0ye&lt;/a>,
&lt;a href="https://github.com/hadley" target="_blank" rel="noopener">@hadley&lt;/a>,
&lt;a href="https://github.com/hplieninger" target="_blank" rel="noopener">@hplieninger&lt;/a>,
&lt;a href="https://github.com/iago-pssjd" target="_blank" rel="noopener">@iago-pssjd&lt;/a>,
&lt;a href="https://github.com/IndrajeetPatil" target="_blank" rel="noopener">@IndrajeetPatil&lt;/a>,
&lt;a href="https://github.com/jackdolgin" target="_blank" rel="noopener">@jackdolgin&lt;/a>,
&lt;a href="https://github.com/japhir" target="_blank" rel="noopener">@japhir&lt;/a>,
&lt;a href="https://github.com/jayhesselberth" target="_blank" rel="noopener">@jayhesselberth&lt;/a>,
&lt;a href="https://github.com/jennybc" target="_blank" rel="noopener">@jennybc&lt;/a>,
&lt;a href="https://github.com/jeroenjanssens" target="_blank" rel="noopener">@jeroenjanssens&lt;/a>,
&lt;a href="https://github.com/jestarr" target="_blank" rel="noopener">@jestarr&lt;/a>,
&lt;a href="https://github.com/jgendrinal" target="_blank" rel="noopener">@jgendrinal&lt;/a>,
&lt;a href="https://github.com/Jim89" target="_blank" rel="noopener">@Jim89&lt;/a>,
&lt;a href="https://github.com/jl5000" target="_blank" rel="noopener">@jl5000&lt;/a>,
&lt;a href="https://github.com/jmcastagnetto" target="_blank" rel="noopener">@jmcastagnetto&lt;/a>,
&lt;a href="https://github.com/justasmundeikis" target="_blank" rel="noopener">@justasmundeikis&lt;/a>,
&lt;a href="https://github.com/Kaz272" target="_blank" rel="noopener">@Kaz272&lt;/a>,
&lt;a href="https://github.com/KenatRSF" target="_blank" rel="noopener">@KenatRSF&lt;/a>,
&lt;a href="https://github.com/koncina" target="_blank" rel="noopener">@koncina&lt;/a>,
&lt;a href="https://github.com/krlmlr" target="_blank" rel="noopener">@krlmlr&lt;/a>,
&lt;a href="https://github.com/kuriwaki" target="_blank" rel="noopener">@kuriwaki&lt;/a>,
&lt;a href="https://github.com/lazappi" target="_blank" rel="noopener">@lazappi&lt;/a>,
&lt;a href="https://github.com/leeper" target="_blank" rel="noopener">@leeper&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/markdly" target="_blank" rel="noopener">@markdly&lt;/a>,
&lt;a href="https://github.com/martinjhnhadley" target="_blank" rel="noopener">@martinjhnhadley&lt;/a>,
&lt;a href="https://github.com/MatthieuStigler" target="_blank" rel="noopener">@MatthieuStigler&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/mehrgoltiv" target="_blank" rel="noopener">@mehrgoltiv&lt;/a>,
&lt;a href="https://github.com/meriops" target="_blank" rel="noopener">@meriops&lt;/a>,
&lt;a href="https://github.com/mikemc" target="_blank" rel="noopener">@mikemc&lt;/a>,
&lt;a href="https://github.com/mikmart" target="_blank" rel="noopener">@mikmart&lt;/a>,
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>,
&lt;a href="https://github.com/mitchelloharawild" target="_blank" rel="noopener">@mitchelloharawild&lt;/a>,
&lt;a href="https://github.com/mixolydianpink" target="_blank" rel="noopener">@mixolydianpink&lt;/a>,
&lt;a href="https://github.com/mkapplebee" target="_blank" rel="noopener">@mkapplebee&lt;/a>,
&lt;a href="https://github.com/moodymudskipper" target="_blank" rel="noopener">@moodymudskipper&lt;/a>,
&lt;a href="https://github.com/mpaulacaldas" target="_blank" rel="noopener">@mpaulacaldas&lt;/a>,
&lt;a href="https://github.com/Myfanwy" target="_blank" rel="noopener">@Myfanwy&lt;/a>,
&lt;a href="https://github.com/ogorodriguez" target="_blank" rel="noopener">@ogorodriguez&lt;/a>,
&lt;a href="https://github.com/onesandzeroes" target="_blank" rel="noopener">@onesandzeroes&lt;/a>,
&lt;a href="https://github.com/Overlytic" target="_blank" rel="noopener">@Overlytic&lt;/a>,
&lt;a href="https://github.com/paleolimbot" target="_blank" rel="noopener">@paleolimbot&lt;/a>,
&lt;a href="https://github.com/PMassicotte" target="_blank" rel="noopener">@PMassicotte&lt;/a>,
&lt;a href="https://github.com/psychometrician" target="_blank" rel="noopener">@psychometrician&lt;/a>,
&lt;a href="https://github.com/Rekyt" target="_blank" rel="noopener">@Rekyt&lt;/a>,
&lt;a href="https://github.com/romainfrancois" target="_blank" rel="noopener">@romainfrancois&lt;/a>,
&lt;a href="https://github.com/romatik" target="_blank" rel="noopener">@romatik&lt;/a>,
&lt;a href="https://github.com/rubenarslan" target="_blank" rel="noopener">@rubenarslan&lt;/a>,
&lt;a href="https://github.com/SchollJ" target="_blank" rel="noopener">@SchollJ&lt;/a>,
&lt;a href="https://github.com/seabbs" target="_blank" rel="noopener">@seabbs&lt;/a>,
&lt;a href="https://github.com/sethmund" target="_blank" rel="noopener">@sethmund&lt;/a>,
&lt;a href="https://github.com/sfirke" target="_blank" rel="noopener">@sfirke&lt;/a>,
&lt;a href="https://github.com/SimonCoulombe" target="_blank" rel="noopener">@SimonCoulombe&lt;/a>,
&lt;a href="https://github.com/Stephonomon" target="_blank" rel="noopener">@Stephonomon&lt;/a>,
&lt;a href="https://github.com/stufield" target="_blank" rel="noopener">@stufield&lt;/a>,
&lt;a href="https://github.com/tdjames1" target="_blank" rel="noopener">@tdjames1&lt;/a>,
&lt;a href="https://github.com/thierrygosselin" target="_blank" rel="noopener">@thierrygosselin&lt;/a>,
&lt;a href="https://github.com/tklebel" target="_blank" rel="noopener">@tklebel&lt;/a>,
&lt;a href="https://github.com/tmastny" target="_blank" rel="noopener">@tmastny&lt;/a>,
&lt;a href="https://github.com/trannhatanh89" target="_blank" rel="noopener">@trannhatanh89&lt;/a>,
&lt;a href="https://github.com/TrentLobdell" target="_blank" rel="noopener">@TrentLobdell&lt;/a>,
&lt;a href="https://github.com/wcmbishop" target="_blank" rel="noopener">@wcmbishop&lt;/a>,
&lt;a href="https://github.com/wulixin" target="_blank" rel="noopener">@wulixin&lt;/a>,
&lt;a href="https://github.com/yutannihilation" target="_blank" rel="noopener">@yutannihilation&lt;/a>, and
&lt;a href="https://github.com/zeehio" target="_blank" rel="noopener">@zeehio&lt;/a>.&lt;/p></description></item><item><title>tidyr 0.8.0</title><link>https://www.tidyverse.org/blog/2018/02/tidyr-0-8-0/</link><pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2018/02/tidyr-0-8-0/</guid><description>
&lt;p>We are pleased to announce that tidyr 0.8.0 is now available on CRAN. tidyr makes it easy to “tidy” your data, storing it in a consistent form so that it’s easy to manipulate, visualise and model. Tidy data has a simple convention: put variables in the columns and observations in the rows. You can learn more about it in the &lt;a href="http://tidyr.tidyverse.org/articles/tidy-data.html">tidy data vignette&lt;/a>. Install it with:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;tidyr&amp;quot;)&lt;/code>&lt;/pre>
&lt;p>This release mainly contains a bumper crop of small bug fixes and minor improvements, and a considerable increase in test coverage (84% to 99%). For the full details, see the &lt;a href="https://github.com/tidyverse/tidyr/releases/tag/v0.8.0">release notes&lt;/a>. Here we’ll highlight an important bug fix that might change existing code, and one new feature to try out.&lt;/p>
&lt;div id="api-changes" class="section level2">
&lt;h2>API changes&lt;/h2>
&lt;p>There was a bug in &lt;code>separate()&lt;/code> where negative values had an off-by-one error. Now -1 correctly refers to the first position between characters counting from the right hand side.&lt;/p>
&lt;pre class="r">&lt;code>df &amp;lt;- tibble(x = c(&amp;quot;male1&amp;quot;, &amp;quot;female2&amp;quot;, &amp;quot;male2&amp;quot;))
df %&amp;gt;% separate(x, c(&amp;quot;gender&amp;quot;, &amp;quot;number&amp;quot;), -1)
#&amp;gt; # A tibble: 3 x 2
#&amp;gt; gender number
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
#&amp;gt; 1 male 1
#&amp;gt; 2 female 2
#&amp;gt; 3 male 2&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="new-features" class="section level2">
&lt;h2>New features&lt;/h2>
&lt;p>Thanks to the suggestion of &lt;a href="https://andrewpbray.github.io">Andrew Bray&lt;/a>, tidyr can now “uncount” a data frame, duplicating aggregate rows:&lt;/p>
&lt;pre class="r">&lt;code>df &amp;lt;- tibble(x = c(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;), n = c(2, 3, 1))
df %&amp;gt;% uncount(n)
#&amp;gt; # A tibble: 6 x 1
#&amp;gt; x
#&amp;gt; &amp;lt;chr&amp;gt;
#&amp;gt; 1 a
#&amp;gt; 2 a
#&amp;gt; 3 b
#&amp;gt; 4 b
#&amp;gt; 5 b
#&amp;gt; 6 c&lt;/code>&lt;/pre>
&lt;p>If you want a unique identifier for each row, use the &lt;code>.id&lt;/code> argument:&lt;/p>
&lt;pre class="r">&lt;code>df %&amp;gt;% uncount(n, .id = &amp;quot;id&amp;quot;)
#&amp;gt; # A tibble: 6 x 2
#&amp;gt; x id
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;
#&amp;gt; 1 a 1
#&amp;gt; 2 a 2
#&amp;gt; 3 b 1
#&amp;gt; 4 b 2
#&amp;gt; 5 b 3
#&amp;gt; 6 c 1&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="acknowledgements" class="section level2">
&lt;h2>Acknowledgements&lt;/h2>
&lt;p>A big thanks goes out to all 90 users who contributed issues, pull requests, and comments since the last release: &lt;a href="https://github.com/aaronwolen">@aaronwolen&lt;/a>, &lt;a href="https://github.com/adeldaoud">@adeldaoud&lt;/a>, &lt;a href="https://github.com/amarchin">@amarchin&lt;/a>, &lt;a href="https://github.com/AndreMikulec">@AndreMikulec&lt;/a>, &lt;a href="https://github.com/andrewhn">@andrewhn&lt;/a>, &lt;a href="https://github.com/andrewpbray">@andrewpbray&lt;/a>, &lt;a href="https://github.com/antoine-sachet">@antoine-sachet&lt;/a>, &lt;a href="https://github.com/aosmith16">@aosmith16&lt;/a>, &lt;a href="https://github.com/Ax3man">@Ax3man&lt;/a>, &lt;a href="https://github.com/batpigandme">@batpigandme&lt;/a>, &lt;a href="https://github.com/bheavner">@bheavner&lt;/a>, &lt;a href="https://github.com/billdenney">@billdenney&lt;/a>, &lt;a href="https://github.com/burchill">@burchill&lt;/a>, &lt;a href="https://github.com/carlganz">@carlganz&lt;/a>, &lt;a href="https://github.com/casras111">@casras111&lt;/a>, &lt;a href="https://github.com/cb4ds">@cb4ds&lt;/a>, &lt;a href="https://github.com/chris-park">@chris-park&lt;/a>, &lt;a href="https://github.com/colearendt">@colearendt&lt;/a>, &lt;a href="https://github.com/cpsievert">@cpsievert&lt;/a>, &lt;a href="https://github.com/cswarth">@cswarth&lt;/a>, &lt;a href="https://github.com/cviner">@cviner&lt;/a>, &lt;a href="https://github.com/dscarlat">@dscarlat&lt;/a>, &lt;a href="https://github.com/echasnovski">@echasnovski&lt;/a>, &lt;a href="https://github.com/eibanez">@eibanez&lt;/a>, &lt;a href="https://github.com/feuerbach">@feuerbach&lt;/a>, &lt;a href="https://github.com/flying-sheep">@flying-sheep&lt;/a>, &lt;a href="https://github.com/GegznaV">@GegznaV&lt;/a>, &lt;a href="https://github.com/geotheory">@geotheory&lt;/a>, &lt;a href="https://github.com/ggrothendieck">@ggrothendieck&lt;/a>, &lt;a href="https://github.com/gireeshkbogu">@gireeshkbogu&lt;/a>, &lt;a href="https://github.com/gregmacfarlane">@gregmacfarlane&lt;/a>, &lt;a href="https://github.com/hadley">@hadley&lt;/a>, &lt;a href="https://github.com/halpo">@halpo&lt;/a>, &lt;a href="https://github.com/holgerbrandl">@holgerbrandl&lt;/a>, &lt;a href="https://github.com/huftis">@huftis&lt;/a>, &lt;a href="https://github.com/Hydr0Ge0Dude">@Hydr0Ge0Dude&lt;/a>, &lt;a href="https://github.com/instantkaffee">@instantkaffee&lt;/a>, &lt;a href="https://github.com/jarodmeng">@jarodmeng&lt;/a>, &lt;a href="https://github.com/jebyrnes">@jebyrnes&lt;/a>, &lt;a href="https://github.com/jennybc">@jennybc&lt;/a>, &lt;a href="https://github.com/jerryfuyu0104">@jerryfuyu0104&lt;/a>, &lt;a href="https://github.com/JerryWho">@JerryWho&lt;/a>, &lt;a href="https://github.com/jgellar">@jgellar&lt;/a>, &lt;a href="https://github.com/JoFrhwld">@JoFrhwld&lt;/a>, &lt;a href="https://github.com/jstitlow">@jstitlow&lt;/a>, &lt;a href="https://github.com/junoslukan">@junoslukan&lt;/a>, &lt;a href="https://github.com/jzadra">@jzadra&lt;/a>, &lt;a href="https://github.com/karldw">@karldw&lt;/a>, &lt;a href="https://github.com/kendonB">@kendonB&lt;/a>, &lt;a href="https://github.com/krlmlr">@krlmlr&lt;/a>, &lt;a href="https://github.com/l-d-s">@l-d-s&lt;/a>, &lt;a href="https://github.com/leungi">@leungi&lt;/a>, &lt;a href="https://github.com/lorenzwalthert">@lorenzwalthert&lt;/a>, &lt;a href="https://github.com/luke-a">@luke-a&lt;/a>, &lt;a href="https://github.com/MarcusWalz">@MarcusWalz&lt;/a>, &lt;a href="https://github.com/markdly">@markdly&lt;/a>, &lt;a href="https://github.com/mattmills49">@mattmills49&lt;/a>, &lt;a href="https://github.com/maurolepore">@maurolepore&lt;/a>, &lt;a href="https://github.com/MaximeWack">@MaximeWack&lt;/a>, &lt;a href="https://github.com/meow9th">@meow9th&lt;/a>, &lt;a href="https://github.com/mgirlich">@mgirlich&lt;/a>, &lt;a href="https://github.com/mmuurr">@mmuurr&lt;/a>, &lt;a href="https://github.com/Monduiz">@Monduiz&lt;/a>, &lt;a href="https://github.com/naveennjs">@naveennjs&lt;/a>, &lt;a href="https://github.com/ngr-t">@ngr-t&lt;/a>, &lt;a href="https://github.com/njtierney">@njtierney&lt;/a>, &lt;a href="https://github.com/npjc">@npjc&lt;/a>, &lt;a href="https://github.com/paulponcet">@paulponcet&lt;/a>, &lt;a href="https://github.com/petereckley">@petereckley&lt;/a>, &lt;a href="https://github.com/pgensler">@pgensler&lt;/a>, &lt;a href="https://github.com/pietermarsman">@pietermarsman&lt;/a>, &lt;a href="https://github.com/PMassicotte">@PMassicotte&lt;/a>, &lt;a href="https://github.com/ripkrizbi">@ripkrizbi&lt;/a>, &lt;a href="https://github.com/sfirke">@sfirke&lt;/a>, &lt;a href="https://github.com/slygent">@slygent&lt;/a>, &lt;a href="https://github.com/stefvanbuuren">@stefvanbuuren&lt;/a>, &lt;a href="https://github.com/t-kalinowski">@t-kalinowski&lt;/a>, &lt;a href="https://github.com/tbradley1013">@tbradley1013&lt;/a>, &lt;a href="https://github.com/tcovert">@tcovert&lt;/a>, &lt;a href="https://github.com/tentacles-from-outer-space">@tentacles-from-outer-space&lt;/a>, &lt;a href="https://github.com/thays42">@thays42&lt;/a>, &lt;a href="https://github.com/tiagowright">@tiagowright&lt;/a>, &lt;a href="https://github.com/tiernanmartin">@tiernanmartin&lt;/a>, &lt;a href="https://github.com/tshynik">@tshynik&lt;/a>, &lt;a href="https://github.com/urskalbitzer">@urskalbitzer&lt;/a>, &lt;a href="https://github.com/voxnonecho">@voxnonecho&lt;/a>, &lt;a href="https://github.com/wibeasley">@wibeasley&lt;/a>, &lt;a href="https://github.com/yutannihilation">@yutannihilation&lt;/a>, &lt;a href="https://github.com/zelite">@zelite&lt;/a>, and &lt;a href="https://github.com/zhukunism">@zhukunism&lt;/a>.&lt;/p>
&lt;/div></description></item><item><title>Erratum tidyr 0.7.0</title><link>https://www.tidyverse.org/blog/2017/09/erratum-tidyr-0.7.0/</link><pubDate>Mon, 04 Sep 2017 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2017/09/erratum-tidyr-0.7.0/</guid><description>
&lt;p>In &lt;a href="http://www.tidyverse.org/articles/2017/08/tidyr-0.7.0/">tidyr 0.7.0&lt;/a>, we introduced a stronger distinction between data expressions and context expressions for selection verbs like &lt;code>gather()&lt;/code>. However that change caused a lot of trouble and confusion and we have updated &lt;code>tidyselect&lt;/code> (the backend for selection functions) to revert that behaviour. In that article, we provide a few comments on these changes as well as some notes on good practices for writing functions with tidyverse tools. Finally we introduce two new selection features that help write safer code: improved support for strings and character vectors and a new selection helper &lt;code>last_col()&lt;/code>.&lt;/p>
&lt;p>You can install the new version of tidyselect from CRAN:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;tidyselect&amp;quot;)&lt;/code>&lt;/pre>
&lt;div id="updated-selection-rules" class="section level3">
&lt;h3>Updated selection rules&lt;/h3>
&lt;p>Since tidyr 0.7.0, selecting functions like &lt;code>gather()&lt;/code> use the tidyselect package as backend. Tidyselect was extracted from dplyr and provides the mechanism for helpers like &lt;code>starts_with()&lt;/code> or &lt;code>everything()&lt;/code>. However, tidyselect had one big change compared to dplyr: data expressions could no longer refer to contextual variables. A &lt;strong>data&lt;/strong> expression is defined as either a bare symbol like &lt;code>var&lt;/code>, or a call like &lt;code>var1:var2&lt;/code> or &lt;code>c(var1, var2)&lt;/code>. Any other expressions is a &lt;strong>context&lt;/strong> expression. The semantic change meant that it was no longer legal to refer to a contextual variable in a data expression:&lt;/p>
&lt;pre class="r">&lt;code>var &amp;lt;- 5
mtcars %&amp;gt;% gather(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;, 1:var)&lt;/code>&lt;/pre>
&lt;p>We thought this was a relatively uncommon occurrence in practice. However that broke a lot of code that had this form:&lt;/p>
&lt;pre class="r">&lt;code>df %&amp;gt;% gather(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;, 1:ncol(df))&lt;/code>&lt;/pre>
&lt;p>Although the change was well-intentioned, it proved to be too disruptive and we have reverted it.&lt;/p>
&lt;p>Note that we still maintain a distinction between data and context expressions. The notion of context expression (anything that’s not a symbol or a call to &lt;code>:&lt;/code> or &lt;code>c()&lt;/code>) was introduced in dplyr 0.7.0. Since that version, context expressions cannot refer to the data. This makes it safer to refer to other objects.&lt;/p>
&lt;/div>
&lt;div id="safety-versus-convenience" class="section level3">
&lt;h3>Safety versus convenience&lt;/h3>
&lt;p>Most datawise functions in R obey the same set rules regarding the visibility of objects. Visibility is hierarchical: data frame objects override those found in the context. This is convenient for interactive use and scripts, but can also cause issues. In the following example, should &lt;code>gather()&lt;/code> select the first three columns (using the &lt;code>x&lt;/code> defined in the global environment), or should it select the first two columns (using the column named &lt;code>x&lt;/code>)?&lt;/p>
&lt;pre class="r">&lt;code>x &amp;lt;- 3
df &amp;lt;- tibble(w = 1, x = 2, y = 3)
df %&amp;gt;% gather(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;, 1:x)
#&amp;gt; # A tibble: 2 x 3
#&amp;gt; y key value
#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 3 w 1
#&amp;gt; 2 3 x 2&lt;/code>&lt;/pre>
&lt;p>The answer is that it selects the first two variables because &lt;code>x&lt;/code> is first found in the data.&lt;/p>
&lt;p>In practice, the hierarchical ambiguity is not a big problem when you use these tools interactively or in scripts. However it becomes worrying when you’re writing reusable functions because you don’t know in advance the variables in the input data frame. For those cases where ambiguity matters, the tidy eval feature of quasiquotation allows you to explicitly pick a variable from the context:&lt;/p>
&lt;pre class="r">&lt;code>df %&amp;gt;% gather(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;, 1:(!! x))
#&amp;gt; # A tibble: 3 x 2
#&amp;gt; key value
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 w 1
#&amp;gt; 2 x 2
#&amp;gt; 3 y 3&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="the-special-semantics-of-selection-functions" class="section level3">
&lt;h3>The special semantics of selection functions&lt;/h3>
&lt;p>Selection functions have always been a bit special in the tidyverse. They don’t behave exactly like regular quoting functions. In almost all quoting functions in R, variables represent a data frame &lt;em>column&lt;/em>. That’s why expressions like this are natural:&lt;/p>
&lt;pre class="r">&lt;code>lm(mass ~ scale(height), data = starwars)&lt;/code>&lt;/pre>
&lt;p>Since variables represent actual columns, you can include them in expressions as if they were actual objects. For instance &lt;code>scale(height)&lt;/code> is equivalent to &lt;code>scale(starwars$height)&lt;/code>. The same is true for most tidyverse tools, e.g. &lt;code>dplyr::mutate()&lt;/code>:&lt;/p>
&lt;pre class="r">&lt;code>starwars %&amp;gt;% mutate(height = scale(height))&lt;/code>&lt;/pre>
&lt;p>However in selection functions, variables do not represent columns but &lt;em>column positions&lt;/em>. That is a subtle but important distinction. When you type &lt;code>height&lt;/code>, tidyselect actually sees the integer &lt;code>2&lt;/code>. This makes sense for several reasons:&lt;/p>
&lt;ul>
&lt;li>&lt;p>Expressions such as &lt;code>name:mass&lt;/code> evaluate to &lt;code>1:3&lt;/code> in a natural way.&lt;/p>&lt;/li>
&lt;li>&lt;p>You can select the same column multiple times. For example if you supply a selection for the dataset &lt;code>starwars&lt;/code> with &lt;code>starts_with(&amp;quot;s&amp;quot;)&lt;/code> and &lt;code>ends_with(&amp;quot;s&amp;quot;)&lt;/code>, the variables &lt;code>species&lt;/code> and &lt;code>starships&lt;/code> would be matched twice. It is easy for tidyselect to take the intersection of the two sets of column positions. If the sets contained vectors instead, it could not determine whether there were two different but identical vectors rather than the same vector selected twice.&lt;/p>&lt;/li>
&lt;li>&lt;p>Finally and most importantly, if the variables evaluated to the column vectors, we would have no information about their names or positions, which we need to reconstitute the data frame.&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>Since the variables represent positions, expressions such as &lt;code>select(sqrt(hair_color):mass^2)&lt;/code> are valid but won’t do what you might think at first. In the selection context, that expression translates to &lt;code>2:9&lt;/code> because &lt;code>hair_color&lt;/code> and &lt;code>mass&lt;/code> are the fourth and third column of the data frame.&lt;/p>
&lt;/div>
&lt;div id="safety-in-selection-functions" class="section level3">
&lt;h3>Safety in selection functions&lt;/h3>
&lt;p>Given the special semantics of selection functions, we had more freedom to solve the hierarchical ambiguity of quoting functions. Indeed, apart from &lt;code>:&lt;/code>, &lt;code>c()&lt;/code> or &lt;code>-&lt;/code>, there rarely is any need for referring to column positions in helpers like &lt;code>starts_with()&lt;/code> or &lt;code>contains()&lt;/code>. For this reason, dplyr 0.7.0 introduced the notion of context expressions. Data frame columns are no longer in scope in these calls in order to solve the hierarchical ambiguity. This has the downside that context expressions in selection functions behave a bit differently from the rest of the tidyverse, but we gain safety in exchange.&lt;/p>
&lt;p>Given these special semantics, it seemed to make sense to give data expressions the opposite behaviour and only allow references to the data. This would solve the ambiguity in the opposite direction. As explained above, this broke too much code. We had to change it back and the issue of hierarchical ambiguity along with it.&lt;/p>
&lt;p>Luckily tidyselect 0.2.0 also introduces a few features that help writing safer code for data expressions. First, the support for strings and character vectors has been improved. All data expressions fully support strings. It is now valid to supply strings to &lt;code>-&lt;/code> and &lt;code>:&lt;/code>:&lt;/p>
&lt;pre class="r">&lt;code>starwars %&amp;gt;% gather(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;, &amp;quot;name&amp;quot; : &amp;quot;films&amp;quot;)
#&amp;gt; # A tibble: 957 x 4
#&amp;gt; vehicles starships key value
#&amp;gt; &amp;lt;list&amp;gt; &amp;lt;list&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt;
#&amp;gt; 1 &amp;lt;chr [2]&amp;gt; &amp;lt;chr [2]&amp;gt; name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 2 &amp;lt;chr [0]&amp;gt; &amp;lt;chr [0]&amp;gt; name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 3 &amp;lt;chr [0]&amp;gt; &amp;lt;chr [0]&amp;gt; name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 4 &amp;lt;chr [0]&amp;gt; &amp;lt;chr [1]&amp;gt; name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 5 &amp;lt;chr [1]&amp;gt; &amp;lt;chr [0]&amp;gt; name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 6 &amp;lt;chr [0]&amp;gt; &amp;lt;chr [0]&amp;gt; name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 7 &amp;lt;chr [0]&amp;gt; &amp;lt;chr [0]&amp;gt; name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 8 &amp;lt;chr [0]&amp;gt; &amp;lt;chr [0]&amp;gt; name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 9 &amp;lt;chr [0]&amp;gt; &amp;lt;chr [1]&amp;gt; name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 10 &amp;lt;chr [1]&amp;gt; &amp;lt;chr [5]&amp;gt; name &amp;lt;chr [1]&amp;gt;
#&amp;gt; # ... with 947 more rows
starwars %&amp;gt;% gather(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;, -&amp;quot;height&amp;quot;)
#&amp;gt; # A tibble: 1,044 x 3
#&amp;gt; height key value
#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt;
#&amp;gt; 1 172 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 2 167 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 3 96 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 4 202 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 5 150 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 6 178 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 7 165 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 8 97 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 9 183 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 10 182 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; # ... with 1,034 more rows&lt;/code>&lt;/pre>
&lt;p>Note that this only applies to &lt;code>c()&lt;/code>, &lt;code>-&lt;/code> or &lt;code>:&lt;/code> because it would not make sense to write &lt;code>seq(&amp;quot;name&amp;quot;, &amp;quot;mass&amp;quot;)&lt;/code>. Also, it only makes sense to support strings in this way because of the special nature of selection functions. This wouldn’t work with &lt;code>mutate()&lt;/code> or &lt;code>lm()&lt;/code> since they wouldn’t be able to differentiate between a column name or an actual column (by recycling the string to column length if the data frame has more than one row).&lt;/p>
&lt;p>The purpose of supporting strings in selection function is to make it easier to unquote column names. Excluding columns with quasiquotation is now as simple as this:&lt;/p>
&lt;pre class="r">&lt;code>x &amp;lt;- &amp;quot;height&amp;quot;
starwars %&amp;gt;% gather(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;, -(!! x))
#&amp;gt; # A tibble: 1,044 x 3
#&amp;gt; height key value
#&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt;
#&amp;gt; 1 172 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 2 167 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 3 96 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 4 202 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 5 150 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 6 178 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 7 165 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 8 97 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 9 183 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; 10 182 name &amp;lt;chr [1]&amp;gt;
#&amp;gt; # ... with 1,034 more rows&lt;/code>&lt;/pre>
&lt;p>The second feature introduced in tidyselect 0.2.0 is the &lt;code>last_col()&lt;/code> helper. We noticed in bug reports that many people use variants of:&lt;/p>
&lt;pre class="r">&lt;code>x &amp;lt;- starwars
x %&amp;gt;% gather(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;, 3 : ncol(x))
#&amp;gt; # A tibble: 957 x 4
#&amp;gt; name height key value
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt;
#&amp;gt; 1 Luke Skywalker 172 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 2 C-3PO 167 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 3 R2-D2 96 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 4 Darth Vader 202 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 5 Leia Organa 150 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 6 Owen Lars 178 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 7 Beru Whitesun lars 165 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 8 R5-D4 97 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 9 Biggs Darklighter 183 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 10 Obi-Wan Kenobi 182 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; # ... with 947 more rows&lt;/code>&lt;/pre>
&lt;p>That is potentially unsafe in functions since the data frame might contain a column named &lt;code>x&lt;/code>. You can now use &lt;code>last_col()&lt;/code> instead:&lt;/p>
&lt;pre class="r">&lt;code># Importing last_col() because it&amp;#39;s not exported in dplyr yet
last_col &amp;lt;- tidyselect::last_col
x %&amp;gt;% gather(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;, 3 : last_col())
#&amp;gt; # A tibble: 957 x 4
#&amp;gt; name height key value
#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt;
#&amp;gt; 1 Luke Skywalker 172 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 2 C-3PO 167 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 3 R2-D2 96 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 4 Darth Vader 202 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 5 Leia Organa 150 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 6 Owen Lars 178 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 7 Beru Whitesun lars 165 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 8 R5-D4 97 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 9 Biggs Darklighter 183 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; 10 Obi-Wan Kenobi 182 mass &amp;lt;dbl [1]&amp;gt;
#&amp;gt; # ... with 947 more rows&lt;/code>&lt;/pre>
&lt;/div></description></item><item><title>tidyr 0.7.0</title><link>https://www.tidyverse.org/blog/2017/08/tidyr-0.7.0/</link><pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2017/08/tidyr-0.7.0/</guid><description>
&lt;p>We are happy to announce that tidyr 0.7.0 is now available on CRAN. There are two big changes:&lt;/p>
&lt;ul>
&lt;li>&lt;p>tidyr now supports tidy evaluation (or tidy eval for short). You can find an introduction to tidy eval in the &lt;a href="http://dplyr.tidyverse.org/articles/programming.html">programming with dplyr&lt;/a> vignette.&lt;/p>&lt;/li>
&lt;li>&lt;p>tidyr uses the new tidyselect package as selection backend.&lt;/p>&lt;/li>
&lt;/ul>
&lt;p>This will probably only affect your code in minor ways but helps improve consistency across the tidyverse. You can read about the complete set of changes at &lt;a href="https://github.com/tidyverse/tidyr/releases/tag/v0.7.0" class="uri">https://github.com/tidyverse/tidyr/releases/tag/v0.7.0&lt;/a>.&lt;/p>
&lt;p>Install the latest version of tidyr with:&lt;/p>
&lt;pre class="r">&lt;code>install.packages(&amp;quot;tidyr&amp;quot;)&lt;/code>&lt;/pre>
&lt;div id="new-selection-rules" class="section level3">
&lt;h3>New selection rules&lt;/h3>
&lt;p>&lt;strong>Erratum:&lt;/strong> The change in selection rules described in that article was reverted as it proved too disruptive. Please see the &lt;a href="http://www.tidyverse.org/articles/2017/09/erratum-tidyr-0.7.0/">erratum article&lt;/a> for more information on this.&lt;/p>
&lt;p>Following the switch to tidyselect, selecting functions are now stricter in their arguments to avoid ambiguous cases. For example, take &lt;code>gather()&lt;/code> and its &lt;code>...&lt;/code> argument. Consider the following code:&lt;/p>
&lt;pre class="r">&lt;code>x &amp;lt;- 3
df &amp;lt;- tibble(w = 1, x = 2, y = 3)
gather(df, &amp;quot;variable&amp;quot;, &amp;quot;value&amp;quot;, 1:x)
#&amp;gt; # A tibble: 2 x 3
#&amp;gt; y variable value
#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 3 w 1
#&amp;gt; 2 3 x 2&lt;/code>&lt;/pre>
&lt;p>Should it select the first three columns (using the &lt;code>x&lt;/code> defined in the global environment), or should it select the first two columns (using the column named &lt;code>x&lt;/code>)?&lt;/p>
&lt;p>To solve this ambiguity, we now make a strict distinction between data and context expressions. A &lt;strong>data expression&lt;/strong> is either a bare name or an expression of the form &lt;code>x:y&lt;/code> or &lt;code>c(x, y)&lt;/code>. In a data expression, you can only refer to columns from the data frame. Everything else is a &lt;strong>context expression&lt;/strong> in which you can only refer to objects that you have defined by assigning with &lt;code>&amp;lt;-&lt;/code>.&lt;/p>
&lt;p>In practice this means that you can no longer refer to contextual objects like this:&lt;/p>
&lt;pre class="r">&lt;code>mtcars %&amp;gt;% gather(var, value, 1:ncol(mtcars))
x &amp;lt;- 3
mtcars %&amp;gt;% gather(var, value, 1:x)
mtcars %&amp;gt;% gather(var, value, -(1:x))&lt;/code>&lt;/pre>
&lt;p>You now have to be explicit about where to find objects. One way of being explicit is to use the quasiquotation operator &lt;code>!!&lt;/code> which will evaluate its argument early and inline the result:&lt;/p>
&lt;pre class="r">&lt;code>mtcars %&amp;gt;% gather(var, value, !! 1:ncol(mtcars))
mtcars %&amp;gt;% gather(var, value, !! 1:x)
mtcars %&amp;gt;% gather(var, value, !! -(1:x))&lt;/code>&lt;/pre>
&lt;p>Read more about quasiquotation in the tidy eval section.&lt;/p>
&lt;/div>
&lt;div id="tidy-evaluation" class="section level3">
&lt;h3>Tidy evaluation&lt;/h3>
&lt;p>Tidy evaluation is a principled set of tools that allow programming with quoting functions (also called NSE functions) in a principled way. It was first introduced in dplyr 0.7.0 and you can learn more about it in the &lt;a href="http://dplyr.tidyverse.org/articles/programming.html">programming with dplyr&lt;/a> vignette. At its core, tidy evaluation is the combination of two features: quasiquotation and quosures.&lt;/p>
&lt;p>The tidy eval tools live in rlang and many of them are reexported in dplyr. This includes &lt;code>quo()&lt;/code>, &lt;code>enquo()&lt;/code> and &lt;code>quos()&lt;/code>. In addition, &lt;code>rlang::expr()&lt;/code>, &lt;code>rlang::sym()&lt;/code> and &lt;code>rlang::syms()&lt;/code> may be useful as well and will be exported in the next version of dplyr.&lt;/p>
&lt;pre class="r">&lt;code># Let&amp;#39;s import some tidy eval tools that we&amp;#39;ll use in examples below
library(&amp;quot;dplyr&amp;quot;)
sym &amp;lt;- rlang::sym&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Quasiquotation&lt;/strong> is essential to program with quoting functions. It refers to the ability of unquoting part of a quoted expression, and makes it possible to program with the quoting grammars of dplyr and tidyr. With quasiquotation, you can change what a function “sees”. You’ll typically want to unquote a symbol representing a data frame column with the &lt;code>!!&lt;/code> operator.&lt;/p>
&lt;p>Here, &lt;code>expand()&lt;/code> sees &lt;code>vs&lt;/code> and &lt;code>cyl&lt;/code>:&lt;/p>
&lt;pre class="r">&lt;code>expand(mtcars, vs, cyl)
#&amp;gt; # A tibble: 6 x 2
#&amp;gt; vs cyl
#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 0 4
#&amp;gt; 2 0 6
#&amp;gt; 3 0 8
#&amp;gt; 4 1 4
#&amp;gt; 5 1 6
#&amp;gt; 6 1 8&lt;/code>&lt;/pre>
&lt;p>Thanks to quasiquotation, we can change what &lt;code>expand()&lt;/code> sees by unquoting the &lt;code>am&lt;/code> symbol:&lt;/p>
&lt;pre class="r">&lt;code>x &amp;lt;- sym(&amp;quot;am&amp;quot;)
expand(mtcars, vs, !! x)
#&amp;gt; # A tibble: 4 x 2
#&amp;gt; vs am
#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 0 0
#&amp;gt; 2 0 1
#&amp;gt; 3 1 0
#&amp;gt; 4 1 1&lt;/code>&lt;/pre>
&lt;p>The second tidy eval feature are &lt;strong>quosures&lt;/strong>. A quosure is a special kind of expression that evaluates in both the data context (so you can refer to data frame columns) and the original context of the expression (e.g. a function context, so you can refer to local variables created there).&lt;/p>
&lt;pre class="r">&lt;code># For nicer printing
iris &amp;lt;- tibble::as_tibble(iris)
# Let&amp;#39;s create a quosure within a local context
quo &amp;lt;- local({
prefix &amp;lt;- &amp;quot;Sepal&amp;quot;
quo(starts_with(prefix))
})&lt;/code>&lt;/pre>
&lt;p>&lt;code>prefix&lt;/code> only exist in the local context but the quosure can safely refer to it&lt;/p>
&lt;pre class="r">&lt;code>quo
#&amp;gt; &amp;lt;quosure: local&amp;gt;
#&amp;gt; ~starts_with(prefix)&lt;/code>&lt;/pre>
&lt;p>In tidyr 0.7.0, all functions now support quosures:&lt;/p>
&lt;pre class="r">&lt;code>gather(iris, key, value, !! quo)
#&amp;gt; # A tibble: 300 x 5
#&amp;gt; Petal.Length Petal.Width Species key value
#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fctr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 1.4 0.2 setosa Sepal.Length 5.1
#&amp;gt; 2 1.4 0.2 setosa Sepal.Length 4.9
#&amp;gt; 3 1.3 0.2 setosa Sepal.Length 4.7
#&amp;gt; 4 1.5 0.2 setosa Sepal.Length 4.6
#&amp;gt; 5 1.4 0.2 setosa Sepal.Length 5.0
#&amp;gt; 6 1.7 0.4 setosa Sepal.Length 5.4
#&amp;gt; 7 1.4 0.3 setosa Sepal.Length 4.6
#&amp;gt; 8 1.5 0.2 setosa Sepal.Length 5.0
#&amp;gt; 9 1.4 0.2 setosa Sepal.Length 4.4
#&amp;gt; 10 1.5 0.1 setosa Sepal.Length 4.9
#&amp;gt; # ... with 290 more rows&lt;/code>&lt;/pre>
&lt;p>Typically you’ll use quosures to create wrappers around tidyr functions. To this end you’ll need &lt;code>enquo()&lt;/code> which does two things: it transforms your function to a dplyr-like quoting function; and it returns the quoted expression as a quosure. Creating a wrapper function is often a simple matter of enquosing and unquoting:&lt;/p>
&lt;pre class="r">&lt;code>my_gather &amp;lt;- function(df, expr) {
quo &amp;lt;- enquo(expr)
tidyr::gather(df, key, value, !! quo)
}&lt;/code>&lt;/pre>
&lt;p>Thanks to the enquosing, you can safely call your wrapper in local contexts (e.g. within a function) and refer to variables defined there:&lt;/p>
&lt;pre class="r">&lt;code>local({
prefix &amp;lt;- &amp;quot;Sepal&amp;quot;
my_gather(iris, starts_with(prefix))
})
#&amp;gt; # A tibble: 300 x 5
#&amp;gt; Petal.Length Petal.Width Species key value
#&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fctr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1 1.4 0.2 setosa Sepal.Length 5.1
#&amp;gt; 2 1.4 0.2 setosa Sepal.Length 4.9
#&amp;gt; 3 1.3 0.2 setosa Sepal.Length 4.7
#&amp;gt; 4 1.5 0.2 setosa Sepal.Length 4.6
#&amp;gt; 5 1.4 0.2 setosa Sepal.Length 5.0
#&amp;gt; 6 1.7 0.4 setosa Sepal.Length 5.4
#&amp;gt; 7 1.4 0.3 setosa Sepal.Length 4.6
#&amp;gt; 8 1.5 0.2 setosa Sepal.Length 5.0
#&amp;gt; 9 1.4 0.2 setosa Sepal.Length 4.4
#&amp;gt; 10 1.5 0.1 setosa Sepal.Length 4.9
#&amp;gt; # ... with 290 more rows&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="special-tidy-evaluation-rules" class="section level3">
&lt;h3>Special tidy evaluation rules&lt;/h3>
&lt;p>The tidy evaluation implementation of tidyr is a bit special. While the philosophy of tidy evaluation is that R code should refer to real objects (from the data frame or from the context), we had to make some exceptions to this rule for tidyr. The reason is that several functions accept bare symbols to specify the names of &lt;em>new&lt;/em> columns to create (&lt;code>gather()&lt;/code> being a prime example). This is not tidy because the symbol do not represent any actual object.&lt;/p>
&lt;p>Our workaround is to capture these arguments using &lt;code>rlang::quo_name()&lt;/code> (so they still support quasiquotation and you can unquote symbols or strings). This workaround is only provided for backward compatibility as this UI is not consistent with other tidyr functions that require strings (e.g. the &lt;code>into&lt;/code> argument of &lt;code>separate()&lt;/code>). More generally this type of NSE it is now discouraged in the tidyverse. We now prefer strings to refer to variables that don’t yet exist.&lt;/p>
&lt;/div>
&lt;div id="breaking-changes" class="section level3">
&lt;h3>Breaking changes&lt;/h3>
&lt;ul>
&lt;li>&lt;p>The underscored SE variants are softly deprecated.&lt;/p>&lt;/li>
&lt;li>&lt;p>Selecting functions now make a distinction between data expressions and context expressions. The latter can refer only to contextual objects while the former can refer only to data variables. See above for more information.&lt;/p>&lt;/li>
&lt;/ul>
&lt;/div></description></item></channel></rss>