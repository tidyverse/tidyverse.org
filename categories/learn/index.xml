<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>learn | Tidyverse</title><link>https://www.tidyverse.org/categories/learn/</link><atom:link href="https://www.tidyverse.org/categories/learn/index.xml" rel="self" type="application/rss+xml"/><description>learn</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 04 Apr 2025 00:00:00 +0000</lastBuildDate><item><title>Learning the tidyverse with the help of AI tools</title><link>https://www.tidyverse.org/blog/2025/04/learn-tidyverse-ai/</link><pubDate>Fri, 04 Apr 2025 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2025/04/learn-tidyverse-ai/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>As an educator who teaches data science with R, I have LOTS of opinions about using artificial intelligence (AI) tools when learning R. But I will keep this post to the use of generative AI tools, like ChatGPT, in learning R, and specifically learning to do data science with R and the tidyverse.&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;p>I&amp;rsquo;ll first walk you through three case studies that demonstrate what asking for help from a generative AI tool looks like. Then, I&amp;rsquo;ll wrap up the post with some tips and good practices for getting the most out of help provided by these tools in the context of writing tidyverse code.&lt;/p>
&lt;p>Before we get started, though, it&amp;rsquo;s important to note that knowledge bases of Large Language Models (LLMs) that underlie popular generative AI tools are private and lack transparency. There are important societal concerns about the fairness of equitable access to these tools. It&amp;rsquo;s unclear how developers or users of these models can be held accountable. Additionally, there is an environmental impact to using these tools.&lt;/p>
&lt;h2 id="case-study-1-reshaping-and-plotting">Case study 1: Reshaping and plotting
&lt;a href="#case-study-1-reshaping-and-plotting">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The first case study features an example on reshaping and plotting the &lt;code>billboard&lt;/code> data frame and it&amp;rsquo;s directly out of
&lt;a href="https://r4ds.hadley.nz/" target="_blank" rel="noopener">R for Data Science&lt;/a>. In fact, it&amp;rsquo;s
&lt;a href="https://r4ds.hadley.nz/data-tidy.html#sec-billboard" target="_blank" rel="noopener">worked out in the book&lt;/a>. Here is the initial prompt:&lt;/p>
&lt;blockquote>
&lt;p>Use the billboard dataset in the tidyr package to create a visualization of rank vs. week number for each song in the dataset.&lt;/p>
&lt;/blockquote>
&lt;p>And the following is what
&lt;a href="https://chatgpt.com/" target="_blank" rel="noopener">ChatGPT&lt;/a> by OpenAI suggests as the first answer:&lt;/p>
&lt;blockquote>
&lt;p>The &lt;code>billboard&lt;/code> dataset from the tidyr package contains weekly rankings of songs on the Billboard charts. Here&amp;rsquo;s how you can visualize the rank vs. week number for each song in the dataset using R:&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Load required libraries&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyr.tidyverse.org'>tidyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://ggplot2.tidyverse.org'>ggplot2&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Load the billboard dataset&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/data.html'>data&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"billboard"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Prepare the data for visualization&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>billboard_long&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>billboard&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_longer.html'>pivot_longer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> cols &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"wk"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> names_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"week"&lt;/span>,&lt;/span>
&lt;span> values_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"rank"&lt;/span>,&lt;/span>
&lt;span> names_prefix &lt;span class='o'>=&lt;/span> &lt;span class='s'>"wk"&lt;/span>,&lt;/span>
&lt;span> values_drop_na &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Convert week to a numeric value&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>billboard_long&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>week&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/numeric.html'>as.numeric&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>billboard_long&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>week&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Create the visualization&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>billboard_long&lt;/span>, &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>week&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>rank&lt;/span>, group &lt;span class='o'>=&lt;/span> &lt;span class='nv'>track&lt;/span>, color &lt;span class='o'>=&lt;/span> &lt;span class='nv'>track&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_path.html'>geom_line&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>show.legend &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>, alpha &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.6&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/scale_continuous.html'>scale_y_reverse&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='c'># Reverse the y-axis since rank 1 is the top position&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> title &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Song Rank vs. Week Number"&lt;/span>,&lt;/span>
&lt;span> x &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Week Number"&lt;/span>,&lt;/span>
&lt;span> y &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Rank"&lt;/span>,&lt;/span>
&lt;span> caption &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Data: Billboard (tidyr package)"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggtheme.html'>theme_minimal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-1-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>ChatGPT also provides a neat explanation of the code:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Explanation&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Pivoting the Data: The &lt;code>billboard&lt;/code> dataset is in wide format, with week columns (&lt;code>wk1&lt;/code>, &lt;code>wk2&lt;/code>, etc.). We use
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_longer.html" target="_blank" rel="noopener">&lt;code>pivot_longer()&lt;/code>&lt;/a> to reshape it into a long format with week and rank columns.&lt;/li>
&lt;li>Rank vs. Week Plot: Each song&amp;rsquo;s weekly rankings are connected with lines (
&lt;a href="https://ggplot2.tidyverse.org/reference/geom_path.html" target="_blank" rel="noopener">&lt;code>geom_line()&lt;/code>&lt;/a>), and we reverse the y-axis since rank 1 is the best.&lt;/li>
&lt;li>Grouping by Track: The group aesthetic ensures lines are drawn separately for each song.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Output&lt;/strong>&lt;/p>
&lt;p>This will create a line plot where each line represents a song&amp;rsquo;s rank progression over weeks. The y-axis is reversed to reflect higher rankings at the top.&lt;/p>
&lt;/blockquote>
&lt;p>There are a few things about this answer that are promising:&lt;/p>
&lt;ul>
&lt;li>The response is a tidyverse approach.&lt;/li>
&lt;li>It uses
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_longer.html" target="_blank" rel="noopener">&lt;code>pivot_longer()&lt;/code>&lt;/a> as opposed to the superseded alternative
&lt;a href="https://tidyr.tidyverse.org/reference/gather.html" target="_blank" rel="noopener">&lt;code>gather()&lt;/code>&lt;/a>.&lt;/li>
&lt;li>The plot features a reversed y-axis,
&lt;a href="https://r4ds.hadley.nz/data-tidy.html#fig-billboard-ranks" target="_blank" rel="noopener">just like in the book&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>However, the resulting plot doesn&amp;rsquo;t show exactly what the prompt asked for &amp;ndash; the lines are colored by &lt;code>track&lt;/code>, which produces a busy plot that is difficult to interpret. While this is not ideal, it&amp;rsquo;s something a new learner can easily spot and ask ChatGPT for a follow up correcting it. For example, a subsequent prompt like the following fixes this issue:&lt;/p>
&lt;blockquote>
&lt;p>Can you redraw the plot without coloring each line by track?&lt;/p>
&lt;/blockquote>
&lt;p>You can see this in action in
&lt;a href="https://chatgpt.com/share/678f1dee-4af0-8000-befe-6df0a8d70fba" target="_blank" rel="noopener">this saved chat&lt;/a>, in the second prompt. Here is the updated code suggested by ChatGPT:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Create the visualization without coloring by track&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>billboard_long&lt;/span>, &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>week&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>rank&lt;/span>, group &lt;span class='o'>=&lt;/span> &lt;span class='nv'>track&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_path.html'>geom_line&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>alpha &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.3&lt;/span>, color &lt;span class='o'>=&lt;/span> &lt;span class='s'>"blue"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/scale_continuous.html'>scale_y_reverse&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='c'># Reverse the y-axis since rank 1 is the top position&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> title &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Song Rank vs. Week Number"&lt;/span>,&lt;/span>
&lt;span> x &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Week Number"&lt;/span>,&lt;/span>
&lt;span> y &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Rank"&lt;/span>,&lt;/span>
&lt;span> caption &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Data: Billboard (tidyr package)"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggtheme.html'>theme_minimal&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-2-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Note, however, that the only change wasn&amp;rsquo;t omitting the &lt;code>color = track&lt;/code> aesthetic mapping. The &lt;code>alpha&lt;/code> level is also changed (from 0.6 to 0.3) without a justification for that change and the lines are colored &lt;code>&amp;quot;blue&amp;quot;&lt;/code>. None of these are &lt;em>bad&lt;/em> or &lt;em>wrong&lt;/em> choices, but they can be confusing for new learners. Similarly, using
&lt;a href="https://ggplot2.tidyverse.org/reference/ggtheme.html" target="_blank" rel="noopener">&lt;code>theme_minimal()&lt;/code>&lt;/a> is not a bad or wrong choice either&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>, but it&amp;rsquo;s not &lt;em>necessary&lt;/em>, but this might not be obvious to a new learner.&lt;/p>
&lt;p>Furthermore, while ChatGPT &amp;ldquo;solves&amp;rdquo; the problem, a thorough code review reveals a number of not-so-great things about the answer that can be confusing for new learners or promote poor coding practices:&lt;/p>
&lt;ul>
&lt;li>The code loads packages that are not necessary: tidyr and ggplot2 packages are sufficient for this code, we don&amp;rsquo;t also need dplyr. Additionally, learners coming from R for Data Science likely expect
&lt;a href="https://tidyverse.tidyverse.org" target="_blank" rel="noopener">&lt;code>library(tidyverse)&lt;/code>&lt;/a> in analysis code, instead of loading the packages individualy.&lt;/li>
&lt;li>There is no need to load the &lt;code>billboard&lt;/code> dataset, it&amp;rsquo;s available to use once the tidyr package is loaded. Additionally, quotes are not needed, &lt;code>data(billboard)&lt;/code> also works.&lt;/li>
&lt;li>The code mixes up tidyverse and base R styles:
&lt;ul>
&lt;li>Changing the type of &lt;code>week&lt;/code> to numeric can be done in a
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> statement with the tidyverse, which would then warrant loading the dplyr package.&lt;/li>
&lt;li>This can also be done within
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_longer.html" target="_blank" rel="noopener">&lt;code>pivot_longer()&lt;/code>&lt;/a> with the &lt;code>names_transform&lt;/code> argument.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>All of these are addressable with further prompts, as I&amp;rsquo;ve done at
&lt;a href="https://chatgpt.com/share/678f1dee-4af0-8000-befe-6df0a8d70fba" target="_blank" rel="noopener">the saved chat&lt;/a>, in the last two prompts. But doing so requires being able to identify these issues and explicitly asking for corrections. In practice, I wouldn&amp;rsquo;t have asked ChatGPT to correct everything for me, I would have stopped after the first suggestion, which was a pretty good starting point, and made the improvements myself. However, a new learner might assume (and based on my experience seeing lots of new learner code, &lt;em>does&lt;/em> assume) the first answer is the &lt;em>right&lt;/em> and &lt;em>good&lt;/em> or &lt;em>best&lt;/em> answer since (1) it looks reasonable and (2) it works, sort of.&lt;/p>
&lt;p>Furthermore, requesting improvements in subsequent calls can result in surprising changes that the user hasn&amp;rsquo;t asked for. We saw an example of this above, in updating the alpha level. Similarly, in
&lt;a href="https://chatgpt.com/share/678f1dee-4af0-8000-befe-6df0a8d70fba" target="_blank" rel="noopener">the saved chat&lt;/a> you can see that asking ChatGPT to not load the packages individually but to use
&lt;a href="https://tidyverse.tidyverse.org" target="_blank" rel="noopener">&lt;code>library(tidyverse)&lt;/code>&lt;/a> instead results in this change as well as not loading the data with a
&lt;a href="https://rdrr.io/r/utils/data.html" target="_blank" rel="noopener">&lt;code>data()&lt;/code>&lt;/a> call and adding a data transformation step with
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>mutate()&lt;/code>&lt;/a> to convert &lt;code>week&lt;/code> to numeric:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Load the tidyverse package&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Load the billboard dataset and prepare the data&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>billboard_long&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>billboard&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_longer.html'>pivot_longer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> cols &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://tidyselect.r-lib.org/reference/starts_with.html'>starts_with&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"wk"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> names_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"week"&lt;/span>,&lt;/span>
&lt;span> values_to &lt;span class='o'>=&lt;/span> &lt;span class='s'>"rank"&lt;/span>,&lt;/span>
&lt;span> names_prefix &lt;span class='o'>=&lt;/span> &lt;span class='s'>"wk"&lt;/span>,&lt;/span>
&lt;span> values_drop_na &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>week &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/numeric.html'>as.numeric&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>week&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='c'># Convert week to numeric&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Both of these are welcome changes, but it can be surprising to a new learner why they&amp;rsquo;re combined with updating the
&lt;a href="https://rdrr.io/r/base/library.html" target="_blank" rel="noopener">&lt;code>library()&lt;/code>&lt;/a> call. This is happening because with each call ChatGPT is &amp;ldquo;trying again&amp;rdquo; &amp;ndash; it&amp;rsquo;s not just editing the previous answer but it&amp;rsquo;s regenerating an answer with additional context.&lt;/p>
&lt;p>I should also note that ChatGPT generally gives better responses when asking about sample datasets because the model has probably been exposed to them somewhere in the training data. Next, let&amp;rsquo;s try a non-sample dataset.&lt;/p>
&lt;h2 id="case-study-2-data-cleaning">Case study 2: Data cleaning
&lt;a href="#case-study-2-data-cleaning">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The next example is a lot more vague as it&amp;rsquo;s a task that, if someone asked me for help, I would reply with &amp;ldquo;Can you share the data with me?&amp;quot;, but ChatGPT happily generates an answer. That&amp;rsquo;s probably one of the reasons why people love these tools, they never respond to a question with another question, at least not in my experience.&lt;/p>
&lt;p>Below is the prompt for this case study. I&amp;rsquo;ll provide it with no background first so you can read it as the AI tool would &amp;ldquo;read&amp;rdquo; it without any background.&lt;/p>
&lt;blockquote>
&lt;p>Another variable that needs some cleaning up is &lt;code>membership_status&lt;/code>. Currently it should either be &lt;code>NA&lt;/code> or contain some text that says &amp;ldquo;Select &amp;hellip; to register for this group&amp;rdquo;. Recode this variable to say &lt;code>&amp;quot;Closed&amp;quot;&lt;/code> if the current value is &lt;code>NA&lt;/code> or &lt;code>&amp;quot;Open&amp;quot;&lt;/code> otherwise. Save the resulting dataset with this new variables as &lt;code>clubs&lt;/code>, i.e., overwrite the original data frame. Then, display the first 10 rows of the dataset, moving &lt;code>membership_status&lt;/code> to the beginning of the dataset to make sure it appears in the output in your rendered document.&lt;/p>
&lt;/blockquote>
&lt;p>This time, let&amp;rsquo;s try
&lt;a href="https://claude.ai/" target="_blank" rel="noopener">Claude&lt;/a> by Anthropic. Below is the first response:&lt;/p>
&lt;blockquote>
&lt;p>I&amp;rsquo;ll help you clean up the membership_status variable. Let&amp;rsquo;s break this down into steps:&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Recode membership_status to "Closed" if NA, "Open" otherwise&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>clubs&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>membership_status&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/ifelse.html'>ifelse&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/NA.html'>is.na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>clubs&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>membership_status&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='s'>"Closed"&lt;/span>, &lt;span class='s'>"Open"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Reorder columns to put membership_status first&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>clubs&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>clubs&lt;/span>&lt;span class='o'>[&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"membership_status"&lt;/span>, &lt;span class='nf'>&lt;a href='https://generics.r-lib.org/reference/setops.html'>setdiff&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/names.html'>names&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>clubs&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='s'>"membership_status"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>]&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Display first 10 rows&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/head.html'>head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>clubs&lt;/span>, &lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;blockquote>
&lt;p>This code will:&lt;/p>
&lt;ul>
&lt;li>Use
&lt;a href="https://rdrr.io/r/base/ifelse.html" target="_blank" rel="noopener">&lt;code>ifelse()&lt;/code>&lt;/a> to recode the variable based on whether it&amp;rsquo;s NA&lt;/li>
&lt;li>Reorder the columns to put membership_status first&lt;/li>
&lt;li>Show the first 10 rows of the modified dataset&lt;/li>
&lt;/ul>
&lt;p>Would you like me to explain any part of this solution in more detail?&lt;/p>
&lt;/blockquote>
&lt;p>I like the offer to explain more at the end! However, the suggested code does not use the tidyverse. In fact, it&amp;rsquo;s perhaps surprising that it uses R, this could very well have been a task for Python or anoher language commonly used for data science problems.&lt;/p>
&lt;p>Let&amp;rsquo;s try again:&lt;/p>
&lt;blockquote>
&lt;p>Can you suggest an answer that uses the tidyverse instead of base R?&lt;/p>
&lt;/blockquote>
&lt;p>And here is the result:&lt;/p>
&lt;blockquote>
&lt;p>Here&amp;rsquo;s how to accomplish the same tasks using tidyverse functions:&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>clubs&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>clubs&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>membership_status &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/if_else.html'>if_else&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/NA.html'>is.na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>membership_status&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> &lt;span class='s'>"Closed"&lt;/span>, &lt;/span>
&lt;span> &lt;span class='s'>"Open"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/relocate.html'>relocate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>membership_status&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>clubs&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/head.html'>head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>10&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;blockquote>
&lt;p>This tidyverse solution:&lt;/p>
&lt;ul>
&lt;li>Uses mutate() with
&lt;a href="https://dplyr.tidyverse.org/reference/if_else.html" target="_blank" rel="noopener">&lt;code>if_else()&lt;/code>&lt;/a> to recode the variable&lt;/li>
&lt;li>Uses relocate() to move membership_status to the front&lt;/li>
&lt;li>Shows the first 10 rows using head()&lt;/li>
&lt;/ul>
&lt;p>The tidyverse version is more readable and follows the principle of chaining operations with the pipe operator (&lt;code>%&amp;gt;%&lt;/code>).
&lt;a href="https://dplyr.tidyverse.org/reference/if_else.html" target="_blank" rel="noopener">&lt;code>if_else()&lt;/code>&lt;/a> is the tidyverse equivalent of base R&amp;rsquo;s
&lt;a href="https://rdrr.io/r/base/ifelse.html" target="_blank" rel="noopener">&lt;code>ifelse()&lt;/code>&lt;/a>, with stricter type checking.&lt;/p>
&lt;p>Would you like me to explain any of these functions in more detail?&lt;/p>
&lt;/blockquote>
&lt;p>We&amp;rsquo;re getting there! For new learners of the tidyverse, there are still a few aspects of this code that might be misleading:&lt;/p>
&lt;ul>
&lt;li>It doesn&amp;rsquo;t use the base pipe operator (&lt;code>|&amp;gt;&lt;/code>), which is the pipe operator used in R for Data Science.&lt;/li>
&lt;li>Line breaks and indentation does not follow
&lt;a href="https://style.tidyverse.org/pipes.html#long-lines" target="_blank" rel="noopener">tidyverse style guidelines&lt;/a>, which suggest that if the arguments to a function don&amp;rsquo;t all fit on one line, each argument should go on its own line.&lt;/li>
&lt;li>If &lt;code>clubs&lt;/code> is a tibble, printing it will only display the first 10 rows anyway, so there&amp;rsquo;s no need for the
&lt;a href="https://rdrr.io/r/utils/head.html" target="_blank" rel="noopener">&lt;code>head()&lt;/code>&lt;/a> call.&lt;/li>
&lt;/ul>
&lt;p>Once again, it&amp;rsquo;s possible to ask the tool to make these updates. At the time of developing this example, Claude didn&amp;rsquo;t provide a sharing link for the conversation (it does now!), but I&amp;rsquo;ve saved it at &lt;a href="https://gist.github.com/mine-cetinkaya-rundel/c74dc7c5f2a27a846574edd063988431">https://gist.github.com/mine-cetinkaya-rundel/c74dc7c5f2a27a846574edd063988431&lt;/a>. Even with vague prompts like &amp;ldquo;If clubs is a tibble, it&amp;rsquo;ll only print out the first 10 rows anyway,&amp;rdquo; it does exactly what we would want it to do, resulting in the following:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>clubs&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>clubs&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>membership_status &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/if_else.html'>if_else&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/NA.html'>is.na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>membership_status&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='s'>"Closed"&lt;/span>, &lt;span class='s'>"Open"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/relocate.html'>relocate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>membership_status&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>clubs&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The operative word here being &amp;ldquo;want&amp;rdquo;. Once again, someone with enough experience with R and the tidyverse would not explicitly ask for these improvements; they would just make them themselves and carry on. But someone who is just learning the tidyverse would likely stop much earlier. In my experience, many new learners stop after the very first prompt, which looks unfamiliar, and hence potentially intimidating. For learners of the tidyverse, the simple &amp;ldquo;Can you do this with the tidyverse?&amp;rdquo; can be a very useful prompt improvement that gets them majority of the way there.&lt;/p>
&lt;h2 id="case-study-3-web-scraping">Case study 3: Web scraping
&lt;a href="#case-study-3-web-scraping">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>For the third and last example we&amp;rsquo;ll try scraping some data from the web, specifically some
&lt;a href="https://www.usclimatedata.com/climate/durham/north-carolina/united-states/usnc0192" target="_blank" rel="noopener">structured North Carolina weather data&lt;/a>. For this example, I&amp;rsquo;ve used
&lt;a href="https://www.perplexity.ai/" target="_blank" rel="noopener">perplexity.ai&lt;/a>.&lt;/p>
&lt;p>My first prompt was:&lt;/p>
&lt;blockquote>
&lt;p>Write code for scraping data from &lt;a href="https://www.usclimatedata.com/climate/durham/north-carolina/united-states/usnc0192">https://www.usclimatedata.com/climate/durham/north-carolina/united-states/usnc0192&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>This resulted in an answer using Python, BeautifulSoup, and pandas. So I followed up with:&lt;/p>
&lt;blockquote>
&lt;p>Use R instead.&lt;/p>
&lt;/blockquote>
&lt;p>This resulted in the following.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Load required libraries&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://rvest.tidyverse.org/'>rvest&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Attaching package: 'rvest'&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; The following object is masked from 'package:readr':&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; guess_encoding&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Define the URL for Durham, North Carolina climate data&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>url&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='s'>"https://www.usclimatedata.com/climate/durham/north-carolina/united-states/usnc0192"&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Read the HTML content from the website&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>webpage&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='http://xml2.r-lib.org/reference/read_xml.html'>read_html&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>url&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Extract the table containing climate data&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>climate_table&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>webpage&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/rename.html'>html_nodes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"table"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>.&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='c'># Assuming the first table contains the relevant data&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/html_table.html'>html_table&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>fill &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Convert the table to a data frame&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>climate_data&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/as.data.frame.html'>as.data.frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>climate_table&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Display the scraped data&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>climate_data&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; JanJa FebFe MarMa AprAp MayMa&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 Average high in ºF Av. high Hi 49.00 53.0 62.00 71.00 79.00&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 2 Average low in ºF Av. low Lo 28.00 29.0 37.00 46.00 56.00&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 3 Av. precipitation in inch Av. precip. Pre. 4.45 3.7 4.69 3.43 4.61&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; JunJu&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 85.00&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 2 65.00&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 3 4.02&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Additionally, the suggestion included optional code for writing the data to CSV even though it wasn&amp;rsquo;t part of the prompt, though also not bad practice either when scraping data from the web.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># Optional: Save the data to a CSV file&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/write.table.html'>write.csv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>climate_data&lt;/span>, &lt;span class='s'>"durham_climate_data.csv"&lt;/span>, row.names &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>First, this code doesn&amp;rsquo;t give us what we want:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>climate_data&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; JanJa FebFe MarMa AprAp MayMa&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 Average high in ºF Av. high Hi 49.00 53.0 62.00 71.00 79.00&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 2 Average low in ºF Av. low Lo 28.00 29.0 37.00 46.00 56.00&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 3 Av. precipitation in inch Av. precip. Pre. 4.45 3.7 4.69 3.43 4.61&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; JunJu&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 1 85.00&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 2 65.00&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; 3 4.02&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We only have the first six months (the first table) and the formatting is not great, especially for the column names. Additionally, this doesn&amp;rsquo;t look like a tidy data frame &amp;ndash; a better organization would be months in rows and temperatures in columns.&lt;/p>
&lt;div class="highlight">
&lt;/div>
&lt;p>Let&amp;rsquo;s follow up with a better articulated prompt:&lt;/p>
&lt;blockquote>
&lt;p>Update the code to scrape data for all months from both of the tables on the website and organizing the data with months as rows and temperature types as columns.&lt;/p>
&lt;/blockquote>
&lt;p>Here is the updated suggestion:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://rvest.tidyverse.org/'>rvest&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyr.tidyverse.org'>tidyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>url&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='s'>"https://www.usclimatedata.com/climate/durham/north-carolina/united-states/usnc0192"&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Read HTML content&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>webpage&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='http://xml2.r-lib.org/reference/read_xml.html'>read_html&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>url&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Extract all tables&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>climate_tables&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>webpage&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/rename.html'>html_nodes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"table"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/html_table.html'>html_table&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>header &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>, fill &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Check if we have at least 2 tables&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>if&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/length.html'>length&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>climate_tables&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;gt;=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='c'># Process first table (Average High Temperatures)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>high_temp&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>climate_tables&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>Month &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, High &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>High &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/numeric.html'>as.numeric&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/grep.html'>gsub&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"[^0-9.]"&lt;/span>, &lt;span class='s'>""&lt;/span>, &lt;span class='nv'>High&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;/span>
&lt;span> &lt;span class='c'># Process second table (Average Low Temperatures)&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>low_temp&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>climate_tables&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>Month &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, Low &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>Low &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/numeric.html'>as.numeric&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/grep.html'>gsub&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"[^0-9.]"&lt;/span>, &lt;span class='s'>""&lt;/span>, &lt;span class='nv'>Low&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;/span>
&lt;span> &lt;span class='c'># Combine and organize data&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>combined_data&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>high_temp&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>full_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>low_temp&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Month"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/factor.html'>factor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Month&lt;/span>, levels &lt;span class='o'>=&lt;/span> &lt;span class='nv'>month.name&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;/span>
&lt;span> &lt;span class='c'># Display cleaned data&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>combined_data&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;/span>
&lt;span> &lt;span class='c'># Save to CSV&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/write.table.html'>write.csv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>combined_data&lt;/span>, &lt;span class='s'>"durham_temperatures.csv"&lt;/span>, row.names &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span> &lt;span class='kr'>else&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/stop.html'>stop&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Required tables not found - website structure may have changed"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Month High Low&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Average high in ºF Av. high Hi 49 89 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Average low in ºF Av. low Lo 28 70 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Av. precipitation in inch Av. precip. Pre. 4.45 3.94&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'>#&amp;gt; [1] TRUE&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>There is a lot going on here, especially for a new learner, and the result is ultimately not what we want:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>combined_data&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Month High Low&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Average high in ºF Av. high Hi 49 89 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Average low in ºF Av. low Lo 28 70 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Av. precipitation in inch Av. precip. Pre. 4.45 3.94&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;/div>
&lt;p>Let&amp;rsquo;s try one more time, following up with this prompt:&lt;/p>
&lt;blockquote>
&lt;p>This is not what I wanted. First scrape the data from the two tables for months January to June and July to December. Then put them together. Then reshape the data to have months as rows and temperature types as columns.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://rvest.tidyverse.org/'>rvest&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org'>dplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyr.tidyverse.org'>tidyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>url&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='s'>"https://www.usclimatedata.com/climate/durham/north-carolina/united-states/usnc0192"&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>webpage&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='http://xml2.r-lib.org/reference/read_xml.html'>read_html&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>url&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Extract all climate tables (4 tables total)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>all_tables&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>webpage&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/rename.html'>html_nodes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"table.climate-table"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/html_table.html'>html_table&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>header &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Process temperature data from first two tables (Jan-Jun and Jul-Dec)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>high_temp&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/bind_rows.html'>bind_rows&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>all_tables&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>1&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>Month &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, High &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>all_tables&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>2&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>Month &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, High &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>High &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/numeric.html'>as.numeric&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/grep.html'>gsub&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"°F"&lt;/span>, &lt;span class='s'>""&lt;/span>, &lt;span class='nv'>High&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Error in all_tables[[1]]: subscript out of bounds&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>low_temp&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/bind_rows.html'>bind_rows&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>all_tables&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>3&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>Month &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, Low &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>all_tables&lt;/span>&lt;span class='o'>[[&lt;/span>&lt;span class='m'>4&lt;/span>&lt;span class='o'>]&lt;/span>&lt;span class='o'>]&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>Month &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>, Low &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>Low &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/numeric.html'>as.numeric&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/grep.html'>gsub&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"°F"&lt;/span>, &lt;span class='s'>""&lt;/span>, &lt;span class='nv'>Low&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Error in all_tables[[3]]: subscript out of bounds&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Combine and format final dataset&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>climate_data&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>high_temp&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>low_temp&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Month"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>Month &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/factor.html'>factor&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Month&lt;/span>, levels &lt;span class='o'>=&lt;/span> &lt;span class='nv'>month.name&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/arrange.html'>arrange&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Month&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>Month&lt;/span>, &lt;span class='nv'>High&lt;/span>, &lt;span class='nv'>Low&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># Display formatted results&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/print.html'>print&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>climate_data&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Month High Low&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> 49 89 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> 28 70 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> 4.45 3.94&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Unfortunately this gives an error. However, the presentation in the answer from Perplexity makes it seem like the data were scraped successfully since a table with rows as months and columns as temperature types is included in the explanation:&lt;/p>
&lt;pre>&lt;code> Month High Low
1 January 50 30
2 February 54 32
3 March 63 39
4 April 72 47
5 May 79 56
6 June 85 64
7 July 89 69
8 August 87 68
9 September 81 60
10 October 72 49
11 November 63 39
12 December 54 32
&lt;/code>&lt;/pre>
&lt;p>I&amp;rsquo;m not sure how these data were extracted, but we know it&amp;rsquo;s not with the R code provided above. The values are also not correct (e.g., high and low in January should be 49 and 28, instead), so it&amp;rsquo;s completely unclear where they&amp;rsquo;re coming from. You can follow along with this thread at &lt;a href="https://www.perplexity.ai/search/write-code-for-scraping-data-f-6kRnwLDTTpe8vItl08Bo3g">https://www.perplexity.ai/search/write-code-for-scraping-data-f-6kRnwLDTTpe8vItl08Bo3g&lt;/a>. I tried a few more prompts and finally gave up. While the other two tasks were much more straightforward, the web scraping task seems to be more difficult for this tool. I should note that I used different services for each task, and the lack of success in this last one might be due to that as well.&lt;/p>
&lt;p>Ultimately, though, as the complexity of the task increases, it (understandably) gets more difficult to get to straightforward and new-learner-friendly answers with simple prompts.&lt;/p>
&lt;h2 id="tips-and-good-practices">Tips and good practices
&lt;a href="#tips-and-good-practices">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I&amp;rsquo;ll wrap up this post with some tips and good practices for using AI tools for (tidyverse) code generation. But first, a disclaimer &amp;ndash; this landscape is changing super quickly. Today&amp;rsquo;s good practices might not be the best approaches for tomorrow. However, the following have held true over the last year so there&amp;rsquo;s a good chance they will remain relevant for some time into the future.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Provide context and engineer prompts:&lt;/strong> This might be obvious, but it should be stated. Providing context, even something as simple as &amp;ldquo;use R&amp;rdquo; or &amp;ldquo;use tidyverse&amp;rdquo; can go a long way in getting a semi-successful first suggestion. Then, continue engineering the prompt until you achieve the results you need, being more articulate about what you want at each step. This is easier said than done, though, for new learners. If you don&amp;rsquo;t know what the right answer should look like, it&amp;rsquo;s much harder to be articulate in your prompt to get to that answer. On the other hand, if you do know what the right answer should look like, you might be more likely to just write the code yourself, instead of coaching the AI tool to get there. Another potentially helpful tip is to end your initial prompt with something like &amp;ldquo;Ask me any clarifying questions before you begin&amp;rdquo;. This way you don&amp;rsquo;t have to think about all the necessary context at once, you can get the tool to ask you for some of the details.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Check for errors:&lt;/strong> This also seems obvious &amp;ndash; you should run the code the tool suggests and check for errors. If the code gives an error, this is easy to catch and potentially easy to address. However, sometimes the code suggests arguments that don&amp;rsquo;t exist that R might silently ignore. These might be unneeded arguments or a needed argument but not used properly due to how it&amp;rsquo;s called or the value it&amp;rsquo;s set to. Such errors are more difficult to identify, particularly in functions you might not be familiar with.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Run the code it gives you, line-by-line, even if the code is in a pipeline:&lt;/strong> Tidyverse data transformation pipelines and ggplot layers are easy to run at once, with the code doing many things with one execution prompt, compared to Base R code where you execute each line of code separately. The scaffolded nature of these pipelines are very nice for keeping all steps associated with a task together and not generating unnecessary interim objects along the way. However, it requires self-discipline to inspect the code line-by-line as opposed to just inspecting the final output. For example, I regularly encounter unnecessary
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a>/
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>ungroup()&lt;/code>&lt;/a>s or
&lt;a href="https://dplyr.tidyverse.org/reference/select.html" target="_blank" rel="noopener">&lt;code>select()&lt;/code>&lt;/a>s steps injected into pipelines. Identifying these requires running the pipeline code line-by-line, and then you can remove or modify them to simplify your answer. My recommendation would be to approach the working with AI tools for code generation with an &amp;ldquo;I&amp;rsquo;m trying to learn how to do this&amp;rdquo; attitude. It&amp;rsquo;s then natural to investigate and interact with each step of the answer. If you approach it with a &amp;ldquo;Solve this for me&amp;rdquo; attitude, it&amp;rsquo;s a lot harder to be critical of seemingly functioning and seemingly good enough code.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Improve code smell:&lt;/strong> While I don&amp;rsquo;t have empirical evidence for this, I believe for humans, taste for good code develops faster than ability. For LLMs, this is the opposite. These tools will happily barf out code that runs without regard to cohesive syntax, avoiding redundancies, etc. Therefore, it&amp;rsquo;s essential to &amp;ldquo;clean up&amp;rdquo; the suggested code to improve its &amp;ldquo;code smell&amp;rdquo;. Below are some steps I regularly use:&lt;/p>
&lt;ul>
&lt;li>Remove redundant library calls.&lt;/li>
&lt;li>Use &lt;code>pkg::function()&lt;/code> syntax only as needed and consistently.&lt;/li>
&lt;li>Avoid mixing and matching base R and tidyverse syntax (e.g., in one step finding mean in a
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarize()&lt;/code>&lt;/a> call and in another step as mean of a vector, &lt;code>mean(df$var)&lt;/code>.&lt;/li>
&lt;li>Remove unnecessary
&lt;a href="https://rdrr.io/r/base/print.html" target="_blank" rel="noopener">&lt;code>print()&lt;/code>&lt;/a> statements.&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;/li>
&lt;li>Consider whether code comments address the &amp;ldquo;why&amp;rdquo; or the &amp;ldquo;what.&amp;rdquo; If comments describe relatively self-documenting code, consider removing them.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Stuck? Start a new chat:&lt;/strong> Each new prompt in a chat/thread is evaluated within the context of previous prompts in that thread. If you&amp;rsquo;re stuck and not getting to a good answer after modifying your prompt a few times, start fresh with a new chat/thread instead.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Use code completion tools sparingly if you&amp;rsquo;re a new user:&lt;/strong> Code completion tools, like
&lt;a href="https://github.com/features/copilot" target="_blank" rel="noopener">GitHub Copilot&lt;/a>, can be huge productivity boosters. But, especially for new learners, they can also be huge distractions as they tend to take action before the user is able to complete a thought in their head. My recommendation for new learners would be to avoid these tools altogether until they get a little faster at going from idea to code by themselves, or at a minimum until they feel like they can consistently write high quality prompts that generate the desired code on the first try. And my recommendation for anyone using code completion tools is to experiment with wait time between prompt and code generation and set a time that works for well for themselves. In my experience, the default wait time can be too short, resulting in code being generated before I can finish writing my prompt or reviewing the prompt I write.&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Use AI tools for help with getting help:&lt;/strong> So far the focus of this post has been on generating code to accomplish certain data science tasks. Perhaps the most important, and most difficult, data science task is asking good questions when you&amp;rsquo;re stuck troubleshooting. And it usually requires or is greatly helped by creating a minimum reproducible example and using tools like
&lt;a href="https://reprex.tidyverse.org/" target="_blank" rel="noopener">reprex&lt;/a>. This often starts with creating a small dataset with certain features, and AI tools can be pretty useful for generating such toy examples.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>And maybe a future post on teaching R in the age of AI! &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>In fact, it&amp;rsquo;s my preferred ggplot2 theme! &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>I&amp;rsquo;ve never seen as many
&lt;a href="https://rdrr.io/r/base/print.html" target="_blank" rel="noopener">&lt;code>print()&lt;/code>&lt;/a> statements in R code as I have over the last year of reading code from hundreds of students who use AI tools to generate code for their assignments with varying levels of success! I don&amp;rsquo;t know why these tools love
&lt;a href="https://rdrr.io/r/base/print.html" target="_blank" rel="noopener">&lt;code>print()&lt;/code>&lt;/a> statements! &lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>For example, in RStudio, go to Tools &amp;gt; Global Options &amp;gt; select Copilot from the left menu and adjust &amp;ldquo;Show code suggestions after keyboard idle (ms)&amp;quot;. &lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Survival analysis for time-to-event data with tidymodels</title><link>https://www.tidyverse.org/blog/2024/04/tidymodels-survival-analysis/</link><pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/04/tidymodels-survival-analysis/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [x] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re tickled pink to announce the support of survival analysis for time-to-event data across tidymodels. The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles. This new support makes survival analysis a first-class citizen in tidymodels and gives censored regression modeling the same flexibility and ease as classification or regression.&lt;/p>
&lt;p>The functionality resides in multiple tidymodels packages. The easiest way to install them all is to install the tidymodels meta-package:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidymodels"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This blog post will highlight why this is useful, explain which additions we&amp;rsquo;ve made to the framework, and point to several places to learn more.&lt;/p>
&lt;p>You can see a full list of changes in the release notes:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://parsnip.tidymodels.org/news/index.html#parsnip-120" target="_blank" rel="noopener">parsnip&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://censored.tidymodels.org/news/index.html#censored-030" target="_blank" rel="noopener">censored&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://yardstick.tidymodels.org/news/index.html#yardstick-130" target="_blank" rel="noopener">yardstick&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflows.tidymodels.org/news/index.html#workflows-114" target="_blank" rel="noopener">workflows&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://tune.tidymodels.org/news/index.html#tune-120" target="_blank" rel="noopener">tune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://finetune.tidymodels.org/news/index.html#finetune-120" target="_blank" rel="noopener">finetune&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://workflowsets.tidymodels.org/news/index.html#workflowsets-110" target="_blank" rel="noopener">workflowsets&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="increasing-usefulness-two-perspectives">Increasing usefulness: Two perspectives
&lt;a href="#increasing-usefulness-two-perspectives">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;d like to situate the changes from two different perspectives: How this is useful for people already familiar with survival analysis as well as for people already familiar with tidymodels.&lt;/p>
&lt;p>If you are already familiar with both: Excellent, this is very much for you! Read on for more details on how these two things come together.&lt;/p>
&lt;h3 id="adding-tidymodels-to-your-tool-kit">Adding tidymodels to your tool kit
&lt;a href="#adding-tidymodels-to-your-tool-kit">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>If you are already familiar with survival analysis but maybe not tidymodels, these changes now unlock a whole framework for predictive modelling for you. It applies tidyverse principles to modeling, meaning it strives to be consistent, composable, and human-centered. The framework covers the modeling process from the initial test/train split of the data all the way to tuning various models. Along the way it offers a rich selection of preprocessing techniques, resampling schemes, and performance metrics along with safe-guards against accidental overfitting. We make the full case for tidymodels at
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels.org&lt;/a>.&lt;/p>
&lt;h3 id="adding-survival-analysis-to-your-tool-kit">Adding survival analysis to your tool kit
&lt;a href="#adding-survival-analysis-to-your-tool-kit">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>If you are already familiar with tidymodels but maybe not survival analysis, these changes let you leverage the familiar framework for an additional type of modeling problem. Survival analysis offers methods for modeling time-to-event data. While it has its roots in medical research, it has broad applications as that event of interest can be so much more than a medical outcome. Take customer churn as an example: We are interested in how long someone is a customer for and when they churn. For customers who churned, we have the complete time for which they were customers. For existing customers, we only know how long they&amp;rsquo;ve been customers for &lt;em>so far&lt;/em>. Such observations are called censored. So what are our modeling choices here?&lt;/p>
&lt;p>We could look at the time and model that as a regression problem. We could look at the event status and model that as a classification problem. Both options might get us somewhere close to an answer to our original modeling question but not quite there. Censored regression models let us model an outcome that includes both aspects, the time and the event status. And with that, it can deal with both censored and uncensored observations appropriately. With this type of model, we can predict the survival time, or in more applied terms, how long someone will stay as a customer. We can also predict the probability of survival at a given time point. This lets us answer questions like &amp;ldquo;How likely is it that this customer will churn after 3 months?&amp;quot;. See which prediction types are available for which models at
&lt;a href="https://censored.tidymodels.org/" target="_blank" rel="noopener">censored.tidymodels.org&lt;/a>.&lt;/p>
&lt;h2 id="ch-ch-changes-whats-new-for-censored-regression">Ch-ch-changes: What&amp;rsquo;s new for censored regression?
&lt;a href="#ch-ch-changes-whats-new-for-censored-regression">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The main components needed for this full-fledged integration of survival analysis into tidymodels were&lt;/p>
&lt;ul>
&lt;li>Survival analysis models that can take censoring into account&lt;/li>
&lt;li>Survival analysis performance metrics that can take censoring into account&lt;/li>
&lt;li>Integrating changes required by these models and metrics into the framework&lt;/li>
&lt;/ul>
&lt;p>For the models, parsnip gained a new mode, &lt;code>&amp;quot;censored regression&amp;quot;&lt;/code>, for existing models as well as new model types such as &lt;code>proportional_hazards()&lt;/code>. Engines for these reside in censored, the parsnip extension package for survival models. The &lt;code>&amp;quot;censored regression&amp;quot;&lt;/code> mode has been around for a while and we&amp;rsquo;ve previously shared posts on
&lt;a href="https://www.tidyverse.org/blog/2021/11/survival-analysis-parsnip-adjacent/" target="_blank" rel="noopener">our initial thoughts&lt;/a> and the
&lt;a href="https://www.tidyverse.org/blog/2022/08/censored-0-1-0/" target="_blank" rel="noopener">release of censored&lt;/a>.&lt;/p>
&lt;p>Now we&amp;rsquo;ve added the metrics:
&lt;a href="https://yardstick.tidymodels.org/news/index.html#yardstick-130" target="_blank" rel="noopener">yardstick v1.3.0&lt;/a> includes new metrics for assessing censored regression models. Somewhat similar to how metrics for classification models can take class predictions or probability predictions as input, these survival metrics can take predicted survival times or predictions of survival probabilities as input.&lt;/p>
&lt;p>The new metrics are&lt;/p>
&lt;ul>
&lt;li>Concordance index on the survival time via &lt;code>concordance_survival()&lt;/code>&lt;/li>
&lt;li>Brier score on the survival probability and its integrated version via &lt;code>brier_survival()&lt;/code> and &lt;code>brier_survival_integrated()&lt;/code>&lt;/li>
&lt;li>ROC curve and the area under the ROC curve on the survival probabilities via &lt;code>roc_curve_survival()&lt;/code> and &lt;code>auc_roc_survival()&lt;/code> respectively&lt;/li>
&lt;/ul>
&lt;p>The probability of survival is always defined &lt;em>at a certain point in time&lt;/em>. We call that time point the &lt;em>evaluation time&lt;/em> because it is then also the time point at which we want to evaluate model performance. Metrics that work on the survival probabilities are also called &lt;em>dynamic metrics&lt;/em> and you can read more about them here:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-metrics/" target="_blank" rel="noopener">Dynamic Performance Metrics for Event Time Data&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-metrics-details/" target="_blank" rel="noopener">Accounting for Censoring in Performance Metrics for Event Time Data&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>The evaluation time is also the best example to illustrate the changes necessary to the framework. Most of them were under the hood but the evaluation time is user-facing. Let&amp;rsquo;s take a look at that.&lt;/p>
&lt;p>While the need for evaluation times is dependent on type of metric, it is not actually specified as an argument to the metric functions. Like yardstick&amp;rsquo;s other metrics, those take pre-made predictions as the input. So where do you specify it then?&lt;/p>
&lt;ul>
&lt;li>You need to specify it to directly predict survival probabilities, via
&lt;a href="https://rdrr.io/r/stats/predict.html" target="_blank" rel="noopener">&lt;code>predict()&lt;/code>&lt;/a> or &lt;code>augment()&lt;/code>. We introduced the corresponding &lt;code>eval_time&lt;/code> argument first for fitted models in
&lt;a href="https://www.tidyverse.org/blog/2023/04/censored-0-2-0/#introducing-eval_time" target="_blank" rel="noopener">parsnip and censored&lt;/a> and have added it now for workflows.&lt;/li>
&lt;li>You also need to specify it for the tuning functions &lt;code>tune_*()&lt;/code> from tune and finetune as they will predict survival probabilities as part of the tuning process.&lt;/li>
&lt;li>Lastly, the &lt;code>eval_time&lt;/code> argument now shows up when working with tuning/resampling results such as in &lt;code>show_best()&lt;/code> or &lt;code>autoplot()&lt;/code>. Those changes span the packages generating and working with resampling results: tune, finetune, and workflowsets.&lt;/li>
&lt;/ul>
&lt;p>As we said, plenty of changes under the hood but you shouldn&amp;rsquo;t need to notice them. Everything else should work &amp;ldquo;as usual,&amp;rdquo; allowing the same ease and flexibility in combining tidymodels functionality for censored regression as for classification and regression.&lt;/p>
&lt;h2 id="the-pieces-come-together-a-case-study">The pieces come together: A case study
&lt;a href="#the-pieces-come-together-a-case-study">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To see it all in action, check out the case study
&lt;a href="https://www.tidymodels.org/learn/statistics/survival-case-study/" target="_blank" rel="noopener">How long until building complaints are dispositioned?&lt;/a> on the tidymodels website!&lt;/p>
&lt;p>The city of New York publishes data on complaints received by the Department of Buildings that include how long it takes for a complaint to be dealt with (&amp;ldquo;dispositioned&amp;rdquo;) as well as several characteristics of the complaint. The case study covers a full analysis. We start with splitting the data into test and training sets, explore different preprocessing strategies and model types via tuning, and predict with a final model. It should give you a good first impression of how to use tidymodels for predictive survival analysis.&lt;/p>
&lt;p>We hope you&amp;rsquo;ll find this new capability of tidymodels useful!&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many thanks to the people who contributed to our packages since their last release:&lt;/p>
&lt;p>&lt;strong>parsnip:&lt;/strong>
&lt;a href="https://github.com/AlbanOtt2" target="_blank" rel="noopener">@AlbanOtt2&lt;/a>,
&lt;a href="https://github.com/birbritto" target="_blank" rel="noopener">@birbritto&lt;/a>,
&lt;a href="https://github.com/christophscheuch" target="_blank" rel="noopener">@christophscheuch&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/Freestyleyang" target="_blank" rel="noopener">@Freestyleyang&lt;/a>,
&lt;a href="https://github.com/gmcmacran" target="_blank" rel="noopener">@gmcmacran&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jmunyoon" target="_blank" rel="noopener">@jmunyoon&lt;/a>,
&lt;a href="https://github.com/joscani" target="_blank" rel="noopener">@joscani&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/marcelglueck" target="_blank" rel="noopener">@marcelglueck&lt;/a>,
&lt;a href="https://github.com/mattheaphy" target="_blank" rel="noopener">@mattheaphy&lt;/a>,
&lt;a href="https://github.com/mesdi" target="_blank" rel="noopener">@mesdi&lt;/a>,
&lt;a href="https://github.com/millermc38" target="_blank" rel="noopener">@millermc38&lt;/a>,
&lt;a href="https://github.com/nipnipj" target="_blank" rel="noopener">@nipnipj&lt;/a>,
&lt;a href="https://github.com/pgg1309" target="_blank" rel="noopener">@pgg1309&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/seb-mueller" target="_blank" rel="noopener">@seb-mueller&lt;/a>,
&lt;a href="https://github.com/SHo-JANG" target="_blank" rel="noopener">@SHo-JANG&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>,
&lt;a href="https://github.com/vidarsumo" target="_blank" rel="noopener">@vidarsumo&lt;/a>, and
&lt;a href="https://github.com/wzbillings" target="_blank" rel="noopener">@wzbillings&lt;/a>.&lt;/p>
&lt;p>&lt;strong>censored:&lt;/strong>
&lt;a href="https://github.com/bcjaeger" target="_blank" rel="noopener">@bcjaeger&lt;/a>,
&lt;a href="https://github.com/brunocarlin" target="_blank" rel="noopener">@brunocarlin&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/noahtsao" target="_blank" rel="noopener">@noahtsao&lt;/a>, and
&lt;a href="https://github.com/tripartio" target="_blank" rel="noopener">@tripartio&lt;/a>.&lt;/p>
&lt;p>&lt;strong>yardstick:&lt;/strong>
&lt;a href="https://github.com/aecoleman" target="_blank" rel="noopener">@aecoleman&lt;/a>,
&lt;a href="https://github.com/asb2111" target="_blank" rel="noopener">@asb2111&lt;/a>,
&lt;a href="https://github.com/atsyplenkov" target="_blank" rel="noopener">@atsyplenkov&lt;/a>,
&lt;a href="https://github.com/bgreenwell" target="_blank" rel="noopener">@bgreenwell&lt;/a>,
&lt;a href="https://github.com/Dpananos" target="_blank" rel="noopener">@Dpananos&lt;/a>,
&lt;a href="https://github.com/EduMinsky" target="_blank" rel="noopener">@EduMinsky&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/heidekrueger" target="_blank" rel="noopener">@heidekrueger&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/iacrowe" target="_blank" rel="noopener">@iacrowe&lt;/a>,
&lt;a href="https://github.com/jarbet" target="_blank" rel="noopener">@jarbet&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/mattwarkentin" target="_blank" rel="noopener">@mattwarkentin&lt;/a>,
&lt;a href="https://github.com/maxwell-geospatial" target="_blank" rel="noopener">@maxwell-geospatial&lt;/a>,
&lt;a href="https://github.com/moloscripts" target="_blank" rel="noopener">@moloscripts&lt;/a>,
&lt;a href="https://github.com/rdavis120" target="_blank" rel="noopener">@rdavis120&lt;/a>,
&lt;a href="https://github.com/ruddnr" target="_blank" rel="noopener">@ruddnr&lt;/a>,
&lt;a href="https://github.com/SimonCoulombe" target="_blank" rel="noopener">@SimonCoulombe&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/tbrittoborges" target="_blank" rel="noopener">@tbrittoborges&lt;/a>,
&lt;a href="https://github.com/tonyelhabr" target="_blank" rel="noopener">@tonyelhabr&lt;/a>,
&lt;a href="https://github.com/tripartio" target="_blank" rel="noopener">@tripartio&lt;/a>,
&lt;a href="https://github.com/TSI-PTG" target="_blank" rel="noopener">@TSI-PTG&lt;/a>,
&lt;a href="https://github.com/vnijs" target="_blank" rel="noopener">@vnijs&lt;/a>,
&lt;a href="https://github.com/wbuchanan" target="_blank" rel="noopener">@wbuchanan&lt;/a>, and
&lt;a href="https://github.com/zkrog" target="_blank" rel="noopener">@zkrog&lt;/a>.&lt;/p>
&lt;p>&lt;strong>workflows:&lt;/strong>
&lt;a href="https://github.com/Milardkh" target="_blank" rel="noopener">@Milardkh&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;p>&lt;strong>tune:&lt;/strong>
&lt;a href="https://github.com/AlbertoImg" target="_blank" rel="noopener">@AlbertoImg&lt;/a>,
&lt;a href="https://github.com/dramanica" target="_blank" rel="noopener">@dramanica&lt;/a>,
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/epiheather" target="_blank" rel="noopener">@epiheather&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/joranE" target="_blank" rel="noopener">@joranE&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/jxu" target="_blank" rel="noopener">@jxu&lt;/a>,
&lt;a href="https://github.com/kbodwin" target="_blank" rel="noopener">@kbodwin&lt;/a>,
&lt;a href="https://github.com/kenraywilliams" target="_blank" rel="noopener">@kenraywilliams&lt;/a>,
&lt;a href="https://github.com/KJT-Habitat" target="_blank" rel="noopener">@KJT-Habitat&lt;/a>,
&lt;a href="https://github.com/lionel-" target="_blank" rel="noopener">@lionel-&lt;/a>,
&lt;a href="https://github.com/marcozanotti" target="_blank" rel="noopener">@marcozanotti&lt;/a>,
&lt;a href="https://github.com/MasterLuke84" target="_blank" rel="noopener">@MasterLuke84&lt;/a>,
&lt;a href="https://github.com/mikemahoney218" target="_blank" rel="noopener">@mikemahoney218&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>,
&lt;a href="https://github.com/Peter4801" target="_blank" rel="noopener">@Peter4801&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>,
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>, and
&lt;a href="https://github.com/walkerjameschris" target="_blank" rel="noopener">@walkerjameschris&lt;/a>.&lt;/p>
&lt;p>&lt;strong>finetune:&lt;/strong>
&lt;a href="https://github.com/EmilHvitfeldt" target="_blank" rel="noopener">@EmilHvitfeldt&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jdberson" target="_blank" rel="noopener">@jdberson&lt;/a>,
&lt;a href="https://github.com/jrosell" target="_blank" rel="noopener">@jrosell&lt;/a>,
&lt;a href="https://github.com/mfansler" target="_blank" rel="noopener">@mfansler&lt;/a>,
&lt;a href="https://github.com/ruddnr" target="_blank" rel="noopener">@ruddnr&lt;/a>,
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>, and
&lt;a href="https://github.com/topepo" target="_blank" rel="noopener">@topepo&lt;/a>.&lt;/p>
&lt;p>&lt;strong>workflowsets:&lt;/strong>
&lt;a href="https://github.com/dchiu911" target="_blank" rel="noopener">@dchiu911&lt;/a>,
&lt;a href="https://github.com/hfrick" target="_blank" rel="noopener">@hfrick&lt;/a>,
&lt;a href="https://github.com/jkylearmstrong" target="_blank" rel="noopener">@jkylearmstrong&lt;/a>,
&lt;a href="https://github.com/PathosEthosLogos" target="_blank" rel="noopener">@PathosEthosLogos&lt;/a>, and
&lt;a href="https://github.com/simonpcouch" target="_blank" rel="noopener">@simonpcouch&lt;/a>.&lt;/p></description></item><item><title>Fair machine learning with tidymodels</title><link>https://www.tidyverse.org/blog/2024/03/tidymodels-fairness/</link><pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2024/03/tidymodels-fairness/</guid><description>&lt;p>We&amp;rsquo;re very, very excited to announce the introduction of tools for assessing model fairness in tidymodels. This effort involved coordination from various groups at Posit over the course of over a year and resulted in a toolkit that we believe is both principled and impactful.&lt;/p>
&lt;p>Fairness assessment features for tidymodels extend across a number of packages; to install each, use the tidymodels meta-package:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidymodels"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="machine-learning-fairness">Machine learning fairness
&lt;a href="#machine-learning-fairness">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In recent years, high-profile analyses have called attention to many contexts where the use of machine learning deepened inequities in our communities. In late 2022, a group of Posit employees across teams, roles, and technical backgrounds formed a reading group to engage with literature on machine learning fairness, a research field that aims to define what it means for a statistical model to act unfairly and take measures to address that unfairness. We then designed new software functionality and learning resources to help data scientists measure and critique the ways in which the machine learning models they&amp;rsquo;ve built might disparately impact people affected by that model.&lt;/p>
&lt;p>Perhaps the core question that fairness as a research field has tried to address is exactly what a machine learning model acting fairly entails. As a recent primer notes, &amp;ldquo;[t]he rapid growth of this new field has led to wildly inconsistent motivations, terminology, and notation, presenting a serious challenge for cataloging and comparing definitions&amp;rdquo; (Mitchell et al. 2021).&lt;/p>
&lt;p>Broadly, approaches to fairness provide tooling&amp;mdash;whether social or algorithmic&amp;mdash;to understand the social implications of utilizing a machine learning model. Different researchers categorize approaches to fairness differently, but work in this area can be loosely summarized as falling into one or more of the following categories: assessment, mitigation, and critique.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;em>Assessment&lt;/em>: Fairness assessment tooling allows practitioners to measure the degree to which a machine learning model acts unfairly given some definition of fairness. The chosen definition of fairness greatly impacts whether a model&amp;rsquo;s predictions are regarded as fair. While there have been many, many definitions of fairness proposed&amp;mdash;a popular tutorial on these approaches compares 21 canonical definitions&amp;mdash;most all of them involve simple inequalities based on a small set of conditional probabilities (Narayanan 2018; Mitchell et al. 2021).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>Mitigation&lt;/em>: Given a fairness assessment, mitigation approaches reduce the degree to which a machine learning model acts unfairly given some definition of fairness. Making a model more fair according to one metric may make that model less fair according to another. Approaches to mitigation are subject to impossibility theorems, which show that &amp;ldquo;definitions are not mathematically or morally compatible in general&amp;rdquo; (Mitchell et al. 2021). That is, there is no way to satisfy many fairness constraints at once unless we live in a world with no inequality to start with. However, more recent studies have shown that near-fairness with respect to several definitions is quite possible (Bell et al. 2023).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>Critique&lt;/em>: While approaches to assessment and mitigation seek to reduce complexity and situate notions of fairness in mathematical formalism, sociotechnical critique provides tooling to better understand how mathematical notions of fairness may fail to account for the real-world complexity of social phenomena. Work in this discipline often reveals that, in the process of measuring or addressing unfairness by some definition, methods for fairness assessment and mitigation may actually ignore, necessitate, or introduce unfairness by some other definition.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>The work of scoping Posit&amp;rsquo;s resources for fair machine learning, in large part, involved striking the right balance between tools in these categories and integrating them thoughtfully among our existing functionality. Rather than supporting as many fairness-oriented tools as possible, our goal is to best enable users of our tools to reason well about the fairness-relevant decisions they make throughout the modeling process.&lt;/p>
&lt;h2 id="additions-to-tidymodels">Additions to tidymodels
&lt;a href="#additions-to-tidymodels">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The most recent set of tidymodels releases include changes that provide support for assessment and critique using the tidymodels framework.&lt;/p>
&lt;!-- TODO: change the tidymodels.org urls to the merged versions -->
&lt;p>The most recent yardstick release introduces
&lt;a href="https://yardstick.tidymodels.org/reference/new_groupwise_metric.html" target="_blank" rel="noopener">a tool to create fairness metrics&lt;/a> with the problem context in mind, as well as
&lt;a href="https://yardstick.tidymodels.org/reference/index.html#fairness-metrics" target="_blank" rel="noopener">some outputs of that tool&lt;/a> implementing common fairness metrics. For a higher-level introduction to the concept of a groupwise metric, we&amp;rsquo;ve also introduced a
&lt;a href="https://yardstick.tidymodels.org/articles/grouping.html" target="_blank" rel="noopener">new package vignette&lt;/a>. To see those fairness metrics in action, see
&lt;a href="https://www.tidymodels.org/learn/work/fairness-detectors/" target="_blank" rel="noopener">this new article on tidymodels.org&lt;/a>, a case study using data about GPT detectors.&lt;/p>
&lt;p>The most recent tune release integrates support for those fairness metrics from yardstick, allowing users to evaluate fairness criteria across resamples. To demonstrate those features in context, we&amp;rsquo;ve added
&lt;a href="https://www.tidymodels.org/learn/work/fairness-readmission/" target="_blank" rel="noopener">another new article on tidymodels.org&lt;/a>, modeling hospital readmission for patients with Type I diabetes.&lt;/p>
&lt;p>Notably, we haven&amp;rsquo;t introduced functionality to support mitigation. While a number of methods have proliferated over the years to finetune models to act more fairly with respect to some fairness criteria, each apply only in relatively niche applications with modest experimental results (Agarwal et al. 2018; Mittelstadt, Wachter, and Russell 2023). For now, we believe that, in practice, the efforts of practitioners&amp;mdash;and thus our efforts to support them&amp;mdash;are better spent engaging with the sociotechnical context of a given modeling problem (Holstein et al. 2019).&lt;/p>
&lt;p>We&amp;rsquo;re excited to support modeling practitioners in fairness-oriented analysis of models and look forward to seeing how these methods are put to work.&lt;/p>
&lt;h2 id="references">References
&lt;a href="#references">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;div id="refs" class="references csl-bib-body hanging-indent" entry-spacing="0">
&lt;div id="ref-agarwal2018" class="csl-entry">
&lt;p>Agarwal, Alekh, Alina Beygelzimer, Miroslav Dudı́k, John Langford, and Hanna Wallach. 2018. &amp;ldquo;A Reductions Approach to Fair Classification.&amp;rdquo; In &lt;em>International Conference on Machine Learning&lt;/em>, 60&amp;ndash;69. PMLR.&lt;/p>
&lt;/div>
&lt;div id="ref-bell2023" class="csl-entry">
&lt;p>Bell, Andrew, Lucius Bynum, Nazarii Drushchak, Tetiana Zakharchenko, Lucas Rosenblatt, and Julia Stoyanovich. 2023. &amp;ldquo;The Possibility of Fairness: Revisiting the Impossibility Theorem in Practice.&amp;rdquo; In &lt;em>Proceedings of the 2023 ACM Conference on Fairness, Accountability, and Transparency&lt;/em>, 400&amp;ndash;422. FAccT &amp;lsquo;23. New York, NY, USA: Association for Computing Machinery. &lt;a href="https://doi.org/10.1145/3593013.3594007">https://doi.org/10.1145/3593013.3594007&lt;/a>.&lt;/p>
&lt;/div>
&lt;div id="ref-holstein2019" class="csl-entry">
&lt;p>Holstein, Kenneth, Jennifer Wortman Vaughan, Hal Daumé III, Miro Dudik, and Hanna Wallach. 2019. &amp;ldquo;Improving Fairness in Machine Learning Systems: What Do Industry Practitioners Need?&amp;rdquo; In &lt;em>Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems&lt;/em>, 1&amp;ndash;16.&lt;/p>
&lt;/div>
&lt;div id="ref-mitchell2021" class="csl-entry">
&lt;p>Mitchell, Shira, Eric Potash, Solon Barocas, Alexander D&amp;rsquo;Amour, and Kristian Lum. 2021. &amp;ldquo;Algorithmic Fairness: Choices, Assumptions, and Definitions.&amp;rdquo; &lt;em>Annual Review of Statistics and Its Application&lt;/em> 8 (1): 141&amp;ndash;63. &lt;a href="https://doi.org/10.1146/annurev-statistics-042720-125902">https://doi.org/10.1146/annurev-statistics-042720-125902&lt;/a>.&lt;/p>
&lt;/div>
&lt;div id="ref-mittelstadt2023" class="csl-entry">
&lt;p>Mittelstadt, Brent, Sandra Wachter, and Chris Russell. 2023. &amp;ldquo;The Unfairness of Fair Machine Learning: Levelling down and Strict Egalitarianism by Default.&amp;rdquo; &lt;em>arXiv Preprint arXiv:2302.02404&lt;/em>.&lt;/p>
&lt;/div>
&lt;div id="ref-narayanan2018" class="csl-entry">
&lt;p>Narayanan, Arvind. 2018. &amp;ldquo;Translation Tutorial: 21 Fairness Definitions and Their Politics.&amp;rdquo; In &lt;em>Proc. Conf. Fairness Accountability Transp., New York, Usa&lt;/em>, 1170:3.&lt;/p>
&lt;/div>
&lt;/div></description></item><item><title>Teaching the tidyverse in 2023</title><link>https://www.tidyverse.org/blog/2023/08/teach-tidyverse-23/</link><pubDate>Mon, 07 Aug 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/08/teach-tidyverse-23/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html) -- not applicable
-->
&lt;p>Another year, another roundup of tidyverse updates, through the lens of an educator. As with previous
&lt;a href="https://www.tidyverse.org/blog/2021/08/teach-tidyverse-2021/">teaching the tidyverse posts&lt;/a>, much of what is discussed in this blog post has already been covered in package update posts, however the goal of this roundup is to summarize the highlights that are most relevant to teaching data science with the tidyverse, particularly to new learners.&lt;/p>
&lt;p>Specifically, I&amp;rsquo;ll discuss:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="#resource-refresh">Resource refresh&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#nine-core-packages-in-tidyverse-200">Nine core packages in tidyverse 2.0.0&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#conflict-resolution-in-the-tidyverse">Conflict resolution in the tidyverse&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#improved-and-expanded-_join-functionality">Improved and expanded &lt;code>*_join()&lt;/code> functionality&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#per-operation-grouping">Per operation grouping&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#quality-of-life-improvements-to-case_when-and-if_else">Quality of life improvements to &lt;code>case_when()&lt;/code> and &lt;code>if_else()&lt;/code>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#new-syntax-for-separating-columns">New syntax for separating columns&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#new-argument-for-line-geoms-linewidth">New argument for line geoms: linewidth&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#other-highlights">Other highlights&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#coming-up">Coming up&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>And different from previous posts on this topic, this one comes with a video! If you&amp;rsquo;d like a live demo of the code examples, and a few more additional tips along the way, you can watch the video below.&lt;/p>
&lt;center>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/KsBBRHAgAhM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;/center>
&lt;p>Throughout this blog post you&amp;rsquo;ll encounter some code chunks with the comment &lt;code>previously&lt;/code>, indicating what you used to do in the tidyverse. Often these will be coupled with chunks with the comment &lt;code>now, optionally&lt;/code>, indicating what you &lt;em>can&lt;/em> now do with the tidyverse. And rarely, they will be coupled with chunks with the comment &lt;code>now&lt;/code>, indicating what you &lt;em>should&lt;/em> do instead now with the tidyverse.&lt;/p>
&lt;p>Let&amp;rsquo;s get started with the obligatory&amp;hellip;&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching core tidyverse packages&lt;/span> ──────────────────────── tidyverse 2.0.0 ──&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dplyr &lt;/span> 1.1.2 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>readr &lt;/span> 2.1.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>forcats &lt;/span> 1.0.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>stringr &lt;/span> 1.5.0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>ggplot2 &lt;/span> 3.4.2 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tibble &lt;/span> 3.2.1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>lubridate&lt;/span> 1.9.2 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tidyr &lt;/span> 1.3.0&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>purrr &lt;/span> 1.0.1 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ────────────────────────────────────────── tidyverse_conflicts() ──&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Use the conflicted package (&lt;span style='color: #0000BB; font-style: italic;'>&amp;lt;http://conflicted.r-lib.org/&amp;gt;&lt;/span>) to force all conflicts to become errors&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And, let&amp;rsquo;s also load the
&lt;a href="https://allisonhorst.github.io/palmerpenguins/" target="_blank" rel="noopener">palmerpenguins&lt;/a> package that we will use in examples.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://allisonhorst.github.io/palmerpenguins/'>palmerpenguins&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="resource-refresh">Resource refresh
&lt;a href="#resource-refresh">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>R for Data Science, 2nd Edition is out!
&lt;a href="https://www.tidyverse.org/blog/2023/07/r4ds-2e/">This blog post&lt;/a> (and the
&lt;a href="https://r4ds.hadley.nz/preface-2e.html" target="_blank" rel="noopener">book&amp;rsquo;s preface&lt;/a>) outlines updates since the first edition. Updates to the book served as the motivation for many of the changes mentioned in the remainder of this post as as well as on the Tidyverse blog over the last year. Now that the book is out, you can expect the pace of change to slow down again for a while, which means plenty of time for phasing these changes into your teaching materials.&lt;/p>
&lt;p>One change in the 2nd Edition that will most likely affect almost all of your teaching materials is the use of the native R pipe (&lt;code>|&amp;gt;&lt;/code>) instead of the magrittr pipe (&lt;code>%&amp;gt;%&lt;/code>). If you&amp;rsquo;re not familiar with the similarities and differences between these operators, I recommend reading
&lt;a href="https://www.tidyverse.org/blog/2023/04/base-vs-magrittr-pipe/" target="_blank" rel="noopener">this comparison blog post&lt;/a>. And I strongly recommend making this update since it will allow students to perform piped operations with any R function, and hence allow them to keep their data pipeline workflows regardless of whether the next package they learn is from the tidyverse (or package that uses tidyverse principles) or not.&lt;/p>
&lt;h2 id="nine-core-packages-in-tidyverse-200">Nine core packages in tidyverse 2.0.0
&lt;a href="#nine-core-packages-in-tidyverse-200">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The main update in tidyverse 2.0.0, which was released in March 2023, is that it
&lt;a href="https://lubridate.tidyverse.org/" target="_blank" rel="noopener">lubridate&lt;/a> is now a core tidyverse package. The lubridate package that makes it easier to do the things R does with date-times, is now a core tidyverse package. So, while many of your scripts in the past may have started with&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># previously&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://lubridate.tidyverse.org'>lubridate&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>you can now just do&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># now&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>and the lubridate package will be loaded as well.&lt;/p>
&lt;p>If you, like me, use a graphic like the one below that maps the core tidyverse packages to phases of the data science cycle, here is an updated graphic including lubridate.&lt;/p>
&lt;p>&lt;img src="images/data-science.png" data-fig-alt="Data science cycle: import, tidy, transform, visualize, model, communicate. Packages readr and tibble are for import. Packages tidyr and purr for tidy and transform. Packages dplyr, stringr, forcats, and lubridate are for transform. Package ggplot2 is for visualize." />&lt;/p>
&lt;h2 id="conflict-resolution-in-the-tidyverse">Conflict resolution in the tidyverse
&lt;a href="#conflict-resolution-in-the-tidyverse">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>You may have also noticed that the package loading message for the tidyverse has been updated as well, and now advertises the
&lt;a href="https://conflicted.r-lib.org/" target="_blank" rel="noopener">conflicted&lt;/a> package.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ────────────────────────────────────────── tidyverse_conflicts() ──&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Use the conflicted package (&lt;span style='color: #0000BB; font-style: italic;'>&amp;lt;http://conflicted.r-lib.org/&amp;gt;&lt;/span>) to force all conflicts to become errors&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Conflict resolution in R, i.e., what to do if multiple packages that are loaded in a session have functions with the same name, can get tricky, and the conflicted package is designed to help with that. R&amp;rsquo;s default conflict resolution gives precedence to the most recently loaded package. For example, if you use the filter function before loading the tidyverse, R will use
&lt;a href="https://rdrr.io/r/stats/filter.html" target="_blank" rel="noopener">&lt;code>stats::filter()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Adelie"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Error in eval(expr, envir, enclos): object 'species' not found&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>However, after loading the tidyverse, when you call
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a>, R will &lt;em>silently&lt;/em> choose
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>dplyr::filter()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Adelie"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 152 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie Torgersen 39.1 18.7 181 &lt;span style='text-decoration: underline;'>3&lt;/span>750&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie Torgersen 39.5 17.4 186 &lt;span style='text-decoration: underline;'>3&lt;/span>800&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie Torgersen 40.3 18 195 &lt;span style='text-decoration: underline;'>3&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie Torgersen &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie Torgersen 36.7 19.3 193 &lt;span style='text-decoration: underline;'>3&lt;/span>450&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie Torgersen 39.3 20.6 190 &lt;span style='text-decoration: underline;'>3&lt;/span>650&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie Torgersen 38.9 17.8 181 &lt;span style='text-decoration: underline;'>3&lt;/span>625&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie Torgersen 39.2 19.6 195 &lt;span style='text-decoration: underline;'>4&lt;/span>675&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie Torgersen 34.1 18.1 193 &lt;span style='text-decoration: underline;'>3&lt;/span>475&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie Torgersen 42 20.2 190 &lt;span style='text-decoration: underline;'>4&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 142 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 2 more variables: sex &amp;lt;fct&amp;gt;, year &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This silent conflict resolution approach works fine until it doesn&amp;rsquo;t, and then it can be very frustrating to debug. The conflicted package does not allow for silent conflict resolution:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://conflicted.r-lib.org/'>conflicted&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Adelie"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'>:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> &lt;span style='color: #555555;'>[conflicted]&lt;/span> &lt;span style='font-weight: bold;'>filter&lt;/span> found in 2 packages.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Either pick the one you want with `::`:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::filter&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> &lt;span style='color: #0000BB;'>stats&lt;/span>::filter&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Or declare a preference with `conflicts_prefer()`:&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> `conflicts_prefer(dplyr::filter)`&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>•&lt;/span> `conflicts_prefer(stats::filter)`&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can, of course, use
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>dplyr::filter()&lt;/code>&lt;/a> but if you have a bunch of data wrangling pipelines, which is likely the case if you&amp;rsquo;re teaching data wrangling, it can get pretty busy.&lt;/p>
&lt;p>Instead, with conflicted, you can explicitly declare which
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a> you want to use at the beginning (of a session, of a script, or of an R Markdown or Quarto file) with
&lt;a href="https://conflicted.r-lib.org/reference/conflicts_prefer.html" target="_blank" rel="noopener">&lt;code>conflicts_prefer()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://conflicted.r-lib.org/reference/conflicts_prefer.html'>conflicts_prefer&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>dplyr&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nv'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>[conflicted]&lt;/span> Will prefer &lt;span style='color: #0000BB; font-weight: bold;'>dplyr&lt;/span>::filter over any other package.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span> &lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Adelie"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 152 × 8&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie Torgersen 39.1 18.7 181 &lt;span style='text-decoration: underline;'>3&lt;/span>750&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie Torgersen 39.5 17.4 186 &lt;span style='text-decoration: underline;'>3&lt;/span>800&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie Torgersen 40.3 18 195 &lt;span style='text-decoration: underline;'>3&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie Torgersen &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie Torgersen 36.7 19.3 193 &lt;span style='text-decoration: underline;'>3&lt;/span>450&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie Torgersen 39.3 20.6 190 &lt;span style='text-decoration: underline;'>3&lt;/span>650&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie Torgersen 38.9 17.8 181 &lt;span style='text-decoration: underline;'>3&lt;/span>625&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie Torgersen 39.2 19.6 195 &lt;span style='text-decoration: underline;'>4&lt;/span>675&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie Torgersen 34.1 18.1 193 &lt;span style='text-decoration: underline;'>3&lt;/span>475&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie Torgersen 42 20.2 190 &lt;span style='text-decoration: underline;'>4&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 142 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 2 more variables: sex &amp;lt;fct&amp;gt;, year &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Getting back to the package loading message&amp;hellip; It can be tempting, particularly in a teaching scenario, particularly to an audience of new learners, and particularly if you teach with slides and messages take up valuable slide real estate, I would urge you to not hide startup messages from teaching materials. Instead, address them early on to:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Encourage reading and understanding messages, warnings, and errors &amp;ndash; teaching people to read error messages is hard enough, it&amp;rsquo;s going to be even harder if you&amp;rsquo;re not modeling that to them.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Help during hard-to-debug situations resulting from base R&amp;rsquo;s silent conflict resolution &amp;ndash; because, let&amp;rsquo;s face it, someone in your class, if not you during a live-coding session, will see that pesky object not found error at some point when using
&lt;a href="https://dplyr.tidyverse.org/reference/filter.html" target="_blank" rel="noopener">&lt;code>filter()&lt;/code>&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="improved-and-expanded-_join-functionality">Improved and expanded &lt;code>*_join()&lt;/code> functionality
&lt;a href="#improved-and-expanded-_join-functionality">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://dplyr.tidyverse.org/" target="_blank" rel="noopener">dplyr&lt;/a> package has long had the
&lt;a href="https://dplyr.tidyverse.org/articles/two-table.html" target="_blank" rel="noopener">&lt;code>*_join()&lt;/code> family of functions&lt;/a> for joining data frames. dplyr 1.1.0 introduced a
&lt;a href="https://www.tidyverse.org/blog/2023/01/dplyr-1-1-0-joins/" target="_blank" rel="noopener">bunch of extensions&lt;/a> that bring joins closer to the power available in other systems like SQL and &lt;code>data.table&lt;/code>.&lt;/p>
&lt;h3 id="join_by">&lt;code>join_by()&lt;/code>
&lt;a href="#join_by">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>New functionality for join functions includes a new
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> function for the &lt;code>by&lt;/code> argument. So, while in the past your code may have looked like the following:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># previously
*_join(
x, y,
by = c("&lt;x var>" = "&lt;y var>")
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>you can now do:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># now, optionally
*_join(
x, y,
by = join_by(&lt;x var> == &lt;y var>)
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>For example, suppose you have the following information on the three islands we have penguins from:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>islands&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>name&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>coordinates&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Torgersen"&lt;/span>, &lt;span class='s'>"64°46′S 64°5′W"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Biscoe"&lt;/span>, &lt;span class='s'>"65°26′S 65°30′W"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='s'>"Dream"&lt;/span>, &lt;span class='s'>"64°44′S 64°14′W"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>islands&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; name coordinates &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Torgersen 64°46′S 64°5′W &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Biscoe 65°26′S 65°30′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Dream 64°44′S 64°14′W&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can join this to the penguins data frame by matching the &lt;code>island&lt;/code> column in the penguins data frame to the &lt;code>name&lt;/code> column in the islands data frame:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>islands&lt;/span>, &lt;/span>
&lt;span> by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>island&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='nv'>island&lt;/span>, &lt;span class='nv'>coordinates&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 344 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species island coordinates &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> Adelie Torgersen 64°46′S 64°5′W&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 334 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>While &lt;code>by = c(&amp;quot;island&amp;quot; = &amp;quot;name&amp;quot;)&lt;/code> would still work, I would recommend teaching
&lt;a href="https://dplyr.tidyverse.org/reference/join_by.html" target="_blank" rel="noopener">&lt;code>join_by()&lt;/code>&lt;/a> over &lt;code>by&lt;/code> so that:&lt;/p>
&lt;ol>
&lt;li>You can read it out loud as &amp;ldquo;where x is equal to y&amp;rdquo;, just like in other logical statements where &lt;code>==&lt;/code> is pronounced as &amp;ldquo;is equal to&amp;rdquo;.&lt;/li>
&lt;li>You don&amp;rsquo;t have to worry about &lt;code>by = c(x = y)&lt;/code> (which is invalid) vs. &lt;code>by = c(x = &amp;quot;y&amp;quot;)&lt;/code> (which is valid) vs. &lt;code>by = c(&amp;quot;x&amp;quot; = &amp;quot;y&amp;quot;)&lt;/code> (which is also valid).&lt;/li>
&lt;/ol>
&lt;p>In fact, for succinctness, you might avoid the argument name and express this as:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>islands&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>island&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="handling-various-matches">Handling various matches
&lt;a href="#handling-various-matches">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The &lt;code>*_join()&lt;/code> functions now have additional arguments for handling &lt;code>multiple&lt;/code> matches and &lt;code>unmatched&lt;/code> rows as well as for specifying the &lt;code>relationship&lt;/code> between the two data frames.&lt;/p>
&lt;p>So, while in the past your code may have looked like the following:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># previously
*_join(
x, y, by
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>you can now do:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># now, optionally
*_join(
x, y, by,
multiple = "all",
unmatched = "drop",
relationship = NULL
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Let&amp;rsquo;s set up three data frames to demonstrate the new functionality:&lt;/p>
&lt;ul>
&lt;li>Information about three penguins, one row per &lt;code>samp_id&lt;/code>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>three_penguins&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>samp_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>island&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='s'>"Adelie"&lt;/span>, &lt;span class='s'>"Torgersen"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='s'>"Gentoo"&lt;/span>, &lt;span class='s'>"Biscoe"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='s'>"Chinstrap"&lt;/span>, &lt;span class='s'>"Dream"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>three_penguins&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 Chinstrap Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;ul>
&lt;li>Information about weight measurements of these penguins, one row per &lt;code>samp_id&lt;/code>, &lt;code>meas_id&lt;/code> combination:&lt;/li>
&lt;/ul>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>samp_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>meas_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>3220&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>3250&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>4730&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>4725&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>4000&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>4050&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>weight_measurements&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id body_mass_g&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;ul>
&lt;li>Information about flipper measurements of these penguins, one row per &lt;code>samp_id&lt;/code>, &lt;code>meas_id&lt;/code> combination:&lt;/li>
&lt;/ul>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>flipper_measurements&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>samp_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>meas_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>flipper_length_mm&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>193&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>195&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>214&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>216&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>203&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='m'>2&lt;/span>, &lt;span class='m'>203&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>flipper_measurements&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id flipper_length_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 2 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 1 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 2 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 1 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 2 203&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>One-to-many relationships don&amp;rsquo;t require extra care, they just work:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>three_penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>weight_measurements&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id species island meas_id body_mass_g&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Adelie Torgersen 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 Adelie Torgersen 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 Gentoo Biscoe 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 Gentoo Biscoe 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 Chinstrap Dream 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 Chinstrap Dream 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>However, many-to-many relationships require some extra care. For example, if we join the &lt;code>three_penguins&lt;/code> data frame to the &lt;code>flipper_measurements&lt;/code> data frame, we get a warning:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>flipper_measurements&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning in left_join(weight_measurements, flipper_measurements, join_by(samp_id)): Detected an unexpected many-to-many relationship between `x` and `y`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 1 of `x` matches multiple rows in `y`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 1 of `y` matches multiple rows in `x`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> If a many-to-many relationship is expected, set `relationship =&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; "many-to-many"` to silence this warning.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 12 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id.x body_mass_g meas_id.y flipper_length_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 2 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 2 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 1 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 2 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 1 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 2 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 1 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 2 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 1 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 2 203&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We get a warning about unexpected many-to-many relationships (unexpected because we didn&amp;rsquo;t specify this type of relationship in our join call), and the warning suggests setting &lt;code>relationship = &amp;quot;many-to-many&amp;quot;&lt;/code>. And note that we went from 6 rows (measurements) to 12, which is also unexpected.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>flipper_measurements&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>, relationship &lt;span class='o'>=&lt;/span> &lt;span class='s'>"many-to-many"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 12 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id.x body_mass_g meas_id.y flipper_length_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 2 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 1 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 2 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 1 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 2 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 1 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 2 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 1 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 2 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 1 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 2 203&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With &lt;code>relationship = &amp;quot;many-to-many&amp;quot;&lt;/code>, we no longer get a warning. However, the &amp;ldquo;explosion of rows&amp;rdquo; issue is still there. Addressing that requires rethinking what we join the two data frames by:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>flipper_measurements&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>, &lt;span class='nv'>meas_id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 4&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id body_mass_g flipper_length_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 193&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 195&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 214&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 216&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 203&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 203&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can see that while the warning nudged us towards setting &lt;code>relationship = &amp;quot;many-to-many&amp;quot;&lt;/code>, turns out the correct way to address the problem was to join by both &lt;code>samp_id&lt;/code> and &lt;code>meas_id&lt;/code>.&lt;/p>
&lt;p>We&amp;rsquo;ll wrap up our discussion on new functionality for handling &lt;code>unmatched&lt;/code> cases. We&amp;rsquo;ll create one more data frame (&lt;code>four_penguins&lt;/code>) to exemplify this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>four_penguins&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>samp_id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>island&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='s'>"Adelie"&lt;/span>, &lt;span class='s'>"Torgersen"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='s'>"Gentoo"&lt;/span>, &lt;span class='s'>"Biscoe"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='s'>"Chinstrap"&lt;/span>, &lt;span class='s'>"Dream"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>4&lt;/span>, &lt;span class='s'>"Adelie"&lt;/span>, &lt;span class='s'>"Biscoe"&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>four_penguins&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 4 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 Chinstrap Dream &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 4 Adelie Biscoe&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If we just join &lt;code>weight_measurements&lt;/code> to &lt;code>four_penguins&lt;/code>, the unmatched fourth penguin silently disappears, which is less than ideal, particularly in a more realistic scenario with many more observations:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>four_penguins&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id body_mass_g species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 Chinstrap Dream &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 Chinstrap Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Setting &lt;code>unmatched = &amp;quot;error&amp;quot;&lt;/code> protects you from accidentally dropping rows:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>four_penguins&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>, unmatched &lt;span class='o'>=&lt;/span> &lt;span class='s'>"error"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00; font-weight: bold;'>Error&lt;/span>&lt;span style='font-weight: bold;'> in `left_join()`:&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #BBBB00;'>!&lt;/span> Each row of `y` must be matched by `x`.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Row 4 of `y` was not matched.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Once you see the error message, you can decide how to handle the unmatched rows, e.g., explicitly drop them.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>weight_measurements&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate-joins.html'>left_join&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>four_penguins&lt;/span>, &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/join_by.html'>join_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>samp_id&lt;/span>&lt;span class='o'>)&lt;/span>, unmatched &lt;span class='o'>=&lt;/span> &lt;span class='s'>"drop"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 5&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; samp_id meas_id body_mass_g species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 1 &lt;span style='text-decoration: underline;'>3&lt;/span>220 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 1 2 &lt;span style='text-decoration: underline;'>3&lt;/span>250 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 2 1 &lt;span style='text-decoration: underline;'>4&lt;/span>730 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> 2 2 &lt;span style='text-decoration: underline;'>4&lt;/span>725 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> 3 1 &lt;span style='text-decoration: underline;'>4&lt;/span>000 Chinstrap Dream &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> 3 2 &lt;span style='text-decoration: underline;'>4&lt;/span>050 Chinstrap Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>There are many more developments related to &lt;code>*_join()&lt;/code> functions (e.g.,
&lt;a href="https://www.tidyverse.org/blog/2023/01/dplyr-1-1-0-joins/#inequality-joins">inequality joins&lt;/a> and
&lt;a href="https://www.tidyverse.org/blog/2023/01/dplyr-1-1-0-joins/#rolling-joins">rolling joins&lt;/a>), but many of these likely wouldn&amp;rsquo;t come up in an introductory course so we won&amp;rsquo;t get into their details. A good place to read more about them is
&lt;a href="https://r4ds.hadley.nz/joins.html#sec-non-equi-joins" target="_blank" rel="noopener">R for Data Science, 2nd edition&lt;/a>.&lt;/p>
&lt;p>Exploding joins (i.e., joins that result in a larger number of rows than either of the data frames from bie) can be hard to debug for students! Teaching them the tools to diagnose whether the join they performed, and that may not have given an error, is indeed the one they wanted to perform. Did they lose any cases? Did they gain an unexpected amount of cases? Did they perform a join without thinking and take down the entire teaching server? These things happen, particularly if students are working with their own data for an open-ended project!&lt;/p>
&lt;h2 id="per-operation-grouping">Per operation grouping
&lt;a href="#per-operation-grouping">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To calculate grouped summary statistics, you previously needed to do something like this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># previously&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now, an alternative approach is to pass the groups directly in the
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarize()&lt;/code>&lt;/a> call:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># now, optionally&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>y&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>x&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Let&amp;rsquo;s take a look at the differences between these two approaches before making a recommendation for one over the other.
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> can result in groups that persist in the output, particularly when grouping by multiple variables. For example, in the following pipeline we group the penguins data frame by &lt;code>species&lt;/code> and &lt;code>sex&lt;/code>, find mean body weights for each resulting species / sex combination, and then show the first observation in the output with &lt;code>slice_head(n = 1)&lt;/code>. Since the output is grouped by species, this results in one summary statistic per species.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sex&lt;/span>, &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='nv'>sex&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mean_bw &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice_head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>n &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `summarise()` has grouped output by 'species'. You can override using the&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `.groups` argument.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># Groups: species [3]&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species sex mean_bw&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Adelie female &lt;span style='text-decoration: underline;'>3&lt;/span>369.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Chinstrap female &lt;span style='text-decoration: underline;'>3&lt;/span>527.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Gentoo female &lt;span style='text-decoration: underline;'>4&lt;/span>680.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If we explicitly drop the groups in the
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>summarize()&lt;/code>&lt;/a> call, so that the output is no longer grouped, we get just one row in our output.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sex&lt;/span>, &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='nv'>sex&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>mean_bw &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>, .groups &lt;span class='o'>=&lt;/span> &lt;span class='s'>"drop"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/slice.html'>slice_head&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>n &lt;span class='o'>=&lt;/span> &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species sex mean_bw&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Adelie female &lt;span style='text-decoration: underline;'>3&lt;/span>369.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This pair of examples show that whether your output is grouped or not can affect downstream results, and if you&amp;rsquo;re a
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> user, you&amp;rsquo;ve probably been burnt by this once or twice.&lt;/p>
&lt;p>Per-operation grouping allows you to define groups in a &lt;code>.by&lt;/code> argument, and these groups don&amp;rsquo;t persist. So, regardless of whether you group by one or two variables, the resulting data frame after calculating a summary statistic is not grouped.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># group by 1 variable&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sex&lt;/span>, &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> mean_bw &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> .by &lt;span class='o'>=&lt;/span> &lt;span class='nv'>species&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species mean_bw&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Adelie &lt;span style='text-decoration: underline;'>3&lt;/span>706.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Gentoo &lt;span style='text-decoration: underline;'>5&lt;/span>092.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Chinstrap &lt;span style='text-decoration: underline;'>3&lt;/span>733.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># group by 2 variables&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sex&lt;/span>, &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarize&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> mean_bw &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/mean.html'>mean&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;/span>
&lt;span> .by &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>species&lt;/span>, &lt;span class='nv'>sex&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 6 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; species sex mean_bw&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> Adelie male &lt;span style='text-decoration: underline;'>4&lt;/span>043.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> Adelie female &lt;span style='text-decoration: underline;'>3&lt;/span>369.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> Gentoo female &lt;span style='text-decoration: underline;'>4&lt;/span>680.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>4&lt;/span> Gentoo male &lt;span style='text-decoration: underline;'>5&lt;/span>485.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>5&lt;/span> Chinstrap female &lt;span style='text-decoration: underline;'>3&lt;/span>527.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>6&lt;/span> Chinstrap male &lt;span style='text-decoration: underline;'>3&lt;/span>939.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>So, when teaching grouped operations, you now have the option to choose between these two approaches. The most important teaching tip I can give, particularly for teaching to new learners, is to choose one method and stick to it. The &lt;code>.by&lt;/code> method will result in fewer outputs that are unintentionally grouped, and hence, might potentially be easier for new learners. And while this approach is mentioned in R for Data Science, 2nd edition, the
&lt;a href="https://dplyr.tidyverse.org/reference/group_by.html" target="_blank" rel="noopener">&lt;code>group_by()&lt;/code>&lt;/a> approach is described in more detail.&lt;/p>
&lt;p>On the other hand. for more experienced learners, particularly those learning to design their own functions and packages, the evolution of grouping in the tidyverse can be an interesting subject to review.&lt;/p>
&lt;h2 id="quality-of-life-improvements-to-case_when-and-if_else">Quality of life improvements to &lt;code>case_when()&lt;/code> and &lt;code>if_else()&lt;/code>
&lt;a href="#quality-of-life-improvements-to-case_when-and-if_else">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>
&lt;h3 id="case_when">&lt;code>case_when()&lt;/code>
&lt;a href="#case_when">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Previously, when writing a
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> statement, you had to use &lt;code>TRUE&lt;/code> to indicate &amp;ldquo;all else&amp;rdquo;. Additionally,
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> has historically been strict about the types on the right-hand side, e.g., requiring &lt;code>NA_character&lt;/code> when other right-hand side values are characters, and not letting you get away with just &lt;code>NA&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># previously
df |>
mutate(
x = case_when(
&lt;condition 1> ~ "value 1",
&lt;condition 2> ~ "value 2",
&lt;condition 3> ~ "value 3",
TRUE ~ NA_character_
)
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now, optionally, you can define &amp;ldquo;all else&amp;rdquo; in a &lt;code>.default&lt;/code> argument of
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a> and you no longer need to worry about the type of &lt;code>NA&lt;/code> you use on the right-hand side.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'># now, optionally
df |>
mutate(
x = case_when(
&lt;condition 1> ~ "value 1",
&lt;condition 2> ~ "value 2",
&lt;condition 3> ~ "value 3",
.default = NA
)
)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>For example, you can now do something like the following when creating a categorical version of a numerical variable that has some &lt;code>NA&lt;/code>s.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> bm_cat &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/case_when.html'>case_when&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/NA.html'>is.na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='kc'>NA&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>body_mass_g&lt;/span> &lt;span class='o'>&amp;lt;&lt;/span> &lt;span class='m'>3550&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"Small"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/between.html'>between&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>, &lt;span class='m'>3550&lt;/span>, &lt;span class='m'>4750&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='s'>"Medium"&lt;/span>,&lt;/span>
&lt;span> .default &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Large"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/relocate.html'>relocate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>, &lt;span class='nv'>bm_cat&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 344 × 9&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; body_mass_g bm_cat species island bill_length_mm bill_depth_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>750 Medium Adelie Torgersen 39.1 18.7&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>800 Medium Adelie Torgersen 39.5 17.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>250 Small Adelie Torgersen 40.3 18 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> Adelie Torgersen &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>450 Small Adelie Torgersen 36.7 19.3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>650 Medium Adelie Torgersen 39.3 20.6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>625 Medium Adelie Torgersen 38.9 17.8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='text-decoration: underline;'>4&lt;/span>675 Medium Adelie Torgersen 39.2 19.6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>475 Small Adelie Torgersen 34.1 18.1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='text-decoration: underline;'>4&lt;/span>250 Medium Adelie Torgersen 42 20.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 334 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 3 more variables: flipper_length_mm &amp;lt;int&amp;gt;, sex &amp;lt;fct&amp;gt;, year &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="if_else">&lt;code>if_else()&lt;/code>
&lt;a href="#if_else">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Similarly,
&lt;a href="https://dplyr.tidyverse.org/reference/if_else.html" target="_blank" rel="noopener">&lt;code>if_else()&lt;/code>&lt;/a> is no longer as strict about typed missing values either.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> bm_unit &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/if_else.html'>if_else&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>!&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/NA.html'>is.na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/paste.html'>paste&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>, &lt;span class='s'>"g"&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='kc'>NA&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/relocate.html'>relocate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>body_mass_g&lt;/span>, &lt;span class='nv'>bm_unit&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 344 × 9&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; body_mass_g bm_unit species island bill_length_mm bill_depth_mm&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>750 3750 g Adelie Torgersen 39.1 18.7&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>800 3800 g Adelie Torgersen 39.5 17.4&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>250 3250 g Adelie Torgersen 40.3 18 &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> Adelie Torgersen &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;span style='color: #BB0000;'>NA&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>450 3450 g Adelie Torgersen 36.7 19.3&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>650 3650 g Adelie Torgersen 39.3 20.6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>625 3625 g Adelie Torgersen 38.9 17.8&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> &lt;span style='text-decoration: underline;'>4&lt;/span>675 4675 g Adelie Torgersen 39.2 19.6&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> &lt;span style='text-decoration: underline;'>3&lt;/span>475 3475 g Adelie Torgersen 34.1 18.1&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> &lt;span style='text-decoration: underline;'>4&lt;/span>250 4250 g Adelie Torgersen 42 20.2&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 334 more rows&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># ℹ 3 more variables: flipper_length_mm &amp;lt;int&amp;gt;, sex &amp;lt;fct&amp;gt;, year &amp;lt;int&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>While these may be seemingly small improvements, I think they have huge benefits for teaching and learning. It&amp;rsquo;s a blessing to not have to introduce &lt;code>NA_character_&lt;/code> and friends as early as introducing
&lt;a href="https://dplyr.tidyverse.org/reference/if_else.html" target="_blank" rel="noopener">&lt;code>if_else()&lt;/code>&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/reference/case_when.html" target="_blank" rel="noopener">&lt;code>case_when()&lt;/code>&lt;/a>! Different types of &lt;code>NA&lt;/code>s are a good topic for a course on R as a programming language, statistical computing, etc. but they are unnecessarily complex for an introductory course.&lt;/p>
&lt;h2 id="new-syntax-for-separating-columns">New syntax for separating columns
&lt;a href="#new-syntax-for-separating-columns">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The following table summarizes new syntax for separating columns in tidyr that supersede
&lt;a href="https://tidyr.tidyverse.org/reference/extract.html" target="_blank" rel="noopener">&lt;code>extract()&lt;/code>&lt;/a>,
&lt;a href="https://tidyr.tidyverse.org/reference/separate.html" target="_blank" rel="noopener">&lt;code>separate()&lt;/code>&lt;/a>, and
&lt;a href="https://tidyr.tidyverse.org/reference/separate_rows.html" target="_blank" rel="noopener">&lt;code>separate_rows()&lt;/code>&lt;/a>. These updates are motivated by the goal of achieving a set of functions that have more consistent names and arguments, have better performance, and provide a new approach for handling problems:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">&lt;/th>
&lt;th align="left">&lt;strong>MAKE COLUMNS&lt;/strong>&lt;/th>
&lt;th align="left">&lt;strong>MAKE ROWS&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">Separate with delimiter&lt;/td>
&lt;td align="left">
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_delim()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">
&lt;a href="https://tidyr.tidyverse.org/reference/separate_longer_delim.html" target="_blank" rel="noopener">&lt;code>separate_longer_delim()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Separate by position&lt;/td>
&lt;td align="left">
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_position()&lt;/code>&lt;/a>&lt;/td>
&lt;td align="left">
&lt;a href="https://tidyr.tidyverse.org/reference/separate_longer_delim.html" target="_blank" rel="noopener">&lt;code>separate_longer_position()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Separate with regular expression&lt;/td>
&lt;td align="left">&lt;/td>
&lt;td align="left">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Here is an example for using some of these functions. Let&amp;rsquo;s suppose we have data on three penguins with their descriptions.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>three_penguin_descriptions&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/tribble.html'>tribble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>~&lt;/span>&lt;span class='nv'>id&lt;/span>, &lt;span class='o'>~&lt;/span>&lt;span class='nv'>description&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>1&lt;/span>, &lt;span class='s'>"Species: Adelie, Island - Torgersen"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>2&lt;/span>, &lt;span class='s'>"Species: Gentoo, Island - Biscoe"&lt;/span>,&lt;/span>
&lt;span> &lt;span class='m'>3&lt;/span>, &lt;span class='s'>"Species: Chinstrap, Island - Dream"&lt;/span>,&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>three_penguin_descriptions&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 2&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id description &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Species: Adelie, Island - Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 Species: Gentoo, Island - Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 Species: Chinstrap, Island - Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can seaprate the description column into &lt;code>species&lt;/code> and &lt;code>island&lt;/code> with
&lt;a href="https://tidyr.tidyverse.org/reference/separate_wider_delim.html" target="_blank" rel="noopener">&lt;code>separate_wider_delim()&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>three_penguin_descriptions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate_wider_delim.html'>separate_wider_delim&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> cols &lt;span class='o'>=&lt;/span> &lt;span class='nv'>description&lt;/span>,&lt;/span>
&lt;span> delim &lt;span class='o'>=&lt;/span> &lt;span class='s'>", "&lt;/span>,&lt;/span>
&lt;span> names &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"species"&lt;/span>, &lt;span class='s'>"island"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Species: Adelie Island - Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 Species: Gentoo Island - Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 Species: Chinstrap Island - Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Or we can do so with regular expressions:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>three_penguin_descriptions&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/separate_wider_delim.html'>separate_wider_regex&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> cols &lt;span class='o'>=&lt;/span> &lt;span class='nv'>description&lt;/span>,&lt;/span>
&lt;span> patterns &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='s'>"Species: "&lt;/span>, species &lt;span class='o'>=&lt;/span> &lt;span class='s'>"[^,]+"&lt;/span>, &lt;/span>
&lt;span> &lt;span class='s'>", "&lt;/span>, &lt;/span>
&lt;span> &lt;span class='s'>"Island - "&lt;/span>, island &lt;span class='o'>=&lt;/span> &lt;span class='s'>".*"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 3&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; id species island &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 1 Adelie Torgersen&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 2 Gentoo Biscoe &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 3 Chinstrap Dream&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If teaching folks coming from doing data manipulation in spreadsheets, leverage that to motivate different types of &lt;code>separate_*()&lt;/code> functions, and show the benefits of programming over point-and-click software for more advanced operations like separating longer and separating with regular expressions.&lt;/p>
&lt;h2 id="new-argument-for-line-geoms-linewidth">New argument for line geoms: &lt;code>linewidth&lt;/code>
&lt;a href="#new-argument-for-line-geoms-linewidth">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you, like me, have a bunch of scatterplots with smooth lines overlaid on them, you might run into the following warning.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># previously&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>flipper_length_mm&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_smooth.html'>geom_smooth&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>size &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BBBB;'>ℹ&lt;/span> Please use `linewidth` instead.&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>This warning is displayed once every 8 hours.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>Call `lifecycle::last_lifecycle_warnings()` to see where this warning was&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>generated.&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; `geom_smooth()` using method = 'loess' and formula = 'y ~ x'&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-42-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Instead of &lt;code>size&lt;/code>, you should now be using &lt;code>linewidth&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># now&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>penguins&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/drop_na.html'>drop_na&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>flipper_length_mm&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>body_mass_g&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_smooth.html'>geom_smooth&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>linewidth &lt;span class='o'>=&lt;/span> &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; `geom_smooth()` using method = 'loess' and formula = 'y ~ x'&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-43-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>The teaching tip should be obvious here&amp;hellip; Check the output of your old teaching materials thoroughly to not make a fool of yourself when teaching! 🤣&lt;/p>
&lt;h2 id="other-highlights">Other highlights
&lt;a href="#other-highlights">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>purrr 1.0.0: While purrr is likely not a common topic in introductory data science curricula, if you do teach iteration with purrr, you&amp;rsquo;ll want to check out the
&lt;a href="https://www.tidyverse.org/blog/2022/12/purrr-1-0-0/" target="_blank" rel="noopener">purrr 1.0.0 blog post&lt;/a>. I also highly recommend
&lt;a href="https://youtu.be/EGAs7zuRutY" target="_blank" rel="noopener">Hadley&amp;rsquo;s purrr video&lt;/a> to those who are new to purrr as well as those who want to quickly review most recent updates to it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>webR 0.1.0: webR provides a framework for creating websites where users can run R code directly within the web browser, without R installed on their device or a supporting computational R server. This is hugely exciting for writing educational materials, like interactive lesson notes, and there&amp;rsquo;s already a Quarto extension that allows you to do this: &lt;a href="https://github.com/coatless/quarto-webr">https://github.com/coatless/quarto-webr&lt;/a>. I think this is an important space to watch for educators!&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="coming-up">Coming up
&lt;a href="#coming-up">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I will be teaching a &amp;ldquo;Teaching Data Science Masterclass&amp;rdquo; at posit::conf(2023), with a module specifically on teaching the Tidyverse.
&lt;a href="https://youtu.be/5TVd_whxUus" target="_blank" rel="noopener">Watch the course trailer&lt;/a> and
&lt;a href="https://reg.conf.posit.co/flow/posit/positconf23/attendee-portal/page/sessioncatalog?search=%22Teaching%20Data%20Science%20Masterclass%22&amp;amp;search.sessiontype=1675316728702001wr6r" target="_blank" rel="noopener">read the full course description&lt;/a> if you&amp;rsquo;d like to find out more and sign up!&lt;/p></description></item><item><title>Solutions for R4DS, 2e with Data Trail</title><link>https://www.tidyverse.org/blog/2023/08/data-trail/</link><pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/08/data-trail/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>Last year at rstudio::conf(2022) Jeff Leek
&lt;a href="https://youtu.be/Vf301YCxP1Q" target="_blank" rel="noopener">shared about the Data Trail program&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>DataTrail is a no-cost, paid 14-week educational initiative for young-adult, high school and GED-graduates. DataTrail aims to equip members of underserved communities with the necessary skills and support required to work in the booming field of data science. DataTrail is a fresh take on workforce development that focuses on training both Black, Indigenous, and other people of color (BIPOC) interested in the data science industry &lt;em>&lt;strong>and&lt;/strong>&lt;/em> their potential employers.&lt;/p>
&lt;/blockquote>
&lt;p>We have been so excited then to have the opportunity to work with two Data Trail interns this year!
&lt;a href="https://jabirghaffar.quarto.pub/jabir/" target="_blank" rel="noopener">Jabir Ghaffar&lt;/a> went through the Data Trail program June 2022, and
&lt;a href="https://www.linkedin.com/in/davon-person-1ba973194/" target="_blank" rel="noopener">Davon Person&lt;/a> went through the Data Trail program in 2019, and now works as a Data Programming Specialist with the project. Jabir and Davon worked on solutions for the R for Data Science book, explored some Tidy Tuesday datasets, created their own Quarto websites, and their perspectives helped us learn more about how our tools and documentation can better support emerging data scientists.&lt;/p>
&lt;p>Jabir&amp;rsquo;s primary project was to work on the
&lt;a href="https://mine-cetinkaya-rundel.github.io/r4ds-solutions/" target="_blank" rel="noopener">R for Data Science solutions&lt;/a>. The R for Data Science, 2nd Edition was released in June 2023. In this edition there is a lot of new content, and revisions and additions to exercises. We saw that
&lt;a href="https://jrnold.github.io/r4ds-exercise-solutions/" target="_blank" rel="noopener">Jeffrey Arnold&amp;rsquo;s solutions to the 1st edition&lt;/a> are such a useful resource for the community. Therefore, this project aimed to both create a similar resource for 2nd edition and serve as an educational resource for the interns to help sharpen their tidyverse and general data science skills.&lt;/p>
&lt;p>Some learning highlights for Jabir included faceting (as a solution to overplotting), consistent code styling (which helps make the code more pleasing to read), and, making maps! Specifically, Jabir mentioned that he has always wondered &amp;ldquo;how did they do that?!&amp;rdquo; with maps and found them to be quite intimidating, so it was especially satisfying to create his first heatmap of US states and chance of getting a tornado (&lt;a href="https://jabirghaffar.quarto.pub/jabir/posts/tornado_mapping_exploration">https://jabirghaffar.quarto.pub/jabir/posts/tornado_mapping_exploration&lt;/a>). This was not just a satisfying visualization exercise, but also a great opportunity to dig into unfamiliar data wrangling functions like
&lt;a href="https://dplyr.tidyverse.org/reference/recode.html" target="_blank" rel="noopener">&lt;code>recode()&lt;/code>&lt;/a> for converting 2-letter state abbreviations to state names.&lt;/p>
&lt;p>The exercises in R4DS range from quick, almost obvious, drills to ones that can really make you think and spin your wheels for a bit. One such exercise for Jabir was the one on changing the display of presidential terms from
&lt;a href="https://r4ds.hadley.nz/communication.html#exercises-2" target="_blank" rel="noopener">Section 12.4.6&lt;/a>. The exercise asks:&lt;/p>
&lt;blockquote>
&lt;p>Change the display of the presidential terms by:&lt;/p>
&lt;ul>
&lt;li>Combining the two variants that customize colors and x axis breaks.&lt;/li>
&lt;li>Improving the display of the y axis.&lt;/li>
&lt;li>Labelling each term with the name of the president.&lt;/li>
&lt;li>Adding informative plot labels.&lt;/li>
&lt;li>Placing breaks every 4 years (this is trickier than it seems!).&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>The starting points for the exercise are the following plots from the text:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>presidential&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>id &lt;span class='o'>=&lt;/span> &lt;span class='m'>33&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/row_number.html'>row_number&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>start&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_point.html'>geom_point&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_segment.html'>geom_segment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>xend &lt;span class='o'>=&lt;/span> &lt;span class='nv'>end&lt;/span>, yend &lt;span class='o'>=&lt;/span> &lt;span class='nv'>id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/scale_date.html'>scale_x_date&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>name &lt;span class='o'>=&lt;/span> &lt;span class='kc'>NULL&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nv'>presidential&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>start&lt;/span>, date_labels &lt;span class='o'>=&lt;/span> &lt;span class='s'>"'%y"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nv'>presidential&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>id &lt;span class='o'>=&lt;/span> &lt;span class='m'>33&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/row_number.html'>row_number&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>start&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>id&lt;/span>, color &lt;span class='o'>=&lt;/span> &lt;span class='nv'>party&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_point.html'>geom_point&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_segment.html'>geom_segment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>xend &lt;span class='o'>=&lt;/span> &lt;span class='nv'>end&lt;/span>, yend &lt;span class='o'>=&lt;/span> &lt;span class='nv'>id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/scale_manual.html'>scale_color_manual&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>values &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>Republican &lt;span class='o'>=&lt;/span> &lt;span class='s'>"#E81B23"&lt;/span>, Democratic &lt;span class='o'>=&lt;/span> &lt;span class='s'>"#00AEF3"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/presidential-terms-start-1.png" width="50%" style="display: block; margin: auto;" />&lt;img src="figs/presidential-terms-start-2.png" width="50%" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Jabir says &amp;ldquo;This question completely puzzled me. I&amp;rsquo;d say good luck, and if you&amp;rsquo;re new and you get to this question, I recommend you look at the solution manual.&amp;rdquo;&lt;/p>
&lt;p>The first challenge was identifying where in the text the original plot was developed, and the code associated with it. And then, the most challenging part of this exercise was labeling the y-axis with the names of presidents. It took lots of Googling, but ultimately Jabir used suggestions from ChatGPT to get this over the finish line. And, perhaps, the frustrating and satisfying part is that the answer was pretty obvious in hindsight:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>presidential&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>presidential&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>id &lt;span class='o'>=&lt;/span> &lt;span class='m'>33&lt;/span> &lt;span class='o'>+&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/row_number.html'>row_number&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>presidential&lt;/span>, &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='nv'>start&lt;/span>, y &lt;span class='o'>=&lt;/span> &lt;span class='nv'>id&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_point.html'>geom_point&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>color &lt;span class='o'>=&lt;/span> &lt;span class='nv'>party&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_segment.html'>geom_segment&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>xend &lt;span class='o'>=&lt;/span> &lt;span class='nv'>end&lt;/span>, yend &lt;span class='o'>=&lt;/span> &lt;span class='nv'>id&lt;/span>, color &lt;span class='o'>=&lt;/span> &lt;span class='nv'>party&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_text.html'>geom_text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>label &lt;span class='o'>=&lt;/span> &lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span>, hjust &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, vjust &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>, nudge_y &lt;span class='o'>=&lt;/span> &lt;span class='m'>0.1&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/scale_manual.html'>scale_color_manual&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>values &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>Republican &lt;span class='o'>=&lt;/span> &lt;span class='s'>"#E81B23"&lt;/span>, Democratic &lt;span class='o'>=&lt;/span> &lt;span class='s'>"#00AEF3"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/scale_date.html'>scale_x_date&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> name &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Term"&lt;/span>,&lt;/span>
&lt;span> breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/seq.html'>seq&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>from &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://lubridate.tidyverse.org/reference/ymd.html'>ymd&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"1953-01-20"&lt;/span>&lt;span class='o'>)&lt;/span>, to &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://lubridate.tidyverse.org/reference/ymd.html'>ymd&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"2021-01-20"&lt;/span>&lt;span class='o'>)&lt;/span>, by &lt;span class='o'>=&lt;/span> &lt;span class='s'>"4 years"&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> date_labels &lt;span class='o'>=&lt;/span> &lt;span class='s'>"'%y"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/scale_continuous.html'>scale_y_continuous&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>breaks &lt;span class='o'>=&lt;/span> &lt;span class='m'>34&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='m'>45&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/theme.html'>theme&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> panel.grid.minor &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/element.html'>element_blank&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>,&lt;/span>
&lt;span> axis.ticks.y &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/element.html'>element_blank&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> x &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Term"&lt;/span>,&lt;/span>
&lt;span> y &lt;span class='o'>=&lt;/span> &lt;span class='s'>"President"&lt;/span>,&lt;/span>
&lt;span> title &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Terms of US Presidents"&lt;/span>,&lt;/span>
&lt;span> subtitle &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Eisenhower (34th) to Trump (45th)"&lt;/span>,&lt;/span>
&lt;span> color &lt;span class='o'>=&lt;/span> &lt;span class='s'>"Party"&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/presidential-terms-end-1.png" width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>Jabir felt like moments when he knew what to do and how to answer each question were very satisfying, but the moments where he felt stuck and went into rabbit holes looking for answers made him question whether he wanted to continue becoming a data scientist. Ultimately, though, the project was enjoyable, and not just a great learning experience for Jabir, but also a very meaningful one because it created a resource that can help future data scientists.&lt;/p>
&lt;p>We felt like Jabir and Davon advanced their data science skills, and familiarity with working in open source, throughout the project. It was particularly exciting to see Jabir create his own data science portfolio as a Quarto website with posts on the Tidy Tuesday datasets, and we really appreciated his work on the R4DS Solutions. In going through those, he helped better refine the book, and created a resource that so many people are going to be able to use and learn from. We could see how he learned not just data science, but also grew as a leader who will continue to support others in their learning as he moves on to work as a developer with the Data Trail program. Davon too focused not just on data science, but was a part of our team, and the Data Trail team, providing mentorship to Jabir and bringing teaching approaches, like using Tidy Tuesday datasets, to his community. We are so grateful to have had the opportunity to work with them both, and see this as the beginning of continued collaborations.&lt;/p>
&lt;p>Just like most open-source projects, the
&lt;a href="https://mine-cetinkaya-rundel.github.io/r4ds-solutions/" target="_blank" rel="noopener">R4DS Solutions&lt;/a> is a living and breathing project, still a work-in-progress. We would welcome any community contributions! All perspectives are important here, and it&amp;rsquo;s a great project if you&amp;rsquo;re a first-time contributor.&lt;/p></description></item><item><title>R for Data Science, 2nd edition</title><link>https://www.tidyverse.org/blog/2023/07/r4ds-2e/</link><pubDate>Tue, 11 Jul 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/07/r4ds-2e/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>We&amp;rsquo;re thrilled to announce the publication of the 2nd edition of
&lt;a href="https://r4ds.hadley.nz/" target="_blank" rel="noopener">R for Data Science&lt;/a>.&lt;/p>
&lt;p>The second edition is a major reworking of the first edition, removing material we no longer think is useful, adding material we wish we included in the first edition, and generally updating the text and code to reflect changes in best practices.&lt;/p>
&lt;p>You can read the book online for free at &lt;a href="https://r4ds.hadley.nz/" class="uri">&lt;a href="https://r4ds.hadley.nz">https://r4ds.hadley.nz&lt;/a>&lt;/a>, or
&lt;a href="https://www.amazon.com/dp/1492097403?&amp;amp;tag=hadlwick-20" target="_blank" rel="noopener">buy a physical copy&lt;/a>.&lt;/p>
&lt;p>Read below to find out what&amp;rsquo;s new and what&amp;rsquo;s gone compared to the first edition.&lt;/p>
&lt;h2 id="whats-new">What&amp;rsquo;s new?
&lt;a href="#whats-new">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We have renamed the first part of the book to
&lt;a href="https://r4ds.hadley.nz/whole-game.html" target="_blank" rel="noopener">&amp;ldquo;Whole game&amp;rdquo;&lt;/a>, with the goal of giving you the rough details of the &amp;quot;whole game&amp;quot; of data science, including data visualization, transformation, tidying, and import, before we dive into the details. The data visualization chapter has gained a new section written with the
&lt;a href="https://datasciencebox.org/01-design-principles.html" target="_blank" rel="noopener">&amp;ldquo;cake first&amp;rdquo;&lt;/a> approach, which starts with the final visualization you will learn to make, and then builds up to it layer-by-layer. The data tidying chapter introduces the basics of lengthening and widening data and the data import chapter introduces reading tabular data.&lt;/p>
&lt;p>The second part of the book is
&lt;a href="https://r4ds.hadley.nz/visualize.html" target="_blank" rel="noopener">&amp;quot;Visualize&amp;quot;&lt;/a>, which gives data visualization tools and best practices a more thorough coverage compared to the first edition.&lt;/p>
&lt;p>The third part of the book is now called
&lt;a href="https://r4ds.hadley.nz/transform.html" target="_blank" rel="noopener">&amp;quot;Transform&amp;quot;&lt;/a>and gains new chapters on numbers, logical vectors, and missing values. Much of this content was previously part of the data transformation chapter. In this edition we have expanded them to cover all the details.&lt;/p>
&lt;p>The fourth part of the book is called
&lt;a href="https://r4ds.hadley.nz/import.html" target="_blank" rel="noopener">&amp;quot;Import&amp;quot;&lt;/a>, it's a new set of chapters that goes beyond reading flat text files to working with spreadsheets (Excel and GoogleSheets), databases, and big data (with Arrow) as well as rectangling hierarchical data and scraping data from web sites.&lt;/p>
&lt;p>The
&lt;a href="https://r4ds.hadley.nz/program.html" target="_blank" rel="noopener">&amp;quot;Program&amp;quot;&lt;/a> part has been rewritten from scratch to focus on the most important parts of function writing and iteration. Function writing now includes details on how to wrap tidyverse functions (dealing with the challenges of tidy evaluation), since this has become much easier and more important over the last few years. We have also added a new chapter on important base R functions that you're likely to see in wild-caught R code.&lt;/p>
&lt;p>Finally, the
&lt;a href="https://r4ds.hadley.nz/communicate.html" target="_blank" rel="noopener">&amp;quot;Communicate&amp;quot;&lt;/a> part remains, but has been thoroughly updated to feature
&lt;a href="https://quarto.org/" target="_blank" rel="noopener">Quarto&lt;/a> instead of R Markdown. This edition of the book has been written in Quarto, and it's clearly the tool of the future.&lt;/p>
&lt;h2 id="whats-gone">What&amp;rsquo;s gone?
&lt;a href="#whats-gone">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The first edition of the book featured a part on modeling, which has now been removed. We never had enough room to fully do modelling justice, and there are now much better resources available. We generally recommend using the
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> packages and reading
&lt;a href="https://www.tmwr.org/" target="_blank" rel="noopener">Tidy Modeling with R&lt;/a> by Max Kuhn and Julia Silge.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>This book isn't just the product of Hadley, Mine, and Garrett, but is the result of many conversations (in person and online) that we've had with many people in the R community. Huge thanks to
&lt;a href="https://r4ds.hadley.nz/intro.html#acknowledgments" target="_blank" rel="noopener">all contributors&lt;/a> for the conversations, issues, and pull requests. And, as always, feedback and suggestions are welcome on the
&lt;a href="https://github.com/hadley/r4ds/" target="_blank" rel="noopener">book repository&lt;/a>.&lt;/p></description></item><item><title>`purrr::walk()` this way</title><link>https://www.tidyverse.org/blog/2023/05/purrr-walk-this-way/</link><pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/05/purrr-walk-this-way/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;h2 id="meet-the-map-family">Meet the &lt;code>map()&lt;/code> family
&lt;a href="#meet-the-map-family">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>purrr&amp;rsquo;s
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>map()&lt;/code>&lt;/a> family of functions are tools for &lt;strong>iteration&lt;/strong>, performing the same action on multiple inputs. If you&amp;rsquo;re new to purrr, the
&lt;a href="https://r4ds.had.co.nz/iteration.html#iteration" target="_blank" rel="noopener">Iteration chapter&lt;/a> of R for Data Science is a good place to get started.&lt;/p>
&lt;p>One of the benefits of using
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>map()&lt;/code>&lt;/a> is that the function has variants (e.g. 
&lt;a href="https://purrr.tidyverse.org/reference/map2.html" target="_blank" rel="noopener">&lt;code>map2()&lt;/code>&lt;/a>,
&lt;a href="https://purrr.tidyverse.org/reference/pmap.html" target="_blank" rel="noopener">&lt;code>pmap()&lt;/code>&lt;/a>, etc.) all of which work the same way. To borrow from Jennifer Thompson&amp;rsquo;s excellent
&lt;a href="https://github.com/jenniferthompson/RLadiesIntroToPurrr" target="_blank" rel="noopener">Intro to purrr&lt;/a>,the arguments can be broken into two groups: what we&amp;rsquo;re iterating over, and what we&amp;rsquo;re doing each time. The adapted figure below shows what this looks like for
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>map()&lt;/code>&lt;/a>,
&lt;a href="https://purrr.tidyverse.org/reference/map2.html" target="_blank" rel="noopener">&lt;code>map2()&lt;/code>&lt;/a>, and
&lt;a href="https://purrr.tidyverse.org/reference/pmap.html" target="_blank" rel="noopener">&lt;code>pmap()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;div class="figure" style="text-align: center">
&lt;p>&lt;img src="purrr-map-args.png" alt="Highlighted titles read: what we're iterating over, and what we're doing each time. For map(.x = , .f = ) .x is what we're iterating over and .f is what we're doing each time. For map2(.x = , .y = , .f = ) .x and .y are what we're iterating over and .f is what we're doing each time. For pmap(.l = list(), .f = ) .l is what we're iterating over and .f is what we're doing each time." width="700px" />&lt;/p>
&lt;p class="caption">
Grouped map function arguments, adapted from Intro to purrr by Jennifer Thompson
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>In addition to handling different input arguments, the map family of functions has variants that create different outputs. The following table from the
&lt;a href="https://adv-r.hadley.nz/functionals.html#map-variants" target="_blank" rel="noopener">Map-variants section of Advanced R&lt;/a> shows how the orthogonal inputs and outputs can be used to organise the variants into a matrix:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>List&lt;/th>
&lt;th>Atomic&lt;/th>
&lt;th>Same type&lt;/th>
&lt;th>Nothing&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>One argument&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>map()&lt;/code>&lt;/a>&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>map_lgl()&lt;/code>&lt;/a>, &amp;hellip;&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/modify.html" target="_blank" rel="noopener">&lt;code>modify()&lt;/code>&lt;/a>&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>walk()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Two arguments&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/map2.html" target="_blank" rel="noopener">&lt;code>map2()&lt;/code>&lt;/a>&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/map2.html" target="_blank" rel="noopener">&lt;code>map2_lgl()&lt;/code>&lt;/a>, &amp;hellip;&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/modify.html" target="_blank" rel="noopener">&lt;code>modify2()&lt;/code>&lt;/a>&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/map2.html" target="_blank" rel="noopener">&lt;code>walk2()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>One argument + index&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/imap.html" target="_blank" rel="noopener">&lt;code>imap()&lt;/code>&lt;/a>&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/imap.html" target="_blank" rel="noopener">&lt;code>imap_lgl()&lt;/code>&lt;/a>, &amp;hellip;&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/modify.html" target="_blank" rel="noopener">&lt;code>imodify()&lt;/code>&lt;/a>&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/imap.html" target="_blank" rel="noopener">&lt;code>iwalk()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>N arguments&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/pmap.html" target="_blank" rel="noopener">&lt;code>pmap()&lt;/code>&lt;/a>&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/pmap.html" target="_blank" rel="noopener">&lt;code>pmap_lgl()&lt;/code>&lt;/a>, &amp;hellip;&lt;/td>
&lt;td>&amp;mdash;&lt;/td>
&lt;td>
&lt;a href="https://purrr.tidyverse.org/reference/pmap.html" target="_blank" rel="noopener">&lt;code>pwalk()&lt;/code>&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="whats-up-with-walk">What&amp;rsquo;s up with &lt;code>walk()&lt;/code>?
&lt;a href="#whats-up-with-walk">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Based on the table above, you might think that
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>walk()&lt;/code>&lt;/a> isn&amp;rsquo;t very useful. Indeed,
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>walk()&lt;/code>&lt;/a>,
&lt;a href="https://purrr.tidyverse.org/reference/map2.html" target="_blank" rel="noopener">&lt;code>walk2()&lt;/code>&lt;/a>, and
&lt;a href="https://purrr.tidyverse.org/reference/pmap.html" target="_blank" rel="noopener">&lt;code>pwalk()&lt;/code>&lt;/a> all invisibly return &lt;code>.x&lt;/code>. However, they come in handy when you want to call a function for its &lt;em>&lt;strong>side effects&lt;/strong>&lt;/em> rather than its return value.&lt;/p>
&lt;p>Here, we&amp;rsquo;ll go through two common use cases: saving multiple CSVs, and multiple plots. We&amp;rsquo;ll also make use of the
&lt;a href="https://fs.r-lib.org/" target="_blank" rel="noopener">fs&lt;/a> package, a cross-platform interface to file system operations, to inspect our outputs.&lt;/p>
&lt;p>If you want to try this out but don&amp;rsquo;t want to save files locally, there&amp;rsquo;s a
&lt;a href="https://posit.cloud/content/5983147" target="_blank" rel="noopener">companion project on &lt;strong>Posit Cloud&lt;/strong>&lt;/a> where you can follow along.&lt;/p>
&lt;div class="highlight">
&lt;a class="test-drive-link" href="https://posit.cloud/content/5983147" target="_blank">
&lt;button class="test-drive-btn">&lt;i class="fa fa-cloud" aria-hidden="true">&lt;/i> Test Drive on Posit Cloud&lt;/button>
&lt;/a>
&lt;/div>
&lt;h2 id="writing-and-deleting-multiple-csvs">Writing (and deleting) multiple CSVs
&lt;a href="#writing-and-deleting-multiple-csvs">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To get started, we&amp;rsquo;ll need some data. Let&amp;rsquo;s use the
&lt;a href="https://googlesheets4.tidyverse.org/reference/gs4_examples.html" target="_blank" rel="noopener">gapminder&lt;/a> example Sheet built into
&lt;a href="https://googlesheets4.tidyverse.org/" target="_blank" rel="noopener">googlesheets4&lt;/a>. Because there are multiple worksheets (one for each continent), we&amp;rsquo;ll use
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>map()&lt;/code>&lt;/a> to apply
&lt;a href="https://googlesheets4.tidyverse.org/reference/range_read.html" target="_blank" rel="noopener">&lt;code>read_sheet()&lt;/code>&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> to each one, and get back a list of data frames.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://googlesheets4.tidyverse.org'>googlesheets4&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>ss&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://googlesheets4.tidyverse.org/reference/gs4_examples.html'>gs4_example&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"gapminder"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='c'># get sheet id&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>sheets&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://googlesheets4.tidyverse.org/reference/sheet_properties.html'>sheet_names&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ss&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='c'># get the names of individual sheets&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>gap_dfs&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map.html'>map&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>sheets&lt;/span>, .f &lt;span class='o'>=&lt;/span> \&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>&lt;a href='https://googlesheets4.tidyverse.org/reference/range_read.html'>read_sheet&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>ss&lt;/span>, sheet &lt;span class='o'>=&lt;/span> &lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Reading from &lt;span style='color: #00BBBB;'>gapminder&lt;/span>.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Range '&lt;span style='color: #BBBB00;'>'Africa'&lt;/span>'.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Reading from &lt;span style='color: #00BBBB;'>gapminder&lt;/span>.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Range '&lt;span style='color: #BBBB00;'>'Americas'&lt;/span>'.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Reading from &lt;span style='color: #00BBBB;'>gapminder&lt;/span>.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Range '&lt;span style='color: #BBBB00;'>'Asia'&lt;/span>'.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Reading from &lt;span style='color: #00BBBB;'>gapminder&lt;/span>.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Range '&lt;span style='color: #BBBB00;'>'Europe'&lt;/span>'.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Reading from &lt;span style='color: #00BBBB;'>gapminder&lt;/span>.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> Range '&lt;span style='color: #BBBB00;'>'Oceania'&lt;/span>'.&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that the backslash syntax for anonymous functions (e.g. &lt;code>\(x) x + 1&lt;/code>) was introduced in base R version 4.1.0 as a shorthand for &lt;code>function(x) x + 1&lt;/code>. If you&amp;rsquo;re using an earlier version of R, you can use purrr&amp;rsquo;s shorthand: a formula (e.g. &lt;code>~ .x + 1&lt;/code>).&lt;/p>
&lt;p>Typically, you&amp;rsquo;d want to combine these data frames into one to make it easier to work with your data. To do so, we&amp;rsquo;ll use
&lt;a href="https://purrr.tidyverse.org/reference/list_c.html" target="_blank" rel="noopener">&lt;code>list_rbind()&lt;/code>&lt;/a> on &lt;code>gap_dfs&lt;/code>. I&amp;rsquo;ve kept the intermediary object, since we&amp;rsquo;ll use it in a moment with
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>walk()&lt;/code>&lt;/a>, but could have just as easily piped the output directly. The combination of
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>purrr::map()&lt;/code>&lt;/a> and
&lt;a href="https://purrr.tidyverse.org/reference/list_c.html" target="_blank" rel="noopener">&lt;code>list_rbind()&lt;/code>&lt;/a> is a handy one that you can learn more about in the
&lt;a href="https://r4ds.hadley.nz/iteration.html?#purrrmap-and-list_rbind" target="_blank" rel="noopener">R for Data Science&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>gap_combined&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>gap_dfs&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/list_c.html'>list_rbind&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now let&amp;rsquo;s say that, for whatever reason, you&amp;rsquo;d like to save the data from these sheets as individual CSVs. This is where
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>walk()&lt;/code>&lt;/a> comes into play&amp;mdash;writing out the file with
&lt;a href="https://readr.tidyverse.org/reference/write_delim.html" target="_blank" rel="noopener">&lt;code>write_csv()&lt;/code>&lt;/a> is a &amp;ldquo;side effect.&amp;rdquo; We&amp;rsquo;ll use
&lt;a href="https://fs.r-lib.org/reference/create.html" target="_blank" rel="noopener">&lt;code>fs::dir_create()&lt;/code>&lt;/a> to create a data folder to put our files into&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>, and build a vector of paths/file names. Since we have two arguments, the list of data frames, and the paths, we&amp;rsquo;ll use
&lt;a href="https://purrr.tidyverse.org/reference/map2.html" target="_blank" rel="noopener">&lt;code>walk2()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://fs.r-lib.org/reference/create.html'>dir_create&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"data"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>paths&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://stringr.tidyverse.org/reference/str_glue.html'>str_glue&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"data/gapminder_&amp;#123;tolower(sheets)&amp;#125;.csv"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map2.html'>walk2&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>gap_dfs&lt;/span>, &lt;/span>
&lt;span> &lt;span class='nv'>paths&lt;/span>,&lt;/span>
&lt;span> \&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df&lt;/span>, &lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>&lt;a href='https://readr.tidyverse.org/reference/write_delim.html'>write_csv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df&lt;/span>, &lt;span class='nv'>name&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To see what we&amp;rsquo;ve done, we can use
&lt;a href="https://fs.r-lib.org/reference/dir_tree.html" target="_blank" rel="noopener">&lt;code>fs::dir_tree()&lt;/code>&lt;/a> to see the contents of the directory as a tree, or
&lt;a href="https://fs.r-lib.org/reference/dir_ls.html" target="_blank" rel="noopener">&lt;code>fs::dir_ls()&lt;/code>&lt;/a> to return the paths as a vector. These functions also take &lt;code>glob&lt;/code> and &lt;code>regexp&lt;/code> arguments, allowing you to filter paths by file type with globbing patterns (e.g. &lt;code>*.csv&lt;/code>) or using a regular expression passed on to
&lt;a href="https://rdrr.io/r/base/grep.html" target="_blank" rel="noopener">&lt;code>grep()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://fs.r-lib.org/reference/dir_tree.html'>dir_tree&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"data"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB; font-weight: bold;'>data&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ├── gapminder_africa.csv&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ├── gapminder_americas.csv&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ├── gapminder_asia.csv&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ├── gapminder_europe.csv&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; └── gapminder_oceania.csv&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://fs.r-lib.org/reference/dir_ls.html'>dir_ls&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"data"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; data/gapminder_africa.csv data/gapminder_americas.csv &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; data/gapminder_asia.csv data/gapminder_europe.csv &lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; data/gapminder_oceania.csv&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you&amp;rsquo;re having regrets, or want to return your example project to its previous state, it&amp;rsquo;s just as easy to
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>walk()&lt;/code>&lt;/a>
&lt;a href="https://fs.r-lib.org/reference/delete.html" target="_blank" rel="noopener">&lt;code>fs::file_delete()&lt;/code>&lt;/a> along those same paths.&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map.html'>walk&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>paths&lt;/span>, \&lt;span class='o'>(&lt;/span>&lt;span class='nv'>paths&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://fs.r-lib.org/reference/delete.html'>file_delete&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>paths&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="saving-multiple-plots">Saving multiple plots
&lt;a href="#saving-multiple-plots">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Now, let&amp;rsquo;s say you want to create and save a bunch of plots. We&amp;rsquo;ll use a modified version of the
&lt;a href="https://r4ds.hadley.nz/functions.html#combining-with-other-tidyverse" target="_blank" rel="noopener">&lt;code>conditional_bars()&lt;/code>&lt;/a>&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup> function from the R for Data Science chapter on writing
&lt;a href="https://r4ds.hadley.nz/functions.html" target="_blank" rel="noopener">functions&lt;/a>, and the built-in
&lt;a href="https://ggplot2.tidyverse.org/reference/diamonds.html" target="_blank" rel="noopener">diamonds&lt;/a> dataset.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># modified conditional bars function from R4DS&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>conditional_bars&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>df&lt;/span>, &lt;span class='nv'>condition&lt;/span>, &lt;span class='nv'>var&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>df&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/filter.html'>filter&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span> &lt;span class='nv'>condition&lt;/span> &lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>x &lt;span class='o'>=&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span> &lt;span class='nv'>var&lt;/span> &lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_bar.html'>geom_bar&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>+&lt;/span>&lt;/span>
&lt;span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>ggtitle&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>rlang&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rlang.r-lib.org/reference/englue.html'>englue&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"Count of diamonds by &amp;#123;&amp;#123;var&amp;#125;&amp;#125; where &amp;#123;&amp;#123;condition&amp;#125;&amp;#125;"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>&amp;#125;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>It&amp;rsquo;s easy enough to run this for one condition, for example for the diamonds with &lt;code>cut == &amp;quot;Good&amp;quot;&lt;/code>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nv'>diamonds&lt;/span> &lt;span class='o'>|&amp;gt;&lt;/span> &lt;span class='nf'>conditional_bars&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cut&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Good"&lt;/span>, &lt;span class='nv'>clarity&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/goodclarity-1.png" alt="Bar chart showing count of diamonds by clarity in the diamonds dataset where the cut == Good." width="700px" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>But what if we want to make and save a plot for each cut? Again, it&amp;rsquo;s
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>map()&lt;/code>&lt;/a> and
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>walk()&lt;/code>&lt;/a> to the rescue.&lt;/p>
&lt;p>Because we&amp;rsquo;re using the same data (&lt;code>diamonds&lt;/code>) and conditioning on the same variable (&lt;code>cut&lt;/code>), we&amp;rsquo;ll only need to
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>map()&lt;/code>&lt;/a> across the levels of &lt;code>cut&lt;/code>, and can hard code the rest into the anonymous function.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># get the levels&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>cuts&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/levels.html'>levels&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>diamonds&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nv'>cut&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='c'># make the plots&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>plots&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map.html'>map&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>cuts&lt;/span>,&lt;/span>
&lt;span> \&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>conditional_bars&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> df &lt;span class='o'>=&lt;/span> &lt;span class='nv'>diamonds&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>cut&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>&lt;span class='o'>&amp;#123;&lt;/span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;#125;&lt;/span>&lt;span class='o'>&amp;#125;&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>clarity&lt;/span>&lt;/span>
&lt;span> &lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The plots are now saved in a list&amp;mdash;a fine format for storing ggplots. As we did when saving our CSVs, we&amp;rsquo;ll use fs to create a directory to store them in, and make a vector of paths for file names.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># make the folder to put them it (if exists, &amp;#123;fs&amp;#125; does nothing)&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://fs.r-lib.org/reference/create.html'>dir_create&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"plots"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'># make the file names&lt;/span>&lt;/span>
&lt;span>&lt;span class='nv'>plot_paths&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://stringr.tidyverse.org/reference/str_glue.html'>str_glue&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"plots/&amp;#123;tolower(cuts)&amp;#125;_clarity.png"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now we can use the paths and plots with
&lt;a href="https://purrr.tidyverse.org/reference/map2.html" target="_blank" rel="noopener">&lt;code>walk2()&lt;/code>&lt;/a> to pass them as arguments to
&lt;a href="https://ggplot2.tidyverse.org/reference/ggsave.html" target="_blank" rel="noopener">&lt;code>ggsave()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map2.html'>walk2&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;/span>
&lt;span> &lt;span class='nv'>plot_paths&lt;/span>,&lt;/span>
&lt;span> &lt;span class='nv'>plots&lt;/span>,&lt;/span>
&lt;span> \&lt;span class='o'>(&lt;/span>&lt;span class='nv'>path&lt;/span>, &lt;span class='nv'>plot&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggsave.html'>ggsave&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>path&lt;/span>, &lt;span class='nv'>plot&lt;/span>, width &lt;span class='o'>=&lt;/span> &lt;span class='m'>6&lt;/span>, height &lt;span class='o'>=&lt;/span> &lt;span class='m'>6&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Again, we can use fs to see what we&amp;rsquo;ve done:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://fs.r-lib.org/reference/dir_tree.html'>dir_tree&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"plots"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB; font-weight: bold;'>plots&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ├── &lt;span style='color: #BB00BB; font-weight: bold;'>fair_clarity.png&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ├── &lt;span style='color: #BB00BB; font-weight: bold;'>good_clarity.png&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ├── &lt;span style='color: #BB00BB; font-weight: bold;'>ideal_clarity.png&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; ├── &lt;span style='color: #BB00BB; font-weight: bold;'>premium_clarity.png&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; └── &lt;span style='color: #BB00BB; font-weight: bold;'>very good_clarity.png&lt;/span>&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>And, clean up after ourselves if we didn&amp;rsquo;t &lt;em>really&lt;/em> want those plots after all.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://purrr.tidyverse.org/reference/map.html'>walk&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>plot_paths&lt;/span>, \&lt;span class='o'>(&lt;/span>&lt;span class='nv'>paths&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://fs.r-lib.org/reference/delete.html'>file_delete&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>paths&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="fin">Fin
&lt;a href="#fin">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Hopefully this gave you a taste for some of what
&lt;a href="https://purrr.tidyverse.org/reference/map.html" target="_blank" rel="noopener">&lt;code>walk()&lt;/code>&lt;/a> can do. To learn more, see
&lt;a href="https://r4ds.hadley.nz/iteration.html#saving-multiple-outputs" target="_blank" rel="noopener">Saving multiple outputs&lt;/a> in the Iteration chapter of R for Data Science.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>See
&lt;a href="https://googlesheets4.tidyverse.org/articles/googlesheets4.html" target="_blank" rel="noopener">Getting started with googlesheets4&lt;/a> to learn more about the basics of reading and writing sheets. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>If the directory already exists, it will be left unchanged. &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>There&amp;rsquo;s also a function in fs called
&lt;a href="https://fs.r-lib.org/reference/dir_ls.html" target="_blank" rel="noopener">&lt;code>dir_walk()&lt;/code>&lt;/a>, which you can feel free to explore on your own. &lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>I&amp;rsquo;ve added a title that reflects the variable name and condition with
&lt;a href="https://rlang.r-lib.org/reference/englue.html" target="_blank" rel="noopener">&lt;code>rlang::englue()&lt;/code>&lt;/a>, which you can learn more about in the
&lt;a href="https://r4ds.hadley.nz/functions.html#labeling" target="_blank" rel="noopener">Labeling&lt;/a> section of the same R4DS chapter. &lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>New CRAN requirements for packages with C and C++</title><link>https://www.tidyverse.org/blog/2023/03/cran-checks-compiled-code/</link><pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2023/03/cran-checks-compiled-code/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ ] `Add intro sentence, e.g. the standard tagline for the package
* [ ] `usethis::use_tidy_thanks()`
-->
&lt;p>The R package landscape is dynamic, with changes in infrastructure common, especially when CRAN makes changes to their policies and requirements. This is particularly true for packages that include low-level compiled code, requiring developers to be nimble in responding to these changes.&lt;/p>
&lt;p>The tidyverse team at Posit is in the unique situation where we have a concentration of developers working full-time on creating and maintaining open source packages. This internal community provides the opportunity to collaborate to develop shared practices and discover solutions to problems that arise. When we can, we like to share what we&amp;rsquo;ve learned so other developers can benefit.&lt;/p>
&lt;p>There have been a few recent changes at CRAN for packages containing C and C++ code that developers have had to adapt to, and we would like to share some of our learning:&lt;/p>
&lt;h2 id="note-regarding-systemrequirements-c11">NOTE regarding &lt;code>SystemRequirements: C++11&lt;/code>
&lt;a href="#note-regarding-systemrequirements-c11">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many package authors might have noticed a new NOTE on R-devel when submitting a package to CRAN containing C++ code:&lt;/p>
&lt;pre>&lt;code>* checking C++ specification ...
NOTE Specified C++11: please drop specification unless essential
&lt;/code>&lt;/pre>
&lt;p>This NOTE is now appearing during &lt;code>R CMD check&lt;/code> on R-devel for packages where the DESCRIPTION file has the following:&lt;/p>
&lt;pre>&lt;code>SystemRequirements: C++11
&lt;/code>&lt;/pre>
&lt;p>Packages that use C++11 would also usually have set &lt;code>CXX_STD=CXX11&lt;/code> in the &lt;code>src/Makevars&lt;/code> and &lt;code>src/Makevars.win&lt;/code> files (and &lt;code>src/Makevars.ucrt&lt;/code>, if present). These specifications tell R to use the C++11 standard when compiling the code.&lt;/p>
&lt;p>To understand the NOTE, a bit of history will be helpful (thanks to Winston Chang for
&lt;a href="https://gist.github.com/wch/849ca79c9416795d99c48cc06a44ca1e" target="_blank" rel="noopener">writing this up&lt;/a>):&lt;/p>
&lt;ul>
&lt;li>In R 3.5 and below, on systems with an old compiler, R would default to using the C++98 standard when compiling the code. If a package needed a C++11 compiler, the DESCRIPTION file needed to have &lt;code>SystemRequirements: C++11&lt;/code>, and the various &lt;code>src/Makevars*&lt;/code> files needed to set &lt;code>CXX_STD=CXX11&lt;/code>.&lt;/li>
&lt;li>In R 3.6.2, R began defaulting to compiling packages with the C++11 standard, as long as the compiler supported C++11 (which was true on most systems).&lt;/li>
&lt;li>In R 4.0, C++11 became the minimum supported compiler, so &lt;code>SystemRequirements: C++11&lt;/code> was no longer necessary.&lt;/li>
&lt;li>In (the forthcoming) R 4.3, the
&lt;a href="https://developer.r-project.org/blosxom.cgi/R-devel/NEWS/2023/01/27#n2023-01-27" target="_blank" rel="noopener">default C++ standard is C++17&lt;/a> where available. &lt;code>R CMD check&lt;/code> now
&lt;a href="https://developer.r-project.org/blosxom.cgi/R-devel/NEWS/2023/01/31" target="_blank" rel="noopener">raises a NOTE&lt;/a> if anything older than the default is specified in &lt;code>SystemRequirements:&lt;/code> or &lt;code>CXX_STD&lt;/code> in the various &lt;code>src/Makevars*&lt;/code> files. This NOTE will block submission to CRAN &amp;mdash; if the standard you specify is necessary for your package you will likely need to explain why.&lt;/li>
&lt;/ul>
&lt;h3 id="how-to-fix-it">How to fix it
&lt;a href="#how-to-fix-it">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;ol>
&lt;li>Edit the DESCRIPTION file and remove &lt;code>SystemRequirements: C++11&lt;/code>.&lt;/li>
&lt;li>Edit &lt;code>src/Makevars&lt;/code>, &lt;code>src/Makevars.win&lt;/code>, and &lt;code>src/Makevars.ucrt&lt;/code> and remove &lt;code>CXX_STD=CXX11&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>After making these changes, the package should install without trouble on R 3.6 and above. It may not build on R &amp;lt;= 3.5 on systems with very old compilers, though it is likely that the vast majority of users will have a newer version of R and/or have recent enough compilers. If you want to be confident that your package will be installable on R 3.5 and below with old compilers, there are several options; we offer two of the simplest approaches here:&lt;/p>
&lt;ul>
&lt;li>You can use a configure script at the top level of the package, and have it add &lt;code>CXX_STD=CXX11&lt;/code> for R 3.5 and below. An example (unmerged)
&lt;a href="https://github.com/tidyverse/readxl/pull/722/files" target="_blank" rel="noopener">pull request to the readxl&lt;/a> package demonstrates this approach. You will also need to add &lt;code>Biarch: true&lt;/code> in your DESCRIPTION file. This appears to be the approach preferred by CRAN.&lt;/li>
&lt;li>For users with R &amp;lt;= 3.5 on a system with an older compiler, package authors can instruct users to edit their &lt;code>~/.R/Makevars&lt;/code> file to include this line: &lt;code>CXX_STD=CXX11&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>The tidyverse has a
&lt;a href="https://www.tidyverse.org/blog/2019/04/r-version-support/" target="_blank" rel="noopener">policy of supporting four previous versions&lt;/a> of R. Currently that includes R 3.5, but with the upcoming release of R 4.3 (which should be this Spring some time) the minimum version we will support is R 3.6. As we won&amp;rsquo;t be supporting R 3.5 in the near future, you should not feel pressured to either.&lt;/p>
&lt;h2 id="warning-regarding-the-use-of-codesprintfcode-in-cc">WARNING regarding the use of &lt;code>sprintf()&lt;/code> in C/C++
&lt;a href="#warning-regarding-the-use-of-codesprintfcode-in-cc">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Another recent change in CRAN checks on R-devel that authors might encounter is the disallowing of the use of the C functions &lt;code>sprintf()&lt;/code> and &lt;code>vsprintf()&lt;/code>. &lt;code>R CMD check&lt;/code> on R-devel may throw warnings that look something like this:&lt;/p>
&lt;pre>&lt;code>checking compiled code ... WARNING
File 'fs/libs/fs.so':
Found 'sprintf', possibly from 'sprintf' (C)
Object: 'file.o'
Compiled code should not call entry points which might
terminate R nor write to stdout/stderr instead of to the
console, nor use Fortran I/O nor system RNGs nor [v]sprintf.
See 'Writing portable packages' in the 'Writing R Extensions' manual.
&lt;/code>&lt;/pre>
&lt;p>According to the
&lt;a href="https://developer.r-project.org/blosxom.cgi/R-devel/NEWS/2022/12/24#n2022-12-24" target="_blank" rel="noopener">NEWS for R-devel&lt;/a> (which will be R 4.3):&lt;/p>
&lt;blockquote>
&lt;p>The use of sprintf and vsprintf from C/C++ has been deprecated in macOS 13 and is a known security risk. &lt;code>R CMD check&lt;/code> now reports (on all platforms) if their use is found in compiled code: replace by snprintf or vsnprintf respectively.&lt;/p>
&lt;/blockquote>
&lt;p>These are considered to be a security risk because they potentially allow
&lt;a href="https://en.wikipedia.org/wiki/Buffer_overflow" target="_blank" rel="noopener">buffer overflows&lt;/a> that write more bytes than are available in the output buffer. This is a risk if the text that is being passed to &lt;code>sprintf()&lt;/code> comes from an uncontrolled source.&lt;/p>
&lt;p>Here is a very simple example:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://cpp11.r-lib.org'>cpp11&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>&lt;a href='https://cpp11.r-lib.org/reference/cpp_source.html'>cpp_function&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>'&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> int say_height(int height) &amp;#123;&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> // "My height is xxx cm" is 19 characters but we need&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> // to add one for the null-terminator&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> char out[19 + 1];&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> int n;&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> n = sprintf(out, "My height is %i cm", height);&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> Rprintf(out);&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> return n;&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> &amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'>'&lt;/span>&lt;/span>
&lt;span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>say_height&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>182&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; My height is 182 cm&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; [1] 19&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>say_height&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1824&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='c'># This will abort due to buffer overflow&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="how-to-fix-it-1">How to fix it
&lt;a href="#how-to-fix-it-1">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>In most cases, this should be a simple fix: replace &lt;code>sprintf()&lt;/code> with &lt;code>snprintf()&lt;/code> and &lt;code>vsprintf()&lt;/code> with &lt;code>vsnprintf()&lt;/code>. These &lt;code>n&lt;/code> variants take a second parameter &lt;code>size&lt;/code>, that specifies the maximum number of bytes to be written, &lt;em>including the automatically appended null-terminator&lt;/em>. If the output is a static buffer, you can use &lt;code>sizeof()&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://cpp11.r-lib.org/reference/cpp_source.html'>cpp_function&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>'&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> int say_height_safely(int height) &amp;#123;&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> // "My height is xxx cm\\n" is 20 characters but we need &lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> // to add one for the null-terminator&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> char out[20 + 1];&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> int n;&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> n = snprintf(out, sizeof(out), "My height is %i cm\\n", height);&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> Rprintf(out);&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> return n;&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'> &amp;#125;&lt;/span>&lt;/span>
&lt;span>&lt;span class='s'>'&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;/span>
&lt;span>&lt;span class='nf'>say_height_safely&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>182&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; My height is 182 cm&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; [1] 20&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='nf'>say_height_safely&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>1824567&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>
&lt;span>&lt;span class='c'>#&amp;gt; My height is 1824567&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;span>&lt;span class='c'>#&amp;gt; [1] 24&lt;/span>&lt;/span>
&lt;span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Notice that the return value of &lt;code>sprintf()&lt;/code> and &lt;code>snprintf()&lt;/code> are slightly different. &lt;code>sprintf()&lt;/code> returns the total number of characters written (excluding the null-terminator), while &lt;code>snprintf()&lt;/code> returns the length of the formatted string, whether or not it has been truncated to match &lt;code>size&lt;/code>.&lt;/p>
&lt;p>It is a bit trickier if the destination is not a static buffer, so you&amp;rsquo;ll have to determine the maximum &lt;code>size&lt;/code> by carefully thinking about the code.&lt;/p>
&lt;h2 id="warning-regarding-the-use-of-strict-prototypes-in-c">WARNING regarding the use of strict prototypes in C
&lt;a href="#warning-regarding-the-use-of-strict-prototypes-in-c">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Many maintainers with packages containing C code have also been getting hit with this warning:&lt;/p>
&lt;pre>&lt;code>warning: a function declaration without a prototype is deprecated in all versions of C [-Wstrict-prototypes]
&lt;/code>&lt;/pre>
&lt;p>This usually comes from C function declarations that look like this, with no arguments specified (which is very common):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="kt">int&lt;/span> &lt;span class="nf">myfun&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This new warning is because CRAN is now running checks on R-devel with the &lt;code>-Wstrict-prototypes&lt;/code> compiler flag set. In R we define functions that take no arguments with &lt;code>myfun &amp;lt;- function() {...}&lt;/code> all the time. In C, with this flag set, the fact that a function takes no arguments must be explicitly stated (i.e., the arguments list cannot be empty). In the upcoming C23 standard, empty function signatures will be considered valid and not ambiguous, however at this point it is likely to be the reason you encounter this warning from CRAN.&lt;/p>
&lt;h3 id="how-to-fix-it-2">How to fix it
&lt;a href="#how-to-fix-it-2">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>This can be fixed by placing the &lt;code>void&lt;/code> keyword in the previously empty argument list:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="kt">int&lt;/span> &lt;span class="nf">myfun&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here is an example where the authors of
&lt;a href="https://topepo.github.io/Cubist/" target="_blank" rel="noopener">Cubist&lt;/a> applied the
&lt;a href="https://github.com/topepo/Cubist/pull/46" target="_blank" rel="noopener">necessary patches&lt;/a>, and
&lt;a href="https://github.com/r-lib/rlang/pull/1508" target="_blank" rel="noopener">another one in rlang&lt;/a>.&lt;/p>
&lt;h3 id="vendored-code">Vendored code
&lt;a href="#vendored-code">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Function declarations without a prototype are very common, and unfortunately are thus likely to appear in libraries that you include in your package. This may require you to patch that code in your package. The
&lt;a href="https://readxl.tidyverse.org" target="_blank" rel="noopener">readxl&lt;/a> package includes the
&lt;a href="https://github.com/libxls/libxls" target="_blank" rel="noopener">libxls C library&lt;/a>, which was patched
&lt;a href="https://github.com/tidyverse/readxl/commit/afdc9b90cfc2bb1e1c5490c7ba3af5ecfc4a7876" target="_blank" rel="noopener">in readxl here&lt;/a> to deal with this issue.&lt;/p>
&lt;p>The ideal solution in cases like this would be to submit patches to the upstream libraries so you don&amp;rsquo;t have to deal with the ongoing maintenance of your local patches, but that is not always possible. Generally, you can explain this problem when submitting your package, and as long as you&amp;rsquo;ve have notified the upstream maintainer, CRAN should accept your updated package.&lt;/p>
&lt;h3 id="unspecified-types-in-function-signature">Unspecified types in function signature
&lt;a href="#unspecified-types-in-function-signature">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The &lt;code>-Wstrict-prototypes&lt;/code> compiler flag will also catch deprecated function definitions where the types of the arguments are not declared. This is actually likely the primary purpose for CRAN enabling this flag, as it is ambiguous and much more dangerous than empty function signatures.&lt;/p>
&lt;p>These take the form:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="kt">void&lt;/span> &lt;span class="nf">myfun&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>where the argument types are not declared. This is solved by declaring the types of the arguments:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="kt">void&lt;/span> &lt;span class="nf">myfun&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Playing on the same team as your dependency</title><link>https://www.tidyverse.org/blog/2022/09/playing-on-the-same-team-as-your-dependecy/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/09/playing-on-the-same-team-as-your-dependecy/</guid><description>&lt;!--
TODO:
* [ ] Look over / edit the post's title in the yaml
* [ ] Edit (or delete) the description; note this appears in the Twitter card
* [ ] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [ ] Find photo &amp; update yaml metadata
* [ ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ ] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>Developing packages for R is a matter of standing on the shoulders of others. Very seldom does packages exist in a vacuum &amp;mdash; on the contrary, we often rely on dependencies to avoid duplication of code or lean into the work done by experts within an adjacent field.&lt;/p>
&lt;p>It can easily feel like a one-way relationship to take on a dependency of another package. You are responsible for keeping your package working and the developer of the dependency can ignore whatever goes on in your package. Code flows only from the dependency to your package. This is not true, though. By taking on a dependency you enter into a mutual relationship with it. The dependency implicitly promises not to change its interface without providing an upgrade path to you. You, on the other hand, promises to only rely on the public interface of the package. This blog post goes into detail as to what your promise entails.&lt;/p>
&lt;h3 id="why-does-this-matter">Why does this matter?
&lt;a href="#why-does-this-matter">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>As a developer, you may be surprised to learn that the dependency&amp;rsquo;s promise is enforced by CRAN. When submitting a new version for release, the package goes through a battery of tests, including a reverse dependency check where all packages on CRAN that depend on the submitted package are checked against the new version. If any regressions have occurred, it is flagged. The CRAN repository policy states:&lt;/p>
&lt;blockquote>
&lt;p>If an update will change the package&amp;rsquo;s API and hence affect packages depending on it, it is expected that you will contact the maintainers of affected packages and suggest changes, and give them time (at least 2 weeks, ideally more) to prepare updates before submitting your updated package.&lt;/p>
&lt;/blockquote>
&lt;p>This is good in general &amp;mdash; it &lt;em>is&lt;/em> important that a package maintains a stable interface across versions &amp;mdash; but can become a huge obstacle to updates if the packages that depends on you are reaching behind the curtain and making assumptions you never promised to adhere to.&lt;/p>
&lt;h2 id="whats-in-an-api">What&amp;rsquo;s in an API?
&lt;a href="#whats-in-an-api">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>For better and worse, R as a language is extremely liberal with what you can access as a user. There is practically no data or function you can&amp;rsquo;t access and modify, which makes the concept of APIs a question of conventions. Those conventions are quite well defined when it comes to functions in packages, but much less so for everything else. We will discuss functions first, and then proceed into the more gray areas of objects and data.&lt;/p>
&lt;h3 id="exported-functions">Exported functions
&lt;a href="#exported-functions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>When creating a package, you are required to provide a NAMESPACE file which states the functions you import &lt;em>into&lt;/em> your package for use, and the functions you export &lt;em>out of&lt;/em> your package for others to use. The NAMESPACE file demarcates in very clear terms the functional interface of a package, but is still based on mutual trust. While you cannot import functions from a package that have not been exported, there is nothing in the R language that prevents you from using them by accessing them directly. Below, we will talk about several ways of doing this and why each of them has issues:&lt;/p>
&lt;h4 id="using-">Using &lt;code>:::&lt;/code>
&lt;a href="#using-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h4>&lt;p>R provides two operators for accessing objects in a package namespace: &lt;code>::&lt;/code> allows you to fetch exported objects and functions, while &lt;code>:::&lt;/code> allows you to access &lt;em>any&lt;/em> object and function (both public and internal). Thus, you could for instance gain access to the internal &lt;code>camelize()&lt;/code> function in ggplot2 to convert geom function names into ggproto object names like so:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>ggplot2&lt;/span>&lt;span class='nf'>:::&lt;/span>&lt;span class='nf'>camelize&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>'geom_point'&lt;/span>, first &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; [1] "GeomPoint"&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>&lt;em>But&lt;/em> since there is no need for &lt;code>:::&lt;/code> except for reaching beyond the package interface, its use is actively checked and packages using it are rejected from CRAN.&lt;/p>
&lt;h4 id="using-utilsgetfromnamespace">Using &lt;code>utils::getFromNamespace()&lt;/code>
&lt;a href="#using-utilsgetfromnamespace">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h4>&lt;p>To circumvent the detection of &lt;code>:::&lt;/code>, we sometimes see code like the following in packages:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>camelize&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>utils&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/getFromNamespace.html'>getFromNamespace&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"camelize"&lt;/span>, &lt;span class='s'>"ggplot2"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>There are two huge issues with this approach. The first being that you now have sneakily accessed something that was never meant for public consumption (this is a general theme). The second is that you are grabbing a function from another package &lt;em>at build time&lt;/em>. This means that the &lt;code>camelize()&lt;/code> function living in your package is the one from the ggplot2 version available when your package got build on CRAN. Why is that a problem? Consider again &lt;code>camelize()&lt;/code>:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>ggplot2&lt;/span>&lt;span class='nf'>:::&lt;/span>&lt;span class='nv'>camelize&lt;/span>
&lt;span class='c'>#&amp;gt; function(x, first = FALSE) &amp;#123;&lt;/span>
&lt;span class='c'>#&amp;gt; x &amp;lt;- gsub("_(.)", "\\U\\1", x, perl = TRUE)&lt;/span>
&lt;span class='c'>#&amp;gt; if (first) x &amp;lt;- firstUpper(x)&lt;/span>
&lt;span class='c'>#&amp;gt; x&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;#125;&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;bytecode: 0x106658a98&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;environment: namespace:ggplot2&amp;gt;&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can see that it contains a call to &lt;code>firstUpper()&lt;/code> which is another internal function. As ggplot2 developers, we might decide one day that this factorization of code is too granular, and inline the code of &lt;code>firstUpper()&lt;/code> into &lt;code>camelize()&lt;/code>, allowing us to remove &lt;code>firstUpper()&lt;/code> altogether.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># New version of camelize&lt;/span>
&lt;span class='nv'>camelize&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='nv'>first&lt;/span> &lt;span class='o'>=&lt;/span> &lt;span class='kc'>FALSE&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/grep.html'>gsub&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"_(.)"&lt;/span>, &lt;span class='s'>"\\U\\1"&lt;/span>, &lt;span class='nv'>x&lt;/span>, perl &lt;span class='o'>=&lt;/span> &lt;span class='kc'>TRUE&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='kr'>if&lt;/span> &lt;span class='o'>(&lt;/span>&lt;span class='nv'>first&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='nv'>x&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/paste.html'>paste0&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>to_upper_ascii&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/substr.html'>substring&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/substr.html'>substring&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>x&lt;/span>, &lt;span class='m'>2&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>x&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>All of that would be perfectly fine for us to do. After all, we are not changing the public interface of ggplot2, we aren&amp;rsquo;t even changing how &lt;code>camelize()&lt;/code> works. But, in packages that have fetched &lt;code>camelize()&lt;/code> at build time, the function would be unchanged, still calling &lt;code>firstUpper()&lt;/code> which now no longer exists. As you might imagine, this can lead to some very hard to debug errors for you, your users, and the maintainer of the dependency.&lt;/p>
&lt;h4 id="use-asnamespace-inside-a-function">Use &lt;code>asNamespace()&lt;/code> inside a function
&lt;a href="#use-asnamespace-inside-a-function">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h4>&lt;p>This rule can be extended beyond its use to access unexported functions: &lt;strong>Never assign a function from another package to a variable in your own package&lt;/strong>. You might import a function from a package developed by someone who prefers long and descriptive function names, say &lt;code>add_these_two_objects_together()&lt;/code>, and find it easier to create a shorthand version:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>add2&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>add_these_two_objects_together&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>While &lt;code>add_these_two_objects_together&lt;/code> is exported and you are doing nothing wrong in terms of interfaces, you are still setting up a build-time dependency that might cause breakage any time your dependency gets updated on a system.&lt;/p>
&lt;p>Thus, we arrive at the last approach: Fetching the function inside a function call and then using it. In the example, below we are using
&lt;a href="https://rdrr.io/r/base/ns-internal.html" target="_blank" rel="noopener">&lt;code>asNamespace()&lt;/code>&lt;/a> but the same principle holds true for
&lt;a href="https://rdrr.io/r/utils/getFromNamespace.html" target="_blank" rel="noopener">&lt;code>getFromNamespace()&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>camelize&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='kr'>function&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>...&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&amp;#123;&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/ns-internal.html'>asNamespace&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ggplot2"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>$&lt;/span>&lt;span class='nf'>camelize&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>...&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>&amp;#125;&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Now, while this is many times better than what we did before, it is still a big red flag. Consider the same situation as before. We inline every use of &lt;code>camelize()&lt;/code> in ggplot2 (it&amp;rsquo;s only used once), and remove the function. This will again lead to a breakage of your package when ggplot2 got updated because you made assumptions that ggplot2 never promised anything about.&lt;/p>
&lt;h4 id="what-to-do">What to do?
&lt;a href="#what-to-do">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h4>&lt;p>What if you really wanted that functionality? A good first approach is to simply copy the code for the function into your own package. For something like &lt;code>camelize()&lt;/code>, this is fairly simple as it doesn&amp;rsquo;t call into other internal functions (except &lt;code>firstUpper()&lt;/code> but we saw that that could be inlined). One thing to keep in mind here is to make sure that the licence of the dependency doesn&amp;rsquo;t prevent you from doing this (e.g. a package released under MIT license can&amp;rsquo;t copy code from a package released under a GPL-2 licence).&lt;/p>
&lt;p>If you can&amp;rsquo;t copy the code into your own package, either due to incompatible licenses or because the function is a rabbit hole of internal function calls, you&amp;rsquo;ll need to reach out to the maintainer and ask whether the required function can be exported so you can use it. Keep in mind that there are many good reasons why you could get a &amp;ldquo;no&amp;rdquo;, since every new export increases the maintenance burden of a package. So, you can get a &amp;ldquo;yes&amp;rdquo; and all is well, or you might get a &amp;ldquo;no&amp;rdquo; and have to accept that as well. Getting a &amp;ldquo;no&amp;rdquo; is not a blanket approval to do any of the above things we have discussed, for the exact reasons we described. Rather, it means you have to reframe your solution so it doesn&amp;rsquo;t require this functionality or abandon it altogether.&lt;/p>
&lt;h3 id="exported-structures">Exported structures
&lt;a href="#exported-structures">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>While the situation with functions is quite clear-cut &amp;mdash; there are &lt;em>do&amp;rsquo;s&lt;/em> and &lt;em>don&amp;rsquo;ts&lt;/em> &amp;mdash; we enter a much grayer area when it comes to any sort of data/object structure you get from a dependency, either as an object exported by the package or as a return value from an exported function. The reason why it is a gray area is that there is no formal way to specify an interface to on object in R and the users are used to an &amp;ldquo;anything goes&amp;rdquo; mentality when it comes to reaching into data structures. For example, while attributes are a bit more &amp;ldquo;hidden away&amp;rdquo; than elements in a list, there is no notion of these being prohibited from access. There might be a mutual understanding that, if you alter attributes in some way, it might lead to breakage somewhere downstream. But merely reading attributes is a pretty common thing to do. The same goes for more complex objects that contain more than just data. An example is the object created by a call to &lt;code>ggplot()&lt;/code>&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/str.html'>str&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>ggplot2&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; List of 9&lt;/span>
&lt;span class='c'>#&amp;gt; $ data : list()&lt;/span>
&lt;span class='c'>#&amp;gt; ..- attr(*, "class")= chr "waiver"&lt;/span>
&lt;span class='c'>#&amp;gt; $ layers : list()&lt;/span>
&lt;span class='c'>#&amp;gt; $ scales :Classes 'ScalesList', 'ggproto', 'gg' &amp;lt;ggproto object: Class ScalesList, gg&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; add: function&lt;/span>
&lt;span class='c'>#&amp;gt; clone: function&lt;/span>
&lt;span class='c'>#&amp;gt; find: function&lt;/span>
&lt;span class='c'>#&amp;gt; get_scales: function&lt;/span>
&lt;span class='c'>#&amp;gt; has_scale: function&lt;/span>
&lt;span class='c'>#&amp;gt; input: function&lt;/span>
&lt;span class='c'>#&amp;gt; n: function&lt;/span>
&lt;span class='c'>#&amp;gt; non_position_scales: function&lt;/span>
&lt;span class='c'>#&amp;gt; scales: NULL&lt;/span>
&lt;span class='c'>#&amp;gt; super: &amp;lt;ggproto object: Class ScalesList, gg&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; $ mapping : Named list()&lt;/span>
&lt;span class='c'>#&amp;gt; ..- attr(*, "class")= chr "uneval"&lt;/span>
&lt;span class='c'>#&amp;gt; $ theme : list()&lt;/span>
&lt;span class='c'>#&amp;gt; $ coordinates:Classes 'CoordCartesian', 'Coord', 'ggproto', 'gg' &amp;lt;ggproto object: Class CoordCartesian, Coord, gg&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; aspect: function&lt;/span>
&lt;span class='c'>#&amp;gt; backtransform_range: function&lt;/span>
&lt;span class='c'>#&amp;gt; clip: on&lt;/span>
&lt;span class='c'>#&amp;gt; default: TRUE&lt;/span>
&lt;span class='c'>#&amp;gt; distance: function&lt;/span>
&lt;span class='c'>#&amp;gt; expand: TRUE&lt;/span>
&lt;span class='c'>#&amp;gt; is_free: function&lt;/span>
&lt;span class='c'>#&amp;gt; is_linear: function&lt;/span>
&lt;span class='c'>#&amp;gt; labels: function&lt;/span>
&lt;span class='c'>#&amp;gt; limits: list&lt;/span>
&lt;span class='c'>#&amp;gt; modify_scales: function&lt;/span>
&lt;span class='c'>#&amp;gt; range: function&lt;/span>
&lt;span class='c'>#&amp;gt; render_axis_h: function&lt;/span>
&lt;span class='c'>#&amp;gt; render_axis_v: function&lt;/span>
&lt;span class='c'>#&amp;gt; render_bg: function&lt;/span>
&lt;span class='c'>#&amp;gt; render_fg: function&lt;/span>
&lt;span class='c'>#&amp;gt; setup_data: function&lt;/span>
&lt;span class='c'>#&amp;gt; setup_layout: function&lt;/span>
&lt;span class='c'>#&amp;gt; setup_panel_guides: function&lt;/span>
&lt;span class='c'>#&amp;gt; setup_panel_params: function&lt;/span>
&lt;span class='c'>#&amp;gt; setup_params: function&lt;/span>
&lt;span class='c'>#&amp;gt; train_panel_guides: function&lt;/span>
&lt;span class='c'>#&amp;gt; transform: function&lt;/span>
&lt;span class='c'>#&amp;gt; super: &amp;lt;ggproto object: Class CoordCartesian, Coord, gg&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; $ facet :Classes 'FacetNull', 'Facet', 'ggproto', 'gg' &amp;lt;ggproto object: Class FacetNull, Facet, gg&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; compute_layout: function&lt;/span>
&lt;span class='c'>#&amp;gt; draw_back: function&lt;/span>
&lt;span class='c'>#&amp;gt; draw_front: function&lt;/span>
&lt;span class='c'>#&amp;gt; draw_labels: function&lt;/span>
&lt;span class='c'>#&amp;gt; draw_panels: function&lt;/span>
&lt;span class='c'>#&amp;gt; finish_data: function&lt;/span>
&lt;span class='c'>#&amp;gt; init_scales: function&lt;/span>
&lt;span class='c'>#&amp;gt; map_data: function&lt;/span>
&lt;span class='c'>#&amp;gt; params: list&lt;/span>
&lt;span class='c'>#&amp;gt; setup_data: function&lt;/span>
&lt;span class='c'>#&amp;gt; setup_params: function&lt;/span>
&lt;span class='c'>#&amp;gt; shrink: TRUE&lt;/span>
&lt;span class='c'>#&amp;gt; train_scales: function&lt;/span>
&lt;span class='c'>#&amp;gt; vars: function&lt;/span>
&lt;span class='c'>#&amp;gt; super: &amp;lt;ggproto object: Class FacetNull, Facet, gg&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; $ plot_env :&amp;lt;environment: R_GlobalEnv&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; $ labels : Named list()&lt;/span>
&lt;span class='c'>#&amp;gt; - attr(*, "class")= chr [1:2] "gg" "ggplot"&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This is obviously more than just data, but which elements, if any, are actually fair to access as a package developer? This is a tough question to answer in general terms.&lt;/p>
&lt;p>If you want to be a very polite (and who wouldn&amp;rsquo;t), the best way to go about it is to look for accessor functions for the part of the object you are interested in, and in the absence of one, ask the maintainer to add one. The reason why accessor functions are so much better than relying on e.g. 
&lt;a href="https://rdrr.io/r/base/attr.html" target="_blank" rel="noopener">&lt;code>attr()&lt;/code>&lt;/a> to extract some information stored in an attribute, is that it frees the maintainer to change the &lt;em>structure&lt;/em> of the data/object, while keeping the &lt;em>interface&lt;/em> constant. Asking a maintainer for a public accessor function will also alert the maintainer to the fact that others are actually interested in said information, which could inform future development.&lt;/p>
&lt;h4 id="testing-testing">Testing, testing
&lt;a href="#testing-testing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h4>&lt;p>You may be the most polite package developer, using only the finest public accessor functions in your code and keeping out of any data structure you don&amp;rsquo;t control the provenance of and still be reliant of implementation details in objects from other packages. How? You may inadvertently test for their internal details in your unit tests when you are comparing objects wholesale, or if you have saved complex objects and load these up during testing.&lt;/p>
&lt;p>Once again, we are certainly in a gray area here, but one guideline to help you is to ask yourself whether your unit test is only testing for parts that your own package influence, or does it also include assumptions about implementation details of another package. As an example (once again from ggplot2), you might want to ensure that a plot function in your package works as intended. On one extreme end you can save a working ggplot object returned from your function and then test for equivalence with that during unit testing. This is not a great idea because anything we might change internally in ggplot2 would likely result in changes to the created ggplot2 object. And while it still works, it may look slightly different. On the other end, you may instead do visual testing using the vdiffr package where you only look at the actual output. However, that also makes a lot of assumptions about how ggplot2 chooses to render its objects and internal changes may again break your tests without there being anything broken in reality.&lt;/p>
&lt;blockquote>
&lt;p>Visual testing in general is something that is mainly intended for packages providing graphic rendering, e.g. ggplot2 and it&amp;rsquo;s extension package ecosystem. If you are using other packages to create your plots you should in general lean on them to test for visual regressions.&lt;/p>
&lt;/blockquote>
&lt;p>The Goldilocks zone for your testing is to figure out which exact elements your high-level plot function influences, and then get to these, preferably using public accessor functions. For ggplot2 it will often be enough to extract the data for each layer (using &lt;code>layer_data()&lt;/code>) and test specific columns of that (never test against the full layer data since ggplot2 may add to this etc.).&lt;/p>
&lt;p>If you find that you are missing public accessor function in order to do proper testing, once again reach out to the maintainer and ask. You may learn that this information is not exposed because it is subject to change, thus a poor fit for unit testing. Or you may get your function and end up with more robust tests in your own package.&lt;/p>
&lt;p>While the example above is using ggplot2, this can be extrapolated to every other dependency that provide any form of complex output or exported data structure. Always question yourself whether your unit test is testing more than your own package&amp;rsquo;s behavior. If they do, try to eliminate the influence of the dependencies as much as possible. Remember that tests that fail for reasons other than what it is testing for is not only annoying to you &amp;mdash; it can also drag out the release of the packages you rely on.&lt;/p></description></item><item><title>It's about time</title><link>https://www.tidyverse.org/blog/2022/09/its-about-time/</link><pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/09/its-about-time/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ ] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>At rstudio::conf(2022), Davis Vaughan gave a lightning talk on
&lt;a href="https://clock.r-lib.org/" target="_blank" rel="noopener">clock&lt;/a>, an R package that aims to provide comprehensive and safe handling of date-times. clock goes beyond the date and date-time types that base R provides, implementing new types for year-month, year-quarter, ISO year-week, and many other date-like formats, all with up to nanosecond precision. clock is &lt;strong>not&lt;/strong> replacing
&lt;a href="https://lubridate.tidyverse.org/" target="_blank" rel="noopener">lubridate&lt;/a>. lubridate will never go away, and is not being deprecated or superseded. In the future, we expect to update lubridate to use clock as a backend (so clock becomes
&lt;a href="https://stringi.gagolewski.com/" target="_blank" rel="noopener">stringi&lt;/a> to lubridate&amp;rsquo;s
&lt;a href="https://stringr.tidyverse.org/" target="_blank" rel="noopener">stringr&lt;/a>).&lt;/p>
&lt;p>In Davis&amp;rsquo; talk, you&amp;rsquo;ll see how clock emphasizes &amp;ldquo;safety first&amp;rdquo; when manipulating date-times, and how its new date-time types can be used in your own work.&lt;/p>
&lt;script src="https://fast.wistia.com/embed/medias/pzuyostdz8.jsonp" async>&lt;/script>
&lt;script src="https://fast.wistia.com/assets/external/E-v1.js" async>&lt;/script>
&lt;div class="wistia_responsive_padding" style="padding:56.25% 0 0 0;position:relative;">
&lt;div class="wistia_responsive_wrapper" style="height:100%;left:0;position:absolute;top:0;width:100%;">
&lt;div class="wistia_embed wistia_async_pzuyostdz8 videoFoam=true" style="height:100%;position:relative;width:100%">
&lt;div class="wistia_swatch" style="height:100%;left:0;opacity:0;overflow:hidden;position:absolute;top:0;transition:opacity 200ms;width:100%;">
&lt;p>&lt;img src="https://fast.wistia.com/embed/medias/pzuyostdz8/swatch" style="filter:blur(5px);height:100%;object-fit:contain;width:100%;" alt="" aria-hidden="true" onload="this.parentNode.style.opacity=1;" />&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;details>
&lt;summary>
&lt;strong>Transcript&lt;/strong>
&lt;/summary>
&lt;p>I am here to talk about time, which is obviously everyone&amp;rsquo;s favorite subject. In particular, I&amp;rsquo;m actually here to talk about a package called clock.&lt;/p>
&lt;p>So, clock is a date time manipulation library kind of in the same way that lubridate is a date time manipulation library. It does things you might expect add dates, subtract dates, format and parse them. All kinds of other manipulation. If you get anything out of this talk, it&amp;rsquo;s really that clock is not here to replace lubridate in any way. The only idea would be that in the end clock might be a back end for lubridate in the same way that dtplyr or dbplyr are different types of back ends for dplyr. And I&amp;rsquo;m not even going to spend the rest of this talk talking about features that overlap with lubridate.&lt;/p>
&lt;p>Instead, I want to talk about things that are pretty unique to clock. One of those is safety. And one of those is calendars.&lt;/p>
&lt;p>Because I only have 5 minutes, I&amp;rsquo;m going to do that with one date, January 30th of this year. Safety is built into clock from the ground up to hopefully avoid issues like this, time zone issues, invalid date issues, things that are pretty common when you&amp;rsquo;re working with time series and just drive you up the wall.&lt;/p>
&lt;p>So let&amp;rsquo;s jump into safety. Here&amp;rsquo;s a timeline. This is January 30th, our date in question marked in blue on our timeline. It continues through to February. On the next line, you&amp;rsquo;ll see this gap between February and March because February only has 28 days, but January had 31, so it doesn&amp;rsquo;t necessarily map 1 to 1. If I were to ask you this seemingly innocuous question. Please add one month to this date. What would you get?&lt;/p>
&lt;p>Well, if we were to ask lubridate, it gives you a somewhat reasonable answer of NA. There is nothing that maps 1 to 1 from January 30th to something in February, maybe. And there&amp;rsquo;s nothing particularly wrong with this except for the fact that it&amp;rsquo;s not the most useful answer. Generally, you&amp;rsquo;ll be running this code and it happens silently. And then five steps downstream. All of a sudden, you discover there&amp;rsquo;s some NAs here. Like, I didn&amp;rsquo;t have those to begin with. Where did those come from? And you have to backtrack up through your calculations and figure out why they appeared.&lt;/p>
&lt;p>If you were to ask clock this question with add months, it actually gives you an error in this special case by default. It says, whoa, hold up. There&amp;rsquo;s something wrong here. Go look at location 1. If you had a vector, it might be location five, seven, whatever. And check out the invalid argument to learn more about this case. You go and you look at the documentation and you come out with the idea that maybe I could set this thing called invalid equals previous. That allows you to say, give me the previous valid date when I have this kind of problem. That&amp;rsquo;s the end of February. I think that&amp;rsquo;s a pretty reasonable result in this case. But you also might want to say, depending on your specific problem, invalid equals next to map forward to the beginning of March instead. If you actually do like that lubridate behavior, that&amp;rsquo;s fine. You can say invalid equals NA any time that occurs, you&amp;rsquo;ll get an NA instead. So that&amp;rsquo;s about safety.&lt;/p>
&lt;p>Let&amp;rsquo;s talk about calendars. Calendars are just the idea of a way to represent a unique point in time. With our date in question, we could use a calendar called year month day to represent this date using three components the year, the month, and the day of the month. But this isn&amp;rsquo;t the only way you could represent this date. You could also use the year and the day of the year, or you could use one of these many other calendar types that are built into clock.&lt;/p>
&lt;p>If your finance person, you might be particularly interested in year quarter day, which uses a true fiscal year to represent your date. These are really nice because they&amp;rsquo;re all convertible to each other. You can work with any particular calendar type and say you need to get the quarter out. You convert to year quarter day, you do manipulation over there, you convert back. It&amp;rsquo;s obviously convertible with the date in POSIXct as well, since those are the date time types that you&amp;rsquo;re most likely to start out with.&lt;/p>
&lt;p>The other really neat thing that I find really fun about these calendar types is that they have what&amp;rsquo;s known as variable precision. These are all day precision calendar types at this point, but we could narrow that down to month precision as needed. And you&amp;rsquo;ve got a built-in year month type in clock. Similarly, you could have a built-in year quarter type. You can actually go the other way, too. You can widen it out all the way to nanoseconds if you need it.&lt;/p>
&lt;p>The last thing I&amp;rsquo;ll say is that clock is completely compatible with some of the other packages you might be familiar with that I&amp;rsquo;ve created called slider and IVs. Slider is one for rolling averages, so you can use clock types as the index to say, give me a rolling average. looking back four or five quarters IVs is a relatively new package. You might not have heard of this one yet, but it deals with date ranges and you can use clock types as the components of those ranges.&lt;/p>
&lt;p>So to sum up, lubridate is not going anywhere. Don&amp;rsquo;t worry, but please try clock for enhanced safety in these powerful new types. Thank you.&lt;/p>
&lt;/details>
&lt;h2 id="try-clock">Try clock
&lt;a href="#try-clock">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>To try clock out, you can install the released version from
&lt;a href="https://cran.r-project.org/" target="_blank" rel="noopener">CRAN&lt;/a> with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"clock"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Or, install the development version from its
&lt;a href="https://github.com/r-lib/clock" target="_blank" rel="noopener">GitHub repo&lt;/a> with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span>&lt;span class='c'># install.packages("remotes")&lt;/span>&lt;/span>
&lt;span>&lt;span class='nf'>remotes&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='https://remotes.r-lib.org/reference/install_github.html'>install_github&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"r-lib/clock"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="learn-more">Learn more
&lt;a href="#learn-more">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>You can learn more about clock by reading Davis&amp;rsquo; blog post announcing its first release,
&lt;a href="https://www.tidyverse.org/blog/2021/03/clock-0-1-0/" target="_blank" rel="noopener">Comprehensive date-time handling for R&lt;/a>. Also be sure to check out its vignettes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/clock.html" target="_blank" rel="noopener">Getting started&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/articles/motivations.html" target="_blank" rel="noopener">Motivations for clock&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/recipes.html" target="_blank" rel="noopener">Examples and recipes&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://clock.r-lib.org/articles/faq.html" target="_blank" rel="noopener">Frequently asked questions&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Upgrading to testthat edition 3</title><link>https://www.tidyverse.org/blog/2022/02/upkeep-testthat-3/</link><pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2022/02/upkeep-testthat-3/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ ] ~Add intro sentence, e.g. the standard tagline for the package~
* [ ] ~[`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)~
-->
&lt;p>As the collection of packages in the tidyverse grows, maintenance becomes increasingly important, and Hadley made this the topic of his
&lt;a href="https://www.rstudio.com/resources/rstudioglobal-2021/maintaining-the-house-the-tidyverse-built/" target="_blank" rel="noopener">keynote at rstudio::global 2021&lt;/a>.&lt;/p>
&lt;p>In this blog post, I discuss my process for a recent maintenance task, upgrading package tests to use the third edition of testthat.&lt;/p>
&lt;h2 id="testthat-3e">testthat 3e
&lt;a href="#testthat-3e">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The testthat package introduced the idea of an &amp;ldquo;edition&amp;rdquo; in version 3.0.0:&lt;/p>
&lt;blockquote>
&lt;p>An edition is a bundle of behaviours that you have to explicitly choose to use, allowing us to make otherwise backward incompatible changes.&lt;/p>
&lt;/blockquote>
&lt;p>If you haven&amp;rsquo;t heard of testthat 3e yet, the
&lt;a href="https://testthat.r-lib.org/articles/third-edition.html" target="_blank" rel="noopener">testthat article introducing the 3rd edition&lt;/a> is a great place to start. It outlines all the changes this edition brings.&lt;/p>
&lt;p>While you can continue to use testthat&amp;rsquo;s previous behaviour, it&amp;rsquo;s a good idea to upgrade so that you can make use of handy new features. As some of the changes may break your tests, you might have been putting that off, though. You would not be alone in that! Several tidymodels packages still have to make the jump, but I recently upgraded
&lt;a href="https://github.com/tidymodels/dials/" target="_blank" rel="noopener">dials&lt;/a> and
&lt;a href="https://github.com/tidymodels/censored/" target="_blank" rel="noopener">censored&lt;/a> to testthat edition 3. Here is what I did and learned along the way.&lt;/p>
&lt;h3 id="workflow-to-upgrade">Workflow to upgrade
&lt;a href="#workflow-to-upgrade">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The testthat article tells you how you can opt in to the new edition, and about major changes: deprecations, how messages and warnings are handled, and how comparisons of objects are made.&lt;/p>
&lt;p>The main guidance for a workflow is:&lt;/p>
&lt;ol>
&lt;li>Activate edition 3.&lt;/li>
&lt;li>Remove or replace deprecated functions.&lt;/li>
&lt;li>If your output got noisy, quiet things down as needed.&lt;/li>
&lt;li>Think about what it means if things are not &amp;ldquo;all equal&amp;rdquo; anymore.&lt;/li>
&lt;/ol>
&lt;h3 id="activation-">Activation 🚀
&lt;a href="#activation-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>To activate you need to do two things in the DESCRIPTION - or you can let &lt;code>usethis::use_testthat(3)&lt;/code> do it for you:&lt;/p>
&lt;ul>
&lt;li>Increase the testthat version to &lt;code>&amp;gt;= 3.0.0&lt;/code>.&lt;/li>
&lt;li>Set the &lt;code>Config/testthat/edition&lt;/code> field to &lt;code>3&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="moving-on-from-deprecations-">Moving on from deprecations ✨
&lt;a href="#moving-on-from-deprecations-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The article on testthat 3e contains a
&lt;a href="https://testthat.r-lib.org/articles/third-edition.html#deprecations" target="_blank" rel="noopener">list of deprecated functions&lt;/a> together with their successors. You can work your way through it, searching for the deprecated function and then replacing it with the most suitable alternative. The first one in that list is &lt;code>context()&lt;/code> as testthat will use the file name instead, ensuring that context and file name are in sync. As such, &lt;code>context()&lt;/code> does not have a replacement. My first
&lt;a href="https://github.com/tidymodels/censored/pull/142" target="_blank" rel="noopener">commit&lt;/a> after activating the third edition was to remove all calls to &lt;code>context()&lt;/code>, followed by replacing other deprecated functions and arguments.&lt;/p>
&lt;p>&lt;img src="commits.png" alt="A list of commits starting with &amp;ldquo;require testthat 3e, followed by removing context() and other deprecated functions&amp;rdquo;">&lt;/p>
&lt;h3 id="warnings-and-messages-">Warnings and messages 🤫
&lt;a href="#warnings-and-messages-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>testthat edition 3 handles warnings and messages differently than edition 2: &lt;code>expect_warning()&lt;/code> captures at most one warning, so if your code generates multiple warnings, they will bubble up now. Messages were previously silently ignored, now they also bubble up. That means the output may be a lot noisier after switching to edition 3. If the warnings or messages are important, you should explicitly capture them. Otherwise you can suppress them to clean up the output and make it easier to focus on what&amp;rsquo;s important. Again, the testthat article has good examples for how to do either.&lt;/p>
&lt;h3 id="comparing-things--">Comparing things 🍎 🍊
&lt;a href="#comparing-things--">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The last big change from edition 2 to edition 3 that I want to mention is what is happening under the hood of &lt;code>expect_equal()&lt;/code> and &lt;code>expect_identical()&lt;/code>. Edition 3 uses
&lt;a href="https://waldo.r-lib.org/reference/compare.html" target="_blank" rel="noopener">&lt;code>waldo::compare()&lt;/code>&lt;/a> while edition 2 uses
&lt;a href="https://rdrr.io/r/base/all.equal.html" target="_blank" rel="noopener">&lt;code>all.equal()&lt;/code>&lt;/a>. For the most part, that meant changing the argument name from &lt;code>tol&lt;/code> to &lt;code>tolerance&lt;/code>, like in my third commit above.&lt;/p>
&lt;p>I did, however, run into a situation where a test newly failed. Those are the situations where general advice is hard because it depends so much on the context. In my case, I made use of the &lt;code>ignore_function_env&lt;/code> and &lt;code>ignore_formula_env&lt;/code> arguments to
&lt;a href="https://waldo.r-lib.org/reference/compare.html" target="_blank" rel="noopener">&lt;code>waldo::compare()&lt;/code>&lt;/a> to exclude those environments from the comparison. Those are probably useful to know about if you are upgrading a modelling package, but not particularly important otherwise. For dials and censored, that solved most of the cases. In one instance, I ended up tweaking the reference value based on theoretical considerations of the model I was dealing with rather than increasing the tolerance.&lt;/p>
&lt;p>Those instances may be the most work when upgrading to edition 3, but I did not encounter many of them &amp;ndash; and, when I did, it was valuable to know about the differences (well, those which I didn&amp;rsquo;t choose to ignore).&lt;/p>
&lt;h2 id="more-testing-made-easier">More testing made easier
&lt;a href="#more-testing-made-easier">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>While I was going over all the test files, I also decided to cover a few other aspects.&lt;/p>
&lt;h3 id="nested-expectations">Nested expectations
&lt;a href="#nested-expectations">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>When
&lt;a href="https://github.com/DavisVaughan" target="_blank" rel="noopener">Davis Vaughan&lt;/a> moved other tidymodels packages to testthat 3e, I saw him disentangle nested expectations. For example, patterns like&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expect_warning&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">one_call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">another_call&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>or&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">expect_warning&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">one_call&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">expect_warning&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">another_call&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>can be re-written as&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">expect_snapshot&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="n">object_from_one_call&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">one_call&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">object_from_another_call&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">another_call&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object_from_one_call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">object_from_another_call&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This separates an expectation about the warnings from the expectation about the value, making it easier to see which part(s) fail. Snapshots can also be particularly helpful in situations where you are trying to test for a combination of warnings, messages, and/or errors because they cover them all.&lt;/p>
&lt;h3 id="self-contained-tests">Self-contained tests
&lt;a href="#self-contained-tests">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>I wanted to make the tests more self-contained so that a test could run with a single call to &lt;code>test_that()&lt;/code>. Specifically, I didn&amp;rsquo;t want to have to scroll back up to the top of the file to load any necessary package or find the code that creates helper objects.&lt;/p>
&lt;p>You can avoid the former by prefixing functions with the package they belong to, i.e. using
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>dplyr::mutate()&lt;/code>&lt;/a> instead of
&lt;a href="https://dplyr.tidyverse.org" target="_blank" rel="noopener">&lt;code>library(dplyr)&lt;/code>&lt;/a> at the top of the file and later &lt;code>mutate()&lt;/code> inside of the expression for &lt;code>test_that()&lt;/code>.&lt;/p>
&lt;p>If creating a helper object is short, I might move the code inside of &lt;code>test_that()&lt;/code>. If you create the same helper objects multiple times and don&amp;rsquo;t want to see the code repeatedly, you can move it into a helper function. Files inside the &lt;code>testthat&lt;/code> folder of your source code with file names starting with &lt;code>helper&lt;/code> are executed before tests are run. You could put your helper code there but it is
&lt;a href="https://testthat.r-lib.org/reference/test_file.html#special-files" target="_blank" rel="noopener">recommended&lt;/a> to put the helper code in your &lt;code>R/&lt;/code> folder, for example as
&lt;a href="https://testthat.r-lib.org/articles/custom-expectation.html" target="_blank" rel="noopener">&lt;code>test-helpers.R&lt;/code>&lt;/a>.&lt;/p>
&lt;p>An example helper function is called &lt;code>make_test_model()&lt;/code>, which returns a list with training and testing data as well as the fitted model. A test on the prediction method could then look like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;prediction returns the correct number of records&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">helper_objects&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">make_test_model&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">pred&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">helper_objects&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">model&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">helper_objects&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">nrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nf">nrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">helper_objects&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Any other data objects needed for testing I moved into &lt;code>tests/testthat/data/&lt;/code>.&lt;/p>
&lt;h3 id="corresponding-files-in-r-and-teststestthat">Corresponding files in &lt;code>R/&lt;/code> and &lt;code>tests/testthat/&lt;/code>
&lt;a href="#corresponding-files-in-r-and-teststestthat">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>If a file in &lt;code>R/&lt;/code> had a corresponding file in &lt;code>testthat/&lt;/code>, I made sure the names matched up, e.g., &lt;code>monstera.R&lt;/code> and &lt;code>test-monstera.R&lt;/code>.&lt;/p>
&lt;p>This gives you access to some convenient features of usethis and devtools:&lt;/p>
&lt;ul>
&lt;li>When you have the R file open, it&amp;rsquo;s easy to open the corresponding test file with
&lt;a href="https://usethis.r-lib.org/reference/use_r.html" target="_blank" rel="noopener">&lt;code>usethis::use_test()&lt;/code>&lt;/a> - and vice versa with
&lt;a href="https://usethis.r-lib.org/reference/use_r.html" target="_blank" rel="noopener">&lt;code>usethis::use_r()&lt;/code>&lt;/a>. No clicking around needed!&lt;/li>
&lt;li>When you have either file open, you can run the tests with
&lt;a href="http://devtools.r-lib.org/reference/test.html" target="_blank" rel="noopener">&lt;code>devtools:::test_active_file()&lt;/code>&lt;/a>, and see the test coverage report with &lt;code>test_coverage_active_file()&lt;/code> (which also shows you which lines are actually being tested). Both also have an RStudio addin, which means you can add
&lt;a href="https://rstudio.github.io/rstudioaddins/#keyboard-shorcuts" target="_blank" rel="noopener">keyboard shortcuts&lt;/a> for them!&lt;/li>
&lt;/ul>
&lt;p>And, with that, dials and censored were ready for more snapshot tests in the future!&lt;/p>
&lt;p>For more guidance on implementing tidy standards, check out
&lt;a href="https://usethis.r-lib.org/reference/tidyverse.html" target="_blank" rel="noopener">&lt;code>usethis::use_tidy_upkeep_issue()&lt;/code>&lt;/a>. It creates a GitHub issue with a handy checklist. You will be seeing those popping up in our repositories soon when we do some spring cleaning!&lt;/p></description></item><item><title>Renaming the default branch</title><link>https://www.tidyverse.org/blog/2021/10/renaming-default-branch/</link><pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/10/renaming-default-branch/</guid><description>&lt;p>Technically, Git has no official concept of the default branch. But in practice, most Git repos have an &lt;em>effective default branch&lt;/em>. If there&amp;rsquo;s only one branch, this is it! It is the branch that most bug fixes and features get merged in to. It is the branch you see when you first visit a repo on a site such as GitHub. On a Git remote, it is the branch that &lt;code>HEAD&lt;/code> points to. The default branch may not be precisely defined in Git itself, but most of us know it when we see it.&lt;/p>
&lt;p>Historically, &lt;code>master&lt;/code> has been the most common name for the default branch, but &lt;code>main&lt;/code> is an increasingly popular choice. There is coordinated change across the Git ecosystem that is making it easier for users to make this switch, for example:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://sfconservancy.org/news/2020/jun/23/gitbranchname/" target="_blank" rel="noopener">Regarding Git and Branch Naming&lt;/a>, statement from the Git project and the Software Freedom Conservancy regarding the new &lt;code>init.defaultBranch&lt;/code> configuration option&lt;/li>
&lt;li>
&lt;a href="https://github.com/github/renaming#readme" target="_blank" rel="noopener">Renaming the default branch from&lt;code>master&lt;/code>&lt;/a>, GitHub&amp;rsquo;s roadmap for supporting the shift away from &lt;code>master&lt;/code>&lt;/li>
&lt;li>
&lt;a href="https://about.gitlab.com/blog/2021/03/10/new-git-default-branch-name/" target="_blank" rel="noopener">The new Git default branch name&lt;/a>, same, but for GitLab&lt;/li>
&lt;/ul>
&lt;p>Folks at RStudio maintain hundreds of public repositories on GitHub, spread out over various organizations and user accounts. Some individual repos had already moved away from &lt;code>master&lt;/code> in the past year, but many of us had not made the change, just due to inertia. We&amp;rsquo;ve decided it tackle this switch proactively and in bulk, for any interested individual or team, hopefully reducing the pain for everyone.&lt;/p>
&lt;p>The purpose of this blog post is to:&lt;/p>
&lt;ul>
&lt;li>Give our community a heads-up about this change.&lt;/li>
&lt;li>Explain how this affects people who have cloned or forked our repositories.&lt;/li>
&lt;li>Explain how you can make the &lt;code>master&lt;/code> to &lt;code>main&lt;/code> switch in your own Git life.&lt;/li>
&lt;li>Advertise new functions in usethis &amp;gt;= 2.1.2 that help with the above.&lt;/li>
&lt;/ul>
&lt;h2 id="tldr">TL;DR
&lt;a href="#tldr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>These are the key bits of code shown below.&lt;/p>
&lt;p>&lt;strong>NOTE: you will need to update to usethis 2.1.2 or higher to get this functionality!&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Function&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>
&lt;a href="https://usethis.r-lib.org/reference/git-default-branch.html" target="_blank" rel="noopener">&lt;code>usethis::git_default_branch()&lt;/code>&lt;/a>&lt;/td>
&lt;td>Reveals the default branch of the current project.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;a href="https://usethis.r-lib.org/reference/git-default-branch.html" target="_blank" rel="noopener">&lt;code>usethis::git_default_branch_rediscover()&lt;/code>&lt;/a>&lt;/td>
&lt;td>Detects when a project&amp;rsquo;s default branch has changed on GitHub and makes the necessary updates to your Git environment. Primarily for use by &lt;strong>contributors&lt;/strong>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;a href="https://usethis.r-lib.org/reference/git-default-branch.html" target="_blank" rel="noopener">&lt;code>usethis::git_default_branch_rename()&lt;/code>&lt;/a>&lt;/td>
&lt;td>Changes the default branch on GitHub and makes any necessary local updates. Aimed at &lt;strong>maintainers&lt;/strong> who have admin permissions.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;a href="https://usethis.r-lib.org/reference/git-default-branch.html" target="_blank" rel="noopener">&lt;code>usethis::git_default_branch_configure()&lt;/code>&lt;/a>&lt;/td>
&lt;td>Changes the default name of the initial branch in new Git repos, going forward.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Read on for more context.&lt;/p>
&lt;h2 id="which-repositories-are-affected">Which repositories are affected?
&lt;a href="#which-repositories-are-affected">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The transition from &lt;code>master&lt;/code> to &lt;code>main&lt;/code> is happening organization-wide for specific GitHub organizations (e.g. 
&lt;a href="https://github.com/tidyverse" target="_blank" rel="noopener">tidyverse&lt;/a>,
&lt;a href="https://github.com/r-lib" target="_blank" rel="noopener">r-lib&lt;/a>,
&lt;a href="https://github.com/tidymodels" target="_blank" rel="noopener">tidymodels&lt;/a>, and
&lt;a href="https://github.com/sol-eng" target="_blank" rel="noopener">sol-eng&lt;/a>). However, several teams maintain repos across multiple organizations and several organizations host repos for multiple teams and purposes. The organization-wide approach doesn&amp;rsquo;t work well for these cases. Therefore, many additional &amp;ldquo;one-off&amp;rdquo; repos are also part of this effort.&lt;/p>
&lt;p>In total, we&amp;rsquo;re coordinating the &lt;code>master&lt;/code> to &lt;code>main&lt;/code> switch for around 350 repositories.&lt;/p>
&lt;p>In each case, we opened a GitHub issue announcing the coming change, several weeks in advance. These issues all look something like this: &lt;a href="https://github.com/tidyverse/dplyr/issues/6006">https://github.com/tidyverse/dplyr/issues/6006&lt;/a>.&lt;/p>
&lt;h2 id="when-are-things-changing">When are things changing?
&lt;a href="#when-are-things-changing">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&amp;ldquo;Around now.&amp;rdquo;&lt;/p>
&lt;p>Ideally, we would publish this post at the very same moment we rename our branches. But that&amp;rsquo;s not possible for a variety of reasons, chiefly because no single person has the necessary permissions for all of the affected repos.&lt;/p>
&lt;p>Is there a repo you care about, that has an open issue about branch renaming, and yet the change doesn&amp;rsquo;t seem to be happening? Feel free to give us a gentle nudge by commenting in the issue thread.&lt;/p>
&lt;h2 id="usethis-has-functions-to-help">usethis has functions to help
&lt;a href="#usethis-has-functions-to-help">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The recent release of usethis has some new functions to support changes in the default branch. Specifically, you want version 2.1.2 or higher. To be clear, you don&amp;rsquo;t &lt;em>need&lt;/em> usethis to adapt to change in the default branch. On a small scale, the work can be done through some combination of command line Git and actions in a web browser, if that&amp;rsquo;s how you roll.&lt;/p>
&lt;p>But the new &lt;code>git_default_branch*()&lt;/code> family of functions can make this process more pleasant, for those who enjoy using devtools/usethis, especially for Git and GitHub tasks. These functions also help us do this work programmatically for hundreds of repositories at once.&lt;/p>
&lt;p>You can install the newest version of usethis from CRAN with:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/utils/install.packages.html'>install.packages&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"usethis"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can make usethis available in your R session with either of these commands:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://usethis.r-lib.org'>usethis&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># or possibly even better:&lt;/span>
&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://devtools.r-lib.org/'>devtools&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># devtools Depends on usethis, so attaching devtools also attaches usethis&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you&amp;rsquo;d like usethis to help with you with Git/GitHub, please read the article
&lt;a href="https://usethis.r-lib.org/articles/articles/git-credentials.html" target="_blank" rel="noopener">Managing Git(Hub) Credentials&lt;/a>.&lt;/p>
&lt;p>usethis is very opinionated and conservative about which GitHub setups it&amp;rsquo;s willing to manage, because we don&amp;rsquo;t want to barge in and mess with something we don&amp;rsquo;t understand. These standard setups and what we mean by, e.g., &lt;strong>source repo&lt;/strong> are all described at &lt;a href="https://happygitwithr.com/common-remote-setups.html">https://happygitwithr.com/common-remote-setups.html&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;div class="figure" style="text-align: center">
&lt;p>&lt;img src="six-configs.png" alt="Six common GitHub setups" width="100%" />&lt;/p>
&lt;p class="caption">
Six common GitHub setups
&lt;/p>
&lt;/div>
&lt;/div>
&lt;h2 id="how-to-update-your-clones-and-forks">How to update your clones and forks
&lt;a href="#how-to-update-your-clones-and-forks">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>As mentioned above, our bulk renaming involves around 350 GitHub repos, which are associated with approximately 90K watchers, 34K forks, 9.5K open issues, and 1K open pull requests. It&amp;rsquo;s impossible to say how many non-fork clones are out there. One thing that&amp;rsquo;s clear: our branch renaming potentially affects lots of people.&lt;/p>
&lt;h3 id="how-will-i-know-i-have-a-problem">How will I know I have a problem?
&lt;a href="#how-will-i-know-i-have-a-problem">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Here&amp;rsquo;s what it looks like when you try to pull from a remote repo in a project that used to use &lt;code>master&lt;/code>, but now uses &lt;code>main&lt;/code>, but you haven&amp;rsquo;t updated your local repo yet.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Example with
&lt;a href="https://usethis.r-lib.org/reference/pull-requests.html" target="_blank" rel="noopener">&lt;code>usethis::pr_merge_main()&lt;/code>&lt;/a> &lt;strong>with usethis &amp;gt;= 2.1.2&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>pr_merge_main()
#&amp;gt; Error: Default branch mismatch between local repo and remote.
#&amp;gt; The default branch of the &amp;quot;origin&amp;quot; remote is &amp;quot;main&amp;quot;.
#&amp;gt; But the default branch of the local repo appears to be &amp;quot;master&amp;quot;.
#&amp;gt; Call `git_default_branch_rediscover()` to resolve this.
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Example with command line &lt;code>git pull&lt;/code> (which is what RStudio&amp;rsquo;s blue &amp;ldquo;down&amp;rdquo; arrow does):&lt;/p>
&lt;pre>&lt;code>Your configuration specifies to merge with the ref 'refs/heads/master'
from the remote, but no such ref was fetched.
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;p>Both messages are telling you the same thing:&lt;/p>
&lt;blockquote>
&lt;p>We&amp;rsquo;re trying to pull changes from the remote &lt;code>master&lt;/code> branch, but the remote does not have a &lt;code>master&lt;/code> branch.&lt;/p>
&lt;/blockquote>
&lt;p>You need to tell your local repo about the switch from &lt;code>master&lt;/code> to &lt;code>main&lt;/code>.&lt;/p>
&lt;p>In usethis v2.0.1 and earlier, we were not proactively on the lookout for a change to the default branch name in the source repository. Implicitly, we assumed that the user was responsible for staying current with such changes. The recent usethis release (&amp;gt;= 2.1.2) tries much harder to alert the user if the default branch name changes and to provide an easy way to sync up.&lt;/p>
&lt;h3 id="-can-i-just-burn-it-all-down-">🔥 Can I just burn it all down? 🔥
&lt;a href="#-can-i-just-burn-it-all-down-">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>Yes, yes you can!&lt;/p>
&lt;p>If there&amp;rsquo;s nothing precious in your local clone of our repo or in your fork, it&amp;rsquo;s perfectly reasonable to delete them and just start over. Locally, you delete the folder corresponding to the repo. On GitHub, in your fork, go to &lt;em>Settings&lt;/em> and scroll down to the &lt;em>Danger Zone&lt;/em> to &lt;em>Delete this repository&lt;/em>.&lt;/p>
&lt;p>Then you can do a fresh fork-and-clone of, for example, dplyr:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://usethis.r-lib.org/reference/create_from_github.html'>create_from_github&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"tidyverse/dplyr"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="how-do-i-update-my-stuff-to-reflect-the-new-default-branch">How do I update my stuff to reflect the new default branch?
&lt;a href="#how-do-i-update-my-stuff-to-reflect-the-new-default-branch">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>If you don&amp;rsquo;t want to burn it all down, you can call
&lt;a href="https://usethis.r-lib.org/reference/git-default-branch.html" target="_blank" rel="noopener">&lt;code>usethis::git_default_branch_rediscover()&lt;/code>&lt;/a> to &lt;em>rediscover&lt;/em> the default branch from the &lt;strong>source repo&lt;/strong>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://usethis.r-lib.org/reference/git-default-branch.html'>git_default_branch_rediscover&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; ℹ Default branch of the source repo 'jennybc/happy-git-with-r': 'main'&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Default branch of local repo has moved: 'master' --&amp;gt; 'main'&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Above, you see usethis updating the local repository to match the source repo. If we detect that you also have a fork of this repo, usethis will rename its default branch as well.&lt;/p>
&lt;p>GitHub provides official instructions for
&lt;a href="https://docs.github.com/en/github/administering-a-repository/managing-branches-in-your-repository/renaming-a-branch#updating-a-local-clone-after-a-branch-name-changes" target="_blank" rel="noopener">updating a local clone after a branch name changes&lt;/a>, using only command line Git:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>git branch -m OLD-BRANCH-NAME NEW-BRANCH-NAME
git fetch origin
git branch -u origin/NEW-BRANCH-NAME NEW-BRANCH-NAME
git remote set-head origin -a&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Depending on your setup, above you might need to substitute &lt;code>upstream&lt;/code> for &lt;code>origin&lt;/code>. &lt;code>OLD-BRANCH-NAME&lt;/code> is probably &lt;code>master&lt;/code> and &lt;code>NEW-BRANCH-NAME&lt;/code> is probably &lt;code>main&lt;/code>.&lt;/p>
&lt;h2 id="how-to-rename-default-branch-in-your-own-existing-repos">How to rename default branch in your own existing repos
&lt;a href="#how-to-rename-default-branch-in-your-own-existing-repos">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>You can rename the default branch for repos that you effectively own. This is a straightforward task for a repo that only exists on your computer. &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> We&amp;rsquo;re more concerned about the trickier case where the project is also on GitHub.&lt;/p>
&lt;p>You can call
&lt;a href="https://usethis.r-lib.org/reference/git-default-branch.html" target="_blank" rel="noopener">&lt;code>usethis::git_default_branch_rename()&lt;/code>&lt;/a> to &lt;em>rename&lt;/em> (or move) the default branch in the &lt;strong>source repo&lt;/strong>. For this to work, you must either own the source repo personally or, if it&amp;rsquo;s organization-owned, you must have &lt;code>admin&lt;/code> permission. This is a higher level of permission than &lt;code>write&lt;/code>, which is what&amp;rsquo;s needed to push.
&lt;a href="https://usethis.r-lib.org/reference/git-default-branch.html" target="_blank" rel="noopener">&lt;code>git_default_branch_rename()&lt;/code>&lt;/a> checks this pre-requisite and exits early, without doing anything, if you are not going to be successful.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://usethis.r-lib.org/reference/git-default-branch.html'>git_default_branch_rename&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Default branch of the source repo 'jennybc/myrepo' has moved: 'master' --&amp;gt; 'main'&lt;/span>
&lt;span class='c'>#&amp;gt; • Be sure to update files that refer to the default branch by name.&lt;/span>
&lt;span class='c'>#&amp;gt; Consider searching within your project for 'master'.&lt;/span>
&lt;span class='c'>#&amp;gt; x Some badges may refer to the old default branch 'master':&lt;/span>
&lt;span class='c'>#&amp;gt; - 'README.md'&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Default branch of local repo has moved: 'master' --&amp;gt; 'main'&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Once the default branch is successfully renamed in the source repo on GitHub,
&lt;a href="https://usethis.r-lib.org/reference/git-default-branch.html" target="_blank" rel="noopener">&lt;code>git_default_branch_rename()&lt;/code>&lt;/a> makes an internal call to
&lt;a href="https://usethis.r-lib.org/reference/git-default-branch.html" target="_blank" rel="noopener">&lt;code>git_default_branch_rediscover()&lt;/code>&lt;/a> to finish the job. This makes any necessary local changes or, more rarely, changes in a personal fork.&lt;/p>
&lt;p>Note also that we check for specific files that often include the name of the default branch, such as GitHub Actions workflows and the badges section of README. These references should be updated. It&amp;rsquo;s probably a good idea to do a project-wide search for both the old and the new name and take a hard look at the &amp;ldquo;hits&amp;rdquo;.&lt;/p>
&lt;p>If you don&amp;rsquo;t want to use usethis, you can rename the default branch from a web browser. On GitHub, in your repo, go to &lt;em>Settings&lt;/em>, then &lt;em>Branches&lt;/em>, and edit the &lt;em>Default branch&lt;/em>. Then follow the command line instructions from the previous section, emulating what we do in
&lt;a href="https://usethis.r-lib.org/reference/git-default-branch.html" target="_blank" rel="noopener">&lt;code>git_default_branch_rename()&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="how-to-change-the-default-name-of-your-default-branch-for-the-future">How to change the default name of your default branch, for the future
&lt;a href="#how-to-change-the-default-name-of-your-default-branch-for-the-future">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The way most repos end up with &lt;code>master&lt;/code> as their default branch is that Git itself defaults to &lt;code>master&lt;/code> when it creates the very first branch, with the very first commit, in a new repo. As of Git 2.28 (released 2020-07-27), this became configurable, so it&amp;rsquo;s one of those things you can customize in your global, i.e. user-level, Git config file. usethis does all of its Git work via the
&lt;a href="https://docs.ropensci.org/gert/" target="_blank" rel="noopener">gert package&lt;/a> and the underlying library libgit2 library gained similar support in version 1.1 (released 2020-10-12).&lt;/p>
&lt;p>The new configuration option is &lt;code>init.defaultBranch&lt;/code>.&lt;/p>
&lt;p>There are various ways to set your preferred initial branch name to, e.g., &lt;code>main&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>With usethis &amp;gt;= 2.1.2, using a special-purpose function:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://usethis.r-lib.org/reference/git-default-branch.html'>git_default_branch_configure&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; ✓ Configuring init.defaultBranch as 'main'.&lt;/span>
&lt;span class='c'>#&amp;gt; ℹ Remember: this only affects repos you create in the future.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>With usethis, using the general function to modify your Git configuration:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://usethis.r-lib.org/reference/use_git_config.html'>use_git_config&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>init.defaultBranch &lt;span class='o'>=&lt;/span> &lt;span class='s'>"main"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>With command line Git:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>git config --global init.defaultBranch main&lt;/code>&lt;/pre>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;p>Although it is more rare to first create repos on a host like GitHub or GitLab, this certainly comes up from time to time. All the major providers now support configuration of the initial branch name and, in the absence of a user or organization preference, all default to &lt;code>main&lt;/code>.&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements
&lt;a href="#acknowledgements">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Thanks to Jeroen Ooms (
&lt;a href="https://github.com/jeroen" target="_blank" rel="noopener">@jeroen&lt;/a>), maintainer of gert, for adding
&lt;a href="https://docs.ropensci.org/gert/reference/git_branch.html" target="_blank" rel="noopener">&lt;code>gert::git_branch_move()&lt;/code>&lt;/a>. And thanks to everyone at RStudio helping with this effort, especially the champions from other teams: Barret Schloerke (
&lt;a href="https://github.com/schloerke" target="_blank" rel="noopener">@schloerke&lt;/a>, Shiny), Ian Flores Siaca (
&lt;a href="https://github.com/ian-flores" target="_blank" rel="noopener">@ian-flores&lt;/a>, Solutions Engineering), Julia Silge (
&lt;a href="https://github.com/juliasilge" target="_blank" rel="noopener">@juliasilge&lt;/a>, tidymodels), Mine Çetinkaya-Rundel (
&lt;a href="https://github.com/mine-cetinkaya-rundel" target="_blank" rel="noopener">@mine-cetinkaya-rundel&lt;/a>, Education), Sigrid Keydana (
&lt;a href="https://github.com/skeydan" target="_blank" rel="noopener">@skeydan&lt;/a>, Machine Learning), Alison Presmanes Hill (
&lt;a href="https://github.com/apreshill" target="_blank" rel="noopener">@apreshill&lt;/a>, Data Science Communication).&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>
&lt;a href="https://usethis.r-lib.org/reference/git-default-branch.html" target="_blank" rel="noopener">&lt;code>usethis::git_default_branch_rename()&lt;/code>&lt;/a> &lt;strong>does&lt;/strong> handle the special case of &lt;code>&amp;quot;no_github&amp;quot;&lt;/code>. Internally, it calls
&lt;a href="https://docs.ropensci.org/gert/reference/git_branch.html" target="_blank" rel="noopener">&lt;code>gert::git_branch_move()&lt;/code>&lt;/a>. With command line Git, use &lt;code>git branch -m OLD-BRANCH-NAME NEW-BRANCH-NAME&lt;/code>. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Pathway to success - updating your package to cpp11</title><link>https://www.tidyverse.org/blog/2021/09/updating-to-cpp11/</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/09/updating-to-cpp11/</guid><description>&lt;!--
TODO:
* [x] Look over / edit the post's title in the yaml
* [x] Edit (or delete) the description; note this appears in the Twitter card
* [x] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [x] Find photo &amp; update yaml metadata
* [x] Create `thumbnail-sq.jpg`; height and width should be equal
* [x] Create `thumbnail-wd.jpg`; width should be >5x height
* [x] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [x] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html)
-->
&lt;p>Over the summer I had the pleasure of working with Jim Hester on the
&lt;a href="https://cpp11.r-lib.org/" target="_blank" rel="noopener">cpp11 package&lt;/a> as a tidyverse summer intern. The cpp11 package is a header-only R package that helps R package developers handle R objects with C++ code. Its goals and syntax are similar to the excellent Rcpp package. During most of my internship, I worked on triaging issues, fixing bugs, and adding new features to cpp11. Near the end of the summer, I got to work with Jenny Bryan on
&lt;a href="https://github.com/tidyverse/readxl/pull/659" target="_blank" rel="noopener">converting readxl to using cpp11&lt;/a>. Jim has written a
&lt;a href="https://cpp11.r-lib.org/articles/converting.html" target="_blank" rel="noopener">great post&lt;/a> about converting packages from Rcpp to cpp11, which I heavily referenced during the process. But there were still some challenges I encountered. To help others going through a similar process, I wanted to review the workflows and tools we used to make this easier.&lt;/p>
&lt;p>The entire process took about a week. Using both Rcpp and cpp11 at the same time in a package is okay for short term work like this, so I didn&amp;rsquo;t feel rushed. To get started, I followed the initial set-up steps outlined in Jim&amp;rsquo;s article and then recompiled, to confirm it was successful. Next, I needed to include either the &lt;code>cpp11/R.hpp&lt;/code> header or the macros &lt;code>R_NO_REMAP&lt;/code> and &lt;code>STRICT_R_HEADERS&lt;/code>. I found it easier to include the macros since the header file needs to come before any headers that use Rcpp.&lt;/p>
&lt;h2 id="step-by-step-integration">Step-by-step integration
&lt;a href="#step-by-step-integration">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>After I&amp;rsquo;d set-up my environment it was time to start converting the files. Initially, I made the mistake of selecting the most interconnected file in the readxl package. Since this file was central to the package, I would have had to convert the entire package over to cpp11 before the compilation errors or test failures would stop. After Jenny and Jim helped me select a more approachable file, the process was more incremental and I successfully maintained my sanity 🙌.&lt;/p>
&lt;p>When I was finished with a file, I would recompile the package and fix the compilation errors. To fix errors, I sometimes had to edit other functions in other files, but I only edited files enough to fix the failures. If I did too much it was difficult for me to know what was causing the failures. Then I&amp;rsquo;d run the tests for the readxl package. Thankfully, Jenny had great test coverage for the readxl package prior to this project, so we didn&amp;rsquo;t need to write more tests.&lt;/p>
&lt;p>Another incremental approach I used was to convert one function in a file, and then recompile and run the tests. This approach worked best for larger files. Once everything was passing, I&amp;rsquo;d commit and push to the PR so that my gracious reviewers could review my changes in stages, rather than in one big batch. This also allowed me to benefit from continuous integration, i.e. my changes were checked on a greater variety of R versions and operating systems, thanks to the checks we run via GitHub Actions. It&amp;rsquo;s a win-win!&lt;/p>
&lt;h2 id="the-nitty-gritty">The nitty-gritty
&lt;a href="#the-nitty-gritty">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>For the nitty-gritty details of converting the code, I definitely took advantage of
&lt;a href="https://cpp11.r-lib.org/articles/converting.html#class-comparison-table-1" target="_blank" rel="noopener">the table in Jim&amp;rsquo;s post!&lt;/a> That comparison table is great for converting between Rcpp and cpp11 classes. The table also provided me with information on whether a class was readable, writable or both. This new feature in cpp11 is great, since writable vectors are costly because the data must be fully copied, so using readable where appropriate is a good idea. When I was unsure of whether an object should be readable or writable, I would make it readable and then recompile to see if I was correct.&lt;/p>
&lt;h2 id="almost-done">Almost done
&lt;a href="#almost-done">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When I had finished converting all the objects to cpp11, I removed the macros &lt;code>R_NO_REMAP&lt;/code> and &lt;code>STRICT_R_HEADERS&lt;/code> and any stray &lt;code>#include &amp;quot;Rcpp.h&amp;quot;&lt;/code> directives. Finally, to check for any other updates that might be required, such as in the DESCRIPTION file, I also ran &lt;code>devtools::check()&lt;/code>. And that&amp;rsquo;s it!&lt;/p>
&lt;p>I had so much fun working with the tidyverse team. And a big thank you to Jim for all the support over the summer and to Jenny for their help on readxl! If you&amp;rsquo;re looking for more examples of updating packages to using cpp11, Jim has also gone through the process of
&lt;a href="https://github.com/tidyverse/readr/pull/1109" target="_blank" rel="noopener">converting readr to using cpp11&lt;/a>. RStudio is a great place to look for summer internship opportunities. They had a variety of opportunities this summer and I&amp;rsquo;d encourage anyone looking for summer internships to apply for 2022!&lt;/p></description></item><item><title>Teaching the tidyverse in 2021</title><link>https://www.tidyverse.org/blog/2021/08/teach-tidyverse-2021/</link><pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/08/teach-tidyverse-2021/</guid><description>&lt;!--
TODO:
* [ x ] Look over / edit the post's title in the yaml
* [ x ] Edit (or delete) the description; note this appears in the Twitter card
* [ x ] Pick category and tags (see existing with [`hugodown::tidy_show_meta()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html))
* [ x ] Find photo &amp; update yaml metadata
* [ x ] Create `thumbnail-sq.jpg`; height and width should be equal
* [ x ] Create `thumbnail-wd.jpg`; width should be >5x height
* [ x ] [`hugodown::use_tidy_thumbnails()`](https://rdrr.io/pkg/hugodown/man/use_tidy_post.html)
* [ x ] Add intro sentence, e.g. the standard tagline for the package
* [ ] [`usethis::use_tidy_thanks()`](https://usethis.r-lib.org/reference/use_tidy_thanks.html) -- not applicable
-->
&lt;p>Last summer I wrote a series of blog posts titled
&lt;a href="https://education.rstudio.com/blog/2020/07/teaching-the-tidyverse-in-2020-part-4-when-to-purrr/" target="_blank" rel="noopener">teaching the tidyverse in 2020&lt;/a>. As we quickly approach the end of the summer (in the northern hemisphere) and the start of a new academic year, it seems like a good time to provide a new update for teaching the tidyverse, in 2021. The main audience for this post is educators who teach the tidyverse and who might want to bring their teaching materials up to date with updates to the tidyverse that happened over the past year. Much of what is discussed here has already been covered in package update posts on this blog, but my goal is to summarize the highlights that are most relevant to teaching data science with the tidyverse, particularly to new learners.&lt;/p>
&lt;p>Specifically, I&amp;rsquo;ll discuss&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="#new-teaching-and-learning-resources">New teaching and learning resources&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#lifecycle-stages">Lifecycle stages&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#making-reproducible-examples-with-reprex">Making reproducible examples with &lt;strong>reprex&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#building-on-tidyverse-for-modeling-with-tidymodels">Building on the tidyverse for modeling with &lt;strong>tidymodels&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#reading-data-with-readr">Reading data with &lt;strong>readr&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#web-scraping-with-rvest">Web scraping with &lt;strong>rvest&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#sql-and-datatable-translations-with-dbplyr-and-dtplyr">SQL and data.table translations with &lt;strong>dbplyr&lt;/strong> and &lt;strong>dtplyr&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Let&amp;rsquo;s get started!&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidyverse.tidyverse.org'>tidyverse&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching packages&lt;/span> ─────────────────────────────────────── tidyverse 1.3.1 ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>ggplot2&lt;/span> 3.3.5 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>purrr &lt;/span> 0.3.4&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tibble &lt;/span> 3.1.4 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dplyr &lt;/span> 1.0.7&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tidyr &lt;/span> 1.1.3 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>stringr&lt;/span> 1.4.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>readr &lt;/span> 2.0.1 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>forcats&lt;/span> 0.5.1&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ────────────────────────────────────────── tidyverse_conflicts() ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="new-teaching-and-learning-resources">New teaching and learning resources
&lt;a href="#new-teaching-and-learning-resources">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Before we dive into specific package functionality updates, I&amp;rsquo;d like to highlight two new teaching and learning resources:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Cheatsheets:&lt;/strong> Some of the most popular learning resources for the tidyverse are the cheatsheets, many of which have recently been updated. Huge thanks to our intern
&lt;a href="https://twitter.com/avperny" target="_blank" rel="noopener">Averi Perny&lt;/a> on the fantastic work on this project! You can read more about the updates
&lt;a href="https://blog.rstudio.com/2021/08/23/cheat-sheet-updates/" target="_blank" rel="noopener">here&lt;/a> and find the new cheatsheets
&lt;a href="https://www.rstudio.com/resources/cheatsheets/" target="_blank" rel="noopener">here&lt;/a>.&lt;/li>
&lt;li>&lt;strong>ggplot2 FAQ:&lt;/strong> A new resource that might be useful for learners is the FAQ we&amp;rsquo;ve recently developed for ggplot2, which you can access
&lt;a href="https://ggplot2.tidyverse.org/articles/" target="_blank" rel="noopener">here&lt;/a>. These were compiled based on popular questions on StackOverflow and RStudio Community. Each question is accompanied with a short answer as well as an expanded example.&lt;/li>
&lt;/ul>
&lt;h2 id="lifecycle-stages">Lifecycle stages
&lt;a href="#lifecycle-stages">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://lifecycle.r-lib.org/" target="_blank" rel="noopener">&lt;strong>lifecycle&lt;/strong>&lt;/a> package is used to manage the lifecycle of functions and features within the tidyverse, with clear messaging about what is still experimental and what the tidyverse team is moving away from in the future. But instead of focusing on the package that implements this concept, when teaching, I recommend focusing on the stages of the lifecycle instead. These are &lt;em>experimental&lt;/em>, &lt;em>stable&lt;/em>, &lt;em>deprecated&lt;/em>, and &lt;em>superseded&lt;/em>. The lifecycle stages are a useful guide for teaching because they help you see what the tidyverse is moving toward and what it&amp;rsquo;s moving away from. Being aware of the lifecycle stages (and their associated badges) can be helpful as you review and revise your teaching materials or as you consider incorporating new tooling into your teaching.&lt;/p>
&lt;p>The diagram below depicts the lifecycle stages of functions and packages in the tidyverse.&lt;/p>
&lt;p>&lt;img src="lifecycle.png" alt="A diagram showing the transitions between the four main stages: experimental can become stable and stable can become deprecated or superseded.">&lt;/p>
&lt;p>Let&amp;rsquo;s discuss each of these stages in detail, along with recommendations on how you might consider them in the context of teaching:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;img src="lifecycle-stable.svg" alt="Stable" style="vertical-align:middle"/> Stable indicates that breaking changes will be avoided where possible, and they&amp;rsquo;re only made if the long term benefit of such a change exceeds the short term pain of changing existing code. If breaking changes are needed, they will occur gradually. This is the default state for most functions in the tidyverse and hence the badge is generally not shown. Teaching tip: feel free to teach any stable functions, they&amp;rsquo;re here to stay for the long run!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;img src="lifecycle-deprecated.svg" alt="Deprecated" style="vertical-align:middle"/> If a function is noted as deprecated, this means a better alternative is available and this function is scheduled for removal. Generally functions will first be soft deprecated and then deprecated. Very important functions that become deprecated might next be defunct, which means that function continues to exist but the deprecation warning turns into an error. An example of a deprecated function is
&lt;a href="https://tibble.tidyverse.org/reference/deprecated.html" target="_blank" rel="noopener">&lt;code>tibble::data_frame()&lt;/code>&lt;/a>, with the preferred alternative
&lt;a href="https://tibble.tidyverse.org/reference/tibble.html" target="_blank" rel="noopener">&lt;code>tibble::tibble()&lt;/code>&lt;/a>. Arguments to functions can also be deprecated, e.g., in
&lt;a href="https://tidyr.tidyverse.org/reference/nest.html" target="_blank" rel="noopener">&lt;code>tidyr::nest()&lt;/code>&lt;/a> the new argument &lt;code>new_col&lt;/code> makes the former &lt;code>.key&lt;/code> argument not needed, and hence &lt;code>.key&lt;/code> is deprecated. You should avoid teaching functions that are deprecated and correct their usage in your students&amp;rsquo; code by suggesting the preferred alternative.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;img src="lifecycle-superseded.svg" alt="Superseded" style="vertical-align:middle"/> Superseded indicates that there is a known better alternative for the function, but it&amp;rsquo;s not going away. Some examples include the following:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_longer.html" target="_blank" rel="noopener">&lt;code>tidyr::pivot_longer()&lt;/code>&lt;/a> /
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_wider.html" target="_blank" rel="noopener">&lt;code>tidyr::pivot_wider()&lt;/code>&lt;/a> for reshaping data supersede
&lt;a href="https://tidyr.tidyverse.org/reference/spread.html" target="_blank" rel="noopener">&lt;code>tidyr::spread()&lt;/code>&lt;/a> /
&lt;a href="https://tidyr.tidyverse.org/reference/gather.html" target="_blank" rel="noopener">&lt;code>tidyr::gather()&lt;/code>&lt;/a> (More on these
&lt;a href="https://www.tidyverse.org/blog/2019/09/tidyr-1-0-0/" target="_blank" rel="noopener">here&lt;/a> and
&lt;a href="https://tidyr.tidyverse.org/articles/pivot.html" target="_blank" rel="noopener">here&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/across.html" target="_blank" rel="noopener">&lt;code>dplyr::across()&lt;/code>&lt;/a> for working across columns supersedes scoped verbs such as
&lt;a href="https://dplyr.tidyverse.org/reference/mutate_all.html" target="_blank" rel="noopener">&lt;code>dplyr::mutate_if()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/select_all.html" target="_blank" rel="noopener">&lt;code>dplyr::select_at()&lt;/code>&lt;/a>,
&lt;a href="https://dplyr.tidyverse.org/reference/select_all.html" target="_blank" rel="noopener">&lt;code>dplyr::rename_all()&lt;/code>&lt;/a>, etc. (More on this
&lt;a href="https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-colwise/" target="_blank" rel="noopener">here&lt;/a> and
&lt;a href="https://dplyr.tidyverse.org/articles/colwise.html" target="_blank" rel="noopener">here&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://dplyr.tidyverse.org/reference/slice.html" target="_blank" rel="noopener">&lt;code>dplyr::slice_sample()&lt;/code>&lt;/a> with &lt;code>n&lt;/code> and &lt;code>prop&lt;/code> arguments supersedes
&lt;a href="https://dplyr.tidyverse.org/reference/sample_n.html" target="_blank" rel="noopener">&lt;code>dplyr::sample_n()&lt;/code>&lt;/a> /
&lt;a href="https://dplyr.tidyverse.org/reference/sample_n.html" target="_blank" rel="noopener">&lt;code>dplyr::sample_frac()&lt;/code>&lt;/a> (More on this
&lt;a href="https://www.tidyverse.org/blog/2020/03/dplyr-1-0-0-is-coming-soon/#superseded-functions" target="_blank" rel="noopener">here&lt;/a>)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>I don&amp;rsquo;t recommend teaching superseded functions to new learners, and for learners who might be aware of them already, I would recommend discouraging their use (though not correcting, i.e., no point deductions on a formative assessment), and suggesting an alternative.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;img src="lifecycle-experimental.svg" alt="Experimental" style="vertical-align:middle"/> Experimental functions are made available so the community can try them out and provide feedback, however they come with no promises for long term stability. For example, the following have been labeled experimental for a while and have received improvements based on community feedback (and are very likely to graduate to stable in the next dplyr release):&lt;/p>
&lt;ul>
&lt;li>
&lt;p>in
&lt;a href="https://dplyr.tidyverse.org/reference/summarise.html" target="_blank" rel="noopener">&lt;code>dplyr::summarize()&lt;/code>&lt;/a>: &lt;code>.groups&lt;/code> argument to define the grouping structure of the result&lt;/p>
&lt;/li>
&lt;li>
&lt;p>in
&lt;a href="https://dplyr.tidyverse.org/reference/mutate.html" target="_blank" rel="noopener">&lt;code>dplyr::mutate()&lt;/code>&lt;/a>: &lt;code>.before&lt;/code> and &lt;code>.after&lt;/code> arguments to control where new columns should appear&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>I recommend teaching experimental functions with caution, particularly to new learners with whom you might not formally discuss the concept of a &amp;ldquo;lifecycle&amp;rdquo;. However there is no reason to discourage use of these functions &amp;ndash; if students have stumbled upon a solution that involves an experimental function or argument and has used it correctly on their own, this is likely a good indication that the experiment is working!&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>If you&amp;rsquo;d like to learn more about the tidyverse lifecycle, I recommend the following resources:&lt;/p>
&lt;ul>
&lt;li>Blog post:
&lt;a href="https://www.tidyverse.org/blog/2021/02/lifecycle-1-0-0/" target="_blank" rel="noopener">lifecycle 1.0.0&lt;/a>&lt;/li>
&lt;li>Talk:
&lt;a href="https://www.rstudio.com/resources/rstudioglobal-2021/maintaining-the-house-the-tidyverse-built/" target="_blank" rel="noopener">Maintaining the house the tidyverse built&lt;/a> by Hadley Wickham at rstudio::global(2021)&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;/ul>
&lt;h2 id="making-reproducible-examples-with-reprex">Making reproducible examples with reprex
&lt;a href="#making-reproducible-examples-with-reprex">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The
&lt;a href="https://reprex.tidyverse.org/" target="_blank" rel="noopener">&lt;strong>reprex&lt;/strong>&lt;/a> package helps users create &lt;strong>repr&lt;/strong>oducible &lt;strong>ex&lt;/strong>amples for posting to GitHub issues, StackOverflow, in Slack messages or snippets, or even to paste into PowerPoint or Keynote slides by placing the code to be shared in your clipboard. I find reprex very useful when teaching because it helps my students provide me with broken code in a way that makes it as easy as possible for me (and for other students in the class) to help them.&lt;/p>
&lt;p>There have been
&lt;a href="https://reprex.tidyverse.org/news/index.html#reprex-1-0-0-2021-01-27" target="_blank" rel="noopener">many&lt;/a>
&lt;a href="https://reprex.tidyverse.org/news/index.html#reprex-2-0-0-2021-04-02" target="_blank" rel="noopener">exciting&lt;/a> developments in reprex over the year. The one that is perhaps most relevant to teaching are improvements that make it easier to use reprex when working in
&lt;a href="https://www.rstudio.com/products/rstudio/#rstudio-server" target="_blank" rel="noopener">RStudio Server&lt;/a> and
&lt;a href="https://rstudio.cloud/" target="_blank" rel="noopener">RStudio Cloud&lt;/a> as well as those that allow using local data when creating a reprex.&lt;/p>
&lt;p>Many courses teach R using RStudio Server or RStudio Cloud since this approach circumvents the need for students to install software and allows the instructor to have full control over the R environment their students are learning in. When working in these environments, the R code is running in a web browser and for security reasons it&amp;rsquo;s not possible for reprex to place code on your system clipboard. When creating a reprex in these environments, you can now simply select the relevant code, and run &lt;code>reprex()&lt;/code>. This will create a &lt;code>.md&lt;/code> file containing the contents of the reprex, ready for you to copy via Cmd/Ctrl+C.&lt;/p>
&lt;img src="reprex-cloud.png" alt="On the left: RStudio Cloud window with an R script with two lines of code highlighted. On the right: Result after running reprex() in the Console, including a new markdown file with the name vivid-eider_reprex.md that includes the code and the resulting output, commented out, and selected, ready to be copy pasted elsewhere. The viewer pane on the bottom right shows the stylized result of the reprex." width="1000"/>
&lt;p>The new &lt;code>wd&lt;/code> argument can help students create reprexes when they are working on an assignment involving a local data file. When &lt;code>reprex(wd = &amp;quot;.&amp;quot;)&lt;/code>, the reprex will be executed in the current working directory.&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> Writing a reproducible example with a minimal dataset is better practice, but this can be quite difficult for new learners. Being able to easily use local data will make it easier for them to benefit from other aspects of reprex earlier on.&lt;/p>
&lt;p>Being able to create a reprex in the current working directory means you can also benefit from a project-level &lt;code>.Rprofile&lt;/code> if you happen to have one in your project. This is likely not going to have implications for new learners, for whom this would be an advanced concept, but it can be helpful for instructors who teach with a different suite of packages than what they locally have installed (e.g., CRAN versions for teaching vs. development versions for personal use). If this describes you, I recommend using
&lt;a href="https://rstudio.github.io/renv/index.html" target="_blank" rel="noopener">&lt;strong>renv&lt;/strong>&lt;/a> in projects where you keep teaching materials, which uses &lt;code>.Rprofile&lt;/code> to implement a project-specific package library. Then, &lt;code>reprex(wd = &amp;quot;.&amp;quot;)&lt;/code> will create a reprex using the packages in that library.&lt;/p>
&lt;p>For more on updates in reprex, read the blog posts for the
&lt;a href="https://www.tidyverse.org/blog/2021/02/reprex-1-0-0/" target="_blank" rel="noopener">1.0.0&lt;/a> and
&lt;a href="https://www.tidyverse.org/blog/2021/04/reprex-2-0-0/" target="_blank" rel="noopener">2.0.0&lt;/a> releases. And if you&amp;rsquo;re new to reprex, start
&lt;a href="https://reprex.tidyverse.org/articles/articles/learn-reprex.html" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;h2 id="building-on-tidyverse-for-modeling-with-tidymodels">Building on tidyverse for modeling with tidymodels
&lt;a href="#building-on-tidyverse-for-modeling-with-tidymodels">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The &lt;strong>tidymodels&lt;/strong> framework is a collection of packages for modeling and machine learning using tidyverse principles. This framework has been around since 2017, but over the past year many of the packages within tidymodels have become stable and gained lots of documentation, making them attractive choices for teaching. If you&amp;rsquo;re introducing your students to data science with the tidyverse, a great next step to consider is using tidymodels when it comes to modeling and inference.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://tidymodels.tidymodels.org'>tidymodels&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Registered S3 method overwritten by 'tune':&lt;/span>
&lt;span class='c'>#&amp;gt; method from &lt;/span>
&lt;span class='c'>#&amp;gt; required_pkgs.model_spec parsnip&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Attaching packages&lt;/span> ────────────────────────────────────── tidymodels 0.1.3 ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>broom &lt;/span> 0.7.9 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>rsample &lt;/span> 0.1.0 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>dials &lt;/span> 0.0.9 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>tune &lt;/span> 0.1.6 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>infer &lt;/span> 1.0.0 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflows &lt;/span> 0.2.3 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>modeldata &lt;/span> 0.1.1 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>workflowsets&lt;/span> 0.1.0 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>parsnip &lt;/span> 0.1.7 &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>yardstick &lt;/span> 0.0.8 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #00BB00;'>✔&lt;/span> &lt;span style='color: #0000BB;'>recipes &lt;/span> 0.1.16&lt;/span>
&lt;span class='c'>#&amp;gt; ── &lt;span style='font-weight: bold;'>Conflicts&lt;/span> ───────────────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>scales&lt;/span>::&lt;span style='color: #00BB00;'>discard()&lt;/span> masks &lt;span style='color: #0000BB;'>purrr&lt;/span>::discard()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>filter()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::filter()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>recipes&lt;/span>::&lt;span style='color: #00BB00;'>fixed()&lt;/span> masks &lt;span style='color: #0000BB;'>stringr&lt;/span>::fixed()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>dplyr&lt;/span>::&lt;span style='color: #00BB00;'>lag()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::lag()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>yardstick&lt;/span>::&lt;span style='color: #00BB00;'>spec()&lt;/span> masks &lt;span style='color: #0000BB;'>readr&lt;/span>::spec()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #BB0000;'>✖&lt;/span> &lt;span style='color: #0000BB;'>recipes&lt;/span>::&lt;span style='color: #00BB00;'>step()&lt;/span> masks &lt;span style='color: #0000BB;'>stats&lt;/span>::step()&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #0000BB;'>•&lt;/span> Use &lt;span style='color: #00BB00;'>tidymodels_prefer()&lt;/span> to resolve common conflicts.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>From a pedagogical perspective, tidymodels has three main advantages:&lt;/p>
&lt;ol>
&lt;li>Similar interfaces to different models.&lt;/li>
&lt;li>Model outputs as tibbles, which are straightforward to interact with for learners who already know how to wrangle and visualize data stored in this format.&lt;/li>
&lt;li>Features that help users avoid common machine learning pitfalls such as safeguards in functions that avoid over-fitting by making the test-training split a fundamental part of the modeling process.&lt;/li>
&lt;/ol>
&lt;p>Let&amp;rsquo;s start with the first one &amp;mdash; providing similar interfaces to models. Consider the question &amp;ldquo;&lt;em>How do you define the the number of trees when fitting a random forest model?&amp;quot;&lt;/em> The answer is generally &lt;em>&amp;quot;depends on the package: &lt;code>randomForest::randomForest()&lt;/code> uses &lt;code>ntree&lt;/code>, &lt;code>ranger::ranger()&lt;/code> uses &lt;code>num.trees&lt;/code>, Spark&amp;rsquo;s &lt;code>sparklyr::ml_random_forest()&lt;/code> uses &lt;code>num_trees&lt;/code>&amp;quot;&lt;/em>. The answer with tidymodels is a bit simpler though: &lt;em>&amp;quot;using the &lt;code>trees&lt;/code> argument in the &lt;code>rand_forest()&lt;/code> package, regardless of the engine being used to fit the model&amp;quot;&lt;/em>. This can allow new learners to focus on what&amp;quot;trees&amp;quot; mean and how one decides how many to use, instead of the precise syntax needed by the various packages that can fit random forest models.&lt;/p>
&lt;p>The pedagogical advantages of teaching modeling with the full tidymodels framework may not be clear for fitting simple models with
&lt;a href="https://rdrr.io/r/stats/lm.html" target="_blank" rel="noopener">&lt;code>lm()&lt;/code>&lt;/a>. For example, below we fit a simple linear regression model with a single predictor, using base R first and then using tidymodels.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># base R&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/lm.html'>lm&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hwy&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>cty&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mpg&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/summary.html'>summary&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Call:&lt;/span>
&lt;span class='c'>#&amp;gt; lm(formula = hwy ~ cty, data = mpg)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Residuals:&lt;/span>
&lt;span class='c'>#&amp;gt; Min 1Q Median 3Q Max &lt;/span>
&lt;span class='c'>#&amp;gt; -5.3408 -1.2790 0.0214 1.0338 4.0461 &lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Coefficients:&lt;/span>
&lt;span class='c'>#&amp;gt; Estimate Std. Error t value Pr(&amp;gt;|t|) &lt;/span>
&lt;span class='c'>#&amp;gt; (Intercept) 0.89204 0.46895 1.902 0.0584 . &lt;/span>
&lt;span class='c'>#&amp;gt; cty 1.33746 0.02697 49.585 &amp;lt;2e-16 ***&lt;/span>
&lt;span class='c'>#&amp;gt; ---&lt;/span>
&lt;span class='c'>#&amp;gt; Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Residual standard error: 1.752 on 232 degrees of freedom&lt;/span>
&lt;span class='c'>#&amp;gt; Multiple R-squared: 0.9138, Adjusted R-squared: 0.9134 &lt;/span>
&lt;span class='c'>#&amp;gt; F-statistic: 2459 on 1 and 232 DF, p-value: &amp;lt; 2.2e-16&lt;/span>
&lt;span class='c'># tidymodels&lt;/span>
&lt;span class='nf'>linear_reg&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"lm"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>fit&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hwy&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>cty&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mpg&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>tidy&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; term estimate std.error statistic p.value&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> (Intercept) 0.892 0.469 1.90 5.84&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>- 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> cty 1.34 0.027&lt;span style='text-decoration: underline;'>0&lt;/span> 49.6 1.87&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>-125&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The tidymodels approach takes a few more steps, and for a simple model like this, the only advantage is likely in the summarisation step. With &lt;code>tidy()&lt;/code>, we get the model output as a tibble, which is more straightforward to interact with programmatically and which, by default, omits the significant stars.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/lm.html'>lm&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>hwy&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>cty&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nv'>mpg&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>tidy&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 2 × 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; term estimate std.error statistic p.value&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> (Intercept) 0.892 0.469 1.90 5.84&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>- 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> cty 1.34 0.027&lt;span style='text-decoration: underline;'>0&lt;/span> 49.6 1.87&lt;span style='color: #555555;'>e&lt;/span>&lt;span style='color: #BB0000;'>-125&lt;/span>&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The pedagogical advantages for the consistent API of the framework become more clear when we move on to fitting different models. Below you can see examples of how we can fit models using various engines or using the same engine, but different modes.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># different engines&lt;/span>
&lt;span class='nf'>linear_reg&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"lm"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>logistic_reg&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"glm"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"classification"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>rand_forest&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"ranger"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>decision_tree&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"rpart"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># same engine, different modes&lt;/span>
&lt;span class='nf'>svm_linear&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"LiblineaR"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"regression"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nf'>svm_linear&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_engine&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"LiblineaR"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>set_mode&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"classification"&lt;/span>&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Fitting a bunch of models to the same data and picking the one you like the results of the best is not a good approach, so one would rarely see code as it appears in the chunk above in a single R script. Students will encounter these pipelines over the course of a semester, each in a slightly different data context. Because the syntax is uniform, it&amp;rsquo;s easier to focus on the details of the model, not how to fit the darn thing in R.&lt;/p>
&lt;p>Another pedagogical advantage, particularly for teaching tidymodels after tidyverse, is the syntax to build recipes for feature engineering resembles dplyr pipelines for data wrangling. In the following example we first provide a dplyr pipeline for data wrangling, and then show how a similar set of transformations can be achieved using &lt;strong>recipes&lt;/strong> for feature engineering. The example uses the &lt;code>email&lt;/code> dataset from the &lt;strong>openintro&lt;/strong> package, which has variables like when the email was sent and received, how many people were cc&amp;rsquo;ed, number of attachments, etc.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># dplyr for data wrangling&lt;/span>
&lt;span class='nf'>openintro&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nv'>&lt;a href='https://openintrostat.github.io/openintro/reference/email.html'>email&lt;/a>&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='nv'>from&lt;/span>, &lt;span class='o'>-&lt;/span>&lt;span class='nv'>sent_email&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
day_of_week &lt;span class='o'>=&lt;/span> &lt;span class='nf'>lubridate&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://lubridate.tidyverse.org/reference/day.html'>wday&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='c'># new variable: day of week&lt;/span>
month &lt;span class='o'>=&lt;/span> &lt;span class='nf'>lubridate&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://lubridate.tidyverse.org/reference/month.html'>month&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='c'># new variable: month&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/select.html'>select&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>-&lt;/span>&lt;span class='nv'>time&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
cc &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cc&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='c'># discretize cc&lt;/span>
attach &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>attach&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='c'># discretize attach&lt;/span>
dollar &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>dollar&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='c'># discretize dollar&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/mutate.html'>mutate&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
inherit &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>inherit&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>5&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>20&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>, &lt;span class='c'># discretize inherit&lt;/span>
password &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/cut.html'>cut&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>password&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>5&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>20&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='c'># discretize password&lt;/span>
&lt;span class='o'>)&lt;/span>
&lt;span class='c'># recipes for data preprocessing and feature engineering&lt;/span>
&lt;span class='c'># same steps, similar syntax, &lt;/span>
&lt;span class='c'># less bookkeeping for the analyst in modeling setting&lt;/span>
&lt;span class='nf'>recipe&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>spam&lt;/span> &lt;span class='o'>~&lt;/span> &lt;span class='nv'>.&lt;/span>, data &lt;span class='o'>=&lt;/span> &lt;span class='nf'>openintro&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nv'>&lt;a href='https://openintrostat.github.io/openintro/reference/email.html'>email&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>step_rm&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>from&lt;/span>, &lt;span class='nv'>sent_email&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>step_date&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>time&lt;/span>,
features &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"dow"&lt;/span>, &lt;span class='s'>"month"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>step_rm&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>time&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>step_cut&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>cc&lt;/span>,
&lt;span class='nv'>attach&lt;/span>,
&lt;span class='nv'>dollar&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>step_cut&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='nv'>inherit&lt;/span>,
&lt;span class='nv'>password&lt;/span>, breaks &lt;span class='o'>=&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>0&lt;/span>, &lt;span class='m'>1&lt;/span>, &lt;span class='m'>5&lt;/span>, &lt;span class='m'>10&lt;/span>, &lt;span class='m'>20&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You might be thinking &amp;ldquo;Why do I need the &lt;strong>recipes&lt;/strong> &lt;code>step_*()&lt;/code> functions when I can express the same steps with dplyr?&amp;rdquo; This brings us back to the &amp;ldquo;features that avoid common machine learning pitfalls&amp;rdquo;. The advantage of this approach is that once recipe steps are developed with the training data, they can be automatically applied to the testing data for final model assessment.&lt;/p>
&lt;p>So far the examples I&amp;rsquo;ve provided have been in a modeling context, but many statistics and data science courses also teach statistical inference, particularly parameter estimation using confidence intervals and hypothesis testing. The
&lt;a href="http://infer.tidymodels.org/" target="_blank" rel="noopener">&lt;strong>infer&lt;/strong>&lt;/a> package, which is part of the tidymodels ecosystem, is designed to perform statistical inference using an expressive statistical grammar that cohered with the tidyverse design framework. With recent updates in infer, it is now possible to carry out both theoretical (Central Limit Theorem based) and simulation-based statistical inference using a similar workflow. For example, below we show first the pipeline for building a bootstrap distribution for a mean using a simulation-based approach (with &lt;code>generate()&lt;/code> and then &lt;code>calculate()&lt;/code> and then we show we define the sampling distribution (with &lt;code>assume()&lt;/code>) if we were to build the confidence interval using a theoretical approach.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='c'># simulation-based&lt;/span>
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/Random.html'>set.seed&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='m'>25&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>specify&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>generate&lt;/span>&lt;span class='o'>(&lt;/span>reps &lt;span class='o'>=&lt;/span> &lt;span class='m'>1000&lt;/span>, type &lt;span class='o'>=&lt;/span> &lt;span class='s'>"bootstrap"&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>calculate&lt;/span>&lt;span class='o'>(&lt;/span>stat &lt;span class='o'>=&lt;/span> &lt;span class='s'>"mean"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; Response: hours (numeric)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 1,000 × 2&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; replicate stat&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 1 41.8&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 2 41.7&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 3 41.6&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 4 39.3&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 5 41.1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 6 41.3&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 7 41.0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 8 43.2&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 9 42.1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 10 40.4&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># … with 990 more rows&lt;/span>&lt;/span>
&lt;span class='c'># theoretical&lt;/span>
&lt;span class='nv'>gss&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>specify&lt;/span>&lt;span class='o'>(&lt;/span>response &lt;span class='o'>=&lt;/span> &lt;span class='nv'>hours&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>assume&lt;/span>&lt;span class='o'>(&lt;/span>distribution &lt;span class='o'>=&lt;/span> &lt;span class='s'>"t"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; A T distribution with 499 degrees of freedom.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Other recent updates to infer include support for doing inference for multiple regression as well as behavioral consistency of &lt;code>calculate()&lt;/code>.&lt;/p>
&lt;p>If you&amp;rsquo;re new to the tidymodels ecosystem, I recommend the following resources for getting started&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Expanded documentation:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidymodels.org/start/" target="_blank" rel="noopener">Get started with tidymodels&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidymodels.org/learn/" target="_blank" rel="noopener">Learn more and go further&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Book:
&lt;a href="https://www.tmwr.org/" target="_blank" rel="noopener">Tidy Modeling with R&lt;/a> by Max Kuhn and Julia Silge&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Blog posts:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="Choose%20your%20own%20tidymodels%20adventure">Choose your own tidymodels adventure&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2021/08/infer-1-0-0/" target="_blank" rel="noopener">infer 1.0.0&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>If you&amp;rsquo;re new to teaching tidymodels, the following resources can be helpful:&lt;/p>
&lt;ul>
&lt;li>USCOTS 2021 Breakout session:
&lt;a href="https://bit.ly/tidymodels-uscots21/" target="_blank" rel="noopener">Tidy up your models&lt;/a> (developed and presented with
&lt;a href="https://www.ramapo.edu/tas/faculty/debbie-yuster/" target="_blank" rel="noopener">Debbie Yuster&lt;/a>)&lt;/li>
&lt;li>
&lt;a href="https://datasciencebox.org/making-rigorous-conclusions.html" target="_blank" rel="noopener">Data Science in a Box&lt;/a>: Slides, application exercises, computing labs, and homework assignments on modelling and inference with tidymodels.&lt;/li>
&lt;/ul>
&lt;h2 id="reading-data-with-readr">Reading data with readr
&lt;a href="#reading-data-with-readr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A new version of
&lt;a href="https://www.tidyverse.org/blog/2021/07/readr-2-0-0/#reading-multiple-files-at-once" target="_blank" rel="noopener">&lt;strong>readr&lt;/strong>&lt;/a> was recently released, with lots of updates outlined in
&lt;a href="https://www.tidyverse.org/blog/2021/07/readr-2-0-0/" target="_blank" rel="noopener">this blog post&lt;/a>. The update most relevant to teaching is the new functionality for reading in multiple files at once, or more specifically, reading sets of files with the same columns into one output table in a single command.&lt;/p>
&lt;p>Suppose in your &lt;code>data/&lt;/code> folder you have two files, one for sales in August and the other for sales in September. Each of the files contain two variables: &lt;code>brand&lt;/code> for brand ID, and &lt;code>n&lt;/code> for number of items sold with that brand ID.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>files&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>fs&lt;/span>&lt;span class='nf'>::&lt;/span>&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/dir_ls.html'>dir_ls&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='s'>"data/"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>files&lt;/span>
&lt;span class='c'>#&amp;gt; data/sales-aug.csv&lt;/span>
&lt;span class='c'>#&amp;gt; data/sales-sep.csv&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>You can now pass this vector with the paths to multiple files directly to the &lt;code>read_*&lt;/code> functions in readr and add an identifying column for which file the records come from.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://readr.tidyverse.org/reference/read_delim.html'>read_csv&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>files&lt;/span>, id &lt;span class='o'>=&lt;/span> &lt;span class='s'>"path"&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; # A tibble: 7 × 3&lt;/span>
&lt;span class='c'>#&amp;gt; path brand n&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; 1 data/sales-aug… 1234 8&lt;/span>
&lt;span class='c'>#&amp;gt; 2 data/sales-aug… 8721 2&lt;/span>
&lt;span class='c'>#&amp;gt; 3 data/sales-aug… 1822 3&lt;/span>
&lt;span class='c'>#&amp;gt; 4 data/sales-sep… 3333 1&lt;/span>
&lt;span class='c'>#&amp;gt; 5 data/sales-sep… 2156 3&lt;/span>
&lt;span class='c'>#&amp;gt; 6 data/sales-sep… 3987 6&lt;/span>
&lt;span class='c'>#&amp;gt; 7 data/sales-sep… 3216 5&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Previously this not-so-advanced task required the use of mapping functions from purrr or the
&lt;a href="https://vroom.r-lib.org/" target="_blank" rel="noopener">vroom&lt;/a> package, but now tidyverse users are able to accomplish this task with just readr!&lt;/p>
&lt;h2 id="web-scraping-with-rvest">Web scraping with rvest
&lt;a href="#web-scraping-with-rvest">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you&amp;rsquo;ve been teaching web scraping with
&lt;a href="https://rvest.tidyverse.org/" target="_blank" rel="noopener">&lt;strong>rvest&lt;/strong>&lt;/a>, I recommend updating your teaching materials as you might be able to further simplify and streamline some of the code you present to students. And if you haven&amp;rsquo;t been teaching web scraping, I recommend reading our paper titled
&lt;a href="https://www.tandfonline.com/doi/full/10.1080/10691898.2020.1787116" target="_blank" rel="noopener">Web Scraping in the Statistics and Data Science Curriculum: Challenges and Opportunities&lt;/a> where we discuss how web scraping can be implemented in a pedagogically sound and technically executable way at various levels of statistics and data science curricula.&lt;/p>
&lt;p>Most recent updates to rvest include the addition of a new function,
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text2()&lt;/code>&lt;/a>, which offers better handling for line breaks. Suppose you have the following paragraph of text across two lines on a webpage.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://rvest.tidyverse.org/'>rvest&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Attaching package: 'rvest'&lt;/span>
&lt;span class='c'>#&amp;gt; The following object is masked from 'package:readr':&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; guess_encoding&lt;/span>
&lt;span class='nv'>html&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/minimal_html.html'>minimal_html&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>
&lt;span class='s'>"&amp;lt;p&amp;gt;
This is the first sentence in the paragraph.
This is the second sentence that should be on the same line as the first sentence.&amp;lt;br&amp;gt;This third sentence should start on a new line.
&amp;lt;/p&amp;gt;"&lt;/span>
&lt;span class='o'>)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With the original
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text()&lt;/code>&lt;/a> function extracting the text out of this paragraph results in the following:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>html&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/html_text.html'>html_text&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/writeLines.html'>writeLines&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; This is the first sentence in the paragraph.&lt;/span>
&lt;span class='c'>#&amp;gt; This is the second sentence that should be on the same line as the first sentence.This third sentence should start on a new line.&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Note that the line breaks in the output do not respect the line break defined with &lt;code>&amp;lt;br&amp;gt;&lt;/code>.&lt;/p>
&lt;p>With the new
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text2()&lt;/code>&lt;/a>, &lt;code>&amp;lt;br&amp;gt;&lt;/code> is handled appropriately and the line breaks follow the expected pattern.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>html&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://rvest.tidyverse.org/reference/html_text.html'>html_text2&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/writeLines.html'>writeLines&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; This is the first sentence in the paragraph. This is the second sentence that should be on the same line as the first sentence.&lt;/span>
&lt;span class='c'>#&amp;gt; This third sentence should start on a new line.&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>The output of
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text2()&lt;/code>&lt;/a> is generally what you want, but note that it is slower than
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text()&lt;/code>&lt;/a>. This might not make a big difference for teaching web scraping as a new topic, but it is worth keeping in mind when the task involves scraping a large amount of data. Your choice might also depend on what you&amp;rsquo;re going to do next with the data. For example, if the next step involves tokenizing the scraped text with
&lt;a href="https://rdrr.io/pkg/tidytext/man/unnest_tokens.html" target="_blank" rel="noopener">&lt;code>tidytext::unnest_tokens()&lt;/code>&lt;/a> you might not care how the line breaks were handled in the first step.&lt;/p>
&lt;p>Since this change involves the addition of a new function without changing behaviour in any existing functions, incorporating it into your teaching would require testing
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text2()&lt;/code>&lt;/a> in places where you previously used
&lt;a href="https://rvest.tidyverse.org/reference/html_text.html" target="_blank" rel="noopener">&lt;code>html_text()&lt;/code>&lt;/a> to see if the result is preferable.&lt;/p>
&lt;p>Another important update is that
&lt;a href="https://rvest.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>html_node()&lt;/code>&lt;/a> and
&lt;a href="https://rvest.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>html_nodes()&lt;/code>&lt;/a> (functions that undoubtedly show up in any lesson on web scraping with rvest) have been superseded in favor of
&lt;a href="https://rvest.tidyverse.org/reference/html_element.html" target="_blank" rel="noopener">&lt;code>html_element()&lt;/code>&lt;/a> and
&lt;a href="https://rvest.tidyverse.org/reference/html_element.html" target="_blank" rel="noopener">&lt;code>html_elements()&lt;/code>&lt;/a>. The motivation behind this update is to better match what learners see when they&amp;rsquo;re first learning about HTML. When updating teaching materials you should be able to use
&lt;a href="https://rvest.tidyverse.org/reference/html_element.html" target="_blank" rel="noopener">&lt;code>html_element()&lt;/code>&lt;/a> and
&lt;a href="https://rvest.tidyverse.org/reference/html_element.html" target="_blank" rel="noopener">&lt;code>html_elements()&lt;/code>&lt;/a> as drop in replacements for
&lt;a href="https://rvest.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>html_node()&lt;/code>&lt;/a> and
&lt;a href="https://rvest.tidyverse.org/reference/rename.html" target="_blank" rel="noopener">&lt;code>html_nodes()&lt;/code>&lt;/a>, respectively.&lt;/p>
&lt;p>Finally, if
&lt;a href="https://rvest.tidyverse.org/reference/html_table.html" target="_blank" rel="noopener">&lt;code>html_table()&lt;/code>&lt;/a> didn&amp;rsquo;t work for you in the past, it&amp;rsquo;s worth trying again since it&amp;rsquo;s been rewritten from scratch to more closely match how browsers display tables with merged cells.&lt;/p>
&lt;p>For more on updates in rvest, read the
&lt;a href="https://www.tidyverse.org/blog/2021/03/rvest-1-0-0/" target="_blank" rel="noopener">rvest 1.0.0. blog post&lt;/a> and review the updated
&lt;a href="https://rvest.tidyverse.org/articles/rvest.html" target="_blank" rel="noopener">rvest vignette&lt;/a>.&lt;/p>
&lt;h2 id="sql-and-datatable-translations-with-dbplyr-and-dtplyr">SQL and data.table translations with dbplyr and dtplyr
&lt;a href="#sql-and-datatable-translations-with-dbplyr-and-dtplyr">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Two packages that provide interfaces for translations between &lt;strong>dplyr&lt;/strong> and SQL and
&lt;a href="https://rdatatable.gitlab.io/data.table/" target="_blank" rel="noopener">&lt;strong>data.table&lt;/strong>&lt;/a> code are &lt;strong>dbplyr&lt;/strong> and &lt;strong>dtplyr&lt;/strong>. If you&amp;rsquo;re teaching either of these tools alongside the tidyverse, particularly to students who have learned the tidyverse first, the
&lt;a href="https://dplyr.tidyverse.org/reference/explain.html" target="_blank" rel="noopener">&lt;code>show_query()&lt;/code>&lt;/a> function can be very helpful for translating tidyverse code into syntaxes used by these tools.&lt;/p>
&lt;p>dtplyr translates dplyr pipelines into equivalent data.table code. To start, we first need to create a
&lt;a href="https://rdrr.io/pkg/dtplyr/man/lazy_dt.html" target="_blank" rel="noopener">&lt;code>lazy_dt()&lt;/code>&lt;/a> object which will record the dplyr actions. Then, we write a dplyr pipeline as usual and save the result. The result can be viewed by piping it into
&lt;a href="https://tibble.tidyverse.org/reference/as_tibble.html" target="_blank" rel="noopener">&lt;code>as_tibble()&lt;/code>&lt;/a> and the data.table code can be viewed with
&lt;a href="https://dplyr.tidyverse.org/reference/explain.html" target="_blank" rel="noopener">&lt;code>show_query()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://github.com/tidyverse/dtplyr'>dtplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>mtcars_dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/dtplyr/man/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>mtcars&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>cyl_summary&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>mtcars_dt&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/group_by.html'>group_by&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>cyl&lt;/span>&lt;span class='o'>)&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/summarise.html'>summarise&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/across.html'>across&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>disp&lt;/span>&lt;span class='o'>:&lt;/span>&lt;span class='nv'>wt&lt;/span>, &lt;span class='nv'>mean&lt;/span>&lt;span class='o'>)&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># result&lt;/span>
&lt;span class='nv'>cyl_summary&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/as_tibble.html'>as_tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 3 × 5&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; cyl disp hp drat wt&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>1&lt;/span> 4 105. 82.6 4.07 2.29&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>2&lt;/span> 6 183. 122. 3.59 3.12&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>3&lt;/span> 8 353. 209. 3.23 4.00&lt;/span>
&lt;span class='c'># query&lt;/span>
&lt;span class='nv'>cyl_summary&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; `_DT1`[, .(disp = mean(disp), hp = mean(hp), drat = mean(drat), &lt;/span>
&lt;span class='c'>#&amp;gt; wt = mean(wt)), keyby = .(cyl)]&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>With recent updates, dtplyr can also translate some tidyr functions to data.table, e.g.,
&lt;a href="https://tidyr.tidyverse.org/reference/pivot_wider.html" target="_blank" rel="noopener">&lt;code>pivot_wider()&lt;/code>&lt;/a>. In the following example the process is the same: start with
&lt;a href="https://rdrr.io/pkg/dtplyr/man/lazy_dt.html" target="_blank" rel="noopener">&lt;code>lazy_dt()&lt;/code>&lt;/a>, write a data transformation step using tidyverse code, view the result with
&lt;a href="https://tibble.tidyverse.org/reference/as_tibble.html" target="_blank" rel="noopener">&lt;code>as_tibble()&lt;/code>&lt;/a>, and view the query with
&lt;a href="https://dplyr.tidyverse.org/reference/explain.html" target="_blank" rel="noopener">&lt;code>show_query()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nv'>fish_encounters_dt&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/dtplyr/man/lazy_dt.html'>lazy_dt&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>fish_encounters&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>fish_encounters_dt&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>station&lt;/span>, values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>seen&lt;/span>, values_fill &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># result&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/as_tibble.html'>as_tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 19 × 12&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; fish Release I80_1 Lisbon Rstr Base_TD BCE BCW BCE2 BCW2 MAE MAW&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;fct&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 4842 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 4843 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 4844 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 4845 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 4847 1 1 1 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 4848 1 1 1 1 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 4849 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 4850 1 1 0 1 1 1 1 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 4851 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 4854 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 4855 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 4857 1 1 1 1 1 1 1 1 1 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>13&lt;/span> 4858 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>14&lt;/span> 4859 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>15&lt;/span> 4861 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>16&lt;/span> 4862 1 1 1 1 1 1 1 1 1 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>17&lt;/span> 4863 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>18&lt;/span> 4864 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>19&lt;/span> 4865 1 1 1 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'># query&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; dcast(`_DT2`, formula = fish ~ station, value.var = "seen", fill = 0)&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Similarly, dbplyr translates dplyr pipelines into equivalent SQL code. The only difference in the following example translating tidyr code to SQL code is the function used in the first step,
&lt;a href="https://dbplyr.tidyverse.org/reference/memdb_frame.html" target="_blank" rel="noopener">&lt;code>memdb_frame()&lt;/code>&lt;/a>, which creates a database table.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='kr'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>&lt;a href='https://dbplyr.tidyverse.org/'>dbplyr&lt;/a>&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; Attaching package: 'dbplyr'&lt;/span>
&lt;span class='c'>#&amp;gt; The following objects are masked from 'package:dplyr':&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;/span>
&lt;span class='c'>#&amp;gt; ident, sql&lt;/span>
&lt;span class='nv'>fish_encounters_db&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://dbplyr.tidyverse.org/reference/memdb_frame.html'>memdb_frame&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='nv'>fish_encounters&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nv'>fish_encounters_db&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span>
&lt;span class='nf'>&lt;a href='https://tidyr.tidyverse.org/reference/pivot_wider.html'>pivot_wider&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>names_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>station&lt;/span>, values_from &lt;span class='o'>=&lt;/span> &lt;span class='nv'>seen&lt;/span>, values_fill &lt;span class='o'>=&lt;/span> &lt;span class='m'>0&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'># result&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://tibble.tidyverse.org/reference/as_tibble.html'>as_tibble&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'># A tibble: 19 × 12&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; fish Release I80_1 Lisbon Rstr Base_TD BCE BCW BCE2 BCW2 MAE MAW&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555; font-style: italic;'>&amp;lt;chr&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;int&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span> &lt;span style='color: #555555; font-style: italic;'>&amp;lt;dbl&amp;gt;&lt;/span>&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 1&lt;/span> 4842 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 2&lt;/span> 4843 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 3&lt;/span> 4844 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 4&lt;/span> 4845 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 5&lt;/span> 4847 1 1 1 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 6&lt;/span> 4848 1 1 1 1 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 7&lt;/span> 4849 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 8&lt;/span> 4850 1 1 0 1 1 1 1 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'> 9&lt;/span> 4851 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>10&lt;/span> 4854 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>11&lt;/span> 4855 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>12&lt;/span> 4857 1 1 1 1 1 1 1 1 1 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>13&lt;/span> 4858 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>14&lt;/span> 4859 1 1 1 1 1 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>15&lt;/span> 4861 1 1 1 1 1 1 1 1 1 1 1&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>16&lt;/span> 4862 1 1 1 1 1 1 1 1 1 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>17&lt;/span> 4863 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>18&lt;/span> 4864 1 1 0 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'>#&amp;gt; &lt;span style='color: #555555;'>19&lt;/span> 4865 1 1 1 0 0 0 0 0 0 0 0&lt;/span>
&lt;span class='c'># query&lt;/span>
&lt;span class='nv'>fish_encounters_wider&lt;/span> &lt;span class='o'>&lt;a href='https://magrittr.tidyverse.org/reference/pipe.html'>%&amp;gt;%&lt;/a>&lt;/span> &lt;span class='nf'>&lt;a href='https://dplyr.tidyverse.org/reference/explain.html'>show_query&lt;/a>&lt;/span>&lt;span class='o'>(&lt;/span>&lt;span class='o'>)&lt;/span>
&lt;span class='c'>#&amp;gt; &amp;lt;SQL&amp;gt;&lt;/span>
&lt;span class='c'>#&amp;gt; SELECT `fish`, MAX(CASE WHEN (`station` = 'Release') THEN (`seen`) WHEN NOT(`station` = 'Release') THEN (0.0) END) AS `Release`, MAX(CASE WHEN (`station` = 'I80_1') THEN (`seen`) WHEN NOT(`station` = 'I80_1') THEN (0.0) END) AS `I80_1`, MAX(CASE WHEN (`station` = 'Lisbon') THEN (`seen`) WHEN NOT(`station` = 'Lisbon') THEN (0.0) END) AS `Lisbon`, MAX(CASE WHEN (`station` = 'Rstr') THEN (`seen`) WHEN NOT(`station` = 'Rstr') THEN (0.0) END) AS `Rstr`, MAX(CASE WHEN (`station` = 'Base_TD') THEN (`seen`) WHEN NOT(`station` = 'Base_TD') THEN (0.0) END) AS `Base_TD`, MAX(CASE WHEN (`station` = 'BCE') THEN (`seen`) WHEN NOT(`station` = 'BCE') THEN (0.0) END) AS `BCE`, MAX(CASE WHEN (`station` = 'BCW') THEN (`seen`) WHEN NOT(`station` = 'BCW') THEN (0.0) END) AS `BCW`, MAX(CASE WHEN (`station` = 'BCE2') THEN (`seen`) WHEN NOT(`station` = 'BCE2') THEN (0.0) END) AS `BCE2`, MAX(CASE WHEN (`station` = 'BCW2') THEN (`seen`) WHEN NOT(`station` = 'BCW2') THEN (0.0) END) AS `BCW2`, MAX(CASE WHEN (`station` = 'MAE') THEN (`seen`) WHEN NOT(`station` = 'MAE') THEN (0.0) END) AS `MAE`, MAX(CASE WHEN (`station` = 'MAW') THEN (`seen`) WHEN NOT(`station` = 'MAW') THEN (0.0) END) AS `MAW`&lt;/span>
&lt;span class='c'>#&amp;gt; FROM `dbplyr_001`&lt;/span>
&lt;span class='c'>#&amp;gt; GROUP BY `fish`&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>I recommend the following resources to get started with these packages:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.tidyverse.org/blog/2021/02/dplyr-backends/" target="_blank" rel="noopener">Blog post on dplyr backends&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dtplyr.tidyverse.org/articles/translation.html" target="_blank" rel="noopener">dtplyr translation vignette&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://dbplyr.tidyverse.org/articles/dbplyr.html" target="_blank" rel="noopener">Introduction to dbplyr vignette&lt;/a>&lt;/li>
&lt;/ul>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>I think this talk would also be a good resource for software development courses on the topic of maintaining open source software and communicating updates and changes to users. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>Turns out this was always possible using the &lt;code>outfile&lt;/code> argument, but now it&amp;rsquo;s more intuitive! &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Choose your own tidymodels adventure</title><link>https://www.tidyverse.org/blog/2021/05/choose-tidymodels-adventure/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2021/05/choose-tidymodels-adventure/</guid><description>&lt;p>The
&lt;a href="https://www.tidymodels.org/" target="_blank" rel="noopener">tidymodels&lt;/a> framework is a collection of R packages for modeling and machine learning using tidyverse principles. You can install the tidymodels suite of packages from CRAN with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">install.packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tidymodels&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The packages in tidymodels are designed to work together in a unified ecosystem, but they are flexible and modular; you can use tidymodels packages for certain parts of a modeling analysis without committing to the entire ecosystem, when preferred. We purposefully write code in these small, modular packages both to make them easier to maintain and easier to use in production systems. This does mean that it can be challenging for a newcomer to know where their specific problem fits in this ecosystem.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; ── Attaching packages ────────────────────────────────── tidymodels 0.1.3 ──&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ broom 0.7.6 ✓ recipes 0.1.16&lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dials 0.0.9 ✓ rsample 0.1.0 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ dplyr 1.0.6 ✓ tibble 3.1.2 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ ggplot2 3.3.3 ✓ tidyr 1.1.3 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ infer 0.5.4 ✓ tune 0.1.5 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ modeldata 0.1.0 ✓ workflows 0.2.2 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ parsnip 0.1.5 ✓ workflowsets 0.0.2 &lt;/span>
&lt;span class="c1">#&amp;gt; ✓ purrr 0.3.4 ✓ yardstick 0.0.8&lt;/span>
&lt;span class="c1">#&amp;gt; ── Conflicts ───────────────────────────────────── tidymodels_conflicts() ──&lt;/span>
&lt;span class="c1">#&amp;gt; x purrr::discard() masks scales::discard()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::filter() masks stats::filter()&lt;/span>
&lt;span class="c1">#&amp;gt; x dplyr::lag() masks stats::lag()&lt;/span>
&lt;span class="c1">#&amp;gt; x recipes::step() masks stats::step()&lt;/span>
&lt;span class="c1">#&amp;gt; • Use tidymodels_prefer() to resolve common conflicts.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In general, we recommend a couple of resources for folks learning about tidymodels: the
&lt;a href="https://www.tidymodels.org/start/" target="_blank" rel="noopener">&lt;strong>Get Started&lt;/strong> section of tidymodels.org&lt;/a> to get going quickly and our book
&lt;a href="https://www.tmwr.org/" target="_blank" rel="noopener">&lt;em>Tidy Modeling with R&lt;/em>&lt;/a> to dig deeper. This post takes on a more specific task for a newcomer to tidymodels. We consider several categories of real-world modeling analyses and recommend ways to
&lt;a href="https://en.wikipedia.org/wiki/Choose_Your_Own_Adventure" target="_blank" rel="noopener">choose your own adventure&lt;/a> in the tidymodels ecosystem. In tidymodels, you can train:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>a single model,&lt;/p>
&lt;/li>
&lt;li>
&lt;p>a workflow, or&lt;/p>
&lt;/li>
&lt;li>
&lt;p>a set of workflows.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Each of these choices is best in difference circumstances, and we&amp;rsquo;ll consider each in the following sections.&lt;/p>
&lt;h2 id="starting-with-the-basics-a-parsnip-model">Starting with the basics: a &lt;strong>parsnip&lt;/strong> model
&lt;a href="#starting-with-the-basics-a-parsnip-model">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>A fully featured ecosystem for modeling and machine learning requires interfaces to, well, models, and the tidymodels package that provides those functions and interfaces is
&lt;a href="https://parsnip.tidymodels.org/" target="_blank" rel="noopener">parsnip&lt;/a>. If your modeling adventure involves smaller data and straightforward data preprocessing (like that provided by
&lt;a href="https://www.tmwr.org/base-r.html#formula" target="_blank" rel="noopener">R&amp;rsquo;s model formula&lt;/a>), you may be well-served by focusing on parsnip. The parsnip package is a good choice for fitting a straightforward model to a smaller data set like this one:&lt;/p>
&lt;p>&lt;img src="https://juliasilge.com/blog/student-debt/index_files/figure-html/unnamed-chunk-3-1.png" title="Plot showing student loan debt by race across time" alt="Plot showing student loan debt by race across time" width="70%" />&lt;/p>
&lt;p>To learn more about how to fit and evaluate parsnip models, check out
&lt;a href="https://www.tidymodels.org/start/models/" target="_blank" rel="noopener">this article at tidymodel.org&amp;rsquo;s &lt;strong>Get Started&lt;/strong> section&lt;/a> and
&lt;a href="https://juliasilge.com/blog/student-debt/" target="_blank" rel="noopener">this blog post (complete with screencast) by me&lt;/a>. You can use
&lt;a href="https://www.tidyverse.org/blog/2021/03/tidymodels-2021-q1/#choose-parsnip-models-with-an-rstudio-addin" target="_blank" rel="noopener">parsnip&amp;rsquo;s RStudio addin&lt;/a> to generate code for one or more models!&lt;/p>
&lt;p>We don&amp;rsquo;t believe most people using tidymodels fall into this first category, but we think that the tools we&amp;rsquo;ve built for these kinds of straightforward analyses are well-designed and will set you up for statistical and practical success in the short and long term. Instead of fitting a model with, say, &lt;code>lm()&lt;/code>, in parsnip we specify a model with code such as:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">linear_reg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span> &lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;lm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; Linear Regression Model Specification (regression)&lt;/span>
&lt;span class="c1">#&amp;gt; &lt;/span>
&lt;span class="c1">#&amp;gt; Computational engine: lm&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We then &lt;code>fit()&lt;/code> that model to data. More code is required to fit a simple model than you may be used to, but learning and using parsnip opens up the door for all the other things you can do with the same pipeline.&lt;/p>
&lt;h2 id="holistic-model-workflows">Holistic model &lt;strong>workflows&lt;/strong>
&lt;a href="#holistic-model-workflows">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>When you are setting off on a modeling adventure, it might be worth asking what we even mean by the word &amp;ldquo;model&amp;rdquo;; it is a word that gets overloaded really quickly! In the tidymodels ecosystem, we carefully incorporate &lt;em>both&lt;/em> feature engineering (also called data preprocessing) that must be learned from training data &lt;em>and&lt;/em> a model fit into a modeling workflow that is estimated together. For example, if you trained a least squares regression model with features learned from principal component analysis, the PCA preprocessing step should be considered part of the model workflow:&lt;/p>
&lt;p>&lt;img src="https://www.tmwr.org/premade/proper-workflow.svg" title="Diagram showing that PCA preprocessing is part of the modeling process, together with least squares estimation" alt="Diagram showing that PCA preprocessing is part of the modeling process, together with least squares estimation" />&lt;/p>
&lt;p>In the tidymodels ecosystem, we use the
&lt;a href="https://workflows.tidymodels.org/" target="_blank" rel="noopener">workflows&lt;/a> package to bundle together model components and promote more fluent modeling processes. You can fit, tune, and resample workflows, and using workflows has benefits from making it easier to keep track of model components in your code to avoiding data leakage in feature engineering.&lt;/p>
&lt;p>We generally expect that most people using tidymodels fall into this middle category, and most of our ecosystem is designed to optimize for these users&amp;rsquo; experience. Choose a &lt;code>workflow()&lt;/code> if you want to try several model and/or feature engineering options with your data, if you prefer a simpler and more unified interface for fitting and tuning, or if you like composable and pipeable code for analyses. The
&lt;a href="https://usemodels.tidymodels.org/" target="_blank" rel="noopener">usemodels&lt;/a> package can even automate the creation of a workflow, using &lt;em>your&lt;/em> data to determine a good recipe along with the model of your choice.&lt;/p>
&lt;p>To learn more about using workflows, see them
&lt;a href="https://www.tidymodels.org/start/case-study/" target="_blank" rel="noopener">used in action in this &lt;strong>Get Started&lt;/strong> article&lt;/a>. Also, I have quite a number of blog posts and screencasts that walk through how to use workflows, such as
&lt;a href="https://juliasilge.com/blog/palmer-penguins/" target="_blank" rel="noopener">this one&lt;/a> that compares two approaches for the same modeling problem and
&lt;a href="https://juliasilge.com/blog/water-sources/" target="_blank" rel="noopener">this one&lt;/a> that trains and evaluates a single workflow (one preprocessor + model).&lt;/p>
&lt;h2 id="screening-many-models-workflowsets">Screening many models: &lt;strong>workflowsets&lt;/strong>
&lt;a href="#screening-many-models-workflowsets">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Sometimes a modeling practitioner is in a situation where they don&amp;rsquo;t want to try out just a few approaches on a given data set, but &lt;em>many&lt;/em>: not just two or three or four, but A LOT. This is most common when a practitioner starts a new modeling project with a data set that is not well understood and there is little (or maybe no) &lt;em>a priori&lt;/em> knowledge about what kind of approach will work well.&lt;/p>
&lt;p>For this kind of tidymodels adventure, we encourage users to try the
&lt;a href="https://workflowsets.tidymodels.org/" target="_blank" rel="noopener">workflowsets&lt;/a> package, which supports the creation, fitting, and comparison of sets of multiple workflows. Combinations of preprocessors and models can be created, and the resulting workflow set can be tuned or resampled, then evaluated (perhaps using Bayesian analysis):&lt;/p>
&lt;p>&lt;img src="https://www.tidyverse.org/blog/2021/03/workflowsets-0-0-1/figure/plot-bayes-1.svg" title="Plot showing RMSE by workflow rank for many models" alt="Plot showing RMSE by workflow rank for many models" />&lt;/p>
&lt;p>We don&amp;rsquo;t expect that most people using tidymodels will use workflowsets, as it is a specialized tool only useful in some contexts. If you are familiar with AutoML tools, you may notice some similarities between them and what this package does; it has many of the same pros and cons. To learn more about workflowsets (including why our group was hesitant to support and build this functionality!) watch
&lt;a href="https://youtu.be/2OfTEakSFXQ" target="_blank" rel="noopener">Max&amp;rsquo;s recent talk for the LA RUG&lt;/a>, and also
&lt;a href="https://www.tmwr.org/workflow-sets.html" target="_blank" rel="noopener">read this chapter of our book&lt;/a>.&lt;/p>
&lt;h2 id="your-own-tidymodels-adventure">Your own tidymodels adventure
&lt;a href="#your-own-tidymodels-adventure">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We believe these three general categories cover most of the modeling adventures you as a practitioner might want to embark on, and our guidance here outlines the best choices given the current status of the tidymodels ecosystem here in the middle of 2021. The ecosystem is growing ever more mature, and packages like parsnip and workflows are more stable, while workflowsets is quite new and may be considered more experimental for now.&lt;/p>
&lt;p>For questions and discussions about tidymodels packages, modeling, and machine learning, join us
&lt;a href="https://rstd.io/tidymodels-community" target="_blank" rel="noopener">in discussion on RStudio Community&lt;/a>.&lt;/p></description></item><item><title>Sparse data structures in tidymodels</title><link>https://www.tidyverse.org/blog/2020/11/tidymodels-sparse-support/</link><pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/11/tidymodels-sparse-support/</guid><description>&lt;p>The new release of
&lt;a href="https://www.tidyverse.org/blog/2020/11/tune-0-1-2/" target="_blank" rel="noopener">tune&lt;/a> is chock full of improvements and new features. This blog post is the second of three posts exploring the updates available in tune 0.1.2. When combined with the latest releases of
&lt;a href="http://hardhat.tidymodels.org/" target="_blank" rel="noopener">hardhat&lt;/a> and
&lt;a href="https://parsnip.tidymodels.org/" target="_blank" rel="noopener">parsnip&lt;/a>, one upgrade that tidymodels users can now use in their day-to-day modeling work is some &lt;strong>support for sparse data structures&lt;/strong> during fitting and tuning.&lt;/p>
&lt;h2 id="why-sparse-data">Why sparse data?
&lt;a href="#why-sparse-data">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In some subject matter domains, it is common to have lots and lots of zeroes after transforming data to a representation appropriate for analysis or modeling. Text data is one such example. The &lt;code>small_fine_foods&lt;/code> dataset of Amazon reviews of fine foods contains a column &lt;code>review&lt;/code> that we as humans can read and understand.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidyverse&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidymodels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;small_fine_foods&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">training_data&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 4,000 x 3
## product review score
## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;fct&amp;gt;
## 1 B000J0LSBG &amp;quot;this stuff is not stuffing its not good at all save your… other
## 2 B000EYLDYE &amp;quot;I absolutely LOVE this dried fruit. LOVE IT. Whenever I ha… great
## 3 B0026LIO9A &amp;quot;GREAT DEAL, CONVENIENT TOO. Much cheaper than WalMart and I… great
## 4 B00473P8SK &amp;quot;Great flavor, we go through a ton of this sauce! I discovere… great
## 5 B001SAWTNM &amp;quot;This is excellent salsa/hot sauce, but you can get it for $2… great
## 6 B000FAG90U &amp;quot;Again, this is the best dogfood out there. One suggestion: … great
## 7 B006BXTCEK &amp;quot;The box I received was filled with teas, hot chocolates, and… other
## 8 B002GWH5OY &amp;quot;This is delicious coffee which compares favorably with much … great
## 9 B003R0MFYY &amp;quot;Don't let these little tiny cans fool you. They pack a lot … great
## 10 B001EO5ZXI &amp;quot;One of the nicest, smoothest cup of chai I've made. Nice mix… great
## # … with 3,990 more rows
&lt;/code>&lt;/pre>&lt;p>Computers, on the other hand, need that &lt;code>review&lt;/code> variable to be heavily preprocessed and transformed in order for it to be ready for most modeling. We typically need to
&lt;a href="https://smltar.com/tokenization.html" target="_blank" rel="noopener">tokenize&lt;/a> the text, find word frequencies, and perhaps
&lt;a href="https://www.tidytextmining.com/tfidf.html" target="_blank" rel="noopener">compute tf-idf&lt;/a>. There are quite a number of different structures we can use to store the results of this preprocessing. We can keep the results in a long, tidy tibble, which is excellent for exploratory data analysis.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tidytext&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">tidy_reviews&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">training_data&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">unnest_tokens&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">review&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">bind_tf_idf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">product&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">tidy_reviews&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 208,306 x 6
## product word n tf idf tf_idf
## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 B0000691JF and 1 0.1 0.234 0.0234
## 2 B0000691JF i 1 0.1 0.262 0.0262
## 3 B0000691JF in 1 0.1 0.654 0.0654
## 4 B0000691JF just 1 0.1 1.54 0.154
## 5 B0000691JF manner 1 0.1 5.52 0.552
## 6 B0000691JF ordered 1 0.1 2.76 0.276
## 7 B0000691JF prompt 1 0.1 5.81 0.581
## 8 B0000691JF the 1 0.1 0.206 0.0206
## 9 B0000691JF usual 1 0.1 5.04 0.504
## 10 B0000691JF what 1 0.1 2.27 0.227
## # … with 208,296 more rows
&lt;/code>&lt;/pre>&lt;p>We can also transform these results to a wide format, often a good fit when the next step is a modeling or machine learning algorithm.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">wide_reviews&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">tidy_reviews&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tf_idf&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">pivot_wider&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">names_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">names_prefix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;word_&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">values_from&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tf_idf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">values_fill&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">wide_reviews&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 4,000 x 13,797
## product word_and word_i word_in word_just word_manner word_ordered word_prompt
## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 B00006… 0.0234 0.0262 0.0654 0.154 0.552 0.276 0.581
## 2 B00008… 0.00780 0 0 0 0 0 0
## 3 B00008… 0.00177 0.00397 0.0198 0.0117 0 0 0
## 4 B00008… 0.00582 0.00489 0.00813 0 0 0 0
## 5 B00008… 0.00246 0.0166 0.0207 0.0162 0 0 0
## 6 B00008… 0.00334 0.00750 0.00935 0 0 0 0
## 7 B00008… 0.0114 0.00729 0.00909 0 0 0 0
## 8 B00008… 0.00768 0.0129 0 0 0 0 0
## 9 B00008… 0.00976 0 0 0 0 0 0
## 10 B00008… 0.0156 0 0 0 0 0 0
## 11 B00008… 0.00404 0.0181 0 0 0 0 0
## 12 B00008… 0.0142 0.00397 0 0 0 0 0
## 13 B00008… 0.0160 0.00596 0.0149 0.0351 0 0 0
## 14 B00009… 0.00439 0.00656 0.00818 0 0 0 0
## 15 B0000A… 0.00679 0.00380 0.0379 0 0 0.0401 0
## # … with 3,985 more rows, and 13,789 more variables: word_the &amp;lt;dbl&amp;gt;,
## # word_usual &amp;lt;dbl&amp;gt;, word_what &amp;lt;dbl&amp;gt;, word_a &amp;lt;dbl&amp;gt;, word_anymore &amp;lt;dbl&amp;gt;,
## # word_chocolate &amp;lt;dbl&amp;gt;, word_coat &amp;lt;dbl&amp;gt;, word_dogfood &amp;lt;dbl&amp;gt;, word_ears &amp;lt;dbl&amp;gt;,
## # word_fine &amp;lt;dbl&amp;gt;, word_for &amp;lt;dbl&amp;gt;, word_great &amp;lt;dbl&amp;gt;, word_hardly &amp;lt;dbl&amp;gt;,
## # word_he &amp;lt;dbl&amp;gt;, word_health &amp;lt;dbl&amp;gt;, word_his &amp;lt;dbl&amp;gt;, word_hot &amp;lt;dbl&amp;gt;,
## # word_is &amp;lt;dbl&amp;gt;, word_itching &amp;lt;dbl&amp;gt;, word_lab &amp;lt;dbl&amp;gt;, …
&lt;/code>&lt;/pre>&lt;p>Lots of zeroes! Instead of using a tibble, we can transform these results to a &lt;strong>sparse matrix&lt;/strong>, a specialized data structure that keeps track of only the non-zero elements instead of every element.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">sparse_reviews&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">tidy_reviews&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">cast_dfm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tf_idf&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sparse_reviews&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## Document-feature matrix of: 4,000 documents, 13,796 features (99.6% sparse).
&lt;/code>&lt;/pre>&lt;p>As is typical for text data, this document-feature matrix is extremely sparse, with many zeroes. Most documents do not contain most words. By using this kind of specialized structure instead of anything like a vanilla &lt;code>matrix&lt;/code> or &lt;code>data.frame&lt;/code>, we secure two benefits:&lt;/p>
&lt;ul>
&lt;li>We can taken advantage of the &lt;strong>speed&lt;/strong> gained from any specialized model algorithms built for sparse data.&lt;/li>
&lt;li>The amount of &lt;strong>memory&lt;/strong> this object requires decreases dramatically.&lt;/li>
&lt;/ul>
&lt;p>How big of a change in memory are we talking about?&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lobstr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">obj_sizes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wide_reviews&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sparse_reviews&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## * 443,539,792 B
## * 3,581,200 B
&lt;/code>&lt;/pre>
&lt;h2 id="a-blueprint-for-sparse-models">A blueprint for sparse models
&lt;a href="#a-blueprint-for-sparse-models">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Before the most recent releases of hardhat, parsnip, and tune, there was no support for sparse data structures within tidymodels. Now, you can specify a hardhat &lt;strong>blueprint&lt;/strong> for sparse data.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hardhat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sparse_bp&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">default_recipe_blueprint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">composition&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;dgCMatrix&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>dgCMatrix&lt;/code> composition is from the
&lt;a href="https://cran.r-project.org/package=Matrix" target="_blank" rel="noopener">Matrix&lt;/a> package, and is the most standard class for sparse numeric matrices in modeling in R. (You can also specify a dense matrix composition with &lt;code>composition = &amp;quot;matrix&amp;quot;&lt;/code>.)&lt;/p>
&lt;h2 id="workflows-and-sparsity">Workflows and sparsity
&lt;a href="#workflows-and-sparsity">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The blueprint is used under the hood by the hardhat functions to process data. To get ready to fit our model using the sparse blueprint, we can set up our preprocessing recipe:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">textrecipes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">text_rec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">score&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="n">review&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">training_data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tokenize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">review&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_stopwords&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">review&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tokenfilter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">review&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_tokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1e3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">step_tfidf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">review&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we set up our model as we would normally:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">lasso_spec&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">logistic_reg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">penalty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0.02&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mixture&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">set_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;glmnet&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The regularized modeling of the glmnet package is an example of an algorithm that has specialized approaches for sparse data. If we pass in dense data with &lt;code>set_engine(&amp;quot;glmnet&amp;quot;)&lt;/code>, the underlying model will take one approach, but it will use a different, faster approach especially built for sparse data if we pass in a sparse matrix. Typically, we would recommend centering and scaling predictors using &lt;code>step_normalize()&lt;/code> before fitting a regularized model like glmnet. However, if we do this, we would no longer have all our zeroes and sparse data. Instead, we can &amp;ldquo;normalize&amp;rdquo; these text predictors using tf-idf so that they are all on the same scale.&lt;/p>
&lt;p>Let&amp;rsquo;s put together two workflows, one using the sparse blueprint and one using the default behavior.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">wf_sparse&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text_rec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">blueprint&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sparse_bp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lasso_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">wf_default&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>
&lt;span class="nf">workflow&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_recipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text_rec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">add_model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lasso_spec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="comparing-model-results">Comparing model results
&lt;a href="#comparing-model-results">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Now let&amp;rsquo;s use &lt;code>fit_resamples()&lt;/code> to estimate how well this model fits with both options and measure performance for both.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">set.seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">food_folds&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">vfold_cv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">training_data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">results&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="n">bench&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">mark&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">iterations&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">check&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">sparse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fit_resamples&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wf_sparse&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">food_folds&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">default&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fit_resamples&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wf_default&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">food_folds&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="n">results&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 2 x 6
## expression min median `itr/sec` mem_alloc `gc/sec`
## &amp;lt;bch:expr&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;bch:tm&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;bch:byt&amp;gt; &amp;lt;dbl&amp;gt;
## 1 sparse 7.78s 7.87s 0.127 788MB 0.127
## 2 default 1.19m 1.2m 0.0139 870MB 0.0139
&lt;/code>&lt;/pre>&lt;p>We see on the order of a 10x speed gain by using the sparse blueprint!&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">autoplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;ridge&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="figure/unnamed-chunk-11-1.png" alt="plot of chunk unnamed-chunk-11">&lt;/p>
&lt;p>The model performance metrics are the same:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">fit_resamples&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wf_sparse&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">food_folds&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">collect_metrics&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 2 x 5
## .metric .estimator mean n std_err
## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1 accuracy binary 0.715 3 0.00399
## 2 roc_auc binary 0.797 3 0.00598
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">fit_resamples&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wf_default&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">food_folds&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&amp;gt;%&lt;/span>
&lt;span class="nf">collect_metrics&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>## # A tibble: 2 x 5
## .metric .estimator mean n std_err
## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1 accuracy binary 0.715 3 0.00399
## 2 roc_auc binary 0.797 3 0.00598
&lt;/code>&lt;/pre>&lt;p>To see a detailed text modeling example using this dataset of food reviews, &lt;em>without&lt;/em> sparse encodings but complete with tuning hyperparameters, check out
&lt;a href="https://www.tidymodels.org/learn/work/tune-text/" target="_blank" rel="noopener">our article on &lt;code>tidymodels.org&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="current-limits">Current limits
&lt;a href="#current-limits">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>In tidymodels, the support for sparse data structures begins coming &lt;em>out&lt;/em> of a
&lt;a href="https://www.tmwr.org/recipes.html" target="_blank" rel="noopener">preprocessing recipe&lt;/a> and continues throughout the fitting and tuning process. We typically still expect the input &lt;em>into&lt;/em> a recipe to be a data frame, as shown in this text analysis example, and there is very limited support within tidymodels for starting with a sparse matrix, for example by using &lt;code>parsnip::fit_xy()&lt;/code>.&lt;/p>
&lt;p>There are currently three models in parsnip that support a sparse data encoding:&lt;/p>
&lt;ul>
&lt;li>the glmnet engine for linear and logistic regression (including multinomial regression),&lt;/li>
&lt;li>the XGBoost engine for boosted trees, and&lt;/li>
&lt;li>the ranger engine for random forests.&lt;/li>
&lt;/ul>
&lt;p>There is heterogeneity in how recipes themselves handle data internally; this is why we didn&amp;rsquo;t see a huge decrease in memory use when comparing &lt;code>wf_sparse&lt;/code> to &lt;code>wf_default&lt;/code>. The
&lt;a href="https://textrecipes.tidymodels.org/" target="_blank" rel="noopener">textrecipes&lt;/a> package internally adopts the idea of a
&lt;a href="https://textrecipes.tidymodels.org/reference/tokenlist.html" target="_blank" rel="noopener">tokenlist&lt;/a>, which is memory efficient for sparse data, but other recipe steps may handle data in a dense tibble structure. Keep these current limits in mind as you consider the memory requirements of your modeling projects!&lt;/p></description></item><item><title>Taking Control of Plot Scaling</title><link>https://www.tidyverse.org/blog/2020/08/taking-control-of-plot-scaling/</link><pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/08/taking-control-of-plot-scaling/</guid><description>&lt;p>Some time ago, while working on the new edition of the ggplot2 book, I asked out to the R twitterverse what part of using ggplot2 was the most incomprehensible for seasoned users. By a very large margin the most &amp;ldquo;popular&amp;rdquo; response revolved around making sure that output had the correct scaling of text, lines, etc.&lt;/p>
&lt;p>The latest release of ragg contains a new functionality that will hopefully make this issue a thing of the past. Read on how to use it.&lt;/p>
&lt;h2 id="some-definitions">Some definitions
&lt;a href="#some-definitions">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Before we delve into the problem we should clarify a few concepts related to graphics and sizing:&lt;/p>
&lt;p>&lt;strong>Absolute size:&lt;/strong> This is the physical dimensions of the graphic (or, more precisely, the intended physical dimensions). This is measured in centimeters or inches or another absolute length unit.&lt;/p>
&lt;p>&lt;strong>Pixel size:&lt;/strong> For raster output, the graphic is encoded as a matrix of color values. Each cell in the matrix is a pixel. The pixel size is the number of rows and columns in the matrix. Pixels does not have any inherent physical size.&lt;/p>
&lt;p>&lt;strong>Resolution:&lt;/strong> This number ties absolute and pixel size together. It is usually given in ppi (pixels per inch), though dpi (dots per inch) is used interchangeably. A resolution of 72 ppi means that an inch is considered 72 pixels long.&lt;/p>
&lt;p>&lt;strong>Pointsize:&lt;/strong> This is a measure tied to text sizing. When we set a font to size 12, it is given in points. While the actual size of a point has
&lt;a href="https://en.wikipedia.org/wiki/Point_%28typography%29#Varying_standards" target="_blank" rel="noopener">varied throughout history&lt;/a>, the general consensus now is that 1pt = 1/72 inch (this is also adopted by R). Since points is an absolute unit, the resolution of the output will determine the number of pixels it correspond to.&lt;/p>
&lt;h2 id="the-problem">The problem
&lt;a href="#the-problem">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>With formalities out of the way, we can describe the problem more clearly. At its core, this is about ensuring the correct scaling of a plot as we develop it for varying absolute sizes.&lt;/p>
&lt;p>When we develop a graphic we will generally sit in front of a computer and fine tune it while continuously getting previews on the screen. Once we are content with it we will save it to the correct absolute size required by wherever we intend to publish the plot. In the remainder of the text we will assume that we sit in front of a computer developing a plot that should end up on a poster.&lt;/p>
&lt;p>This is the plot, and how it looks on a computer:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>(&lt;span class='k'>&lt;a href='http://ggplot2.tidyverse.org'>ggplot2&lt;/a>&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>(&lt;span class='k'>&lt;a href='https://ragg.r-lib.org'>ragg&lt;/a>&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/library.html'>library&lt;/a>&lt;/span>(&lt;span class='k'>&lt;a href='https://allisonhorst.github.io/palmerpenguins'>palmerpenguins&lt;/a>&lt;/span>)
&lt;span class='c'># plot adapted from https://github.com/allisonhorst/palmerpenguins&lt;/span>
&lt;span class='k'>p&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/na.fail.html'>na.omit&lt;/a>&lt;/span>(&lt;span class='k'>penguins&lt;/span>), &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(x = &lt;span class='k'>flipper_length_mm&lt;/span>, y = &lt;span class='k'>body_mass_g&lt;/span>)) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_point.html'>geom_point&lt;/a>&lt;/span>(
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(color = &lt;span class='k'>species&lt;/span>, shape = &lt;span class='k'>species&lt;/span>),
size = &lt;span class='m'>3&lt;/span>,
alpha = &lt;span class='m'>0.8&lt;/span>
) &lt;span class='o'>+&lt;/span>
&lt;span class='k'>ggforce&lt;/span>::&lt;span class='nf'>&lt;a href='https://ggforce.data-imaginist.com/reference/geom_mark_ellipse.html'>geom_mark_ellipse&lt;/a>&lt;/span>(
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(filter = &lt;span class='k'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Gentoo"&lt;/span>,
description = &lt;span class='s'>"Gentoo penguins are generally bigger in size"&lt;/span>)
) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>(x = &lt;span class='s'>"Flipper Length [mm]"&lt;/span>, y = &lt;span class='s'>"Body Mass [g]"&lt;/span>, colour = &lt;span class='s'>"Species"&lt;/span>,
shape = &lt;span class='s'>"Species"&lt;/span>)
&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"basis.png"&lt;/span>)
&lt;span class='c'># I'm explicitly calling the device functions so you can see the dimensions &lt;/span>
&lt;span class='c'># used&lt;/span>
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>20&lt;/span>, height = &lt;span class='m'>12&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-1-1/basis.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This looks good, but remember we want to use this on a poster. A poster is usually observed at a farther distance than a computer screen, so in order to make it legible the plot should be bigger. How much bigger? Well, if we assume that we are watching our screen at 50 cm distance, and our poster is meant to be observed at 1.5 m distance, then our plot should be 3 times larger to take up the same amount of space in our vision:&lt;/p>
&lt;p>&lt;img src="scaling.png" alt="Schematic representation of the fact that size must increase by the same factor as distance to object in order to continue taking up the same amount of space in the vision">&lt;/p>
&lt;p>With that in mind we quickly size up our plot:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"large_basis.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>60&lt;/span>, height = &lt;span class='m'>36&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-2-1/large_basis.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>The plot above doesn&amp;rsquo;t look physically larger, but that is because the webpage downscales it to make it fit. You can download each of the images and open them in a image editor to convince yourself that they are of different absolute size. The downscaling done by the webpage allows us to simulate how looking at our poster may feel like, and it is not pretty; everything seems super small and ineligible.&lt;/p>
&lt;p>Why is that? Our plot is a mix of elements positioned and dimensioned based on both relative and absolute sizes. While the relative sizes expand along with the output size, the absolute sizes does not. The text is given in points which, as you recall, is an absolute dimension. The same is true for the element sizes in the scatterplot, the grid lines, etc. This means that as we scale up the output size, they remain the same size and will thus get smaller relative to the full image.&lt;/p>
&lt;blockquote>
&lt;p>The reverse can be a problem as well. If you render a plot to a smaller size than the one you&amp;rsquo;ve previewed you may find that text, margins, etc. take up all the available space.&lt;/p>
&lt;/blockquote>
&lt;p>Now, how should we go about correcting this?&lt;/p>
&lt;h2 id="attempt-1-use-vector-graphics">Attempt 1: Use vector graphics
&lt;a href="#attempt-1-use-vector-graphics">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The discussion above is especially relevant to raster output since they don&amp;rsquo;t resize gracefully and it is thus very important to get the correct dimensions and resolution when it is rendered. One way to resolve this is to not render to raster but use a vector graphic device such as
&lt;a href="https://rdrr.io/r/grDevices/pdf.html" target="_blank" rel="noopener">&lt;code>pdf()&lt;/code>&lt;/a> or &lt;code>svglite()&lt;/code>. With these you can simply render the graphic to a size where everything looks as it should and then resize the output to the physical size that you need. There are valid reasons to not want to use vector graphics, however. The look of the output may change depending on which program opens them. Custom fonts may not render correctly on other systems. Or you may have such a large amount of graphical elements that the vector graphic becomes unreasonably large and heavy to display. If none of this applies then using a vector graphic device is definitely a valid and reasonable solution. For the remainder of the post we assume that we want the output in a raster format such as png and explore how we may fix our scaling issues there.&lt;/p>
&lt;h2 id="attempt-2-theming">Attempt 2: Theming
&lt;a href="#attempt-2-theming">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>One approach to fixing this is by changing the theme settings of the plot, so that they work better for a larger size:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>p1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>p&lt;/span> &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggtheme.html'>theme_gray&lt;/a>&lt;/span>(base_size = &lt;span class='m'>33&lt;/span>)
&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"theming.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>60&lt;/span>, height = &lt;span class='m'>36&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p1&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-3-1/theming.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This approach got us surprisingly far. A lot of the theme elements of the plot is derived from the base size argument so many adapts. Not all though, as we can see the legend keys maintaining their relative small size. If you&amp;rsquo;ve been using a custom theme it may also be that you&amp;rsquo;ve overwritten some of the default sizes and will need to change that as well.&lt;/p>
&lt;p>One thing missing is all the non-theme elements (i.e. things part of the layer). Because of this we&amp;rsquo;d have to redo the whole plot in order to get the desired result:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>p1&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggplot.html'>ggplot&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/stats/na.fail.html'>na.omit&lt;/a>&lt;/span>(&lt;span class='k'>penguins&lt;/span>), &lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(x = &lt;span class='k'>flipper_length_mm&lt;/span>, y = &lt;span class='k'>body_mass_g&lt;/span>)) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/geom_point.html'>geom_point&lt;/a>&lt;/span>(
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(color = &lt;span class='k'>species&lt;/span>, shape = &lt;span class='k'>species&lt;/span>),
size = &lt;span class='m'>9&lt;/span>,
alpha = &lt;span class='m'>0.8&lt;/span>
) &lt;span class='o'>+&lt;/span>
&lt;span class='k'>ggforce&lt;/span>::&lt;span class='nf'>&lt;a href='https://ggforce.data-imaginist.com/reference/geom_mark_ellipse.html'>geom_mark_ellipse&lt;/a>&lt;/span>(
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/aes.html'>aes&lt;/a>&lt;/span>(filter = &lt;span class='k'>species&lt;/span> &lt;span class='o'>==&lt;/span> &lt;span class='s'>"Gentoo"&lt;/span>,
description = &lt;span class='s'>"Gentoo penguins are generally bigger in size"&lt;/span>),
size = &lt;span class='m'>1.5&lt;/span>,
label.fontsize = &lt;span class='m'>36&lt;/span>
) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/labs.html'>labs&lt;/a>&lt;/span>(x = &lt;span class='s'>"Flipper Length [mm]"&lt;/span>, y = &lt;span class='s'>"Body Mass [g]"&lt;/span>, colour = &lt;span class='s'>"Species"&lt;/span>,
shape = &lt;span class='s'>"Species"&lt;/span>) &lt;span class='o'>+&lt;/span>
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggtheme.html'>theme_gray&lt;/a>&lt;/span>(base_size = &lt;span class='m'>33&lt;/span>)
&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"theming2.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>60&lt;/span>, height = &lt;span class='m'>36&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p1&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-4-1/theming2.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>We can see that we are getting there, but the journey hasn&amp;rsquo;t been pleasant. Especially for the last part it requires knowledge of all the different settings in a geom that encodes absolute sizes. For the mark geom we only fixed the ellipse line width and the text size, but there are many more settings that needs to be updated as well as is apparent from the weird look of the text box.&lt;/p>
&lt;p>Another issue that arises is that if we need this plot at yet another different scale, we will need to change quite a lot of code in order to get there.&lt;/p>
&lt;h2 id="attempt-3-resolution-scaling">Attempt 3: Resolution scaling
&lt;a href="#attempt-3-resolution-scaling">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Since the resolution is the parameter that ties the pixel size and absolute size together it is possible to use it as a scaling factor, but it requires some non-obvious adjustments:&lt;/p>
&lt;p>The first thing we need to do is convert our physical dimensions to pixel dimensions using our desired resolution. We want to end up with a 60x36cm plot at 300ppi. This gives us:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/c.html'>c&lt;/a>&lt;/span>(&lt;span class='m'>60&lt;/span>, &lt;span class='m'>36&lt;/span>) &lt;span class='o'>*&lt;/span>
&lt;span class='m'>0.3937&lt;/span> &lt;span class='o'>*&lt;/span> &lt;span class='c'># convert to inch&lt;/span>
&lt;span class='m'>300&lt;/span> &lt;span class='c'># convert to pixels&lt;/span>
&lt;span class='c'>#&amp;gt; [1] 7086.60 4251.96&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>We can now use these values directly in our device and change the resolution of the device to trick it into thinking that text etc should be rendered at a larger size&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"resolution.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>7087&lt;/span>, height = &lt;span class='m'>4252&lt;/span>, units = &lt;span class='s'>"px"&lt;/span>, res = &lt;span class='m'>900&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-6-1/resolution.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>This actually works exactly as we hoped. We&amp;rsquo;ve gotten our huge version of the plot but with the same exact scaling of all graphic elements.&lt;/p>
&lt;p>Depending on your temperament this may be a perfect solution. To me, I think the conversion from physical dimensions to pixels is tedious, and it has the added drawback that the dimensions of the plot is incorrectly encoded (it will appear as a 20*12cm plot at 900ppi) which may impact how it is presented in different programs. In the end you may have to manually resize it to get the correct physical dimensions in the end.&lt;/p>
&lt;h2 id="the-solution">The solution
&lt;a href="#the-solution">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Seeing that there is no single perfect solution to fixing this with the tools at our disposal, I&amp;rsquo;ve added a new argument to the ragg devices called &lt;code>scaling&lt;/code>. It&amp;rsquo;s a multiplier that is applied to all absolute sizes, without interfering with the encoded dimensions of the output. Since we have increased the dimensions 3 times we set &lt;code>scaling = 3&lt;/code> to make sure that the absolute sized elements are keeping their relative size.&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"scaling.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ragg.r-lib.org/reference/agg_png.html'>agg_png&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>, width = &lt;span class='m'>60&lt;/span>, height = &lt;span class='m'>36&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>, scaling = &lt;span class='m'>3&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/graphics/plot.default.html'>plot&lt;/a>&lt;/span>(&lt;span class='k'>p&lt;/span>)
&lt;span class='nf'>&lt;a href='https://rdrr.io/r/base/invisible.html'>invisible&lt;/a>&lt;/span>(&lt;span class='nf'>&lt;a href='https://rdrr.io/r/grDevices/dev.html'>dev.off&lt;/a>&lt;/span>())
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-7-1/scaling.png" width="" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>As can be seen, the new argument makes it very easy to reclaim the look of the plot after resizing. Hopefully this will remove a good deal of the pain related to generating plots for papers, posters, presentations, etc. You do have to remember to use the same scaling setting for all plots for them to have the same sizing, but apart from that it makes it very easy to fine tune the look for the medium your creating it for.&lt;/p>
&lt;p>Remember that the scaling factor of &lt;code>3&lt;/code> was simply chosen to fit our presumed viewing distance and should not be repeated without thought. Another example would be to create a small version of the plot, e.g. for a thumbnail on a webpage. While there is no harm in manually scaling down a raster image, you may find that especially text is more readable when rendered to the desired size directly. To show this off we&amp;rsquo;ll make a half-sized version of our plot as well. To spruce it up we&amp;rsquo;ll use
&lt;a href="https://ggplot2.tidyverse.org/reference/ggsave.html" target="_blank" rel="noopener">&lt;code>ggsave()&lt;/code>&lt;/a> instead of calling the ragg device directly. Let&amp;rsquo;s see how it looks without using scaling first:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"small"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggsave.html'>ggsave&lt;/a>&lt;/span>(
&lt;span class='k'>pngfile&lt;/span>,
&lt;span class='k'>p&lt;/span>,
device = &lt;span class='k'>agg_png&lt;/span>,
width = &lt;span class='m'>10&lt;/span>, height = &lt;span class='m'>6&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>
)
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-8-1/small" width="50%" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;p>As we can see, everything feels oversized for the plot, and the margins takes up way too much relative space. Using &lt;code>scaling&lt;/code> we quickly resolve this:&lt;/p>
&lt;div class="highlight">
&lt;pre class='chroma'>&lt;code class='language-r' data-lang='r'>&lt;span class='k'>pngfile&lt;/span> &lt;span class='o'>&amp;lt;-&lt;/span> &lt;span class='k'>fs&lt;/span>::&lt;span class='nf'>&lt;a href='http://fs.r-lib.org/reference/path.html'>path&lt;/a>&lt;/span>(&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/fig_path.html'>fig_path&lt;/a>&lt;/span>(), &lt;span class='s'>"downscaling.png"&lt;/span>)
&lt;span class='nf'>&lt;a href='https://ggplot2.tidyverse.org/reference/ggsave.html'>ggsave&lt;/a>&lt;/span>(
&lt;span class='k'>pngfile&lt;/span>,
&lt;span class='k'>p&lt;/span>,
device = &lt;span class='k'>agg_png&lt;/span>,
width = &lt;span class='m'>10&lt;/span>, height = &lt;span class='m'>6&lt;/span>, units = &lt;span class='s'>"cm"&lt;/span>, res = &lt;span class='m'>300&lt;/span>,
scaling = &lt;span class='m'>0.5&lt;/span>
)
&lt;span class='k'>knitr&lt;/span>::&lt;span class='nf'>&lt;a href='https://rdrr.io/pkg/knitr/man/include_graphics.html'>include_graphics&lt;/a>&lt;/span>(&lt;span class='k'>pngfile&lt;/span>)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="figs/unnamed-chunk-9-1/downscaling.png" width="50%" style="display: block; margin: auto;" />&lt;/p>
&lt;/div>
&lt;h2 id="addendum">Addendum
&lt;a href="#addendum">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>Preparing graphics for the web presents an additional hurdle. The HTML specification assumes a screen resolution of 96ppi since that was the predominant screen resolution at the time. Modern monitors have a much higher resolution but the assumption is still in effect (though operating systems may mitigate it). This is the reason why plots may look slightly smaller when rendered through Shiny, blogdown, or hugodown. Simply set the resolution to 96ppi and use pixel dimensions for the output to make sure it has the correct scaling.&lt;/li>
&lt;li>Rendering images with RMarkdown requires some care as well since chunk options both take an output dimension in inches as well as a scaling factor for how big the rendered image should appear in the document.
&lt;a href="https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing" target="_blank" rel="noopener">R for Data Science&lt;/a> has some additional information on this&lt;/li>
&lt;/ul></description></item><item><title>Self-cleaning test fixtures</title><link>https://www.tidyverse.org/blog/2020/04/self-cleaning-test-fixtures/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/04/self-cleaning-test-fixtures/</guid><description>&lt;p>&lt;em>Adapted from an internal presentation to the tidyverse team, which tells you something about the target reader. The primary audience for this post is R programmers and, especially, package developers. The problems identified and solved here are pretty niche! People who are mostly interested in R as a data analysis tool may not have direct use for this material. But the post offers something for anyone curious about the hazards of side effects and the various ways we can leave the world as you found it.&lt;/em>&lt;/p>
&lt;h2 id="test-hygiene">Test hygiene
&lt;a href="#test-hygiene">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;blockquote>
&lt;p>Take nothing but memories, leave nothing but footprints.&lt;/p>
&lt;/blockquote>
&lt;p>― Chief Si&amp;rsquo;ahl&lt;/p>
&lt;p>Ideally a test should leave the world exactly as it found it. Examples of things you might do inside a test and, therefore, need to undo:&lt;/p>
&lt;ul>
&lt;li>Create a file or directory&lt;/li>
&lt;li>Create a resource on an external system&lt;/li>
&lt;li>Set an R option&lt;/li>
&lt;li>Set an environment variable&lt;/li>
&lt;li>Change working directory&lt;/li>
&lt;li>Change an aspect of the tested package&amp;rsquo;s state&lt;/li>
&lt;/ul>
&lt;p>Scrupulous attention to cleanup is more than just courtesy or being fastidious. It is also self-serving. The state of the world after test &lt;code>i&lt;/code> is the starting state for test &lt;code>i + 1&lt;/code>. Tests that change state willy-nilly eventually end up interfering with each other in ways that can be very difficult to debug. Most tests are written with an implicit assumption about the starting state, usually whatever &lt;em>tabula rasa&lt;/em> means for the target domain of your package. If you accumulate enough sloppy tests, you will eventually find yourself asking the programming equivalent of questions like &amp;ldquo;Who forgot to turn off the oven?&amp;rdquo; and &amp;ldquo;Who didn&amp;rsquo;t clean up after the dog?&amp;quot;.&lt;/p>
&lt;p>First, we lay some foundations that aren&amp;rsquo;t obviously related to tests, but just trust that we&amp;rsquo;ll get there eventually.&lt;/p>
&lt;h2 id="the-onexit-pattern">The &lt;code>on.exit()&lt;/code> pattern
&lt;a href="#the-onexit-pattern">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>If you want to clean up after yourself, how should you actually do it?&lt;/p>
&lt;p>The first function to know about is base R&amp;rsquo;s
&lt;a href="https://rdrr.io/r/base/on.exit.html" target="_blank" rel="noopener">&lt;code>on.exit()&lt;/code>&lt;/a>. You use it inside a function. In the function body, every time you do something that should be undone &lt;strong>on exit&lt;/strong>, you immediately register the cleanup code with &lt;code>on.exit(expr, add = TRUE)&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>Here&amp;rsquo;s a &lt;code>sloppy()&lt;/code> function that prints a number with a specific number of significant digits, by adjusting an R option.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">sloppy&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.141593&lt;/span>
&lt;span class="nf">sloppy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">pi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.1&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notice how &lt;code>pi&lt;/code> prints differently before and after the call to &lt;code>sloppy()&lt;/code>. Calling &lt;code>sloppy()&lt;/code> has a side effect: it changes the &lt;code>digits&lt;/code> option globally, not just within its own scope of operations. This is what we want to avoid.&lt;/p>
&lt;p>&lt;em>Don&amp;rsquo;t worry, I&amp;rsquo;m restoring global state (specifically, the &lt;code>digits&lt;/code> option) behind the scenes here.&lt;/em>&lt;/p>
&lt;p>Here&amp;rsquo;s how to do better with &lt;code>on.exit()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">neat&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">op&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">op&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.141593&lt;/span>
&lt;span class="nf">neat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">pi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.1&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.141593&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The use of &lt;code>on.exit()&lt;/code> ensures that &lt;code>neat()&lt;/code> leaves &lt;code>digits&lt;/code> the way that it found it. &lt;code>on.exit()&lt;/code> also works when you exit the function abnormally, i.e. due to error. This is why it&amp;rsquo;s a better choice than any do-it-yourself solution.&lt;/p>
&lt;p>But I promised to talk about tests! Never fear, &lt;code>on.exit()&lt;/code> also works inside a test.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testthat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.718282&lt;/span>
&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;on.exit() works in a test&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">op&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">op&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">out&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">expect_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;2.7&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># printing just for the benefit of the reader&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;2.7&amp;#34;&lt;/span>
&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.718282&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>on.exit()&lt;/code> is a very useful function and provides enough inspiration for an entire package: withr (
&lt;a href="http://withr.r-lib.org" target="_blank" rel="noopener">withr.r-lib.org&lt;/a>), which is a Swiss army knife for managing state in very flexible ways. It&amp;rsquo;s what I usually use, in functions and tests, for situations like that above.&lt;/p>
&lt;p>&lt;em>For more background, the section about
&lt;a href="https://adv-r.hadley.nz/functions.html#on-exit" target="_blank" rel="noopener">Exit handlers&lt;/a> in Advanced R is a good reference. The
&lt;a href="https://github.com/r-lib/cleancall#readme" target="_blank" rel="noopener">cleancall package&lt;/a> addresses a similar problem, but in the C code of an R package. cleancall is introduced in the blog post
&lt;a href="https://www.tidyverse.org/blog/2019/05/resource-cleanup-in-c-and-the-r-api/" target="_blank" rel="noopener">Resource Cleanup in C and the R API&lt;/a>.&lt;/em>&lt;/p>
&lt;h2 id="withrdefer">&lt;code>withr::defer()&lt;/code>
&lt;a href="#withrdefer">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>withr::defer()&lt;/code> is a more general version of &lt;code>on.exit()&lt;/code>. It can run cleanup for any environment, but defaults to the environment it was called in. Therefore, it works like &lt;code>on.exit()&lt;/code> inside a function &amp;ndash; an extremely important special case &amp;ndash; but the added flexibility means you can use it in more situations.&lt;/p>
&lt;p>Below I compare &lt;code>on.exit()&lt;/code> and &lt;code>withr::defer()&lt;/code> and I put the code inside &lt;code>local()&lt;/code>, instead of inside a function. This is meant to reinforce that cleanup can be relevant beyond function execution environments. It also gives you another tool to play with, in addition to toy functions and tests, in your own explorations of how to manage scope.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">withr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">local&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;last&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># this clobbers `print(&amp;#34;first&amp;#34;)` :(&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;last&amp;#34;&lt;/span>
&lt;span class="nf">local&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;last&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;first&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;last&amp;#34;&lt;/span>
&lt;span class="nf">local&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">after&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;last&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">after&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;last&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;first&amp;#34;&lt;/span>
&lt;span class="nf">local&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nf">defer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">defer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;last&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;last&amp;#34;&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;first&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This showcases the nice ergonomics of &lt;code>defer()&lt;/code>: each call &lt;em>adds&lt;/em> to the list of deferred tasks (vs. replaces) and, by default, adds to the &lt;em>front&lt;/em> of the stack (vs. the back). As you&amp;rsquo;ll see below, this turns out to matter in most real world usage&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;h2 id="withrlocal_">&lt;code>withr::local_*()&lt;/code>
&lt;a href="#withrlocal_">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>&lt;code>on.exit()&lt;/code> usage has a very predictable, slightly clunky pattern. In &lt;code>neat()&lt;/code>, it looks like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">op&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">on.exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">op&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first statement accomplishes two things at once: it sets the &lt;code>digits&lt;/code> option and captures its original value in &lt;code>op&lt;/code>. The second statement schedules the restoration of &lt;code>digits&lt;/code>. This order of operations is encouraged by the design of &lt;code>options()&lt;/code>, which returns the original values when it&amp;rsquo;s used as a setter.&lt;/p>
&lt;p>Here is the more general (and possibly slightly safer) approach: First, capture the current state. Then, immediately schedule the eventual restoration of this original state, so that this is arranged before any additional calls are made that could exit, e.g. throw an error. Last, make the desired state change.&lt;/p>
&lt;p>What if such a maneuver happens all over your package and you want to write a helper?&lt;/p>
&lt;p>You can&amp;rsquo;t wrap &lt;code>on.exit()&lt;/code> in your own helpers, because there&amp;rsquo;s no way to reach back up into the correct parent frame and schedule cleanup there. But with &lt;code>defer()&lt;/code>, we can! Here is such a custom helper, called &lt;code>local_digits()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">local_digits&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sig_digits&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">parent.frame&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">op&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">defer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">op&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can use it to keep any manipulation of &lt;code>digits&lt;/code> local to a test (or function).&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.718282&lt;/span>
&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;withr lets us write custom helpers for local state manipulation&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">local_digits&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">20&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.7182818284590450908&lt;/span>
&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.718282&lt;/span>
&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;we can even make multiple calls to local_digits()&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">local_digits&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">local_digits&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">local_digits&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.72&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.7183&lt;/span>
&lt;span class="nf">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 2.718282&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The ability to write &lt;code>on.exit()&lt;/code>-like functions, customized to your own needs, is very empowering. However, you may not even need to. There are certain state changes that come up over and over again, for all of us. These are pre-implemented in withr&amp;rsquo;s &lt;code>local_*()&lt;/code> family of functions. A few examples:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Do / undo this&lt;/th>
&lt;th>withr function&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Create a file&lt;/td>
&lt;td>&lt;code>local_file()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Set an R option&lt;/td>
&lt;td>&lt;code>local_options()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Set an environment variable&lt;/td>
&lt;td>&lt;code>local_envvar()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Change working directory&lt;/td>
&lt;td>&lt;code>local_dir()&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&amp;ldquo;Local&amp;rdquo; here refers to the fact that the state change persists only for the lifetime of an associated environment, usually the execution environment of a function or test.&lt;/p>
&lt;p>We can use &lt;code>withr::local_options()&lt;/code> to write yet another version of &lt;code>neat()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">neater&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">local_options&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sig_digits&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.141593&lt;/span>
&lt;span class="nf">neater&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">pi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.14&lt;/span>
&lt;span class="kc">pi&lt;/span>
&lt;span class="c1">#&amp;gt; [1] 3.141593&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each &lt;code>local_*()&lt;/code> function has a companion &lt;code>with_()&lt;/code> function, which is a nod to
&lt;a href="https://rdrr.io/r/base/with.html" target="_blank" rel="noopener">&lt;code>with()&lt;/code>&lt;/a>. We won&amp;rsquo;t use the &lt;code>with_*()&lt;/code> functions here, but you can learn more about them at
&lt;a href="http://withr.r-lib.org" target="_blank" rel="noopener">withr.r-lib.org&lt;/a>.&lt;/p>
&lt;h2 id="test-fixtures">Test fixtures
&lt;a href="#test-fixtures">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Testing is often demonstrated with cute little tests and functions where all the inputs and expected results can be inlined. But in real packages, things aren&amp;rsquo;t always so simple. The main functions in your package probably aren&amp;rsquo;t &amp;ldquo;1 number in, 1 number out&amp;rdquo;. They might require more exotic objects or very specific circumstances. Changing state might be the entire purpose of a function! Now what?&lt;/p>
&lt;p>&lt;em>Obligatory caveat: If you find it hard to write tests, this may be the universe telling you that your package has some design problems. Maybe you&amp;rsquo;ve somehow ended up with a small number of monster functions, with oodles of arguments and complex conditional logic, that can do everything from scramble eggs to change a lightbulb. The best move in this case may be to break things up into smaller and simpler functions. And those will be easier to test. End caveat.&lt;/em>&lt;/p>
&lt;p>Tricky test situations can&amp;rsquo;t always be eliminated by better package design. Let&amp;rsquo;s assume you&amp;rsquo;ve got a reasonable design and you&amp;rsquo;re still facing some test dilemmas. Unless you find a way to make writing tests as pleasant as possible, you won&amp;rsquo;t write nearly enough of them.&lt;/p>
&lt;p>One technique I&amp;rsquo;ve found useful is what I&amp;rsquo;ll call a &lt;strong>self-cleaning test fixture&lt;/strong>.&lt;/p>
&lt;h3 id="usethis-and-create_local_package">usethis and &lt;code>create_local_package()&lt;/code>
&lt;a href="#usethis-and-create_local_package">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The usethis package (
&lt;a href="https://usethis.r-lib.org" target="_blank" rel="noopener">usethis.r-lib.org&lt;/a>) provides functions for looking after the files and folders in an R project, especially an R package. These function names should give you a vague sense of what usethis does: &lt;code>create_package()&lt;/code>, &lt;code>use_vignette()&lt;/code>, &lt;code>use_testthat()&lt;/code>, &lt;code>use_github()&lt;/code>. Many of these functions only make sense in the context of an R package. That means in order to test them, we have to be working inside an R package. And they can&amp;rsquo;t all target some persistent Frankenpackage.&lt;/p>
&lt;p>We need a way to quickly spin up a minimal package, in the session temp directory. Test some functions against it. Then destroy it. Without a lot of fuss. We need a &lt;strong>local package&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">create_local_package&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">file_temp&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">parent.frame&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">old_project&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">proj_get_&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># --- Record starting state --- &lt;/span>
&lt;span class="n">withr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">defer&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="c1"># --- Defer The Undoing --- &lt;/span>
&lt;span class="nf">proj_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">old_project&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">force&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">TRUE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># restore active usethis project (-C)&lt;/span>
&lt;span class="nf">setwd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">old_project&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># restore working directory (-B)&lt;/span>
&lt;span class="n">fs&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">dir_delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># delete the temporary package (-A)&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="n">envir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># --- Do The Doing --- &lt;/span>
&lt;span class="nf">create_package&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">open&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">FALSE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># create new folder and package (A)&lt;/span>
&lt;span class="nf">setwd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># change working directory (B)&lt;/span>
&lt;span class="nf">proj_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># switch to new usethis project (C)&lt;/span>
&lt;span class="nf">invisible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s a simplified version of the test helper&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup> we use in over 170 tests in usethis. Here&amp;rsquo;s an example of how &lt;code>create_local_package()&lt;/code> is used in a test:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">test_that&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;use_roxygen_md() adds DESCRIPTION fields&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">skip_if_not_installed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;roxygen2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">pkg&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">create_local_package&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;------------------------ HERE IT IS!!!!!&lt;/span>
&lt;span class="nf">use_roxygen_md&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nf">expect_identical&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">desc&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">desc_get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Roxygen&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pkg&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nf">c&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Roxygen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;list(markdown = TRUE)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nf">expect_true&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">desc&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">desc_has_fields&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;RoxygenNote&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pkg&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nf">expect_true&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">uses_roxygen_md&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This test checks that &lt;code>usethis::use_roxygen_md()&lt;/code> does the setup necessary to use roxygen2 in a package and, specifically, to write documentation with markdown syntax. All 3 expectations consult the DESCRIPTION file, directly or indirectly. So it&amp;rsquo;s very convenient that &lt;code>create_local_package()&lt;/code> creates a minimal package, with a valid DESCRIPTION file, for us to test against. And when the test is done &amp;ndash; poof! &amp;ndash; the package is gone.&lt;/p>
&lt;p>The setup and teardown done by &lt;code>create_local_package()&lt;/code> would be aggravating and repetitive to inline in each individual test. The tests would be dominated by this code, making them less readable. If we need to tweak something, we&amp;rsquo;d have to do it in hundreds of places. This sort of friction has a real chilling effect on one&amp;rsquo;s enthusiasm for writing and maintaining tests.&lt;/p>
&lt;p>A few more observations about the self-cleaning test fixture pattern:&lt;/p>
&lt;ul>
&lt;li>Every action has an equal and opposite reaction. Each individual &amp;ldquo;doing&amp;rdquo;
action (A) has a matching, deferred &amp;ldquo;undoing&amp;rdquo; reaction (-A).&lt;/li>
&lt;li>We work in this order (usually and preferably):
&lt;ul>
&lt;li>Record existing state.&lt;/li>
&lt;li>Describe the eventual cleanup.&lt;/li>
&lt;li>Make the desired state change.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The undoing usually unfolds in the opposite order from the doing (&amp;ldquo;last in,
first out&amp;rdquo;). This is almost always OK and it is often absolutely necessary.
In &lt;code>create_local_package()&lt;/code>:
&lt;ul>
&lt;li>Doing: We must create directory &lt;code>dir&lt;/code> (A) before we can make it the
working directory (B). (A) must come before (B).&lt;/li>
&lt;li>Undoing: We must restore the original working directory (-B) before
we can delete &lt;code>dir&lt;/code> (-A). (-B) must come before (-A). We can&amp;rsquo;t delete
&lt;code>dir&lt;/code> while it&amp;rsquo;s still the working directory!&lt;/li>
&lt;li>Think of it like a stack of plates: the last plate onto the stack has to
be the first one off.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Test fixture&lt;/strong> is a pre-existing term in the software engineering world (and beyond):&lt;/p>
&lt;blockquote>
&lt;p>A test fixture is something used to consistently test some item, device, or piece of software.&lt;/p>
&lt;/blockquote>
&lt;p>&amp;ndash;
&lt;a href="https://en.wikipedia.org/wiki/Test_fixture" target="_blank" rel="noopener">Wikipedia&lt;/a>&lt;/p>
&lt;p>When I first heard &amp;ldquo;test fixture&amp;rdquo; (from Gábor Csárdi, I think), a light bulb clicked on in my head. This was something I &lt;em>knew&lt;/em> I needed and had even implemented in various half-baked ways. But I hadn&amp;rsquo;t identified it as A Real Thing, with specific goals and design principles. It&amp;rsquo;s a great example of
&lt;a href="https://blogs.scientificamerican.com/observations/unknown-unknowns-the-problem-of-hypocognition/" target="_blank" rel="noopener">hypocognition&lt;/a>. Learning the term &amp;ldquo;test fixture&amp;rdquo; gave me a place to hang this knowledge and allowed me to more quickly identify situations where a test fixture was needed.&lt;/p>
&lt;h3 id="googlesheets4-and-local_ss">googlesheets4 and &lt;code>local_ss()&lt;/code>
&lt;a href="#googlesheets4-and-local_ss">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h3>&lt;p>The googlesheets4 package (
&lt;a href="https://googlesheets4.tidyverse.org" target="_blank" rel="noopener">googlesheets4.tidyverse.org&lt;/a>) provides an R interface to the Google Sheets API. A typical test needs access to a Google Sheet, constructed to have very specific properties and the test may even need to modify the Sheet&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>I need a way to quickly create a Sheet, possibly with very specific initial worksheets, cell data, locale, time zone, etc. Test some functions against it. Then trash it. I need a &lt;em>local spreadsheet&lt;/em>.&lt;/p>
&lt;p>Here&amp;rsquo;s a simplified version of the helper &lt;code>local_ss()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">local_ss&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">parent.frame&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">existing&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">gs4_find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">nrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">existing&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">stop_glue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;A spreadsheet named {sq(name)} already exists.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">withr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">defer&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="n">trash_me&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nf">gs4_find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">googledrive&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">drive_trash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">trash_me&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="n">envir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">gs4_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Even though the Sheets API is very file-ID-oriented, I go out of my way to work here via Sheet name. I bring this up to illustrate another point: you can also use a helper like this to rationalize your development workflow.&lt;/p>
&lt;p>At first, it feels like &lt;code>local_ss()&lt;/code> should create a new Sheet, store its ID, and then schedule it for deletion. But reality is more messy. As I develop a function and its tests, my experimentation can leave behind several instances of a test Sheet (yes, on Drive, you can have several files with the same name!). This leads to a very cluttered and confusing situation in the test account, requiring a periodic &amp;ldquo;search and destroy&amp;rdquo; mission for zombie test Sheets. Now my helper immediately alerts me to this problem and applies constant pressure to keep things neat and tidy.&lt;/p>
&lt;p>If you keep stubbing your toe in a particular way as you work on your package, zoom out and consider if you can design the problem away by adjusting your workflow. The helper that creates a self-cleaning test fixture is great place to apply this sort of leverage.&lt;/p>
&lt;h2 id="defer-on-the-global-environment">&lt;code>defer()&lt;/code> on the global environment
&lt;a href="#defer-on-the-global-environment">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I conclude with one more story about workflow. We&amp;rsquo;ve talked about two main functions for registering deferred events: base R&amp;rsquo;s &lt;code>on.exit()&lt;/code> and &lt;code>withr::defer()&lt;/code>. Part of what &lt;code>withr::defer()&lt;/code> offers over &lt;code>on.exit()&lt;/code> is the ability to defer events on &lt;em>any&lt;/em> environment. But there was still a big exception: the global environment.&lt;/p>
&lt;p>Until quite recently, here&amp;rsquo;s what happened if you called &lt;code>defer()&lt;/code> in an interactive R session&lt;sup id="fnref:5">&lt;a href="#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="n">withr&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nf">defer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hi&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Error in withr::defer(print(&amp;#34;hi&amp;#34;)):&lt;/span>
&lt;span class="c1">#&amp;gt; attempt to defer event on global environment&lt;/span>
&lt;span class="nf">packageVersion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;withr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#39;2.1.2&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Frankly, this makes a lot of sense. Deferred events are triggered when an environment goes out of scope. &lt;code>on.exit()&lt;/code> and &lt;code>defer()&lt;/code> are meant to be used in an ephemeral environment, like a function execution environment. Deferring events on the global environment is pretty weird.&lt;/p>
&lt;p>But what about your interactive development of functions and tests? Every time you hit a call to &lt;code>defer()&lt;/code> or &lt;code>local_*()&lt;/code>, that code fails to execute. You&amp;rsquo;re forced to develop your logic at arm&amp;rsquo;s length or implement the intent of the &lt;code>local_*()&lt;/code> calls manually. If you&amp;rsquo;re doing quite a bit of work via &lt;code>local_*()&lt;/code> or &lt;code>on.exit()&lt;/code>, this presents a problem. Basically, it&amp;rsquo;s harder to develop with functions that work one way inside a function, but another way in the global environment (or, worse, don&amp;rsquo;t work at all). &lt;code>substitute()&lt;/code> is another example of this.&lt;/p>
&lt;p>As of withr v2.2.0, you can &lt;code>defer()&lt;/code> events on the global environment, which means that &lt;code>local_*()&lt;/code> functions work too. This is still a pretty weird thing to do, which is why you get a message about how to trigger execution.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-r" data-lang="r">&lt;span class="nf">library&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">withr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">packageVersion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;withr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#39;2.2.0&amp;#39;&lt;/span>
&lt;span class="nf">defer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hi&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">#&amp;gt; Setting deferred event(s) on global environment.&lt;/span>
&lt;span class="c1">#&amp;gt; * Execute (and clear) with `deferred_run()`.&lt;/span>
&lt;span class="c1">#&amp;gt; * Clear (without executing) with `deferred_clear()`.&lt;/span>
&lt;span class="nf">deferred_run&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">#&amp;gt; [1] &amp;#34;hi&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since the global environment isn&amp;rsquo;t perishable, like a test environment is, you have to call &lt;code>deferred_run()&lt;/code> explicitly to execute the deferred events. You can also clear them, without running, with &lt;code>deferred_clear()&lt;/code>.&lt;/p>
&lt;p>This new capability is especially handy with self-cleaning test fixtures, like &lt;code>create_local_package()&lt;/code> and &lt;code>local_ss()&lt;/code> shown above. Sometimes you have to change global state while developing tests, e.g. change working directory or create test Sheets. But now there&amp;rsquo;s a way to run the associated cleanup on demand.&lt;/p>
&lt;h2 id="recap">Recap
&lt;a href="#recap">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>We&amp;rsquo;ve demonstrated that it&amp;rsquo;s a problem to change state in a function or test. Obviously there are exceptions if, for example, that is the whole point of the function.&lt;/p>
&lt;p>The most common and recommended solution to this is to use &lt;code>on.exit()&lt;/code> to organize the necessary cleanup, i.e. restore the original state. However, &lt;code>on.exit()&lt;/code> has some inherent limitations.&lt;/p>
&lt;p>If this sort of setup/teardown happens frequently in the functions and tests in a package, it makes sense to write a custom helper. This function should follow the conventions of the &lt;code>local_*()&lt;/code> functions in withr and will presumably be built around &lt;code>withr::defer()&lt;/code>.&lt;/p>
&lt;p>There is some cost to using a custom &lt;code>local_*()&lt;/code> helper, as it is one more thing to maintain and that all contributors must understand. Consider whether the pros outweigh the cons when adding another layer of abstraction.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>It&amp;rsquo;s too bad &lt;code>add = TRUE&lt;/code> isn&amp;rsquo;t the default, because you almost always want this. Without it, each call to &lt;code>on.exit()&lt;/code> clobbers the effect of previous calls. &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>Note: the &lt;code>after&lt;/code> argument of &lt;code>on.exit()&lt;/code> first appeared in R 3.5.0. &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;code>create_local_package()&lt;/code> is a test helper. The testthat package allows such things to be defined in &lt;code>tests/testthat/helper.R&lt;/code> and then makes them available within package tests. They are also loaded by &lt;code>devtools::load_all()&lt;/code>. &lt;code>tests/testthat/helper.R&lt;/code> is also a great place to define custom expectations. &lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>You might ask about mocking here, but I usually don&amp;rsquo;t embrace that heavily and, in any case, that is a topic for another day. &lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>For all practical purposes, you get the same result with &lt;code>on.exit()&lt;/code>. It&amp;rsquo;s just a silent no-op. &lt;a href="#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Announcing tidymodels.org</title><link>https://www.tidyverse.org/blog/2020/04/tidymodels-org/</link><pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2020/04/tidymodels-org/</guid><description>&lt;p>We&amp;rsquo;re thrilled to announce the launch of
&lt;a href="https://www.tidymodels.org" target="_blank" rel="noopener">&lt;code>tidymodels.org&lt;/code>&lt;/a>! The site is a central location for learning and using the tidymodels packages. It has a new take on a familiar look:&lt;/p>
&lt;img src="tidymodels-front-page.png" alt="tidymodels.org landing page screenshot">
&lt;p>This site has a different organization than its tidyverse sibling.&lt;/p>
&lt;p>The
&lt;a href="https://www.tidymodels.org/start/" target="_blank" rel="noopener">&lt;strong>Get Started&lt;/strong>&lt;/a> page has a series of five articles that are aimed at readers who have little to no experience with the tidymodels packages. Each article focuses on a specific task (e.g. building a model), and the last article walks through a case study that brings all of the other elements together.&lt;/p>
&lt;p>We have consolidated many of the vignettes and articles that showcase code examples on the
&lt;a href="https://www.tidymodels.org/learn/" target="_blank" rel="noopener">&lt;strong>Learn&lt;/strong>&lt;/a> page. Previously, these were scattered across package documentation websites. We received feedback that keeping these articles in the individual sites made it too difficult to find the right material, especially when an article used multiple packages. Articles describing specific technical details of an individual package will remain in that specific pkgdown site.&lt;/p>
&lt;p>The content on the
&lt;a href="https://www.tidymodels.org/learn/" target="_blank" rel="noopener">&lt;strong>Learn&lt;/strong>&lt;/a> page is organized into groups:&lt;/p>
&lt;ul>
&lt;li>Perform statistical analysis&lt;/li>
&lt;li>Create robust models&lt;/li>
&lt;li>Tune, compare, and work with your models&lt;/li>
&lt;li>Develop custom modeling tools&lt;/li>
&lt;/ul>
&lt;p>We&amp;rsquo;ll continue to add new articles to the &lt;strong>Learn&lt;/strong> section as we develop new functions in tidymodels, or for specific topics that need more documentation (based on GitHub issues, as well as posts to Stack Overflow or RStudio Community).&lt;/p>
&lt;p>The
&lt;a href="https://www.tidymodels.org/help/" target="_blank" rel="noopener">&lt;strong>Help&lt;/strong>&lt;/a> section is an excellent place to consult when you are stuck on a problem or when you want to know more. There are additional links to books using the tidymodels packages as well as tools to search across
&lt;a href="https://www.tidymodels.org/find/" target="_blank" rel="noopener">all tidymodels functions&lt;/a>,
&lt;a href="https://www.tidymodels.org/find/parsnip/" target="_blank" rel="noopener">&lt;code>parsnip&lt;/code> model functions&lt;/a>, and
&lt;a href="https://www.tidymodels.org/find/recipes/" target="_blank" rel="noopener">&lt;code>recipe&lt;/code> steps&lt;/a>.&lt;/p>
&lt;p>Blog posts related to tidymodels will still be posted here at the
&lt;a href="https://www.tidyverse.org/blog/" target="_blank" rel="noopener">tidyverse blog&lt;/a>. Both &lt;code>tidyverse.org&lt;/code> and &lt;code>tidymodels.org&lt;/code> are Hugo websites built using R with the
&lt;a href="https://bookdown.org/yihui/blogdown/" target="_blank" rel="noopener">blogdown&lt;/a> package. We learned a lot while launching this new website and plan to share about this process in detail soon.&lt;/p>
&lt;p>The launch of
&lt;a href="https://www.tidymodels.org" target="_blank" rel="noopener">&lt;code>tidymodels.org&lt;/code>&lt;/a> would not have been possible without Alison Hill, whose incredible expertise and tenacity made it happen. Additionally, Alison and Julia Silge did an amazing job making the existing content more readable and better organized.
&lt;a href="https://desiree.rbind.io/" target="_blank" rel="noopener">Desirée De Leon&lt;/a> worked her magic to make the site look even better. We also used Allison Horst&amp;rsquo;s
&lt;a href="https://github.com/allisonhorst/stats-illustrations" target="_blank" rel="noopener">superb illustrations&lt;/a> just to show off. The tidyverse group, Joshua Spiewak, Greg Swinehart, and Sarah Lin (RStudio&amp;rsquo;s Information Architect &amp;amp; Digital Librarian) also contributed valued support and help.&lt;/p>
&lt;p>&lt;img src="parsnip-flagger.png" alt="">&lt;/p></description></item><item><title>RStudio community</title><link>https://www.tidyverse.org/blog/2017/09/rstudio-community/</link><pubDate>Thu, 14 Sep 2017 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2017/09/rstudio-community/</guid><description>&lt;p>We&amp;rsquo;re very excited to announce the new
&lt;a href="http://community.rstudio.com" target="_blank" rel="noopener">community.rstudio.com&lt;/a> &amp;mdash; this is a great place to ask any questions you might have about the tidyverse. Read more on the
&lt;a href="https://blog.rstudio.com/2017/09/14/rstudio-community/" target="_blank" rel="noopener">RStudio blog&lt;/a>.&lt;/p></description></item><item><title>The summer of ggplot2 - wooooo!</title><link>https://www.tidyverse.org/blog/2017/09/ggplot2-internship/</link><pubDate>Fri, 08 Sep 2017 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2017/09/ggplot2-internship/</guid><description>
&lt;p>This summer I had the great fortune to accept the &lt;a href="https://twitter.com/dataandme/status/880952970602532864">ggplot2 internship baton&lt;/a> from &lt;a href="http://www.data-imaginist.com/2016/Becoming-the-intern/">Thomas Lin Pedersen&lt;/a> and spend ten weeks developing new features and fixing bugs in ggplot2. My internship was a great experience, and I learned a ton from working with Hadley and digging into the ggplot2 codebase.&lt;/p>
&lt;div id="daily-life-as-a-ggplot2-intern" class="section level2">
&lt;h2>Daily life as a ggplot2 intern&lt;/h2>
&lt;p>My ggplot2 work consisted of a few different things: issue and pull request triage, bug fixes, and developing new features. The tidyverse gets a lot of new issues opened on GitHub, so to help keep things organized I tagged each ggplot2 issue with labels describing the type of issue and which part of ggplot2 it related to (scales, themes, layers, etc.). In some cases I helped the authors create reprexes so that we could diagnose the problems and determine when they were fixed. I triaged new pull requests as well, merging anything that was very straightforward, helping authors conform to the tidyverse style guide, and requesting reviews from Hadley for bigger changes.&lt;/p>
&lt;p>Fixing bugs was fun detective work and helped me build an understanding of how ggplot2 works internally. Along the way I got pretty good at using R’s debugging tools and have come to really appreciate the value of following a consistent &lt;a href="http://style.tidyverse.org/">coding style&lt;/a>. It is vastly easier to understand what a piece of code is doing when it is written in a readable and consistent way. Enforcing a style guide is time very well spent.&lt;/p>
&lt;p>I implemented some significant new features during this summer as well. The first was an overhaul of certain scale types in ggplot2. Scales are what control how data gets mapped to visual elements on a plot, and they vary based on the type of data (for instance, you can’t map a continuous variable to discrete shapes). As part of this project I improved support for datetime scales and ordered factors. I also added built-in support for &lt;a href="https://bids.github.io/colormap/">viridis color palettes&lt;/a>, a move that has garnered me some significant Twitter popularity. 😎&lt;/p>
&lt;p>I created a new position function, &lt;code>position_dodge2()&lt;/code>, for placing box plots, bars, and rectangles. This project started out as a fix for a bug where boxes of differing widths could not be dodged from one another using the existing &lt;code>position_dodge()&lt;/code> function, but it quickly grew into a larger project that fixed not only the &lt;a href="https://github.com/tidyverse/ggplot2/issues/2143">original issue&lt;/a>, but &lt;a href="https://github.com/tidyverse/ggplot2/issues/2153">three&lt;/a> &lt;a href="https://github.com/tidyverse/ggplot2/issues/2076">other&lt;/a> &lt;a href="https://github.com/tidyverse/ggplot2/issues/2106">issues&lt;/a> as well.&lt;/p>
&lt;div class="figure">
&lt;img src="https://media.giphy.com/media/8VrtCswiLDNnO/giphy.gif" />
&lt;/div>
&lt;p>The last big effort was a mostly behind-the-scenes refactor of the way text gets placed on plots. This was a fun and challenging project that required me to get familiar with the grid graphics system for the first time. ggplot2 users should notice only very minor changes as a result of this project—primarily to the way facet strip labels get customized—but internally we’ve really cleaned up the code, reduced duplication, and documented a number of internal functions to make them easier to work with in the future.&lt;/p>
&lt;/div>
&lt;div id="some-reflections" class="section level2">
&lt;h2>Some reflections&lt;/h2>
&lt;p>I’m not usually prone to a lot of impostor syndrome, but before I started my work on ggplot2 I worried about whether I was going to be up to the task of contributing to a complex and unfamiliar package. Before this summer I had used ggplot2 extensively, but didn’t know all that much about how it works under the hood. I’d never submitted a package to CRAN, and I’d never worked on any piece of software that had more than a couple users, let alone the popularity of ggplot2. I’ve learned a lot in the last ten weeks, and with Hadley’s mentorship it’s been a great experience.&lt;/p>
&lt;p>Working remotely adds its own challenges, and I think that a key to being successful in this kind of position is a willingness to dive into a codebase, tinker around, try lots of things (and break lots of things in the process) until you figure out how the pieces fit together. Being able to work independently helped me a lot, but I never lacked guidance from Hadley; our regular calls and chats on Slack kept me on track and got me out of a lot of pickles.&lt;/p>
&lt;p>I am very grateful to Hadley for this opportunity, and sad that my summer of ggplot2 has come to an end. It has been really rewarding to contribute back to a package that I’ve used so much, and though I’ll no longer be the intern I hope to keep contributing to ggplot2 in the future.&lt;/p>
&lt;/div></description></item><item><title>👩‍💻🚙👯: My googledrive internship</title><link>https://www.tidyverse.org/blog/2017/09/lucy-internship/</link><pubDate>Fri, 08 Sep 2017 00:00:00 +0000</pubDate><guid>https://www.tidyverse.org/blog/2017/09/lucy-internship/</guid><description>&lt;p>&lt;em>Over the past several months I have been working with Jenny Bryan on the googledrive package. I wanted to share a bit about the process and some things I learned along the way. While brainstorming this post, I went back through my GitHub commits to remind myself of the journey - it turns out they do a rather good job of showing the scope of this!&lt;/em>&lt;/p>
&lt;h2 id="_day-to-day_-br-img-src--imageslucy-internship01_firstpng-width--400-img">&lt;em>Day to day&lt;/em> &lt;br> &lt;img src = "/images/lucy-internship/01_first.png" width = "400"> &lt;/img>
&lt;a href="#_day-to-day_-br-img-src--imageslucy-internship01_firstpng-width--400-img">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>The googledrive 📦 looked measurably different on this
&lt;a href="https://github.com/tidyverse/googledrive/tree/ef8a410f8e74080670ff3145a330cdaa100472a8" target="_blank" rel="noopener">first day&lt;/a>. I think this gives some really good insight into the iterative process of package design as well as how much I absorbed from Jenny along the way. In these early days, I was beavering away, building some small wrappers for Drive endpoints, spending most of my time getting to know the
&lt;a href="https://developers.google.com/drive/v3/web/about-sdk" target="_blank" rel="noopener">Drive documentation&lt;/a> and celebrating small victories.&lt;/p>
&lt;div style="text-align: center;">
&lt;div style="display: inline-block; text-align: left">
&lt;img src = "/images/lucy-internship/02_upload.png" width = "300"> &lt;/img>&lt;br>_Small victory 1: The ability to upload files to Drive_.
&lt;p>&lt;img src = "/images/lucy-internship/03_delete.png" width = "300"> &lt;/img>&lt;br> &lt;em>Small victory 2: The ability to delete files on Drive&lt;/em>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/br>
&lt;p>My day to day back in April seems so foreign to the workflow Jenny and I have now established, but those first few weeks were incredibly useful for getting me steeped in all things Google Drive. Our process eventually converged to:&lt;/p>
&lt;p>👩🏻‍💻👩🏼‍💻 Video chatting once a week to set priorities / discuss design decisions.&lt;br>
✍️🙊 Documenting all problems as GitHub issues to resolve.&lt;br>
👷‍♀️👀 Submitting all changes via PRs for review.&lt;/p>
&lt;p>The PR review process was quite new to me, but SO integral to the success of this package. Here is an
&lt;a href="https://github.com/tidyverse/googledrive/pull/13" target="_blank" rel="noopener">example&lt;/a> of what this can look like. Our first PR with review consisted of 49 commits and 66 comments 😱. The GitHub review process allowed Jenny to comment line by line on my code, gently pushing me towards better coding conventions and style. This process really helped me to absorb all things &amp;ldquo;tidyverse&amp;rdquo; in a systematic way.&lt;/p>
&lt;h2 id="_absorbing-all-things-tidyverse_-br-img-src--imageslucy-internship03_markdown-docspng-width--400img">&lt;em>Absorbing all things &amp;ldquo;tidyverse&amp;rdquo;&lt;/em> &lt;br> &lt;img src = "/images/lucy-internship/03_markdown-docs.png" width = "400">&lt;/img>
&lt;a href="#_absorbing-all-things-tidyverse_-br-img-src--imageslucy-internship03_markdown-docspng-width--400img">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;center>
&lt;blockquote class="twitter-tweet" data-lang="en">&lt;p lang="en" dir="ltr">🌞 musing: learning a new coding style is like putting on freshly washed jeans; a struggle, but once I get it I&amp;#39;m like that looks GOOD 💃 &lt;a href="https://t.co/5QcEwEcI23">pic.twitter.com/5QcEwEcI23&lt;/a>&lt;/p>&amp;mdash; Lucy 🌻 (@LucyStats) &lt;a href="https://twitter.com/LucyStats/status/873587893754843136">June 10, 2017&lt;/a>&lt;/blockquote> &lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;/center>
&lt;p>The tidyverse has an
&lt;a href="http://style.tidyverse.org" target="_blank" rel="noopener">R Style Guide&lt;/a>. My first pass at incorporating the style was switching my roxygen documentation to
&lt;a href="https://github.com/klutometis/roxygen/blob/master/vignettes/markdown.Rmd" target="_blank" rel="noopener">markdown&lt;/a> (this can be enabled by adding &lt;code>Roxygen: list(markdown = TRUE)&lt;/code> to the &lt;code>DESCRIPTION&lt;/code> file, or if you already have documentation and you&amp;rsquo;d like to convert it to markdown automagically ✨, check out the
&lt;a href="https://github.com/r-lib/roxygen2md" target="_blank" rel="noopener">roxygen2md&lt;/a> 📦). This is an example of something I didn&amp;rsquo;t even know existed prior to this project. Other pieces I absorbed include:&lt;/p>
&lt;div style="text-align: center;">
&lt;div style="display: inline-block; text-align: left">
&lt;img src = "/images/lucy-internship/04_travis.png" width = "300"> &lt;/img>&lt;br> _Absorption example 1: Recommendations for continuous integration._
&lt;p>&lt;img src = "/images/lucy-internship/05_test.png" width = "300"> &lt;/img>&lt;br> &lt;em>Absorption example 2: Learning sensible ways to test.&lt;/em>&lt;/p>
&lt;p>&lt;img src = "/images/lucy-internship/06_clean-up.png" width = "300"> &lt;/img>&lt;br>
&lt;em>Absorption example 3: Cleaning up my code.&lt;/em>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/br>
&lt;p>I made GREAT use of
&lt;a href="https://github.com/jimhester/lintr" target="_blank" rel="noopener">lintr&lt;/a> 🛀 until the coding conventions became second nature to me. Even still, I cannot overstate the immense utility of coding alongside Jenny. I found myself slowly adapting her excellent coding principles and style simply from seeing her suggestions and reviewing her commits. She gently nudged me towards much prettier &amp;amp; more useful code!&lt;/p>
&lt;h2 id="_flexing-my-programming-muscles_-br-img-src--imageslucy-internship08_s3-methodspng-width--400img">&lt;em>Flexing my programming muscles&lt;/em> &lt;br> &lt;img src = "/images/lucy-internship/08_s3-methods.png" width = "400">&lt;/img>
&lt;a href="#_flexing-my-programming-muscles_-br-img-src--imageslucy-internship08_s3-methodspng-width--400img">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>Finally, this experience allowed me to dive into 🏊 things I otherwise may not have been exposed to. Some things that were new to me include:&lt;/p>
&lt;p>🙃 Writing S3 methods.&lt;br>
🙆🏻 Writing tests for an API-calling package.&lt;br>
💅 Working with / writing in an established coding style.&lt;/p>
&lt;p>I am so grateful for the opportunity to learn these concepts in such a welcoming environment, and am certainly committed to passing any knowledge I have gained from this experience to anyone and everyone!&lt;/p>
&lt;h2 id="_an-ode-to-jenny-bryan_">&lt;em>An ode to Jenny Bryan&lt;/em>
&lt;a href="#_an-ode-to-jenny-bryan_">
&lt;svg class="anchor-symbol" aria-hidden="true" height="26" width="26" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0 0h24v24H0z" fill="currentColor">&lt;/path>
&lt;path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z">&lt;/path>
&lt;/svg>
&lt;/a>
&lt;/h2>&lt;p>I&amp;rsquo;d like to wrap up by expressing my immense gratitude to Jenny 👯. This experience was SO excellent due to her rockstar coding abilities, impeccable teaching skills, and of course her unwavering patience. And so I&amp;rsquo;d like to end with a haiku:&lt;/p>
&lt;p>Thank you, tidyverse.&lt;br>
You&amp;rsquo;ve given me a leg up!&lt;br>
Checkout googledrive!&lt;/p></description></item></channel></rss>